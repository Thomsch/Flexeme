digraph  {
m0_38 [cluster="System.Type.GetVerbSpecification()", file="EnumerableExtensions.cs", label="Entry System.Type.GetVerbSpecification()", span="27-27"];
m0_46 [cluster="System.Text.StringBuilder.Append(char)", file="EnumerableExtensions.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m0_124 [cluster="Unk.doubQt", file="EnumerableExtensions.cs", label="Entry Unk.doubQt", span=""];
m0_149 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="EnumerableExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="38-38"];
m0_4 [cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="EnumerableExtensions.cs", label="Entry CommandLine.UnParserSettings.WithUseEqualTokenOnly()", span="61-61"];
m0_6 [cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="EnumerableExtensions.cs", label="Exit CommandLine.UnParserSettings.WithUseEqualTokenOnly()", span="61-61"];
m0_126 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="EnumerableExtensions.cs", label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="194-194"];
m0_128 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="EnumerableExtensions.cs", label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="194-194"];
m0_88 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="EnumerableExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="162-162"];
m0_101 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="EnumerableExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="162-162"];
m0_35 [cluster="System.Action<T>.Invoke(T)", file="EnumerableExtensions.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m0_105 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="EnumerableExtensions.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m0_45 [cluster="Unk.Any", file="EnumerableExtensions.cs", label="Entry Unk.Any", span=""];
m0_41 [cluster="object.IsEmpty()", file="EnumerableExtensions.cs", label="Entry object.IsEmpty()", span="233-233"];
m0_107 [cluster="System.Func<T, TResult>.Invoke(T)", file="EnumerableExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m0_137 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="EnumerableExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="208-208"];
m0_140 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="EnumerableExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="208-208"];
m0_151 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="EnumerableExtensions.cs", label="Entry CommandLine.UnParserExtensions.IsEmpty(object)", span="233-233"];
m0_163 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="EnumerableExtensions.cs", label="Exit CommandLine.UnParserExtensions.IsEmpty(object)", span="233-233"];
m0_43 [cluster="Unk.Where", file="EnumerableExtensions.cs", label="Entry Unk.Where", span=""];
m0_142 [cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="EnumerableExtensions.cs", label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="34-34"];
m0_52 [cluster="Unk.TrimEndIfMatchWhen", file="EnumerableExtensions.cs", label="Entry Unk.TrimEndIfMatchWhen", span=""];
m0_120 [cluster="string.Replace(string, string)", file="EnumerableExtensions.cs", label="Entry string.Replace(string, string)", span="0-0"];
m0_40 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="EnumerableExtensions.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m0_72 [cluster="Unk.Contains", file="EnumerableExtensions.cs", label="Entry Unk.Contains", span=""];
m0_115 [cluster="T.ToMaybe<T>()", file="EnumerableExtensions.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m0_119 [cluster="string.Contains(string)", file="EnumerableExtensions.cs", label="Entry string.Contains(string)", span="0-0"];
m0_36 [cluster="object.GetType()", file="EnumerableExtensions.cs", label="Entry object.GetType()", span="0-0"];
m0_129 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Entry lambda expression", span="197-197"];
m0_11 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Entry lambda expression", span="83-83"];
m0_12 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Exit lambda expression", span="83-83"];
m0_56 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Entry lambda expression", span="107-107"];
m0_60 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Entry lambda expression", span="112-113"];
m0_66 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Entry lambda expression", span="118-118"];
m0_69 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Entry lambda expression", span="132-132"];
m0_73 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Entry lambda expression", span="135-135"];
m0_76 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Entry lambda expression", span="142-142"];
m0_79 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Entry lambda expression", span="147-151"];
m0_84 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Entry lambda expression", span="156-156"];
m0_58 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Exit lambda expression", span="107-107"];
m0_62 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Exit lambda expression", span="112-113"];
m0_68 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Exit lambda expression", span="118-118"];
m0_71 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Exit lambda expression", span="132-132"];
m0_75 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Exit lambda expression", span="135-135"];
m0_78 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Exit lambda expression", span="142-142"];
m0_81 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Exit lambda expression", span="147-151"];
m0_86 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Exit lambda expression", span="156-156"];
m0_109 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Entry lambda expression", span="172-173"];
m0_111 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Exit lambda expression", span="172-173"];
m0_121 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Entry lambda expression", span="190-191"];
m0_116 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Entry lambda expression", span="185-186"];
m0_118 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Exit lambda expression", span="185-186"];
m0_123 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Exit lambda expression", span="190-191"];
m0_131 [cluster="lambda expression", file="EnumerableExtensions.cs", label="Exit lambda expression", span="197-197"];
m0_136 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="EnumerableExtensions.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m0_55 [cluster="string.TrimEnd(params char[])", file="EnumerableExtensions.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m0_108 [cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="EnumerableExtensions.cs", label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="85-85"];
m0_148 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="EnumerableExtensions.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35"];
m0_51 [cluster="System.Text.StringBuilder.TrailingSpaces()", file="EnumerableExtensions.cs", label="Entry System.Text.StringBuilder.TrailingSpaces()", span="101-101"];
m0_59 [cluster="Unk.Append", file="EnumerableExtensions.cs", label="Entry Unk.Append", span=""];
m0_47 [cluster="Unk.Select", file="EnumerableExtensions.cs", label="Entry Unk.Select", span=""];
m0_164 [cluster="System.Type.GetDefaultValue()", file="EnumerableExtensions.cs", label="Entry System.Type.GetDefaultValue()", span="130-130"];
m0_87 [cluster="Unk.FormatValue", file="EnumerableExtensions.cs", label="Entry Unk.FormatValue", span=""];
m0_42 [cluster="Unk.Memorize", file="EnumerableExtensions.cs", label="Entry Unk.Memorize", span=""];
m0_83 [cluster="Unk.FormatOption", file="EnumerableExtensions.cs", label="Entry Unk.FormatOption", span=""];
m0_44 [cluster="Unk.UniqueName", file="EnumerableExtensions.cs", label="Entry Unk.UniqueName", span=""];
m0_150 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="EnumerableExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="30-30"];
m0_125 [cluster="string.JoinTo(params string[])", file="EnumerableExtensions.cs", label="Entry string.JoinTo(params string[])", span="55-55"];
m0_65 [cluster="object.NormalizeValue()", file="EnumerableExtensions.cs", label="Entry object.NormalizeValue()", span="222-222"];
m0_54 [cluster="System.Text.StringBuilder.ToString()", file="EnumerableExtensions.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m0_104 [cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="EnumerableExtensions.cs", label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="194-194"];
m0_50 [cluster="System.Text.StringBuilder.Append(string)", file="EnumerableExtensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m0_135 [cluster="CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", file="EnumerableExtensions.cs", label="Entry CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", span="208-208"];
m0_102 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="EnumerableExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="183-183"];
m0_114 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="EnumerableExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="183-183"];
m0_0 [cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="EnumerableExtensions.cs", label="Entry CommandLine.UnParserSettings.WithGroupSwitchesOnly()", span="52-52"];
m0_2 [cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="EnumerableExtensions.cs", label="Exit CommandLine.UnParserSettings.WithGroupSwitchesOnly()", span="52-52"];
m0_53 [cluster="Unk.ForEach", file="EnumerableExtensions.cs", label="Entry Unk.ForEach", span=""];
m0_103 [cluster="System.Text.StringBuilder.Append(object)", file="EnumerableExtensions.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m0_49 [cluster="Unk.Join", file="EnumerableExtensions.cs", label="Entry Unk.Join", span=""];
m0_10 [cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="EnumerableExtensions.cs", label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="95-95"];
m0_141 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="EnumerableExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m0_37 [cluster="System.Text.StringBuilder.StringBuilder()", file="EnumerableExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m0_3 [cluster="CommandLine.UnParserSettings.UnParserSettings()", file="EnumerableExtensions.cs", label="Entry CommandLine.UnParserSettings.UnParserSettings()", span="15-15"];
m0_165 [cluster="object.Equals(object)", file="EnumerableExtensions.cs", label="Entry object.Equals(object)", span="0-0"];
m0_106 [cluster="System.Collections.IEnumerator.MoveNext()", file="EnumerableExtensions.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m0_82 [cluster="System.Text.StringBuilder.TrimEndIfMatchWhen(bool, char)", file="EnumerableExtensions.cs", label="Entry System.Text.StringBuilder.TrimEndIfMatchWhen(bool, char)", span="94-94"];
m0_13 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="EnumerableExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="95-95"];
m0_33 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="EnumerableExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="95-95"];
m0_39 [cluster="Unk.MapMaybe", file="EnumerableExtensions.cs", label="Entry Unk.MapMaybe", span=""];
m0_48 [cluster="Unk.ToArray", file="EnumerableExtensions.cs", label="Entry Unk.ToArray", span=""];
m0_132 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="EnumerableExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="200-200"];
m0_134 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="EnumerableExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="200-200"];
m0_63 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="EnumerableExtensions.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="103-103"];
m0_34 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="EnumerableExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m0_7 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="EnumerableExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="81-81"];
m0_9 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="EnumerableExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="81-81"];
m0_64 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="EnumerableExtensions.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m0_143 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="EnumerableExtensions.cs", label="Entry CommandLine.UnParserExtensions.NormalizeValue(object)", span="222-222"];
m0_147 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="EnumerableExtensions.cs", label="Exit CommandLine.UnParserExtensions.NormalizeValue(object)", span="222-222"];
m0_166 [file="EnumerableExtensions.cs", label=builder, span=""];
m0_167 [file="EnumerableExtensions.cs", label=T, span=""];
m0_168 [file="EnumerableExtensions.cs", label=shortSwitches, span=""];
m0_169 [file="EnumerableExtensions.cs", label=settings, span=""];
m0_170 [file="EnumerableExtensions.cs", label=sep, span=""];
m0_171 [file="EnumerableExtensions.cs", label=doubQt, span=""];
m1_30 [cluster="Unk.WithValue", file="ErrorHandling.cs", label="Entry Unk.WithValue", span=""];
m1_4 [cluster="Unk.Select", file="ErrorHandling.cs", label="Entry Unk.Select", span=""];
m1_18 [cluster="string.MatchName(string, string, System.StringComparer)", file="ErrorHandling.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m1_24 [cluster="CommandLine.Core.OptionSpecification.FromOptionSpecification()", file="ErrorHandling.cs", label="Entry CommandLine.Core.OptionSpecification.FromOptionSpecification()", span="15-15"];
m1_23 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="ErrorHandling.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="349-349"];
m1_11 [cluster="Unk.ToMaybe", file="ErrorHandling.cs", label="Entry Unk.ToMaybe", span=""];
m1_10 [cluster="Unk.FirstOrDefault", file="ErrorHandling.cs", label="Entry Unk.FirstOrDefault", span=""];
m1_25 [cluster="CSharpx.Maybe.Just<T>(T)", file="ErrorHandling.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m1_13 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="ErrorHandling.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m1_29 [cluster="Unk.Just", file="ErrorHandling.cs", label="Entry Unk.Just", span=""];
m1_26 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="28-31"];
m1_7 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="21-35"];
m1_31 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="38-38"];
m1_34 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="39-39"];
m1_37 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="39-39"];
m1_9 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="21-35"];
m1_15 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="23-24"];
m1_19 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="26-34"];
m1_17 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="23-24"];
m1_21 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="26-34"];
m1_28 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="28-31"];
m1_33 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="38-38"];
m1_36 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="39-39"];
m1_39 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="39-39"];
m1_22 [cluster="Unk.converter", file="ErrorHandling.cs", label="Entry Unk.converter", span=""];
m1_5 [cluster="Unk.>", file="ErrorHandling.cs", label="Entry Unk.>", span=""];
m1_12 [cluster="CSharpx.Maybe.Nothing<T>()", file="ErrorHandling.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m1_6 [cluster="Unk.Succeed", file="ErrorHandling.cs", label="Entry Unk.Succeed", span=""];
m1_14 [cluster="Unk.MapMaybeOrDefault", file="ErrorHandling.cs", label="Entry Unk.MapMaybeOrDefault", span=""];
m1_0 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="ErrorHandling.cs", label="Entry CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", span="14-14"];
m1_3 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="ErrorHandling.cs", label="Exit CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", span="14-14"];
m1_40 [file="ErrorHandling.cs", label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>", span=""];
m1_41 [file="ErrorHandling.cs", label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>", span=""];
m1_42 [file="ErrorHandling.cs", label="System.StringComparer", span=""];
m1_43 [file="ErrorHandling.cs", label="CommandLine.Core.SpecificationProperty", span=""];
m2_4 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="Maybe.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m2_0 [cluster="CommandLine.Core.ArgumentsExtensions.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="Maybe.cs", label="Entry CommandLine.Core.ArgumentsExtensions.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11"];
m2_2 [cluster="CommandLine.Core.ArgumentsExtensions.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="Maybe.cs", label="Exit CommandLine.Core.ArgumentsExtensions.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11"];
m2_5 [cluster="Unk.MapMaybe", file="Maybe.cs", label="Entry Unk.MapMaybe", span=""];
m2_6 [cluster="lambda expression", file="Maybe.cs", label="Entry lambda expression", span="18-24"];
m2_9 [cluster="lambda expression", file="Maybe.cs", label="Exit lambda expression", span="18-24"];
m2_10 [cluster="Unk.func", file="Maybe.cs", label="Entry Unk.func", span=""];
m2_13 [cluster="System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="Maybe.cs", label="Entry System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11"];
m2_11 [cluster="Unk.Any", file="Maybe.cs", label="Entry Unk.Any", span=""];
m2_3 [cluster="System.Collections.Generic.IEnumerable<T>.TryHead<T>()", file="Maybe.cs", label="Entry System.Collections.Generic.IEnumerable<T>.TryHead<T>()", span="318-318"];
m2_12 [cluster="System.Collections.Generic.IEnumerable<T>.TailNoFail<T>()", file="Maybe.cs", label="Entry System.Collections.Generic.IEnumerable<T>.TailNoFail<T>()", span="361-361"];
m2_14 [file="Maybe.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m2_15 [file="Maybe.cs", label="System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>", span=""];
m3_86 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="UnParserExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m3_17 [cluster="System.Type.GetVerbSpecification()", file="UnParserExtensions.cs", label="Entry System.Type.GetVerbSpecification()", span="27-27"];
m3_31 [cluster="System.Text.StringBuilder.Append(char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m3_18 [cluster="CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="UnParserExtensions.cs", label="Entry CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="126-126"];
m3_88 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="90-90"];
m3_89 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="return (spec as OptionSpecification).ToMaybe()\r\n                .Return(o => o.Separator != '\0' ? o.Separator : ' ', ' ');", span="92-93"];
m3_90 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="90-90"];
m3_51 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="58-58"];
m3_52 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var builder = new StringBuilder()", span="60-60"];
m3_53 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="spec.TargetType", span="61-61"];
m3_55 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.Append(FormatWithQuotesIfString(value))", span="64-64"];
m3_57 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var sep = spec.SeperatorOrSpace()", span="67-67"];
m3_59 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var e = ((IEnumerable)value).GetEnumerator()", span="70-70"];
m3_61 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.Append(fmtWithQuotesIfStr(e.Current)).Append(sep)", span="72-72"];
m3_62 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.TrimEndIfMatch(' ')", span="73-73"];
m3_63 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="return builder.ToString();", span="76-76"];
m3_54 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="TargetType.Scalar", span="63-63"];
m3_56 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="TargetType.Sequence", span="66-66"];
m3_58 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Func<object, object> fmtWithQuotesIfStr = v\r\n                        => sep == ' ' ? FormatWithQuotesIfString(v) : v", span="68-69"];
m3_60 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="e.MoveNext()", span="71-71"];
m3_64 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="58-58"];
m3_68 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="UnParserExtensions.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m3_20 [cluster="object.IsEmpty()", file="UnParserExtensions.cs", label="Entry object.IsEmpty()", span="111-111"];
m3_70 [cluster="System.Func<T, TResult>.Invoke(T)", file="UnParserExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m3_102 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.IsEmpty(object)", span="111-111"];
m3_103 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value == null", span="113-113"];
m3_105 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is ValueType && value.Equals(value.GetType().GetDefaultValue())", span="114-114"];
m3_107 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is string && ((string)value).Length == 0", span="115-115"];
m3_109 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is IEnumerable && !((IEnumerable)value).GetEnumerator().MoveNext()", span="116-116"];
m3_104 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="113-113"];
m3_106 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="114-114"];
m3_108 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="115-115"];
m3_110 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="116-116"];
m3_111 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return false;", span="117-117"];
m3_112 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.IsEmpty(object)", span="111-111"];
m3_21 [cluster="Unk.Where", file="UnParserExtensions.cs", label="Entry Unk.Where", span=""];
m3_82 [cluster="string.Replace(string, string)", file="UnParserExtensions.cs", label="Entry string.Replace(string, string)", span="0-0"];
m3_94 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", span="96-96"];
m3_95 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", file="UnParserExtensions.cs", label="return new StringBuilder()\r\n                    .Append(spec.FormatName())\r\n                    .Append(' ')\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, FormatValue(spec, value))\r\n                .ToString();", span="98-102"];
m3_96 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", span="96-96"];
m3_19 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="UnParserExtensions.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m3_77 [cluster="T.ToMaybe<T>()", file="UnParserExtensions.cs", label="Entry T.ToMaybe<T>()", span="105-105"];
m3_81 [cluster="string.Contains(string)", file="UnParserExtensions.cs", label="Entry string.Contains(string)", span="0-0"];
m3_15 [cluster="object.GetType()", file="UnParserExtensions.cs", label="Entry object.GetType()", span="0-0"];
m3_91 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="93-93"];
m3_33 [cluster="lambda expression", file="UnParserExtensions.cs", label="new { Specification = Specification.FromProperty(pi), Value = pi.GetValue(options, null) }", span="37-37"];
m3_28 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(verb.Name).Append(' ')", span="32-32"];
m3_44 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value)).Append(' ')", span="50-50"];
m3_48 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(FormatValue(val.Specification, val.Value)).Append(' ')", span="52-52"];
m3_27 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="32-32"];
m3_32 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="37-37"];
m3_37 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="40-40"];
m3_40 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="45-45"];
m3_43 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="50-50"];
m3_47 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="52-52"];
m3_29 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="32-32"];
m3_34 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="37-37"];
m3_38 [cluster="lambda expression", file="UnParserExtensions.cs", label="i.Specification.Tag == SpecificationType.Option", span="40-40"];
m3_39 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="40-40"];
m3_41 [cluster="lambda expression", file="UnParserExtensions.cs", label="i.Specification.Tag == SpecificationType.Value", span="45-45"];
m3_42 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="45-45"];
m3_45 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="50-50"];
m3_49 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="52-52"];
m3_72 [cluster="lambda expression", file="UnParserExtensions.cs", label="sep == ' ' ? FormatWithQuotesIfString(v) : v", span="69-69"];
m3_71 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="68-69"];
m3_73 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="68-69"];
m3_79 [cluster="lambda expression", file="UnParserExtensions.cs", label="v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="82-82"];
m3_84 [cluster="lambda expression", file="UnParserExtensions.cs", label="v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v", span="86-87"];
m3_83 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="86-87"];
m3_78 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="81-82"];
m3_80 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="81-82"];
m3_85 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="86-87"];
m3_92 [cluster="lambda expression", file="UnParserExtensions.cs", label="o.Separator != '\0' ? o.Separator : ' '", span="93-93"];
m3_93 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="93-93"];
m3_98 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m3_26 [cluster="string.TrimEnd(params char[])", file="UnParserExtensions.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m3_24 [cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="87-87"];
m3_113 [cluster="System.Type.GetDefaultValue()", file="UnParserExtensions.cs", label="Entry System.Type.GetDefaultValue()", span="119-119"];
m3_50 [cluster="Unk.FormatValue", file="UnParserExtensions.cs", label="Entry Unk.FormatValue", span=""];
m3_46 [cluster="Unk.FormatOption", file="UnParserExtensions.cs", label="Entry Unk.FormatOption", span=""];
m3_22 [cluster="Unk.UniqueName", file="UnParserExtensions.cs", label="Entry Unk.UniqueName", span=""];
m3_87 [cluster="string.JoinTo(params string[])", file="UnParserExtensions.cs", label="Entry string.JoinTo(params string[])", span="45-45"];
m3_25 [cluster="System.Text.StringBuilder.ToString()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m3_67 [cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="UnParserExtensions.cs", label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="90-90"];
m3_30 [cluster="System.Text.StringBuilder.Append(string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m3_97 [cluster="CommandLine.Core.OptionSpecification.FormatName()", file="UnParserExtensions.cs", label="Entry CommandLine.Core.OptionSpecification.FormatName()", span="105-105"];
m3_65 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="79-79"];
m3_74 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Func<string, string> doubQt = v\r\n                => v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="81-82"];
m3_75 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="return (value as string)\r\n                .ToMaybe()\r\n                .Return(v => v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v, value);", span="84-87"];
m3_76 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="79-79"];
m3_23 [cluster="Unk.ForEach", file="UnParserExtensions.cs", label="Entry Unk.ForEach", span=""];
m3_66 [cluster="System.Text.StringBuilder.Append(object)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m3_16 [cluster="System.Text.StringBuilder.StringBuilder()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m3_114 [cluster="object.Equals(object)", file="UnParserExtensions.cs", label="Entry object.Equals(object)", span="0-0"];
m3_69 [cluster="System.Collections.IEnumerator.MoveNext()", file="UnParserExtensions.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m3_99 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", span="105-105"];
m3_100 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="UnParserExtensions.cs", label="return optionSpec.LongName.Length > 0\r\n                ? ''--''.JoinTo(optionSpec.LongName) : ''-''.JoinTo(optionSpec.ShortName);", span="107-108"];
m3_101 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", span="105-105"];
m3_35 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="UnParserExtensions.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105"];
m3_14 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="UnParserExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m3_0 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="24-24"];
m3_1 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="options == null", span="26-26"];
m3_3 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="var type = options.GetType()", span="28-28"];
m3_6 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="var specs =\r\n                from info in\r\n                    type.GetSpecifications(\r\n                        pi => new { Specification = Specification.FromProperty(pi), Value = pi.GetValue(options, null) })\r\n                where !info.Value.IsEmpty()\r\n                select info", span="34-39"];
m3_2 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="throw new ArgumentNullException(''options'');", span="26-26"];
m3_4 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="var builder = new StringBuilder()", span="29-29"];
m3_5 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="type.GetVerbSpecification()\r\n                .Return(verb => builder.Append(verb.Name).Append(' '), builder)", span="31-32"];
m3_9 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="optSpecs.ForEach(opt => builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value)).Append(' '))", span="50-50"];
m3_10 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="builder.TrimEndIfMatch(' ')", span="51-51"];
m3_11 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="valSpecs.ForEach(val => builder.Append(FormatValue(val.Specification, val.Value)).Append(' '))", span="52-52"];
m3_12 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="return builder\r\n                .ToString().TrimEnd(' ');", span="54-55"];
m3_7 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="var optSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Option)\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType != TargetType.Switch || (o.TargetType == TargetType.Switch && ((bool)info.Value))\r\n                orderby o.UniqueName()\r\n                select info", span="40-44"];
m3_8 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="var valSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Value)\r\n                let v = (ValueSpecification)info.Specification\r\n                orderby v.Index\r\n                select info", span="45-48"];
m3_13 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="24-24"];
m3_36 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="UnParserExtensions.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m3_115 [file="UnParserExtensions.cs", label=builder, span=""];
m3_116 [file="UnParserExtensions.cs", label=T, span=""];
m3_117 [file="UnParserExtensions.cs", label=sep, span=""];
m3_118 [file="UnParserExtensions.cs", label=doubQt, span=""];
m3_89 -> m3_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_51 -> m3_53  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m3_51 -> m3_55  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_52 -> m3_55  [color=darkseagreen4, key=1, label=builder, style=dashed];
m3_52 -> m3_61  [color=darkseagreen4, key=1, label=builder, style=dashed];
m3_52 -> m3_62  [color=darkseagreen4, key=1, label=builder, style=dashed];
m3_52 -> m3_63  [color=darkseagreen4, key=1, label=builder, style=dashed];
m3_57 -> m3_72  [color=darkseagreen4, key=1, label=sep, style=dashed];
m3_57 -> m3_61  [color=darkseagreen4, key=1, label=sep, style=dashed];
m3_59 -> m3_61  [color=darkseagreen4, key=1, label=e, style=dashed];
m3_58 -> m3_72  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_58 -> m3_61  [color=darkseagreen4, key=1, label=fmtWithQuotesIfStr, style=dashed];
m3_102 -> m3_105  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_102 -> m3_107  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_102 -> m3_109  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_65 -> m3_75  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_74 -> m3_79  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_74 -> m3_84  [color=darkseagreen4, key=1, label=doubQt, style=dashed];
m3_75 -> m3_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_3 -> m3_5  [color=darkseagreen4, key=1, label=type, style=dashed];
m3_6 -> m3_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_4 -> m3_28  [color=darkseagreen4, key=1, label=builder, style=dashed];
m3_4 -> m3_9  [color=darkseagreen4, key=1, label=builder, style=dashed];
m3_4 -> m3_44  [color=darkseagreen4, key=1, label=builder, style=dashed];
m3_4 -> m3_10  [color=darkseagreen4, key=1, label=builder, style=dashed];
m3_4 -> m3_11  [color=darkseagreen4, key=1, label=builder, style=dashed];
m3_4 -> m3_48  [color=darkseagreen4, key=1, label=builder, style=dashed];
m3_4 -> m3_12  [color=darkseagreen4, key=1, label=builder, style=dashed];
m3_5 -> m3_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_9 -> m3_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_11 -> m3_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_7 -> m3_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_7 -> m3_9  [color=darkseagreen4, key=1, label=optSpecs, style=dashed];
m3_8 -> m3_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_8 -> m3_11  [color=darkseagreen4, key=1, label=valSpecs, style=dashed];
m3_115 -> m3_28  [color=darkseagreen4, key=1, label=builder, style=dashed];
m3_115 -> m3_44  [color=darkseagreen4, key=1, label=builder, style=dashed];
m3_115 -> m3_48  [color=darkseagreen4, key=1, label=builder, style=dashed];
m3_117 -> m3_72  [color=darkseagreen4, key=1, label=sep, style=dashed];
m3_118 -> m3_84  [color=darkseagreen4, key=1, label=doubQt, style=dashed];
}
