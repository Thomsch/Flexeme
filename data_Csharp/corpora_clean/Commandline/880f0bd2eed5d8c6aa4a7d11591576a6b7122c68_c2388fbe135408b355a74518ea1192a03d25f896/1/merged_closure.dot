digraph  {
m0_37 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionAttribute.cs", label="Entry CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", span="176-176"];
m0_57 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionAttribute.cs", label="var list = ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(options)", span="178-178"];
m0_61 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionAttribute.cs", label="property.GetValue(options, null) == null", span="185-185"];
m0_62 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionAttribute.cs", label="property.SetValue(options, new CommandLine.ParserState(), null)", span="187-187"];
m0_63 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionAttribute.cs", label="var parserState = (IParserState)property.GetValue(options, null)", span="189-189"];
m0_66 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionAttribute.cs", label="var error = new ParsingError\r\n            {\r\n                BadOption =\r\n                {\r\n                    ShortName = option.ShortName,\r\n                    LongName = option.LongName\r\n                }\r\n            }", span="194-201"];
m0_67 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionAttribute.cs", label="required != null", span="202-202"];
m0_68 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionAttribute.cs", label="error.ViolatesRequired = required.Value", span="202-202"];
m0_69 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionAttribute.cs", label="mutualExclusiveness != null", span="203-203"];
m0_70 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionAttribute.cs", label="error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="203-203"];
m0_58 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionAttribute.cs", label="list.Count == 0", span="179-179"];
m0_60 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionAttribute.cs", label="var property = list[0].Left", span="183-183"];
m0_59 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionAttribute.cs", label="return;", span="181-181"];
m0_64 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionAttribute.cs", label="parserState == null", span="190-190"];
m0_71 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionAttribute.cs", label="parserState.Errors.Add(error)", span="204-204"];
m0_65 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionAttribute.cs", label="return;", span="192-192"];
m0_72 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionAttribute.cs", label="Exit CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", span="176-176"];
m0_49 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="OptionAttribute.cs", label="Entry CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", span="166-166"];
m0_50 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="OptionAttribute.cs", label="var setName = option.MutuallyExclusiveSet", span="168-168"];
m0_52 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="OptionAttribute.cs", label="_mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="171-171"];
m0_51 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="OptionAttribute.cs", label="!_mutuallyExclusiveSetMap.ContainsKey(setName)", span="169-169"];
m0_53 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="OptionAttribute.cs", label="_mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="173-173"];
m0_54 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="OptionAttribute.cs", label="Exit CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", span="166-166"];
m0_24 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionAttribute.cs", label="Entry CommandLine.Internal.OptionMap.EnforceRequiredRule()", span="128-128"];
m0_30 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionAttribute.cs", label="bool requiredRulesAllMet = true", span="130-130"];
m0_31 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionAttribute.cs", label="_map.Values", span="131-131"];
m0_35 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionAttribute.cs", label="return requiredRulesAllMet;", span="139-139"];
m0_32 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionAttribute.cs", label="option.Required && !option.IsDefined", span="133-133"];
m0_33 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionAttribute.cs", label="SetParserStateIfNeeded(RawOptions, option, true, null)", span="135-135"];
m0_34 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionAttribute.cs", label="requiredRulesAllMet = false", span="136-136"];
m0_36 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionAttribute.cs", label="Exit CommandLine.Internal.OptionMap.EnforceRequiredRule()", span="128-128"];
m0_29 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionAttribute.cs", label="Entry CommandLine.Internal.OptionInfo.SetDefault(object)", span="179-179"];
m0_25 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="OptionAttribute.cs", label="Entry CommandLine.Internal.OptionMap.SetDefaults()", span="120-120"];
m0_26 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="OptionAttribute.cs", label="_map.Values", span="122-122"];
m0_27 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="OptionAttribute.cs", label="option.SetDefault(RawOptions)", span="124-124"];
m0_28 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="OptionAttribute.cs", label="Exit CommandLine.Internal.OptionMap.SetDefaults()", span="120-120"];
m0_20 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="OptionAttribute.cs", label="Entry CommandLine.Internal.OptionMap.EnforceRules()", span="115-115"];
m0_21 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="OptionAttribute.cs", label="return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="117-117"];
m0_22 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="OptionAttribute.cs", label="Exit CommandLine.Internal.OptionMap.EnforceRules()", span="115-115"];
m0_56 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="OptionAttribute.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m0_75 [cluster="CommandLine.ParserState.ParserState()", file="OptionAttribute.cs", label="Entry CommandLine.ParserState.ParserState()", span="47-47"];
m0_78 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="OptionAttribute.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m0_0 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", file="OptionAttribute.cs", label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", span="45-45"];
m0_1 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", file="OptionAttribute.cs", label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", span="45-45"];
m0_8 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionAttribute.cs", label="Entry CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="61-61"];
m0_9 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionAttribute.cs", label="_settings = settings", span="63-63"];
m0_14 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionAttribute.cs", label="_names = new Dictionary<string, string>(capacity, comparer)", span="74-74"];
m0_15 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionAttribute.cs", label="_map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="75-75"];
m0_17 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionAttribute.cs", label="_mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="78-78"];
m0_10 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionAttribute.cs", label="IEqualityComparer<string> comparer", span="65-65"];
m0_11 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionAttribute.cs", label="_settings.CaseSensitive", span="66-66"];
m0_12 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionAttribute.cs", label="comparer = StringComparer.Ordinal", span="68-68"];
m0_13 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionAttribute.cs", label="comparer = StringComparer.OrdinalIgnoreCase", span="72-72"];
m0_16 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionAttribute.cs", label="_settings.MutuallyExclusive", span="76-76"];
m0_18 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionAttribute.cs", label="Exit CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="61-61"];
m0_73 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="OptionAttribute.cs", label="Entry CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="43-43"];
m0_76 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="OptionAttribute.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m0_77 [cluster="CommandLine.ParsingError.ParsingError()", file="OptionAttribute.cs", label="Entry CommandLine.ParsingError.ParsingError()", span="47-47"];
m0_55 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="OptionAttribute.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m0_74 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="OptionAttribute.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m0_2 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="OptionAttribute.cs", label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", span="47-47"];
m0_3 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="OptionAttribute.cs", label="BadOption = option", span="49-49"];
m0_4 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="OptionAttribute.cs", label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", span="47-47"];
m0_5 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="OptionAttribute.cs", label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="54-54"];
m0_6 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="OptionAttribute.cs", label="++_count", span="54-54"];
m0_7 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="OptionAttribute.cs", label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="54-54"];
m0_23 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionAttribute.cs", label="Entry CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", span="142-142"];
m0_38 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionAttribute.cs", label="!_settings.MutuallyExclusive", span="144-144"];
m0_39 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionAttribute.cs", label="return true;", span="146-146"];
m0_40 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionAttribute.cs", label="_map.Values", span="148-148"];
m0_41 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionAttribute.cs", label="option.IsDefined && option.MutuallyExclusiveSet != null", span="150-150"];
m0_43 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionAttribute.cs", label="_mutuallyExclusiveSetMap.Values", span="155-155"];
m0_42 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionAttribute.cs", label="BuildMutuallyExclusiveMap(option)", span="152-152"];
m0_44 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionAttribute.cs", label="info.Occurrence > 1", span="157-157"];
m0_47 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionAttribute.cs", label="return true;", span="163-163"];
m0_45 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionAttribute.cs", label="SetParserStateIfNeeded(RawOptions, info.BadOption, null, true)", span="159-159"];
m0_46 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionAttribute.cs", label="return false;", span="160-160"];
m0_48 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionAttribute.cs", label="Exit CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", span="142-142"];
m0_19 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", file="OptionAttribute.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m0_79 [file="OptionAttribute.cs", label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo", span=""];
m0_80 [file="OptionAttribute.cs", label="CommandLine.Internal.OptionMap", span=""];
m1_23 [cluster="Unk.Where", file="OptionSpecification.cs", label="Entry Unk.Where", span=""];
m1_0 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionSpecification.cs", label="Entry CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m1_1 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionSpecification.cs", label="tokens.Empty()", span="15-15"];
m1_2 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionSpecification.cs", label="yield break;", span="17-17"];
m1_9 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionSpecification.cs", label="yield return first;", span="29-29"];
m1_12 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionSpecification.cs", label="yield return token;", span="34-34"];
m1_14 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionSpecification.cs", label="yield return token;", span="41-41"];
m1_4 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionSpecification.cs", label="var first = tokens.First()", span="20-20"];
m1_7 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionSpecification.cs", label="typeLookup(first.Text).MatchJust(out info)", span="24-24"];
m1_8 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionSpecification.cs", label="info.Tag == TypeDescriptorKind.Sequence\r\n                        && tokens.Skip(1).Take(1).Any()", span="26-27"];
m1_10 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionSpecification.cs", label="tokens.Skip(1).Where(token => token.IsValue())", span="31-31"];
m1_13 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionSpecification.cs", label="Partition(tokens.Skip(1 + items), typeLookup)", span="39-39"];
m1_3 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionSpecification.cs", label="var items = 0", span="19-19"];
m1_11 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionSpecification.cs", label="items++", span="33-33"];
m1_5 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionSpecification.cs", label="first.Tag == TokenType.Name", span="21-21"];
m1_6 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionSpecification.cs", label="TypeDescriptor info", span="23-23"];
m1_15 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionSpecification.cs", label="Exit CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m1_22 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="OptionSpecification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m1_19 [cluster="CommandLine.Infrastructure.Maybe<T>.MatchJust(out T)", file="OptionSpecification.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.MatchJust(out T)", span="31-31"];
m1_16 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="OptionSpecification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="87-87"];
m1_24 [cluster="lambda expression", file="OptionSpecification.cs", label="Entry lambda expression", span="31-31"];
m1_25 [cluster="lambda expression", file="OptionSpecification.cs", label="token.IsValue()", span="31-31"];
m1_26 [cluster="lambda expression", file="OptionSpecification.cs", label="Exit lambda expression", span="31-31"];
m1_17 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="OptionSpecification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m1_20 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="OptionSpecification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m1_21 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="OptionSpecification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m1_27 [cluster="CommandLine.Core.Token.IsValue()", file="OptionSpecification.cs", label="Entry CommandLine.Core.Token.IsValue()", span="77-77"];
m1_18 [cluster="System.Func<T, TResult>.Invoke(T)", file="OptionSpecification.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m3_27 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="ValueAttribute.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="90-90"];
m3_28 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="ValueAttribute.cs", label="string.IsNullOrWhiteSpace(''message'')", span="92-92"];
m3_30 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="ValueAttribute.cs", label="writer == null", span="93-93"];
m3_29 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="ValueAttribute.cs", label="throw new ArgumentException(''message'');", span="92-92"];
m3_31 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="ValueAttribute.cs", label="throw new ArgumentNullException(''writer'');", span="93-93"];
m3_33 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="ValueAttribute.cs", label="Exit CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="90-90"];
m3_35 [cluster="System.IO.TextWriter.WriteLine(string)", file="ValueAttribute.cs", label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0"];
m3_36 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="ValueAttribute.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string)", span="109-109"];
m3_37 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="ValueAttribute.cs", label="WriteMessage(message, Console.Out)", span="111-111"];
m3_38 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="ValueAttribute.cs", label="Exit CommandLine.Text.HeadingInfo.WriteMessage(string)", span="109-109"];
m3_0 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="ValueAttribute.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27"];
m3_1 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="ValueAttribute.cs", label="string.IsNullOrWhiteSpace(''programName'')", span="29-29"];
m3_3 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="ValueAttribute.cs", label="this.programName = programName", span="31-31"];
m3_4 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="ValueAttribute.cs", label="this.version = version", span="32-32"];
m3_2 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="ValueAttribute.cs", label="throw new ArgumentException(''programName'');", span="29-29"];
m3_5 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="ValueAttribute.cs", label="Exit CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27"];
m3_23 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="ValueAttribute.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m3_15 [cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="ValueAttribute.cs", label="Entry CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", span="63-63"];
m3_16 [cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="ValueAttribute.cs", label="return info.ToString();", span="65-65"];
m3_17 [cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="ValueAttribute.cs", label="Exit CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", span="63-63"];
m3_18 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="ValueAttribute.cs", label="Entry CommandLine.Text.HeadingInfo.ToString()", span="72-72"];
m3_19 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="ValueAttribute.cs", label="var isVersionNull = string.IsNullOrEmpty(version)", span="74-74"];
m3_20 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="ValueAttribute.cs", label="return new StringBuilder(programName.Length +\r\n                    (!isVersionNull ? version.Length + 1 : 0))\r\n                .Append(programName)\r\n                .AppendWhen(!isVersionNull, '' '', version)\r\n                .ToString();", span="75-79"];
m3_21 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="ValueAttribute.cs", label="Exit CommandLine.Text.HeadingInfo.ToString()", span="72-72"];
m3_12 [cluster="lambda expression", file="ValueAttribute.cs", label="Entry lambda expression", span="52-52"];
m3_8 [cluster="lambda expression", file="ValueAttribute.cs", label="Entry lambda expression", span="48-48"];
m3_9 [cluster="lambda expression", file="ValueAttribute.cs", label="Path.GetFileNameWithoutExtension(titleAttribute.Title)", span="48-48"];
m3_10 [cluster="lambda expression", file="ValueAttribute.cs", label="Exit lambda expression", span="48-48"];
m3_13 [cluster="lambda expression", file="ValueAttribute.cs", label="versionAttribute.InformationalVersion", span="52-52"];
m3_14 [cluster="lambda expression", file="ValueAttribute.cs", label="Exit lambda expression", span="52-52"];
m3_22 [cluster="string.IsNullOrEmpty(string)", file="ValueAttribute.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m3_25 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="ValueAttribute.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m3_11 [cluster="System.IO.Path.GetFileNameWithoutExtension(string)", file="ValueAttribute.cs", label="Entry System.IO.Path.GetFileNameWithoutExtension(string)", span="0-0"];
m3_26 [cluster="System.Text.StringBuilder.ToString()", file="ValueAttribute.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m3_34 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ValueAttribute.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m3_24 [cluster="System.Text.StringBuilder.Append(string)", file="ValueAttribute.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m3_39 [cluster="CommandLine.Text.HeadingInfo.WriteError(string)", file="ValueAttribute.cs", label="Entry CommandLine.Text.HeadingInfo.WriteError(string)", span="120-120"];
m3_40 [cluster="CommandLine.Text.HeadingInfo.WriteError(string)", file="ValueAttribute.cs", label="WriteMessage(message, Console.Error)", span="122-122"];
m3_41 [cluster="CommandLine.Text.HeadingInfo.WriteError(string)", file="ValueAttribute.cs", label="Exit CommandLine.Text.HeadingInfo.WriteError(string)", span="120-120"];
m3_7 [cluster="System.ArgumentException.ArgumentException(string)", file="ValueAttribute.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m3_6 [cluster="string.IsNullOrWhiteSpace(string)", file="ValueAttribute.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m3_42 [file="ValueAttribute.cs", label="CommandLine.Text.HeadingInfo", span=""];
m0_37 -> m0_61  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_37 -> m0_62  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_37 -> m0_67  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m0_37 -> m0_69  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m0_63 -> m0_71  [color=darkseagreen4, key=1, label=parserState, style=dashed];
m0_66 -> m0_71  [color=darkseagreen4, key=1, label=error, style=dashed];
m0_60 -> m0_62  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_49 -> m0_52  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m0_50 -> m0_52  [color=darkseagreen4, key=1, label=setName, style=dashed];
m0_50 -> m0_53  [color=darkseagreen4, key=1, label=setName, style=dashed];
m0_30 -> m0_35  [color=darkseagreen4, key=1, label=requiredRulesAllMet, style=dashed];
m0_31 -> m0_33  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_34 -> m0_35  [color=darkseagreen4, key=1, label=requiredRulesAllMet, style=dashed];
m0_40 -> m0_42  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_43 -> m0_45  [color=darkseagreen4, key=1, label=info, style=dashed];
m0_79 -> m0_6  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo", style=dashed];
m0_80 -> m0_11  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_80 -> m0_16  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_80 -> m0_21  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_80 -> m0_26  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_80 -> m0_27  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_80 -> m0_31  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_80 -> m0_33  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_80 -> m0_38  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_80 -> m0_40  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_80 -> m0_42  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_80 -> m0_43  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_80 -> m0_45  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_80 -> m0_51  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_80 -> m0_52  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_80 -> m0_53  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m1_0 -> m1_7  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>", style=dashed];
m1_0 -> m1_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m1_0 -> m1_10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m1_0 -> m1_13  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m1_4 -> m1_7  [color=darkseagreen4, key=1, label=first, style=dashed];
m1_4 -> m1_9  [color=darkseagreen4, key=1, label=first, style=dashed];
m1_10 -> m1_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_10 -> m1_12  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_3 -> m1_11  [color=darkseagreen4, key=1, label=items, style=dashed];
m1_3 -> m1_13  [color=darkseagreen4, key=1, label=items, style=dashed];
m1_11 -> m1_11  [color=darkseagreen4, key=1, label=items, style=dashed];
m1_11 -> m1_13  [color=darkseagreen4, key=1, label=items, style=dashed];
m3_27 -> m3_30  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m3_42 -> m3_20  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m3_42 -> m3_37  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m3_42 -> m3_40  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
}
