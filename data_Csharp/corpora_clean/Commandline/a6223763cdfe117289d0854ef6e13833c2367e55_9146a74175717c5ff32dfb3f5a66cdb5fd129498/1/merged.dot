digraph  {
d1 [label="var options = new OptionsWithValueOptionImplicitIndex()", span="11-11", cluster="CommandLine.Tests.Unit.Attributes.ValueOptionAttributeFixture.Index_Implicit_By_Declaration_Order()", color=green, community=0];
d0 [label="Entry CommandLine.Tests.Unit.Attributes.ValueOptionAttributeFixture.Index_Implicit_By_Declaration_Order()", span="9-9", cluster="CommandLine.Tests.Unit.Attributes.ValueOptionAttributeFixture.Index_Implicit_By_Declaration_Order()"];
d2 [label="string[] args = ''foo bar''.Split()", span="12-12", cluster="CommandLine.Tests.Unit.Attributes.ValueOptionAttributeFixture.Index_Implicit_By_Declaration_Order()", color=green, community=0];
d8 [label="Entry CommandLine.Tests.Fakes.OptionsWithValueOptionImplicitIndex.OptionsWithValueOptionImplicitIndex()", span="2-2", cluster="CommandLine.Tests.Fakes.OptionsWithValueOptionImplicitIndex.OptionsWithValueOptionImplicitIndex()"];
d3 [label="Parser.Default.ParseArguments(args, options)", span="13-13", cluster="CommandLine.Tests.Unit.Attributes.ValueOptionAttributeFixture.Index_Implicit_By_Declaration_Order()", color=green, community=0];
d4 [label="options.A.ShouldBeEquivalentTo(''foo'')", span="14-14", cluster="CommandLine.Tests.Unit.Attributes.ValueOptionAttributeFixture.Index_Implicit_By_Declaration_Order()", color=green, community=0];
d5 [label="options.B.ShouldBeEquivalentTo(''bar'')", span="15-15", cluster="CommandLine.Tests.Unit.Attributes.ValueOptionAttributeFixture.Index_Implicit_By_Declaration_Order()", color=green, community=0];
d6 [label="options.C.Should().BeNull()", span="16-16", cluster="CommandLine.Tests.Unit.Attributes.ValueOptionAttributeFixture.Index_Implicit_By_Declaration_Order()", color=green, community=0];
d9 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])"];
d10 [label="Entry CommandLine.IParser.ParseArguments(string[], object)", span="49-49", cluster="CommandLine.IParser.ParseArguments(string[], object)"];
d11 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo"];
d7 [label="Exit CommandLine.Tests.Unit.Attributes.ValueOptionAttributeFixture.Index_Implicit_By_Declaration_Order()", span="9-9", cluster="CommandLine.Tests.Unit.Attributes.ValueOptionAttributeFixture.Index_Implicit_By_Declaration_Order()"];
d12 [label="Entry Unk.Should", span="", cluster="Unk.Should"];
d13 [label="Entry Unk.BeNull", span="", cluster="Unk.BeNull"];
d15 [label="var options = new OptionsWithValueOptionExplicitIndex()", span="22-22", cluster="CommandLine.Tests.Unit.Attributes.ValueOptionAttributeFixture.Index_Explicitly_Set_On_Value_Option()", color=green, community=0];
d14 [label="Entry CommandLine.Tests.Unit.Attributes.ValueOptionAttributeFixture.Index_Explicitly_Set_On_Value_Option()", span="20-20", cluster="CommandLine.Tests.Unit.Attributes.ValueOptionAttributeFixture.Index_Explicitly_Set_On_Value_Option()"];
d16 [label="string[] args = ''foo bar''.Split()", span="23-23", cluster="CommandLine.Tests.Unit.Attributes.ValueOptionAttributeFixture.Index_Explicitly_Set_On_Value_Option()", color=green, community=0];
d22 [label="Entry CommandLine.Tests.Fakes.OptionsWithValueOptionExplicitIndex.OptionsWithValueOptionExplicitIndex()", span="2-2", cluster="CommandLine.Tests.Fakes.OptionsWithValueOptionExplicitIndex.OptionsWithValueOptionExplicitIndex()"];
d17 [label="Parser.Default.ParseArguments(args, options)", span="24-24", cluster="CommandLine.Tests.Unit.Attributes.ValueOptionAttributeFixture.Index_Explicitly_Set_On_Value_Option()", color=green, community=0];
d18 [label="options.A.Should().BeNull()", span="25-25", cluster="CommandLine.Tests.Unit.Attributes.ValueOptionAttributeFixture.Index_Explicitly_Set_On_Value_Option()", color=green, community=0];
d19 [label="options.B.ShouldBeEquivalentTo(''bar'')", span="26-26", cluster="CommandLine.Tests.Unit.Attributes.ValueOptionAttributeFixture.Index_Explicitly_Set_On_Value_Option()", color=green, community=0];
d20 [label="options.C.ShouldBeEquivalentTo(''foo'')", span="27-27", cluster="CommandLine.Tests.Unit.Attributes.ValueOptionAttributeFixture.Index_Explicitly_Set_On_Value_Option()", color=green, community=0];
d21 [label="Exit CommandLine.Tests.Unit.Attributes.ValueOptionAttributeFixture.Index_Explicitly_Set_On_Value_Option()", span="20-20", cluster="CommandLine.Tests.Unit.Attributes.ValueOptionAttributeFixture.Index_Explicitly_Set_On_Value_Option()"];
d1 -> d2  [key=0, style=solid, color=green];
d1 -> d8  [key=2, style=dotted, color=green];
d1 -> d3  [key=1, style=dashed, color=green, label=options];
d1 -> d4  [key=1, style=dashed, color=green, label=options];
d1 -> d5  [key=1, style=dashed, color=green, label=options];
d1 -> d6  [key=1, style=dashed, color=green, label=options];
d0 -> d1  [key=0, style=solid, color=green];
d2 -> d3  [key=0, style=solid, color=green];
d2 -> d9  [key=2, style=dotted, color=green];
d3 -> d4  [key=0, style=solid, color=green];
d3 -> d10  [key=2, style=dotted, color=green];
d4 -> d5  [key=0, style=solid, color=green];
d4 -> d11  [key=2, style=dotted, color=green];
d5 -> d6  [key=0, style=solid, color=green];
d5 -> d11  [key=2, style=dotted, color=green];
d6 -> d7  [key=0, style=solid, color=green];
d6 -> d12  [key=2, style=dotted, color=green];
d6 -> d13  [key=2, style=dotted, color=green];
d7 -> d0  [key=0, style=bold, color=blue];
d15 -> d16  [key=0, style=solid, color=green];
d15 -> d22  [key=2, style=dotted, color=green];
d15 -> d17  [key=1, style=dashed, color=green, label=options];
d15 -> d18  [key=1, style=dashed, color=green, label=options];
d15 -> d19  [key=1, style=dashed, color=green, label=options];
d15 -> d20  [key=1, style=dashed, color=green, label=options];
d14 -> d15  [key=0, style=solid, color=green];
d16 -> d17  [key=0, style=solid, color=green];
d16 -> d9  [key=2, style=dotted, color=green];
d17 -> d18  [key=0, style=solid, color=green];
d17 -> d10  [key=2, style=dotted, color=green];
d18 -> d19  [key=0, style=solid, color=green];
d18 -> d12  [key=2, style=dotted, color=green];
d18 -> d13  [key=2, style=dotted, color=green];
d19 -> d20  [key=0, style=solid, color=green];
d19 -> d11  [key=2, style=dotted, color=green];
d20 -> d21  [key=0, style=solid, color=green];
d20 -> d11  [key=2, style=dotted, color=green];
d21 -> d14  [key=0, style=bold, color=blue];
}
