digraph  {
n387 [label="CommandLine.Text.HelpText", span=""];
n388 [label=auto, span=""];
n389 [label="CommandLine.ParserResult<T>", span=""];
n390 [label=pr, span=""];
n391 [label="CommandLine.Text.HelpText", span=""];
n392 [label="System.Func<CommandLine.Error, string>", span=""];
n393 [label=int, span=""];
n394 [label=text, span=""];
n395 [label=groups, span=""];
n396 [label=string, span=""];
n397 [label=maxLength, span=""];
n398 [label=remainingSpace, span=""];
n399 [label=int, span=""];
n400 [label="CommandLine.Core.Specification", span=""];
n401 [label=optionHelpText, span=""];
n402 [label="CommandLine.Core.OptionSpecification", span=""];
n403 [label="CommandLine.Core.ValueSpecification", span=""];
n0 [label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36", cluster="CommandLine.Text.HelpText.HelpText()"];
n1 [label="Exit CommandLine.Text.HelpText.HelpText()", span="36-36", cluster="CommandLine.Text.HelpText.HelpText()"];
n2 [label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)"];
n3 [label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)"];
n4 [label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59", cluster="CommandLine.Text.HelpText.HelpText(string)"];
n5 [label="Exit CommandLine.Text.HelpText.HelpText(string)", span="59-59", cluster="CommandLine.Text.HelpText.HelpText(string)"];
n6 [label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)"];
n7 [label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)"];
n8 [label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="82-82", cluster="CommandLine.Text.HelpText.HelpText(string, string)"];
n9 [label="Exit CommandLine.Text.HelpText.HelpText(string, string)", span="82-82", cluster="CommandLine.Text.HelpText.HelpText(string, string)"];
n10 [label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
n11 [label="sentenceBuilder == null", span="97-97", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
n13 [label="heading == null", span="98-98", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
n15 [label="copyright == null", span="99-99", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
n19 [label="this.sentenceBuilder = sentenceBuilder", span="104-104", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
n20 [label="this.heading = heading", span="105-105", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
n21 [label="this.copyright = copyright", span="106-106", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
n12 [label="throw new ArgumentNullException(''sentenceBuilder'');", span="97-97", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
n14 [label="throw new ArgumentNullException(''heading'');", span="98-98", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
n16 [label="throw new ArgumentNullException(''copyright'');", span="99-99", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
n17 [label="preOptionsHelp = new StringBuilder(BuilderCapacity)", span="101-101", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
n18 [label="postOptionsHelp = new StringBuilder(BuilderCapacity)", span="102-102", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
n24 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)"];
n22 [label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
n23 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n25 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", span="195-195", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)"];
n26 [label="var auto = new HelpText {\r\n                Heading = HeadingInfo.Default,\r\n                Copyright = CopyrightInfo.Default,\r\n                AdditionalNewLineAfterOption = true,\r\n                AddDashesToOption = !verbsIndex\r\n            }", span="200-205", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)"];
n28 [label="onError != null && parserResult.Tag == ParserResultType.NotParsed", span="209-209", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)"];
n29 [label="errors = ((NotParsed<T>)parserResult).Errors", span="211-211", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)"];
n31 [label="auto = onError(auto)", span="215-215", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)"];
n34 [label="(verbsIndex && parserResult.TypeInfo.Multiple.Any()) || errors.Any(e => e.Tag == ErrorType.NoVerbSelectedError)", span="225-225", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", color=red, community=0];
n36 [label="auto.AddVerbs(parserResult.TypeInfo.Multiple.ToArray())", span="228-228", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", color=red, community=0];
n37 [label="auto.AddOptions(parserResult)", span="231-231", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)"];
n27 [label="var errors = Enumerable.Empty<Error>()", span="207-207", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)"];
n32 [label="ReflectionHelper.GetAttribute<AssemblyLicenseAttribute>()\r\n                .Do(license => license.AddToHelpText(auto, true))", span="219-220", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)"];
n51 [label="license.AddToHelpText(auto, true)", span="220-220", cluster="lambda expression"];
n33 [label="ReflectionHelper.GetAttribute<AssemblyUsageAttribute>()\r\n                .Do(usage => usage.AddToHelpText(auto, true))", span="222-223", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)"];
n55 [label="usage.AddToHelpText(auto, true)", span="223-223", cluster="lambda expression"];
n35 [label="auto.AddDashesToOption = false", span="227-227", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)"];
n38 [label="return auto;", span="233-233", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)"];
n40 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()"];
n30 [label="FilterMeaningfulErrors(errors).Any()", span="213-213", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)"];
n41 [label="Entry CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="450-450", cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)"];
n42 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()"];
n43 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)"];
n44 [label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()"];
n45 [label="Entry CSharpx.Maybe<T>.Do<T>(System.Action<T>)", span="300-300", cluster="CSharpx.Maybe<T>.Do<T>(System.Action<T>)"];
n50 [label="Entry lambda expression", span="220-220", cluster="lambda expression"];
n54 [label="Entry lambda expression", span="223-223", cluster="lambda expression"];
n46 [label="Entry Unk.Any", span="", cluster="Unk.Any"];
n57 [label="Entry lambda expression", span="225-225", cluster="lambda expression"];
n47 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()"];
n48 [label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="348-348", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])"];
n49 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="331-331", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)"];
n39 [label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", span="195-195", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)"];
n52 [label="Exit lambda expression", span="220-220", cluster="lambda expression"];
n53 [label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155", cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)"];
n56 [label="Exit lambda expression", span="223-223", cluster="lambda expression"];
n58 [label="e.Tag == ErrorType.NoVerbSelectedError", span="225-225", cluster="lambda expression", color=red, community=0];
n59 [label="Exit lambda expression", span="225-225", cluster="lambda expression"];
n60 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="246-246", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n61 [label="parserResult.Tag != ParserResultType.NotParsed", span="248-248", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n63 [label="var errors = ((NotParsed<T>)parserResult).Errors", span="251-251", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n67 [label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current));", span="257-257", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n85 [label="DefaultParsingErrorsHandler(parserResult, current)", span="257-257", cluster="lambda expression"];
n70 [label="return err.Matched\r\n                ? AutoBuild(pr, current => DefaultParsingErrorsHandler(pr, current))\r\n                : AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), true);", span="261-263", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n92 [label="DefaultParsingErrorsHandler(parserResult, current)", span="263-263", cluster="lambda expression"];
n62 [label="throw new ArgumentException(''Excepting NotParsed<T> type.'', ''parserResult'');", span="249-249", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n64 [label="errors.Any(e => e.Tag == ErrorType.VersionRequestedError)", span="253-253", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n66 [label="!errors.Any(e => e.Tag == ErrorType.HelpVerbRequestedError)", span="256-256", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n68 [label="var err = errors.OfType<HelpVerbRequestedError>().Single()", span="259-259", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n65 [label="return new HelpText(HeadingInfo.Default).AddPreOptionsLine(Environment.NewLine);", span="254-254", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n78 [label="Entry lambda expression", span="253-253", cluster="lambda expression"];
n81 [label="Entry lambda expression", span="256-256", cluster="lambda expression"];
n69 [label="var pr = new NotParsed<object>(TypeInfo.Create(err.Type), Enumerable.Empty<Error>())", span="260-260", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n74 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()"];
n75 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()"];
n76 [label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163", cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)"];
n77 [label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29", cluster="CommandLine.TypeInfo.Create(System.Type)"];
n89 [label="DefaultParsingErrorsHandler(pr, current)", span="262-262", cluster="lambda expression"];
n71 [label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="246-246", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n73 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="311-311", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)"];
n72 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)"];
n84 [label="Entry lambda expression", span="257-257", cluster="lambda expression"];
n88 [label="Entry lambda expression", span="262-262", cluster="lambda expression"];
n91 [label="Entry lambda expression", span="263-263", cluster="lambda expression"];
n79 [label="e.Tag == ErrorType.VersionRequestedError", span="253-253", cluster="lambda expression"];
n80 [label="Exit lambda expression", span="253-253", cluster="lambda expression"];
n82 [label="e.Tag == ErrorType.HelpVerbRequestedError", span="256-256", cluster="lambda expression"];
n83 [label="Exit lambda expression", span="256-256", cluster="lambda expression"];
n86 [label="Exit lambda expression", span="257-257", cluster="lambda expression"];
n87 [label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="271-271", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n90 [label="Exit lambda expression", span="262-262", cluster="lambda expression"];
n93 [label="Exit lambda expression", span="263-263", cluster="lambda expression"];
n94 [label="parserResult == null", span="273-273", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n96 [label="current == null", span="274-274", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n98 [label="FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors).Empty()", span="276-276", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n99 [label="return current;", span="277-277", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n100 [label="var errors = RenderParsingErrorsText(parserResult,\r\n                current.SentenceBuilder.FormatError,\r\n                current.SentenceBuilder.FormatMutuallyExclusiveSetErrors,\r\n                2)", span="279-282", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n102 [label="return current;", span="284-284", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n103 [label="current.AddPreOptionsLine(\r\n                string.Concat(Environment.NewLine, current.SentenceBuilder.ErrorsHeadingText()))", span="286-287", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n105 [label="lines.ForEach(\r\n                line => current.AddPreOptionsLine(line))", span="290-291", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n116 [label="current.AddPreOptionsLine(line)", span="291-291", cluster="lambda expression"];
n106 [label="return current;", span="293-293", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n95 [label="throw new ArgumentNullException(''parserResult'');", span="273-273", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n97 [label="throw new ArgumentNullException(''current'');", span="274-274", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n108 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31", cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()"];
n101 [label="string.IsNullOrEmpty(errors)", span="283-283", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n109 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="398-398", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
n104 [label="var lines = errors.Split(\r\n                new[] { Environment.NewLine }, StringSplitOptions.None)", span="288-289", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n110 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
n111 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()"];
n112 [label="Entry string.Concat(string, string)", span="0-0", cluster="string.Concat(string, string)"];
n113 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)"];
n114 [label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="231-231", cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)"];
n115 [label="Entry lambda expression", span="291-291", cluster="lambda expression"];
n107 [label="Exit CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="271-271", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n117 [label="Exit lambda expression", span="291-291", cluster="lambda expression"];
n118 [label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="301-301", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)"];
n119 [label="return info.ToString();", span="303-303", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)"];
n120 [label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="301-301", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)"];
n121 [label="Entry CommandLine.Text.HelpText.ToString()", span="432-432", cluster="CommandLine.Text.HelpText.ToString()"];
n122 [label="return AddPreOptionsLine(value, MaximumDisplayWidth);", span="313-313", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)"];
n123 [label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="311-311", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)"];
n124 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="574-574", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)"];
n125 [label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="321-321", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)"];
n126 [label="return AddLine(postOptionsHelp, value);", span="323-323", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)"];
n127 [label="Exit CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="321-321", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)"];
n128 [label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="680-680", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)"];
n129 [label="result == null", span="334-334", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)"];
n131 [label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Single),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="336-339", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", color=red, community=0];
n130 [label="throw new ArgumentNullException(''result'');", span="334-334", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)"];
n132 [label="Exit CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="331-331", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)"];
n133 [label="Entry CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="491-491", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)"];
n134 [label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="536-536", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
n135 [label="types == null", span="350-350", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])"];
n137 [label="types.Length == 0", span="351-351", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])"];
n139 [label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="353-356", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])"];
n136 [label="throw new ArgumentNullException(''types'');", span="350-350", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])"];
n138 [label="throw new ArgumentOutOfRangeException(''types'');", span="351-351", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])"];
n140 [label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="348-348", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])"];
n141 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)"];
n142 [label="Entry CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="524-524", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)"];
n143 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="365-365", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)"];
n144 [label="result == null", span="367-367", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)"];
n146 [label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Single),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="369-372", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", color=red, community=0];
n145 [label="throw new ArgumentNullException(''result'');", span="367-367", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)"];
n147 [label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="365-365", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)"];
n148 [label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="382-382", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])"];
n149 [label="types == null", span="384-384", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])"];
n151 [label="types.Length == 0", span="385-385", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])"];
n153 [label="return AddOptionsImpl(AdaptVerbsToSpecifications(types), SentenceBuilder.RequiredWord(), maximumLength);", span="387-387", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])"];
n150 [label="throw new ArgumentNullException(''types'');", span="384-384", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])"];
n152 [label="throw new ArgumentOutOfRangeException(''types'');", span="385-385", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])"];
n154 [label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="382-382", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])"];
n155 [label="parserResult == null", span="404-404", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
n157 [label="var meaningfulErrors =\r\n                FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors)", span="406-407", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
n161 [label="meaningfulErrors\r\n                .Where(e => e.Tag != ErrorType.MutuallyExclusiveSetError)\r\n                .ForEach(\r\n                    error =>\r\n                        {\r\n                            var line = new StringBuilder(indent.Spaces())\r\n                                .Append(formatError(error)); \r\n                            text.AppendLine(line.ToString());\r\n                        })", span="412-420", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
n173 [label="var line = new StringBuilder(indent.Spaces())\r\n                                .Append(formatError(error))", span="417-418", cluster="lambda expression"];
n162 [label="return text.AppendIfNotEmpty(\r\n                formatMutuallyExclusiveSetErrors(\r\n                    meaningfulErrors.OfType<MutuallyExclusiveSetError>()))\r\n                .ToString();", span="422-425", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
n156 [label="throw new ArgumentNullException(''parserResult'');", span="404-404", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
n158 [label="meaningfulErrors.Empty()", span="408-408", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
n159 [label="return string.Empty;", span="409-409", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
n160 [label="var text = new StringBuilder()", span="411-411", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
n164 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()"];
n174 [label="text.AppendLine(line.ToString())", span="419-419", cluster="lambda expression"];
n165 [label="Entry Unk.Where", span="", cluster="Unk.Where"];
n166 [label="Entry Unk.ForEach", span="", cluster="Unk.ForEach"];
n169 [label="Entry lambda expression", span="413-413", cluster="lambda expression"];
n172 [label="Entry lambda expression", span="415-420", cluster="lambda expression"];
n163 [label="Exit CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="398-398", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
n167 [label="Entry System.Text.StringBuilder.AppendIfNotEmpty(params string[])", span="57-57", cluster="System.Text.StringBuilder.AppendIfNotEmpty(params string[])"];
n168 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()"];
n170 [label="e.Tag != ErrorType.MutuallyExclusiveSetError", span="413-413", cluster="lambda expression"];
n171 [label="Exit lambda expression", span="413-413", cluster="lambda expression"];
n176 [label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(string)"];
n177 [label="Entry int.Spaces()", span="30-30", cluster="int.Spaces()"];
n178 [label="Entry Unk.formatError", span="", cluster="Unk.formatError"];
n179 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)"];
n175 [label="Exit lambda expression", span="415-420", cluster="lambda expression"];
n180 [label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0", cluster="System.Text.StringBuilder.AppendLine(string)"];
n181 [label="int ExtraLength = 10", span="434-434", cluster="CommandLine.Text.HelpText.ToString()"];
n182 [label="return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="435-447", cluster="CommandLine.Text.HelpText.ToString()"];
n183 [label="Exit CommandLine.Text.HelpText.ToString()", span="432-432", cluster="CommandLine.Text.HelpText.ToString()"];
n184 [label="Entry string.SafeLength()", span="40-40", cluster="string.SafeLength()"];
n185 [label="Entry System.Text.StringBuilder.SafeLength()", span="73-73", cluster="System.Text.StringBuilder.SafeLength()"];
n186 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9", cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])"];
n187 [label="Entry System.Text.StringBuilder.SafeToString()", span="66-66", cluster="System.Text.StringBuilder.SafeToString()"];
n188 [label="return errors.Where(e => e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError);", span="452-452", cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)"];
n189 [label="Exit CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="450-450", cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)"];
n190 [label="Entry lambda expression", span="452-452", cluster="lambda expression"];
n191 [label="e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError", span="452-452", cluster="lambda expression"];
n192 [label="Exit lambda expression", span="452-452", cluster="lambda expression"];
n193 [label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="455-455", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n194 [label="builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="457-457", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n196 [label="var words = value.Split(' ')", span="461-461", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n199 [label="words[i].Length < (maximumLength - wordBuffer)", span="464-464", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n200 [label="builder.Append(words[i])", span="466-466", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n202 [label="(maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="468-468", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n203 [label="builder.Append('' '')", span="470-470", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n205 [label="words[i].Length >= maximumLength && wordBuffer == 0", span="474-474", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n206 [label="builder.Append(words[i].Substring(0, maximumLength))", span="476-476", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n207 [label="wordBuffer = maximumLength", span="477-477", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n209 [label="value = value.Substring(Math.Min(wordBuffer, value.Length))", span="483-483", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n210 [label="builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="484-484", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n211 [label="value.Length > maximumLength", span="486-486", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n212 [label="builder.Append(value)", span="488-488", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n195 [label="var wordBuffer = 0", span="460-460", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n201 [label="wordBuffer += words[i].Length", span="467-467", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n197 [label="var i = 0", span="462-462", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n214 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])"];
n198 [label="i < words.Length", span="462-462", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n208 [label="i++", span="462-462", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n204 [label="wordBuffer++", span="471-471", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n215 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)"];
n216 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)"];
n217 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)"];
n213 [label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="455-455", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n218 [label="var specs = type.GetSpecifications(Specification.FromProperty)", span="493-493", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)"];
n219 [label="var optionSpecs = specs\r\n                .OfType<OptionSpecification>()\r\n                .Concat(new[] { MakeHelpEntry(), MakeVersionEntry() })", span="494-496", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)"];
n223 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="17-17", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)"];
n220 [label="var valueSpecs = specs\r\n                .OfType<ValueSpecification>()\r\n                .OrderBy(v => v.Index)", span="497-499", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)"];
n224 [label="Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="554-554", cluster="CommandLine.Text.HelpText.MakeHelpEntry()"];
n225 [label="Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="564-564", cluster="CommandLine.Text.HelpText.MakeVersionEntry()"];
n226 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)"];
n221 [label="return Enumerable.Empty<Specification>()\r\n                .Concat(optionSpecs)\r\n                .Concat(valueSpecs);", span="500-502", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)"];
n227 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)"];
n228 [label="Entry lambda expression", span="499-499", cluster="lambda expression"];
n222 [label="Exit CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="491-491", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)"];
n229 [label="v.Index", span="499-499", cluster="lambda expression"];
n230 [label="Exit lambda expression", span="499-499", cluster="lambda expression"];
n231 [label="Entry CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="505-505", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)"];
n232 [label="return type.GetUsageData().Map(\r\n                tuple =>\r\n                {\r\n                    var prop = tuple.Item1;\r\n                    var attr = tuple.Item2;\r\n\r\n                    var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null);\r\n                    var groups = attr.Groups;\r\n\r\n                    return examples\r\n                        .Select(example => groups.ContainsKey(example.Group)\r\n                            ? example.WithGroupDescription(groups[example.Group])\r\n                            : example);\r\n                });", span="507-521", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", color=red, community=0];
n233 [label="Exit CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="505-505", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)"];
n234 [label="Entry System.Type.GetUsageData()", span="39-39", cluster="System.Type.GetUsageData()"];
n235 [label="Entry Unk.Map", span="", cluster="Unk.Map"];
n236 [label="Entry lambda expression", span="508-521", cluster="lambda expression"];
n237 [label="var prop = tuple.Item1", span="510-510", cluster="lambda expression"];
n238 [label="var attr = tuple.Item2", span="511-511", cluster="lambda expression"];
n239 [label="var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null)", span="513-514", cluster="lambda expression"];
n240 [label="var groups = attr.Groups", span="515-515", cluster="lambda expression"];
n243 [label="Entry System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)"];
n241 [label="return examples\r\n                        .Select(example => groups.ContainsKey(example.Group)\r\n                            ? example.WithGroupDescription(groups[example.Group])\r\n                            : example);", span="517-520", cluster="lambda expression", color=red, community=0];
n246 [label="groups.ContainsKey(example.Group)\r\n                            ? example.WithGroupDescription(groups[example.Group])\r\n                            : example", span="518-520", cluster="lambda expression", color=red, community=0];
n242 [label="Exit lambda expression", span="508-521", cluster="lambda expression"];
n244 [label="Entry Unk.Select", span="", cluster="Unk.Select"];
n245 [label="Entry lambda expression", span="518-520", cluster="lambda expression"];
n247 [label="Exit lambda expression", span="518-520", cluster="lambda expression"];
n248 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)"];
n249 [label="Entry CommandLine.Text.Example.WithGroupDescription(string)", span="117-117", cluster="CommandLine.Text.Example.WithGroupDescription(string)"];
n250 [label="return (from verbTuple in Verb.SelectFromTypes(types)\r\n                    select\r\n                        OptionSpecification.NewSwitch(\r\n                            string.Empty,\r\n                            verbTuple.Item1.Name,\r\n                            false,\r\n                            verbTuple.Item1.HelpText,\r\n                            string.Empty)).Concat(new[] { MakeHelpEntry(), MakeVersionEntry() });", span="526-533", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)"];
n251 [label="Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="524-524", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)"];
n252 [label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)"];
n253 [label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45", cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)"];
n254 [label="Entry Unk.Concat", span="", cluster="Unk.Concat"];
n255 [label="var maxLength = GetMaxLength(specifications)", span="541-541", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
n257 [label="var remainingSpace = maximumLength - (maxLength + 6)", span="545-545", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
n258 [label="specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="547-549", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
n263 [label="AddOption(requiredWord, maxLength, option, remainingSpace)", span="549-549", cluster="lambda expression"];
n256 [label="optionsHelp = new StringBuilder(BuilderCapacity)", span="543-543", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
n261 [label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="687-687", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)"];
n259 [label="return this;", span="551-551", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
n262 [label="Entry lambda expression", span="548-549", cluster="lambda expression"];
n260 [label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="536-536", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
n264 [label="Exit lambda expression", span="548-549", cluster="lambda expression"];
n265 [label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="581-581", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n266 [label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''help'',\r\n                false,\r\n                sentenceBuilder.HelpCommandText(AddDashesToOption),\r\n                string.Empty);", span="556-561", cluster="CommandLine.Text.HelpText.MakeHelpEntry()"];
n267 [label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="554-554", cluster="CommandLine.Text.HelpText.MakeHelpEntry()"];
n268 [label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''version'',\r\n                false,\r\n                sentenceBuilder.VersionCommandText(AddDashesToOption),\r\n                string.Empty);", span="566-571", cluster="CommandLine.Text.HelpText.MakeVersionEntry()"];
n269 [label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="564-564", cluster="CommandLine.Text.HelpText.MakeVersionEntry()"];
n270 [label="AddLine(preOptionsHelp, value, maximumLength)", span="576-576", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)"];
n271 [label="return this;", span="578-578", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)"];
n272 [label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="574-574", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)"];
n273 [label="optionsHelp.Append(''  '')", span="583-583", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n274 [label="var name = new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.Tag == SpecificationType.Option,\r\n                    it => it.Append(AddOptionName(maxLength, (OptionSpecification)specification)),\r\n                    it => it.Append(AddValueName(maxLength, (ValueSpecification)specification)))", span="584-588", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n310 [label="it.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="587-587", cluster="lambda expression"];
n314 [label="it.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="588-588", cluster="lambda expression"];
n275 [label="optionsHelp\r\n                .Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())\r\n                .Append(''    '')", span="590-592", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n276 [label="var optionHelpText = specification.HelpText", span="594-594", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n277 [label="addEnumValuesToHelpText && specification.EnumValues.Any()", span="596-596", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n278 [label="optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="597-597", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n279 [label="specification.DefaultValue.Do(\r\n                defaultValue => optionHelpText = ''(Default: {0}) ''.FormatLocal(defaultValue) + optionHelpText)", span="599-600", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n280 [label="specification.Required", span="602-602", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n281 [label="optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="603-603", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n287 [label="words[i].Length < (widthOfHelpText - wordBuffer)", span="613-613", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n290 [label="(widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="617-617", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n293 [label="words[i].Length >= widthOfHelpText && wordBuffer == 0", span="623-623", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n294 [label="optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="625-625", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n295 [label="wordBuffer = widthOfHelpText", span="626-626", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n298 [label="optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="634-635", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n299 [label="optionHelpText.Length > widthOfHelpText", span="637-637", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n303 [label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41", cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)"];
n309 [label="Entry lambda expression", span="587-587", cluster="lambda expression"];
n313 [label="Entry lambda expression", span="588-588", cluster="lambda expression"];
n304 [label="Entry string.PadRight(int)", span="0-0", cluster="string.PadRight(int)"];
n305 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)"];
n317 [label="Entry lambda expression", span="600-600", cluster="lambda expression"];
n318 [label="optionHelpText = ''(Default: {0}) ''.FormatLocal(defaultValue) + optionHelpText", span="600-600", cluster="lambda expression"];
n282 [label="!string.IsNullOrEmpty(optionHelpText)", span="605-605", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n284 [label="var words = optionHelpText.Split(' ')", span="610-610", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n297 [label="optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="633-633", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n300 [label="optionsHelp\r\n                .Append(optionHelpText)\r\n                .Append(Environment.NewLine)\r\n                .AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="640-643", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n306 [label="Entry string.FormatInvariant(params object[])", span="20-20", cluster="string.FormatInvariant(params object[])"];
n283 [label="var wordBuffer = 0", span="609-609", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n289 [label="wordBuffer += words[i].Length", span="616-616", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n285 [label="var i = 0", span="611-611", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n286 [label="i < words.Length", span="611-611", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n288 [label="optionsHelp.Append(words[i])", span="615-615", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n296 [label="i++", span="611-611", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n292 [label="wordBuffer++", span="620-620", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n291 [label="optionsHelp.Append('' '')", span="619-619", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n307 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()"];
n308 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)"];
n301 [label="return this;", span="645-645", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n302 [label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="581-581", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n311 [label="Exit lambda expression", span="587-587", cluster="lambda expression"];
n312 [label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="648-648", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)"];
n315 [label="Exit lambda expression", span="588-588", cluster="lambda expression"];
n316 [label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="668-668", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)"];
n319 [label="Exit lambda expression", span="600-600", cluster="lambda expression"];
n320 [label="Entry string.FormatLocal(params object[])", span="25-25", cluster="string.FormatLocal(params object[])"];
n321 [label="return\r\n                new StringBuilder(maxLength)\r\n                    .MapIf(\r\n                        specification.ShortName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', ''))\r\n                    .MapIf(\r\n                        specification.LongName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue))\r\n                    .ToString();", span="650-665", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)"];
n325 [label="it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', '')", span="654-658", cluster="lambda expression"];
n331 [label="it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="661-664", cluster="lambda expression"];
n322 [label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="648-648", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)"];
n323 [label="Entry System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49", cluster="System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)"];
n324 [label="Entry lambda expression", span="654-658", cluster="lambda expression"];
n330 [label="Entry lambda expression", span="661-664", cluster="lambda expression"];
n326 [label="Exit lambda expression", span="654-658", cluster="lambda expression"];
n327 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="18-18", cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])"];
n328 [label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object)"];
n329 [label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="27-27", cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])"];
n332 [label="Exit lambda expression", span="661-664", cluster="lambda expression"];
n333 [label="return new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.MetaName.Length > 0,\r\n                    it => it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index),\r\n                    it => it.AppendFormat(''value pos. {0}'', specification.Index))\r\n                .AppendFormatWhen(\r\n                    specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                .ToString();", span="670-677", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)"];
n336 [label="it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="673-673", cluster="lambda expression"];
n340 [label="it.AppendFormat(''value pos. {0}'', specification.Index)", span="674-674", cluster="lambda expression"];
n334 [label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="668-668", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)"];
n335 [label="Entry lambda expression", span="673-673", cluster="lambda expression"];
n339 [label="Entry lambda expression", span="674-674", cluster="lambda expression"];
n337 [label="Exit lambda expression", span="673-673", cluster="lambda expression"];
n338 [label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object, object)"];
n341 [label="Exit lambda expression", span="674-674", cluster="lambda expression"];
n342 [label="AddLine(builder, value, MaximumDisplayWidth)", span="682-682", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)"];
n343 [label="return this;", span="684-684", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)"];
n344 [label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="680-680", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)"];
n345 [label="return specifications.Aggregate(0,\r\n                (length, spec) =>\r\n                    {\r\n                        var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec);\r\n\r\n                        return Math.Max(length, specLength);\r\n                    });", span="689-697", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)"];
n346 [label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="687-687", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)"];
n347 [label="Entry Unk.Aggregate", span="", cluster="Unk.Aggregate"];
n348 [label="Entry lambda expression", span="690-697", cluster="lambda expression"];
n349 [label="var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec)", span="692-694", cluster="lambda expression"];
n350 [label="return Math.Max(length, specLength);", span="696-696", cluster="lambda expression"];
n352 [label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="701-701", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n353 [label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="736-736", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
n351 [label="Exit lambda expression", span="690-697", cluster="lambda expression"];
n354 [label="Entry System.Math.Max(int, int)", span="0-0", cluster="System.Math.Max(int, int)"];
n355 [label="var specLength = 0", span="703-703", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n356 [label="var hasShort = spec.ShortName.Length > 0", span="705-705", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n357 [label="var hasLong = spec.LongName.Length > 0", span="706-706", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n359 [label="spec.MetaValue.Length > 0", span="709-709", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n360 [label="metaLength = spec.MetaValue.Length + 1", span="710-710", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n367 [label="specLength += spec.LongName.Length", span="723-723", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n362 [label="++specLength", span="714-714", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n372 [label="specLength += 2", span="731-731", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n373 [label="return specLength;", span="733-733", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n361 [label=hasShort, span="712-712", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n371 [label="hasShort && hasLong", span="730-730", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n358 [label="var metaLength = 0", span="708-708", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n366 [label=hasLong, span="721-721", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n365 [label="specLength += metaLength", span="718-718", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n370 [label="specLength += metaLength", span="727-727", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n363 [label=AddDashesToOption, span="715-715", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n364 [label="++specLength", span="716-716", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n368 [label=AddDashesToOption, span="724-724", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n369 [label="specLength += 2", span="725-725", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n374 [label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="701-701", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n375 [label="var specLength = 0", span="738-738", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
n376 [label="var hasMeta = spec.MetaName.Length > 0", span="740-740", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
n378 [label="spec.MetaValue.Length > 0", span="743-743", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
n379 [label="metaLength = spec.MetaValue.Length + 1", span="744-744", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
n381 [label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="747-747", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
n382 [label="specLength += spec.Index.ToStringInvariant().Length + 11", span="749-749", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
n377 [label="var metaLength = 0", span="742-742", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
n380 [label=hasMeta, span="746-746", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
n383 [label="specLength += metaLength", span="751-751", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
n386 [label="Entry T.ToStringInvariant<T>()", span="15-15", cluster="T.ToStringInvariant<T>()"];
n384 [label="return specLength;", span="753-753", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
n385 [label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="736-736", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
d34 [label="(verbsIndex && parserResult.TypeInfo.Choices.Any()) || errors.Any(e => e.Tag == ErrorType.NoVerbSelectedError)", span="225-225", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", color=green, community=0];
d46 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()"];
d36 [label="auto.AddVerbs(parserResult.TypeInfo.Choices.ToArray())", span="228-228", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", color=green, community=0];
d58 [label="e.Tag == ErrorType.NoVerbSelectedError", span="225-225", cluster="lambda expression", color=green, community=0];
d131 [label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="336-339", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", color=green, community=0];
d133 [label="Entry Unk.GetSpecificationsFromType", span="", cluster="Unk.GetSpecificationsFromType"];
d134 [label="Entry Unk.AddOptionsImpl", span="", cluster="Unk.AddOptionsImpl"];
d146 [label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="369-372", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", color=green, community=0];
d243 [label="return type.GetUsageData().Map(\r\n                tuple =>\r\n                {\r\n                    var prop = tuple.Item1;\r\n                    var attr = tuple.Item2;\r\n\r\n                    var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null);\r\n                    var groups = attr.Groups;\r\n\r\n                    return examples.Select(example => groups.ContainsKey(example.Group)\r\n                        ? example.WithGroupDescription(groups[example.Group])\r\n                        : example)\r\n                            .OrderBy(x => x.Group)\r\n                            .ThenBy(x => x.GroupDescription)\r\n                        .Memorize();\r\n                });", span="536-552", cluster="<invalid-global-code>.GetUsageFromType(System.Type)", color=green, community=0];
d242 [label="Entry <invalid-global-code>.GetUsageFromType(System.Type)", span="534-534", cluster="<invalid-global-code>.GetUsageFromType(System.Type)"];
d244 [label="Exit <invalid-global-code>.GetUsageFromType(System.Type)", span="534-534", cluster="<invalid-global-code>.GetUsageFromType(System.Type)"];
d252 [label="return examples.Select(example => groups.ContainsKey(example.Group)\r\n                        ? example.WithGroupDescription(groups[example.Group])\r\n                        : example)\r\n                            .OrderBy(x => x.Group)\r\n                            .ThenBy(x => x.GroupDescription)\r\n                        .Memorize();", span="546-551", cluster="lambda expression", color=green, community=0];
d256 [label="Entry Unk.OrderBy", span="", cluster="Unk.OrderBy"];
d257 [label="Entry Unk.ThenBy", span="", cluster="Unk.ThenBy"];
d258 [label="Entry Unk.Memorize", span="", cluster="Unk.Memorize"];
d264 [label="Entry lambda expression", span="549-549", cluster="lambda expression"];
d267 [label="Entry lambda expression", span="550-550", cluster="lambda expression"];
d306 [label="addEnumValuesToHelpText && specification.EnumValues.Any()", span="627-627", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d139 [label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="353-356", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])"];
d153 [label="return AddOptionsImpl(AdaptVerbsToSpecifications(types), SentenceBuilder.RequiredWord(), maximumLength);", span="387-387", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])"];
d266 [label="Exit lambda expression", span="549-549", cluster="lambda expression"];
d265 [label="x.Group", span="549-549", cluster="lambda expression"];
d269 [label="Exit lambda expression", span="550-550", cluster="lambda expression"];
d268 [label="x.GroupDescription", span="550-550", cluster="lambda expression"];
d301 [label="Entry <invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)", span="612-612", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d305 [label="var optionHelpText = specification.HelpText", span="625-625", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d307 [label="optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="628-628", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d308 [label="specification.DefaultValue.Do(\r\n                defaultValue => optionHelpText = ''(Default: {0}) ''.FormatLocal(defaultValue) + optionHelpText)", span="630-631", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d142 [label="Entry Unk.AdaptVerbsToSpecifications", span="", cluster="Unk.AdaptVerbsToSpecifications"];
d312 [label="var wordBuffer = 0", span="640-640", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d331 [label="Exit <invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)", span="612-612", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d302 [label="optionsHelp.Append(''  '')", span="614-614", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d303 [label="var name = new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.Tag == SpecificationType.Option,\r\n                    it => it.Append(AddOptionName(maxLength, (OptionSpecification)specification)),\r\n                    it => it.Append(AddValueName(maxLength, (ValueSpecification)specification)))", span="615-619", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d340 [label="it.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="618-618", cluster="lambda expression"];
d344 [label="it.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="619-619", cluster="lambda expression"];
d304 [label="optionsHelp\r\n                .Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())\r\n                .Append(''    '')", span="621-623", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d309 [label="specification.Required", span="633-633", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d310 [label="optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="634-634", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d316 [label="words[i].Length < (widthOfHelpText - wordBuffer)", span="644-644", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d319 [label="(widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="648-648", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d322 [label="words[i].Length >= widthOfHelpText && wordBuffer == 0", span="654-654", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d323 [label="optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="656-656", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d324 [label="wordBuffer = widthOfHelpText", span="657-657", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d327 [label="optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="665-666", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d328 [label="optionHelpText.Length > widthOfHelpText", span="668-668", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d311 [label="!string.IsNullOrEmpty(optionHelpText)", span="636-636", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d313 [label="var words = optionHelpText.Split(' ')", span="641-641", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d326 [label="optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="664-664", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d329 [label="optionsHelp\r\n                .Append(optionHelpText)\r\n                .Append(Environment.NewLine)\r\n                .AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="671-674", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d318 [label="wordBuffer += words[i].Length", span="647-647", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d330 [label="return this;", span="676-676", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d191 [label="Entry Unk.Append", span="", cluster="Unk.Append"];
d24 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)"];
d332 [label="Entry Unk.BimapIf", span="", cluster="Unk.BimapIf"];
d342 [label="Entry Unk.AddOptionName", span="", cluster="Unk.AddOptionName"];
d346 [label="Entry Unk.AddValueName", span="", cluster="Unk.AddValueName"];
d334 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Append<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Append<TSource>(TSource)"];
d314 [label="var i = 0", span="642-642", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d315 [label="i < words.Length", span="642-642", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d317 [label="optionsHelp.Append(words[i])", span="646-646", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d320 [label="optionsHelp.Append('' '')", span="650-650", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d325 [label="i++", span="642-642", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d193 [label="Entry Unk.AppendWhen", span="", cluster="Unk.AppendWhen"];
d110 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
d321 [label="wordBuffer++", span="651-651", cluster="<invalid-global-code>.AddOption(string, int, CommandLine.Core.Specification, int)"];
d432 [label=<invalid-global-code>, span=""];
d187 [label="return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="464-476", cluster="<invalid-global-code>.ToString()"];
d352 [label="return\r\n                new StringBuilder(maxLength)\r\n                    .MapIf(\r\n                        specification.ShortName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', ''))\r\n                    .MapIf(\r\n                        specification.LongName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue))\r\n                    .ToString();", span="681-696", cluster="<invalid-global-code>.AddOptionName(int, CommandLine.Core.OptionSpecification)"];
d364 [label="return new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.MetaName.Length > 0,\r\n                    it => it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index),\r\n                    it => it.AppendFormat(''value pos. {0}'', specification.Index))\r\n                .AppendFormatWhen(\r\n                    specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                .ToString();", span="701-708", cluster="<invalid-global-code>.AddValueName(int, CommandLine.Core.ValueSpecification)"];
d356 [label="it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', '')", span="685-689", cluster="lambda expression"];
d361 [label="it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="692-695", cluster="lambda expression"];
d281 [label="return this;", span="582-582", cluster="<invalid-global-code>.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
d299 [label="return this;", span="609-609", cluster="<invalid-global-code>.AddPreOptionsLine(string, int)"];
d376 [label="return this;", span="715-715", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string)"];
d186 [label="int ExtraLength = 10", span="463-463", cluster="<invalid-global-code>.ToString()"];
d188 [label="Exit <invalid-global-code>.ToString()", span="461-461", cluster="<invalid-global-code>.ToString()"];
d189 [label="Entry StringBuilder.cstr", span="", cluster="StringBuilder.cstr"];
d190 [label="Entry Unk.SafeLength", span="", cluster="Unk.SafeLength"];
d192 [label="Entry Unk.IsNullOrEmpty", span="", cluster="Unk.IsNullOrEmpty"];
d194 [label="Entry Unk.ToString", span="", cluster="Unk.ToString"];
d195 [label="Entry Unk.SafeToString", span="", cluster="Unk.SafeToString"];
d351 [label="Entry <invalid-global-code>.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="679-679", cluster="<invalid-global-code>.AddOptionName(int, CommandLine.Core.OptionSpecification)"];
d353 [label="Exit <invalid-global-code>.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="679-679", cluster="<invalid-global-code>.AddOptionName(int, CommandLine.Core.OptionSpecification)"];
d354 [label="Entry Unk.MapIf", span="", cluster="Unk.MapIf"];
d363 [label="Entry <invalid-global-code>.AddValueName(int, CommandLine.Core.ValueSpecification)", span="699-699", cluster="<invalid-global-code>.AddValueName(int, CommandLine.Core.ValueSpecification)"];
d365 [label="Exit <invalid-global-code>.AddValueName(int, CommandLine.Core.ValueSpecification)", span="699-699", cluster="<invalid-global-code>.AddValueName(int, CommandLine.Core.ValueSpecification)"];
d366 [label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41", cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)"];
d223 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9", cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])"];
d280 [label="specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="578-580", cluster="<invalid-global-code>.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
d282 [label="Exit <invalid-global-code>.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="567-567", cluster="<invalid-global-code>.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
d298 [label="AddLine(preOptionsHelp, value, maximumLength)", span="607-607", cluster="<invalid-global-code>.AddPreOptionsLine(string, int)"];
d300 [label="Exit <invalid-global-code>.AddPreOptionsLine(string, int)", span="605-605", cluster="<invalid-global-code>.AddPreOptionsLine(string, int)"];
d375 [label="AddLine(builder, value, MaximumDisplayWidth)", span="713-713", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string)"];
d377 [label="Exit <invalid-global-code>.AddLine(System.Text.StringBuilder, string)", span="711-711", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string)"];
d185 [label="Entry <invalid-global-code>.ToString()", span="461-461", cluster="<invalid-global-code>.ToString()"];
d278 [label="optionsHelp = new StringBuilder(BuilderCapacity)", span="574-574", cluster="<invalid-global-code>.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
d368 [label="it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="704-704", cluster="lambda expression"];
d372 [label="it.AppendFormat(''value pos. {0}'', specification.Index)", span="705-705", cluster="lambda expression"];
d203 [label="builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="486-486", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)"];
d219 [label="builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="513-513", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)"];
d276 [label="Entry <invalid-global-code>.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="567-567", cluster="<invalid-global-code>.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
d277 [label="var maxLength = GetMaxLength(specifications)", span="572-572", cluster="<invalid-global-code>.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
d279 [label="var remainingSpace = maximumLength - (maxLength + 6)", span="576-576", cluster="<invalid-global-code>.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
d297 [label="Entry <invalid-global-code>.AddPreOptionsLine(string, int)", span="605-605", cluster="<invalid-global-code>.AddPreOptionsLine(string, int)"];
d128 [label="Entry Unk.AddLine", span="", cluster="Unk.AddLine"];
d374 [label="Entry <invalid-global-code>.AddLine(System.Text.StringBuilder, string)", span="711-711", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string)"];
d202 [label="Entry <invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)", span="484-484", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)"];
d220 [label="value.Length > maximumLength", span="515-515", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)"];
d204 [label="var wordBuffer = 0", span="489-489", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)"];
d218 [label="value = value.Substring(Math.Min(wordBuffer, value.Length))", span="512-512", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)"];
d285 [label="AddOption(requiredWord, maxLength, option, remainingSpace)", span="580-580", cluster="lambda expression"];
d283 [label="Entry Unk.GetMaxLength", span="", cluster="Unk.GetMaxLength"];
d126 [label="return AddLine(postOptionsHelp, value);", span="323-323", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)"];
d222 [label="Exit <invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)", span="484-484", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)"];
d205 [label="var words = value.Split(' ')", span="490-490", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)"];
d208 [label="words[i].Length < (maximumLength - wordBuffer)", span="493-493", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)"];
d209 [label="builder.Append(words[i])", span="495-495", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)"];
d211 [label="(maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="497-497", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)"];
d212 [label="builder.Append('' '')", span="499-499", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)"];
d214 [label="words[i].Length >= maximumLength && wordBuffer == 0", span="503-503", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)"];
d215 [label="builder.Append(words[i].Substring(0, maximumLength))", span="505-505", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)"];
d216 [label="wordBuffer = maximumLength", span="506-506", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)"];
d221 [label="builder.Append(value)", span="517-517", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)"];
d210 [label="wordBuffer += words[i].Length", span="496-496", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)"];
d207 [label="i < words.Length", span="491-491", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)"];
d213 [label="wordBuffer++", span="500-500", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)"];
d287 [label="Entry Unk.AddOption", span="", cluster="Unk.AddOption"];
d206 [label="var i = 0", span="491-491", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)"];
d181 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)"];
d217 [label="i++", span="491-491", cluster="<invalid-global-code>.AddLine(System.Text.StringBuilder, string, int)"];
m0_4 [label="Entry CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", span="36-36", cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="ParserResult.cs"];
m0_31 [label="var result = ChangeTypeScalarImpl(value, conversionType, conversionCulture)", span="38-38", cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="ParserResult.cs"];
m0_32 [label="result.Match(_ => { }, e => e.RethrowWhenAbsentIn(\r\n                new[] { typeof(InvalidCastException), typeof(FormatException), typeof(OverflowException) }))", span="39-40", cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="ParserResult.cs"];
m0_33 [label="return Maybe.OfEither(result);", span="41-41", cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="ParserResult.cs"];
m0_34 [label="Exit CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", span="36-36", cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="ParserResult.cs"];
m0_35 [label="Entry CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", span="44-44", cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", file="ParserResult.cs"];
m0_44 [label="Func<string, object> changeType = input =>\r\n            {\r\n                Func<object> safeChangeType = () =>\r\n                {\r\n                    var isFsOption = ReflectionHelper.IsFSharpOptionType(conversionType);\r\n\r\n                    Func<Type> getUnderlyingType =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType);\r\n\r\n                    var type = getUnderlyingType() ?? conversionType;\r\n\r\n                    Func<object> withValue =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(input, type, conversionCulture))\r\n                                : Convert.ChangeType(input, type, conversionCulture);\r\n\r\n                    Func<object> empty = () => isFsOption ? FSharpOptionHelper.None(type) : null;\r\n\r\n                    return (input == null) ? empty() : withValue();\r\n                };\r\n\r\n                return input.IsBooleanString()\r\n                    ? input.ToBoolean() : conversionType.IsEnum\r\n                        ? input.ToEnum(conversionType) : safeChangeType();\r\n            }", span="46-74", cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", file="ParserResult.cs"];
m0_45 [label="Func<string, object> makeType = input =>\r\n            {\r\n                try\r\n                {\r\n                    var ctor = conversionType.GetConstructor(new[] { typeof(string) });\r\n                    return ctor.Invoke(new object[] { input });\r\n                }\r\n                catch (Exception)\r\n                {\r\n                    throw new FormatException(''Destination conversion type must have a constructor that accepts a string.'');\r\n                }\r\n            }", span="76-87", cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", file="ParserResult.cs"];
m0_46 [label="return Either.Protect(\r\n                conversionType.IsPrimitiveEx() || ReflectionHelper.IsFSharpOptionType(conversionType)\r\n                    ? changeType\r\n                    : makeType, value);", span="89-92", cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", file="ParserResult.cs"];
m0_47 [label="Exit CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", span="44-44", cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", file="ParserResult.cs"];
m0_0 [label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="13-13", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="ParserResult.cs"];
m0_1 [label="return scalar\r\n                ? ChangeTypeScalar(values.Single(), conversionType, conversionCulture)\r\n                : ChangeTypeSequence(values, conversionType, conversionCulture);", span="15-17", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", color=red, community=0, file="ParserResult.cs"];
m0_2 [label="Exit CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="13-13", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="ParserResult.cs"];
m0_101 [label="Entry System.Enum.IsDefined(System.Type, object)", span="0-0", cluster="System.Enum.IsDefined(System.Type, object)", file="ParserResult.cs"];
m0_13 [label="Entry System.ApplicationException.ApplicationException(string)", span="0-0", cluster="System.ApplicationException.ApplicationException(string)", file="ParserResult.cs"];
m0_76 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="14-14", cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="ParserResult.cs"];
m0_70 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", span="8-8", cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="ParserResult.cs"];
m0_71 [label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0", cluster="System.Nullable.GetUnderlyingType(System.Type)", file="ParserResult.cs"];
m0_99 [label="Entry System.Enum.Parse(System.Type, string)", span="0-0", cluster="System.Enum.Parse(System.Type, string)", file="ParserResult.cs"];
m0_12 [label="Entry T.ToMaybe<T>()", span="249-249", cluster="T.ToMaybe<T>()", file="ParserResult.cs"];
m0_19 [label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124", cluster="CSharpx.Maybe.Just<T>(T)", file="ParserResult.cs"];
m0_58 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="ParserResult.cs"];
m0_81 [label="Entry lambda expression", span="76-87", cluster="lambda expression", file="ParserResult.cs"];
m0_21 [label="ChangeTypeScalar(value, type, conversionCulture)", span="29-29", cluster="lambda expression", file="ParserResult.cs"];
m0_20 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="ParserResult.cs"];
m0_24 [label="Entry lambda expression", span="31-31", cluster="lambda expression", file="ParserResult.cs"];
m0_28 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="ParserResult.cs"];
m0_22 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="ParserResult.cs"];
m0_25 [label="a.MatchNothing()", span="31-31", cluster="lambda expression", file="ParserResult.cs"];
m0_26 [label="Exit lambda expression", span="31-31", cluster="lambda expression", file="ParserResult.cs"];
m0_29 [label="((Just<object>)c).Value", span="33-33", cluster="lambda expression", file="ParserResult.cs"];
m0_30 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="ParserResult.cs"];
m0_38 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="ParserResult.cs"];
m0_40 [label="Entry lambda expression", span="39-40", cluster="lambda expression", file="ParserResult.cs"];
m0_39 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="ParserResult.cs"];
m0_41 [label="e.RethrowWhenAbsentIn(\r\n                new[] { typeof(InvalidCastException), typeof(FormatException), typeof(OverflowException) })", span="39-40", cluster="lambda expression", file="ParserResult.cs"];
m0_42 [label="Exit lambda expression", span="39-40", cluster="lambda expression", file="ParserResult.cs"];
m0_52 [label="Func<object> safeChangeType = () =>\r\n                {\r\n                    var isFsOption = ReflectionHelper.IsFSharpOptionType(conversionType);\r\n\r\n                    Func<Type> getUnderlyingType =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType);\r\n\r\n                    var type = getUnderlyingType() ?? conversionType;\r\n\r\n                    Func<object> withValue =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(input, type, conversionCulture))\r\n                                : Convert.ChangeType(input, type, conversionCulture);\r\n\r\n                    Func<object> empty = () => isFsOption ? FSharpOptionHelper.None(type) : null;\r\n\r\n                    return (input == null) ? empty() : withValue();\r\n                }", span="48-69", cluster="lambda expression", file="ParserResult.cs"];
m0_60 [label="var isFsOption = ReflectionHelper.IsFSharpOptionType(conversionType)", span="50-50", cluster="lambda expression", file="ParserResult.cs"];
m0_61 [label="Func<Type> getUnderlyingType =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType)", span="52-56", cluster="lambda expression", file="ParserResult.cs"];
m0_68 [label="isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType)", span="54-56", cluster="lambda expression", file="ParserResult.cs"];
m0_62 [label="var type = getUnderlyingType() ?? conversionType", span="58-58", cluster="lambda expression", file="ParserResult.cs"];
m0_63 [label="Func<object> withValue =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(input, type, conversionCulture))\r\n                                : Convert.ChangeType(input, type, conversionCulture)", span="60-64", cluster="lambda expression", file="ParserResult.cs"];
m0_73 [label="isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(input, type, conversionCulture))\r\n                                : Convert.ChangeType(input, type, conversionCulture)", span="62-64", cluster="lambda expression", file="ParserResult.cs"];
m0_53 [label="return input.IsBooleanString()\r\n                    ? input.ToBoolean() : conversionType.IsEnum\r\n                        ? input.ToEnum(conversionType) : safeChangeType();", span="71-73", cluster="lambda expression", file="ParserResult.cs"];
m0_82 [label="var ctor = conversionType.GetConstructor(new[] { typeof(string) })", span="80-80", cluster="lambda expression", file="ParserResult.cs"];
m0_65 [label="return (input == null) ? empty() : withValue();", span="68-68", cluster="lambda expression", file="ParserResult.cs"];
m0_83 [label="return ctor.Invoke(new object[] { input });", span="81-81", cluster="lambda expression", file="ParserResult.cs"];
m0_51 [label="Entry lambda expression", span="46-74", cluster="lambda expression", file="ParserResult.cs"];
m0_54 [label="Exit lambda expression", span="46-74", cluster="lambda expression", file="ParserResult.cs"];
m0_59 [label="Entry lambda expression", span="48-69", cluster="lambda expression", file="ParserResult.cs"];
m0_64 [label="Func<object> empty = () => isFsOption ? FSharpOptionHelper.None(type) : null", span="66-66", cluster="lambda expression", file="ParserResult.cs"];
m0_78 [label="isFsOption ? FSharpOptionHelper.None(type) : null", span="66-66", cluster="lambda expression", file="ParserResult.cs"];
m0_66 [label="Exit lambda expression", span="48-69", cluster="lambda expression", file="ParserResult.cs"];
m0_67 [label="Entry lambda expression", span="53-56", cluster="lambda expression", file="ParserResult.cs"];
m0_69 [label="Exit lambda expression", span="53-56", cluster="lambda expression", file="ParserResult.cs"];
m0_72 [label="Entry lambda expression", span="61-64", cluster="lambda expression", file="ParserResult.cs"];
m0_74 [label="Exit lambda expression", span="61-64", cluster="lambda expression", file="ParserResult.cs"];
m0_77 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="ParserResult.cs"];
m0_79 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="ParserResult.cs"];
m0_84 [label=Exception, span="83-83", cluster="lambda expression", file="ParserResult.cs"];
m0_85 [label="throw new FormatException(''Destination conversion type must have a constructor that accepts a string.'');", span="85-85", cluster="lambda expression", file="ParserResult.cs"];
m0_86 [label="Exit lambda expression", span="76-87", cluster="lambda expression", file="ParserResult.cs"];
m0_43 [label="Entry Unk.RethrowWhenAbsentIn", span="", cluster="Unk.RethrowWhenAbsentIn", file="ParserResult.cs"];
m0_75 [label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0", cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="ParserResult.cs"];
m0_3 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="ParserResult.cs"];
m0_57 [label="Entry string.ToEnum(System.Type)", span="95-95", cluster="string.ToEnum(System.Type)", file="ParserResult.cs"];
m0_49 [label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35", cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="ParserResult.cs"];
m0_48 [label="Entry System.Type.IsPrimitiveEx()", span="209-209", cluster="System.Type.IsPrimitiveEx()", file="ParserResult.cs"];
m0_5 [label="Entry CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", span="20-20", cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="ParserResult.cs"];
m0_6 [label="var type =\r\n                conversionType.GetGenericArguments()\r\n                              .SingleOrDefault()\r\n                              .ToMaybe()\r\n                              .FromJust(\r\n                                  new ApplicationException(''Non scalar properties should be sequence of type IEnumerable<T>.''))", span="22-27", cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", color=red, community=0, file="ParserResult.cs"];
m0_7 [label="var converted = values.Select(value => ChangeTypeScalar(value, type, conversionCulture))", span="29-29", cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="ParserResult.cs"];
m0_8 [label="return converted.Any(a => a.MatchNothing())\r\n                ? Maybe.Nothing<object>()\r\n                : Maybe.Just(converted.Select(c => ((Just<object>)c).Value).ToUntypedArray(type));", span="31-33", cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="ParserResult.cs"];
m0_9 [label="Exit CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", span="20-20", cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="ParserResult.cs"];
m0_15 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ParserResult.cs"];
m0_23 [label="Entry Unk.ChangeTypeScalar", span="", cluster="Unk.ChangeTypeScalar", file="ParserResult.cs"];
m0_37 [label="Entry Unk.OfEither", span="", cluster="Unk.OfEither", file="ParserResult.cs"];
m0_36 [label="Entry Unk.Match", span="", cluster="Unk.Match", file="ParserResult.cs"];
m0_10 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="ParserResult.cs"];
m0_50 [label="Entry Unk.Protect", span="", cluster="Unk.Protect", file="ParserResult.cs"];
m0_56 [label="Entry string.ToBoolean()", span="66-66", cluster="string.ToBoolean()", file="ParserResult.cs"];
m0_89 [label="Entry System.FormatException.FormatException(string)", span="0-0", cluster="System.FormatException.FormatException(string)", file="ParserResult.cs"];
m0_87 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])", file="ParserResult.cs"];
m0_17 [label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116", cluster="CSharpx.Maybe.Nothing<T>()", file="ParserResult.cs"];
m0_14 [label="Entry Unk.FromJust", span="", cluster="Unk.FromJust", file="ParserResult.cs"];
m0_90 [label="Entry CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", span="95-95", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="ParserResult.cs"];
m0_91 [label="object parsedValue", span="97-97", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="ParserResult.cs"];
m0_92 [label="parsedValue = Enum.Parse(conversionType, value)", span="100-100", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="ParserResult.cs"];
m0_95 [label="Enum.IsDefined(conversionType, parsedValue)", span="106-106", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="ParserResult.cs"];
m0_93 [label=ArgumentException, span="102-102", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="ParserResult.cs"];
m0_96 [label="return parsedValue;", span="108-108", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="ParserResult.cs"];
m0_94 [label="throw new FormatException();", span="104-104", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="ParserResult.cs"];
m0_97 [label="throw new FormatException();", span="110-110", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="ParserResult.cs"];
m0_98 [label="Exit CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", span="95-95", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="ParserResult.cs"];
m0_55 [label="Entry string.IsBooleanString()", span="60-60", cluster="string.IsBooleanString()", file="ParserResult.cs"];
m0_27 [label="Entry Unk.MatchNothing", span="", cluster="Unk.MatchNothing", file="ParserResult.cs"];
m0_88 [label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0", cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="ParserResult.cs"];
m0_18 [label="Entry Unk.ToUntypedArray", span="", cluster="Unk.ToUntypedArray", file="ParserResult.cs"];
m0_100 [label="Entry System.FormatException.FormatException()", span="0-0", cluster="System.FormatException.FormatException()", file="ParserResult.cs"];
m0_80 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="22-22", cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="ParserResult.cs"];
m0_11 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="ParserResult.cs"];
m0_102 [label="System.Globalization.CultureInfo", span="", file="ParserResult.cs"];
m0_103 [label=type, span="", file="ParserResult.cs"];
m0_104 [label="System.Type", span="", file="ParserResult.cs"];
m0_105 [label="System.Globalization.CultureInfo", span="", file="ParserResult.cs"];
m0_106 [label=string, span="", file="ParserResult.cs"];
m0_107 [label=isFsOption, span="", file="ParserResult.cs"];
m0_108 [label=type, span="", file="ParserResult.cs"];
n387 -> n17  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n18  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n122  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n126  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n131  [key=1, style=dashed, color=red, label="CommandLine.Text.HelpText"];
n387 -> n139  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n146  [key=1, style=dashed, color=red, label="CommandLine.Text.HelpText"];
n387 -> n153  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n182  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n219  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n250  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n255  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n256  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n258  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n263  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n259  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n266  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n268  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n270  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n271  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n273  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n274  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n310  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n314  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n275  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n277  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n288  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n291  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n294  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n298  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n300  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n301  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n321  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n325  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n331  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n342  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n343  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n345  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n349  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n363  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> n368  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> d131  [key=1, style=dashed, color=green, label="CommandLine.Text.HelpText"];
n387 -> d146  [key=1, style=dashed, color=green, label="CommandLine.Text.HelpText"];
n387 -> d139  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> d153  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n387 -> d126  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n388 -> n51  [key=1, style=dashed, color=darkseagreen4, label=auto];
n388 -> n55  [key=1, style=dashed, color=darkseagreen4, label=auto];
n389 -> n85  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n389 -> n92  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n390 -> n89  [key=1, style=dashed, color=darkseagreen4, label=pr];
n391 -> n116  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n392 -> n173  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Error, string>"];
n393 -> n173  [key=1, style=dashed, color=darkseagreen4, label=int];
n394 -> n174  [key=1, style=dashed, color=darkseagreen4, label=text];
n395 -> n246  [key=1, style=dashed, color=red, label=groups];
n396 -> n263  [key=1, style=dashed, color=darkseagreen4, label=string];
n396 -> d285  [key=1, style=dashed, color=darkseagreen4, label=string];
n397 -> n263  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
n397 -> d285  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
n398 -> n263  [key=1, style=dashed, color=darkseagreen4, label=remainingSpace];
n398 -> d285  [key=1, style=dashed, color=darkseagreen4, label=remainingSpace];
n399 -> n310  [key=1, style=dashed, color=darkseagreen4, label=int];
n399 -> n314  [key=1, style=dashed, color=darkseagreen4, label=int];
n399 -> d340  [key=1, style=dashed, color=darkseagreen4, label=int];
n399 -> d344  [key=1, style=dashed, color=darkseagreen4, label=int];
n400 -> n310  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
n400 -> n314  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
n400 -> d340  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
n400 -> d344  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
n401 -> n318  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n402 -> n325  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
n402 -> n331  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
n402 -> d356  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
n402 -> d361  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
n403 -> n336  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
n403 -> n340  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
n403 -> d368  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
n403 -> d372  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
n2 -> n3  [key=0, style=solid];
n3 -> n2  [key=0, style=bold, color=blue];
n4 -> n5  [key=0, style=solid];
n5 -> n4  [key=0, style=bold, color=blue];
n6 -> n7  [key=0, style=solid];
n7 -> n6  [key=0, style=bold, color=blue];
n8 -> n9  [key=0, style=solid];
n9 -> n8  [key=0, style=bold, color=blue];
n10 -> n11  [key=0, style=solid];
n10 -> n13  [key=1, style=dashed, color=darkseagreen4, label=string];
n10 -> n15  [key=1, style=dashed, color=darkseagreen4, label=string];
n10 -> n19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.SentenceBuilder"];
n10 -> n20  [key=1, style=dashed, color=darkseagreen4, label=string];
n10 -> n21  [key=1, style=dashed, color=darkseagreen4, label=string];
n11 -> n12  [key=0, style=solid];
n11 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n12 -> n22  [key=0, style=solid];
n12 -> n23  [key=2, style=dotted];
n14 -> n22  [key=0, style=solid];
n14 -> n23  [key=2, style=dotted];
n16 -> n22  [key=0, style=solid];
n16 -> n23  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n24  [key=2, style=dotted];
n17 -> d24  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n18 -> n24  [key=2, style=dotted];
n18 -> d24  [key=2, style=dotted];
n22 -> n10  [key=0, style=bold, color=blue];
n25 -> n26  [key=0, style=solid];
n25 -> n28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n25 -> n29  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n25 -> n31  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>"];
n25 -> n34  [key=1, style=dashed, color=red, label="CommandLine.ParserResult<T>"];
n25 -> n36  [key=1, style=dashed, color=red, label="CommandLine.ParserResult<T>"];
n25 -> n37  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n25 -> d34  [key=1, style=dashed, color=green, label="CommandLine.ParserResult<T>"];
n25 -> d36  [key=1, style=dashed, color=green, label="CommandLine.ParserResult<T>"];
n26 -> n27  [key=0, style=solid];
n26 -> n0  [key=2, style=dotted];
n26 -> n31  [key=1, style=dashed, color=darkseagreen4, label=auto];
n26 -> n32  [key=1, style=dashed, color=darkseagreen4, label=auto];
n26 -> n51  [key=1, style=dashed, color=darkseagreen4, label=auto];
n26 -> n33  [key=1, style=dashed, color=darkseagreen4, label=auto];
n26 -> n55  [key=1, style=dashed, color=darkseagreen4, label=auto];
n26 -> n35  [key=1, style=dashed, color=darkseagreen4, label=auto];
n26 -> n36  [key=1, style=dashed, color=red, label=auto];
n26 -> n37  [key=1, style=dashed, color=darkseagreen4, label=auto];
n26 -> n38  [key=1, style=dashed, color=darkseagreen4, label=auto];
n26 -> d36  [key=1, style=dashed, color=green, label=auto];
n28 -> n29  [key=0, style=solid];
n28 -> n32  [key=0, style=solid];
n29 -> n30  [key=0, style=solid];
n29 -> n34  [key=1, style=dashed, color=red, label=errors];
n29 -> d34  [key=1, style=dashed, color=green, label=errors];
n31 -> n32  [key=0, style=solid];
n31 -> n43  [key=2, style=dotted];
n31 -> n31  [key=1, style=dashed, color=darkseagreen4, label=auto];
n31 -> n51  [key=1, style=dashed, color=darkseagreen4, label=auto];
n31 -> n33  [key=1, style=dashed, color=darkseagreen4, label=auto];
n31 -> n55  [key=1, style=dashed, color=darkseagreen4, label=auto];
n31 -> n35  [key=1, style=dashed, color=darkseagreen4, label=auto];
n31 -> n36  [key=1, style=dashed, color=red, label=auto];
n31 -> n37  [key=1, style=dashed, color=darkseagreen4, label=auto];
n31 -> n38  [key=1, style=dashed, color=darkseagreen4, label=auto];
n31 -> d36  [key=1, style=dashed, color=green, label=auto];
n34 -> n35  [key=0, style=solid, color=red];
n34 -> n37  [key=0, style=solid, color=red];
n34 -> n42  [key=2, style=dotted, color=red];
n34 -> n46  [key=2, style=dotted, color=red];
n34 -> n57  [key=1, style=dashed, color=red, label="lambda expression"];
n36 -> n38  [key=0, style=solid, color=red];
n36 -> n47  [key=2, style=dotted, color=red];
n36 -> n48  [key=2, style=dotted, color=red];
n37 -> n38  [key=0, style=solid];
n37 -> n49  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n40  [key=2, style=dotted];
n27 -> n34  [key=1, style=dashed, color=red, label=errors];
n27 -> d34  [key=1, style=dashed, color=green, label=errors];
n32 -> n33  [key=0, style=solid];
n32 -> n44  [key=2, style=dotted];
n32 -> n45  [key=2, style=dotted];
n32 -> n50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n51 -> n52  [key=0, style=solid];
n51 -> n53  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid, color=red];
n33 -> n44  [key=2, style=dotted];
n33 -> n45  [key=2, style=dotted];
n33 -> n54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n33 -> d34  [key=0, style=solid, color=green];
n55 -> n56  [key=0, style=solid];
n55 -> n53  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid, color=red];
n35 -> d36  [key=0, style=solid, color=green];
n38 -> n39  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n32  [key=0, style=solid];
n30 -> n41  [key=2, style=dotted];
n30 -> n42  [key=2, style=dotted];
n41 -> n188  [key=0, style=solid];
n41 -> n27  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<CommandLine.Error> errors"];
n50 -> n51  [key=0, style=solid];
n54 -> n55  [key=0, style=solid];
n57 -> n58  [key=0, style=solid, color=red];
n57 -> d58  [key=0, style=solid, color=green];
n48 -> n135  [key=0, style=solid];
n48 -> n137  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
n48 -> n139  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
n48 -> n134  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddVerbs"];
n48 -> d139  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
n49 -> n129  [key=0, style=solid];
n49 -> n131  [key=1, style=dashed, color=red, label="CommandLine.ParserResult<T>"];
n49 -> n134  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddOptions"];
n49 -> d131  [key=1, style=dashed, color=green, label="CommandLine.ParserResult<T>"];
n39 -> n25  [key=0, style=bold, color=blue];
n52 -> n50  [key=0, style=bold, color=blue];
n56 -> n54  [key=0, style=bold, color=blue];
n58 -> n59  [key=0, style=solid, color=red];
n59 -> n57  [key=0, style=bold, color=blue];
n60 -> n61  [key=0, style=solid];
n60 -> n63  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n60 -> n67  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n60 -> n85  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n60 -> n70  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n60 -> n92  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n60 -> n73  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AutoBuild"];
n60 -> n25  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AutoBuild"];
n61 -> n62  [key=0, style=solid];
n61 -> n63  [key=0, style=solid];
n63 -> n64  [key=0, style=solid];
n63 -> n66  [key=1, style=dashed, color=darkseagreen4, label=errors];
n63 -> n68  [key=1, style=dashed, color=darkseagreen4, label=errors];
n67 -> n71  [key=0, style=solid];
n67 -> n25  [key=2, style=dotted];
n67 -> n84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n85 -> n86  [key=0, style=solid];
n85 -> n87  [key=2, style=dotted];
n70 -> n71  [key=0, style=solid];
n70 -> n25  [key=2, style=dotted];
n70 -> n88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n70 -> n91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n92 -> n93  [key=0, style=solid];
n92 -> n87  [key=2, style=dotted];
n62 -> n71  [key=0, style=solid];
n62 -> n72  [key=2, style=dotted];
n64 -> n65  [key=0, style=solid];
n64 -> n66  [key=0, style=solid];
n64 -> n46  [key=2, style=dotted];
n64 -> n78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n66 -> n67  [key=0, style=solid];
n66 -> n68  [key=0, style=solid];
n66 -> n46  [key=2, style=dotted];
n66 -> n81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n68 -> n69  [key=0, style=solid];
n68 -> n74  [key=2, style=dotted];
n68 -> n75  [key=2, style=dotted];
n68 -> n70  [key=1, style=dashed, color=darkseagreen4, label=err];
n65 -> n71  [key=0, style=solid];
n65 -> n4  [key=2, style=dotted];
n65 -> n73  [key=2, style=dotted];
n78 -> n79  [key=0, style=solid];
n81 -> n82  [key=0, style=solid];
n69 -> n70  [key=0, style=solid];
n69 -> n76  [key=2, style=dotted];
n69 -> n77  [key=2, style=dotted];
n69 -> n40  [key=2, style=dotted];
n69 -> n89  [key=1, style=dashed, color=darkseagreen4, label=pr];
n89 -> n90  [key=0, style=solid];
n89 -> n87  [key=2, style=dotted];
n71 -> n60  [key=0, style=bold, color=blue];
n73 -> n122  [key=0, style=solid];
n73 -> n105  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
n73 -> n124  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddPreOptionsLine"];
n84 -> n85  [key=0, style=solid];
n88 -> n89  [key=0, style=solid];
n91 -> n92  [key=0, style=solid];
n79 -> n80  [key=0, style=solid];
n80 -> n78  [key=0, style=bold, color=blue];
n82 -> n83  [key=0, style=solid];
n83 -> n81  [key=0, style=bold, color=blue];
n86 -> n84  [key=0, style=bold, color=blue];
n87 -> n94  [key=0, style=solid];
n87 -> n96  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n87 -> n98  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n87 -> n99  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n87 -> n100  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n87 -> n102  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n87 -> n103  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n87 -> n105  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n87 -> n116  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n87 -> n106  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n87 -> n60  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.ParserResult<T> parserResult"];
n87 -> n69  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.ParserResult<T> parserResult"];
n87 -> n67  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Text.HelpText current"];
n87 -> n70  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Text.HelpText current"];
n87 -> n87  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText DefaultParsingErrorsHandler"];
n90 -> n88  [key=0, style=bold, color=blue];
n93 -> n91  [key=0, style=bold, color=blue];
n94 -> n95  [key=0, style=solid];
n94 -> n96  [key=0, style=solid];
n96 -> n97  [key=0, style=solid];
n96 -> n98  [key=0, style=solid];
n98 -> n99  [key=0, style=solid];
n98 -> n100  [key=0, style=solid];
n98 -> n41  [key=2, style=dotted];
n98 -> n108  [key=2, style=dotted];
n99 -> n107  [key=0, style=solid];
n100 -> n101  [key=0, style=solid];
n100 -> n109  [key=2, style=dotted];
n100 -> n104  [key=1, style=dashed, color=darkseagreen4, label=errors];
n102 -> n107  [key=0, style=solid];
n103 -> n104  [key=0, style=solid];
n103 -> n111  [key=2, style=dotted];
n103 -> n112  [key=2, style=dotted];
n103 -> n73  [key=2, style=dotted];
n105 -> n106  [key=0, style=solid];
n105 -> n114  [key=2, style=dotted];
n105 -> n115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n116 -> n117  [key=0, style=solid];
n116 -> n73  [key=2, style=dotted];
n106 -> n107  [key=0, style=solid];
n95 -> n107  [key=0, style=solid];
n95 -> n23  [key=2, style=dotted];
n97 -> n107  [key=0, style=solid];
n97 -> n23  [key=2, style=dotted];
n101 -> n102  [key=0, style=solid];
n101 -> n103  [key=0, style=solid];
n101 -> n110  [key=2, style=dotted];
n101 -> d110  [key=2, style=dotted];
n109 -> n155  [key=0, style=solid];
n109 -> n157  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n109 -> n161  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Error, string>"];
n109 -> n173  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Error, string>"];
n109 -> n162  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>"];
n104 -> n105  [key=0, style=solid];
n104 -> n113  [key=2, style=dotted];
n115 -> n116  [key=0, style=solid];
n107 -> n87  [key=0, style=bold, color=blue];
n117 -> n115  [key=0, style=bold, color=blue];
n118 -> n119  [key=0, style=solid];
n118 -> n121  [key=3, color=darkorchid, style=bold, label="method methodReturn string op_Implicit"];
n119 -> n120  [key=0, style=solid];
n119 -> n121  [key=2, style=dotted];
n120 -> n118  [key=0, style=bold, color=blue];
n121 -> n181  [key=0, style=solid];
n122 -> n123  [key=0, style=solid];
n122 -> n124  [key=2, style=dotted];
n123 -> n73  [key=0, style=bold, color=blue];
n124 -> n270  [key=0, style=solid];
n124 -> n73  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
n125 -> n126  [key=0, style=solid];
n125 -> n128  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddPostOptionsLine"];
n125 -> d126  [key=0, style=solid];
n126 -> n127  [key=0, style=solid];
n126 -> n128  [key=2, style=dotted];
n127 -> n125  [key=0, style=bold, color=blue];
n128 -> n342  [key=0, style=solid];
n128 -> n125  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
n129 -> n130  [key=0, style=solid];
n129 -> n131  [key=0, style=solid, color=red];
n129 -> d131  [key=0, style=solid, color=green];
n131 -> n132  [key=0, style=solid, color=red];
n131 -> n133  [key=2, style=dotted, color=red];
n131 -> n111  [key=2, style=dotted, color=red];
n131 -> n134  [key=2, style=dotted, color=red];
n130 -> n132  [key=0, style=solid];
n130 -> n23  [key=2, style=dotted];
n132 -> n49  [key=0, style=bold, color=blue];
n133 -> n218  [key=0, style=solid];
n134 -> n255  [key=0, style=solid];
n134 -> n257  [key=1, style=dashed, color=darkseagreen4, label=int];
n134 -> n258  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>"];
n134 -> n263  [key=1, style=dashed, color=darkseagreen4, label=string];
n135 -> n136  [key=0, style=solid];
n135 -> n137  [key=0, style=solid];
n137 -> n138  [key=0, style=solid];
n137 -> n139  [key=0, style=solid];
n137 -> d139  [key=0, style=solid];
n139 -> n140  [key=0, style=solid];
n139 -> n142  [key=2, style=dotted];
n139 -> n111  [key=2, style=dotted];
n139 -> n134  [key=2, style=dotted];
n136 -> n140  [key=0, style=solid];
n136 -> n23  [key=2, style=dotted];
n138 -> n140  [key=0, style=solid];
n138 -> n141  [key=2, style=dotted];
n140 -> n48  [key=0, style=bold, color=blue];
n142 -> n250  [key=0, style=solid];
n142 -> n48  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types"];
n142 -> n148  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types"];
n143 -> n144  [key=0, style=solid];
n143 -> n146  [key=1, style=dashed, color=red, label=int];
n143 -> n134  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddOptions"];
n143 -> d146  [key=1, style=dashed, color=green, label=int];
n144 -> n145  [key=0, style=solid];
n144 -> n146  [key=0, style=solid, color=red];
n144 -> d146  [key=0, style=solid, color=green];
n146 -> n147  [key=0, style=solid, color=red];
n146 -> n133  [key=2, style=dotted, color=red];
n146 -> n111  [key=2, style=dotted, color=red];
n146 -> n134  [key=2, style=dotted, color=red];
n145 -> n147  [key=0, style=solid];
n145 -> n23  [key=2, style=dotted];
n147 -> n143  [key=0, style=bold, color=blue];
n148 -> n149  [key=0, style=solid];
n148 -> n151  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
n148 -> n153  [key=1, style=dashed, color=darkseagreen4, label=int];
n148 -> n134  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddVerbs"];
n148 -> d153  [key=1, style=dashed, color=darkseagreen4, label=int];
n149 -> n150  [key=0, style=solid];
n149 -> n151  [key=0, style=solid];
n151 -> n152  [key=0, style=solid];
n151 -> n153  [key=0, style=solid];
n151 -> d153  [key=0, style=solid];
n153 -> n154  [key=0, style=solid];
n153 -> n142  [key=2, style=dotted];
n153 -> n111  [key=2, style=dotted];
n153 -> n134  [key=2, style=dotted];
n150 -> n154  [key=0, style=solid];
n150 -> n23  [key=2, style=dotted];
n152 -> n154  [key=0, style=solid];
n152 -> n141  [key=2, style=dotted];
n154 -> n148  [key=0, style=bold, color=blue];
n155 -> n156  [key=0, style=solid];
n155 -> n157  [key=0, style=solid];
n157 -> n158  [key=0, style=solid];
n157 -> n41  [key=2, style=dotted];
n157 -> n161  [key=1, style=dashed, color=darkseagreen4, label=meaningfulErrors];
n157 -> n162  [key=1, style=dashed, color=darkseagreen4, label=meaningfulErrors];
n161 -> n162  [key=0, style=solid];
n161 -> n165  [key=2, style=dotted];
n161 -> n166  [key=2, style=dotted];
n161 -> n169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n161 -> n172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n173 -> n174  [key=0, style=solid];
n173 -> n176  [key=2, style=dotted];
n173 -> n177  [key=2, style=dotted];
n173 -> n178  [key=2, style=dotted];
n173 -> n179  [key=2, style=dotted];
n173 -> d181  [key=2, style=dotted];
n162 -> n163  [key=0, style=solid];
n162 -> n74  [key=2, style=dotted];
n162 -> n43  [key=2, style=dotted];
n162 -> n167  [key=2, style=dotted];
n162 -> n168  [key=2, style=dotted];
n156 -> n163  [key=0, style=solid];
n156 -> n23  [key=2, style=dotted];
n158 -> n159  [key=0, style=solid];
n158 -> n160  [key=0, style=solid];
n158 -> n108  [key=2, style=dotted];
n159 -> n163  [key=0, style=solid];
n160 -> n161  [key=0, style=solid];
n160 -> n164  [key=2, style=dotted];
n160 -> n174  [key=1, style=dashed, color=darkseagreen4, label=text];
n160 -> n162  [key=1, style=dashed, color=darkseagreen4, label=text];
n174 -> n175  [key=0, style=solid];
n174 -> n168  [key=2, style=dotted];
n174 -> n180  [key=2, style=dotted];
n169 -> n170  [key=0, style=solid];
n172 -> n173  [key=0, style=solid];
n163 -> n109  [key=0, style=bold, color=blue];
n170 -> n171  [key=0, style=solid];
n171 -> n169  [key=0, style=bold, color=blue];
n175 -> n172  [key=0, style=bold, color=blue];
n181 -> n182  [key=0, style=solid];
n181 -> n181  [key=3, color=darkorchid, style=bold, label="Local variable int ExtraLength"];
n182 -> n183  [key=0, style=solid];
n182 -> n24  [key=2, style=dotted];
n182 -> n184  [key=2, style=dotted];
n182 -> n185  [key=2, style=dotted];
n182 -> n179  [key=2, style=dotted];
n182 -> n110  [key=2, style=dotted];
n182 -> n186  [key=2, style=dotted];
n182 -> n168  [key=2, style=dotted];
n182 -> n187  [key=2, style=dotted];
n183 -> n121  [key=0, style=bold, color=blue];
n188 -> n189  [key=0, style=solid];
n188 -> n165  [key=2, style=dotted];
n188 -> n190  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n189 -> n41  [key=0, style=bold, color=blue];
n190 -> n191  [key=0, style=solid];
n191 -> n192  [key=0, style=solid];
n192 -> n190  [key=0, style=bold, color=blue];
n193 -> n194  [key=0, style=solid];
n193 -> n196  [key=1, style=dashed, color=darkseagreen4, label=string];
n193 -> n199  [key=1, style=dashed, color=darkseagreen4, label=int];
n193 -> n200  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
n193 -> n202  [key=1, style=dashed, color=darkseagreen4, label=int];
n193 -> n203  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
n193 -> n205  [key=1, style=dashed, color=darkseagreen4, label=int];
n193 -> n206  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
n193 -> n207  [key=1, style=dashed, color=darkseagreen4, label=int];
n193 -> n209  [key=1, style=dashed, color=darkseagreen4, label=string];
n193 -> n210  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
n193 -> n211  [key=1, style=dashed, color=darkseagreen4, label=int];
n193 -> n212  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
n193 -> n128  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
n193 -> n124  [key=3, color=darkorchid, style=bold, label="Parameter variable int maximumLength"];
n194 -> n195  [key=0, style=solid];
n194 -> n186  [key=2, style=dotted];
n196 -> n197  [key=0, style=solid];
n196 -> n214  [key=2, style=dotted];
n196 -> n198  [key=1, style=dashed, color=darkseagreen4, label=words];
n196 -> n199  [key=1, style=dashed, color=darkseagreen4, label=words];
n196 -> n200  [key=1, style=dashed, color=darkseagreen4, label=words];
n196 -> n201  [key=1, style=dashed, color=darkseagreen4, label=words];
n196 -> n202  [key=1, style=dashed, color=darkseagreen4, label=words];
n196 -> n205  [key=1, style=dashed, color=darkseagreen4, label=words];
n196 -> n206  [key=1, style=dashed, color=darkseagreen4, label=words];
n199 -> n200  [key=0, style=solid];
n199 -> n205  [key=0, style=solid];
n200 -> n201  [key=0, style=solid];
n200 -> n179  [key=2, style=dotted];
n202 -> n203  [key=0, style=solid];
n202 -> n208  [key=0, style=solid];
n203 -> n204  [key=0, style=solid];
n203 -> n179  [key=2, style=dotted];
n205 -> n206  [key=0, style=solid];
n205 -> n209  [key=0, style=solid];
n206 -> n207  [key=0, style=solid];
n206 -> n215  [key=2, style=dotted];
n206 -> n179  [key=2, style=dotted];
n207 -> n209  [key=0, style=solid];
n209 -> n210  [key=0, style=solid];
n209 -> n216  [key=2, style=dotted];
n209 -> n217  [key=2, style=dotted];
n209 -> n209  [key=1, style=dashed, color=darkseagreen4, label=string];
n209 -> n211  [key=1, style=dashed, color=darkseagreen4, label=string];
n209 -> n212  [key=1, style=dashed, color=darkseagreen4, label=string];
n210 -> n211  [key=0, style=solid];
n210 -> n186  [key=2, style=dotted];
n211 -> n194  [key=0, style=solid];
n211 -> n212  [key=0, style=solid];
n212 -> n213  [key=0, style=solid];
n212 -> n179  [key=2, style=dotted];
n195 -> n196  [key=0, style=solid];
n195 -> n199  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n195 -> n201  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n195 -> n205  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n195 -> n209  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n195 -> n195  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
n195 -> n193  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
n201 -> n202  [key=0, style=solid];
n201 -> n201  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n201 -> n204  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n201 -> n209  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n197 -> n198  [key=0, style=solid];
n197 -> n199  [key=1, style=dashed, color=darkseagreen4, label=i];
n197 -> n200  [key=1, style=dashed, color=darkseagreen4, label=i];
n197 -> n201  [key=1, style=dashed, color=darkseagreen4, label=i];
n197 -> n202  [key=1, style=dashed, color=darkseagreen4, label=i];
n197 -> n205  [key=1, style=dashed, color=darkseagreen4, label=i];
n197 -> n206  [key=1, style=dashed, color=darkseagreen4, label=i];
n197 -> n208  [key=1, style=dashed, color=darkseagreen4, label=i];
n197 -> n195  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n198 -> n199  [key=0, style=solid];
n198 -> n209  [key=0, style=solid];
n208 -> n198  [key=0, style=solid];
n208 -> n208  [key=1, style=dashed, color=darkseagreen4, label=i];
n204 -> n208  [key=0, style=solid];
n204 -> n204  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n204 -> n209  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n213 -> n193  [key=0, style=bold, color=blue];
n218 -> n219  [key=0, style=solid];
n218 -> n223  [key=2, style=dotted];
n218 -> n220  [key=1, style=dashed, color=darkseagreen4, label=specs];
n219 -> n220  [key=0, style=solid];
n219 -> n74  [key=2, style=dotted];
n219 -> n224  [key=2, style=dotted];
n219 -> n225  [key=2, style=dotted];
n219 -> n226  [key=2, style=dotted];
n219 -> n221  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
n220 -> n221  [key=0, style=solid];
n220 -> n74  [key=2, style=dotted];
n220 -> n227  [key=2, style=dotted];
n220 -> n228  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n224 -> n266  [key=0, style=solid];
n225 -> n268  [key=0, style=solid];
n221 -> n222  [key=0, style=solid];
n221 -> n40  [key=2, style=dotted];
n221 -> n226  [key=2, style=dotted];
n228 -> n229  [key=0, style=solid];
n222 -> n133  [key=0, style=bold, color=blue];
n229 -> n230  [key=0, style=solid];
n230 -> n228  [key=0, style=bold, color=blue];
n231 -> n232  [key=0, style=solid, color=red];
n232 -> n233  [key=0, style=solid, color=red];
n232 -> n234  [key=2, style=dotted, color=red];
n232 -> n235  [key=2, style=dotted, color=red];
n232 -> n236  [key=1, style=dashed, color=red, label="lambda expression"];
n233 -> n231  [key=0, style=bold, color=blue];
n236 -> n237  [key=0, style=solid];
n236 -> n238  [key=1, style=dashed, color=darkseagreen4, label="System.Tuple<System.Reflection.PropertyInfo, CommandLine.Text.UsageAttribute>"];
n237 -> n238  [key=0, style=solid];
n237 -> n239  [key=1, style=dashed, color=darkseagreen4, label=prop];
n238 -> n239  [key=0, style=solid];
n238 -> n240  [key=1, style=dashed, color=darkseagreen4, label=attr];
n239 -> n240  [key=0, style=solid];
n239 -> n243  [key=2, style=dotted];
n239 -> n241  [key=1, style=dashed, color=red, label=examples];
n239 -> d252  [key=1, style=dashed, color=green, label=examples];
n240 -> n241  [key=0, style=solid, color=red];
n240 -> n246  [key=1, style=dashed, color=red, label=groups];
n240 -> d252  [key=0, style=solid, color=green];
n241 -> n242  [key=0, style=solid, color=red];
n241 -> n244  [key=2, style=dotted, color=red];
n241 -> n245  [key=1, style=dashed, color=red, label="lambda expression"];
n246 -> n247  [key=0, style=solid, color=red];
n246 -> n248  [key=2, style=dotted, color=red];
n246 -> n249  [key=2, style=dotted, color=red];
n242 -> n236  [key=0, style=bold, color=blue];
n245 -> n246  [key=0, style=solid, color=red];
n247 -> n245  [key=0, style=bold, color=blue];
n250 -> n251  [key=0, style=solid];
n250 -> n252  [key=2, style=dotted];
n250 -> n253  [key=2, style=dotted];
n250 -> n224  [key=2, style=dotted];
n250 -> n225  [key=2, style=dotted];
n250 -> n254  [key=2, style=dotted];
n250 -> n250  [key=1, style=dashed, color=darkseagreen4, label=verbTuple];
n251 -> n142  [key=0, style=bold, color=blue];
n255 -> n256  [key=0, style=solid];
n255 -> n261  [key=2, style=dotted];
n255 -> n257  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
n255 -> n258  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
n255 -> n263  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
n257 -> n258  [key=0, style=solid];
n257 -> n263  [key=1, style=dashed, color=darkseagreen4, label=remainingSpace];
n258 -> n259  [key=0, style=solid];
n258 -> n114  [key=2, style=dotted];
n258 -> n262  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n263 -> n264  [key=0, style=solid];
n263 -> n265  [key=2, style=dotted];
n256 -> n257  [key=0, style=solid];
n256 -> n24  [key=2, style=dotted];
n261 -> n345  [key=0, style=solid];
n259 -> n260  [key=0, style=solid];
n262 -> n263  [key=0, style=solid];
n262 -> d285  [key=0, style=solid];
n260 -> n134  [key=0, style=bold, color=blue];
n264 -> n262  [key=0, style=bold, color=blue];
n265 -> n273  [key=0, style=solid];
n265 -> n274  [key=1, style=dashed, color=darkseagreen4, label=int];
n265 -> n310  [key=1, style=dashed, color=darkseagreen4, label=int];
n265 -> n314  [key=1, style=dashed, color=darkseagreen4, label=int];
n265 -> n275  [key=1, style=dashed, color=darkseagreen4, label=int];
n265 -> n276  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
n265 -> n277  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
n265 -> n278  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
n265 -> n279  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
n265 -> n280  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
n265 -> n281  [key=1, style=dashed, color=darkseagreen4, label=string];
n265 -> n287  [key=1, style=dashed, color=darkseagreen4, label=int];
n265 -> n290  [key=1, style=dashed, color=darkseagreen4, label=int];
n265 -> n293  [key=1, style=dashed, color=darkseagreen4, label=int];
n265 -> n294  [key=1, style=dashed, color=darkseagreen4, label=int];
n265 -> n295  [key=1, style=dashed, color=darkseagreen4, label=int];
n265 -> n298  [key=1, style=dashed, color=darkseagreen4, label=int];
n265 -> n299  [key=1, style=dashed, color=darkseagreen4, label=int];
n265 -> n255  [key=3, color=darkorchid, style=bold, label="Parameter variable int maxLength"];
n265 -> n258  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.Specification specification"];
n265 -> n257  [key=3, color=darkorchid, style=bold, label="Parameter variable int widthOfHelpText"];
n266 -> n267  [key=0, style=solid];
n266 -> n43  [key=2, style=dotted];
n266 -> n253  [key=2, style=dotted];
n267 -> n224  [key=0, style=bold, color=blue];
n268 -> n269  [key=0, style=solid];
n268 -> n43  [key=2, style=dotted];
n268 -> n253  [key=2, style=dotted];
n269 -> n225  [key=0, style=bold, color=blue];
n270 -> n271  [key=0, style=solid];
n270 -> n193  [key=2, style=dotted];
n271 -> n272  [key=0, style=solid];
n272 -> n124  [key=0, style=bold, color=blue];
n273 -> n274  [key=0, style=solid];
n273 -> n179  [key=2, style=dotted];
n274 -> n275  [key=0, style=solid];
n274 -> n24  [key=2, style=dotted];
n274 -> n303  [key=2, style=dotted];
n274 -> n309  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n274 -> n313  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n310 -> n311  [key=0, style=solid];
n310 -> n312  [key=2, style=dotted];
n310 -> n179  [key=2, style=dotted];
n314 -> n315  [key=0, style=solid];
n314 -> n316  [key=2, style=dotted];
n314 -> n179  [key=2, style=dotted];
n275 -> n276  [key=0, style=solid];
n275 -> n168  [key=2, style=dotted];
n275 -> n304  [key=2, style=dotted];
n275 -> n179  [key=2, style=dotted];
n276 -> n277  [key=0, style=solid];
n276 -> n278  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n276 -> n279  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n277 -> n278  [key=0, style=solid];
n277 -> n279  [key=0, style=solid];
n277 -> n42  [key=2, style=dotted];
n278 -> n279  [key=0, style=solid];
n278 -> n305  [key=2, style=dotted];
n278 -> n278  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n279 -> n280  [key=0, style=solid];
n279 -> n45  [key=2, style=dotted];
n279 -> n317  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n279 -> n318  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n279 -> n281  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n279 -> n282  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n279 -> n284  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n279 -> n297  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n279 -> n300  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n280 -> n281  [key=0, style=solid];
n280 -> n282  [key=0, style=solid];
n281 -> n282  [key=0, style=solid];
n281 -> n306  [key=2, style=dotted];
n281 -> n281  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n281 -> n284  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n281 -> n297  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n281 -> n300  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n287 -> n288  [key=0, style=solid];
n287 -> n293  [key=0, style=solid];
n290 -> n291  [key=0, style=solid];
n290 -> n296  [key=0, style=solid];
n293 -> n294  [key=0, style=solid];
n293 -> n297  [key=0, style=solid];
n294 -> n295  [key=0, style=solid];
n294 -> n215  [key=2, style=dotted];
n294 -> n179  [key=2, style=dotted];
n295 -> n297  [key=0, style=solid];
n298 -> n299  [key=0, style=solid];
n298 -> n308  [key=2, style=dotted];
n298 -> n186  [key=2, style=dotted];
n299 -> n282  [key=0, style=solid];
n299 -> n300  [key=0, style=solid];
n309 -> n310  [key=0, style=solid];
n309 -> d340  [key=0, style=solid];
n313 -> n314  [key=0, style=solid];
n313 -> d344  [key=0, style=solid];
n317 -> n318  [key=0, style=solid];
n318 -> n319  [key=0, style=solid];
n318 -> n320  [key=2, style=dotted];
n318 -> n318  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n282 -> n283  [key=0, style=solid];
n282 -> n300  [key=0, style=solid];
n282 -> n110  [key=2, style=dotted];
n284 -> n285  [key=0, style=solid];
n284 -> n214  [key=2, style=dotted];
n284 -> n286  [key=1, style=dashed, color=darkseagreen4, label=words];
n284 -> n287  [key=1, style=dashed, color=darkseagreen4, label=words];
n284 -> n288  [key=1, style=dashed, color=darkseagreen4, label=words];
n284 -> n289  [key=1, style=dashed, color=darkseagreen4, label=words];
n284 -> n290  [key=1, style=dashed, color=darkseagreen4, label=words];
n284 -> n293  [key=1, style=dashed, color=darkseagreen4, label=words];
n284 -> n294  [key=1, style=dashed, color=darkseagreen4, label=words];
n297 -> n298  [key=0, style=solid];
n297 -> n216  [key=2, style=dotted];
n297 -> n217  [key=2, style=dotted];
n297 -> n307  [key=2, style=dotted];
n297 -> n297  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n297 -> n299  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n297 -> n300  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n300 -> n301  [key=0, style=solid];
n300 -> n179  [key=2, style=dotted];
n300 -> n186  [key=2, style=dotted];
n306 -> n306  [key=3, color=darkorchid, style=bold, label="Field variable int BuilderCapacity"];
n283 -> n284  [key=0, style=solid];
n283 -> n287  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n283 -> n289  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n283 -> n293  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n283 -> n297  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n283 -> n195  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
n283 -> n265  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
n289 -> n290  [key=0, style=solid];
n289 -> n289  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n289 -> n292  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n289 -> n297  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n285 -> n286  [key=0, style=solid];
n285 -> n287  [key=1, style=dashed, color=darkseagreen4, label=i];
n285 -> n288  [key=1, style=dashed, color=darkseagreen4, label=i];
n285 -> n289  [key=1, style=dashed, color=darkseagreen4, label=i];
n285 -> n290  [key=1, style=dashed, color=darkseagreen4, label=i];
n285 -> n293  [key=1, style=dashed, color=darkseagreen4, label=i];
n285 -> n294  [key=1, style=dashed, color=darkseagreen4, label=i];
n285 -> n296  [key=1, style=dashed, color=darkseagreen4, label=i];
n285 -> n195  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n286 -> n287  [key=0, style=solid];
n286 -> n297  [key=0, style=solid];
n288 -> n289  [key=0, style=solid];
n288 -> n179  [key=2, style=dotted];
n296 -> n286  [key=0, style=solid];
n296 -> n296  [key=1, style=dashed, color=darkseagreen4, label=i];
n292 -> n296  [key=0, style=solid];
n292 -> n292  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n292 -> n297  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n291 -> n292  [key=0, style=solid];
n291 -> n179  [key=2, style=dotted];
n301 -> n302  [key=0, style=solid];
n302 -> n265  [key=0, style=bold, color=blue];
n311 -> n309  [key=0, style=bold, color=blue];
n312 -> n321  [key=0, style=solid];
n312 -> n325  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
n312 -> n331  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
n312 -> n265  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.OptionSpecification specification"];
n315 -> n313  [key=0, style=bold, color=blue];
n316 -> n333  [key=0, style=solid];
n316 -> n336  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
n316 -> n340  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
n316 -> n265  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.ValueSpecification specification"];
n319 -> n317  [key=0, style=bold, color=blue];
n321 -> n322  [key=0, style=solid];
n321 -> n24  [key=2, style=dotted];
n321 -> n323  [key=2, style=dotted];
n321 -> n168  [key=2, style=dotted];
n321 -> n324  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n321 -> n330  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n325 -> n326  [key=0, style=solid];
n325 -> n327  [key=2, style=dotted];
n325 -> n328  [key=2, style=dotted];
n325 -> n329  [key=2, style=dotted];
n325 -> n186  [key=2, style=dotted];
n331 -> n332  [key=0, style=solid];
n331 -> n186  [key=2, style=dotted];
n331 -> n328  [key=2, style=dotted];
n331 -> n329  [key=2, style=dotted];
n322 -> n312  [key=0, style=bold, color=blue];
n324 -> n325  [key=0, style=solid];
n324 -> d356  [key=0, style=solid];
n330 -> n331  [key=0, style=solid];
n330 -> d361  [key=0, style=solid];
n326 -> n324  [key=0, style=bold, color=blue];
n329 -> n10  [key=3, color=darkorchid, style=bold, label="Field variable string copyright"];
n332 -> n330  [key=0, style=bold, color=blue];
n333 -> n334  [key=0, style=solid];
n333 -> n24  [key=2, style=dotted];
n333 -> n303  [key=2, style=dotted];
n333 -> n329  [key=2, style=dotted];
n333 -> n168  [key=2, style=dotted];
n333 -> n335  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n333 -> n339  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n336 -> n337  [key=0, style=solid];
n336 -> n338  [key=2, style=dotted];
n340 -> n341  [key=0, style=solid];
n340 -> n328  [key=2, style=dotted];
n334 -> n316  [key=0, style=bold, color=blue];
n335 -> n336  [key=0, style=solid];
n335 -> d368  [key=0, style=solid];
n339 -> n340  [key=0, style=solid];
n339 -> d372  [key=0, style=solid];
n337 -> n335  [key=0, style=bold, color=blue];
n341 -> n339  [key=0, style=bold, color=blue];
n342 -> n343  [key=0, style=solid];
n342 -> n193  [key=2, style=dotted];
n343 -> n344  [key=0, style=solid];
n344 -> n128  [key=0, style=bold, color=blue];
n345 -> n346  [key=0, style=solid];
n345 -> n347  [key=2, style=dotted];
n345 -> n348  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n346 -> n261  [key=0, style=bold, color=blue];
n348 -> n349  [key=0, style=solid];
n348 -> n350  [key=1, style=dashed, color=darkseagreen4, label=int];
n349 -> n350  [key=0, style=solid];
n349 -> n352  [key=2, style=dotted];
n349 -> n353  [key=2, style=dotted];
n350 -> n351  [key=0, style=solid];
n350 -> n354  [key=2, style=dotted];
n352 -> n355  [key=0, style=solid];
n352 -> n356  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
n352 -> n357  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
n352 -> n359  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
n352 -> n360  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
n352 -> n367  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
n352 -> n345  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.OptionSpecification spec"];
n353 -> n375  [key=0, style=solid];
n353 -> n376  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
n353 -> n378  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
n353 -> n379  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
n353 -> n381  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
n353 -> n382  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
n353 -> n345  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.ValueSpecification spec"];
n351 -> n348  [key=0, style=bold, color=blue];
n355 -> n356  [key=0, style=solid];
n355 -> n362  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n355 -> n367  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n355 -> n372  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n355 -> n373  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n355 -> n195  [key=3, color=darkorchid, style=bold, label="Local variable int specLength"];
n355 -> n358  [key=3, color=darkorchid, style=bold, label="Local variable int specLength"];
n356 -> n357  [key=0, style=solid];
n356 -> n361  [key=1, style=dashed, color=darkseagreen4, label=hasShort];
n356 -> n371  [key=1, style=dashed, color=darkseagreen4, label=hasShort];
n357 -> n358  [key=0, style=solid];
n357 -> n366  [key=1, style=dashed, color=darkseagreen4, label=hasLong];
n357 -> n371  [key=1, style=dashed, color=darkseagreen4, label=hasLong];
n359 -> n360  [key=0, style=solid];
n359 -> n361  [key=0, style=solid];
n360 -> n361  [key=0, style=solid];
n360 -> n365  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
n360 -> n370  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
n367 -> n368  [key=0, style=solid];
n367 -> n367  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n367 -> n369  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n367 -> n370  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n362 -> n363  [key=0, style=solid];
n362 -> n362  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n362 -> n364  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n362 -> n365  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n372 -> n373  [key=0, style=solid];
n372 -> n372  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n373 -> n374  [key=0, style=solid];
n361 -> n362  [key=0, style=solid];
n361 -> n366  [key=0, style=solid];
n371 -> n372  [key=0, style=solid];
n371 -> n373  [key=0, style=solid];
n358 -> n359  [key=0, style=solid];
n358 -> n365  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
n358 -> n370  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
n358 -> n195  [key=3, color=darkorchid, style=bold, label="Local variable int metaLength"];
n366 -> n367  [key=0, style=solid];
n366 -> n371  [key=0, style=solid];
n365 -> n366  [key=0, style=solid];
n365 -> n365  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n365 -> n367  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n365 -> n372  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n365 -> n373  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n370 -> n371  [key=0, style=solid];
n370 -> n370  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n370 -> n372  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n370 -> n373  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n363 -> n364  [key=0, style=solid];
n363 -> n365  [key=0, style=solid];
n364 -> n365  [key=0, style=solid];
n364 -> n364  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n368 -> n369  [key=0, style=solid];
n368 -> n370  [key=0, style=solid];
n369 -> n370  [key=0, style=solid];
n369 -> n369  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n374 -> n352  [key=0, style=bold, color=blue];
n375 -> n376  [key=0, style=solid];
n375 -> n381  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n375 -> n382  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n375 -> n195  [key=3, color=darkorchid, style=bold, label="Local variable int specLength"];
n375 -> n377  [key=3, color=darkorchid, style=bold, label="Local variable int specLength"];
n376 -> n377  [key=0, style=solid];
n376 -> n380  [key=1, style=dashed, color=darkseagreen4, label=hasMeta];
n378 -> n379  [key=0, style=solid];
n378 -> n380  [key=0, style=solid];
n379 -> n380  [key=0, style=solid];
n379 -> n383  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
n381 -> n383  [key=0, style=solid];
n381 -> n386  [key=2, style=dotted];
n381 -> n381  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n382 -> n383  [key=0, style=solid];
n382 -> n386  [key=2, style=dotted];
n382 -> n382  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n377 -> n378  [key=0, style=solid];
n377 -> n383  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
n377 -> n195  [key=3, color=darkorchid, style=bold, label="Local variable int metaLength"];
n380 -> n381  [key=0, style=solid];
n380 -> n382  [key=0, style=solid];
n383 -> n384  [key=0, style=solid];
n383 -> n383  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n384 -> n385  [key=0, style=solid];
n385 -> n353  [key=0, style=bold, color=blue];
d34 -> n35  [key=0, style=solid, color=green];
d34 -> n37  [key=0, style=solid, color=green];
d34 -> d46  [key=2, style=dotted, color=green];
d34 -> n46  [key=2, style=dotted, color=green];
d34 -> n57  [key=1, style=dashed, color=green, label="lambda expression"];
d36 -> n38  [key=0, style=solid, color=green];
d36 -> n47  [key=2, style=dotted, color=green];
d36 -> n48  [key=2, style=dotted, color=green];
d58 -> n59  [key=0, style=solid, color=green];
d131 -> n132  [key=0, style=solid, color=green];
d131 -> d133  [key=2, style=dotted, color=green];
d131 -> n111  [key=2, style=dotted, color=green];
d131 -> d134  [key=2, style=dotted, color=green];
d146 -> n147  [key=0, style=solid, color=green];
d146 -> d133  [key=2, style=dotted, color=green];
d146 -> n111  [key=2, style=dotted, color=green];
d146 -> d134  [key=2, style=dotted, color=green];
d243 -> d244  [key=0, style=solid, color=green];
d243 -> n234  [key=2, style=dotted, color=green];
d243 -> n235  [key=2, style=dotted, color=green];
d243 -> n236  [key=1, style=dashed, color=green, label="lambda expression"];
d242 -> d243  [key=0, style=solid, color=green];
d244 -> d242  [key=0, style=bold, color=blue];
d252 -> n242  [key=0, style=solid, color=green];
d252 -> n244  [key=2, style=dotted, color=green];
d252 -> d256  [key=2, style=dotted, color=green];
d252 -> d257  [key=2, style=dotted, color=green];
d252 -> d258  [key=2, style=dotted, color=green];
d252 -> n245  [key=1, style=dashed, color=green, label="lambda expression"];
d252 -> d264  [key=1, style=dashed, color=green, label="lambda expression"];
d252 -> d267  [key=1, style=dashed, color=green, label="lambda expression"];
d264 -> d265  [key=0, style=solid];
d267 -> d268  [key=0, style=solid];
d306 -> d46  [key=2, style=dotted];
d306 -> d307  [key=0, style=solid];
d306 -> d308  [key=0, style=solid];
d139 -> d134  [key=2, style=dotted];
d139 -> n140  [key=0, style=solid];
d139 -> d142  [key=2, style=dotted];
d139 -> n111  [key=2, style=dotted];
d153 -> d134  [key=2, style=dotted];
d153 -> n154  [key=0, style=solid];
d153 -> d142  [key=2, style=dotted];
d153 -> n111  [key=2, style=dotted];
d266 -> d264  [key=0, style=bold, color=blue];
d265 -> d266  [key=0, style=solid];
d269 -> d267  [key=0, style=bold, color=blue];
d268 -> d269  [key=0, style=solid];
d301 -> d306  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
d301 -> d302  [key=0, style=solid];
d301 -> d303  [key=1, style=dashed, color=darkseagreen4, label=int];
d301 -> d340  [key=1, style=dashed, color=darkseagreen4, label=int];
d301 -> d344  [key=1, style=dashed, color=darkseagreen4, label=int];
d301 -> d304  [key=1, style=dashed, color=darkseagreen4, label=int];
d301 -> d305  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
d301 -> d307  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
d301 -> d308  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
d301 -> d309  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
d301 -> d310  [key=1, style=dashed, color=darkseagreen4, label=string];
d301 -> d316  [key=1, style=dashed, color=darkseagreen4, label=int];
d301 -> d319  [key=1, style=dashed, color=darkseagreen4, label=int];
d301 -> d322  [key=1, style=dashed, color=darkseagreen4, label=int];
d301 -> d323  [key=1, style=dashed, color=darkseagreen4, label=int];
d301 -> d324  [key=1, style=dashed, color=darkseagreen4, label=int];
d301 -> d327  [key=1, style=dashed, color=darkseagreen4, label=int];
d301 -> d328  [key=1, style=dashed, color=darkseagreen4, label=int];
d305 -> d306  [key=0, style=solid];
d305 -> d307  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d305 -> d308  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d307 -> d307  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d307 -> d308  [key=0, style=solid];
d307 -> n305  [key=2, style=dotted];
d308 -> d309  [key=0, style=solid];
d308 -> n45  [key=2, style=dotted];
d308 -> n317  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d308 -> n318  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d308 -> d310  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d308 -> d311  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d308 -> d313  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d308 -> d326  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d308 -> d329  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d312 -> d301  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
d312 -> d313  [key=0, style=solid];
d312 -> d316  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d312 -> d318  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d312 -> d322  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d312 -> d326  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d331 -> d301  [key=0, style=bold, color=blue];
d302 -> d303  [key=0, style=solid];
d302 -> d191  [key=2, style=dotted];
d303 -> d304  [key=0, style=solid];
d303 -> d24  [key=2, style=dotted];
d303 -> d332  [key=2, style=dotted];
d303 -> n309  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d303 -> n313  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d340 -> n311  [key=0, style=solid];
d340 -> d342  [key=2, style=dotted];
d340 -> d191  [key=2, style=dotted];
d344 -> n315  [key=0, style=solid];
d344 -> d346  [key=2, style=dotted];
d344 -> d191  [key=2, style=dotted];
d304 -> d305  [key=0, style=solid];
d304 -> n168  [key=2, style=dotted];
d304 -> n304  [key=2, style=dotted];
d304 -> d191  [key=2, style=dotted];
d304 -> d334  [key=2, style=dotted];
d309 -> d310  [key=0, style=solid];
d309 -> d311  [key=0, style=solid];
d310 -> d310  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d310 -> d311  [key=0, style=solid];
d310 -> n306  [key=2, style=dotted];
d310 -> d313  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d310 -> d326  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d310 -> d329  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d316 -> d317  [key=0, style=solid];
d316 -> d322  [key=0, style=solid];
d319 -> d320  [key=0, style=solid];
d319 -> d325  [key=0, style=solid];
d322 -> d323  [key=0, style=solid];
d322 -> d326  [key=0, style=solid];
d323 -> d324  [key=0, style=solid];
d323 -> n215  [key=2, style=dotted];
d323 -> d191  [key=2, style=dotted];
d324 -> d326  [key=0, style=solid];
d327 -> d328  [key=0, style=solid];
d327 -> n308  [key=2, style=dotted];
d327 -> d193  [key=2, style=dotted];
d328 -> d311  [key=0, style=solid];
d328 -> d329  [key=0, style=solid];
d311 -> d312  [key=0, style=solid];
d311 -> d329  [key=0, style=solid];
d311 -> d110  [key=2, style=dotted];
d313 -> d316  [key=1, style=dashed, color=darkseagreen4, label=words];
d313 -> d319  [key=1, style=dashed, color=darkseagreen4, label=words];
d313 -> d322  [key=1, style=dashed, color=darkseagreen4, label=words];
d313 -> d323  [key=1, style=dashed, color=darkseagreen4, label=words];
d313 -> d314  [key=0, style=solid];
d313 -> n214  [key=2, style=dotted];
d313 -> d315  [key=1, style=dashed, color=darkseagreen4, label=words];
d313 -> d317  [key=1, style=dashed, color=darkseagreen4, label=words];
d313 -> d318  [key=1, style=dashed, color=darkseagreen4, label=words];
d326 -> d327  [key=0, style=solid];
d326 -> d328  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d326 -> d326  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d326 -> n216  [key=2, style=dotted];
d326 -> n217  [key=2, style=dotted];
d326 -> n307  [key=2, style=dotted];
d326 -> d329  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d329 -> d330  [key=0, style=solid];
d329 -> d191  [key=2, style=dotted];
d329 -> d334  [key=2, style=dotted];
d329 -> d193  [key=2, style=dotted];
d318 -> d319  [key=0, style=solid];
d318 -> d326  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d318 -> d318  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d318 -> d321  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d330 -> d331  [key=0, style=solid];
d314 -> d316  [key=1, style=dashed, color=darkseagreen4, label=i];
d314 -> d319  [key=1, style=dashed, color=darkseagreen4, label=i];
d314 -> d322  [key=1, style=dashed, color=darkseagreen4, label=i];
d314 -> d323  [key=1, style=dashed, color=darkseagreen4, label=i];
d314 -> d318  [key=1, style=dashed, color=darkseagreen4, label=i];
d314 -> d315  [key=0, style=solid];
d314 -> d317  [key=1, style=dashed, color=darkseagreen4, label=i];
d314 -> d325  [key=1, style=dashed, color=darkseagreen4, label=i];
d315 -> d316  [key=0, style=solid];
d315 -> d326  [key=0, style=solid];
d317 -> d318  [key=0, style=solid];
d317 -> d191  [key=2, style=dotted];
d320 -> d191  [key=2, style=dotted];
d320 -> d321  [key=0, style=solid];
d325 -> d315  [key=0, style=solid];
d325 -> d325  [key=1, style=dashed, color=darkseagreen4, label=i];
d321 -> d326  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d321 -> d325  [key=0, style=solid];
d321 -> d321  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d432 -> d330  [key=1, style=dashed, color=darkseagreen4, label=<invalid-global-code>];
d432 -> d281  [key=1, style=dashed, color=darkseagreen4, label=<invalid-global-code>];
d432 -> d299  [key=1, style=dashed, color=darkseagreen4, label=<invalid-global-code>];
d432 -> d376  [key=1, style=dashed, color=darkseagreen4, label=<invalid-global-code>];
d187 -> d191  [key=2, style=dotted];
d187 -> d193  [key=2, style=dotted];
d187 -> d188  [key=0, style=solid];
d187 -> d189  [key=2, style=dotted];
d187 -> d190  [key=2, style=dotted];
d187 -> d192  [key=2, style=dotted];
d187 -> d194  [key=2, style=dotted];
d187 -> d195  [key=2, style=dotted];
d187 -> n168  [key=2, style=dotted];
d352 -> d24  [key=2, style=dotted];
d352 -> d353  [key=0, style=solid];
d352 -> d354  [key=2, style=dotted];
d352 -> n168  [key=2, style=dotted];
d352 -> n324  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d352 -> n330  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d364 -> d24  [key=2, style=dotted];
d364 -> d365  [key=0, style=solid];
d364 -> d366  [key=2, style=dotted];
d364 -> n329  [key=2, style=dotted];
d364 -> n168  [key=2, style=dotted];
d364 -> n335  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d364 -> n339  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d356 -> d193  [key=2, style=dotted];
d356 -> n326  [key=0, style=solid];
d356 -> n328  [key=2, style=dotted];
d356 -> n329  [key=2, style=dotted];
d356 -> d223  [key=2, style=dotted];
d361 -> d193  [key=2, style=dotted];
d361 -> n332  [key=0, style=solid];
d361 -> n328  [key=2, style=dotted];
d361 -> n329  [key=2, style=dotted];
d281 -> d282  [key=0, style=solid];
d299 -> d300  [key=0, style=solid];
d376 -> d377  [key=0, style=solid];
d186 -> d187  [key=0, style=solid];
d186 -> d186  [key=3, color=darkorchid, style=bold, label="Local variable int ExtraLength"];
d188 -> d185  [key=0, style=bold, color=blue];
d351 -> d352  [key=0, style=solid];
d351 -> d356  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
d351 -> d361  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
d353 -> d351  [key=0, style=bold, color=blue];
d363 -> d364  [key=0, style=solid];
d363 -> d368  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
d363 -> d372  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
d365 -> d363  [key=0, style=bold, color=blue];
d280 -> d281  [key=0, style=solid];
d280 -> n166  [key=2, style=dotted];
d280 -> n262  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d282 -> d276  [key=0, style=bold, color=blue];
d298 -> d299  [key=0, style=solid];
d298 -> d128  [key=2, style=dotted];
d300 -> d297  [key=0, style=bold, color=blue];
d375 -> d376  [key=0, style=solid];
d375 -> d128  [key=2, style=dotted];
d377 -> d374  [key=0, style=bold, color=blue];
d185 -> d186  [key=0, style=solid];
d278 -> d189  [key=2, style=dotted];
d278 -> d279  [key=0, style=solid];
d368 -> n337  [key=0, style=solid];
d368 -> n338  [key=2, style=dotted];
d372 -> n341  [key=0, style=solid];
d372 -> n328  [key=2, style=dotted];
d203 -> d223  [key=2, style=dotted];
d203 -> d204  [key=0, style=solid];
d219 -> d223  [key=2, style=dotted];
d219 -> d220  [key=0, style=solid];
d276 -> d280  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>"];
d276 -> d277  [key=0, style=solid];
d276 -> d279  [key=1, style=dashed, color=darkseagreen4, label=int];
d276 -> d285  [key=1, style=dashed, color=darkseagreen4, label=string];
d277 -> d280  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
d277 -> d278  [key=0, style=solid];
d277 -> d283  [key=2, style=dotted];
d277 -> d279  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
d277 -> d285  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
d279 -> d280  [key=0, style=solid];
d279 -> d285  [key=1, style=dashed, color=darkseagreen4, label=remainingSpace];
d297 -> d298  [key=0, style=solid];
d374 -> d375  [key=0, style=solid];
d202 -> d203  [key=0, style=solid];
d202 -> d219  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
d202 -> d205  [key=1, style=dashed, color=darkseagreen4, label=string];
d202 -> d208  [key=1, style=dashed, color=darkseagreen4, label=int];
d202 -> d209  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
d202 -> d211  [key=1, style=dashed, color=darkseagreen4, label=int];
d202 -> d212  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
d202 -> d214  [key=1, style=dashed, color=darkseagreen4, label=int];
d202 -> d215  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
d202 -> d216  [key=1, style=dashed, color=darkseagreen4, label=int];
d202 -> d218  [key=1, style=dashed, color=darkseagreen4, label=string];
d202 -> d220  [key=1, style=dashed, color=darkseagreen4, label=int];
d202 -> d221  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
d220 -> d203  [key=0, style=solid];
d220 -> d221  [key=0, style=solid];
d204 -> d202  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
d204 -> d205  [key=0, style=solid];
d204 -> d208  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d204 -> d210  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d204 -> d214  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d204 -> d218  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d218 -> d219  [key=0, style=solid];
d218 -> d220  [key=1, style=dashed, color=darkseagreen4, label=string];
d218 -> d218  [key=1, style=dashed, color=darkseagreen4, label=string];
d218 -> n216  [key=2, style=dotted];
d218 -> n217  [key=2, style=dotted];
d218 -> d221  [key=1, style=dashed, color=darkseagreen4, label=string];
d285 -> n264  [key=0, style=solid];
d285 -> d287  [key=2, style=dotted];
d126 -> d128  [key=2, style=dotted];
d126 -> n127  [key=0, style=solid];
d222 -> d202  [key=0, style=bold, color=blue];
d205 -> d206  [key=0, style=solid];
d205 -> n214  [key=2, style=dotted];
d205 -> d207  [key=1, style=dashed, color=darkseagreen4, label=words];
d205 -> d208  [key=1, style=dashed, color=darkseagreen4, label=words];
d205 -> d209  [key=1, style=dashed, color=darkseagreen4, label=words];
d205 -> d210  [key=1, style=dashed, color=darkseagreen4, label=words];
d205 -> d211  [key=1, style=dashed, color=darkseagreen4, label=words];
d205 -> d214  [key=1, style=dashed, color=darkseagreen4, label=words];
d205 -> d215  [key=1, style=dashed, color=darkseagreen4, label=words];
d208 -> d209  [key=0, style=solid];
d208 -> d214  [key=0, style=solid];
d209 -> d210  [key=0, style=solid];
d209 -> d181  [key=2, style=dotted];
d211 -> d212  [key=0, style=solid];
d211 -> d217  [key=0, style=solid];
d212 -> d213  [key=0, style=solid];
d212 -> d181  [key=2, style=dotted];
d214 -> d218  [key=0, style=solid];
d214 -> d215  [key=0, style=solid];
d215 -> d216  [key=0, style=solid];
d215 -> n215  [key=2, style=dotted];
d215 -> d181  [key=2, style=dotted];
d216 -> d218  [key=0, style=solid];
d221 -> d222  [key=0, style=solid];
d221 -> d181  [key=2, style=dotted];
d210 -> d218  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d210 -> d211  [key=0, style=solid];
d210 -> d210  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d210 -> d213  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d207 -> d218  [key=0, style=solid];
d207 -> d208  [key=0, style=solid];
d213 -> d218  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d213 -> d213  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d213 -> d217  [key=0, style=solid];
d206 -> d208  [key=1, style=dashed, color=darkseagreen4, label=i];
d206 -> d209  [key=1, style=dashed, color=darkseagreen4, label=i];
d206 -> d211  [key=1, style=dashed, color=darkseagreen4, label=i];
d206 -> d214  [key=1, style=dashed, color=darkseagreen4, label=i];
d206 -> d215  [key=1, style=dashed, color=darkseagreen4, label=i];
d206 -> d210  [key=1, style=dashed, color=darkseagreen4, label=i];
d206 -> d207  [key=0, style=solid];
d206 -> d217  [key=1, style=dashed, color=darkseagreen4, label=i];
d217 -> d207  [key=0, style=solid];
d217 -> d217  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_4 -> m0_31  [key=0, style=solid];
m0_4 -> m0_0  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Globalization.CultureInfo conversionCulture"];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_35  [key=2, style=dotted];
m0_31 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_36  [key=2, style=dotted];
m0_32 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_32 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_37  [key=2, style=dotted];
m0_34 -> m0_4  [key=0, style=bold, color=blue];
m0_35 -> m0_44  [key=0, style=solid];
m0_35 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_35 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_35 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_35 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_35 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_35 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m0_35 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m0_35 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_35 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_35 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_35 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_35 -> m0_4  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Globalization.CultureInfo conversionCulture"];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_44 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_44 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_44 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_44 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_44 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label=changeType];
m0_44 -> m0_44  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<string, object> changeType"];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_45 -> m0_45  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<string, object> makeType"];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_48  [key=2, style=dotted];
m0_46 -> m0_49  [key=2, style=dotted];
m0_46 -> m0_50  [key=2, style=dotted];
m0_47 -> m0_35  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid, color=red];
m0_1 -> m0_2  [key=0, style=solid, color=red];
m0_1 -> m0_3  [key=2, style=dotted, color=red];
m0_1 -> m0_4  [key=2, style=dotted, color=red];
m0_1 -> m0_5  [key=2, style=dotted, color=red];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_23  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_22 -> m0_20  [key=0, style=bold, color=blue];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_27  [key=2, style=dotted];
m0_26 -> m0_24  [key=0, style=bold, color=blue];
m0_29 -> m0_30  [key=0, style=solid];
m0_30 -> m0_28  [key=0, style=bold, color=blue];
m0_38 -> m0_39  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_39 -> m0_38  [key=0, style=bold, color=blue];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_43  [key=2, style=dotted];
m0_42 -> m0_40  [key=0, style=bold, color=blue];
m0_52 -> m0_53  [key=0, style=solid];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_49  [key=2, style=dotted];
m0_60 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label=isFsOption];
m0_60 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label=isFsOption];
m0_60 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label=isFsOption];
m0_60 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label=isFsOption];
m0_60 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label=isFsOption];
m0_61 -> m0_62  [key=0, style=solid];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_70  [key=2, style=dotted];
m0_68 -> m0_71  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_58  [key=2, style=dotted];
m0_62 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_62 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_62 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=withValue];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_75  [key=2, style=dotted];
m0_73 -> m0_76  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_55  [key=2, style=dotted];
m0_53 -> m0_56  [key=2, style=dotted];
m0_53 -> m0_57  [key=2, style=dotted];
m0_53 -> m0_58  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_87  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_58  [key=2, style=dotted];
m0_83 -> m0_86  [key=0, style=solid];
m0_83 -> m0_88  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_51 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_51 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_51 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_54 -> m0_51  [key=0, style=bold, color=blue];
m0_59 -> m0_60  [key=0, style=solid];
m0_64 -> m0_65  [key=0, style=solid];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_80  [key=2, style=dotted];
m0_66 -> m0_59  [key=0, style=bold, color=blue];
m0_67 -> m0_68  [key=0, style=solid];
m0_69 -> m0_67  [key=0, style=bold, color=blue];
m0_72 -> m0_73  [key=0, style=solid];
m0_74 -> m0_72  [key=0, style=bold, color=blue];
m0_77 -> m0_78  [key=0, style=solid];
m0_79 -> m0_77  [key=0, style=bold, color=blue];
m0_84 -> m0_85  [key=0, style=solid];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_89  [key=2, style=dotted];
m0_86 -> m0_81  [key=0, style=bold, color=blue];
m0_57 -> m0_35  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type conversionType"];
m0_57 -> m0_91  [key=3, color=darkorchid, style=bold, label="method methodReturn object ToEnum"];
m0_5 -> m0_6  [key=0, style=solid, color=red];
m0_5 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_5 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m0_5 -> m0_0  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Globalization.CultureInfo conversionCulture"];
m0_6 -> m0_7  [key=0, style=solid, color=red];
m0_6 -> m0_10  [key=2, style=dotted, color=red];
m0_6 -> m0_11  [key=2, style=dotted, color=red];
m0_6 -> m0_12  [key=2, style=dotted, color=red];
m0_6 -> m0_13  [key=2, style=dotted, color=red];
m0_6 -> m0_14  [key=2, style=dotted, color=red];
m0_6 -> m0_21  [key=1, style=dashed, color=red, label=type];
m0_6 -> m0_8  [key=1, style=dashed, color=red, label=type];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_15  [key=2, style=dotted];
m0_7 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> n46  [key=2, style=dotted];
m0_8 -> m0_17  [key=2, style=dotted];
m0_8 -> m0_15  [key=2, style=dotted];
m0_8 -> m0_18  [key=2, style=dotted];
m0_8 -> m0_19  [key=2, style=dotted];
m0_8 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_8 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_9 -> m0_5  [key=0, style=bold, color=blue];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_90 -> m0_95  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_91 -> m0_92  [key=0, style=solid];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_95  [key=0, style=solid];
m0_92 -> m0_99  [key=2, style=dotted];
m0_92 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label=parsedValue];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_97  [key=0, style=solid];
m0_95 -> m0_101  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_96 -> m0_98  [key=0, style=solid];
m0_94 -> m0_98  [key=0, style=solid];
m0_94 -> m0_100  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_100  [key=2, style=dotted];
m0_98 -> m0_90  [key=0, style=bold, color=blue];
m0_102 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m0_103 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_104 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_104 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_104 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_104 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_104 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_104 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_104 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_105 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m0_105 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m0_105 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m0_106 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_106 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_106 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_107 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label=isFsOption];
m0_107 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label=isFsOption];
m0_107 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label=isFsOption];
m0_108 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_108 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label=type];
}
