digraph  {
m1_8 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="OptionMapperTests.cs"];
m1_12 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="OptionMapperTests.cs"];
m1_13 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="OptionMapperTests.cs"];
m1_6 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="OptionMapperTests.cs"];
m1_7 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, char, CommandLine.Infrastructure.Maybe<object>, System.Type, CommandLine.Core.TargetType, string, string, System.Collections.Generic.IEnumerable<string>)", span="18-18", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, char, CommandLine.Infrastructure.Maybe<object>, System.Type, CommandLine.Core.TargetType, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionMapperTests.cs"];
m1_11 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="OptionMapperTests.cs"];
m1_15 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="OptionMapperTests.cs"];
m1_27 [label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="OptionMapperTests.cs"];
m1_0 [label="Entry CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="16-16", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m1_2 [label="var specProps = new[]\r\n                {\r\n                    SpecificationProperty.Create(\r\n                        new OptionSpecification(''x'', string.Empty, false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '\0', Maybe.Nothing<object>(), typeof(bool), TargetType.Boolean, string.Empty, string.Empty, new List<string>()), \r\n                        typeof(FakeOptions).GetProperties().Single(p => p.Name.Equals(''BoolValue'', StringComparison.Ordinal)),\r\n                        Maybe.Nothing<object>())\r\n                }", span="23-29", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", color=green, community=0, file="OptionMapperTests.cs"];
m1_1 [label="var tokenPartitions = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''x'', new [] { ''true'' })\r\n                }", span="19-22", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m1_3 [label="var result = OptionMapper.MapValues(\r\n                specProps.Where(pt => pt.Specification.IsOption()),\r\n                tokenPartitions,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture),\r\n                StringComparer.InvariantCulture)", span="32-36", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m1_4 [label="Assert.NotNull(result.Value.Single(\r\n                a => a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value))", span="39-42", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m1_5 [label="Exit CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="16-16", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m1_28 [label="Entry lambda expression", span="40-42", cluster="lambda expression", file="OptionMapperTests.cs"];
m1_16 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="OptionMapperTests.cs"];
m1_20 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="OptionMapperTests.cs"];
m1_24 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="OptionMapperTests.cs"];
m1_18 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="OptionMapperTests.cs"];
m1_17 [label="p.Name.Equals(''BoolValue'', StringComparison.Ordinal)", span="27-27", cluster="lambda expression", file="OptionMapperTests.cs"];
m1_22 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="OptionMapperTests.cs"];
m1_21 [label="pt.Specification.IsOption()", span="33-33", cluster="lambda expression", file="OptionMapperTests.cs"];
m1_26 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="OptionMapperTests.cs"];
m1_25 [label="TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture)", span="35-35", cluster="lambda expression", file="OptionMapperTests.cs"];
m1_29 [label="a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value", span="40-42", cluster="lambda expression", file="OptionMapperTests.cs"];
m1_30 [label="Exit lambda expression", span="40-42", cluster="lambda expression", file="OptionMapperTests.cs"];
m1_31 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="OptionMapperTests.cs"];
m1_19 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="OptionMapperTests.cs"];
m1_23 [label="Entry CommandLine.Core.Specification.IsOption()", span="10-10", cluster="CommandLine.Core.Specification.IsOption()", file="OptionMapperTests.cs"];
m1_14 [label="Entry Unk.MapValues", span="", cluster="Unk.MapValues", file="OptionMapperTests.cs"];
m1_10 [label="Entry System.Type.GetProperties()", span="0-0", cluster="System.Type.GetProperties()", file="OptionMapperTests.cs"];
m1_9 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="OptionMapperTests.cs"];
m3_0 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", span="15-15", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="Scalar.cs"];
m3_1 [label="var expectedErrors = new[] { new NoVerbSelectedError() }", span="18-18", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", color=green, community=0, file="Scalar.cs"];
m3_2 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="21-25", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="Scalar.cs"];
m3_17 [label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="353-353", cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="Scalar.cs"];
m3_18 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", span="53-53", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="Scalar.cs"];
m3_19 [label="var expectedErrors = new[] { new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true) }", span="56-56", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="Scalar.cs"];
m3_20 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'', ''commit'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="59-63", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="Scalar.cs"];
m3_22 [label="Assert.True(expectedErrors.SequenceEqual(result.Errors))", span="67-67", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="Scalar.cs"];
m3_21 [label="Assert.IsType<NullInstance>(result.Value)", span="66-66", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="Scalar.cs"];
m3_23 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", span="53-53", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="Scalar.cs"];
m3_6 [label="Exit lambda expression", span="16-20", cluster="lambda expression", file="Scalar.cs"];
m3_7 [label="Entry CommandLine.Core.Token.IsName()", span="68-68", cluster="CommandLine.Core.Token.IsName()", file="Scalar.cs"];
m3_3 [label="Assert.IsType<NullInstance>(result.Value)", span="28-28", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="Scalar.cs"];
m3_10 [label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="100-100", cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="Scalar.cs"];
m3_30 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", span="91-91", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="Scalar.cs"];
m3_31 [label="var expected = new AddOptions { Patch = true, FileName = ''dummy.bin''}", span="94-94", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="Scalar.cs"];
m3_32 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''add'', ''--patch'', ''dummy.bin'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="97-101", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="Scalar.cs"];
m3_34 [label="expected.ShouldBeEquivalentTo(result.Value)", span="105-105", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="Scalar.cs"];
m3_33 [label="Assert.IsType<AddOptions>(result.Value)", span="104-104", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="Scalar.cs"];
m3_35 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", span="91-91", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="Scalar.cs"];
m3_36 [label="Entry CommandLine.Tests.Fakes.AddOptions.AddOptions()", span="7-7", cluster="CommandLine.Tests.Fakes.AddOptions.AddOptions()", file="Scalar.cs"];
m3_4 [label="Entry lambda expression", span="16-20", cluster="lambda expression", file="Scalar.cs"];
m3_5 [label="f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                    info.TargetType == TargetType.Scalar ? new[] { f, s } : new Token[] { }, new Token[] { })\r\n                                    : new Token[] { }", span="17-20", cluster="lambda expression", file="Scalar.cs", color=green, community=0];
m3_11 [label="Entry lambda expression", span="18-19", cluster="lambda expression", file="Scalar.cs"];
m3_12 [label="info.TargetType == TargetType.Scalar ? new[] { f, s } : new Token[] { }", span="19-19", cluster="lambda expression", file="Scalar.cs", color=green, community=0];
m3_13 [label="Exit lambda expression", span="18-19", cluster="lambda expression", file="Scalar.cs"];
m3_15 [label="CommandLine.Core.Token", span="", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="Scalar.cs"];
m3_14 [label="System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>", span="", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="Scalar.cs"];
m3_16 [label="CommandLine.Core.Token", span="", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="Scalar.cs"];
m3_8 [label="Entry CommandLine.Core.Token.IsValue()", span="73-73", cluster="CommandLine.Core.Token.IsValue()", file="Scalar.cs"];
m3_24 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="72-72", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="Scalar.cs"];
m3_25 [label="var expectedErrors = new[] { new HelpVerbRequestedError(null, null, false) }", span="75-75", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="Scalar.cs"];
m3_26 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'', ''earthunderalienattack'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="78-82", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="Scalar.cs"];
m3_28 [label="Assert.True(expectedErrors.SequenceEqual(result.Errors))", span="86-86", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="Scalar.cs"];
m3_27 [label="Assert.IsType<NullInstance>(result.Value)", span="85-85", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="Scalar.cs"];
m3_29 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="72-72", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="Scalar.cs"];
m3_9 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="Scalar.cs"];
m3_37 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="Scalar.cs"];
m4_11 [label="Entry lambda expression", span="19-20", cluster="lambda expression", file="Sequence.cs"];
m4_5 [label="f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                    info.TargetType == TargetType.Scalar ? new[] { f, s } : new Token[] { }, new Token[] { })\r\n                                    : new Token[] { }", span="18-21", cluster="lambda expression", color=red, community=0, file="Sequence.cs"];
m4_4 [label="Entry lambda expression", span="17-21", cluster="lambda expression", file="Sequence.cs"];
m4_12 [label="info.TargetType == TargetType.Scalar ? new[] { f, s } : new Token[] { }", span="20-20", cluster="lambda expression", file="Sequence.cs"];
m4_6 [label="Exit lambda expression", span="17-21", cluster="lambda expression", file="Sequence.cs"];
m4_13 [label="Exit lambda expression", span="19-20", cluster="lambda expression", file="Sequence.cs"];
m4_10 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="Sequence.cs"];
m4_0 [label="Entry CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Sequence.cs"];
m4_1 [label="return from tseq in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                    info.TargetType == TargetType.Scalar ? new[] { f, s } : new Token[] { }, new Token[] { })\r\n                                    : new Token[] { })\r\n                   from t in tseq\r\n                   select t;", span="16-23", cluster="CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", color=red, community=0, file="Sequence.cs"];
m4_2 [label="Exit CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Sequence.cs"];
m4_7 [label="Entry CommandLine.Core.Token.IsName()", span="128-128", cluster="CommandLine.Core.Token.IsName()", file="Sequence.cs"];
m4_8 [label="Entry CommandLine.Core.Token.IsValue()", span="133-133", cluster="CommandLine.Core.Token.IsValue()", file="Sequence.cs"];
m4_9 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="Sequence.cs"];
m4_3 [label="Entry Unk.Pairwise", span="", cluster="Unk.Pairwise", file="Sequence.cs"];
m4_14 [label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>", span="", file="Sequence.cs"];
m4_15 [label="CommandLine.Core.Token", span="", file="Sequence.cs"];
m4_16 [label="CommandLine.Core.Token", span="", file="Sequence.cs"];
m5_57 [label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Specification.cs"];
m5_48 [label="Entry Unk.ThrowingValidate", span="", cluster="Unk.ThrowingValidate", file="Specification.cs"];
m5_67 [label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="58-58", cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="Specification.cs"];
m5_80 [label="Entry NotParsed<T>.cstr", span="", cluster="NotParsed<T>.cstr", file="Specification.cs"];
m5_113 [label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8", cluster="string.MatchName(string, string, System.StringComparer)", file="Specification.cs"];
m5_46 [label="Entry CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="126-126", cluster="CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="Specification.cs"];
m5_53 [label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="142-142", cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="Specification.cs"];
m5_3 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_19 [label="var typeInfo = factory.Return(f => f().GetType(), typeof(T))", span="42-42", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_23 [label="Func<T> makeDefault = () =>\r\n                typeof(T).IsMutable()\r\n                    ? factory.Return(f => f(), Activator.CreateInstance<T>())\r\n                    : ReflectionHelper.CreateDefaultImmutableInstance<T>(\r\n                        (from p in specProps select p.Specification.ConversionType).ToArray())", span="53-57", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_24 [label="arguments.Any()", span="59-59", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_25 [label="var preprocessorErrors = arguments.Preprocess(PreprocessorGuards.Lookup(nameComparer))", span="61-61", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_28 [label="var tokenizerResult = tokenizer(arguments, optionSpecs)", span="68-68", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_30 [label="var partitions = TokenPartitioner.Partition(\r\n                tokens,\r\n                name => TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer))", span="72-74", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_31 [label="var optionSpecProps = OptionMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                partitions.Options,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                nameComparer)", span="76-80", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_32 [label="var valueSpecProps = ValueMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                    partitions.Values,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture))", span="82-85", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_33 [label="var missingValueErrors = from token in partitions.Errors\r\n                                     select new MissingValueOptionError(\r\n                                         optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer)).FromOptionSpecification())", span="87-89", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_37 [label="instance = factory.Return(f => f(), Activator.CreateInstance<T>())", span="97-97", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_20 [label="var specProps = typeInfo.GetSpecifications(pi => SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>()))", span="44-45", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_36 [label="typeInfo.IsMutable()", span="95-95", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_39 [label="var ctor = typeInfo.GetConstructor((from sp in specProps select sp.Property.PropertyType).ToArray())", span="113-113", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_21 [label="var specs = from pt in specProps select pt.Specification", span="47-47", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_22 [label="var optionSpecs = specs\r\n                .ThrowingValidate(SpecificationGuards.Lookup)\r\n                .OfType<OptionSpecification>()", span="49-51", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_27 [label="return new NotParsed<T>(makeDefault(), preprocessorErrors);", span="64-64", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_26 [label="preprocessorErrors.Any()", span="62-62", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_29 [label="var tokens = tokenizerResult.SucceededWith()", span="70-70", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_43 [label="var allErrors = tokenizerResult.Messages()\r\n                .Concat(missingValueErrors)\r\n                .Concat(optionSpecProps.Messages())\r\n                .Concat(valueSpecProps.Messages())\r\n                .Concat(validationErrors)", span="125-129", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_42 [label="var validationErrors = specPropsWithValue.Validate(\r\n                SpecificationPropertyRules.Lookup(tokens))", span="122-123", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_34 [label="var specPropsWithValue = optionSpecProps.SucceededWith()\r\n                .Concat(valueSpecProps.SucceededWith())", span="91-92", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_35 [label="T instance", span="94-94", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_38 [label="instance = instance\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsJust(),\r\n                        sp => sp.Value.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                        sp => sp.Specification.DefaultValue.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing(),\r\n                        sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray())", span="98-109", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_40 [label="var values = (from prms in ctor.GetParameters()\r\n                              join sp in specPropsWithValue on prms.Name.ToLower() equals sp.Property.Name.ToLower()\r\n                              select sp.Value.Return(v => v,\r\n                                    sp.Specification.DefaultValue.Return(d => d,\r\n                                        sp.Specification.ConversionType.CreateDefaultForImmutable()))).ToArray()", span="114-118", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_41 [label="instance = (T)ctor.Invoke(values)", span="119-119", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_44 [label="return allErrors.Any()\r\n                ? (ParserResult<T>)new NotParsed<T>(instance, allErrors)\r\n                : (ParserResult<T>)new Parsed<T>(instance);", span="131-133", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_45 [label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_73 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="Specification.cs"];
m5_106 [label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="13-13", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_124 [label="Entry CSharpx.Maybe<T>.FromJust<T>(System.Exception)", span="160-160", cluster="CSharpx.Maybe<T>.FromJust<T>(System.Exception)", file="Specification.cs"];
m5_10 [label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Specification.cs"];
m5_95 [label="Entry Unk.>", span="", cluster="Unk.>", file="Specification.cs"];
m5_79 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="Specification.cs"];
m5_18 [label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16", cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Specification.cs"];
m5_60 [label="Entry CommandLine.Core.Specification.IsValue()", span="15-15", cluster="CommandLine.Core.Specification.IsValue()", file="Specification.cs"];
m5_72 [label="Entry System.Type.CreateDefaultForImmutable()", span="125-125", cluster="System.Type.CreateDefaultForImmutable()", file="Specification.cs"];
m5_70 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="Specification.cs"];
m5_76 [label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="40-40", cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="Specification.cs"];
m5_77 [label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Messages<TSuccess, TMessage>()", span="870-870", cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Messages<TSuccess, TMessage>()", file="Specification.cs"];
m5_14 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Specification.cs"];
m5_69 [label="Entry Unk.GetConstructor", span="", cluster="Unk.GetConstructor", file="Specification.cs"];
m5_62 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="Specification.cs"];
m5_47 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="14-14", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="Specification.cs"];
m5_50 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Specification.cs"];
m5_54 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="Specification.cs"];
m5_75 [label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12", cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="Specification.cs"];
m5_96 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="Specification.cs"];
m5_5 [label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="24-24", cluster="lambda expression", file="Specification.cs"];
m5_12 [label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="24-24", cluster="lambda expression", file="Specification.cs"];
m5_6 [label="var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="25-27", cluster="lambda expression", file="Specification.cs"];
m5_16 [label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="27-27", cluster="lambda expression", file="Specification.cs"];
m5_4 [label="Entry lambda expression", span="22-29", cluster="lambda expression", file="Specification.cs"];
m5_11 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="Specification.cs"];
m5_7 [label="return explodedTokens;", span="28-28", cluster="lambda expression", file="Specification.cs"];
m5_15 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="Specification.cs"];
m5_8 [label="Exit lambda expression", span="22-29", cluster="lambda expression", file="Specification.cs"];
m5_13 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="Specification.cs"];
m5_17 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="Specification.cs"];
m5_93 [label="typeof(T).IsMutable()\r\n                    ? factory.Return(f => f(), Activator.CreateInstance<T>())\r\n                    : ReflectionHelper.CreateDefaultImmutableInstance<T>(\r\n                        (from p in specProps select p.Specification.ConversionType).ToArray())", span="54-57", cluster="lambda expression", file="Specification.cs"];
m5_100 [label="TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer)", span="74-74", cluster="lambda expression", file="Specification.cs"];
m5_104 [label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="79-79", cluster="lambda expression", file="Specification.cs"];
m5_108 [label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="85-85", cluster="lambda expression", file="Specification.cs"];
m5_111 [label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="89-89", cluster="lambda expression", file="Specification.cs"];
m5_82 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="Specification.cs"];
m5_86 [label="Entry lambda expression", span="44-45", cluster="lambda expression", file="Specification.cs"];
m5_99 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="Specification.cs"];
m5_103 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="Specification.cs"];
m5_107 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="Specification.cs"];
m5_110 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="Specification.cs"];
m5_114 [label="Entry lambda expression", span="97-97", cluster="lambda expression", file="Specification.cs"];
m5_142 [label="Entry lambda expression", span="116-116", cluster="lambda expression", file="Specification.cs"];
m5_145 [label="Entry lambda expression", span="117-117", cluster="lambda expression", file="Specification.cs"];
m5_117 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="Specification.cs"];
m5_121 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="Specification.cs"];
m5_125 [label="Entry lambda expression", span="103-103", cluster="lambda expression", file="Specification.cs"];
m5_129 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="Specification.cs"];
m5_132 [label="Entry lambda expression", span="106-108", cluster="lambda expression", file="Specification.cs"];
m5_136 [label="Entry lambda expression", span="109-109", cluster="lambda expression", file="Specification.cs"];
m5_83 [label="f().GetType()", span="42-42", cluster="lambda expression", file="Specification.cs"];
m5_84 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="Specification.cs"];
m5_87 [label="SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>())", span="44-45", cluster="lambda expression", file="Specification.cs"];
m5_88 [label="Exit lambda expression", span="44-45", cluster="lambda expression", file="Specification.cs"];
m5_92 [label="Entry lambda expression", span="53-57", cluster="lambda expression", file="Specification.cs"];
m5_94 [label="Exit lambda expression", span="53-57", cluster="lambda expression", file="Specification.cs"];
m5_97 [label="f()", span="55-55", cluster="lambda expression", file="Specification.cs"];
m5_98 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="Specification.cs"];
m5_101 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="Specification.cs"];
m5_105 [label="Exit lambda expression", span="79-79", cluster="lambda expression", file="Specification.cs"];
m5_109 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="Specification.cs"];
m5_112 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="Specification.cs"];
m5_115 [label="f()", span="97-97", cluster="lambda expression", file="Specification.cs"];
m5_116 [label="Exit lambda expression", span="97-97", cluster="lambda expression", file="Specification.cs"];
m5_118 [label="sp.Value.IsJust()", span="100-100", cluster="lambda expression", file="Specification.cs"];
m5_119 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="Specification.cs"];
m5_122 [label="sp.Value.FromJust()", span="101-101", cluster="lambda expression", file="Specification.cs"];
m5_123 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="Specification.cs"];
m5_126 [label="sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust()", span="103-103", cluster="lambda expression", file="Specification.cs"];
m5_127 [label="Exit lambda expression", span="103-103", cluster="lambda expression", file="Specification.cs"];
m5_130 [label="sp.Specification.DefaultValue.FromJust()", span="104-104", cluster="lambda expression", file="Specification.cs"];
m5_131 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="Specification.cs"];
m5_133 [label="sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing()", span="106-108", cluster="lambda expression", file="Specification.cs"];
m5_134 [label="Exit lambda expression", span="106-108", cluster="lambda expression", file="Specification.cs"];
m5_137 [label="sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray()", span="109-109", cluster="lambda expression", file="Specification.cs"];
m5_138 [label="Exit lambda expression", span="109-109", cluster="lambda expression", file="Specification.cs"];
m5_143 [label=v, span="116-116", cluster="lambda expression", file="Specification.cs"];
m5_144 [label="Exit lambda expression", span="116-116", cluster="lambda expression", file="Specification.cs"];
m5_146 [label=d, span="117-117", cluster="lambda expression", file="Specification.cs"];
m5_147 [label="Exit lambda expression", span="117-117", cluster="lambda expression", file="Specification.cs"];
m5_85 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="Specification.cs"];
m5_52 [label="Entry System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11", cluster="System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="Specification.cs"];
m5_61 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="Specification.cs"];
m5_0 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_1 [label="return Build(\r\n                factory,\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="20-32", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_2 [label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m5_78 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="Specification.cs"];
m5_81 [label="Entry CommandLine.Parsed<T>.Parsed(T)", span="72-72", cluster="CommandLine.Parsed<T>.Parsed(T)", file="Specification.cs"];
m5_140 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="Specification.cs"];
m5_141 [label="Entry System.Type.CreateEmptyArray()", span="101-101", cluster="System.Type.CreateEmptyArray()", file="Specification.cs"];
m5_71 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="Specification.cs"];
m5_139 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="Specification.cs"];
m5_9 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Specification.cs"];
m5_89 [label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m5_102 [label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="23-23", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Specification.cs"];
m5_90 [label="Entry CSharpx.Maybe.Nothing<T>()", span="75-75", cluster="CSharpx.Maybe.Nothing<T>()", file="Specification.cs"];
m5_66 [label="Entry System.Activator.CreateInstance<T>()", span="0-0", cluster="System.Activator.CreateInstance<T>()", file="Specification.cs"];
m5_56 [label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", span="851-851", cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", file="Specification.cs"];
m5_58 [label="Entry CommandLine.Core.Specification.IsOption()", span="10-10", cluster="CommandLine.Core.Specification.IsOption()", file="Specification.cs"];
m5_128 [label="Entry CSharpx.Maybe<T>.IsNothing<T>()", span="170-170", cluster="CSharpx.Maybe<T>.IsNothing<T>()", file="Specification.cs"];
m5_135 [label="Entry CSharpx.Maybe<T>.MatchNothing()", span="29-29", cluster="CSharpx.Maybe<T>.MatchNothing()", file="Specification.cs"];
m5_65 [label="Entry System.Type.IsMutable()", span="115-115", cluster="System.Type.IsMutable()", file="Specification.cs"];
m5_91 [label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="21-21", cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="Specification.cs"];
m5_49 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="Specification.cs"];
m5_51 [label="Entry CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", span="11-11", cluster="CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", file="Specification.cs"];
m5_74 [label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0", cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="Specification.cs"];
m5_68 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="Specification.cs"];
m5_120 [label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="175-175", cluster="CSharpx.Maybe<T>.IsJust<T>()", file="Specification.cs"];
m5_63 [label="Entry Unk.FromOptionSpecification", span="", cluster="Unk.FromOptionSpecification", file="Specification.cs"];
m5_55 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="Specification.cs"];
m5_64 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="Specification.cs"];
m5_59 [label="Entry Unk.MapValues", span="", cluster="Unk.MapValues", file="Specification.cs"];
m5_148 [label="System.StringComparer", span="", file="Specification.cs"];
m5_149 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", file="Specification.cs"];
m5_150 [label="CSharpx.Maybe<System.Func<T>>", span="", file="Specification.cs"];
m5_151 [label=specProps, span="", file="Specification.cs"];
m5_152 [label="System.StringComparer", span="", file="Specification.cs"];
m5_153 [label=optionSpecs, span="", file="Specification.cs"];
m5_154 [label="System.Globalization.CultureInfo", span="", file="Specification.cs"];
m5_155 [label=token, span="", file="Specification.cs"];
m7_28 [label="Entry System.Collections.Generic.IEnumerable<TFirst>.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TFirst>.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", file="Switch.cs"];
m7_12 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="Switch.cs"];
m7_0 [label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11", cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Switch.cs"];
m7_1 [label="return from t in tokens\r\n                   where typeLookup(t.Text).Return(info => t.IsName() && info.TargetType == TargetType.Boolean, false)\r\n                   select t;", span="15-17", cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Switch.cs", color=green, community=0];
m7_2 [label="Exit CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11", cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", color=red, community=0, file="Switch.cs"];
m7_3 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="Switch.cs"];
m7_4 [label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="100-100", cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="Switch.cs"];
m7_26 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Switch.cs"];
m7_15 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="Switch.cs"];
m7_16 [label="Entry CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence_for_multiple_sequences()", span="38-38", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence_for_multiple_sequences()", file="Switch.cs"];
m7_17 [label="var expected = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''seq1'', new[] {''seq10'', ''seq11'', ''seq12''}),\r\n                    new KeyValuePair<string, IEnumerable<string>>(''seq2'', new[] {''seq20'', ''seq21''})\r\n                }", span="40-44", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence_for_multiple_sequences()", file="Switch.cs"];
m7_18 [label="var result = KeyValuePairHelper.ForSequence(new[]\r\n                {\r\n                    Token.Name(''seq1''), Token.Value(''seq10''), Token.Value(''seq11''), Token.Value(''seq12''),\r\n                    Token.Name(''seq2''), Token.Value(''seq20''), Token.Value(''seq21'')\r\n                })", span="46-50", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence_for_multiple_sequences()", file="Switch.cs"];
m7_19 [label="AssertEqual(expected, result)", span="52-52", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence_for_multiple_sequences()", file="Switch.cs"];
m7_20 [label="Exit CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence_for_multiple_sequences()", span="38-38", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence_for_multiple_sequences()", file="Switch.cs"];
m7_5 [label="Entry CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="22-22", cluster="CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="Switch.cs"];
m7_29 [label="Entry lambda expression", span="58-58", cluster="lambda expression", file="Switch.cs"];
m7_30 [label="new { Expected = e, Result = r }", span="58-58", cluster="lambda expression", file="Switch.cs"];
m7_31 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="Switch.cs"];
m7_6 [label="Entry CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.AssertEqual(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>)", span="55-55", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.AssertEqual(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>)", color=green, community=0, file="Switch.cs"];
m7_7 [label="Entry CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence()", span="22-22", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence()", file="Switch.cs"];
m7_27 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="Switch.cs"];
m7_13 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="Switch.cs"];
m7_8 [label="Entry CommandLine.Core.Token.IsName()", span="68-68", cluster="CommandLine.Core.Token.IsName()", file="Switch.cs"];
m7_9 [label=t, span="", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence()", file="Switch.cs"];
m7_10 [label="AssertEqual(expected, result)", span="34-34", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence()", file="Switch.cs"];
m7_11 [label="Exit CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence()", span="22-22", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence()", file="Switch.cs"];
m7_21 [label="Assert.Equal(expected.Count(), result.Count())", span="57-57", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.AssertEqual(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>)", file="Switch.cs"];
m7_22 [label="expected.Zip(result, (e, r) => new { Expected = e, Result = r })", span="58-58", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.AssertEqual(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>)", file="Switch.cs"];
m7_23 [label="Assert.Equal(value.Expected.Key, value.Result.Key)", span="60-60", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.AssertEqual(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>)", file="Switch.cs"];
m7_24 [label="Assert.Equal(value.Expected.Value, value.Result.Value)", span="61-61", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.AssertEqual(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>)", file="Switch.cs"];
m7_25 [label="Exit CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.AssertEqual(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>)", span="55-55", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.AssertEqual(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>)", file="Switch.cs"];
m7_14 [label="Entry CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="Switch.cs"];
m8_13 [label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="86-86", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="SwitchTests.cs"];
m8_14 [label="Assumes.NotNull(configuration, ''configuration'', SR.ArgumentNullException_ParserSettingsDelegateCannotBeNull)", span="88-88", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="SwitchTests.cs"];
m8_16 [label="configuration.Invoke(Settings)", span="91-91", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="SwitchTests.cs"];
m8_15 [label="_settings = new ParserSettings()", span="90-90", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="SwitchTests.cs"];
m8_17 [label="_settings.Consumed = true", span="92-92", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="SwitchTests.cs"];
m8_18 [label="Exit CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="86-86", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="SwitchTests.cs"];
m8_64 [label="Entry CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", span="228-228", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="SwitchTests.cs"];
m8_65 [label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="230-230", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="SwitchTests.cs"];
m8_66 [label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="231-231", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="SwitchTests.cs"];
m8_67 [label="Assumes.NotNull(options, ''onVerbCommand'', SR.ArgumentNullException_OnVerbDelegateCannotBeNull)", span="232-232", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="SwitchTests.cs"];
m8_69 [label="!DoParseArgumentsVerbs(args, options, ref verbInstance)", span="236-236", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="SwitchTests.cs"];
m8_70 [label="onVerbCommand(args.FirstOrDefault() ?? string.Empty, null)", span="238-238", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="SwitchTests.cs"];
m8_71 [label="InvokeAutoBuildIfNeeded(options)", span="240-240", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="SwitchTests.cs"];
m8_72 [label="onFail == null", span="242-242", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="SwitchTests.cs"];
m8_74 [label="onFail()", span="248-248", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="SwitchTests.cs"];
m8_76 [label="onVerbCommand(args.FirstOrDefault() ?? string.Empty, verbInstance)", span="254-254", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="SwitchTests.cs"];
m8_68 [label="object verbInstance = null", span="234-234", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="SwitchTests.cs"];
m8_73 [label="Environment.Exit(DefaultExitCodeFail)", span="244-244", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="SwitchTests.cs"];
m8_75 [label="return false;", span="251-251", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="SwitchTests.cs"];
m8_77 [label="return true;", span="255-255", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="SwitchTests.cs"];
m8_78 [label="Exit CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", span="228-228", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="SwitchTests.cs"];
m8_125 [label="Entry CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="432-432", cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="SwitchTests.cs"];
m8_190 [label="var caseSensitive = _settings.CaseSensitive", span="434-434", cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="SwitchTests.cs"];
m8_191 [label=args, span="435-435", cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="SwitchTests.cs"];
m8_192 [label="helpOption.ShortName != null", span="437-437", cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="SwitchTests.cs"];
m8_193 [label="ArgumentParser.CompareShort(arg, helpOption.ShortName, caseSensitive)", span="439-439", cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="SwitchTests.cs"];
m8_195 [label="string.IsNullOrEmpty(helpOption.LongName)", span="445-445", cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="SwitchTests.cs"];
m8_196 [label="ArgumentParser.CompareLong(arg, helpOption.LongName, caseSensitive)", span="450-450", cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="SwitchTests.cs"];
m8_198 [label="return false;", span="456-456", cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="SwitchTests.cs"];
m8_194 [label="return true;", span="441-441", cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="SwitchTests.cs"];
m8_197 [label="return true;", span="452-452", cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="SwitchTests.cs"];
m8_199 [label="Exit CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="432-432", cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="SwitchTests.cs"];
m8_229 [label="Entry object.HasVerbHelp()", span="44-44", cluster="object.HasVerbHelp()", file="SwitchTests.cs"];
m8_28 [label="Entry CommandLine.Parser.~Parser()", span="110-110", cluster="CommandLine.Parser.~Parser()", file="SwitchTests.cs"];
m8_29 [label="Dispose(false)", span="112-112", cluster="CommandLine.Parser.~Parser()", file="SwitchTests.cs"];
m8_30 [label="Exit CommandLine.Parser.~Parser()", span="110-110", cluster="CommandLine.Parser.~Parser()", file="SwitchTests.cs"];
m8_84 [label="Entry CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", span="269-269", cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="SwitchTests.cs"];
m8_85 [label="found = false", span="271-271", cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="SwitchTests.cs"];
m8_86 [label="string.IsNullOrEmpty(verb)", span="272-272", cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="SwitchTests.cs"];
m8_87 [label="return target;", span="274-274", cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="SwitchTests.cs"];
m8_88 [label="var pair = ReflectionUtil.RetrieveOptionProperty<VerbOptionAttribute>(target, verb)", span="277-277", cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="SwitchTests.cs"];
m8_90 [label="return found ? pair.Left.GetValue(target, null) : target;", span="279-279", cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="SwitchTests.cs"];
m8_89 [label="found = pair != null", span="278-278", cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="SwitchTests.cs"];
m8_91 [label="Exit CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", span="269-269", cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="SwitchTests.cs"];
m8_128 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)", file="SwitchTests.cs"];
m8_189 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="SwitchTests.cs"];
m8_156 [label="Entry CommandLine.Infrastructure.ArgumentParser.Create(string, bool)", span="59-59", cluster="CommandLine.Infrastructure.ArgumentParser.Create(string, bool)", file="SwitchTests.cs"];
m8_223 [label="Entry CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", span="85-85", cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="SwitchTests.cs"];
m8_231 [label="Entry CommandLine.Text.HelpText.AutoBuild(object, System.Action<CommandLine.Text.HelpText>, bool)", span="277-277", cluster="CommandLine.Text.HelpText.AutoBuild(object, System.Action<CommandLine.Text.HelpText>, bool)", file="SwitchTests.cs"];
m8_19 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="SwitchTests.cs"];
m8_151 [label="Entry CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.ParserSettings)", span="102-102", cluster="CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.ParserSettings)", file="SwitchTests.cs"];
m8_37 [label="Entry CommandLine.Parser.DoParseArguments(string[], object)", span="311-311", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="SwitchTests.cs"];
m8_113 [label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="313-313", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="SwitchTests.cs"];
m8_116 [label="ParseHelp(args, pair.Right) || !DoParseArgumentsCore(args, options)", span="319-319", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="SwitchTests.cs"];
m8_118 [label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="322-322", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="SwitchTests.cs"];
m8_122 [label="return DoParseArgumentsCore(args, options);", span="330-330", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="SwitchTests.cs"];
m8_114 [label="var helpWriter = _settings.HelpWriter", span="314-314", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="SwitchTests.cs"];
m8_115 [label="pair != null && helpWriter != null", span="316-316", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="SwitchTests.cs"];
m8_119 [label="helpWriter.Write(helpText)", span="323-323", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="SwitchTests.cs"];
m8_117 [label="string helpText", span="321-321", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="SwitchTests.cs"];
m8_121 [label="return true;", span="327-327", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="SwitchTests.cs"];
m8_120 [label="return false;", span="324-324", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="SwitchTests.cs"];
m8_123 [label="Exit CommandLine.Parser.DoParseArguments(string[], object)", span="311-311", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="SwitchTests.cs"];
m8_4 [label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="67-67", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="SwitchTests.cs"];
m8_5 [label="Assumes.NotNull(settings, ''settings'', SR.ArgumentNullException_ParserSettingsInstanceCannotBeNull)", span="69-69", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="SwitchTests.cs"];
m8_6 [label="settings.Consumed", span="71-71", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="SwitchTests.cs"];
m8_8 [label="_settings = settings", span="76-76", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="SwitchTests.cs"];
m8_7 [label="throw new InvalidOperationException(SR.InvalidOperationException_ParserSettingsInstanceCanBeUsedOnce);", span="73-73", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="SwitchTests.cs"];
m8_9 [label="_settings.Consumed = true", span="77-77", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="SwitchTests.cs"];
m8_10 [label="Exit CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="67-67", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="SwitchTests.cs"];
m8_62 [label="Entry System.Environment.Exit(int)", span="0-0", cluster="System.Environment.Exit(int)", file="SwitchTests.cs"];
m8_201 [label="Entry CommandLine.Infrastructure.ArgumentParser.CompareLong(string, string, bool)", span="51-51", cluster="CommandLine.Infrastructure.ArgumentParser.CompareLong(string, string, bool)", file="SwitchTests.cs"];
m8_235 [label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", span="337-337", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", file="SwitchTests.cs"];
m8_158 [label="Entry CommandLine.Infrastructure.ValueMapper.MapValueItem(string)", span="68-68", cluster="CommandLine.Infrastructure.ValueMapper.MapValueItem(string)", file="SwitchTests.cs"];
m8_3 [label="Entry CommandLine.ParserSettings.ParserSettings()", span="50-50", cluster="CommandLine.ParserSettings.ParserSettings()", file="SwitchTests.cs"];
m8_159 [label="Entry CommandLine.Infrastructure.OptionMap.EnforceRules()", span="162-162", cluster="CommandLine.Infrastructure.OptionMap.EnforceRules()", file="SwitchTests.cs"];
m8_154 [label="Entry CommandLine.Infrastructure.StringArrayEnumerator.StringArrayEnumerator(string[])", span="36-36", cluster="CommandLine.Infrastructure.StringArrayEnumerator.StringArrayEnumerator(string[])", file="SwitchTests.cs"];
m8_32 [label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="141-141", cluster="CommandLine.Parser.ParseArguments(string[], object)", file="SwitchTests.cs"];
m8_33 [label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="143-143", cluster="CommandLine.Parser.ParseArguments(string[], object)", file="SwitchTests.cs"];
m8_34 [label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="144-144", cluster="CommandLine.Parser.ParseArguments(string[], object)", file="SwitchTests.cs"];
m8_35 [label="return DoParseArguments(args, options);", span="146-146", cluster="CommandLine.Parser.ParseArguments(string[], object)", file="SwitchTests.cs"];
m8_36 [label="Exit CommandLine.Parser.ParseArguments(string[], object)", span="141-141", cluster="CommandLine.Parser.ParseArguments(string[], object)", file="SwitchTests.cs"];
m8_184 [label="Entry CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", span="459-459", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="SwitchTests.cs"];
m8_202 [label="var helpWriter = _settings.HelpWriter", span="461-461", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="SwitchTests.cs"];
m8_203 [label="helpInfo != null && helpWriter != null", span="462-462", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="SwitchTests.cs"];
m8_204 [label="string.Compare(args[0], helpInfo.Right.LongName, GetStringComparison(_settings)) == 0", span="464-464", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="SwitchTests.cs"];
m8_205 [label="var verb = args.FirstOrDefault()", span="467-467", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="SwitchTests.cs"];
m8_207 [label="var verbOption = optionMap[verb]", span="470-470", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="SwitchTests.cs"];
m8_209 [label="verbOption.GetValue(options) == null", span="473-473", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="SwitchTests.cs"];
m8_210 [label="verbOption.CreateInstance(options)", span="476-476", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="SwitchTests.cs"];
m8_211 [label="DisplayHelpVerbText(options, helpInfo, verb)", span="481-481", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="SwitchTests.cs"];
m8_213 [label="return false;", span="486-486", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="SwitchTests.cs"];
m8_206 [label="verb != null", span="468-468", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="SwitchTests.cs"];
m8_208 [label="verbOption != null", span="471-471", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="SwitchTests.cs"];
m8_212 [label="return true;", span="482-482", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="SwitchTests.cs"];
m8_214 [label="Exit CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", span="459-459", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="SwitchTests.cs"];
m8_49 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="SwitchTests.cs"];
m8_124 [label="Entry CommandLine.Helpers.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="86-86", cluster="CommandLine.Helpers.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="SwitchTests.cs"];
m8_50 [label="Entry CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", span="189-189", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="SwitchTests.cs"];
m8_51 [label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="191-191", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="SwitchTests.cs"];
m8_52 [label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="192-192", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="SwitchTests.cs"];
m8_53 [label="!DoParseArguments(args, options)", span="194-194", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="SwitchTests.cs"];
m8_54 [label="InvokeAutoBuildIfNeeded(options)", span="196-196", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="SwitchTests.cs"];
m8_55 [label="onFail == null", span="198-198", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="SwitchTests.cs"];
m8_57 [label="onFail()", span="204-204", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="SwitchTests.cs"];
m8_59 [label="return true;", span="210-210", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="SwitchTests.cs"];
m8_56 [label="Environment.Exit(DefaultExitCodeFail)", span="200-200", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="SwitchTests.cs"];
m8_58 [label="return false;", span="207-207", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="SwitchTests.cs"];
m8_60 [label="Exit CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", span="189-189", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="SwitchTests.cs"];
m8_0 [label="Entry CommandLine.Parser.Parser()", span="55-55", cluster="CommandLine.Parser.Parser()", file="SwitchTests.cs"];
m8_1 [label="_settings = new ParserSettings { Consumed = true }", span="57-57", cluster="CommandLine.Parser.Parser()", file="SwitchTests.cs"];
m8_2 [label="Exit CommandLine.Parser.Parser()", span="55-55", cluster="CommandLine.Parser.Parser()", file="SwitchTests.cs"];
m8_153 [label="Entry CommandLine.Infrastructure.ValueMapper.ValueMapper(object, System.Globalization.CultureInfo)", span="45-45", cluster="CommandLine.Infrastructure.ValueMapper.ValueMapper(object, System.Globalization.CultureInfo)", file="SwitchTests.cs"];
m8_155 [label="Entry CommandLine.Infrastructure.StringArrayEnumerator.MoveNext()", span="91-91", cluster="CommandLine.Infrastructure.StringArrayEnumerator.MoveNext()", file="SwitchTests.cs"];
m8_183 [label="Entry CommandLine.Infrastructure.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.ParserSettings)", span="135-135", cluster="CommandLine.Infrastructure.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.ParserSettings)", file="SwitchTests.cs"];
m8_232 [label="Entry lambda expression", span="520-520", cluster="lambda expression", file="SwitchTests.cs"];
m8_22 [label="Entry lambda expression", span="97-103", cluster="lambda expression", file="SwitchTests.cs"];
m8_23 [label="with.CaseSensitive = false", span="99-99", cluster="lambda expression", file="SwitchTests.cs"];
m8_24 [label="with.MutuallyExclusive = false", span="100-100", cluster="lambda expression", file="SwitchTests.cs"];
m8_25 [label="with.HelpWriter = Console.Error", span="101-101", cluster="lambda expression", file="SwitchTests.cs"];
m8_26 [label="with.ParsingCulture = CultureInfo.InvariantCulture", span="102-102", cluster="lambda expression", file="SwitchTests.cs"];
m8_27 [label="Exit lambda expression", span="97-103", cluster="lambda expression", file="SwitchTests.cs"];
m8_233 [label="HelpText.DefaultParsingErrorsHandler(options, current)", span="520-520", cluster="lambda expression", file="SwitchTests.cs"];
m8_234 [label="Exit lambda expression", span="520-520", cluster="lambda expression", file="SwitchTests.cs"];
m8_47 [label="Entry CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", span="379-379", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_160 [label="var verbs = ReflectionUtil.RetrievePropertyList<VerbOptionAttribute>(options)", span="381-381", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_161 [label="var helpInfo = ReflectionUtil.RetrieveMethod<HelpVerbOptionAttribute>(options)", span="382-382", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_162 [label="args.Length == 0", span="383-383", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_164 [label="DisplayHelpVerbText(options, helpInfo, null)", span="387-387", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_166 [label="var optionMap = OptionMap.Create(options, verbs, _settings)", span="393-393", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_167 [label="TryParseHelpVerb(args, options, helpInfo, optionMap)", span="396-396", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_169 [label="var verbOption = optionMap[args.First()]", span="402-402", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_172 [label="DisplayHelpVerbText(options, helpInfo, null)", span="409-409", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_174 [label="verbInstance = verbOption.GetValue(options)", span="415-415", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_176 [label="verbInstance = verbOption.CreateInstance(options)", span="419-419", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_177 [label="var verbResult = DoParseArgumentsCore(args.Skip(1).ToArray(), verbInstance)", span="422-422", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_179 [label="DisplayHelpVerbText(options, helpInfo, args.First())", span="426-426", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_163 [label="helpInfo != null || _settings.HelpWriter != null", span="385-385", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_171 [label="helpInfo != null", span="407-407", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_178 [label="!verbResult && helpInfo != null", span="423-423", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_165 [label="return false;", span="390-390", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_168 [label="return false;", span="399-399", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_170 [label="verbOption == null", span="405-405", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_173 [label="return false;", span="412-412", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_175 [label="verbInstance == null", span="416-416", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_180 [label="return verbResult;", span="429-429", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_181 [label="Exit CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", span="379-379", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="SwitchTests.cs"];
m8_108 [label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="SwitchTests.cs"];
m8_185 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="SwitchTests.cs"];
m8_126 [label="Entry CommandLine.Parser.DoParseArgumentsCore(string[], object)", span="333-333", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_129 [label="var hadError = false", span="335-335", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_130 [label="var optionMap = OptionMap.Create(options, _settings)", span="336-336", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_132 [label="var valueMapper = new ValueMapper(options, _settings.ParsingCulture)", span="338-338", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_133 [label="var arguments = new StringArrayEnumerator(args)", span="340-340", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_139 [label="var result = parser.Parse(arguments, optionMap, options)", span="352-352", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_141 [label="SetParserStateIfNeeded(options, parser.PostParsingState)", span="355-355", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_148 [label="hadError |= !optionMap.EnforceRules()", span="374-374", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_131 [label="optionMap.SetDefaults()", span="337-337", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_145 [label="valueMapper.CanReceiveValues", span="365-365", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_146 [label="!valueMapper.MapValueItem(argument)", span="367-367", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_134 [label="arguments.MoveNext()", span="341-341", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_135 [label="var argument = arguments.Current", span="343-343", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_144 [label="arguments.MoveNext()", span="362-362", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_136 [label="string.IsNullOrEmpty(argument)", span="344-344", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_137 [label="var parser = ArgumentParser.Create(argument, _settings.IgnoreUnknownArguments)", span="349-349", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_138 [label="parser != null", span="350-350", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_140 [label="(result & PresentParserState.Failure) == PresentParserState.Failure", span="353-353", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_143 [label="(result & PresentParserState.MoveOnNextElement) == PresentParserState.MoveOnNextElement", span="360-360", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_142 [label="hadError = true", span="356-356", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_147 [label="hadError = true", span="369-369", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_149 [label="return !hadError;", span="376-376", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_150 [label="Exit CommandLine.Parser.DoParseArgumentsCore(string[], object)", span="333-333", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="SwitchTests.cs"];
m8_152 [label="Entry CommandLine.Infrastructure.OptionMap.SetDefaults()", span="167-167", cluster="CommandLine.Infrastructure.OptionMap.SetDefaults()", file="SwitchTests.cs"];
m8_188 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="SwitchTests.cs"];
m8_157 [label="Entry CommandLine.Infrastructure.ArgumentParser.Parse(CommandLine.Infrastructure.IArgumentEnumerator, CommandLine.Infrastructure.OptionMap, object)", span="99-99", cluster="CommandLine.Infrastructure.ArgumentParser.Parse(CommandLine.Infrastructure.IArgumentEnumerator, CommandLine.Infrastructure.OptionMap, object)", file="SwitchTests.cs"];
m8_186 [label="Entry CommandLine.Infrastructure.OptionInfo.GetValue(object)", span="141-141", cluster="CommandLine.Infrastructure.OptionInfo.GetValue(object)", file="SwitchTests.cs"];
m8_228 [label="Entry object.HasHelp()", span="39-39", cluster="object.HasHelp()", file="SwitchTests.cs"];
m8_95 [label="Entry CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="282-282", cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="SwitchTests.cs"];
m8_96 [label="!options.CanReceiveParserState()", span="284-284", cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="SwitchTests.cs"];
m8_98 [label="var property = ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(options)[0].Left", span="289-289", cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="SwitchTests.cs"];
m8_99 [label="property.GetValue(options, null) == null", span="292-292", cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="SwitchTests.cs"];
m8_100 [label="property.SetValue(options, new ParserState(), null)", span="295-295", cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="SwitchTests.cs"];
m8_101 [label="var parserState = (IParserState)property.GetValue(options, null)", span="298-298", cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="SwitchTests.cs"];
m8_102 [label=errors, span="300-300", cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="SwitchTests.cs"];
m8_97 [label="return;", span="286-286", cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="SwitchTests.cs"];
m8_103 [label="parserState.Errors.Add(error)", span="302-302", cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="SwitchTests.cs"];
m8_104 [label="Exit CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="282-282", cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="SwitchTests.cs"];
m8_93 [label="Entry CommandLine.Helpers.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="199-199", cluster="CommandLine.Helpers.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="SwitchTests.cs"];
m8_127 [label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="106-106", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="SwitchTests.cs"];
m8_230 [label="Entry object.HasVerbs()", span="34-34", cluster="object.HasVerbs()", file="SwitchTests.cs"];
m8_109 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="SwitchTests.cs"];
m8_20 [label="Entry CommandLine.Parser.Parser(bool)", span="96-96", cluster="CommandLine.Parser.Parser(bool)", file="SwitchTests.cs"];
m8_21 [label="Exit CommandLine.Parser.Parser(bool)", span="96-96", cluster="CommandLine.Parser.Parser(bool)", file="SwitchTests.cs"];
m8_200 [label="Entry CommandLine.Infrastructure.ArgumentParser.CompareShort(string, char?, bool)", span="43-43", cluster="CommandLine.Infrastructure.ArgumentParser.CompareShort(string, char?, bool)", file="SwitchTests.cs"];
m8_83 [label="Entry System.GC.SuppressFinalize(object)", span="0-0", cluster="System.GC.SuppressFinalize(object)", file="SwitchTests.cs"];
m8_38 [label="Entry CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", span="162-162", cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="SwitchTests.cs"];
m8_39 [label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="164-164", cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="SwitchTests.cs"];
m8_40 [label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="165-165", cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="SwitchTests.cs"];
m8_41 [label="Assumes.NotNull(options, ''onVerbCommand'', SR.ArgumentNullException_OnVerbDelegateCannotBeNull)", span="166-166", cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="SwitchTests.cs"];
m8_43 [label="var result = DoParseArgumentsVerbs(args, options, ref verbInstance)", span="170-170", cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="SwitchTests.cs"];
m8_44 [label="onVerbCommand(args.FirstOrDefault() ?? string.Empty, result ? verbInstance : null)", span="172-172", cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="SwitchTests.cs"];
m8_42 [label="object verbInstance = null", span="168-168", cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="SwitchTests.cs"];
m8_45 [label="return result;", span="174-174", cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="SwitchTests.cs"];
m8_46 [label="Exit CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", span="162-162", cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="SwitchTests.cs"];
m8_92 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="SwitchTests.cs"];
m8_105 [label="Entry object.CanReceiveParserState()", span="49-49", cluster="object.CanReceiveParserState()", file="SwitchTests.cs"];
m8_48 [label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="SwitchTests.cs"];
m8_243 [label="Entry CommandLine.ParserSettings.Dispose()", span="216-216", cluster="CommandLine.ParserSettings.Dispose()", file="SwitchTests.cs"];
m8_12 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SwitchTests.cs"];
m8_187 [label="Entry CommandLine.Infrastructure.OptionInfo.CreateInstance(object)", span="146-146", cluster="CommandLine.Infrastructure.OptionInfo.CreateInstance(object)", file="SwitchTests.cs"];
m8_79 [label="Entry CommandLine.Parser.Dispose()", span="261-261", cluster="CommandLine.Parser.Dispose()", file="SwitchTests.cs"];
m8_80 [label="Dispose(true)", span="263-263", cluster="CommandLine.Parser.Dispose()", file="SwitchTests.cs"];
m8_81 [label="GC.SuppressFinalize(this)", span="265-265", cluster="CommandLine.Parser.Dispose()", file="SwitchTests.cs"];
m8_82 [label="Exit CommandLine.Parser.Dispose()", span="261-261", cluster="CommandLine.Parser.Dispose()", file="SwitchTests.cs"];
m8_182 [label="Entry CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="489-489", cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="SwitchTests.cs"];
m8_216 [label="string helpText", span="491-491", cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="SwitchTests.cs"];
m8_217 [label="verb == null", span="492-492", cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="SwitchTests.cs"];
m8_218 [label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, null, out helpText)", span="494-494", cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="SwitchTests.cs"];
m8_219 [label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, verb, out helpText)", span="498-498", cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="SwitchTests.cs"];
m8_220 [label="_settings.HelpWriter != null", span="501-501", cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="SwitchTests.cs"];
m8_221 [label="_settings.HelpWriter.Write(helpText)", span="503-503", cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="SwitchTests.cs"];
m8_222 [label="Exit CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="489-489", cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="SwitchTests.cs"];
m8_11 [label="Entry CommandLine.Helpers.Assumes.NotNull<T>(T, string, string)", span="40-40", cluster="CommandLine.Helpers.Assumes.NotNull<T>(T, string, string)", file="SwitchTests.cs"];
m8_107 [label="Entry CommandLine.ParserState.ParserState()", span="34-34", cluster="CommandLine.ParserState.ParserState()", file="SwitchTests.cs"];
m8_110 [label="Entry CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", span="306-306", cluster="CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", file="SwitchTests.cs"];
m8_111 [label="return settings.CaseSensitive ? StringComparison.Ordinal : StringComparison.OrdinalIgnoreCase;", span="308-308", cluster="CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", file="SwitchTests.cs"];
m8_112 [label="Exit CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", span="306-306", cluster="CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", file="SwitchTests.cs"];
m8_215 [label="Entry string.Compare(string, string, System.StringComparison)", span="0-0", cluster="string.Compare(string, string, System.StringComparison)", file="SwitchTests.cs"];
m8_31 [label="Entry CommandLine.Parser.Dispose(bool)", span="524-524", cluster="CommandLine.Parser.Dispose(bool)", file="SwitchTests.cs"];
m8_236 [label=_disposed, span="526-526", cluster="CommandLine.Parser.Dispose(bool)", file="SwitchTests.cs"];
m8_238 [label=disposing, span="531-531", cluster="CommandLine.Parser.Dispose(bool)", file="SwitchTests.cs"];
m8_237 [label="return;", span="528-528", cluster="CommandLine.Parser.Dispose(bool)", file="SwitchTests.cs"];
m8_239 [label="_settings != null", span="533-533", cluster="CommandLine.Parser.Dispose(bool)", file="SwitchTests.cs"];
m8_240 [label="_settings.Dispose()", span="535-535", cluster="CommandLine.Parser.Dispose(bool)", file="SwitchTests.cs"];
m8_241 [label="_disposed = true", span="538-538", cluster="CommandLine.Parser.Dispose(bool)", file="SwitchTests.cs"];
m8_242 [label="Exit CommandLine.Parser.Dispose(bool)", span="524-524", cluster="CommandLine.Parser.Dispose(bool)", file="SwitchTests.cs"];
m8_63 [label="Entry System.Action.Invoke()", span="0-0", cluster="System.Action.Invoke()", file="SwitchTests.cs"];
m8_61 [label="Entry CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", span="507-507", cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="SwitchTests.cs"];
m8_224 [label="_settings.HelpWriter == null ||\r\n                options.HasHelp() ||\r\n                options.HasVerbHelp()", span="509-511", cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="SwitchTests.cs"];
m8_226 [label="_settings.HelpWriter.Write(\r\n                HelpText.AutoBuild(\r\n                    options,\r\n                    current => HelpText.DefaultParsingErrorsHandler(options, current),\r\n                    options.HasVerbs()))", span="517-521", cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="SwitchTests.cs"];
m8_225 [label="return;", span="513-513", cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="SwitchTests.cs"];
m8_227 [label="Exit CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", span="507-507", cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="SwitchTests.cs"];
m8_94 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="SwitchTests.cs"];
m8_106 [label="Entry CommandLine.Helpers.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="46-46", cluster="CommandLine.Helpers.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="SwitchTests.cs"];
m8_244 [label="CommandLine.Parser", span="", file="SwitchTests.cs"];
m8_245 [label=object, span="", file="SwitchTests.cs"];
m9_23 [label="Entry CommandLine.ParserResultExtensions.WithNotParsed<T>(CommandLine.ParserResult<T>, System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="56-56", cluster="CommandLine.ParserResultExtensions.WithNotParsed<T>(CommandLine.ParserResult<T>, System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="TypeDescriptor.cs"];
m9_24 [label="var notParsed = result as NotParsed<T>", span="58-58", cluster="CommandLine.ParserResultExtensions.WithNotParsed<T>(CommandLine.ParserResult<T>, System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="TypeDescriptor.cs"];
m9_26 [label="action(notParsed.Errors)", span="61-61", cluster="CommandLine.ParserResultExtensions.WithNotParsed<T>(CommandLine.ParserResult<T>, System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="TypeDescriptor.cs"];
m9_27 [label="return result;", span="63-63", cluster="CommandLine.ParserResultExtensions.WithNotParsed<T>(CommandLine.ParserResult<T>, System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="TypeDescriptor.cs"];
m9_25 [label="notParsed != null", span="59-59", cluster="CommandLine.ParserResultExtensions.WithNotParsed<T>(CommandLine.ParserResult<T>, System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="TypeDescriptor.cs"];
m9_28 [label="Exit CommandLine.ParserResultExtensions.WithNotParsed<T>(CommandLine.ParserResult<T>, System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="56-56", cluster="CommandLine.ParserResultExtensions.WithNotParsed<T>(CommandLine.ParserResult<T>, System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="TypeDescriptor.cs"];
m9_19 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="TypeDescriptor.cs"];
m9_20 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="TypeDescriptor.cs"];
m9_21 [label="t == typeof(T)", span="33-33", cluster="lambda expression", file="TypeDescriptor.cs"];
m9_22 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="TypeDescriptor.cs"];
m9_29 [label="Entry CommandLine.ParserResultExtensions.Return<TSource, TResult>(CommandLine.ParserResult<TSource>, System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="75-75", cluster="CommandLine.ParserResultExtensions.Return<TSource, TResult>(CommandLine.ParserResult<TSource>, System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="TypeDescriptor.cs"];
m9_30 [label="var parsed = result as Parsed<TSource>", span="79-79", cluster="CommandLine.ParserResultExtensions.Return<TSource, TResult>(CommandLine.ParserResult<TSource>, System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="TypeDescriptor.cs"];
m9_32 [label="return parsedFunc(parsed.Value);", span="82-82", cluster="CommandLine.ParserResultExtensions.Return<TSource, TResult>(CommandLine.ParserResult<TSource>, System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="TypeDescriptor.cs"];
m9_33 [label="return notParsedFunc(((NotParsed<TSource>)result).Errors);", span="84-84", cluster="CommandLine.ParserResultExtensions.Return<TSource, TResult>(CommandLine.ParserResult<TSource>, System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="TypeDescriptor.cs"];
m9_31 [label="parsed != null", span="80-80", cluster="CommandLine.ParserResultExtensions.Return<TSource, TResult>(CommandLine.ParserResult<TSource>, System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="TypeDescriptor.cs"];
m9_34 [label="Exit CommandLine.ParserResultExtensions.Return<TSource, TResult>(CommandLine.ParserResult<TSource>, System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="75-75", cluster="CommandLine.ParserResultExtensions.Return<TSource, TResult>(CommandLine.ParserResult<TSource>, System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="TypeDescriptor.cs"];
m9_35 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="TypeDescriptor.cs"];
m9_7 [label="Entry CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<object>, System.Action<T>)", span="31-31", cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<object>, System.Action<T>)", file="TypeDescriptor.cs"];
m9_8 [label="!result.VerbTypes.Any(t => t == typeof(T))", span="33-33", cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<object>, System.Action<T>)", file="TypeDescriptor.cs"];
m9_10 [label="var parsed = result as Parsed<object>", span="37-37", cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<object>, System.Action<T>)", file="TypeDescriptor.cs"];
m9_12 [label="result.Value.GetType() == typeof(T)", span="40-40", cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<object>, System.Action<T>)", file="TypeDescriptor.cs"];
m9_13 [label="action((T)parsed.Value)", span="42-42", cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<object>, System.Action<T>)", file="TypeDescriptor.cs"];
m9_14 [label="return result;", span="45-45", cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<object>, System.Action<T>)", file="TypeDescriptor.cs"];
m9_9 [label="throw new InvalidOperationException(string.Format(''{0} is not a verb type.'', typeof(T).Name));", span="35-35", cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<object>, System.Action<T>)", file="TypeDescriptor.cs"];
m9_11 [label="parsed != null", span="38-38", cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<object>, System.Action<T>)", file="TypeDescriptor.cs"];
m9_15 [label="Exit CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<object>, System.Action<T>)", span="31-31", cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<object>, System.Action<T>)", file="TypeDescriptor.cs"];
m9_6 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="TypeDescriptor.cs"];
m9_18 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="TypeDescriptor.cs"];
m9_16 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="TypeDescriptor.cs"];
m9_0 [label="Entry CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<T>, System.Action<T>)", span="21-21", cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<T>, System.Action<T>)", file="TypeDescriptor.cs"];
m9_1 [label="var parsed = result as Parsed<T>", span="23-23", cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<T>, System.Action<T>)", file="TypeDescriptor.cs"];
m9_3 [label="action(parsed.Value)", span="26-26", cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<T>, System.Action<T>)", color=red, community=0, file="TypeDescriptor.cs"];
m9_4 [label="return result;", span="28-28", cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<T>, System.Action<T>)", color=red, community=0, file="TypeDescriptor.cs"];
m9_2 [label="parsed != null", span="24-24", cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<T>, System.Action<T>)", file="TypeDescriptor.cs"];
m9_5 [label="Exit CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<T>, System.Action<T>)", span="21-21", cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<T>, System.Action<T>)", file="TypeDescriptor.cs"];
m9_17 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="TypeDescriptor.cs"];
m10_14 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="TypeLookup.cs"];
m10_4 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="TypeLookup.cs"];
m10_10 [label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8", cluster="string.MatchName(string, string, System.StringComparer)", file="TypeLookup.cs"];
m10_6 [label="Entry Unk.Map", span="", cluster="Unk.Map", file="TypeLookup.cs"];
m10_5 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="TypeLookup.cs"];
m10_0 [label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs"];
m10_1 [label="var info = specifications.SingleOrDefault(a => name.MatchName(a.ShortName, a.LongName, comparer))\r\n                .ToMaybe()\r\n                    .Map(\r\n                        s => TypeDescriptor.Create(s.TargetType, s.Max))", span="17-20", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs"];
m10_2 [label="return info;", span="21-21", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs"];
m10_3 [label="Exit CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs"];
m10_11 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="TypeLookup.cs"];
m10_8 [label="name.MatchName(a.ShortName, a.LongName, comparer)", span="17-17", cluster="lambda expression", file="TypeLookup.cs"];
m10_7 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="TypeLookup.cs"];
m10_9 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="TypeLookup.cs"];
m10_12 [label="TypeDescriptor.Create(s.TargetType, s.Max)", span="20-20", cluster="lambda expression", file="TypeLookup.cs"];
m10_13 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="TypeLookup.cs"];
m10_15 [label=string, span="", file="TypeLookup.cs"];
m10_16 [label="System.StringComparer", span="", file="TypeLookup.cs"];
m1_0 -> m1_1  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid, color=green];
m1_2 -> m1_7  [key=2, style=dotted, color=green];
m1_2 -> m1_8  [key=2, style=dotted, color=green];
m1_2 -> m1_9  [key=2, style=dotted, color=green];
m1_2 -> m1_10  [key=2, style=dotted, color=green];
m1_2 -> m1_11  [key=2, style=dotted, color=green];
m1_2 -> m1_12  [key=2, style=dotted, color=green];
m1_2 -> m1_16  [key=1, style=dashed, color=green, label="lambda expression"];
m1_1 -> m1_2  [key=0, style=solid, color=green];
m1_1 -> m1_6  [key=2, style=dotted];
m1_1 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label=tokenPartitions];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_13  [key=2, style=dotted];
m1_3 -> m1_14  [key=2, style=dotted];
m1_3 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_3 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_4 -> m1_11  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_15  [key=2, style=dotted];
m1_4 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_5 -> m1_0  [key=0, style=bold, color=blue];
m1_28 -> m1_29  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_18 -> m1_16  [key=0, style=bold, color=blue];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_19  [key=2, style=dotted];
m1_22 -> m1_20  [key=0, style=bold, color=blue];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=2, style=dotted];
m1_26 -> m1_24  [key=0, style=bold, color=blue];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_27  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_23  [key=2, style=dotted];
m1_29 -> m1_31  [key=2, style=dotted];
m1_30 -> m1_28  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid, color=green];
m3_0 -> m3_5  [key=1, style=dashed, color=green, label="System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>"];
m3_1 -> m3_1  [key=1, style=dashed, color=green, label=tseq];
m3_1 -> m3_2  [key=0, style=solid, color=green];
m3_1 -> m3_3  [key=2, style=dotted, color=green];
m3_1 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label=expectedErrors];
m3_1 -> m3_6  [key=2, style=dotted];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_7  [key=2, style=dotted];
m3_2 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_18 -> m3_19  [key=0, style=solid];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_17  [key=2, style=dotted];
m3_19 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label=expectedErrors];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_7  [key=2, style=dotted];
m3_20 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_9  [key=2, style=dotted];
m3_22 -> m3_10  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_8  [key=2, style=dotted];
m3_23 -> m3_18  [key=0, style=bold, color=blue];
m3_6 -> m3_4  [key=0, style=bold, color=blue];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_8  [key=2, style=dotted];
m3_30 -> m3_31  [key=0, style=solid];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_36  [key=2, style=dotted];
m3_31 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label=expected];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_7  [key=2, style=dotted];
m3_32 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_37  [key=2, style=dotted];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_8  [key=2, style=dotted];
m3_35 -> m3_30  [key=0, style=bold, color=blue];
m3_4 -> m3_5  [key=0, style=solid, color=green];
m3_4 -> m3_9  [key=2, style=dotted];
m3_4 -> m3_10  [key=2, style=dotted];
m3_4 -> m3_12  [key=1, style=dashed, color=green, label="CommandLine.Core.Token"];
m3_5 -> m3_0  [key=0, style=bold, color=blue];
m3_5 -> m3_6  [key=0, style=solid, color=green];
m3_5 -> m3_7  [key=2, style=dotted, color=green];
m3_5 -> m3_8  [key=2, style=dotted, color=green];
m3_5 -> m3_9  [key=2, style=dotted, color=green];
m3_5 -> m3_10  [key=2, style=dotted, color=green];
m3_5 -> m3_11  [key=1, style=dashed, color=green, label="lambda expression"];
m3_11 -> m3_12  [key=0, style=solid, color=green];
m3_12 -> m3_13  [key=0, style=solid, color=green];
m3_12 -> m3_17  [key=2, style=dotted];
m3_12 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label=expectedErrors];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_7  [key=2, style=dotted];
m3_13 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_13 -> m3_11  [key=0, style=bold, color=blue];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_9  [key=2, style=dotted];
m3_15 -> m3_10  [key=2, style=dotted];
m3_15 -> m3_12  [key=1, style=dashed, color=green, label="CommandLine.Core.Token"];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_8  [key=2, style=dotted];
m3_14 -> m3_5  [key=1, style=dashed, color=green, label="System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>"];
m3_16 -> m3_11  [key=0, style=bold, color=blue];
m3_16 -> m3_12  [key=1, style=dashed, color=green, label="CommandLine.Core.Token"];
m3_24 -> m3_25  [key=0, style=solid];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_17  [key=2, style=dotted];
m3_25 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label=expectedErrors];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_7  [key=2, style=dotted];
m3_26 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_9  [key=2, style=dotted];
m3_28 -> m3_10  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_8  [key=2, style=dotted];
m3_29 -> m3_24  [key=0, style=bold, color=blue];
m4_11 -> m4_12  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid, color=red];
m4_5 -> m4_7  [key=2, style=dotted, color=red];
m4_5 -> m4_8  [key=2, style=dotted, color=red];
m4_5 -> m4_9  [key=2, style=dotted, color=red];
m4_5 -> m4_10  [key=2, style=dotted, color=red];
m4_5 -> m4_11  [key=1, style=dashed, color=red, label="lambda expression"];
m4_4 -> m4_5  [key=0, style=solid, color=red];
m4_4 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m4_12 -> m4_13  [key=0, style=solid];
m4_6 -> m4_4  [key=0, style=bold, color=blue];
m4_13 -> m4_11  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid, color=red];
m4_0 -> m4_5  [key=1, style=dashed, color=red, label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>"];
m4_1 -> m4_2  [key=0, style=solid, color=red];
m4_1 -> m4_3  [key=2, style=dotted, color=red];
m4_1 -> m4_4  [key=1, style=dashed, color=red, label="lambda expression"];
m4_1 -> m4_1  [key=1, style=dashed, color=red, label=tseq];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_14 -> m4_5  [key=1, style=dashed, color=red, label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>"];
m4_15 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m4_16 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m5_3 -> m5_19  [key=0, style=solid];
m5_3 -> m5_23  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<System.Func<T>>"];
m5_3 -> m5_93  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<System.Func<T>>"];
m5_3 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m5_3 -> m5_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m5_3 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>"];
m5_3 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_3 -> m5_100  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_3 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_3 -> m5_104  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m5_3 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m5_3 -> m5_108  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m5_3 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_3 -> m5_111  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_3 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<System.Func<T>>"];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_46  [key=2, style=dotted];
m5_19 -> m5_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_19 -> m5_36  [key=1, style=dashed, color=darkseagreen4, label=typeInfo];
m5_19 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label=typeInfo];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label=makeDefault];
m5_23 -> m5_1  [key=3, color=darkorchid, style=bold, label="Property variable CommandLine.Infrastructure.Maybe<int> Min"];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_28  [key=0, style=solid];
m5_24 -> m5_50  [key=2, style=dotted];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_51  [key=2, style=dotted];
m5_25 -> m5_52  [key=2, style=dotted];
m5_25 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label=preprocessorErrors];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_55  [key=2, style=dotted];
m5_28 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label=tokenizerResult];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_57  [key=2, style=dotted];
m5_30 -> m5_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_30 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=partitions];
m5_30 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=partitions];
m5_30 -> m5_1  [key=3, color=darkorchid, style=bold, label="Property variable System.Type ConversionType"];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_58  [key=2, style=dotted];
m5_31 -> m5_59  [key=2, style=dotted];
m5_31 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label=pt];
m5_31 -> m5_103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_31 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label=optionSpecProps];
m5_31 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label=optionSpecProps];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_60  [key=2, style=dotted];
m5_32 -> m5_59  [key=2, style=dotted];
m5_32 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=pt];
m5_32 -> m5_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_32 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label=valueSpecProps];
m5_32 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label=valueSpecProps];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_61  [key=2, style=dotted];
m5_33 -> m5_62  [key=2, style=dotted];
m5_33 -> m5_63  [key=2, style=dotted];
m5_33 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=token];
m5_33 -> m5_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_33 -> m5_111  [key=1, style=dashed, color=darkseagreen4, label=token];
m5_33 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label=missingValueErrors];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_66  [key=2, style=dotted];
m5_37 -> m5_46  [key=2, style=dotted];
m5_37 -> m5_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_47  [key=2, style=dotted];
m5_20 -> m5_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_20 -> m5_23  [key=1, style=dashed, color=darkseagreen4, label=specProps];
m5_20 -> m5_93  [key=1, style=dashed, color=darkseagreen4, label=specProps];
m5_20 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label=specProps];
m5_20 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=specProps];
m5_20 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label=specProps];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_39  [key=0, style=solid];
m5_36 -> m5_65  [key=2, style=dotted];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_68  [key=2, style=dotted];
m5_39 -> m5_69  [key=2, style=dotted];
m5_39 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label=sp];
m5_39 -> m5_41  [key=1, style=dashed, color=darkseagreen4, label=ctor];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label=pt];
m5_21 -> m5_1  [key=3, color=darkorchid, style=bold, label="Property variable CommandLine.Core.SpecificationType Tag"];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_48  [key=2, style=dotted];
m5_22 -> m5_49  [key=2, style=dotted];
m5_22 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m5_22 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m5_22 -> m5_100  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m5_22 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m5_27 -> m5_45  [key=0, style=solid];
m5_27 -> m5_53  [key=2, style=dotted];
m5_27 -> m5_54  [key=2, style=dotted];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_28  [key=0, style=solid];
m5_26 -> m5_50  [key=2, style=dotted];
m5_26 -> m5_1  [key=3, color=darkorchid, style=bold, label="Property variable CommandLine.Infrastructure.Maybe<int> Max"];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_56  [key=2, style=dotted];
m5_29 -> m5_42  [key=1, style=dashed, color=darkseagreen4, label=tokens];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_77  [key=2, style=dotted];
m5_43 -> m5_78  [key=2, style=dotted];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_75  [key=2, style=dotted];
m5_42 -> m5_76  [key=2, style=dotted];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_56  [key=2, style=dotted];
m5_34 -> m5_64  [key=2, style=dotted];
m5_34 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label=specPropsWithValue];
m5_34 -> m5_40  [key=1, style=dashed, color=darkseagreen4, label=specPropsWithValue];
m5_34 -> m5_42  [key=1, style=dashed, color=darkseagreen4, label=specPropsWithValue];
m5_35 -> m5_36  [key=0, style=solid];
m5_38 -> m5_42  [key=0, style=solid];
m5_38 -> m5_67  [key=2, style=dotted];
m5_38 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_38 -> m5_117  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_38 -> m5_121  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_38 -> m5_125  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_38 -> m5_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_38 -> m5_132  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_38 -> m5_136  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_38 -> m5_44  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_70  [key=2, style=dotted];
m5_40 -> m5_71  [key=2, style=dotted];
m5_40 -> m5_72  [key=2, style=dotted];
m5_40 -> m5_46  [key=2, style=dotted];
m5_40 -> m5_73  [key=2, style=dotted];
m5_40 -> m5_40  [key=1, style=dashed, color=darkseagreen4, label=prms];
m5_40 -> m5_142  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_40 -> m5_145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_74  [key=2, style=dotted];
m5_41 -> m5_44  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_79  [key=2, style=dotted];
m5_44 -> m5_80  [key=2, style=dotted];
m5_44 -> m5_81  [key=2, style=dotted];
m5_45 -> m5_3  [key=0, style=bold, color=blue];
m5_96 -> m5_97  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_9  [key=2, style=dotted];
m5_5 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_14  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_10  [key=2, style=dotted];
m5_6 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_18  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m5_4 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m5_4 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m5_11 -> m5_12  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_15 -> m5_16  [key=0, style=solid];
m5_8 -> m5_4  [key=0, style=bold, color=blue];
m5_13 -> m5_11  [key=0, style=bold, color=blue];
m5_17 -> m5_15  [key=0, style=bold, color=blue];
m5_93 -> m5_94  [key=0, style=solid];
m5_93 -> m5_65  [key=2, style=dotted];
m5_93 -> m5_66  [key=2, style=dotted];
m5_93 -> m5_46  [key=2, style=dotted];
m5_93 -> m5_68  [key=2, style=dotted];
m5_93 -> m5_95  [key=2, style=dotted];
m5_93 -> m5_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_93 -> m5_93  [key=1, style=dashed, color=darkseagreen4, label=p];
m5_100 -> m5_101  [key=0, style=solid];
m5_100 -> m5_102  [key=2, style=dotted];
m5_104 -> m5_105  [key=0, style=solid];
m5_104 -> m5_106  [key=2, style=dotted];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_106  [key=2, style=dotted];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_113  [key=2, style=dotted];
m5_82 -> m5_83  [key=0, style=solid];
m5_86 -> m5_87  [key=0, style=solid];
m5_99 -> m5_100  [key=0, style=solid];
m5_103 -> m5_104  [key=0, style=solid];
m5_107 -> m5_108  [key=0, style=solid];
m5_110 -> m5_111  [key=0, style=solid];
m5_114 -> m5_115  [key=0, style=solid];
m5_142 -> m5_143  [key=0, style=solid];
m5_145 -> m5_146  [key=0, style=solid];
m5_117 -> m5_118  [key=0, style=solid];
m5_121 -> m5_122  [key=0, style=solid];
m5_125 -> m5_126  [key=0, style=solid];
m5_129 -> m5_130  [key=0, style=solid];
m5_132 -> m5_133  [key=0, style=solid];
m5_136 -> m5_137  [key=0, style=solid];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_54  [key=2, style=dotted];
m5_83 -> m5_85  [key=2, style=dotted];
m5_84 -> m5_82  [key=0, style=bold, color=blue];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_89  [key=2, style=dotted];
m5_87 -> m5_90  [key=2, style=dotted];
m5_87 -> m5_91  [key=2, style=dotted];
m5_88 -> m5_86  [key=0, style=bold, color=blue];
m5_92 -> m5_93  [key=0, style=solid];
m5_94 -> m5_92  [key=0, style=bold, color=blue];
m5_97 -> m5_98  [key=0, style=solid];
m5_97 -> m5_54  [key=2, style=dotted];
m5_98 -> m5_96  [key=0, style=bold, color=blue];
m5_101 -> m5_99  [key=0, style=bold, color=blue];
m5_105 -> m5_103  [key=0, style=bold, color=blue];
m5_109 -> m5_107  [key=0, style=bold, color=blue];
m5_112 -> m5_110  [key=0, style=bold, color=blue];
m5_115 -> m5_116  [key=0, style=solid];
m5_115 -> m5_54  [key=2, style=dotted];
m5_116 -> m5_114  [key=0, style=bold, color=blue];
m5_118 -> m5_119  [key=0, style=solid];
m5_118 -> m5_120  [key=2, style=dotted];
m5_119 -> m5_117  [key=0, style=bold, color=blue];
m5_122 -> m5_123  [key=0, style=solid];
m5_122 -> m5_124  [key=2, style=dotted];
m5_123 -> m5_121  [key=0, style=bold, color=blue];
m5_126 -> m5_127  [key=0, style=solid];
m5_126 -> m5_128  [key=2, style=dotted];
m5_126 -> m5_120  [key=2, style=dotted];
m5_127 -> m5_125  [key=0, style=bold, color=blue];
m5_130 -> m5_131  [key=0, style=solid];
m5_130 -> m5_124  [key=2, style=dotted];
m5_131 -> m5_129  [key=0, style=bold, color=blue];
m5_133 -> m5_134  [key=0, style=solid];
m5_133 -> m5_128  [key=2, style=dotted];
m5_133 -> m5_135  [key=2, style=dotted];
m5_134 -> m5_132  [key=0, style=bold, color=blue];
m5_137 -> m5_138  [key=0, style=solid];
m5_137 -> m5_139  [key=2, style=dotted];
m5_137 -> m5_140  [key=2, style=dotted];
m5_137 -> m5_141  [key=2, style=dotted];
m5_138 -> m5_136  [key=0, style=bold, color=blue];
m5_143 -> m5_144  [key=0, style=solid];
m5_144 -> m5_142  [key=0, style=bold, color=blue];
m5_146 -> m5_147  [key=0, style=solid];
m5_147 -> m5_145  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_0 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_0 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_0 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_1 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m5_148 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_148 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_148 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_148 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_149 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m5_149 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m5_150 -> m5_93  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<System.Func<T>>"];
m5_151 -> m5_93  [key=1, style=dashed, color=darkseagreen4, label=specProps];
m5_152 -> m5_100  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_152 -> m5_111  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_153 -> m5_100  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m5_154 -> m5_104  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m5_154 -> m5_108  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m5_155 -> m5_111  [key=1, style=dashed, color=darkseagreen4, label=token];
m7_0 -> m7_1  [key=0, style=solid, color=green];
m7_1 -> m7_2  [key=0, style=solid, color=green];
m7_1 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label=expected];
m7_1 -> m7_1  [key=1, style=dashed, color=green, label=t];
m7_1 -> m7_4  [key=2, style=dotted, color=green];
m7_1 -> m7_5  [key=1, style=dashed, color=green, label="lambda expression"];
m7_1 -> m7_6  [key=1, style=dashed, color=green, label=t];
m7_2 -> m7_3  [key=0, style=solid, color=red];
m7_2 -> m7_5  [key=2, style=dotted, color=red];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_6  [key=2, style=dotted];
m7_4 -> m7_0  [key=0, style=bold, color=blue];
m7_16 -> m7_17  [key=0, style=solid];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_12  [key=2, style=dotted];
m7_17 -> m7_19  [key=1, style=dashed, color=darkseagreen4, label=expected];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_13  [key=2, style=dotted];
m7_18 -> m7_14  [key=2, style=dotted];
m7_18 -> m7_5  [key=2, style=dotted];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_6  [key=2, style=dotted];
m7_20 -> m7_16  [key=0, style=bold, color=blue];
m7_5 -> m7_6  [key=0, style=solid, color=green];
m7_29 -> m7_30  [key=0, style=solid];
m7_30 -> m7_31  [key=0, style=solid];
m7_31 -> m7_29  [key=0, style=bold, color=blue];
m7_6 -> m7_7  [key=0, style=solid, color=green];
m7_6 -> m7_8  [key=2, style=dotted, color=green];
m7_6 -> m7_21  [key=0, style=solid];
m7_6 -> m7_22  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>"];
m7_7 -> m7_5  [key=0, style=bold, color=blue];
m7_7 -> m7_8  [key=0, style=solid];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_12  [key=2, style=dotted];
m7_8 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label=expected];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_13  [key=2, style=dotted];
m7_9 -> m7_14  [key=2, style=dotted];
m7_9 -> m7_5  [key=2, style=dotted];
m7_9 -> m7_15  [key=2, style=dotted];
m7_9 -> m7_6  [key=1, style=dashed, color=green, label=t];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_6  [key=2, style=dotted];
m7_11 -> m7_7  [key=0, style=bold, color=blue];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_26  [key=2, style=dotted];
m7_21 -> m7_27  [key=2, style=dotted];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_25  [key=0, style=solid];
m7_22 -> m7_28  [key=2, style=dotted];
m7_22 -> m7_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_22 -> m7_24  [key=1, style=dashed, color=darkseagreen4, label=value];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_27  [key=2, style=dotted];
m7_24 -> m7_22  [key=0, style=solid];
m7_24 -> m7_27  [key=2, style=dotted];
m7_25 -> m7_6  [key=0, style=bold, color=blue];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label="System.Action<CommandLine.ParserSettings>"];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_11  [key=2, style=dotted];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_19  [key=2, style=dotted];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_3  [key=2, style=dotted];
m8_17 -> m8_18  [key=0, style=solid];
m8_18 -> m8_13  [key=0, style=bold, color=blue];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_66  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_64 -> m8_67  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_64 -> m8_69  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_64 -> m8_70  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_64 -> m8_71  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_64 -> m8_72  [key=1, style=dashed, color=darkseagreen4, label="System.Action"];
m8_64 -> m8_74  [key=1, style=dashed, color=darkseagreen4, label="System.Action"];
m8_64 -> m8_76  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_11  [key=2, style=dotted];
m8_66 -> m8_67  [key=0, style=solid];
m8_66 -> m8_11  [key=2, style=dotted];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_11  [key=2, style=dotted];
m8_69 -> m8_70  [key=0, style=solid];
m8_69 -> m8_76  [key=0, style=solid];
m8_69 -> m8_47  [key=2, style=dotted];
m8_69 -> m8_69  [key=1, style=dashed, color=darkseagreen4, label=verbInstance];
m8_70 -> m8_71  [key=0, style=solid];
m8_70 -> m8_48  [key=2, style=dotted];
m8_70 -> m8_49  [key=2, style=dotted];
m8_71 -> m8_72  [key=0, style=solid];
m8_71 -> m8_61  [key=2, style=dotted];
m8_72 -> m8_73  [key=0, style=solid];
m8_72 -> m8_74  [key=0, style=solid];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_63  [key=2, style=dotted];
m8_76 -> m8_77  [key=0, style=solid];
m8_76 -> m8_48  [key=2, style=dotted];
m8_76 -> m8_49  [key=2, style=dotted];
m8_68 -> m8_69  [key=0, style=solid];
m8_73 -> m8_75  [key=0, style=solid];
m8_73 -> m8_62  [key=2, style=dotted];
m8_75 -> m8_78  [key=0, style=solid];
m8_77 -> m8_78  [key=0, style=solid];
m8_78 -> m8_64  [key=0, style=bold, color=blue];
m8_125 -> m8_190  [key=0, style=solid];
m8_125 -> m8_191  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_125 -> m8_192  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpOptionAttribute"];
m8_125 -> m8_193  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpOptionAttribute"];
m8_125 -> m8_195  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpOptionAttribute"];
m8_125 -> m8_196  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpOptionAttribute"];
m8_190 -> m8_191  [key=0, style=solid];
m8_190 -> m8_193  [key=1, style=dashed, color=darkseagreen4, label=caseSensitive];
m8_190 -> m8_196  [key=1, style=dashed, color=darkseagreen4, label=caseSensitive];
m8_191 -> m8_192  [key=0, style=solid];
m8_191 -> m8_198  [key=0, style=solid];
m8_191 -> m8_193  [key=1, style=dashed, color=darkseagreen4, label=arg];
m8_191 -> m8_196  [key=1, style=dashed, color=darkseagreen4, label=arg];
m8_192 -> m8_193  [key=0, style=solid];
m8_192 -> m8_195  [key=0, style=solid];
m8_193 -> m8_194  [key=0, style=solid];
m8_193 -> m8_195  [key=0, style=solid];
m8_193 -> m8_200  [key=2, style=dotted];
m8_195 -> m8_196  [key=0, style=solid];
m8_195 -> m8_191  [key=0, style=solid];
m8_195 -> m8_92  [key=2, style=dotted];
m8_196 -> m8_197  [key=0, style=solid];
m8_196 -> m8_191  [key=0, style=solid];
m8_196 -> m8_201  [key=2, style=dotted];
m8_198 -> m8_199  [key=0, style=solid];
m8_194 -> m8_199  [key=0, style=solid];
m8_197 -> m8_199  [key=0, style=solid];
m8_199 -> m8_125  [key=0, style=bold, color=blue];
m8_28 -> m8_29  [key=0, style=solid];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_31  [key=2, style=dotted];
m8_30 -> m8_28  [key=0, style=bold, color=blue];
m8_84 -> m8_85  [key=0, style=solid];
m8_84 -> m8_86  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_84 -> m8_87  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_84 -> m8_88  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_84 -> m8_90  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_85 -> m8_86  [key=0, style=solid];
m8_86 -> m8_87  [key=0, style=solid];
m8_86 -> m8_88  [key=0, style=solid];
m8_86 -> m8_92  [key=2, style=dotted];
m8_87 -> m8_91  [key=0, style=solid];
m8_88 -> m8_89  [key=0, style=solid];
m8_88 -> m8_93  [key=2, style=dotted];
m8_88 -> m8_90  [key=1, style=dashed, color=darkseagreen4, label=pair];
m8_90 -> m8_91  [key=0, style=solid];
m8_90 -> m8_94  [key=2, style=dotted];
m8_89 -> m8_90  [key=0, style=solid];
m8_89 -> m8_91  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m8_91 -> m8_84  [key=0, style=bold, color=blue];
m8_37 -> m8_113  [key=0, style=solid];
m8_37 -> m8_116  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_37 -> m8_118  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_37 -> m8_122  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_113 -> m8_114  [key=0, style=solid];
m8_113 -> m8_124  [key=2, style=dotted];
m8_113 -> m8_115  [key=1, style=dashed, color=darkseagreen4, label=pair];
m8_113 -> m8_116  [key=1, style=dashed, color=darkseagreen4, label=pair];
m8_113 -> m8_118  [key=1, style=dashed, color=darkseagreen4, label=pair];
m8_116 -> m8_117  [key=0, style=solid];
m8_116 -> m8_121  [key=0, style=solid];
m8_116 -> m8_125  [key=2, style=dotted];
m8_116 -> m8_126  [key=2, style=dotted];
m8_118 -> m8_119  [key=0, style=solid];
m8_118 -> m8_127  [key=2, style=dotted];
m8_122 -> m8_123  [key=0, style=solid];
m8_122 -> m8_126  [key=2, style=dotted];
m8_114 -> m8_115  [key=0, style=solid];
m8_114 -> m8_119  [key=1, style=dashed, color=darkseagreen4, label=helpWriter];
m8_115 -> m8_116  [key=0, style=solid];
m8_115 -> m8_122  [key=0, style=solid];
m8_119 -> m8_120  [key=0, style=solid];
m8_119 -> m8_128  [key=2, style=dotted];
m8_117 -> m8_118  [key=0, style=solid];
m8_121 -> m8_123  [key=0, style=solid];
m8_120 -> m8_123  [key=0, style=solid];
m8_123 -> m8_37  [key=0, style=bold, color=blue];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m8_4 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_11  [key=2, style=dotted];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_8  [key=0, style=solid];
m8_8 -> m8_9  [key=0, style=solid];
m8_7 -> m8_10  [key=0, style=solid];
m8_7 -> m8_12  [key=2, style=dotted];
m8_9 -> m8_10  [key=0, style=solid];
m8_10 -> m8_4  [key=0, style=bold, color=blue];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_32 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_11  [key=2, style=dotted];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_11  [key=2, style=dotted];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_37  [key=2, style=dotted];
m8_36 -> m8_32  [key=0, style=bold, color=blue];
m8_184 -> m8_202  [key=0, style=solid];
m8_184 -> m8_203  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>"];
m8_184 -> m8_204  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_184 -> m8_205  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_184 -> m8_207  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Infrastructure.OptionMap"];
m8_184 -> m8_209  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_184 -> m8_210  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_184 -> m8_211  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_202 -> m8_203  [key=0, style=solid];
m8_203 -> m8_204  [key=0, style=solid];
m8_203 -> m8_213  [key=0, style=solid];
m8_204 -> m8_205  [key=0, style=solid];
m8_204 -> m8_213  [key=0, style=solid];
m8_204 -> m8_110  [key=2, style=dotted];
m8_204 -> m8_215  [key=2, style=dotted];
m8_205 -> m8_206  [key=0, style=solid];
m8_205 -> m8_48  [key=2, style=dotted];
m8_205 -> m8_207  [key=1, style=dashed, color=darkseagreen4, label=verb];
m8_205 -> m8_211  [key=1, style=dashed, color=darkseagreen4, label=verb];
m8_207 -> m8_208  [key=0, style=solid];
m8_207 -> m8_209  [key=1, style=dashed, color=darkseagreen4, label=verbOption];
m8_207 -> m8_210  [key=1, style=dashed, color=darkseagreen4, label=verbOption];
m8_209 -> m8_210  [key=0, style=solid];
m8_209 -> m8_211  [key=0, style=solid];
m8_209 -> m8_186  [key=2, style=dotted];
m8_210 -> m8_211  [key=0, style=solid];
m8_210 -> m8_187  [key=2, style=dotted];
m8_211 -> m8_212  [key=0, style=solid];
m8_211 -> m8_182  [key=2, style=dotted];
m8_213 -> m8_214  [key=0, style=solid];
m8_206 -> m8_207  [key=0, style=solid];
m8_206 -> m8_211  [key=0, style=solid];
m8_208 -> m8_209  [key=0, style=solid];
m8_208 -> m8_211  [key=0, style=solid];
m8_212 -> m8_214  [key=0, style=solid];
m8_214 -> m8_184  [key=0, style=bold, color=blue];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_52  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_50 -> m8_53  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_50 -> m8_54  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_50 -> m8_55  [key=1, style=dashed, color=darkseagreen4, label="System.Action"];
m8_50 -> m8_57  [key=1, style=dashed, color=darkseagreen4, label="System.Action"];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_11  [key=2, style=dotted];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_11  [key=2, style=dotted];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_59  [key=0, style=solid];
m8_53 -> m8_37  [key=2, style=dotted];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_61  [key=2, style=dotted];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_57  [key=0, style=solid];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_63  [key=2, style=dotted];
m8_59 -> m8_60  [key=0, style=solid];
m8_56 -> m8_58  [key=0, style=solid];
m8_56 -> m8_62  [key=2, style=dotted];
m8_58 -> m8_60  [key=0, style=solid];
m8_60 -> m8_50  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=2, style=dotted];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m8_232 -> m8_233  [key=0, style=solid];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m8_22 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m8_22 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m8_23 -> m8_24  [key=0, style=solid];
m8_24 -> m8_25  [key=0, style=solid];
m8_25 -> m8_26  [key=0, style=solid];
m8_26 -> m8_27  [key=0, style=solid];
m8_27 -> m8_22  [key=0, style=bold, color=blue];
m8_233 -> m8_234  [key=0, style=solid];
m8_233 -> m8_235  [key=2, style=dotted];
m8_234 -> m8_232  [key=0, style=bold, color=blue];
m8_47 -> m8_160  [key=0, style=solid];
m8_47 -> m8_161  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_47 -> m8_162  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_47 -> m8_164  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_47 -> m8_166  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_47 -> m8_167  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_47 -> m8_169  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_47 -> m8_172  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_47 -> m8_174  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_47 -> m8_176  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_47 -> m8_177  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_47 -> m8_179  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_160 -> m8_161  [key=0, style=solid];
m8_160 -> m8_106  [key=2, style=dotted];
m8_160 -> m8_166  [key=1, style=dashed, color=darkseagreen4, label=verbs];
m8_161 -> m8_162  [key=0, style=solid];
m8_161 -> m8_124  [key=2, style=dotted];
m8_161 -> m8_163  [key=1, style=dashed, color=darkseagreen4, label=helpInfo];
m8_161 -> m8_164  [key=1, style=dashed, color=darkseagreen4, label=helpInfo];
m8_161 -> m8_167  [key=1, style=dashed, color=darkseagreen4, label=helpInfo];
m8_161 -> m8_171  [key=1, style=dashed, color=darkseagreen4, label=helpInfo];
m8_161 -> m8_172  [key=1, style=dashed, color=darkseagreen4, label=helpInfo];
m8_161 -> m8_178  [key=1, style=dashed, color=darkseagreen4, label=helpInfo];
m8_161 -> m8_179  [key=1, style=dashed, color=darkseagreen4, label=helpInfo];
m8_162 -> m8_163  [key=0, style=solid];
m8_162 -> m8_166  [key=0, style=solid];
m8_164 -> m8_165  [key=0, style=solid];
m8_164 -> m8_182  [key=2, style=dotted];
m8_166 -> m8_167  [key=0, style=solid];
m8_166 -> m8_183  [key=2, style=dotted];
m8_166 -> m8_169  [key=1, style=dashed, color=darkseagreen4, label=optionMap];
m8_167 -> m8_168  [key=0, style=solid];
m8_167 -> m8_169  [key=0, style=solid];
m8_167 -> m8_184  [key=2, style=dotted];
m8_169 -> m8_170  [key=0, style=solid];
m8_169 -> m8_185  [key=2, style=dotted];
m8_169 -> m8_174  [key=1, style=dashed, color=darkseagreen4, label=verbOption];
m8_169 -> m8_176  [key=1, style=dashed, color=darkseagreen4, label=verbOption];
m8_172 -> m8_173  [key=0, style=solid];
m8_172 -> m8_182  [key=2, style=dotted];
m8_174 -> m8_175  [key=0, style=solid];
m8_174 -> m8_186  [key=2, style=dotted];
m8_174 -> m8_177  [key=1, style=dashed, color=darkseagreen4, label="ref object"];
m8_174 -> m8_181  [key=1, style=dashed, color=darkseagreen4, label="ref object"];
m8_176 -> m8_177  [key=0, style=solid];
m8_176 -> m8_187  [key=2, style=dotted];
m8_176 -> m8_181  [key=1, style=dashed, color=darkseagreen4, label="ref object"];
m8_177 -> m8_178  [key=0, style=solid];
m8_177 -> m8_188  [key=2, style=dotted];
m8_177 -> m8_189  [key=2, style=dotted];
m8_177 -> m8_126  [key=2, style=dotted];
m8_177 -> m8_180  [key=1, style=dashed, color=darkseagreen4, label=verbResult];
m8_179 -> m8_180  [key=0, style=solid];
m8_179 -> m8_185  [key=2, style=dotted];
m8_179 -> m8_182  [key=2, style=dotted];
m8_163 -> m8_164  [key=0, style=solid];
m8_163 -> m8_165  [key=0, style=solid];
m8_171 -> m8_172  [key=0, style=solid];
m8_171 -> m8_173  [key=0, style=solid];
m8_178 -> m8_179  [key=0, style=solid];
m8_178 -> m8_180  [key=0, style=solid];
m8_165 -> m8_181  [key=0, style=solid];
m8_168 -> m8_181  [key=0, style=solid];
m8_170 -> m8_171  [key=0, style=solid];
m8_170 -> m8_174  [key=0, style=solid];
m8_173 -> m8_181  [key=0, style=solid];
m8_175 -> m8_176  [key=0, style=solid];
m8_175 -> m8_177  [key=0, style=solid];
m8_180 -> m8_181  [key=0, style=solid];
m8_181 -> m8_47  [key=0, style=bold, color=blue];
m8_126 -> m8_129  [key=0, style=solid];
m8_126 -> m8_130  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_126 -> m8_132  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_126 -> m8_133  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_126 -> m8_139  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_126 -> m8_141  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_129 -> m8_130  [key=0, style=solid];
m8_129 -> m8_148  [key=1, style=dashed, color=darkseagreen4, label=hadError];
m8_130 -> m8_131  [key=0, style=solid];
m8_130 -> m8_151  [key=2, style=dotted];
m8_130 -> m8_139  [key=1, style=dashed, color=darkseagreen4, label=optionMap];
m8_130 -> m8_148  [key=1, style=dashed, color=darkseagreen4, label=optionMap];
m8_132 -> m8_133  [key=0, style=solid];
m8_132 -> m8_153  [key=2, style=dotted];
m8_132 -> m8_145  [key=1, style=dashed, color=darkseagreen4, label=valueMapper];
m8_132 -> m8_146  [key=1, style=dashed, color=darkseagreen4, label=valueMapper];
m8_133 -> m8_134  [key=0, style=solid];
m8_133 -> m8_154  [key=2, style=dotted];
m8_133 -> m8_135  [key=1, style=dashed, color=darkseagreen4, label=arguments];
m8_133 -> m8_139  [key=1, style=dashed, color=darkseagreen4, label=arguments];
m8_133 -> m8_144  [key=1, style=dashed, color=darkseagreen4, label=arguments];
m8_139 -> m8_140  [key=0, style=solid];
m8_139 -> m8_157  [key=2, style=dotted];
m8_139 -> m8_143  [key=1, style=dashed, color=darkseagreen4, label=result];
m8_141 -> m8_142  [key=0, style=solid];
m8_141 -> m8_95  [key=2, style=dotted];
m8_148 -> m8_149  [key=0, style=solid];
m8_148 -> m8_159  [key=2, style=dotted];
m8_148 -> m8_148  [key=1, style=dashed, color=darkseagreen4, label=hadError];
m8_131 -> m8_132  [key=0, style=solid];
m8_131 -> m8_152  [key=2, style=dotted];
m8_145 -> m8_146  [key=0, style=solid];
m8_145 -> m8_134  [key=0, style=solid];
m8_146 -> m8_147  [key=0, style=solid];
m8_146 -> m8_134  [key=0, style=solid];
m8_146 -> m8_158  [key=2, style=dotted];
m8_134 -> m8_135  [key=0, style=solid];
m8_134 -> m8_148  [key=0, style=solid];
m8_134 -> m8_155  [key=2, style=dotted];
m8_135 -> m8_136  [key=0, style=solid];
m8_135 -> m8_137  [key=1, style=dashed, color=darkseagreen4, label=argument];
m8_135 -> m8_146  [key=1, style=dashed, color=darkseagreen4, label=argument];
m8_144 -> m8_134  [key=0, style=solid];
m8_144 -> m8_155  [key=2, style=dotted];
m8_136 -> m8_137  [key=0, style=solid];
m8_136 -> m8_134  [key=0, style=solid];
m8_136 -> m8_92  [key=2, style=dotted];
m8_137 -> m8_138  [key=0, style=solid];
m8_137 -> m8_156  [key=2, style=dotted];
m8_137 -> m8_139  [key=1, style=dashed, color=darkseagreen4, label=parser];
m8_137 -> m8_141  [key=1, style=dashed, color=darkseagreen4, label=parser];
m8_138 -> m8_139  [key=0, style=solid];
m8_138 -> m8_145  [key=0, style=solid];
m8_140 -> m8_141  [key=0, style=solid];
m8_140 -> m8_143  [key=0, style=solid];
m8_143 -> m8_144  [key=0, style=solid];
m8_143 -> m8_134  [key=0, style=solid];
m8_142 -> m8_134  [key=0, style=solid];
m8_142 -> m8_148  [key=1, style=dashed, color=darkseagreen4, label=hadError];
m8_147 -> m8_134  [key=0, style=solid];
m8_147 -> m8_148  [key=1, style=dashed, color=darkseagreen4, label=hadError];
m8_149 -> m8_150  [key=0, style=solid];
m8_150 -> m8_126  [key=0, style=bold, color=blue];
m8_95 -> m8_96  [key=0, style=solid];
m8_95 -> m8_98  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_95 -> m8_99  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_95 -> m8_100  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_95 -> m8_101  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_95 -> m8_102  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.ParsingError>"];
m8_96 -> m8_97  [key=0, style=solid];
m8_96 -> m8_98  [key=0, style=solid];
m8_96 -> m8_105  [key=2, style=dotted];
m8_98 -> m8_99  [key=0, style=solid];
m8_98 -> m8_106  [key=2, style=dotted];
m8_98 -> m8_100  [key=1, style=dashed, color=darkseagreen4, label=property];
m8_98 -> m8_101  [key=1, style=dashed, color=darkseagreen4, label=property];
m8_99 -> m8_100  [key=0, style=solid];
m8_99 -> m8_101  [key=0, style=solid];
m8_99 -> m8_94  [key=2, style=dotted];
m8_100 -> m8_101  [key=0, style=solid];
m8_100 -> m8_107  [key=2, style=dotted];
m8_100 -> m8_108  [key=2, style=dotted];
m8_101 -> m8_102  [key=0, style=solid];
m8_101 -> m8_94  [key=2, style=dotted];
m8_101 -> m8_103  [key=1, style=dashed, color=darkseagreen4, label=parserState];
m8_102 -> m8_103  [key=0, style=solid];
m8_102 -> m8_104  [key=0, style=solid];
m8_97 -> m8_104  [key=0, style=solid];
m8_103 -> m8_102  [key=0, style=solid];
m8_103 -> m8_109  [key=2, style=dotted];
m8_104 -> m8_95  [key=0, style=bold, color=blue];
m8_20 -> m8_21  [key=0, style=solid];
m8_21 -> m8_20  [key=0, style=bold, color=blue];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_40  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_38 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_38 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_38 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_11  [key=2, style=dotted];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_11  [key=2, style=dotted];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_11  [key=2, style=dotted];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_47  [key=2, style=dotted];
m8_43 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label=verbInstance];
m8_43 -> m8_45  [key=1, style=dashed, color=darkseagreen4, label=result];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_48  [key=2, style=dotted];
m8_44 -> m8_49  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_45 -> m8_46  [key=0, style=solid];
m8_46 -> m8_38  [key=0, style=bold, color=blue];
m8_79 -> m8_80  [key=0, style=solid];
m8_80 -> m8_81  [key=0, style=solid];
m8_80 -> m8_31  [key=2, style=dotted];
m8_81 -> m8_82  [key=0, style=solid];
m8_81 -> m8_83  [key=2, style=dotted];
m8_82 -> m8_79  [key=0, style=bold, color=blue];
m8_182 -> m8_216  [key=0, style=solid];
m8_182 -> m8_217  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_182 -> m8_218  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_182 -> m8_219  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_216 -> m8_217  [key=0, style=solid];
m8_217 -> m8_218  [key=0, style=solid];
m8_217 -> m8_219  [key=0, style=solid];
m8_218 -> m8_220  [key=0, style=solid];
m8_218 -> m8_223  [key=2, style=dotted];
m8_218 -> m8_221  [key=1, style=dashed, color=darkseagreen4, label=helpText];
m8_219 -> m8_220  [key=0, style=solid];
m8_219 -> m8_223  [key=2, style=dotted];
m8_219 -> m8_221  [key=1, style=dashed, color=darkseagreen4, label=helpText];
m8_220 -> m8_221  [key=0, style=solid];
m8_220 -> m8_222  [key=0, style=solid];
m8_221 -> m8_222  [key=0, style=solid];
m8_221 -> m8_128  [key=2, style=dotted];
m8_222 -> m8_182  [key=0, style=bold, color=blue];
m8_110 -> m8_111  [key=0, style=solid];
m8_111 -> m8_112  [key=0, style=solid];
m8_112 -> m8_110  [key=0, style=bold, color=blue];
m8_31 -> m8_236  [key=0, style=solid];
m8_31 -> m8_238  [key=1, style=dashed, color=darkseagreen4, label=bool];
m8_236 -> m8_237  [key=0, style=solid];
m8_236 -> m8_238  [key=0, style=solid];
m8_238 -> m8_239  [key=0, style=solid];
m8_238 -> m8_242  [key=0, style=solid];
m8_237 -> m8_242  [key=0, style=solid];
m8_239 -> m8_240  [key=0, style=solid];
m8_239 -> m8_241  [key=0, style=solid];
m8_240 -> m8_241  [key=0, style=solid];
m8_240 -> m8_243  [key=2, style=dotted];
m8_241 -> m8_242  [key=0, style=solid];
m8_242 -> m8_31  [key=0, style=bold, color=blue];
m8_61 -> m8_224  [key=0, style=solid];
m8_61 -> m8_226  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_61 -> m8_233  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_224 -> m8_225  [key=0, style=solid];
m8_224 -> m8_226  [key=0, style=solid];
m8_224 -> m8_228  [key=2, style=dotted];
m8_224 -> m8_229  [key=2, style=dotted];
m8_226 -> m8_227  [key=0, style=solid];
m8_226 -> m8_230  [key=2, style=dotted];
m8_226 -> m8_231  [key=2, style=dotted];
m8_226 -> m8_128  [key=2, style=dotted];
m8_226 -> m8_232  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_225 -> m8_227  [key=0, style=solid];
m8_227 -> m8_61  [key=0, style=bold, color=blue];
m8_244 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_9  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_29  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_53  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_54  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_69  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_71  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_80  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_81  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_114  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_116  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_122  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_130  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_132  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_137  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_163  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_164  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_166  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_167  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_172  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_177  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_179  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_190  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_202  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_204  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_211  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_220  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_221  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_224  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_226  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_236  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_239  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_240  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_244 -> m8_241  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m8_245 -> m8_233  [key=1, style=dashed, color=darkseagreen4, label=object];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_26  [key=1, style=dashed, color=darkseagreen4, label="System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>"];
m9_23 -> m9_27  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_26  [key=1, style=dashed, color=darkseagreen4, label=notParsed];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_6  [key=2, style=dotted];
m9_27 -> m9_28  [key=0, style=solid];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_27  [key=0, style=solid];
m9_28 -> m9_23  [key=0, style=bold, color=blue];
m9_20 -> m9_21  [key=0, style=solid];
m9_21 -> m9_22  [key=0, style=solid];
m9_22 -> m9_20  [key=0, style=bold, color=blue];
m9_29 -> m9_30  [key=0, style=solid];
m9_29 -> m9_32  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, TResult>"];
m9_29 -> m9_33  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<TSource>"];
m9_30 -> m9_31  [key=0, style=solid];
m9_30 -> m9_32  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m9_32 -> m9_34  [key=0, style=solid];
m9_32 -> m9_35  [key=2, style=dotted];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_35  [key=2, style=dotted];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_33  [key=0, style=solid];
m9_34 -> m9_29  [key=0, style=bold, color=blue];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_10  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<object>"];
m9_7 -> m9_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<object>"];
m9_7 -> m9_13  [key=1, style=dashed, color=darkseagreen4, label="System.Action<T>"];
m9_7 -> m9_14  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<object>"];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_10  [key=0, style=solid];
m9_8 -> m9_16  [key=2, style=dotted];
m9_8 -> m9_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_13  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_14  [key=0, style=solid];
m9_12 -> m9_19  [key=2, style=dotted];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_6  [key=2, style=dotted];
m9_14 -> m9_15  [key=0, style=solid];
m9_9 -> m9_15  [key=0, style=solid];
m9_9 -> m9_17  [key=2, style=dotted];
m9_9 -> m9_18  [key=2, style=dotted];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_14  [key=0, style=solid];
m9_15 -> m9_7  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_3  [key=1, style=dashed, color=red, label="System.Action<T>"];
m9_0 -> m9_4  [key=1, style=dashed, color=red, label="CommandLine.ParserResult<T>"];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=1, style=dashed, color=red, label=parsed];
m9_3 -> m9_4  [key=0, style=solid, color=red];
m9_3 -> m9_6  [key=2, style=dotted, color=red];
m9_4 -> m9_5  [key=0, style=solid, color=red];
m9_2 -> m9_3  [key=0, style=solid, color=red];
m9_2 -> m9_4  [key=0, style=solid, color=red];
m9_5 -> m9_0  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_4  [key=2, style=dotted];
m10_1 -> m10_5  [key=2, style=dotted];
m10_1 -> m10_6  [key=2, style=dotted];
m10_1 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_1 -> m10_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_2 -> m10_3  [key=0, style=solid];
m10_3 -> m10_0  [key=0, style=bold, color=blue];
m10_11 -> m10_12  [key=0, style=solid];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_10  [key=2, style=dotted];
m10_7 -> m10_8  [key=0, style=solid];
m10_9 -> m10_7  [key=0, style=bold, color=blue];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_14  [key=2, style=dotted];
m10_13 -> m10_11  [key=0, style=bold, color=blue];
m10_15 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_16 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
}
