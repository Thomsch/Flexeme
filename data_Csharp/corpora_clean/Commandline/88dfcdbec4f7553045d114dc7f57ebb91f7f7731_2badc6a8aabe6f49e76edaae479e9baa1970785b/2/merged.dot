digraph  {
m7_142 [label="Entry CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", span="199-199", cluster="CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", file="CommandLine.cs"];
m7_143 [label="return type.InvokeMember(\r\n                name,\r\n                BindingFlags.GetProperty | BindingFlags.Public | BindingFlags.Instance,\r\n                null,\r\n                target,\r\n                new object[] { });", span="201-206", cluster="CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", color=red, community=0, file="CommandLine.cs"];
m7_144 [label="Exit CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", span="199-199", cluster="CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", file="CommandLine.cs"];
m7_17 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="CommandLine.cs"];
m7_44 [label="Entry System.Type.GetInterfaces()", span="0-0", cluster="System.Type.GetInterfaces()", file="CommandLine.cs"];
m7_91 [label="Entry CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", span="139-139", cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="CommandLine.cs"];
m7_92 [label="Func<bool> isMutable = () => {\r\n                var props = type.GetProperties(BindingFlags.Public | BindingFlags.Instance).Any(p => p.CanWrite);\r\n                var fields = type.GetFields(BindingFlags.Public | BindingFlags.Instance).Any();\r\n                return props || fields;\r\n            }", span="141-145", cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_93 [label="return type != typeof(object) ? isMutable() : true;", span="146-146", cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_94 [label="Exit CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", span="139-139", cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="CommandLine.cs"];
m7_148 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="CommandLine.cs"];
m7_101 [label="Entry System.Type.GetFields(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetFields(System.Reflection.BindingFlags)", file="CommandLine.cs"];
m7_126 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="CommandLine.cs"];
m7_145 [label="Entry CommandLine.Core.ReflectionExtensions.IsPrimitiveEx(System.Type)", span="209-209", cluster="CommandLine.Core.ReflectionExtensions.IsPrimitiveEx(System.Type)", file="CommandLine.cs"];
m7_146 [label="return\r\n                type.IsValueType ||\r\n                type.IsPrimitive ||\r\n                new [] { \r\n                    typeof(string),\r\n                    typeof(decimal),\r\n                    typeof(DateTime),\r\n                    typeof(DateTimeOffset),\r\n                    typeof(TimeSpan),\r\n                    typeof(Guid)\r\n                }.Contains(type) ||\r\n                Convert.GetTypeCode(type) != TypeCode.Object;", span="211-222", cluster="CommandLine.Core.ReflectionExtensions.IsPrimitiveEx(System.Type)", color=red, community=1, file="CommandLine.cs"];
m7_147 [label="Exit CommandLine.Core.ReflectionExtensions.IsPrimitiveEx(System.Type)", span="209-209", cluster="CommandLine.Core.ReflectionExtensions.IsPrimitiveEx(System.Type)", file="CommandLine.cs"];
m7_6 [label="Entry Unk.>", span="", cluster="Unk.>", file="CommandLine.cs"];
m7_73 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="CommandLine.cs"];
m7_82 [label="Entry CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", span="130-130", cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="CommandLine.cs"];
m7_83 [label="var e = Expression.Lambda<Func<object>>(\r\n                Expression.Convert(\r\n                    Expression.Default(type),\r\n                    typeof(object)))", span="132-135", cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_84 [label="return e.Compile()();", span="136-136", cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_85 [label="Exit CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", span="130-130", cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="CommandLine.cs"];
m7_7 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="CommandLine.cs"];
m7_8 [label="Entry Unk.First", span="", cluster="Unk.First", file="CommandLine.cs"];
m7_131 [label="Entry CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", span="174-174", cluster="CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", file="CommandLine.cs"];
m7_132 [label="return TypeInfo.Create(type);", span="176-176", cluster="CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_133 [label="Exit CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", span="174-174", cluster="CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", file="CommandLine.cs"];
m7_43 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="CommandLine.cs"];
m7_26 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="CommandLine.cs"];
m7_52 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="CommandLine.cs"];
m7_59 [label="Entry CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", span="97-97", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="CommandLine.cs"];
m7_60 [label="Action<Exception> fail = inner => { throw new ApplicationException(''Cannot set value to target instance.'', inner); }", span="99-99", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=red, community=0, file="CommandLine.cs"];
m7_61 [label="property.SetValue(instance, value, null)", span="103-103", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=red, community=0, file="CommandLine.cs"];
m7_70 [label="return instance;", span="122-122", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=red, community=0, file="CommandLine.cs"];
m7_63 [label="fail(e)", span="107-107", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=red, community=0, file="CommandLine.cs"];
m7_65 [label="fail(e)", span="111-111", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=red, community=0, file="CommandLine.cs"];
m7_67 [label="fail(e)", span="115-115", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=red, community=0, file="CommandLine.cs"];
m7_69 [label="fail(e)", span="119-119", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=red, community=0, file="CommandLine.cs"];
m7_62 [label=TargetException, span="105-105", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=red, community=0, file="CommandLine.cs"];
m7_64 [label=TargetParameterCountException, span="109-109", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=red, community=0, file="CommandLine.cs"];
m7_66 [label=MethodAccessException, span="113-113", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=red, community=0, file="CommandLine.cs"];
m7_68 [label=TargetInvocationException, span="117-117", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=red, community=0, file="CommandLine.cs"];
m7_71 [label="Exit CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", span="97-97", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="CommandLine.cs"];
m7_45 [label="Entry CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", span="71-71", cluster="CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", file="CommandLine.cs"];
m7_46 [label="return type == typeof(bool)\r\n                       ? TargetType.Switch\r\n                       : type == typeof(string)\r\n                             ? TargetType.Scalar\r\n                             : type.IsArray || typeof(IEnumerable).IsAssignableFrom(type)\r\n                                   ? TargetType.Sequence\r\n                                   : TargetType.Scalar;", span="73-79", cluster="CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_47 [label="Exit CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", span="71-71", cluster="CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", file="CommandLine.cs"];
m7_102 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="CommandLine.cs"];
m7_77 [label="Entry System.ApplicationException.ApplicationException(string, System.Exception)", span="0-0", cluster="System.ApplicationException.ApplicationException(string, System.Exception)", file="CommandLine.cs"];
m7_18 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="CommandLine.cs"];
m7_39 [label="Entry System.Type.SafeGetInterfaces()", span="66-66", cluster="System.Type.SafeGetInterfaces()", file="CommandLine.cs"];
m7_22 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="CommandLine.cs"];
m7_4 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="CommandLine.cs"];
m7_14 [label="Entry CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", span="27-27", cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", file="CommandLine.cs"];
m7_15 [label="return\r\n                (from attr in\r\n                 type.FlattenHierarchy().SelectMany(x => x.GetCustomAttributes(typeof(VerbAttribute), true))\r\n                 let vattr = (VerbAttribute)attr\r\n                 select vattr)\r\n                    .SingleOrDefault()\r\n                    .ToMaybe();", span="29-35", cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_16 [label="Exit CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", span="27-27", cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", file="CommandLine.cs"];
m7_9 [label="Entry Unk.selector", span="", cluster="Unk.selector", file="CommandLine.cs"];
m7_128 [label="Entry lambda expression", span="169-169", cluster="lambda expression", file="CommandLine.cs"];
m7_10 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="CommandLine.cs"];
m7_11 [label="x.GetProperties()", span="18-18", cluster="lambda expression", color=red, community=0, file="CommandLine.cs"];
m7_12 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="CommandLine.cs"];
m7_19 [label="Entry lambda expression", span="31-31", cluster="lambda expression", file="CommandLine.cs"];
m7_20 [label="x.GetCustomAttributes(typeof(VerbAttribute), true)", span="31-31", cluster="lambda expression", color=red, community=0, file="CommandLine.cs"];
m7_21 [label="Exit lambda expression", span="31-31", cluster="lambda expression", file="CommandLine.cs"];
m7_27 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="CommandLine.cs"];
m7_28 [label="x.GetProperties()", span="41-41", cluster="lambda expression", color=red, community=0, file="CommandLine.cs"];
m7_29 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="CommandLine.cs"];
m7_55 [label="specProp.Property.SetValue(current, selector(specProp))", span="92-92", cluster="lambda expression", color=red, community=0, file="CommandLine.cs"];
m7_56 [label="return instance;", span="93-93", cluster="lambda expression", color=red, community=0, file="CommandLine.cs"];
m7_54 [label="Entry lambda expression", span="90-94", cluster="lambda expression", file="CommandLine.cs"];
m7_57 [label="Exit lambda expression", span="90-94", cluster="lambda expression", file="CommandLine.cs"];
m7_75 [label="throw new ApplicationException(''Cannot set value to target instance.'', inner);", span="99-99", cluster="lambda expression", color=red, community=0, file="CommandLine.cs"];
m7_74 [label="Entry lambda expression", span="99-99", cluster="lambda expression", file="CommandLine.cs"];
m7_76 [label="Exit lambda expression", span="99-99", cluster="lambda expression", file="CommandLine.cs"];
m7_96 [label="var props = type.GetProperties(BindingFlags.Public | BindingFlags.Instance).Any(p => p.CanWrite)", span="142-142", cluster="lambda expression", color=red, community=0, file="CommandLine.cs"];
m7_97 [label="var fields = type.GetFields(BindingFlags.Public | BindingFlags.Instance).Any()", span="143-143", cluster="lambda expression", color=red, community=0, file="CommandLine.cs"];
m7_95 [label="Entry lambda expression", span="141-145", cluster="lambda expression", file="CommandLine.cs"];
m7_103 [label="Entry lambda expression", span="142-142", cluster="lambda expression", file="CommandLine.cs"];
m7_98 [label="return props || fields;", span="144-144", cluster="lambda expression", color=red, community=0, file="CommandLine.cs"];
m7_99 [label="Exit lambda expression", span="141-145", cluster="lambda expression", file="CommandLine.cs"];
m7_104 [label="p.CanWrite", span="142-142", cluster="lambda expression", color=red, community=0, file="CommandLine.cs"];
m7_105 [label="Exit lambda expression", span="142-142", cluster="lambda expression", file="CommandLine.cs"];
m7_129 [label="pi.PropertyType", span="169-169", cluster="lambda expression", color=red, community=0, file="CommandLine.cs"];
m7_130 [label="Exit lambda expression", span="169-169", cluster="lambda expression", file="CommandLine.cs"];
m7_72 [label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="CommandLine.cs"];
m7_81 [label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0", cluster="System.Array.CreateInstance(System.Type, int)", file="CommandLine.cs"];
m7_87 [label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0", cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="CommandLine.cs"];
m7_86 [label="Entry System.Linq.Expressions.Expression.Default(System.Type)", span="0-0", cluster="System.Linq.Expressions.Expression.Default(System.Type)", file="CommandLine.cs"];
m7_90 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="CommandLine.cs"];
m7_127 [label="Entry CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", span="50-50", cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="CommandLine.cs"];
m7_48 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="CommandLine.cs"];
m7_106 [label="Entry CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", span="149-149", cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="CommandLine.cs"];
m7_107 [label="type == typeof(string)", span="151-151", cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_109 [label="type.IsGenericType && type.GetGenericTypeDefinition() == typeof(IEnumerable<>)", span="155-155", cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_110 [label="return type.GetGenericArguments()[0].CreateEmptyArray();", span="157-157", cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_111 [label="return type.GetDefaultValue();", span="159-159", cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_108 [label="return string.Empty;", span="153-153", cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_112 [label="Exit CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", span="149-149", cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="CommandLine.cs"];
m7_134 [label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29", cluster="CommandLine.TypeInfo.Create(System.Type)", file="CommandLine.cs"];
m7_13 [label="Entry System.Type.GetProperties()", span="0-0", cluster="System.Type.GetProperties()", file="CommandLine.cs"];
m7_23 [label="Entry CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", span="38-38", cluster="CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", file="CommandLine.cs"];
m7_24 [label="return\r\n                (from pi in type.FlattenHierarchy().SelectMany(x => x.GetProperties())\r\n                    let attrs = pi.GetCustomAttributes(true)\r\n                    where attrs.OfType<UsageAttribute>().Any()\r\n                    select Tuple.Create(pi, (UsageAttribute)attrs.First()))\r\n                        .SingleOrDefault()\r\n                        .ToMaybe();", span="40-46", cluster="CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_25 [label="Exit CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", span="38-38", cluster="CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", file="CommandLine.cs"];
m7_0 [label="Entry CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="16-16", cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="CommandLine.cs"];
m7_1 [label="return from pi in type.FlattenHierarchy().SelectMany(x => x.GetProperties())\r\n                   let attrs = pi.GetCustomAttributes(true)\r\n                   where\r\n                       attrs.OfType<OptionAttribute>().Any() ||\r\n                       attrs.OfType<ValueAttribute>().Any()\r\n                   group pi by pi.Name into g\r\n                   select selector(g.First());", span="18-24", cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", color=red, community=0, file="CommandLine.cs"];
m7_2 [label="Exit CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="16-16", cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="CommandLine.cs"];
m7_88 [label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0", cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="CommandLine.cs"];
m7_113 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="CommandLine.cs"];
m7_117 [label="Entry CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", span="162-162", cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="CommandLine.cs"];
m7_118 [label="type.IsMutable()", span="164-164", cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_119 [label="return Activator.CreateInstance(type);", span="166-166", cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_120 [label="var ctorTypes = type.GetSpecifications(pi => pi.PropertyType).ToArray()", span="169-169", cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_121 [label="return ReflectionHelper.CreateDefaultImmutableInstance(type, ctorTypes);", span="171-171", cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_122 [label="Exit CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", span="162-162", cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="CommandLine.cs"];
m7_139 [label="Entry CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", span="189-189", cluster="CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", file="CommandLine.cs"];
m7_140 [label="return type.InvokeMember(\r\n                name,\r\n                BindingFlags.GetProperty | BindingFlags.Public | BindingFlags.Static,\r\n                null,\r\n                null,\r\n                new object[] { });", span="191-196", cluster="CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", color=red, community=0, file="CommandLine.cs"];
m7_141 [label="Exit CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", span="189-189", cluster="CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", file="CommandLine.cs"];
m7_149 [label="Entry System.Convert.GetTypeCode(object)", span="0-0", cluster="System.Convert.GetTypeCode(object)", file="CommandLine.cs"];
m7_40 [label="Entry CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", span="66-66", cluster="CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", file="CommandLine.cs"];
m7_41 [label="return type == null ? Enumerable.Empty<Type>() : type.GetInterfaces();", span="68-68", cluster="CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_42 [label="Exit CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", span="66-66", cluster="CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", file="CommandLine.cs"];
m7_115 [label="Entry System.Type.CreateEmptyArray()", span="125-125", cluster="System.Type.CreateEmptyArray()", file="CommandLine.cs"];
m7_116 [label="Entry System.Type.GetDefaultValue()", span="130-130", cluster="System.Type.GetDefaultValue()", file="CommandLine.cs"];
m7_114 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="CommandLine.cs"];
m7_125 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="CommandLine.cs"];
m7_124 [label="Entry System.Activator.CreateInstance(System.Type)", span="0-0", cluster="System.Activator.CreateInstance(System.Type)", file="CommandLine.cs"];
m7_100 [label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="CommandLine.cs"];
m7_5 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="CommandLine.cs"];
m7_123 [label="Entry System.Type.IsMutable()", span="139-139", cluster="System.Type.IsMutable()", file="CommandLine.cs"];
m7_53 [label="Entry Unk.Aggregate", span="", cluster="Unk.Aggregate", file="CommandLine.cs"];
m7_78 [label="Entry CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", span="125-125", cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="CommandLine.cs"];
m7_79 [label="return Array.CreateInstance(type, 0);", span="127-127", cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_80 [label="Exit CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", span="125-125", cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="CommandLine.cs"];
m7_49 [label="Entry CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="82-82", cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="CommandLine.cs"];
m7_50 [label="return specProps.Where(predicate).Aggregate(\r\n                instance,\r\n                (current, specProp) =>\r\n                    {\r\n                        specProp.Property.SetValue(current, selector(specProp));\r\n                        return instance;\r\n                    });", span="88-94", cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", color=red, community=0, file="CommandLine.cs"];
m7_51 [label="Exit CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="82-82", cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="CommandLine.cs"];
m7_30 [label="Entry CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", span="49-49", cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="CommandLine.cs"];
m7_31 [label="type == null", span="51-51", cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_32 [label="yield break;", span="53-53", cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_33 [label="yield return type;", span="55-55", cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_35 [label="yield return @interface;", span="58-58", cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_37 [label="yield return @interface;", span="62-62", cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_34 [label="type.SafeGetInterfaces()", span="56-56", cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_36 [label="FlattenHierarchy(type.BaseType)", span="60-60", cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", color=red, community=0, file="CommandLine.cs"];
m7_38 [label="Exit CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", span="49-49", cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="CommandLine.cs"];
m7_58 [label="Entry Unk.SetValue", span="", cluster="Unk.SetValue", file="CommandLine.cs"];
m7_138 [label="Entry System.Type.InvokeMember(string, System.Reflection.BindingFlags, System.Reflection.Binder, object, object[])", span="0-0", cluster="System.Type.InvokeMember(string, System.Reflection.BindingFlags, System.Reflection.Binder, object, object[])", file="CommandLine.cs"];
m7_135 [label="Entry CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", span="179-179", cluster="CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", file="CommandLine.cs"];
m7_136 [label="return type.InvokeMember(\r\n                name,\r\n                BindingFlags.InvokeMethod | BindingFlags.Public | BindingFlags.Static,\r\n                null,\r\n                null,\r\n                args);", span="181-186", cluster="CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", color=red, community=0, file="CommandLine.cs"];
m7_137 [label="Exit CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", span="179-179", cluster="CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", file="CommandLine.cs"];
m7_3 [label="Entry System.Type.FlattenHierarchy()", span="49-49", cluster="System.Type.FlattenHierarchy()", file="CommandLine.cs"];
m7_89 [label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0", cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="CommandLine.cs"];
m7_150 [label="System.Func<CommandLine.Core.SpecificationProperty, object>", span="", file="CommandLine.cs"];
m7_151 [label=T, span="", file="CommandLine.cs"];
m7_152 [label="System.Type", span="", file="CommandLine.cs"];
m13_13 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1754-1754", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="CommandLineVerbs.cs"];
m13_91 [label="Entry CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="306-306", cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="CommandLineVerbs.cs"];
m13_103 [label="string helpText", span="308-308", cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_104 [label="verb == null", span="309-309", cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_105 [label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, null, out helpText)", span="311-311", cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_106 [label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, verb, out helpText)", span="315-315", cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_107 [label="_settings.HelpWriter.Write(helpText)", span="317-317", cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_108 [label="Exit CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="306-306", cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="CommandLineVerbs.cs"];
m13_5 [label="Entry CommandLine.Internal.OptionInfo.CreateInstance(object)", span="71-71", cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", file="CommandLineVerbs.cs"];
m13_6 [label=_setValueLock, span="73-73", cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_7 [label="_property.SetValue(target, Activator.CreateInstance(_property.PropertyType), null)", span="77-77", cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_8 [label=Exception, span="79-79", cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_9 [label="throw new CommandLineParserException(''Instance defined for verb command could not be created.'', e);", span="81-81", cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_10 [label="Exit CommandLine.Internal.OptionInfo.CreateInstance(object)", span="71-71", cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", file="CommandLineVerbs.cs"];
m13_90 [label="Entry CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1046-1046", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLineVerbs.cs"];
m13_49 [label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0", cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="CommandLineVerbs.cs"];
m13_64 [label="Entry CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="1127-1127", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="CommandLineVerbs.cs"];
m13_88 [label="Entry CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1019-1019", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLineVerbs.cs"];
m13_29 [label="Entry CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", span="124-124", cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", file="CommandLineVerbs.cs"];
m13_30 [label="Assumes.NotNullOrEmpty(longName, ''longName'')", span="127-127", cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_31 [label="Exit CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", span="124-124", cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", file="CommandLineVerbs.cs"];
m13_27 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1749-1749", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLineVerbs.cs"];
m13_0 [label="Entry CommandLine.Internal.OptionInfo.GetValue(object)", span="63-63", cluster="CommandLine.Internal.OptionInfo.GetValue(object)", file="CommandLineVerbs.cs"];
m13_1 [label=_setValueLock, span="65-65", cluster="CommandLine.Internal.OptionInfo.GetValue(object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_2 [label="return _property.GetValue(target, null);", span="67-67", cluster="CommandLine.Internal.OptionInfo.GetValue(object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_3 [label="Exit CommandLine.Internal.OptionInfo.GetValue(object)", span="63-63", cluster="CommandLine.Internal.OptionInfo.GetValue(object)", file="CommandLineVerbs.cs"];
m13_54 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="CommandLineVerbs.cs"];
m13_65 [label="Entry CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", span="246-246", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", file="CommandLineVerbs.cs"];
m13_66 [label="var verbs = ReflectionUtil.RetrievePropertyList<VerbOptionAttribute>(options)", span="248-248", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_68 [label="return DoParseArgumentsCore(args, options);", span="252-252", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_69 [label="var helpInfo = ReflectionUtil.RetrieveMethod<HelpVerbOptionAttribute>(options)", span="254-254", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_70 [label="args.Length == 0", span="255-255", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_72 [label="DisplayHelpVerbText(options, helpInfo, null)", span="259-259", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_74 [label="var optionMap = OptionInfo.CreateMap(options, verbs, _settings)", span="263-263", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_75 [label="TryParseHelpVerb(args, options, helpInfo)", span="265-265", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_77 [label="var verbOption = optionMap[args[0]]", span="270-270", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_78 [label="verbOption.GetValue(options) == null", span="271-271", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_79 [label="verbOption.CreateInstance(options)", span="274-274", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_80 [label="var verbArgs = new string[args.Length - 1]", span="276-276", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_81 [label="args.Length > 1", span="277-277", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_82 [label="Array.Copy(args, 1, verbArgs, 0, args.Length - 1)", span="279-279", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_83 [label="var verbResult = DoParseArgumentsCore(verbArgs, verbOption.GetValue(options))", span="281-281", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_85 [label="DisplayHelpVerbText(options, helpInfo, args[0])", span="285-285", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_67 [label="verbs.Count == 0", span="249-249", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_71 [label="helpInfo != null || _settings.HelpWriter != null", span="257-257", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_73 [label="return false;", span="261-261", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_76 [label="return false;", span="268-268", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_84 [label="!verbResult", span="282-282", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_86 [label="return verbResult;", span="287-287", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_87 [label="Exit CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", span="246-246", cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", file="CommandLineVerbs.cs"];
m13_12 [label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="CommandLineVerbs.cs"];
m13_24 [label="Entry CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="778-778", cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLineVerbs.cs"];
m13_55 [label="Entry CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", span="234-234", cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", file="CommandLineVerbs.cs"];
m13_56 [label="found = false", span="236-236", cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_57 [label="string.IsNullOrEmpty(verb)", span="237-237", cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_58 [label="return target;", span="239-239", cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_59 [label="var pair = ReflectionUtil.RetrieveOptionProperty<VerbOptionAttribute>(target, verb)", span="241-241", cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_61 [label="return found ? pair.Left.GetValue(target, null) : target;", span="243-243", cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_60 [label="found = pair != null", span="242-242", cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_62 [label="Exit CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", span="234-234", cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", file="CommandLineVerbs.cs"];
m13_40 [label="Entry CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", span="196-196", cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="CommandLineVerbs.cs"];
m13_41 [label="text = null", span="199-199", cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_42 [label="var method = helpInfo.Left", span="200-200", cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_45 [label="text = (string) method.Invoke(target, new object[] {verb})", span="207-207", cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_43 [label="!CheckMethodSignature(method)", span="201-201", cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_44 [label="throw new MemberAccessException(string.Format(\r\n                    ''{0} has an incorrect signature. '' +\r\n                    ''Help verb command requires a method that accepts and returns a string.'', method.Name));", span="203-205", cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", color=red, community=1, file="CommandLineVerbs.cs"];
m13_46 [label="Exit CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", span="196-196", cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="CommandLineVerbs.cs"];
m13_32 [label="Entry CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", span="1004-1004", cluster="CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", file="CommandLineVerbs.cs"];
m13_33 [label="Entry CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute()", span="161-161", cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute()", file="CommandLineVerbs.cs"];
m13_34 [label="HelpText = DefaultHelpText", span="164-164", cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute()", color=red, community=0, file="CommandLineVerbs.cs"];
m13_35 [label="Exit CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute()", span="161-161", cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute()", file="CommandLineVerbs.cs"];
m13_11 [label="Entry System.Activator.CreateInstance(System.Type)", span="0-0", cluster="System.Activator.CreateInstance(System.Type)", file="CommandLineVerbs.cs"];
m13_25 [label="Entry CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="516-516", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLineVerbs.cs"];
m13_26 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])", file="CommandLineVerbs.cs"];
m13_48 [label="Entry System.MemberAccessException.MemberAccessException(string)", span="0-0", cluster="System.MemberAccessException.MemberAccessException(string)", file="CommandLineVerbs.cs"];
m13_63 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="CommandLineVerbs.cs"];
m13_28 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="CommandLineVerbs.cs"];
m13_89 [label="Entry CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", span="2013-2013", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLineVerbs.cs"];
m13_36 [label="Entry CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", span="172-172", cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", file="CommandLineVerbs.cs"];
m13_37 [label="LongName = longName", span="174-174", cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_38 [label="HelpText = DefaultHelpText", span="175-175", cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_39 [label="Exit CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", span="172-172", cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", file="CommandLineVerbs.cs"];
m13_47 [label="Entry CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="210-210", cluster="CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="CommandLineVerbs.cs"];
m13_50 [label="value.ReturnType == typeof(string) && value.GetParameters().Length == 1", span="212-212", cluster="CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_51 [label="return value.GetParameters()[0].ParameterType == typeof(string);", span="214-214", cluster="CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_52 [label="return false;", span="216-216", cluster="CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_53 [label="Exit CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="210-210", cluster="CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="CommandLineVerbs.cs"];
m13_102 [label="Entry string.Compare(string, string, System.StringComparison)", span="0-0", cluster="string.Compare(string, string, System.StringComparison)", file="CommandLineVerbs.cs"];
m13_14 [label="Entry CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", span="86-86", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="CommandLineVerbs.cs"];
m13_15 [label="var map = new OptionMap(verbs.Count, settings)", span="89-89", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_16 [label=verbs, span="90-90", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", color=red, community=1, file="CommandLineVerbs.cs"];
m13_18 [label="!optionInfo.HasParameterLessCtor && verb.Left.GetValue(target, null) == null", span="97-97", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_21 [label="map.RawOptions = target", span="104-104", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_20 [label="map[verb.Right.UniqueName] = optionInfo", span="102-102", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_22 [label="return map;", span="105-105", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_17 [label="var optionInfo = new OptionInfo(verb.Right, verb.Left)\r\n                        {\r\n                            HasParameterLessCtor = verb.Left.PropertyType.GetConstructor(Type.EmptyTypes) != null\r\n\r\n                        }", span="92-96", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", color=red, community=1, file="CommandLineVerbs.cs"];
m13_19 [label="throw new CommandLineParserException(string.Format(''Type {0} must have a parameterless constructor or'' +\r\n                            '' be already initialized to be used as a verb command.'', verb.Left.PropertyType));", span="99-100", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", color=red, community=1, file="CommandLineVerbs.cs"];
m13_23 [label="Exit CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", span="86-86", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="CommandLineVerbs.cs"];
m13_92 [label="Entry CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>)", span="290-290", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>)", file="CommandLineVerbs.cs"];
m13_94 [label="var helpWriter = _settings.HelpWriter", span="292-292", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_95 [label="helpInfo != null && helpWriter != null", span="293-293", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_96 [label="string.Compare(args[0], helpInfo.Right.LongName, _settings.StringComparison) == 0", span="295-295", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_97 [label="var verb = args.Length > 1 ? args[1] : null", span="298-298", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_98 [label="DisplayHelpVerbText(options, helpInfo, verb)", span="299-299", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_100 [label="return false;", span="303-303", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_99 [label="return true;", span="300-300", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>)", color=red, community=0, file="CommandLineVerbs.cs"];
m13_101 [label="Exit CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>)", span="290-290", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>)", file="CommandLineVerbs.cs"];
m13_93 [label="Entry System.Array.Copy(System.Array, int, System.Array, int, int)", span="0-0", cluster="System.Array.Copy(System.Array, int, System.Array, int, int)", file="CommandLineVerbs.cs"];
m13_4 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="CommandLineVerbs.cs"];
m13_109 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)", file="CommandLineVerbs.cs"];
m13_110 [label="CommandLine.Internal.OptionInfo", span="", file="CommandLineVerbs.cs"];
m13_111 [label="CommandLine.HelpVerbOptionAttribute", span="", file="CommandLineVerbs.cs"];
m13_112 [label="CommandLine.CommandLineParser", span="", file="CommandLineVerbs.cs"];
m24_41 [label="Entry System.Array.FindLastIndex<T>(T[], System.Predicate<T>)", span="0-0", cluster="System.Array.FindLastIndex<T>(T[], System.Predicate<T>)", file="MultiLineTextAttribute.cs"];
m24_25 [label="Entry System.Array.ForEach<T>(T[], System.Action<T>)", span="0-0", cluster="System.Array.ForEach<T>(T[], System.Action<T>)", file="MultiLineTextAttribute.cs"];
m24_21 [label="Entry CommandLine.Text.MultiLineTextAttribute.AddToHelpText(System.Action<string>)", span="110-110", cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(System.Action<string>)", file="MultiLineTextAttribute.cs"];
m24_22 [label="var strArray = new string[] {_line1, _line2, _line3, _line4, _line5}", span="112-112", cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(System.Action<string>)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m24_23 [label="Array.ForEach( strArray, (line) =>\r\n            {\r\n                if (!string.IsNullOrEmpty(line)) { action( line ); }\r\n            })", span="113-116", cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(System.Action<string>)", color=green, community=1, file="MultiLineTextAttribute.cs"];
m24_24 [label="Exit CommandLine.Text.MultiLineTextAttribute.AddToHelpText(System.Action<string>)", span="110-110", cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(System.Action<string>)", file="MultiLineTextAttribute.cs"];
m24_17 [label="Entry CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string, string)", span="103-103", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs"];
m24_18 [label="Assumes.NotNullOrEmpty(line5, ''line5'')", span="106-106", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string, string)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m24_19 [label="_line5 = line5", span="107-107", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string, string)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m24_20 [label="Exit CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string, string)", span="103-103", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs"];
m24_37 [label="Entry CommandLine.Text.MultiLineTextAttribute.GetLastLineWithText(string[])", span="139-139", cluster="CommandLine.Text.MultiLineTextAttribute.GetLastLineWithText(string[])", file="MultiLineTextAttribute.cs"];
m24_38 [label="int index = Array.FindLastIndex(strArray, (str) => { return !string.IsNullOrEmpty(str); })", span="141-141", cluster="CommandLine.Text.MultiLineTextAttribute.GetLastLineWithText(string[])", color=green, community=0, file="MultiLineTextAttribute.cs"];
m24_39 [label="return index + 1;", span="144-144", cluster="CommandLine.Text.MultiLineTextAttribute.GetLastLineWithText(string[])", color=green, community=0, file="MultiLineTextAttribute.cs"];
m24_40 [label="Exit CommandLine.Text.MultiLineTextAttribute.GetLastLineWithText(string[])", span="139-139", cluster="CommandLine.Text.MultiLineTextAttribute.GetLastLineWithText(string[])", file="MultiLineTextAttribute.cs"];
m24_0 [label="Entry CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string)", span="46-46", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string)", file="MultiLineTextAttribute.cs"];
m24_1 [label="Assumes.NotNullOrEmpty(line1, ''line1'')", span="48-48", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m24_2 [label="_line1 = line1", span="49-49", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m24_3 [label="Exit CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string)", span="46-46", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string)", file="MultiLineTextAttribute.cs"];
m24_5 [label="Entry CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string)", span="58-58", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string)", file="MultiLineTextAttribute.cs"];
m24_6 [label="Assumes.NotNullOrEmpty(line2, ''line2'')", span="61-61", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m24_7 [label="_line2 = line2", span="62-62", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m24_8 [label="Exit CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string)", span="58-58", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string)", file="MultiLineTextAttribute.cs"];
m24_9 [label="Entry CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string)", span="72-72", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string)", file="MultiLineTextAttribute.cs"];
m24_10 [label="Assumes.NotNullOrEmpty(line3, ''line3'')", span="75-75", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m24_11 [label="_line3 = line3", span="76-76", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m24_12 [label="Exit CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string)", span="72-72", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string)", file="MultiLineTextAttribute.cs"];
m24_42 [label="Entry lambda expression", span="141-141", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m24_26 [label="Entry lambda expression", span="113-116", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m24_28 [label="action( line )", span="115-115", cluster="lambda expression", color=green, community=0, file="MultiLineTextAttribute.cs"];
m24_27 [label="!string.IsNullOrEmpty(line)", span="115-115", cluster="lambda expression", color=green, community=0, file="MultiLineTextAttribute.cs"];
m24_29 [label="Exit lambda expression", span="113-116", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m24_43 [label="return !string.IsNullOrEmpty(str);", span="141-141", cluster="lambda expression", color=green, community=0, file="MultiLineTextAttribute.cs"];
m24_44 [label="Exit lambda expression", span="141-141", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m24_30 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="MultiLineTextAttribute.cs"];
m24_32 [label="Entry CommandLine.Text.MultiLineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="119-119", cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="MultiLineTextAttribute.cs"];
m24_33 [label=before, span="123-123", cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m24_34 [label="AddToHelpText(helpText.AddPreOptionsLine)", span="125-125", cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m24_35 [label="AddToHelpText(helpText.AddPostOptionsLine)", span="129-129", cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m24_36 [label="Exit CommandLine.Text.MultiLineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="119-119", cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="MultiLineTextAttribute.cs"];
m24_31 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="MultiLineTextAttribute.cs"];
m24_4 [label="Entry CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", span="1004-1004", cluster="CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", file="MultiLineTextAttribute.cs"];
m24_13 [label="Entry CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string)", span="87-87", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string)", file="MultiLineTextAttribute.cs"];
m24_14 [label="Assumes.NotNullOrEmpty(line4, ''line4'')", span="90-90", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m24_15 [label="_line4 = line4", span="91-91", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m24_16 [label="Exit CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string)", span="87-87", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string)", file="MultiLineTextAttribute.cs"];
m24_45 [label="System.Action<string>", span="", file="MultiLineTextAttribute.cs"];
m24_46 [label="CommandLine.Text.MultiLineTextAttribute", span="", file="MultiLineTextAttribute.cs"];
m25_9 [label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0", cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="MultiLineTextAttributeFixture.cs"];
m25_10 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="MultiLineTextAttributeFixture.cs"];
m25_8 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="MultiLineTextAttributeFixture.cs"];
m25_12 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="MultiLineTextAttributeFixture.cs"];
m25_0 [label="Entry CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", span="43-43", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs"];
m25_1 [label="IEnumerable<AssemblyLicenseAttribute> licenseAttributes = this.GetType().Assembly.GetCustomAttributes(typeof(AssemblyLicenseAttribute), false) as AssemblyLicenseAttribute[]", span="45-45", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs"];
m25_2 [label="licenseAttributes.Count().Should().Equal(1)", span="47-47", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs"];
m25_3 [label="string license = licenseAttributes.Single().Value", span="49-49", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs"];
m25_4 [label="string[] lines = license.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="50-50", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs"];
m25_5 [label="lines[0].Should().Equal(@''This is free software. You may redistribute copies of it under the terms of'')", span="51-51", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs"];
m25_6 [label="lines[1].Should().Equal(@''the MIT License <http://www.opensource.org/licenses/mit-license.php>.'')", span="52-52", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs"];
m25_7 [label="Exit CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", span="43-43", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs"];
m25_14 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)", file="MultiLineTextAttributeFixture.cs"];
m25_11 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="MultiLineTextAttributeFixture.cs"];
m25_13 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="MultiLineTextAttributeFixture.cs"];
m25_15 [label="Entry CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", span="56-56", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs"];
m25_16 [label="IEnumerable<AssemblyUsageAttribute> usageAttributes = this.GetType().Assembly.GetCustomAttributes(typeof(AssemblyUsageAttribute), false) as AssemblyUsageAttribute[]", span="58-58", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs"];
m25_17 [label="usageAttributes.Count().Should().Equal(1)", span="60-60", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs"];
m25_18 [label="usageAttributes.Single().Value.Should().Equal(@''[no usage, this is a dll]'' + Environment.NewLine)", span="61-61", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs"];
m25_19 [label="Exit CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", span="56-56", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs"];
m25_20 [label="CommandLine.Text.Tests.MultiLineTextAttributeFixture", span="", file="MultiLineTextAttributeFixture.cs"];
m7_142 -> m7_143  [key=0, style=solid, color=red];
m7_143 -> m7_144  [key=0, style=solid, color=red];
m7_143 -> m7_138  [key=2, style=dotted, color=red];
m7_144 -> m7_142  [key=0, style=bold, color=blue];
m7_91 -> m7_92  [key=0, style=solid, color=red];
m7_91 -> m7_96  [key=1, style=dashed, color=red, label="System.Type"];
m7_91 -> m7_97  [key=1, style=dashed, color=red, label="System.Type"];
m7_91 -> m7_93  [key=1, style=dashed, color=red, label="System.Type"];
m7_92 -> m7_93  [key=0, style=solid, color=red];
m7_93 -> m7_94  [key=0, style=solid, color=red];
m7_93 -> m7_90  [key=2, style=dotted, color=red];
m7_94 -> m7_91  [key=0, style=bold, color=blue];
m7_145 -> m7_146  [key=0, style=solid, color=red];
m7_146 -> m7_147  [key=0, style=solid, color=red];
m7_146 -> m7_148  [key=2, style=dotted, color=red];
m7_146 -> m7_149  [key=2, style=dotted, color=red];
m7_147 -> m7_145  [key=0, style=bold, color=blue];
m7_82 -> m7_83  [key=0, style=solid, color=red];
m7_83 -> m7_84  [key=0, style=solid, color=red];
m7_83 -> m7_86  [key=2, style=dotted, color=red];
m7_83 -> m7_87  [key=2, style=dotted, color=red];
m7_83 -> m7_88  [key=2, style=dotted, color=red];
m7_84 -> m7_85  [key=0, style=solid, color=red];
m7_84 -> m7_89  [key=2, style=dotted, color=red];
m7_84 -> m7_90  [key=2, style=dotted, color=red];
m7_85 -> m7_82  [key=0, style=bold, color=blue];
m7_131 -> m7_132  [key=0, style=solid, color=red];
m7_132 -> m7_133  [key=0, style=solid, color=red];
m7_132 -> m7_134  [key=2, style=dotted, color=red];
m7_133 -> m7_131  [key=0, style=bold, color=blue];
m7_59 -> m7_60  [key=0, style=solid, color=red];
m7_59 -> m7_61  [key=1, style=dashed, color=red, label="System.Reflection.PropertyInfo"];
m7_59 -> m7_70  [key=1, style=dashed, color=red, label=T];
m7_59 -> m7_59  [key=3, color=green, style=bold, label="method methodReturn T SetValue"];
m7_60 -> m7_61  [key=0, style=solid, color=red];
m7_60 -> m7_75  [key=1, style=dashed, color=red, label="System.Exception"];
m7_60 -> m7_63  [key=1, style=dashed, color=red, label=fail];
m7_60 -> m7_65  [key=1, style=dashed, color=red, label=fail];
m7_60 -> m7_67  [key=1, style=dashed, color=red, label=fail];
m7_60 -> m7_69  [key=1, style=dashed, color=red, label=fail];
m7_61 -> m7_62  [key=0, style=solid, color=red];
m7_61 -> m7_64  [key=0, style=solid, color=red];
m7_61 -> m7_66  [key=0, style=solid, color=red];
m7_61 -> m7_68  [key=0, style=solid, color=red];
m7_61 -> m7_70  [key=0, style=solid, color=red];
m7_61 -> m7_72  [key=2, style=dotted, color=red];
m7_70 -> m7_71  [key=0, style=solid, color=red];
m7_63 -> m7_70  [key=0, style=solid, color=red];
m7_63 -> m7_73  [key=2, style=dotted, color=red];
m7_65 -> m7_70  [key=0, style=solid, color=red];
m7_65 -> m7_73  [key=2, style=dotted, color=red];
m7_67 -> m7_70  [key=0, style=solid, color=red];
m7_67 -> m7_73  [key=2, style=dotted, color=red];
m7_69 -> m7_70  [key=0, style=solid, color=red];
m7_69 -> m7_73  [key=2, style=dotted, color=red];
m7_62 -> m7_63  [key=0, style=solid, color=red];
m7_64 -> m7_65  [key=0, style=solid, color=red];
m7_66 -> m7_67  [key=0, style=solid, color=red];
m7_68 -> m7_69  [key=0, style=solid, color=red];
m7_71 -> m7_59  [key=0, style=bold, color=blue];
m7_45 -> m7_46  [key=0, style=solid, color=red];
m7_46 -> m7_47  [key=0, style=solid, color=red];
m7_46 -> m7_48  [key=2, style=dotted, color=red];
m7_47 -> m7_45  [key=0, style=bold, color=blue];
m7_14 -> m7_15  [key=0, style=solid, color=red];
m7_15 -> m7_16  [key=0, style=solid, color=red];
m7_15 -> m7_3  [key=2, style=dotted, color=red];
m7_15 -> m7_4  [key=2, style=dotted, color=red];
m7_15 -> m7_17  [key=2, style=dotted, color=red];
m7_15 -> m7_18  [key=2, style=dotted, color=red];
m7_15 -> m7_19  [key=1, style=dashed, color=red, label="lambda expression"];
m7_15 -> m7_15  [key=1, style=dashed, color=red, label=attr];
m7_16 -> m7_14  [key=0, style=bold, color=blue];
m7_128 -> m7_129  [key=0, style=solid, color=red];
m7_10 -> m7_11  [key=0, style=solid, color=red];
m7_11 -> m7_12  [key=0, style=solid, color=red];
m7_11 -> m7_13  [key=2, style=dotted, color=red];
m7_12 -> m7_10  [key=0, style=bold, color=blue];
m7_19 -> m7_20  [key=0, style=solid, color=red];
m7_20 -> m7_21  [key=0, style=solid, color=red];
m7_20 -> m7_22  [key=2, style=dotted, color=red];
m7_21 -> m7_19  [key=0, style=bold, color=blue];
m7_27 -> m7_28  [key=0, style=solid, color=red];
m7_28 -> m7_29  [key=0, style=solid, color=red];
m7_28 -> m7_13  [key=2, style=dotted, color=red];
m7_29 -> m7_27  [key=0, style=bold, color=blue];
m7_55 -> m7_56  [key=0, style=solid, color=red];
m7_55 -> m7_9  [key=2, style=dotted, color=red];
m7_55 -> m7_58  [key=2, style=dotted, color=red];
m7_56 -> m7_57  [key=0, style=solid, color=red];
m7_54 -> m7_55  [key=0, style=solid, color=red];
m7_57 -> m7_54  [key=0, style=bold, color=blue];
m7_75 -> m7_76  [key=0, style=solid, color=red];
m7_75 -> m7_77  [key=2, style=dotted, color=red];
m7_74 -> m7_75  [key=0, style=solid, color=red];
m7_76 -> m7_74  [key=0, style=bold, color=blue];
m7_96 -> m7_97  [key=0, style=solid, color=red];
m7_96 -> m7_100  [key=2, style=dotted, color=red];
m7_96 -> m7_7  [key=2, style=dotted, color=red];
m7_96 -> m7_103  [key=1, style=dashed, color=red, label="lambda expression"];
m7_96 -> m7_98  [key=1, style=dashed, color=red, label=props];
m7_97 -> m7_98  [key=0, style=solid, color=red];
m7_97 -> m7_101  [key=2, style=dotted, color=red];
m7_97 -> m7_102  [key=2, style=dotted, color=red];
m7_95 -> m7_96  [key=0, style=solid, color=red];
m7_103 -> m7_104  [key=0, style=solid, color=red];
m7_98 -> m7_99  [key=0, style=solid, color=red];
m7_99 -> m7_95  [key=0, style=bold, color=blue];
m7_104 -> m7_105  [key=0, style=solid, color=red];
m7_105 -> m7_103  [key=0, style=bold, color=blue];
m7_129 -> m7_130  [key=0, style=solid, color=red];
m7_130 -> m7_128  [key=0, style=bold, color=blue];
m7_106 -> m7_107  [key=0, style=solid, color=red];
m7_106 -> m7_109  [key=1, style=dashed, color=red, label="System.Type"];
m7_106 -> m7_110  [key=1, style=dashed, color=red, label="System.Type"];
m7_106 -> m7_111  [key=1, style=dashed, color=red, label="System.Type"];
m7_106 -> m7_78  [key=3, color=green, style=bold, label="method methodReturn object CreateDefaultForImmutable"];
m7_106 -> m7_82  [key=3, color=green, style=bold, label="method methodReturn object CreateDefaultForImmutable"];
m7_107 -> m7_108  [key=0, style=solid, color=red];
m7_107 -> m7_109  [key=0, style=solid, color=red];
m7_109 -> m7_110  [key=0, style=solid, color=red];
m7_109 -> m7_111  [key=0, style=solid, color=red];
m7_109 -> m7_113  [key=2, style=dotted, color=red];
m7_110 -> m7_112  [key=0, style=solid, color=red];
m7_110 -> m7_114  [key=2, style=dotted, color=red];
m7_110 -> m7_115  [key=2, style=dotted, color=red];
m7_111 -> m7_112  [key=0, style=solid, color=red];
m7_111 -> m7_116  [key=2, style=dotted, color=red];
m7_108 -> m7_112  [key=0, style=solid, color=red];
m7_112 -> m7_106  [key=0, style=bold, color=blue];
m7_23 -> m7_24  [key=0, style=solid, color=red];
m7_24 -> m7_25  [key=0, style=solid, color=red];
m7_24 -> m7_3  [key=2, style=dotted, color=red];
m7_24 -> m7_4  [key=2, style=dotted, color=red];
m7_24 -> m7_5  [key=2, style=dotted, color=red];
m7_24 -> m7_6  [key=2, style=dotted, color=red];
m7_24 -> m7_7  [key=2, style=dotted, color=red];
m7_24 -> m7_8  [key=2, style=dotted, color=red];
m7_24 -> m7_26  [key=2, style=dotted, color=red];
m7_24 -> m7_17  [key=2, style=dotted, color=red];
m7_24 -> m7_18  [key=2, style=dotted, color=red];
m7_24 -> m7_27  [key=1, style=dashed, color=red, label="lambda expression"];
m7_24 -> m7_24  [key=1, style=dashed, color=red, label=pi];
m7_25 -> m7_23  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid, color=red];
m7_1 -> m7_2  [key=0, style=solid, color=red];
m7_1 -> m7_3  [key=2, style=dotted, color=red];
m7_1 -> m7_4  [key=2, style=dotted, color=red];
m7_1 -> m7_5  [key=2, style=dotted, color=red];
m7_1 -> m7_6  [key=2, style=dotted, color=red];
m7_1 -> m7_7  [key=2, style=dotted, color=red];
m7_1 -> m7_8  [key=2, style=dotted, color=red];
m7_1 -> m7_9  [key=2, style=dotted, color=red];
m7_1 -> m7_10  [key=1, style=dashed, color=red, label="lambda expression"];
m7_1 -> m7_1  [key=1, style=dashed, color=red, label=pi];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m7_117 -> m7_118  [key=0, style=solid, color=red];
m7_117 -> m7_119  [key=1, style=dashed, color=red, label="System.Type"];
m7_117 -> m7_120  [key=1, style=dashed, color=red, label="System.Type"];
m7_117 -> m7_121  [key=1, style=dashed, color=red, label="System.Type"];
m7_118 -> m7_119  [key=0, style=solid, color=red];
m7_118 -> m7_120  [key=0, style=solid, color=red];
m7_118 -> m7_123  [key=2, style=dotted, color=red];
m7_119 -> m7_122  [key=0, style=solid, color=red];
m7_119 -> m7_124  [key=2, style=dotted, color=red];
m7_120 -> m7_121  [key=0, style=solid, color=red];
m7_120 -> m7_125  [key=2, style=dotted, color=red];
m7_120 -> m7_126  [key=2, style=dotted, color=red];
m7_120 -> m7_128  [key=1, style=dashed, color=red, label="lambda expression"];
m7_121 -> m7_122  [key=0, style=solid, color=red];
m7_121 -> m7_127  [key=2, style=dotted, color=red];
m7_122 -> m7_117  [key=0, style=bold, color=blue];
m7_139 -> m7_140  [key=0, style=solid, color=red];
m7_140 -> m7_141  [key=0, style=solid, color=red];
m7_140 -> m7_138  [key=2, style=dotted, color=red];
m7_141 -> m7_139  [key=0, style=bold, color=blue];
m7_40 -> m7_41  [key=0, style=solid, color=red];
m7_41 -> m7_42  [key=0, style=solid, color=red];
m7_41 -> m7_43  [key=2, style=dotted, color=red];
m7_41 -> m7_44  [key=2, style=dotted, color=red];
m7_42 -> m7_40  [key=0, style=bold, color=blue];
m7_78 -> m7_79  [key=0, style=solid, color=red];
m7_79 -> m7_80  [key=0, style=solid, color=red];
m7_79 -> m7_81  [key=2, style=dotted, color=red];
m7_80 -> m7_78  [key=0, style=bold, color=blue];
m7_49 -> m7_50  [key=0, style=solid, color=red];
m7_49 -> m7_55  [key=1, style=dashed, color=red, label="System.Func<CommandLine.Core.SpecificationProperty, object>"];
m7_49 -> m7_56  [key=1, style=dashed, color=red, label=T];
m7_50 -> m7_51  [key=0, style=solid, color=red];
m7_50 -> m7_52  [key=2, style=dotted, color=red];
m7_50 -> m7_53  [key=2, style=dotted, color=red];
m7_50 -> m7_54  [key=1, style=dashed, color=red, label="lambda expression"];
m7_51 -> m7_49  [key=0, style=bold, color=blue];
m7_30 -> m7_31  [key=0, style=solid, color=red];
m7_30 -> m7_32  [key=0, style=bold, color=red];
m7_30 -> m7_33  [key=0, style=bold, color=red];
m7_30 -> m7_35  [key=0, style=bold, color=red];
m7_30 -> m7_37  [key=0, style=bold, color=red];
m7_30 -> m7_34  [key=1, style=dashed, color=red, label="System.Type"];
m7_30 -> m7_36  [key=1, style=dashed, color=red, label="System.Type"];
m7_31 -> m7_32  [key=0, style=solid, color=red];
m7_31 -> m7_33  [key=0, style=solid, color=red];
m7_32 -> m7_33  [key=0, style=solid, color=red];
m7_33 -> m7_34  [key=0, style=solid, color=red];
m7_35 -> m7_34  [key=0, style=solid, color=red];
m7_37 -> m7_36  [key=0, style=solid, color=red];
m7_34 -> m7_35  [key=0, style=solid, color=red];
m7_34 -> m7_36  [key=0, style=solid, color=red];
m7_34 -> m7_39  [key=2, style=dotted, color=red];
m7_36 -> m7_37  [key=0, style=solid, color=red];
m7_36 -> m7_38  [key=0, style=solid, color=red];
m7_36 -> m7_30  [key=2, style=dotted, color=red];
m7_38 -> m7_30  [key=0, style=bold, color=blue];
m7_135 -> m7_136  [key=0, style=solid, color=red];
m7_136 -> m7_137  [key=0, style=solid, color=red];
m7_136 -> m7_138  [key=2, style=dotted, color=red];
m7_137 -> m7_135  [key=0, style=bold, color=blue];
m7_150 -> m7_55  [key=1, style=dashed, color=red, label="System.Func<CommandLine.Core.SpecificationProperty, object>"];
m7_151 -> m7_56  [key=1, style=dashed, color=red, label=T];
m7_152 -> m7_96  [key=1, style=dashed, color=red, label="System.Type"];
m7_152 -> m7_97  [key=1, style=dashed, color=red, label="System.Type"];
m13_91 -> m13_103  [key=0, style=solid, color=red];
m13_91 -> m13_104  [key=1, style=dashed, color=red, label=string];
m13_91 -> m13_105  [key=1, style=dashed, color=red, label=object];
m13_91 -> m13_106  [key=1, style=dashed, color=red, label=object];
m13_91 -> m13_65  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
m13_91 -> m13_92  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute> helpInfo"];
m13_91 -> m13_69  [key=3, color=red, style=bold, label="Parameter variable CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute> helpInfo"];
m13_91 -> m13_97  [key=3, color=red, style=bold, label="Parameter variable string verb"];
m13_103 -> m13_104  [key=0, style=solid, color=red];
m13_104 -> m13_105  [key=0, style=solid, color=red];
m13_104 -> m13_106  [key=0, style=solid, color=red];
m13_105 -> m13_107  [key=0, style=solid, color=red];
m13_105 -> m13_40  [key=2, style=dotted, color=red];
m13_106 -> m13_107  [key=0, style=solid, color=red];
m13_106 -> m13_40  [key=2, style=dotted, color=red];
m13_107 -> m13_108  [key=0, style=solid, color=red];
m13_107 -> m13_109  [key=2, style=dotted, color=red];
m13_108 -> m13_91  [key=0, style=bold, color=blue];
m13_5 -> m13_6  [key=0, style=solid, color=red];
m13_5 -> m13_7  [key=1, style=dashed, color=red, label=object];
m13_5 -> m13_65  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
m13_6 -> m13_7  [key=0, style=solid, color=red];
m13_7 -> m13_8  [key=0, style=solid, color=red];
m13_7 -> m13_10  [key=0, style=solid, color=red];
m13_7 -> m13_11  [key=2, style=dotted, color=red];
m13_7 -> m13_12  [key=2, style=dotted, color=red];
m13_8 -> m13_9  [key=0, style=solid, color=red];
m13_9 -> m13_10  [key=0, style=solid, color=red];
m13_9 -> m13_13  [key=2, style=dotted, color=red];
m13_10 -> m13_5  [key=0, style=bold, color=blue];
m13_29 -> m13_30  [key=0, style=solid, color=red];
m13_30 -> m13_31  [key=0, style=solid, color=red];
m13_30 -> m13_32  [key=2, style=dotted, color=red];
m13_31 -> m13_29  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid, color=red];
m13_0 -> m13_2  [key=1, style=dashed, color=red, label=object];
m13_0 -> m13_65  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
m13_1 -> m13_2  [key=0, style=solid, color=red];
m13_2 -> m13_3  [key=0, style=solid, color=red];
m13_2 -> m13_4  [key=2, style=dotted, color=red];
m13_3 -> m13_0  [key=0, style=bold, color=blue];
m13_65 -> m13_66  [key=0, style=solid, color=red];
m13_65 -> m13_68  [key=1, style=dashed, color=red, label="string[]"];
m13_65 -> m13_69  [key=1, style=dashed, color=red, label=object];
m13_65 -> m13_70  [key=1, style=dashed, color=red, label="string[]"];
m13_65 -> m13_72  [key=1, style=dashed, color=red, label=object];
m13_65 -> m13_74  [key=1, style=dashed, color=red, label=object];
m13_65 -> m13_75  [key=1, style=dashed, color=red, label="string[]"];
m13_65 -> m13_77  [key=1, style=dashed, color=red, label="string[]"];
m13_65 -> m13_78  [key=1, style=dashed, color=red, label=object];
m13_65 -> m13_79  [key=1, style=dashed, color=red, label=object];
m13_65 -> m13_80  [key=1, style=dashed, color=red, label="string[]"];
m13_65 -> m13_81  [key=1, style=dashed, color=red, label="string[]"];
m13_65 -> m13_82  [key=1, style=dashed, color=red, label="string[]"];
m13_65 -> m13_83  [key=1, style=dashed, color=red, label=object];
m13_65 -> m13_85  [key=1, style=dashed, color=red, label="string[]"];
m13_66 -> m13_67  [key=0, style=solid, color=red];
m13_66 -> m13_88  [key=2, style=dotted, color=red];
m13_66 -> m13_74  [key=1, style=dashed, color=red, label=verbs];
m13_68 -> m13_87  [key=0, style=solid, color=red];
m13_68 -> m13_89  [key=2, style=dotted, color=red];
m13_69 -> m13_70  [key=0, style=solid, color=red];
m13_69 -> m13_90  [key=2, style=dotted, color=red];
m13_69 -> m13_71  [key=1, style=dashed, color=red, label=helpInfo];
m13_69 -> m13_72  [key=1, style=dashed, color=red, label=helpInfo];
m13_69 -> m13_75  [key=1, style=dashed, color=red, label=helpInfo];
m13_69 -> m13_85  [key=1, style=dashed, color=red, label=helpInfo];
m13_70 -> m13_71  [key=0, style=solid, color=red];
m13_70 -> m13_74  [key=0, style=solid, color=red];
m13_72 -> m13_73  [key=0, style=solid, color=red];
m13_72 -> m13_91  [key=2, style=dotted, color=red];
m13_74 -> m13_75  [key=0, style=solid, color=red];
m13_74 -> m13_14  [key=2, style=dotted, color=red];
m13_74 -> m13_77  [key=1, style=dashed, color=red, label=optionMap];
m13_75 -> m13_76  [key=0, style=solid, color=red];
m13_75 -> m13_77  [key=0, style=solid, color=red];
m13_75 -> m13_92  [key=2, style=dotted, color=red];
m13_77 -> m13_78  [key=0, style=solid, color=red];
m13_77 -> m13_79  [key=1, style=dashed, color=red, label=verbOption];
m13_77 -> m13_83  [key=1, style=dashed, color=red, label=verbOption];
m13_78 -> m13_79  [key=0, style=solid, color=red];
m13_78 -> m13_80  [key=0, style=solid, color=red];
m13_78 -> m13_0  [key=2, style=dotted, color=red];
m13_79 -> m13_80  [key=0, style=solid, color=red];
m13_79 -> m13_5  [key=2, style=dotted, color=red];
m13_80 -> m13_81  [key=0, style=solid, color=red];
m13_80 -> m13_82  [key=1, style=dashed, color=red, label=verbArgs];
m13_80 -> m13_83  [key=1, style=dashed, color=red, label=verbArgs];
m13_81 -> m13_82  [key=0, style=solid, color=red];
m13_81 -> m13_83  [key=0, style=solid, color=red];
m13_82 -> m13_83  [key=0, style=solid, color=red];
m13_82 -> m13_93  [key=2, style=dotted, color=red];
m13_83 -> m13_84  [key=0, style=solid, color=red];
m13_83 -> m13_0  [key=2, style=dotted, color=red];
m13_83 -> m13_89  [key=2, style=dotted, color=red];
m13_83 -> m13_86  [key=1, style=dashed, color=red, label=verbResult];
m13_85 -> m13_86  [key=0, style=solid, color=red];
m13_85 -> m13_91  [key=2, style=dotted, color=red];
m13_67 -> m13_68  [key=0, style=solid, color=red];
m13_67 -> m13_69  [key=0, style=solid, color=red];
m13_71 -> m13_72  [key=0, style=solid, color=red];
m13_71 -> m13_73  [key=0, style=solid, color=red];
m13_73 -> m13_87  [key=0, style=solid, color=red];
m13_76 -> m13_87  [key=0, style=solid, color=red];
m13_84 -> m13_85  [key=0, style=solid, color=red];
m13_84 -> m13_86  [key=0, style=solid, color=red];
m13_86 -> m13_87  [key=0, style=solid, color=red];
m13_87 -> m13_65  [key=0, style=bold, color=blue];
m13_55 -> m13_56  [key=0, style=solid, color=red];
m13_55 -> m13_57  [key=1, style=dashed, color=red, label=string];
m13_55 -> m13_58  [key=1, style=dashed, color=red, label=object];
m13_55 -> m13_59  [key=1, style=dashed, color=red, label=string];
m13_55 -> m13_61  [key=1, style=dashed, color=red, label=object];
m13_55 -> m13_55  [key=3, color=darkorchid, style=bold, label="method methodReturn object GetVerbOptionsInstanceByName"];
m13_56 -> m13_57  [key=0, style=solid, color=red];
m13_57 -> m13_58  [key=0, style=solid, color=red];
m13_57 -> m13_59  [key=0, style=solid, color=red];
m13_57 -> m13_63  [key=2, style=dotted, color=red];
m13_58 -> m13_62  [key=0, style=solid, color=red];
m13_59 -> m13_60  [key=0, style=solid, color=red];
m13_59 -> m13_64  [key=2, style=dotted, color=red];
m13_59 -> m13_61  [key=1, style=dashed, color=red, label=pair];
m13_61 -> m13_62  [key=0, style=solid, color=red];
m13_61 -> m13_4  [key=2, style=dotted, color=red];
m13_60 -> m13_61  [key=0, style=solid, color=red];
m13_60 -> m13_62  [key=1, style=dashed, color=red, label="out bool"];
m13_62 -> m13_55  [key=0, style=bold, color=blue];
m13_40 -> m13_41  [key=0, style=solid, color=red];
m13_40 -> m13_42  [key=1, style=dashed, color=red, label="CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>"];
m13_40 -> m13_45  [key=1, style=dashed, color=red, label=object];
m13_40 -> m13_91  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
m13_41 -> m13_42  [key=0, style=solid, color=red];
m13_42 -> m13_43  [key=0, style=solid, color=red];
m13_42 -> m13_44  [key=1, style=dashed, color=red, label=method];
m13_42 -> m13_45  [key=1, style=dashed, color=red, label=method];
m13_45 -> m13_46  [key=0, style=solid, color=red];
m13_45 -> m13_49  [key=2, style=dotted, color=red];
m13_43 -> m13_44  [key=0, style=solid, color=red];
m13_43 -> m13_45  [key=0, style=solid, color=red];
m13_43 -> m13_47  [key=2, style=dotted, color=red];
m13_44 -> m13_46  [key=0, style=solid, color=red];
m13_44 -> m13_48  [key=2, style=dotted, color=red];
m13_44 -> m13_28  [key=2, style=dotted, color=red];
m13_46 -> m13_40  [key=0, style=bold, color=blue];
m13_33 -> m13_34  [key=0, style=solid, color=red];
m13_34 -> m13_35  [key=0, style=solid, color=red];
m13_35 -> m13_33  [key=0, style=bold, color=blue];
m13_36 -> m13_37  [key=0, style=solid, color=red];
m13_37 -> m13_38  [key=0, style=solid, color=red];
m13_38 -> m13_39  [key=0, style=solid, color=red];
m13_39 -> m13_36  [key=0, style=bold, color=blue];
m13_47 -> m13_50  [key=0, style=solid, color=red];
m13_47 -> m13_51  [key=1, style=dashed, color=red, label="System.Reflection.MethodInfo"];
m13_47 -> m13_42  [key=3, color=red, style=bold, label="Parameter variable System.Reflection.MethodInfo value"];
m13_50 -> m13_51  [key=0, style=solid, color=red];
m13_50 -> m13_52  [key=0, style=solid, color=red];
m13_50 -> m13_54  [key=2, style=dotted, color=red];
m13_51 -> m13_53  [key=0, style=solid, color=red];
m13_51 -> m13_54  [key=2, style=dotted, color=red];
m13_52 -> m13_53  [key=0, style=solid, color=red];
m13_53 -> m13_47  [key=0, style=bold, color=blue];
m13_14 -> m13_15  [key=0, style=solid, color=red];
m13_14 -> m13_16  [key=1, style=dashed, color=red, label="System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>"];
m13_14 -> m13_18  [key=1, style=dashed, color=red, label=object];
m13_14 -> m13_21  [key=1, style=dashed, color=red, label=object];
m13_14 -> m13_65  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
m13_15 -> m13_16  [key=0, style=solid, color=red];
m13_15 -> m13_24  [key=2, style=dotted, color=red];
m13_15 -> m13_20  [key=1, style=dashed, color=red, label=map];
m13_15 -> m13_21  [key=1, style=dashed, color=red, label=map];
m13_15 -> m13_22  [key=1, style=dashed, color=red, label=map];
m13_16 -> m13_17  [key=0, style=solid, color=red];
m13_16 -> m13_21  [key=0, style=solid, color=red];
m13_16 -> m13_18  [key=1, style=dashed, color=red, label=verb];
m13_16 -> m13_19  [key=1, style=dashed, color=red, label=verb];
m13_16 -> m13_20  [key=1, style=dashed, color=red, label=verb];
m13_18 -> m13_19  [key=0, style=solid, color=red];
m13_18 -> m13_20  [key=0, style=solid, color=red];
m13_18 -> m13_4  [key=2, style=dotted, color=red];
m13_21 -> m13_22  [key=0, style=solid, color=red];
m13_20 -> m13_16  [key=0, style=solid, color=red];
m13_22 -> m13_23  [key=0, style=solid, color=red];
m13_17 -> m13_18  [key=0, style=solid, color=red];
m13_17 -> m13_25  [key=2, style=dotted, color=red];
m13_17 -> m13_26  [key=2, style=dotted, color=red];
m13_17 -> m13_20  [key=1, style=dashed, color=red, label=optionInfo];
m13_19 -> m13_23  [key=0, style=solid, color=red];
m13_19 -> m13_27  [key=2, style=dotted, color=red];
m13_19 -> m13_28  [key=2, style=dotted, color=red];
m13_23 -> m13_14  [key=0, style=bold, color=blue];
m13_92 -> m13_94  [key=0, style=solid, color=red];
m13_92 -> m13_95  [key=1, style=dashed, color=red, label="CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>"];
m13_92 -> m13_96  [key=1, style=dashed, color=red, label="string[]"];
m13_92 -> m13_97  [key=1, style=dashed, color=red, label="string[]"];
m13_92 -> m13_98  [key=1, style=dashed, color=red, label=object];
m13_92 -> m13_65  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
m13_92 -> m13_69  [key=3, color=red, style=bold, label="Parameter variable CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute> helpInfo"];
m13_92 -> m13_99  [key=3, color=red, style=bold, label="method methodReturn bool TryParseHelpVerb"];
m13_94 -> m13_95  [key=0, style=solid, color=red];
m13_95 -> m13_96  [key=0, style=solid, color=red];
m13_95 -> m13_100  [key=0, style=solid, color=red];
m13_96 -> m13_97  [key=0, style=solid, color=red];
m13_96 -> m13_100  [key=0, style=solid, color=red];
m13_96 -> m13_102  [key=2, style=dotted, color=red];
m13_97 -> m13_98  [key=0, style=solid, color=red];
m13_98 -> m13_99  [key=0, style=solid, color=red];
m13_98 -> m13_91  [key=2, style=dotted, color=red];
m13_100 -> m13_101  [key=0, style=solid, color=red];
m13_99 -> m13_101  [key=0, style=solid, color=red];
m13_101 -> m13_92  [key=0, style=bold, color=blue];
m13_110 -> m13_1  [key=1, style=dashed, color=red, label="CommandLine.Internal.OptionInfo"];
m13_110 -> m13_2  [key=1, style=dashed, color=red, label="CommandLine.Internal.OptionInfo"];
m13_110 -> m13_6  [key=1, style=dashed, color=red, label="CommandLine.Internal.OptionInfo"];
m13_110 -> m13_7  [key=1, style=dashed, color=red, label="CommandLine.Internal.OptionInfo"];
m13_111 -> m13_34  [key=1, style=dashed, color=red, label="CommandLine.HelpVerbOptionAttribute"];
m13_111 -> m13_37  [key=1, style=dashed, color=red, label="CommandLine.HelpVerbOptionAttribute"];
m13_111 -> m13_38  [key=1, style=dashed, color=red, label="CommandLine.HelpVerbOptionAttribute"];
m13_112 -> m13_68  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
m13_112 -> m13_71  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
m13_112 -> m13_72  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
m13_112 -> m13_74  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
m13_112 -> m13_75  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
m13_112 -> m13_83  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
m13_112 -> m13_85  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
m13_112 -> m13_94  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
m13_112 -> m13_96  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
m13_112 -> m13_98  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
m13_112 -> m13_107  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
m24_21 -> m24_22  [key=0, style=solid, color=green];
m24_21 -> m24_23  [key=1, style=dashed, color=green, label="System.Action<string>"];
m24_21 -> m24_28  [key=1, style=dashed, color=green, label="System.Action<string>"];
m24_22 -> m24_23  [key=0, style=solid, color=green];
m24_23 -> m24_24  [key=0, style=solid, color=green];
m24_23 -> m24_25  [key=2, style=dotted, color=green];
m24_23 -> m24_26  [key=1, style=dashed, color=green, label="lambda expression"];
m24_24 -> m24_21  [key=0, style=bold, color=blue];
m24_17 -> m24_18  [key=0, style=solid, color=green];
m24_17 -> m24_19  [key=1, style=dashed, color=green, label=string];
m24_18 -> m24_19  [key=0, style=solid, color=green];
m24_18 -> m24_4  [key=2, style=dotted, color=green];
m24_19 -> m24_20  [key=0, style=solid, color=green];
m24_20 -> m24_17  [key=0, style=bold, color=blue];
m24_37 -> m24_38  [key=0, style=solid, color=green];
m24_38 -> m24_39  [key=0, style=solid, color=green];
m24_38 -> m24_41  [key=2, style=dotted, color=green];
m24_38 -> m24_42  [key=1, style=dashed, color=green, label="lambda expression"];
m24_39 -> m24_40  [key=0, style=solid, color=green];
m24_40 -> m24_37  [key=0, style=bold, color=blue];
m24_0 -> m24_1  [key=0, style=solid, color=green];
m24_0 -> m24_2  [key=1, style=dashed, color=green, label=string];
m24_1 -> m24_2  [key=0, style=solid, color=green];
m24_1 -> m24_4  [key=2, style=dotted, color=green];
m24_2 -> m24_3  [key=0, style=solid, color=green];
m24_3 -> m24_0  [key=0, style=bold, color=blue];
m24_5 -> m24_6  [key=0, style=solid, color=green];
m24_5 -> m24_7  [key=1, style=dashed, color=green, label=string];
m24_6 -> m24_7  [key=0, style=solid, color=green];
m24_6 -> m24_4  [key=2, style=dotted, color=green];
m24_7 -> m24_8  [key=0, style=solid, color=green];
m24_8 -> m24_5  [key=0, style=bold, color=blue];
m24_9 -> m24_10  [key=0, style=solid, color=green];
m24_9 -> m24_11  [key=1, style=dashed, color=green, label=string];
m24_10 -> m24_11  [key=0, style=solid, color=green];
m24_10 -> m24_4  [key=2, style=dotted, color=green];
m24_11 -> m24_12  [key=0, style=solid, color=green];
m24_12 -> m24_9  [key=0, style=bold, color=blue];
m24_42 -> m24_43  [key=0, style=solid, color=green];
m24_26 -> m24_28  [key=1, style=dashed, color=green, label=string];
m24_26 -> m24_27  [key=0, style=solid, color=green];
m24_28 -> m24_29  [key=0, style=solid, color=green];
m24_28 -> m24_31  [key=2, style=dotted, color=green];
m24_27 -> m24_28  [key=0, style=solid, color=green];
m24_27 -> m24_29  [key=0, style=solid, color=green];
m24_27 -> m24_30  [key=2, style=dotted, color=green];
m24_29 -> m24_26  [key=0, style=bold, color=blue];
m24_43 -> m24_44  [key=0, style=solid, color=green];
m24_43 -> m24_30  [key=2, style=dotted, color=green];
m24_44 -> m24_42  [key=0, style=bold, color=blue];
m24_32 -> m24_33  [key=0, style=solid, color=green];
m24_32 -> m24_34  [key=1, style=dashed, color=green, label="CommandLine.Text.HelpText"];
m24_32 -> m24_35  [key=1, style=dashed, color=green, label="CommandLine.Text.HelpText"];
m24_33 -> m24_34  [key=0, style=solid, color=green];
m24_33 -> m24_35  [key=0, style=solid, color=green];
m24_34 -> m24_36  [key=0, style=solid, color=green];
m24_34 -> m24_21  [key=2, style=dotted, color=green];
m24_35 -> m24_36  [key=0, style=solid, color=green];
m24_35 -> m24_21  [key=2, style=dotted, color=green];
m24_36 -> m24_32  [key=0, style=bold, color=blue];
m24_13 -> m24_14  [key=0, style=solid, color=green];
m24_13 -> m24_15  [key=1, style=dashed, color=green, label=string];
m24_14 -> m24_15  [key=0, style=solid, color=green];
m24_14 -> m24_4  [key=2, style=dotted, color=green];
m24_15 -> m24_16  [key=0, style=solid, color=green];
m24_16 -> m24_13  [key=0, style=bold, color=blue];
m24_45 -> m24_28  [key=1, style=dashed, color=green, label="System.Action<string>"];
m24_46 -> m24_34  [key=1, style=dashed, color=green, label="CommandLine.Text.MultiLineTextAttribute"];
m24_46 -> m24_35  [key=1, style=dashed, color=green, label="CommandLine.Text.MultiLineTextAttribute"];
m25_0 -> m25_1  [key=0, style=solid, color=green];
m25_1 -> m25_2  [key=0, style=solid, color=green];
m25_1 -> m25_8  [key=2, style=dotted, color=green];
m25_1 -> m25_9  [key=2, style=dotted, color=green];
m25_1 -> m25_3  [key=1, style=dashed, color=green, label=licenseAttributes];
m25_2 -> m25_3  [key=0, style=solid, color=green];
m25_2 -> m25_10  [key=2, style=dotted, color=green];
m25_2 -> m25_11  [key=2, style=dotted, color=green];
m25_2 -> m25_12  [key=2, style=dotted, color=green];
m25_3 -> m25_4  [key=0, style=solid, color=green];
m25_3 -> m25_13  [key=2, style=dotted, color=green];
m25_4 -> m25_5  [key=0, style=solid, color=green];
m25_4 -> m25_14  [key=2, style=dotted, color=green];
m25_4 -> m25_6  [key=1, style=dashed, color=green, label=lines];
m25_5 -> m25_6  [key=0, style=solid, color=green];
m25_5 -> m25_11  [key=2, style=dotted, color=green];
m25_5 -> m25_12  [key=2, style=dotted, color=green];
m25_6 -> m25_7  [key=0, style=solid, color=green];
m25_6 -> m25_11  [key=2, style=dotted, color=green];
m25_6 -> m25_12  [key=2, style=dotted, color=green];
m25_7 -> m25_0  [key=0, style=bold, color=blue];
m25_15 -> m25_16  [key=0, style=solid, color=green];
m25_16 -> m25_17  [key=0, style=solid, color=green];
m25_16 -> m25_8  [key=2, style=dotted, color=green];
m25_16 -> m25_9  [key=2, style=dotted, color=green];
m25_16 -> m25_18  [key=1, style=dashed, color=green, label=usageAttributes];
m25_17 -> m25_18  [key=0, style=solid, color=green];
m25_17 -> m25_10  [key=2, style=dotted, color=green];
m25_17 -> m25_11  [key=2, style=dotted, color=green];
m25_17 -> m25_12  [key=2, style=dotted, color=green];
m25_18 -> m25_19  [key=0, style=solid, color=green];
m25_18 -> m25_13  [key=2, style=dotted, color=green];
m25_18 -> m25_11  [key=2, style=dotted, color=green];
m25_18 -> m25_12  [key=2, style=dotted, color=green];
m25_19 -> m25_15  [key=0, style=bold, color=blue];
m25_20 -> m25_1  [key=1, style=dashed, color=green, label="CommandLine.Text.Tests.MultiLineTextAttributeFixture"];
m25_20 -> m25_16  [key=1, style=dashed, color=green, label="CommandLine.Text.Tests.MultiLineTextAttributeFixture"];
}
