digraph  {
n0 [label="Entry Ninject.Activation.IContext.GetProvider()", span="65-65", cluster="Ninject.Activation.IContext.GetProvider()"];
n1 [label="Exit Ninject.Activation.IContext.GetProvider()", span="65-65", cluster="Ninject.Activation.IContext.GetProvider()"];
n2 [label="Entry Ninject.Activation.IContext.GetScope()", span="71-71", cluster="Ninject.Activation.IContext.GetScope()"];
n3 [label="Exit Ninject.Activation.IContext.GetScope()", span="71-71", cluster="Ninject.Activation.IContext.GetScope()"];
n4 [label="Entry Ninject.Activation.IContext.Resolve()", span="77-77", cluster="Ninject.Activation.IContext.Resolve()"];
n5 [label="Exit Ninject.Activation.IContext.Resolve()", span="77-77", cluster="Ninject.Activation.IContext.Resolve()"];
n6 [label="Entry Ninject.Activation.IContext.BuildPlan(System.Type)", span="83-83", cluster="Ninject.Activation.IContext.BuildPlan(System.Type)"];
n7 [label="Exit Ninject.Activation.IContext.BuildPlan(System.Type)", span="83-83", cluster="Ninject.Activation.IContext.BuildPlan(System.Type)"];
m1_30 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="InstanceChooser.cs"];
m1_17 [label="Entry Ninject.Modules.IModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="32-32", cluster="Ninject.Modules.IModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs"];
m1_12 [label="Entry Ninject.Components.IComponentContainer.GetAll<T>()", span="66-66", cluster="Ninject.Components.IComponentContainer.GetAll<T>()", file="InstanceChooser.cs"];
m1_38 [label="Entry System.IO.Path.GetFileName(string)", span="0-0", cluster="System.IO.Path.GetFileName(string)", file="InstanceChooser.cs"];
m1_15 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="InstanceChooser.cs"];
m1_43 [label="Entry System.IO.Path.GetFullPath(string)", span="0-0", cluster="System.IO.Path.GetFullPath(string)", file="InstanceChooser.cs"];
m1_55 [label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0", cluster="string.Split(char[], System.StringSplitOptions)", file="InstanceChooser.cs"];
m1_34 [label="Entry Ninject.Modules.ModuleLoader.NormalizePaths(string)", span="68-68", cluster="Ninject.Modules.ModuleLoader.NormalizePaths(string)", file="InstanceChooser.cs"];
m1_40 [label="return Path.IsPathRooted(path)\r\n                        ? new[] { Path.GetFullPath(path) }\r\n                        : GetBaseDirectories().Select(baseDirectory => Path.Combine(baseDirectory, path));", span="70-72", cluster="Ninject.Modules.ModuleLoader.NormalizePaths(string)", file="InstanceChooser.cs"];
m1_41 [label="Exit Ninject.Modules.ModuleLoader.NormalizePaths(string)", span="68-68", cluster="Ninject.Modules.ModuleLoader.NormalizePaths(string)", file="InstanceChooser.cs"];
m1_13 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="InstanceChooser.cs"];
m1_56 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="InstanceChooser.cs"];
m1_18 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="InstanceChooser.cs"];
m1_22 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="InstanceChooser.cs"];
m1_28 [label="p.SupportedExtensions.Contains(extension)", span="55-55", cluster="lambda expression", file="InstanceChooser.cs"];
m1_27 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="InstanceChooser.cs"];
m1_19 [label="GetFilesMatchingPattern(pattern)", span="49-49", cluster="lambda expression", file="InstanceChooser.cs"];
m1_20 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="InstanceChooser.cs"];
m1_23 [label="Path.GetExtension(filename).ToLowerInvariant()", span="50-50", cluster="lambda expression", file="InstanceChooser.cs"];
m1_24 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="InstanceChooser.cs"];
m1_29 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="InstanceChooser.cs"];
m1_36 [label="Directory.GetFiles(path, Path.GetFileName(pattern))", span="65-65", cluster="lambda expression", file="InstanceChooser.cs"];
m1_35 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="InstanceChooser.cs"];
m1_37 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="InstanceChooser.cs"];
m1_47 [label="Path.Combine(baseDirectory, path)", span="72-72", cluster="lambda expression", file="InstanceChooser.cs"];
m1_46 [label="Entry lambda expression", span="72-72", cluster="lambda expression", file="InstanceChooser.cs"];
m1_48 [label="Exit lambda expression", span="72-72", cluster="lambda expression", file="InstanceChooser.cs"];
m1_57 [label="Path.Combine(baseDirectory, path)", span="83-83", cluster="lambda expression", file="InstanceChooser.cs"];
m1_58 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="InstanceChooser.cs"];
m1_14 [label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="InstanceChooser.cs"];
m1_21 [label="Entry Ninject.Modules.ModuleLoader.GetFilesMatchingPattern(string)", span="62-62", cluster="Ninject.Modules.ModuleLoader.GetFilesMatchingPattern(string)", file="InstanceChooser.cs"];
m1_31 [label="return NormalizePaths(Path.GetDirectoryName(pattern))\r\n                    .SelectMany(path => Directory.GetFiles(path, Path.GetFileName(pattern)));", span="64-65", cluster="Ninject.Modules.ModuleLoader.GetFilesMatchingPattern(string)", file="InstanceChooser.cs"];
m1_32 [label="Exit Ninject.Modules.ModuleLoader.GetFilesMatchingPattern(string)", span="62-62", cluster="Ninject.Modules.ModuleLoader.GetFilesMatchingPattern(string)", file="InstanceChooser.cs"];
m1_45 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="InstanceChooser.cs"];
m1_49 [label="Entry System.IO.Path.Combine(string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string)", file="InstanceChooser.cs"];
m1_44 [label="Entry Ninject.Modules.ModuleLoader.GetBaseDirectories()", span="75-75", cluster="Ninject.Modules.ModuleLoader.GetBaseDirectories()", file="InstanceChooser.cs"];
m1_50 [label="var baseDirectory = AppDomain.CurrentDomain.BaseDirectory", span="77-77", cluster="Ninject.Modules.ModuleLoader.GetBaseDirectories()", file="InstanceChooser.cs"];
m1_51 [label="var searchPath = AppDomain.CurrentDomain.RelativeSearchPath", span="78-78", cluster="Ninject.Modules.ModuleLoader.GetBaseDirectories()", file="InstanceChooser.cs"];
m1_52 [label="return String.IsNullOrEmpty(searchPath) \r\n                ? new[] {baseDirectory} \r\n                : searchPath.Split(new[] {Path.PathSeparator}, StringSplitOptions.RemoveEmptyEntries)\r\n                    .Select(path => Path.Combine(baseDirectory, path));", span="80-83", cluster="Ninject.Modules.ModuleLoader.GetBaseDirectories()", file="InstanceChooser.cs"];
m1_53 [label="Exit Ninject.Modules.ModuleLoader.GetBaseDirectories()", span="75-75", cluster="Ninject.Modules.ModuleLoader.GetBaseDirectories()", file="InstanceChooser.cs"];
m1_54 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="InstanceChooser.cs"];
m1_26 [label="Entry string.ToLowerInvariant()", span="0-0", cluster="string.ToLowerInvariant()", file="InstanceChooser.cs"];
m1_33 [label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0", cluster="System.IO.Path.GetDirectoryName(string)", file="InstanceChooser.cs"];
m1_25 [label="Entry System.IO.Path.GetExtension(string)", span="0-0", cluster="System.IO.Path.GetExtension(string)", file="InstanceChooser.cs"];
m1_39 [label="Entry System.IO.Directory.GetFiles(string, string)", span="0-0", cluster="System.IO.Directory.GetFiles(string, string)", file="InstanceChooser.cs"];
m1_42 [label="Entry System.IO.Path.IsPathRooted(string)", span="0-0", cluster="System.IO.Path.IsPathRooted(string)", file="InstanceChooser.cs"];
m1_0 [label="Entry Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernelConfiguration)", span="35-35", cluster="Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernelConfiguration)", file="InstanceChooser.cs"];
m1_1 [label="KernelConfiguration = kernelConfiguration", span="37-37", cluster="Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernelConfiguration)", file="InstanceChooser.cs"];
m1_2 [label="Exit Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernelConfiguration)", span="35-35", cluster="Ninject.Modules.ModuleLoader.ModuleLoader(Ninject.IKernelConfiguration)", file="InstanceChooser.cs"];
m1_3 [label="Entry Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="44-44", cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs"];
m1_4 [label="var plugins = KernelConfiguration.Components.GetAll<IModuleLoaderPlugin>()", span="46-46", cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs"];
m1_5 [label="var fileGroups = patterns\r\n                .SelectMany(pattern => GetFilesMatchingPattern(pattern))\r\n                .GroupBy(filename => Path.GetExtension(filename).ToLowerInvariant())", span="48-50", cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs"];
m1_8 [label="IModuleLoaderPlugin plugin = plugins.Where(p => p.SupportedExtensions.Contains(extension)).FirstOrDefault()", span="55-55", cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs"];
m1_6 [label=fileGroups, span="52-52", cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs"];
m1_7 [label="string extension = fileGroup.Key", span="54-54", cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs"];
m1_10 [label="plugin.LoadModules(fileGroup)", span="58-58", cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs"];
m1_9 [label="plugin != null", span="57-57", cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs"];
m1_11 [label="Exit Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="44-44", cluster="Ninject.Modules.ModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs"];
m1_16 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="InstanceChooser.cs"];
m1_59 [label="Ninject.Modules.ModuleLoader", span="", file="InstanceChooser.cs"];
m1_60 [label=extension, span="", file="InstanceChooser.cs"];
m1_61 [label=string, span="", file="InstanceChooser.cs"];
m1_62 [label=string, span="", file="InstanceChooser.cs"];
m1_63 [label=baseDirectory, span="", file="InstanceChooser.cs"];
m2_0 [label="Entry Ninject.IInitializable.Initialize()", span="30-30", cluster="Ninject.IInitializable.Initialize()", file="KeyValuePairHelper.cs"];
m2_1 [label="Exit Ninject.IInitializable.Initialize()", span="30-30", cluster="Ninject.IInitializable.Initialize()", file="KeyValuePairHelper.cs"];
m3_8 [label="Entry CommandLine.Core.NameExtensions.FromSpecification(CommandLine.Core.Specification)", span="22-22", cluster="CommandLine.Core.NameExtensions.FromSpecification(CommandLine.Core.Specification)", file="NameExtensions.cs"];
m3_9 [label="specification.Tag", span="24-24", cluster="CommandLine.Core.NameExtensions.FromSpecification(CommandLine.Core.Specification)", file="NameExtensions.cs"];
m3_11 [label="return FromOptionSpecification((OptionSpecification)specification);", span="27-27", cluster="CommandLine.Core.NameExtensions.FromSpecification(CommandLine.Core.Specification)", file="NameExtensions.cs"];
m3_10 [label="SpecificationType.Option", span="26-26", cluster="CommandLine.Core.NameExtensions.FromSpecification(CommandLine.Core.Specification)", file="NameExtensions.cs"];
m3_12 [label="return NameInfo.EmptyName;", span="29-29", cluster="CommandLine.Core.NameExtensions.FromSpecification(CommandLine.Core.Specification)", file="NameExtensions.cs"];
m3_13 [label="Exit CommandLine.Core.NameExtensions.FromSpecification(CommandLine.Core.Specification)", span="22-22", cluster="CommandLine.Core.NameExtensions.FromSpecification(CommandLine.Core.Specification)", file="NameExtensions.cs"];
m3_7 [label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20", cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameExtensions.cs"];
m3_3 [label="Entry System.StringComparer.Equals(string, string)", span="0-0", cluster="System.StringComparer.Equals(string, string)", file="NameExtensions.cs"];
m3_0 [label="Entry CommandLine.Core.NameExtensions.MatchName(string, string, string, System.StringComparer)", span="8-8", cluster="CommandLine.Core.NameExtensions.MatchName(string, string, string, System.StringComparer)", file="NameExtensions.cs"];
m3_1 [label="return value.Length == 1\r\n               ? comparer.Equals(value, shortName)\r\n               : comparer.Equals(value, longName);", span="10-12", cluster="CommandLine.Core.NameExtensions.MatchName(string, string, string, System.StringComparer)", file="NameExtensions.cs"];
m3_2 [label="Exit CommandLine.Core.NameExtensions.MatchName(string, string, string, System.StringComparer)", span="8-8", cluster="CommandLine.Core.NameExtensions.MatchName(string, string, string, System.StringComparer)", file="NameExtensions.cs"];
m3_4 [label="Entry CommandLine.Core.NameExtensions.FromOptionSpecification(CommandLine.Core.OptionSpecification)", span="15-15", cluster="CommandLine.Core.NameExtensions.FromOptionSpecification(CommandLine.Core.OptionSpecification)", file="NameExtensions.cs"];
m3_5 [label="return new NameInfo(\r\n                specification.LongName,\r\n                specification.ShortName);", span="17-19", cluster="CommandLine.Core.NameExtensions.FromOptionSpecification(CommandLine.Core.OptionSpecification)", file="NameExtensions.cs"];
m3_6 [label="Exit CommandLine.Core.NameExtensions.FromOptionSpecification(CommandLine.Core.OptionSpecification)", span="15-15", cluster="CommandLine.Core.NameExtensions.FromOptionSpecification(CommandLine.Core.OptionSpecification)", file="NameExtensions.cs"];
m4_30 [label="Entry Unk.WithValue", span="", cluster="Unk.WithValue", file="OptionMapper.cs"];
m4_4 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="OptionMapper.cs"];
m4_18 [label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8", cluster="string.MatchName(string, string, System.StringComparer)", file="OptionMapper.cs"];
m4_24 [label="Entry CommandLine.Core.OptionSpecification.FromOptionSpecification()", span="15-15", cluster="CommandLine.Core.OptionSpecification.FromOptionSpecification()", file="OptionMapper.cs"];
m4_23 [label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="349-349", cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="OptionMapper.cs"];
m4_11 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="OptionMapper.cs"];
m4_10 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="OptionMapper.cs"];
m4_25 [label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124", cluster="CSharpx.Maybe.Just<T>(T)", file="OptionMapper.cs"];
m4_13 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="OptionMapper.cs"];
m4_29 [label="Entry Unk.Just", span="", cluster="Unk.Just", file="OptionMapper.cs"];
m4_26 [label="Entry lambda expression", span="28-31", cluster="lambda expression", file="OptionMapper.cs"];
m4_8 [label="options.FirstOrDefault(\r\n                            s =>\r\n                            s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer))\r\n                               .ToMaybe()\r\n                               .Return(sequence =>\r\n                                    converter(sequence.Value, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                                    .Return(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(((OptionSpecification)pt.Specification).FromOptionSpecification())))),\r\n                                Tuple.Create(pt, Maybe.Nothing<Error>()))", span="22-35", cluster="lambda expression", file="OptionMapper.cs"];
m4_16 [label="s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer)", span="24-24", cluster="lambda expression", file="OptionMapper.cs"];
m4_20 [label="converter(sequence.Value, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                                    .Return(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(((OptionSpecification)pt.Specification).FromOptionSpecification()))))", span="27-34", cluster="lambda expression", file="OptionMapper.cs"];
m4_7 [label="Entry lambda expression", span="21-35", cluster="lambda expression", file="OptionMapper.cs"];
m4_31 [label="Entry lambda expression", span="38-38", cluster="lambda expression", file="OptionMapper.cs"];
m4_34 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="OptionMapper.cs"];
m4_37 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="OptionMapper.cs"];
m4_27 [label="Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>())", span="29-31", cluster="lambda expression", file="OptionMapper.cs"];
m4_9 [label="Exit lambda expression", span="21-35", cluster="lambda expression", file="OptionMapper.cs"];
m4_15 [label="Entry lambda expression", span="23-24", cluster="lambda expression", file="OptionMapper.cs"];
m4_19 [label="Entry lambda expression", span="26-34", cluster="lambda expression", file="OptionMapper.cs"];
m4_17 [label="Exit lambda expression", span="23-24", cluster="lambda expression", file="OptionMapper.cs"];
m4_21 [label="Exit lambda expression", span="26-34", cluster="lambda expression", file="OptionMapper.cs"];
m4_28 [label="Exit lambda expression", span="28-31", cluster="lambda expression", file="OptionMapper.cs"];
m4_32 [label="se.Item1", span="38-38", cluster="lambda expression", file="OptionMapper.cs"];
m4_33 [label="Exit lambda expression", span="38-38", cluster="lambda expression", file="OptionMapper.cs"];
m4_35 [label="se.Item2", span="39-39", cluster="lambda expression", file="OptionMapper.cs"];
m4_36 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="OptionMapper.cs"];
m4_38 [label="se.Value", span="39-39", cluster="lambda expression", file="OptionMapper.cs"];
m4_39 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="OptionMapper.cs"];
m4_14 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="OptionMapper.cs"];
m4_22 [label="Entry Unk.converter", span="", cluster="Unk.converter", file="OptionMapper.cs"];
m4_5 [label="Entry Unk.>", span="", cluster="Unk.>", file="OptionMapper.cs"];
m4_12 [label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116", cluster="CSharpx.Maybe.Nothing<T>()", file="OptionMapper.cs"];
m4_6 [label="Entry Unk.Succeed", span="", cluster="Unk.Succeed", file="OptionMapper.cs"];
m4_0 [label="Entry CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", span="14-14", cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="OptionMapper.cs"];
m4_1 [label="var sequencesAndErrors = propertyTuples\r\n                .Select(pt =>\r\n                    options.FirstOrDefault(\r\n                            s =>\r\n                            s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer))\r\n                               .ToMaybe()\r\n                               .Return(sequence =>\r\n                                    converter(sequence.Value, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                                    .Return(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(((OptionSpecification)pt.Specification).FromOptionSpecification())))),\r\n                                Tuple.Create(pt, Maybe.Nothing<Error>()))\r\n                )", span="20-36", cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="OptionMapper.cs"];
m4_2 [label="return Result.Succeed(\r\n                sequencesAndErrors.Select(se => se.Item1),\r\n                sequencesAndErrors.Select(se => se.Item2).OfType<Just<Error>>().Select(se => se.Value));", span="37-39", cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="OptionMapper.cs"];
m4_3 [label="Exit CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", span="14-14", cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="OptionMapper.cs"];
m4_40 [label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>", span="", file="OptionMapper.cs"];
m4_41 [label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>", span="", file="OptionMapper.cs"];
m4_42 [label="System.StringComparer", span="", file="OptionMapper.cs"];
m4_43 [label="CommandLine.Core.SpecificationProperty", span="", file="OptionMapper.cs"];
m5_16 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="OptionSpecification.cs"];
m5_12 [label="Entry System.Type.ToTargetType()", span="71-71", cluster="System.Type.ToTargetType()", file="OptionSpecification.cs"];
m5_0 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="OptionSpecification.cs"];
m5_1 [label="this.shortName = shortName", span="21-21", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="OptionSpecification.cs"];
m5_2 [label="this.longName = longName", span="22-22", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="OptionSpecification.cs"];
m5_3 [label="this.separator = separator", span="23-23", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="OptionSpecification.cs"];
m5_4 [label="this.setName = setName", span="24-24", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="OptionSpecification.cs"];
m5_5 [label="Exit CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="OptionSpecification.cs"];
m5_10 [label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124", cluster="CSharpx.Maybe.Just<T>(T)", file="OptionSpecification.cs"];
m5_11 [label="Entry T.ToMaybe<T>()", span="249-249", cluster="T.ToMaybe<T>()", file="OptionSpecification.cs"];
m5_13 [label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45", cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", file="OptionSpecification.cs"];
m5_14 [label="return new OptionSpecification(shortName, longName, required, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(),\r\n                '\0', Maybe.Nothing<object>(), helpText, metaValue, Enumerable.Empty<string>(), typeof(bool), TargetType.Switch);", span="47-48", cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", file="OptionSpecification.cs"];
m5_15 [label="Exit CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45", cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", file="OptionSpecification.cs"];
m5_9 [label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116", cluster="CSharpx.Maybe.Nothing<T>()", file="OptionSpecification.cs"];
m5_6 [label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="27-27", cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m5_7 [label="return new OptionSpecification(\r\n                attribute.ShortName,\r\n                attribute.LongName,\r\n                attribute.Required,\r\n                attribute.SetName,\r\n                attribute.Min == -1 ? Maybe.Nothing<int>() : Maybe.Just(attribute.Min),\r\n                attribute.Max == -1 ? Maybe.Nothing<int>() : Maybe.Just(attribute.Max),\r\n                attribute.Separator,\r\n                attribute.Default.ToMaybe(),\r\n                attribute.HelpText,\r\n                attribute.MetaValue,\r\n                enumValues,\r\n                conversionType,\r\n                conversionType.ToTargetType());", span="29-42", cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m5_8 [label="Exit CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="27-27", cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m5_17 [label="CommandLine.Core.OptionSpecification", span="", file="OptionSpecification.cs"];
m6_0 [label="Entry CommandLine.Infrastructure.PopsicleSetter.Set<T>(bool, ref T, T)", span="8-8", cluster="CommandLine.Infrastructure.PopsicleSetter.Set<T>(bool, ref T, T)", file="PopsicleSetter.cs"];
m6_1 [label=consumed, span="10-10", cluster="CommandLine.Infrastructure.PopsicleSetter.Set<T>(bool, ref T, T)", file="PopsicleSetter.cs"];
m6_3 [label="field = value", span="15-15", cluster="CommandLine.Infrastructure.PopsicleSetter.Set<T>(bool, ref T, T)", file="PopsicleSetter.cs"];
m6_2 [label="throw new InvalidOperationException();", span="12-12", cluster="CommandLine.Infrastructure.PopsicleSetter.Set<T>(bool, ref T, T)", file="PopsicleSetter.cs"];
m6_4 [label="Exit CommandLine.Infrastructure.PopsicleSetter.Set<T>(bool, ref T, T)", span="8-8", cluster="CommandLine.Infrastructure.PopsicleSetter.Set<T>(bool, ref T, T)", file="PopsicleSetter.cs"];
m6_5 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="PopsicleSetter.cs"];
m7_11 [label="Entry lambda expression", span="19-20", cluster="lambda expression", file="Scalar.cs"];
m7_5 [label="f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                    info.TargetType == TargetType.Scalar ? new[] { f, s } : new Token[] { }, new Token[] { })\r\n                                    : new Token[] { }", span="18-21", cluster="lambda expression", file="Scalar.cs"];
m7_4 [label="Entry lambda expression", span="17-21", cluster="lambda expression", file="Scalar.cs"];
m7_12 [label="info.TargetType == TargetType.Scalar ? new[] { f, s } : new Token[] { }", span="20-20", cluster="lambda expression", file="Scalar.cs"];
m7_6 [label="Exit lambda expression", span="17-21", cluster="lambda expression", file="Scalar.cs"];
m7_13 [label="Exit lambda expression", span="19-20", cluster="lambda expression", file="Scalar.cs"];
m7_10 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="Scalar.cs"];
m7_0 [label="Entry CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Scalar.cs"];
m7_1 [label="return from tseq in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                    info.TargetType == TargetType.Scalar ? new[] { f, s } : new Token[] { }, new Token[] { })\r\n                                    : new Token[] { })\r\n                   from t in tseq\r\n                   select t;", span="16-23", cluster="CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Scalar.cs"];
m7_2 [label="Exit CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Scalar.cs"];
m7_7 [label="Entry CommandLine.Core.Token.IsName()", span="128-128", cluster="CommandLine.Core.Token.IsName()", file="Scalar.cs"];
m7_8 [label="Entry CommandLine.Core.Token.IsValue()", span="133-133", cluster="CommandLine.Core.Token.IsValue()", file="Scalar.cs"];
m7_9 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="Scalar.cs"];
m7_3 [label="Entry Unk.Pairwise", span="", cluster="Unk.Pairwise", file="Scalar.cs"];
m7_14 [label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>", span="", file="Scalar.cs"];
m7_15 [label="CommandLine.Core.Token", span="", file="Scalar.cs"];
m7_16 [label="CommandLine.Core.Token", span="", file="Scalar.cs"];
m8_22 [label="Entry System.Collections.Generic.IEnumerable<TSource>.IndexOf<TSource>(System.Func<TSource, bool>)", span="10-10", cluster="System.Collections.Generic.IEnumerable<TSource>.IndexOf<TSource>(System.Func<TSource, bool>)", file="Sequence.cs"];
m8_24 [label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="Sequence.cs"];
m8_0 [label="Entry CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Sequence.cs"];
m8_1 [label="return from tseq in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                   info.TargetType == TargetType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.OfSequence(f, info))\r\n                                        : new Token[] { }, new Token[] { })\r\n                            : new Token[] { })\r\n                   from t in tseq\r\n                   select t;", span="16-25", cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Sequence.cs"];
m8_2 [label="Exit CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Sequence.cs"];
m8_35 [label="Entry Unk.Take", span="", cluster="Unk.Take", file="Sequence.cs"];
m8_15 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="Sequence.cs"];
m8_28 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)", file="Sequence.cs"];
m8_36 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="Sequence.cs"];
m8_5 [label="f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                   info.TargetType == TargetType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.OfSequence(f, info))\r\n                                        : new Token[] { }, new Token[] { })\r\n                            : new Token[] { }", span="18-23", cluster="lambda expression", file="Sequence.cs"];
m8_12 [label="info.TargetType == TargetType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.OfSequence(f, info))\r\n                                        : new Token[] { }", span="20-22", cluster="lambda expression", file="Sequence.cs"];
m8_4 [label="Entry lambda expression", span="17-23", cluster="lambda expression", file="Sequence.cs"];
m8_6 [label="Exit lambda expression", span="17-23", cluster="lambda expression", file="Sequence.cs"];
m8_11 [label="Entry lambda expression", span="19-22", cluster="lambda expression", file="Sequence.cs"];
m8_13 [label="Exit lambda expression", span="19-22", cluster="lambda expression", file="Sequence.cs"];
m8_26 [label="t.Equals(nameToken)", span="30-30", cluster="lambda expression", file="Sequence.cs"];
m8_30 [label="info.MaxItems.Return(\r\n                            n => tokens.Skip(nameIndex + 1).Take(n),\r\n                                 tokens.Skip(nameIndex + 1).TakeWhile(v => v.IsValue()))", span="34-36", cluster="lambda expression", file="Sequence.cs"];
m8_33 [label="tokens.Skip(nameIndex + 1).Take(n)", span="35-35", cluster="lambda expression", file="Sequence.cs"];
m8_25 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="Sequence.cs"];
m8_29 [label="Entry lambda expression", span="34-36", cluster="lambda expression", file="Sequence.cs"];
m8_39 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="Sequence.cs"];
m8_27 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="Sequence.cs"];
m8_31 [label="Exit lambda expression", span="34-36", cluster="lambda expression", file="Sequence.cs"];
m8_32 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="Sequence.cs"];
m8_34 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="Sequence.cs"];
m8_37 [label="v.IsValue()", span="36-36", cluster="lambda expression", file="Sequence.cs"];
m8_38 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="Sequence.cs"];
m8_40 [label="v.IsValue()", span="37-37", cluster="lambda expression", file="Sequence.cs"];
m8_41 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="Sequence.cs"];
m8_10 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="Sequence.cs"];
m8_23 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="Sequence.cs"];
m8_16 [label="Entry CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", span="28-28", cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", file="Sequence.cs"];
m8_17 [label="var nameIndex = tokens.IndexOf(t => t.Equals(nameToken))", span="30-30", cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", file="Sequence.cs"];
m8_19 [label="return info.NextValue.Return(\r\n                    _ => info.MaxItems.Return(\r\n                            n => tokens.Skip(nameIndex + 1).Take(n),\r\n                                 tokens.Skip(nameIndex + 1).TakeWhile(v => v.IsValue())),\r\n                    tokens.Skip(nameIndex + 1).TakeWhile(v => v.IsValue()));", span="33-37", cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", file="Sequence.cs"];
m8_18 [label="nameIndex >= 0", span="31-31", cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", file="Sequence.cs"];
m8_20 [label="return new Token[] { };", span="39-39", cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", file="Sequence.cs"];
m8_21 [label="Exit CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", span="28-28", cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", file="Sequence.cs"];
m8_7 [label="Entry CommandLine.Core.Token.IsName()", span="128-128", cluster="CommandLine.Core.Token.IsName()", file="Sequence.cs"];
m8_14 [label="Entry Unk.OfSequence", span="", cluster="Unk.OfSequence", file="Sequence.cs"];
m8_8 [label="Entry CommandLine.Core.Token.IsValue()", span="133-133", cluster="CommandLine.Core.Token.IsValue()", file="Sequence.cs"];
m8_9 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="Sequence.cs"];
m8_3 [label="Entry Unk.Pairwise", span="", cluster="Unk.Pairwise", file="Sequence.cs"];
m8_42 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span="", file="Sequence.cs"];
m8_43 [label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>", span="", file="Sequence.cs"];
m8_44 [label="CommandLine.Core.Token", span="", file="Sequence.cs"];
m8_45 [label="CommandLine.Core.Token", span="", file="Sequence.cs"];
m8_46 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span="", file="Sequence.cs"];
m8_47 [label="CommandLine.Core.TypeDescriptor", span="", file="Sequence.cs"];
m8_48 [label=nameIndex, span="", file="Sequence.cs"];
m9_8 [label="Thread.CurrentThread.CurrentCulture = newCulture", span="21-21", cluster="lambda expression", file="Specification.cs"];
m9_3 [label="Action resetter = () => Thread.CurrentThread.CurrentCulture = currentCulutre", span="23-23", cluster="CommandLine.Tests.CultureInfoExtensions.MakeCultureHandlers(System.Globalization.CultureInfo)", file="Specification.cs", color=green, community=0];
m9_16 [label="Entry Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", span="44-44", cluster="Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", file="Specification.cs"];
m9_6 [label="kernelConfiguration.Load(modules)", span="41-41", cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params Ninject.Modules.INinjectModule[])", file="Specification.cs"];
m9_0 [label="Entry CommandLine.Tests.CultureInfoExtensions.MakeCultureHandlers(System.Globalization.CultureInfo)", span="17-17", cluster="CommandLine.Tests.CultureInfoExtensions.MakeCultureHandlers(System.Globalization.CultureInfo)", file="Specification.cs"];
m9_1 [label="var currentCulutre = Thread.CurrentThread.CurrentCulture", span="19-19", cluster="CommandLine.Tests.CultureInfoExtensions.MakeCultureHandlers(System.Globalization.CultureInfo)", file="Specification.cs"];
m9_2 [label="Action changer = () => Thread.CurrentThread.CurrentCulture = newCulture", span="21-21", cluster="CommandLine.Tests.CultureInfoExtensions.MakeCultureHandlers(System.Globalization.CultureInfo)", file="Specification.cs"];
m9_12 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="Specification.cs"];
m9_4 [label="return new CultureHandlers { ChangeCulture = changer, ResetCulture = resetter };", span="25-25", cluster="CommandLine.Tests.CultureInfoExtensions.MakeCultureHandlers(System.Globalization.CultureInfo)", file="Specification.cs"];
m9_9 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="Specification.cs"];
m9_10 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="Specification.cs"];
m9_11 [label="Thread.CurrentThread.CurrentCulture = currentCulutre", span="23-23", cluster="lambda expression", file="Specification.cs", color=green, community=0];
m9_5 [label="Entry Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params Ninject.Modules.INinjectModule[])", span="39-39", cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params Ninject.Modules.INinjectModule[])", file="Specification.cs"];
m9_13 [label="System.Globalization.CultureInfo", span="", cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params System.Reflection.Assembly[])", file="Specification.cs"];
m9_14 [label=currentCulutre, span="", cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params System.Reflection.Assembly[])", file="Specification.cs"];
m9_15 [label="Exit Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params System.Reflection.Assembly[])", span="60-60", cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params System.Reflection.Assembly[])", file="Specification.cs"];
m9_7 [label="Exit Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params Ninject.Modules.INinjectModule[])", span="39-39", cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params Ninject.Modules.INinjectModule[])", file="Specification.cs"];
m10_5 [label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="21-21", cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs"];
m10_6 [label="value == null", span="23-23", cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs"];
m10_8 [label="return new SpecificationProperty(specification, property, value);", span="25-25", cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs"];
m10_7 [label="throw new ArgumentNullException(''value'');", span="23-23", cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs"];
m10_9 [label="Exit CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="21-21", cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs"];
m10_10 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationProperty.cs"];
m10_0 [label="Entry CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="14-14", cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs"];
m10_1 [label="this.property = property", span="16-16", cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs"];
m10_2 [label="this.specification = specification", span="17-17", cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs"];
m10_3 [label="this.value = value", span="18-18", cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs"];
m10_4 [label="Exit CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="14-14", cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs"];
m10_11 [label="CommandLine.Core.SpecificationProperty", span="", file="SpecificationProperty.cs"];
m12_113 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="StringExtensions.cs"];
m12_17 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ThrowsExceptionIfNoImplementationRegisteredForService()", span="35-35", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ThrowsExceptionIfNoImplementationRegisteredForService()", file="StringExtensions.cs"];
m12_18 [label="Assert.Throws<InvalidOperationException>(() => container.Get<ITestService>())", span="37-37", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ThrowsExceptionIfNoImplementationRegisteredForService()", file="StringExtensions.cs"];
m12_19 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ThrowsExceptionIfNoImplementationRegisteredForService()", span="35-35", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ThrowsExceptionIfNoImplementationRegisteredForService()", file="StringExtensions.cs"];
m12_57 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", span="89-89", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", file="StringExtensions.cs"];
m12_58 [label="container.AddTransient<ITestService, TestServiceA>()", span="91-91", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", file="StringExtensions.cs"];
m12_59 [label="var service1 = container.Get<ITestService>()", span="93-93", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", file="StringExtensions.cs"];
m12_60 [label="var service2 = container.Get<ITestService>()", span="94-94", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", file="StringExtensions.cs"];
m12_61 [label="service1.Should().NotBeSameAs(service2)", span="96-96", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", file="StringExtensions.cs"];
m12_62 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", span="89-89", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", file="StringExtensions.cs"];
m12_24 [label="Entry Ninject.Components.ComponentContainer.Get<T>()", span="127-127", cluster="Ninject.Components.ComponentContainer.Get<T>()", file="StringExtensions.cs"];
m12_20 [label="Entry Unk.>", span="", cluster="Unk.>", file="StringExtensions.cs"];
m12_64 [label="Entry Unk.NotBeSameAs", span="", cluster="Unk.NotBeSameAs", file="StringExtensions.cs"];
m12_56 [label="Entry Unk.BeSameAs", span="", cluster="Unk.BeSameAs", file="StringExtensions.cs"];
m12_13 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="StringExtensions.cs"];
m12_3 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", span="22-22", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", file="StringExtensions.cs"];
m12_4 [label="this.container = new ComponentContainer()", span="24-24", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", file="StringExtensions.cs"];
m12_5 [label="this.kernelConfigurationMock = new Mock<IKernelConfiguration>()", span="25-25", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", file="StringExtensions.cs"];
m12_6 [label="this.kernelConfigurationMock.SetupGet(c => c.Settings).Returns(new NinjectSettings())", span="26-26", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", file="StringExtensions.cs"];
m12_7 [label="this.container.KernelConfiguration = this.kernelConfigurationMock.Object", span="28-28", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", file="StringExtensions.cs"];
m12_8 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", span="22-22", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", file="StringExtensions.cs"];
m12_63 [label="Entry Ninject.Components.ComponentContainer.AddTransient<TComponent, TImplementation>()", span="70-70", cluster="Ninject.Components.ComponentContainer.AddTransient<TComponent, TImplementation>()", file="StringExtensions.cs"];
m12_10 [label="Entry Mock<IKernelConfiguration>.cstr", span="", cluster="Mock<IKernelConfiguration>.cstr", file="StringExtensions.cs"];
m12_114 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.AsksForEnumerable.AsksForEnumerable(System.Collections.Generic.IEnumerable<Ninject.Tests.Unit.ComponentContainerTests.ITestService>)", span="176-176", cluster="Ninject.Tests.Unit.ComponentContainerTests.AsksForEnumerable.AsksForEnumerable(System.Collections.Generic.IEnumerable<Ninject.Tests.Unit.ComponentContainerTests.ITestService>)", file="StringExtensions.cs"];
m12_115 [label="SecondService = services.Skip(1).First()", span="178-178", cluster="Ninject.Tests.Unit.ComponentContainerTests.AsksForEnumerable.AsksForEnumerable(System.Collections.Generic.IEnumerable<Ninject.Tests.Unit.ComponentContainerTests.ITestService>)", file="StringExtensions.cs"];
m12_116 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.AsksForEnumerable.AsksForEnumerable(System.Collections.Generic.IEnumerable<Ninject.Tests.Unit.ComponentContainerTests.ITestService>)", span="176-176", cluster="Ninject.Tests.Unit.ComponentContainerTests.AsksForEnumerable.AsksForEnumerable(System.Collections.Generic.IEnumerable<Ninject.Tests.Unit.ComponentContainerTests.ITestService>)", file="StringExtensions.cs"];
m12_100 [label="Entry lambda expression", span="152-152", cluster="lambda expression", file="StringExtensions.cs"];
m12_14 [label="Entry lambda expression", span="26-26", cluster="lambda expression", file="StringExtensions.cs"];
m12_15 [label="c.Settings", span="26-26", cluster="lambda expression", file="StringExtensions.cs"];
m12_16 [label="Exit lambda expression", span="26-26", cluster="lambda expression", file="StringExtensions.cs"];
m12_21 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="StringExtensions.cs"];
m12_22 [label="container.Get<ITestService>()", span="37-37", cluster="lambda expression", file="StringExtensions.cs"];
m12_23 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="StringExtensions.cs"];
m12_101 [label="container.Get<ITestService>()", span="152-152", cluster="lambda expression", file="StringExtensions.cs"];
m12_102 [label="Exit lambda expression", span="152-152", cluster="lambda expression", file="StringExtensions.cs"];
m12_118 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="StringExtensions.cs"];
m12_117 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="StringExtensions.cs"];
m12_99 [label="Entry Ninject.Components.ComponentContainer.RemoveAll<T>()", span="82-82", cluster="Ninject.Components.ComponentContainer.RemoveAll<T>()", file="StringExtensions.cs"];
m12_32 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="StringExtensions.cs"];
m12_0 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.ComponentContainerContext()", span="17-17", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.ComponentContainerContext()", file="StringExtensions.cs"];
m12_1 [label="this.SetUp()", span="19-19", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.ComponentContainerContext()", file="StringExtensions.cs"];
m12_2 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.ComponentContainerContext()", span="17-17", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.ComponentContainerContext()", file="StringExtensions.cs"];
m12_74 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="StringExtensions.cs"];
m12_31 [label="Entry Ninject.Components.ComponentContainer.Add<TComponent, TImplementation>()", span="58-58", cluster="Ninject.Components.ComponentContainer.Add<TComponent, TImplementation>()", file="StringExtensions.cs"];
m12_75 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", span="115-115", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="StringExtensions.cs"];
m12_76 [label="container.Add<ITestService, TestServiceA>()", span="117-117", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="StringExtensions.cs"];
m12_77 [label="container.Add<ITestService, TestServiceB>()", span="118-118", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="StringExtensions.cs"];
m12_78 [label="var services = container.GetAll<ITestService>().ToList()", span="119-119", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="StringExtensions.cs"];
m12_79 [label="services.Should().NotBeNull()", span="121-121", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="StringExtensions.cs"];
m12_80 [label="services.Count.Should().Be(2)", span="122-122", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="StringExtensions.cs"];
m12_81 [label="services[0].Should().BeOfType<TestServiceA>()", span="123-123", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="StringExtensions.cs"];
m12_82 [label="services[1].Should().BeOfType<TestServiceB>()", span="124-124", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="StringExtensions.cs"];
m12_83 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", span="115-115", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="StringExtensions.cs"];
m12_103 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", span="156-156", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="StringExtensions.cs"];
m12_104 [label="container.Add<ITestService, TestServiceA>()", span="158-158", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="StringExtensions.cs"];
m12_105 [label="container.Add<ITestService, TestServiceB>()", span="159-159", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="StringExtensions.cs"];
m12_106 [label="var services = container.GetAll<ITestService>().ToList()", span="161-161", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="StringExtensions.cs"];
m12_107 [label="services.Should().NotBeNull()", span="162-162", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="StringExtensions.cs"];
m12_108 [label="services.Count.Should().Be(2)", span="163-163", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="StringExtensions.cs"];
m12_110 [label="services[0].IsDisposed.Should().BeTrue()", span="167-167", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="StringExtensions.cs"];
m12_111 [label="services[1].IsDisposed.Should().BeTrue()", span="168-168", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="StringExtensions.cs"];
m12_109 [label="container.RemoveAll<ITestService>()", span="165-165", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="StringExtensions.cs"];
m12_112 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", span="156-156", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="StringExtensions.cs"];
m12_41 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", span="64-64", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="StringExtensions.cs"];
m12_42 [label="container.Add<ITestService, TestServiceA>()", span="66-66", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="StringExtensions.cs"];
m12_43 [label="container.Add<ITestService, TestServiceB>()", span="67-67", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="StringExtensions.cs"];
m12_44 [label="container.Add<IAsksForEnumerable, AsksForEnumerable>()", span="68-68", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="StringExtensions.cs"];
m12_45 [label="var asks = container.Get<IAsksForEnumerable>()", span="70-70", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="StringExtensions.cs"];
m12_46 [label="asks.Should().NotBeNull()", span="72-72", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="StringExtensions.cs"];
m12_47 [label="asks.SecondService.Should().NotBeNull()", span="73-73", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="StringExtensions.cs"];
m12_48 [label="asks.SecondService.Should().BeOfType<TestServiceB>()", span="74-74", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="StringExtensions.cs"];
m12_49 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", span="64-64", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="StringExtensions.cs"];
m12_50 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", span="78-78", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", file="StringExtensions.cs"];
m12_51 [label="container.Add<ITestService, TestServiceA>()", span="80-80", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", file="StringExtensions.cs"];
m12_52 [label="var service1 = container.Get<ITestService>()", span="82-82", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", file="StringExtensions.cs"];
m12_53 [label="var service2 = container.Get<ITestService>()", span="83-83", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", file="StringExtensions.cs"];
m12_54 [label="service1.Should().BeSameAs(service2)", span="85-85", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", file="StringExtensions.cs"];
m12_55 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", span="78-78", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", file="StringExtensions.cs"];
m12_92 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", span="144-144", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", file="StringExtensions.cs"];
m12_93 [label="container.Add<ITestService, TestServiceA>()", span="146-146", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", file="StringExtensions.cs"];
m12_94 [label="var service1 = container.Get<ITestService>()", span="148-148", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", file="StringExtensions.cs"];
m12_95 [label="service1.Should().NotBeNull()", span="149-149", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", file="StringExtensions.cs"];
m12_96 [label="container.RemoveAll<ITestService>()", span="151-151", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", file="StringExtensions.cs"];
m12_97 [label="Assert.Throws<InvalidOperationException>(() => container.Get<ITestService>())", span="152-152", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", file="StringExtensions.cs"];
m12_98 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", span="144-144", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", file="StringExtensions.cs"];
m12_25 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", span="41-41", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", file="StringExtensions.cs"];
m12_26 [label="container.Add<ITestService, TestServiceA>()", span="43-43", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", file="StringExtensions.cs"];
m12_27 [label="var service = container.Get<ITestService>()", span="45-45", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", file="StringExtensions.cs"];
m12_28 [label="service.Should().NotBeNull()", span="47-47", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", file="StringExtensions.cs"];
m12_29 [label="service.Should().BeOfType<TestServiceA>()", span="48-48", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", file="StringExtensions.cs"];
m12_30 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", span="41-41", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", file="StringExtensions.cs"];
m12_72 [label="Entry Ninject.Components.ComponentContainer.GetAll<T>()", span="138-138", cluster="Ninject.Components.ComponentContainer.GetAll<T>()", file="StringExtensions.cs"];
m12_9 [label="Entry Ninject.Components.ComponentContainer.ComponentContainer()", span="25-25", cluster="Ninject.Components.ComponentContainer.ComponentContainer()", file="StringExtensions.cs"];
m12_12 [label="Entry Ninject.NinjectSettings.NinjectSettings()", span="29-29", cluster="Ninject.NinjectSettings.NinjectSettings()", file="StringExtensions.cs"];
m12_84 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", span="128-128", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="StringExtensions.cs"];
m12_85 [label="container.Add<ITestService, TestServiceA>()", span="130-130", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="StringExtensions.cs"];
m12_86 [label="var service1 = container.Get<ITestService>()", span="132-132", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="StringExtensions.cs"];
m12_87 [label="var service2 = container.Get<ITestService>()", span="133-133", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="StringExtensions.cs"];
m12_88 [label="service1.Should().NotBeNull()", span="135-135", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="StringExtensions.cs"];
m12_90 [label="service1.Should().BeSameAs(service2)", span="137-137", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="StringExtensions.cs"];
m12_89 [label="service2.Should().NotBeNull()", span="136-136", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="StringExtensions.cs"];
m12_91 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", span="128-128", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="StringExtensions.cs"];
m12_11 [label="Entry Unk.SetupGet", span="", cluster="Unk.SetupGet", file="StringExtensions.cs"];
m12_34 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", span="52-52", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", file="StringExtensions.cs"];
m12_35 [label="container.Add<ITestService, TestServiceA>()", span="54-54", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", file="StringExtensions.cs"];
m12_36 [label="container.Add<ITestService, TestServiceB>()", span="55-55", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", file="StringExtensions.cs"];
m12_37 [label="var service = container.Get<ITestService>()", span="57-57", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", file="StringExtensions.cs"];
m12_38 [label="service.Should().NotBeNull()", span="59-59", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", file="StringExtensions.cs"];
m12_39 [label="service.Should().BeOfType<TestServiceA>()", span="60-60", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", file="StringExtensions.cs"];
m12_40 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", span="52-52", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", file="StringExtensions.cs"];
m12_73 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="StringExtensions.cs"];
m12_33 [label="Entry Unk.NotBeNull", span="", cluster="Unk.NotBeNull", file="StringExtensions.cs"];
m12_65 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", span="103-103", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", file="StringExtensions.cs"];
m12_66 [label="container.Add<ITestService, TestServiceA>()", span="105-105", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", file="StringExtensions.cs"];
m12_67 [label="var services = container.GetAll<ITestService>().ToList()", span="107-107", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", file="StringExtensions.cs"];
m12_68 [label="services.Should().NotBeNull()", span="109-109", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", file="StringExtensions.cs"];
m12_69 [label="services.Count.Should().Be(1)", span="110-110", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", file="StringExtensions.cs"];
m12_70 [label="services[0].Should().BeOfType<TestServiceA>()", span="111-111", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", file="StringExtensions.cs"];
m12_71 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", span="103-103", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", file="StringExtensions.cs"];
m12_119 [label="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext", span="", file="StringExtensions.cs"];
m12_120 [label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled", span="", file="StringExtensions.cs"];
m12_121 [label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer", span="", file="StringExtensions.cs"];
m12_122 [label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled", span="", file="StringExtensions.cs"];
m12_123 [label="Ninject.Tests.Unit.ComponentContainerTests.AsksForEnumerable", span="", file="StringExtensions.cs"];
m13_0 [label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11", cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Switch.cs"];
m13_1 [label="return from t in tokens\r\n                   where typeLookup(t.Text).Return(info => t.IsName() && info.TargetType == TargetType.Switch, false)\r\n                   select t;", span="15-17", cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Switch.cs"];
m13_2 [label="Exit CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11", cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Switch.cs"];
m13_5 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="Switch.cs"];
m13_6 [label="t.IsName() && info.TargetType == TargetType.Switch", span="16-16", cluster="lambda expression", file="Switch.cs"];
m13_7 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="Switch.cs"];
m13_4 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="Switch.cs"];
m13_8 [label="Entry CommandLine.Core.Token.IsName()", span="128-128", cluster="CommandLine.Core.Token.IsName()", file="Switch.cs"];
m13_3 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="Switch.cs"];
m13_9 [label=t, span="", file="Switch.cs"];
m14_113 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="Token.cs"];
m14_17 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ThrowsExceptionIfNoImplementationRegisteredForService()", span="35-35", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ThrowsExceptionIfNoImplementationRegisteredForService()", file="Token.cs"];
m14_18 [label="Assert.Throws<InvalidOperationException>(() => container.Get<ITestService>())", span="37-37", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ThrowsExceptionIfNoImplementationRegisteredForService()", file="Token.cs"];
m14_19 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ThrowsExceptionIfNoImplementationRegisteredForService()", span="35-35", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ThrowsExceptionIfNoImplementationRegisteredForService()", file="Token.cs"];
m14_57 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", span="89-89", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", file="Token.cs"];
m14_58 [label="container.AddTransient<ITestService, TestServiceA>()", span="91-91", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", file="Token.cs"];
m14_59 [label="var service1 = container.Get<ITestService>()", span="93-93", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", file="Token.cs"];
m14_60 [label="var service2 = container.Get<ITestService>()", span="94-94", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", file="Token.cs"];
m14_61 [label="service1.Should().NotBeSameAs(service2)", span="96-96", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", file="Token.cs"];
m14_62 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", span="89-89", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.DifferentInstanceAreReturnedForTransients()", file="Token.cs"];
m14_24 [label="Entry Ninject.Components.ComponentContainer.Get<T>()", span="127-127", cluster="Ninject.Components.ComponentContainer.Get<T>()", file="Token.cs"];
m14_20 [label="Entry Unk.>", span="", cluster="Unk.>", file="Token.cs"];
m14_64 [label="Entry Unk.NotBeSameAs", span="", cluster="Unk.NotBeSameAs", file="Token.cs"];
m14_56 [label="Entry Unk.BeSameAs", span="", cluster="Unk.BeSameAs", file="Token.cs"];
m14_13 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="Token.cs"];
m14_3 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", span="22-22", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", file="Token.cs"];
m14_4 [label="this.container = new ComponentContainer()", span="24-24", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", file="Token.cs"];
m14_5 [label="this.kernelConfigurationMock = new Mock<IKernelConfiguration>()", span="25-25", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", file="Token.cs"];
m14_6 [label="this.kernelConfigurationMock.SetupGet(c => c.Settings).Returns(new NinjectSettings())", span="26-26", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", file="Token.cs"];
m14_7 [label="this.container.KernelConfiguration = this.kernelConfigurationMock.Object", span="28-28", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", file="Token.cs"];
m14_8 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", span="22-22", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.SetUp()", file="Token.cs"];
m14_63 [label="Entry Ninject.Components.ComponentContainer.AddTransient<TComponent, TImplementation>()", span="70-70", cluster="Ninject.Components.ComponentContainer.AddTransient<TComponent, TImplementation>()", file="Token.cs"];
m14_10 [label="Entry Mock<IKernelConfiguration>.cstr", span="", cluster="Mock<IKernelConfiguration>.cstr", file="Token.cs"];
m14_114 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.AsksForEnumerable.AsksForEnumerable(System.Collections.Generic.IEnumerable<Ninject.Tests.Unit.ComponentContainerTests.ITestService>)", span="176-176", cluster="Ninject.Tests.Unit.ComponentContainerTests.AsksForEnumerable.AsksForEnumerable(System.Collections.Generic.IEnumerable<Ninject.Tests.Unit.ComponentContainerTests.ITestService>)", file="Token.cs"];
m14_115 [label="SecondService = services.Skip(1).First()", span="178-178", cluster="Ninject.Tests.Unit.ComponentContainerTests.AsksForEnumerable.AsksForEnumerable(System.Collections.Generic.IEnumerable<Ninject.Tests.Unit.ComponentContainerTests.ITestService>)", file="Token.cs"];
m14_116 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.AsksForEnumerable.AsksForEnumerable(System.Collections.Generic.IEnumerable<Ninject.Tests.Unit.ComponentContainerTests.ITestService>)", span="176-176", cluster="Ninject.Tests.Unit.ComponentContainerTests.AsksForEnumerable.AsksForEnumerable(System.Collections.Generic.IEnumerable<Ninject.Tests.Unit.ComponentContainerTests.ITestService>)", file="Token.cs"];
m14_100 [label="Entry lambda expression", span="152-152", cluster="lambda expression", file="Token.cs"];
m14_14 [label="Entry lambda expression", span="26-26", cluster="lambda expression", file="Token.cs"];
m14_15 [label="c.Settings", span="26-26", cluster="lambda expression", file="Token.cs"];
m14_16 [label="Exit lambda expression", span="26-26", cluster="lambda expression", file="Token.cs"];
m14_21 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="Token.cs"];
m14_22 [label="container.Get<ITestService>()", span="37-37", cluster="lambda expression", file="Token.cs"];
m14_23 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="Token.cs"];
m14_101 [label="container.Get<ITestService>()", span="152-152", cluster="lambda expression", file="Token.cs"];
m14_102 [label="Exit lambda expression", span="152-152", cluster="lambda expression", file="Token.cs"];
m14_118 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="Token.cs"];
m14_117 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="Token.cs"];
m14_99 [label="Entry Ninject.Components.ComponentContainer.RemoveAll<T>()", span="82-82", cluster="Ninject.Components.ComponentContainer.RemoveAll<T>()", file="Token.cs"];
m14_32 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="Token.cs"];
m14_0 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.ComponentContainerContext()", span="17-17", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.ComponentContainerContext()", file="Token.cs"];
m14_1 [label="this.SetUp()", span="19-19", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.ComponentContainerContext()", file="Token.cs"];
m14_2 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.ComponentContainerContext()", span="17-17", cluster="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext.ComponentContainerContext()", file="Token.cs"];
m14_74 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="Token.cs"];
m14_31 [label="Entry Ninject.Components.ComponentContainer.Add<TComponent, TImplementation>()", span="58-58", cluster="Ninject.Components.ComponentContainer.Add<TComponent, TImplementation>()", file="Token.cs"];
m14_75 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", span="115-115", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="Token.cs"];
m14_76 [label="container.Add<ITestService, TestServiceA>()", span="117-117", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="Token.cs"];
m14_77 [label="container.Add<ITestService, TestServiceB>()", span="118-118", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="Token.cs"];
m14_78 [label="var services = container.GetAll<ITestService>().ToList()", span="119-119", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="Token.cs"];
m14_79 [label="services.Should().NotBeNull()", span="121-121", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="Token.cs"];
m14_80 [label="services.Count.Should().Be(2)", span="122-122", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="Token.cs"];
m14_81 [label="services[0].Should().BeOfType<TestServiceA>()", span="123-123", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="Token.cs"];
m14_82 [label="services[1].Should().BeOfType<TestServiceB>()", span="124-124", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="Token.cs"];
m14_83 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", span="115-115", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsInstanceOfEachRegisteredImplementation()", file="Token.cs"];
m14_103 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", span="156-156", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="Token.cs"];
m14_104 [label="container.Add<ITestService, TestServiceA>()", span="158-158", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="Token.cs"];
m14_105 [label="container.Add<ITestService, TestServiceB>()", span="159-159", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="Token.cs"];
m14_106 [label="var services = container.GetAll<ITestService>().ToList()", span="161-161", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="Token.cs"];
m14_107 [label="services.Should().NotBeNull()", span="162-162", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="Token.cs"];
m14_108 [label="services.Count.Should().Be(2)", span="163-163", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="Token.cs"];
m14_110 [label="services[0].IsDisposed.Should().BeTrue()", span="167-167", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="Token.cs"];
m14_111 [label="services[1].IsDisposed.Should().BeTrue()", span="168-168", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="Token.cs"];
m14_109 [label="container.RemoveAll<ITestService>()", span="165-165", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="Token.cs"];
m14_112 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", span="156-156", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.DisposesOfAllInstances()", file="Token.cs"];
m14_41 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", span="64-64", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="Token.cs"];
m14_42 [label="container.Add<ITestService, TestServiceA>()", span="66-66", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="Token.cs"];
m14_43 [label="container.Add<ITestService, TestServiceB>()", span="67-67", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="Token.cs"];
m14_44 [label="container.Add<IAsksForEnumerable, AsksForEnumerable>()", span="68-68", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="Token.cs"];
m14_45 [label="var asks = container.Get<IAsksForEnumerable>()", span="70-70", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="Token.cs"];
m14_46 [label="asks.Should().NotBeNull()", span="72-72", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="Token.cs"];
m14_47 [label="asks.SecondService.Should().NotBeNull()", span="73-73", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="Token.cs"];
m14_48 [label="asks.SecondService.Should().BeOfType<TestServiceB>()", span="74-74", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="Token.cs"];
m14_49 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", span="64-64", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.InjectsEnumeratorOfServicesWhenConstructorArgumentIsIEnumerable()", file="Token.cs"];
m14_50 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", span="78-78", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", file="Token.cs"];
m14_51 [label="container.Add<ITestService, TestServiceA>()", span="80-80", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", file="Token.cs"];
m14_52 [label="var service1 = container.Get<ITestService>()", span="82-82", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", file="Token.cs"];
m14_53 [label="var service2 = container.Get<ITestService>()", span="83-83", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", file="Token.cs"];
m14_54 [label="service1.Should().BeSameAs(service2)", span="85-85", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", file="Token.cs"];
m14_55 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", span="78-78", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.SameInstanceIsReturnedByDefault()", file="Token.cs"];
m14_92 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", span="144-144", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", file="Token.cs"];
m14_93 [label="container.Add<ITestService, TestServiceA>()", span="146-146", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", file="Token.cs"];
m14_94 [label="var service1 = container.Get<ITestService>()", span="148-148", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", file="Token.cs"];
m14_95 [label="service1.Should().NotBeNull()", span="149-149", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", file="Token.cs"];
m14_96 [label="container.RemoveAll<ITestService>()", span="151-151", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", file="Token.cs"];
m14_97 [label="Assert.Throws<InvalidOperationException>(() => container.Get<ITestService>())", span="152-152", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", file="Token.cs"];
m14_98 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", span="144-144", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled.RemovesAllMappings()", file="Token.cs"];
m14_25 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", span="41-41", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", file="Token.cs"];
m14_26 [label="container.Add<ITestService, TestServiceA>()", span="43-43", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", file="Token.cs"];
m14_27 [label="var service = container.Get<ITestService>()", span="45-45", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", file="Token.cs"];
m14_28 [label="service.Should().NotBeNull()", span="47-47", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", file="Token.cs"];
m14_29 [label="service.Should().BeOfType<TestServiceA>()", span="48-48", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", file="Token.cs"];
m14_30 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", span="41-41", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceWhenOneImplementationIsRegistered()", file="Token.cs"];
m14_72 [label="Entry Ninject.Components.ComponentContainer.GetAll<T>()", span="138-138", cluster="Ninject.Components.ComponentContainer.GetAll<T>()", file="Token.cs"];
m14_9 [label="Entry Ninject.Components.ComponentContainer.ComponentContainer()", span="25-25", cluster="Ninject.Components.ComponentContainer.ComponentContainer()", file="Token.cs"];
m14_12 [label="Entry Ninject.NinjectSettings.NinjectSettings()", span="29-29", cluster="Ninject.NinjectSettings.NinjectSettings()", file="Token.cs"];
m14_84 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", span="128-128", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="Token.cs"];
m14_85 [label="container.Add<ITestService, TestServiceA>()", span="130-130", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="Token.cs"];
m14_86 [label="var service1 = container.Get<ITestService>()", span="132-132", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="Token.cs"];
m14_87 [label="var service2 = container.Get<ITestService>()", span="133-133", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="Token.cs"];
m14_88 [label="service1.Should().NotBeNull()", span="135-135", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="Token.cs"];
m14_90 [label="service1.Should().BeSameAs(service2)", span="137-137", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="Token.cs"];
m14_89 [label="service2.Should().NotBeNull()", span="136-136", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="Token.cs"];
m14_91 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", span="128-128", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSameInstanceForTwoCallsForSameService()", file="Token.cs"];
m14_11 [label="Entry Unk.SetupGet", span="", cluster="Unk.SetupGet", file="Token.cs"];
m14_34 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", span="52-52", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", file="Token.cs"];
m14_35 [label="container.Add<ITestService, TestServiceA>()", span="54-54", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", file="Token.cs"];
m14_36 [label="container.Add<ITestService, TestServiceB>()", span="55-55", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", file="Token.cs"];
m14_37 [label="var service = container.Get<ITestService>()", span="57-57", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", file="Token.cs"];
m14_38 [label="service.Should().NotBeNull()", span="59-59", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", file="Token.cs"];
m14_39 [label="service.Should().BeOfType<TestServiceA>()", span="60-60", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", file="Token.cs"];
m14_40 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", span="52-52", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled.ReturnsInstanceOfFirstRegisteredImplementation()", file="Token.cs"];
m14_73 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="Token.cs"];
m14_33 [label="Entry Unk.NotBeNull", span="", cluster="Unk.NotBeNull", file="Token.cs"];
m14_65 [label="Entry Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", span="103-103", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", file="Token.cs"];
m14_66 [label="container.Add<ITestService, TestServiceA>()", span="105-105", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", file="Token.cs"];
m14_67 [label="var services = container.GetAll<ITestService>().ToList()", span="107-107", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", file="Token.cs"];
m14_68 [label="services.Should().NotBeNull()", span="109-109", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", file="Token.cs"];
m14_69 [label="services.Count.Should().Be(1)", span="110-110", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", file="Token.cs"];
m14_70 [label="services[0].Should().BeOfType<TestServiceA>()", span="111-111", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", file="Token.cs"];
m14_71 [label="Exit Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", span="103-103", cluster="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer.ReturnsSeriesWithSingleItem()", file="Token.cs"];
m14_119 [label="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext", span="", file="Token.cs"];
m14_120 [label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled", span="", file="Token.cs"];
m14_121 [label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer", span="", file="Token.cs"];
m14_122 [label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled", span="", file="Token.cs"];
m14_123 [label="Ninject.Tests.Unit.ComponentContainerTests.AsksForEnumerable", span="", file="Token.cs"];
m15_3 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", span="20-20", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="Tokenizer.cs"];
m15_7 [label="var errors = new List<Error>()", span="25-25", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="Tokenizer.cs"];
m15_9 [label="var tokens = (from arg in arguments\r\n                          from token in !arg.StartsWith(''-'', StringComparison.Ordinal)\r\n                               ? new[] { Token.Value(arg) }\r\n                               : arg.StartsWith(''--'', StringComparison.Ordinal)\r\n                                     ? TokenizeLongName(arg, onError)\r\n                                     : TokenizeShortName(arg, nameLookup)\r\n                          select token)\r\n                            .Memorize()", span="28-35", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="Tokenizer.cs"];
m15_10 [label="var normalized = normalize(tokens)", span="37-37", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="Tokenizer.cs"];
m15_11 [label="var unkTokens = (from t in normalized where t.IsName() && nameLookup(t.Text) == NameLookupResult.NoOptionFound select t).Memorize()", span="39-39", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="Tokenizer.cs"];
m15_8 [label="Action<Error> onError = errors.Add", span="26-26", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="Tokenizer.cs"];
m15_12 [label="return Result.Succeed(normalized.Where(x => !unkTokens.Contains(x)), errors.Concat(from t in unkTokens select new UnknownOptionError(t.Text)));", span="41-41", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="Tokenizer.cs"];
m15_13 [label="Exit CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", span="20-20", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="Tokenizer.cs"];
m15_168 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="Tokenizer.cs"];
m15_31 [label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="44-44", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Tokenizer.cs"];
m15_32 [label="arguments.Any(arg => arg.EqualsOrdinal(''--''))", span="48-48", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Tokenizer.cs"];
m15_33 [label="var tokenizerResult = tokenizer(arguments.TakeWhile(arg => !arg.EqualsOrdinal(''--'')))", span="50-50", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Tokenizer.cs"];
m15_34 [label="var values = arguments.SkipWhile(arg => !arg.EqualsOrdinal(''--'')).Skip(1).Select(Token.Value)", span="51-51", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Tokenizer.cs"];
m15_36 [label="return tokenizer(arguments);", span="54-54", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Tokenizer.cs"];
m15_35 [label="return tokenizerResult.Map(tokens => tokens.Concat(values));", span="52-52", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Tokenizer.cs"];
m15_37 [label="Exit CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="44-44", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Tokenizer.cs"];
m15_86 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="Tokenizer.cs"];
m15_97 [label="Entry CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", span="78-78", cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="Tokenizer.cs"];
m15_98 [label="var indexes =\r\n                from i in\r\n                    tokens.Select(\r\n                        (t, i) =>\r\n                        {\r\n                            var prev = tokens.ElementAtOrDefault(i - 1).ToMaybe();\r\n                            return t.IsValue() && ((Value)t).ExplicitlyAssigned\r\n                                   && prev.Return(p => p.IsName() && !nameLookup(p.Text), false)\r\n                                ? Maybe.Just(i)\r\n                                : Maybe.Nothing<int>();\r\n                        }).Where(i => i.IsJust())\r\n                select i.FromJust()", span="81-92", cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="Tokenizer.cs"];
m15_99 [label="var toExclude =\r\n                from t in\r\n                    tokens.Select((t, i) => indexes.Contains(i) ? Maybe.Just(t) : Maybe.Nothing<Token>())\r\n                        .Where(t => t.IsJust())\r\n                select t.FromJust()", span="94-98", cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="Tokenizer.cs"];
m15_100 [label="var normalized = tokens.Except(toExclude)", span="100-100", cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="Tokenizer.cs"];
m15_101 [label="return normalized;", span="102-102", cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="Tokenizer.cs"];
m15_102 [label="Exit CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", span="78-78", cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="Tokenizer.cs"];
m15_118 [label="Entry Unk.nameLookup", span="", cluster="Unk.nameLookup", file="Tokenizer.cs"];
m15_18 [label="Entry CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", span="105-105", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_129 [label="value.Length > 1 || value[0] == '-' || value[1] != '-'", span="109-109", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_132 [label="yield return Token.Value(value);", span="115-115", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_133 [label="yield break;", span="116-116", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_135 [label="yield return Token.Name(text);", span="121-121", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_136 [label="yield break;", span="122-122", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_143 [label="yield return Token.Name(n);", span="133-133", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_146 [label="yield return Token.Value(text.Substring(i));", span="140-140", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_130 [label="var text = value.Substring(1)", span="111-111", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_134 [label="value.Length == 2", span="119-119", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_140 [label="var r = nameLookup(n)", span="129-129", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_131 [label="char.IsDigit(text[0])", span="113-113", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_138 [label=text, span="126-126", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_145 [label="i < text.Length", span="138-138", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_137 [label="var i = 0", span="125-125", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_141 [label="i > 0 && r == NameLookupResult.NoOptionFound", span="131-131", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_142 [label="i++", span="132-132", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_139 [label="var n = new string(c, 1)", span="128-128", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_144 [label="r == NameLookupResult.OtherOptionFound", span="135-135", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_147 [label="Exit CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", span="105-105", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_166 [label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="221-221", cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="Tokenizer.cs"];
m15_57 [label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="57-57", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs"];
m15_58 [label="var tokens = tokenizerResult.SucceededWith()", span="61-61", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs"];
m15_59 [label="var replaces = tokens.Select((t, i) =>\r\n                optionSequenceWithSeparatorLookup(t.Text)\r\n                    .Return(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))).SkipWhile(x => x.Item1 < 0)", span="63-66", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs"];
m15_62 [label="return Result.Succeed(flattened, tokenizerResult.SuccessfulMessages());", span="75-75", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs"];
m15_60 [label="var exploded = tokens.Select((t, i) =>\r\n                        replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .Return(r => t.Text.Split(r.Item2).Select(Token.Value),\r\n                                Enumerable.Empty<Token>().Concat(new[] { t })))", span="68-71", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs"];
m15_61 [label="var flattened = exploded.SelectMany(x => x)", span="73-73", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs"];
m15_63 [label="Exit CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="57-57", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs"];
m15_15 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="Tokenizer.cs"];
m15_65 [label="Entry Unk.SkipWhile", span="", cluster="Unk.SkipWhile", file="Tokenizer.cs"];
m15_150 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="Tokenizer.cs"];
m15_167 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="Tokenizer.cs"];
m15_21 [label="Entry CommandLine.Core.Token.IsName()", span="128-128", cluster="CommandLine.Core.Token.IsName()", file="Tokenizer.cs"];
m15_38 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="Tokenizer.cs"];
m15_16 [label="Entry CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="Tokenizer.cs"];
m15_117 [label="Entry Unk.IsName", span="", cluster="Unk.IsName", file="Tokenizer.cs"];
m15_22 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="Tokenizer.cs"];
m15_23 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="Tokenizer.cs"];
m15_76 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="Tokenizer.cs"];
m15_85 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="Tokenizer.cs"];
m15_151 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="Tokenizer.cs"];
m15_109 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAtOrDefault<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAtOrDefault<TSource>(int)", file="Tokenizer.cs"];
m15_30 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="Tokenizer.cs"];
m15_84 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="Tokenizer.cs"];
m15_110 [label="Entry T.ToMaybe<T>()", span="249-249", cluster="T.ToMaybe<T>()", file="Tokenizer.cs"];
m15_71 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="Tokenizer.cs"];
m15_112 [label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124", cluster="CSharpx.Maybe.Just<T>(T)", file="Tokenizer.cs"];
m15_114 [label="Entry lambda expression", span="88-88", cluster="lambda expression", file="Tokenizer.cs"];
m15_4 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="Tokenizer.cs"];
m15_5 [label=tokens, span="17-17", cluster="lambda expression", file="Tokenizer.cs"];
m15_6 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="Tokenizer.cs"];
m15_28 [label="!unkTokens.Contains(x)", span="41-41", cluster="lambda expression", file="Tokenizer.cs"];
m15_27 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="Tokenizer.cs"];
m15_29 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="Tokenizer.cs"];
m15_44 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="Tokenizer.cs"];
m15_48 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="Tokenizer.cs"];
m15_51 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="Tokenizer.cs"];
m15_55 [label="tokens.Concat(values)", span="52-52", cluster="lambda expression", file="Tokenizer.cs"];
m15_54 [label="Entry lambda expression", span="52-52", cluster="lambda expression", file="Tokenizer.cs"];
m15_45 [label="arg.EqualsOrdinal(''--'')", span="48-48", cluster="lambda expression", file="Tokenizer.cs"];
m15_46 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="Tokenizer.cs"];
m15_49 [label="!arg.EqualsOrdinal(''--'')", span="50-50", cluster="lambda expression", file="Tokenizer.cs"];
m15_50 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="Tokenizer.cs"];
m15_52 [label="!arg.EqualsOrdinal(''--'')", span="51-51", cluster="lambda expression", file="Tokenizer.cs"];
m15_53 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="Tokenizer.cs"];
m15_56 [label="Exit lambda expression", span="52-52", cluster="lambda expression", file="Tokenizer.cs"];
m15_69 [label="optionSequenceWithSeparatorLookup(t.Text)\r\n                    .Return(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))", span="64-66", cluster="lambda expression", file="Tokenizer.cs"];
m15_68 [label="Entry lambda expression", span="63-66", cluster="lambda expression", file="Tokenizer.cs"];
m15_77 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="Tokenizer.cs"];
m15_81 [label="replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .Return(r => t.Text.Split(r.Item2).Select(Token.Value),\r\n                                Enumerable.Empty<Token>().Concat(new[] { t }))", span="69-71", cluster="lambda expression", file="Tokenizer.cs"];
m15_80 [label="Entry lambda expression", span="68-71", cluster="lambda expression", file="Tokenizer.cs"];
m15_94 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="Tokenizer.cs"];
m15_74 [label="Tuple.Create(i + 1, sep)", span="65-65", cluster="lambda expression", file="Tokenizer.cs"];
m15_70 [label="Exit lambda expression", span="63-66", cluster="lambda expression", file="Tokenizer.cs"];
m15_73 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="Tokenizer.cs"];
m15_75 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="Tokenizer.cs"];
m15_78 [label="x.Item1 < 0", span="66-66", cluster="lambda expression", file="Tokenizer.cs"];
m15_79 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="Tokenizer.cs"];
m15_88 [label="x.Item1 == i", span="69-69", cluster="lambda expression", file="Tokenizer.cs"];
m15_91 [label="t.Text.Split(r.Item2).Select(Token.Value)", span="70-70", cluster="lambda expression", file="Tokenizer.cs"];
m15_82 [label="Exit lambda expression", span="68-71", cluster="lambda expression", file="Tokenizer.cs"];
m15_87 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="Tokenizer.cs"];
m15_90 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="Tokenizer.cs"];
m15_89 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="Tokenizer.cs"];
m15_92 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="Tokenizer.cs"];
m15_95 [label=x, span="73-73", cluster="lambda expression", file="Tokenizer.cs"];
m15_96 [label="Exit lambda expression", span="73-73", cluster="lambda expression", file="Tokenizer.cs"];
m15_106 [label="var prev = tokens.ElementAtOrDefault(i - 1).ToMaybe()", span="86-86", cluster="lambda expression", file="Tokenizer.cs"];
m15_107 [label="return t.IsValue() && ((Value)t).ExplicitlyAssigned\r\n                                   && prev.Return(p => p.IsName() && !nameLookup(p.Text), false)\r\n                                ? Maybe.Just(i)\r\n                                : Maybe.Nothing<int>();", span="87-90", cluster="lambda expression", file="Tokenizer.cs"];
m15_115 [label="p.IsName() && !nameLookup(p.Text)", span="88-88", cluster="lambda expression", file="Tokenizer.cs"];
m15_105 [label="Entry lambda expression", span="84-91", cluster="lambda expression", file="Tokenizer.cs"];
m15_119 [label="Entry lambda expression", span="91-91", cluster="lambda expression", file="Tokenizer.cs"];
m15_124 [label="indexes.Contains(i) ? Maybe.Just(t) : Maybe.Nothing<Token>()", span="96-96", cluster="lambda expression", file="Tokenizer.cs"];
m15_123 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="Tokenizer.cs"];
m15_126 [label="Entry lambda expression", span="97-97", cluster="lambda expression", file="Tokenizer.cs"];
m15_108 [label="Exit lambda expression", span="84-91", cluster="lambda expression", file="Tokenizer.cs"];
m15_116 [label="Exit lambda expression", span="88-88", cluster="lambda expression", file="Tokenizer.cs"];
m15_120 [label="i.IsJust()", span="91-91", cluster="lambda expression", file="Tokenizer.cs"];
m15_121 [label="Exit lambda expression", span="91-91", cluster="lambda expression", file="Tokenizer.cs"];
m15_125 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="Tokenizer.cs"];
m15_127 [label="t.IsJust()", span="97-97", cluster="lambda expression", file="Tokenizer.cs"];
m15_128 [label="Exit lambda expression", span="97-97", cluster="lambda expression", file="Tokenizer.cs"];
m15_41 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="Tokenizer.cs"];
m15_17 [label="Entry CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="145-145", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m15_152 [label="value.Length > 2 && value.StartsWith(''--'', StringComparison.Ordinal)", span="149-149", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m15_156 [label="yield return Token.Name(text);", span="155-155", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m15_157 [label="yield break;", span="156-156", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m15_160 [label="yield break;", span="161-161", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m15_162 [label="yield return Token.Name(parts[0]);", span="164-164", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m15_163 [label="yield return Token.Value(parts[1], true);", span="165-165", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m15_153 [label="var text = value.Substring(2)", span="151-151", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m15_159 [label="onError(new BadFormatTokenError(value))", span="160-160", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m15_154 [label="var equalIndex = text.IndexOf('=')", span="152-152", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m15_161 [label="var parts = text.Split('=')", span="163-163", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m15_155 [label="equalIndex <= 0", span="153-153", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m15_158 [label="equalIndex == 1", span="158-158", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m15_164 [label="Exit CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="145-145", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m15_67 [label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", span="12-12", cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", file="Tokenizer.cs"];
m15_40 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="Tokenizer.cs"];
m15_25 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="Tokenizer.cs"];
m15_43 [label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Map<TSuccess, TMessage, TResult>(System.Func<TSuccess, TResult>)", span="534-534", cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Map<TSuccess, TMessage, TResult>(System.Func<TSuccess, TResult>)", file="Tokenizer.cs"];
m15_47 [label="Entry string.EqualsOrdinal(string)", span="40-40", cluster="string.EqualsOrdinal(string)", file="Tokenizer.cs"];
m15_39 [label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="Tokenizer.cs"];
m15_165 [label="Entry string.IndexOf(char)", span="0-0", cluster="string.IndexOf(char)", file="Tokenizer.cs"];
m15_42 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="Tokenizer.cs"];
m15_122 [label="Entry Unk.IsJust", span="", cluster="Unk.IsJust", file="Tokenizer.cs"];
m15_19 [label="Entry Unk.Memorize", span="", cluster="Unk.Memorize", file="Tokenizer.cs"];
m15_104 [label="Entry Unk.Except", span="", cluster="Unk.Except", file="Tokenizer.cs"];
m15_72 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="Tokenizer.cs"];
m15_113 [label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116", cluster="CSharpx.Maybe.Nothing<T>()", file="Tokenizer.cs"];
m15_64 [label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", span="653-653", cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", file="Tokenizer.cs"];
m15_111 [label="Entry CommandLine.Core.Token.IsValue()", span="133-133", cluster="CommandLine.Core.Token.IsValue()", file="Tokenizer.cs"];
m15_103 [label="Entry Unk.FromJust", span="", cluster="Unk.FromJust", file="Tokenizer.cs"];
m15_149 [label="Entry char.IsDigit(char)", span="0-0", cluster="char.IsDigit(char)", file="Tokenizer.cs"];
m15_14 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="Tokenizer.cs"];
m15_0 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", span="13-13", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_1 [label="return Tokenizer.Tokenize(arguments, nameLookup, tokens => tokens);", span="17-17", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_2 [label="Exit CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", span="13-13", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Tokenizer.cs"];
m15_169 [label="Entry CommandLine.Core.Token.Value(string, bool)", span="29-29", cluster="CommandLine.Core.Token.Value(string, bool)", file="Tokenizer.cs"];
m15_24 [label="Entry UnknownOptionError.cstr", span="", cluster="UnknownOptionError.cstr", file="Tokenizer.cs"];
m15_20 [label="Entry Unk.normalize", span="", cluster="Unk.normalize", file="Tokenizer.cs"];
m15_66 [label="Entry Unk.SelectMany", span="", cluster="Unk.SelectMany", file="Tokenizer.cs"];
m15_83 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="Tokenizer.cs"];
m15_93 [label="Entry Unk.Split", span="", cluster="Unk.Split", file="Tokenizer.cs"];
m15_26 [label="Entry Unk.Succeed", span="", cluster="Unk.Succeed", file="Tokenizer.cs"];
m15_148 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="Tokenizer.cs"];
m15_170 [label=unkTokens, span="", file="Tokenizer.cs"];
m15_171 [label=values, span="", file="Tokenizer.cs"];
m15_172 [label="System.Func<string, CSharpx.Maybe<char>>", span="", file="Tokenizer.cs"];
m15_173 [label=int, span="", file="Tokenizer.cs"];
m15_174 [label=replaces, span="", file="Tokenizer.cs"];
m15_175 [label=int, span="", file="Tokenizer.cs"];
m15_176 [label="CommandLine.Core.Token", span="", file="Tokenizer.cs"];
m15_177 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span="", file="Tokenizer.cs"];
m15_178 [label="System.Func<string, bool>", span="", file="Tokenizer.cs"];
m15_179 [label=indexes, span="", file="Tokenizer.cs"];
m16_0 [label="Entry CommandLine.Core.TokenPartitions.TokenPartitions(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12", cluster="CommandLine.Core.TokenPartitions.TokenPartitions(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitions.cs"];
m16_1 [label="this.options = options", span="17-17", cluster="CommandLine.Core.TokenPartitions.TokenPartitions(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitions.cs"];
m16_2 [label="this.values = values", span="18-18", cluster="CommandLine.Core.TokenPartitions.TokenPartitions(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitions.cs"];
m16_3 [label="this.errors = errors", span="19-19", cluster="CommandLine.Core.TokenPartitions.TokenPartitions(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitions.cs"];
m16_4 [label="Exit CommandLine.Core.TokenPartitions.TokenPartitions(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12", cluster="CommandLine.Core.TokenPartitions.TokenPartitions(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitions.cs"];
m16_5 [label="Entry CommandLine.Core.TokenPartitions.Create(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="37-37", cluster="CommandLine.Core.TokenPartitions.Create(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitions.cs"];
m16_6 [label="return new TokenPartitions(options, values, errors);", span="42-42", cluster="CommandLine.Core.TokenPartitions.Create(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitions.cs"];
m16_7 [label="Exit CommandLine.Core.TokenPartitions.Create(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="37-37", cluster="CommandLine.Core.TokenPartitions.Create(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitions.cs"];
m16_8 [label="CommandLine.Core.TokenPartitions", span="", file="TokenPartitions.cs"];
m17_91 [label="Entry System.Linq.Expressions.LambdaExpression.Compile()", span="0-0", cluster="System.Linq.Expressions.LambdaExpression.Compile()", file="TypeConverter.cs"];
m17_44 [label="Entry Ninject.Planning.Bindings.BindingBuilder.ToProviderInternal<TProvider, TImplementation>()", span="138-138", cluster="Ninject.Planning.Bindings.BindingBuilder.ToProviderInternal<TProvider, TImplementation>()", file="TypeConverter.cs"];
m17_45 [label="this.BindingConfiguration.ProviderCallback = ctx => ctx.Kernel.Get<TProvider>()", span="141-141", cluster="Ninject.Planning.Bindings.BindingBuilder.ToProviderInternal<TProvider, TImplementation>()", file="TypeConverter.cs"];
m17_46 [label="this.BindingConfiguration.Target = BindingTarget.Provider", span="142-142", cluster="Ninject.Planning.Bindings.BindingBuilder.ToProviderInternal<TProvider, TImplementation>()", file="TypeConverter.cs"];
m17_47 [label="return new BindingConfigurationBuilder<TImplementation>(this.BindingConfiguration, this.ServiceNames);", span="144-144", cluster="Ninject.Planning.Bindings.BindingBuilder.ToProviderInternal<TProvider, TImplementation>()", file="TypeConverter.cs"];
m17_48 [label="Exit Ninject.Planning.Bindings.BindingBuilder.ToProviderInternal<TProvider, TImplementation>()", span="138-138", cluster="Ninject.Planning.Bindings.BindingBuilder.ToProviderInternal<TProvider, TImplementation>()", file="TypeConverter.cs"];
m17_15 [label="Entry Ninject.Planning.Bindings.BindingBuilder.InternalToConfiguration<TImplementation>(TImplementation)", span="92-92", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToConfiguration<TImplementation>(TImplementation)", file="TypeConverter.cs"];
m17_16 [label="var constantProvider = new ConstantProvider<TImplementation>(value)", span="94-94", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToConfiguration<TImplementation>(TImplementation)", file="TypeConverter.cs"];
m17_17 [label="this.BindingConfiguration.ProviderCallback = ctx => constantProvider", span="95-95", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToConfiguration<TImplementation>(TImplementation)", file="TypeConverter.cs"];
m17_18 [label="this.BindingConfiguration.Target = BindingTarget.Constant", span="96-96", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToConfiguration<TImplementation>(TImplementation)", file="TypeConverter.cs"];
m17_19 [label="this.BindingConfiguration.ScopeCallback = StandardScopeCallbacks.Singleton", span="97-97", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToConfiguration<TImplementation>(TImplementation)", file="TypeConverter.cs"];
m17_20 [label="return new BindingConfigurationBuilder<TImplementation>(this.BindingConfiguration, this.ServiceNames);", span="99-99", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToConfiguration<TImplementation>(TImplementation)", file="TypeConverter.cs"];
m17_21 [label="Exit Ninject.Planning.Bindings.BindingBuilder.InternalToConfiguration<TImplementation>(TImplementation)", span="92-92", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToConfiguration<TImplementation>(TImplementation)", file="TypeConverter.cs"];
m17_98 [label="Entry System.Delegate.DynamicInvoke(params object[])", span="0-0", cluster="System.Delegate.DynamicInvoke(params object[])", file="TypeConverter.cs"];
m17_90 [label="Entry System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0", cluster="System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="TypeConverter.cs"];
m17_53 [label="Entry Ninject.Planning.Bindings.BindingBuilder.ToProviderInternal<T>(System.Type)", span="154-154", cluster="Ninject.Planning.Bindings.BindingBuilder.ToProviderInternal<T>(System.Type)", file="TypeConverter.cs"];
m17_54 [label="this.BindingConfiguration.ProviderCallback = ctx => ctx.Kernel.Get(providerType) as IProvider", span="156-156", cluster="Ninject.Planning.Bindings.BindingBuilder.ToProviderInternal<T>(System.Type)", file="TypeConverter.cs"];
m17_55 [label="this.BindingConfiguration.Target = BindingTarget.Provider", span="157-157", cluster="Ninject.Planning.Bindings.BindingBuilder.ToProviderInternal<T>(System.Type)", file="TypeConverter.cs"];
m17_56 [label="return new BindingConfigurationBuilder<T>(this.BindingConfiguration, this.ServiceNames);", span="159-159", cluster="Ninject.Planning.Bindings.BindingBuilder.ToProviderInternal<T>(System.Type)", file="TypeConverter.cs"];
m17_57 [label="Exit Ninject.Planning.Bindings.BindingBuilder.ToProviderInternal<T>(System.Type)", span="154-154", cluster="Ninject.Planning.Bindings.BindingBuilder.ToProviderInternal<T>(System.Type)", file="TypeConverter.cs"];
m17_73 [label="Entry Ninject.Planning.Bindings.BindingBuilder.AddConstructorArguments(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ParameterExpression)", span="189-189", cluster="Ninject.Planning.Bindings.BindingBuilder.AddConstructorArguments(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ParameterExpression)", file="TypeConverter.cs"];
m17_74 [label="var parameters = ctorExpression.Constructor.GetParameters()", span="191-191", cluster="Ninject.Planning.Bindings.BindingBuilder.AddConstructorArguments(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ParameterExpression)", file="TypeConverter.cs"];
m17_76 [label="i < ctorExpression.Arguments.Count", span="193-193", cluster="Ninject.Planning.Bindings.BindingBuilder.AddConstructorArguments(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ParameterExpression)", file="TypeConverter.cs"];
m17_77 [label="var argument = ctorExpression.Arguments[i]", span="195-195", cluster="Ninject.Planning.Bindings.BindingBuilder.AddConstructorArguments(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ParameterExpression)", file="TypeConverter.cs"];
m17_79 [label="this.AddConstructorArgument(argument, argumentName, constructorArgumentSyntaxParameterExpression)", span="198-198", cluster="Ninject.Planning.Bindings.BindingBuilder.AddConstructorArguments(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ParameterExpression)", file="TypeConverter.cs"];
m17_75 [label="var i = 0", span="193-193", cluster="Ninject.Planning.Bindings.BindingBuilder.AddConstructorArguments(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ParameterExpression)", file="TypeConverter.cs"];
m17_78 [label="var argumentName = parameters[i].Name", span="196-196", cluster="Ninject.Planning.Bindings.BindingBuilder.AddConstructorArguments(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ParameterExpression)", file="TypeConverter.cs"];
m17_80 [label="i++", span="193-193", cluster="Ninject.Planning.Bindings.BindingBuilder.AddConstructorArguments(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ParameterExpression)", file="TypeConverter.cs"];
m17_81 [label="Exit Ninject.Planning.Bindings.BindingBuilder.AddConstructorArguments(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ParameterExpression)", span="189-189", cluster="Ninject.Planning.Bindings.BindingBuilder.AddConstructorArguments(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ParameterExpression)", file="TypeConverter.cs"];
m17_82 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="TypeConverter.cs"];
m17_22 [label="Entry Ninject.Activation.Providers.ConstantProvider<T>.ConstantProvider(T)", span="31-31", cluster="Ninject.Activation.Providers.ConstantProvider<T>.ConstantProvider(T)", file="TypeConverter.cs"];
m17_5 [label="Entry Ninject.Planning.Bindings.BindingBuilder.InternalTo<TImplementation>()", span="67-67", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalTo<TImplementation>()", file="TypeConverter.cs"];
m17_6 [label="return this.InternalTo<TImplementation>(typeof(TImplementation));", span="69-69", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalTo<TImplementation>()", file="TypeConverter.cs"];
m17_7 [label="Exit Ninject.Planning.Bindings.BindingBuilder.InternalTo<TImplementation>()", span="67-67", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalTo<TImplementation>()", file="TypeConverter.cs"];
m17_8 [label="Entry Ninject.Planning.Bindings.BindingBuilder.InternalTo<T>(System.Type)", span="78-78", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalTo<T>(System.Type)", file="TypeConverter.cs"];
m17_9 [label="StandardProvider.AssignProviderCallback(this.BindingConfiguration, implementation)", span="80-80", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalTo<T>(System.Type)", file="TypeConverter.cs"];
m17_10 [label="this.BindingConfiguration.Target = BindingTarget.Type", span="81-81", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalTo<T>(System.Type)", file="TypeConverter.cs"];
m17_11 [label="return new BindingConfigurationBuilder<T>(this.BindingConfiguration, this.ServiceNames);", span="83-83", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalTo<T>(System.Type)", file="TypeConverter.cs"];
m17_12 [label="Exit Ninject.Planning.Bindings.BindingBuilder.InternalTo<T>(System.Type)", span="78-78", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalTo<T>(System.Type)", file="TypeConverter.cs"];
m17_94 [label="Entry lambda expression", span="218-218", cluster="lambda expression", file="TypeConverter.cs"];
m17_24 [label=constantProvider, span="95-95", cluster="lambda expression", file="TypeConverter.cs"];
m17_23 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="TypeConverter.cs"];
m17_25 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="TypeConverter.cs"];
m17_34 [label=callbackProvider, span="111-111", cluster="lambda expression", file="TypeConverter.cs"];
m17_33 [label="Entry lambda expression", span="111-111", cluster="lambda expression", file="TypeConverter.cs"];
m17_35 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="TypeConverter.cs"];
m17_42 [label=provider, span="125-125", cluster="lambda expression", file="TypeConverter.cs"];
m17_41 [label="Entry lambda expression", span="125-125", cluster="lambda expression", file="TypeConverter.cs"];
m17_43 [label="Exit lambda expression", span="125-125", cluster="lambda expression", file="TypeConverter.cs"];
m17_50 [label="ctx.Kernel.Get<TProvider>()", span="141-141", cluster="lambda expression", file="TypeConverter.cs"];
m17_49 [label="Entry lambda expression", span="141-141", cluster="lambda expression", file="TypeConverter.cs"];
m17_51 [label="Exit lambda expression", span="141-141", cluster="lambda expression", file="TypeConverter.cs"];
m17_59 [label="ctx.Kernel.Get(providerType) as IProvider", span="156-156", cluster="lambda expression", file="TypeConverter.cs"];
m17_58 [label="Entry lambda expression", span="156-156", cluster="lambda expression", file="TypeConverter.cs"];
m17_60 [label="Exit lambda expression", span="156-156", cluster="lambda expression", file="TypeConverter.cs"];
m17_95 [label="compiledExpression.DynamicInvoke(new ConstructorArgumentSyntax(ctx))", span="218-218", cluster="lambda expression", file="TypeConverter.cs"];
m17_96 [label="Exit lambda expression", span="218-218", cluster="lambda expression", file="TypeConverter.cs"];
m17_71 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="TypeConverter.cs"];
m17_26 [label="Entry Ninject.Planning.Bindings.BindingBuilder.InternalToMethod<TImplementation>(System.Func<Ninject.Activation.IContext, TImplementation>)", span="108-108", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToMethod<TImplementation>(System.Func<Ninject.Activation.IContext, TImplementation>)", file="TypeConverter.cs"];
m17_27 [label="var callbackProvider = new CallbackProvider<TImplementation>(method)", span="110-110", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToMethod<TImplementation>(System.Func<Ninject.Activation.IContext, TImplementation>)", file="TypeConverter.cs"];
m17_28 [label="this.BindingConfiguration.ProviderCallback = ctx => callbackProvider", span="111-111", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToMethod<TImplementation>(System.Func<Ninject.Activation.IContext, TImplementation>)", file="TypeConverter.cs"];
m17_29 [label="this.BindingConfiguration.Target = BindingTarget.Method", span="112-112", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToMethod<TImplementation>(System.Func<Ninject.Activation.IContext, TImplementation>)", file="TypeConverter.cs"];
m17_30 [label="return new BindingConfigurationBuilder<TImplementation>(this.BindingConfiguration, this.ServiceNames);", span="114-114", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToMethod<TImplementation>(System.Func<Ninject.Activation.IContext, TImplementation>)", file="TypeConverter.cs"];
m17_31 [label="Exit Ninject.Planning.Bindings.BindingBuilder.InternalToMethod<TImplementation>(System.Func<Ninject.Activation.IContext, TImplementation>)", span="108-108", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToMethod<TImplementation>(System.Func<Ninject.Activation.IContext, TImplementation>)", file="TypeConverter.cs"];
m17_14 [label="Entry Ninject.Planning.Bindings.BindingConfigurationBuilder<T>.BindingConfigurationBuilder(Ninject.Planning.Bindings.IBindingConfiguration, string)", span="57-57", cluster="Ninject.Planning.Bindings.BindingConfigurationBuilder<T>.BindingConfigurationBuilder(Ninject.Planning.Bindings.IBindingConfiguration, string)", file="TypeConverter.cs"];
m17_93 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="TypeConverter.cs"];
m17_13 [label="Entry Ninject.Activation.Providers.StandardProvider.AssignProviderCallback(Ninject.Planning.Bindings.IBindingConfiguration, System.Type)", span="138-138", cluster="Ninject.Activation.Providers.StandardProvider.AssignProviderCallback(Ninject.Planning.Bindings.IBindingConfiguration, System.Type)", file="TypeConverter.cs"];
m17_32 [label="Entry Ninject.Activation.Providers.CallbackProvider<T>.CallbackProvider(System.Func<Ninject.Activation.IContext, T>)", span="31-31", cluster="Ninject.Activation.Providers.CallbackProvider<T>.CallbackProvider(System.Func<Ninject.Activation.IContext, T>)", file="TypeConverter.cs"];
m17_104 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="TypeConverter.cs"];
m17_61 [label="Entry Ninject.Syntax.IResolutionRoot.Get(System.Type, params Ninject.Parameters.IParameter[])", span="186-186", cluster="Ninject.Syntax.IResolutionRoot.Get(System.Type, params Ninject.Parameters.IParameter[])", file="TypeConverter.cs"];
m17_89 [label="Entry System.Reflection.MethodInfo.GetGenericMethodDefinition()", span="0-0", cluster="System.Reflection.MethodInfo.GetGenericMethodDefinition()", file="TypeConverter.cs"];
m17_36 [label="Entry Ninject.Planning.Bindings.BindingBuilder.InternalToProvider<TImplementation>(Ninject.Activation.IProvider<TImplementation>)", span="123-123", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToProvider<TImplementation>(Ninject.Activation.IProvider<TImplementation>)", file="TypeConverter.cs"];
m17_37 [label="this.BindingConfiguration.ProviderCallback = ctx => provider", span="125-125", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToProvider<TImplementation>(Ninject.Activation.IProvider<TImplementation>)", file="TypeConverter.cs"];
m17_38 [label="this.BindingConfiguration.Target = BindingTarget.Provider", span="126-126", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToProvider<TImplementation>(Ninject.Activation.IProvider<TImplementation>)", file="TypeConverter.cs"];
m17_39 [label="return new BindingConfigurationBuilder<TImplementation>(this.BindingConfiguration, this.ServiceNames);", span="128-128", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToProvider<TImplementation>(Ninject.Activation.IProvider<TImplementation>)", file="TypeConverter.cs"];
m17_40 [label="Exit Ninject.Planning.Bindings.BindingBuilder.InternalToProvider<TImplementation>(Ninject.Activation.IProvider<TImplementation>)", span="123-123", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToProvider<TImplementation>(Ninject.Activation.IProvider<TImplementation>)", file="TypeConverter.cs"];
m17_101 [label="Entry Ninject.Planning.Bindings.BindingBuilder.ConstructorArgumentSyntax.Inject<T1>()", span="251-251", cluster="Ninject.Planning.Bindings.BindingBuilder.ConstructorArgumentSyntax.Inject<T1>()", file="TypeConverter.cs"];
m17_102 [label="throw new InvalidOperationException(''This method is for declaration that a parameter shall be injected only! Never call it directly.'');", span="253-253", cluster="Ninject.Planning.Bindings.BindingBuilder.ConstructorArgumentSyntax.Inject<T1>()", file="TypeConverter.cs"];
m17_103 [label="Exit Ninject.Planning.Bindings.BindingBuilder.ConstructorArgumentSyntax.Inject<T1>()", span="251-251", cluster="Ninject.Planning.Bindings.BindingBuilder.ConstructorArgumentSyntax.Inject<T1>()", file="TypeConverter.cs"];
m17_0 [label="Entry Ninject.Planning.Bindings.BindingBuilder.BindingBuilder(Ninject.Planning.Bindings.IBindingConfiguration, Ninject.INinjectSettings, string)", span="44-44", cluster="Ninject.Planning.Bindings.BindingBuilder.BindingBuilder(Ninject.Planning.Bindings.IBindingConfiguration, Ninject.INinjectSettings, string)", file="TypeConverter.cs"];
m17_1 [label="this.BindingConfiguration = bindingConfiguration", span="46-46", cluster="Ninject.Planning.Bindings.BindingBuilder.BindingBuilder(Ninject.Planning.Bindings.IBindingConfiguration, Ninject.INinjectSettings, string)", file="TypeConverter.cs"];
m17_2 [label="this.ServiceNames = serviceNames", span="47-47", cluster="Ninject.Planning.Bindings.BindingBuilder.BindingBuilder(Ninject.Planning.Bindings.IBindingConfiguration, Ninject.INinjectSettings, string)", file="TypeConverter.cs"];
m17_3 [label="this.BindingConfiguration.ScopeCallback = settings.DefaultScopeCallback", span="48-48", cluster="Ninject.Planning.Bindings.BindingBuilder.BindingBuilder(Ninject.Planning.Bindings.IBindingConfiguration, Ninject.INinjectSettings, string)", file="TypeConverter.cs"];
m17_4 [label="Exit Ninject.Planning.Bindings.BindingBuilder.BindingBuilder(Ninject.Planning.Bindings.IBindingConfiguration, Ninject.INinjectSettings, string)", span="44-44", cluster="Ninject.Planning.Bindings.BindingBuilder.BindingBuilder(Ninject.Planning.Bindings.IBindingConfiguration, Ninject.INinjectSettings, string)", file="TypeConverter.cs"];
m17_52 [label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="34-34", cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="TypeConverter.cs"];
m17_92 [label="Entry Ninject.Parameters.ConstructorArgument.ConstructorArgument(string, System.Func<Ninject.Activation.IContext, object>)", span="50-50", cluster="Ninject.Parameters.ConstructorArgument.ConstructorArgument(string, System.Func<Ninject.Activation.IContext, object>)", file="TypeConverter.cs"];
m17_97 [label="Entry Ninject.Planning.Bindings.BindingBuilder.ConstructorArgumentSyntax.ConstructorArgumentSyntax(Ninject.Activation.IContext)", span="231-231", cluster="Ninject.Planning.Bindings.BindingBuilder.ConstructorArgumentSyntax.ConstructorArgumentSyntax(Ninject.Activation.IContext)", file="TypeConverter.cs"];
m17_99 [label="this.Context = context", span="233-233", cluster="Ninject.Planning.Bindings.BindingBuilder.ConstructorArgumentSyntax.ConstructorArgumentSyntax(Ninject.Activation.IContext)", file="TypeConverter.cs"];
m17_100 [label="Exit Ninject.Planning.Bindings.BindingBuilder.ConstructorArgumentSyntax.ConstructorArgumentSyntax(Ninject.Activation.IContext)", span="231-231", cluster="Ninject.Planning.Bindings.BindingBuilder.ConstructorArgumentSyntax.ConstructorArgumentSyntax(Ninject.Activation.IContext)", file="TypeConverter.cs"];
m17_83 [label="Entry Ninject.Planning.Bindings.BindingBuilder.AddConstructorArgument(System.Linq.Expressions.Expression, string, System.Linq.Expressions.ParameterExpression)", span="208-208", cluster="Ninject.Planning.Bindings.BindingBuilder.AddConstructorArgument(System.Linq.Expressions.Expression, string, System.Linq.Expressions.ParameterExpression)", file="TypeConverter.cs"];
m17_84 [label="var methodCall = argument as MethodCallExpression", span="210-210", cluster="Ninject.Planning.Bindings.BindingBuilder.AddConstructorArgument(System.Linq.Expressions.Expression, string, System.Linq.Expressions.ParameterExpression)", file="TypeConverter.cs"];
m17_86 [label="var compiledExpression = Expression.Lambda(argument, constructorArgumentSyntaxParameterExpression).Compile()", span="215-215", cluster="Ninject.Planning.Bindings.BindingBuilder.AddConstructorArgument(System.Linq.Expressions.Expression, string, System.Linq.Expressions.ParameterExpression)", file="TypeConverter.cs"];
m17_87 [label="this.BindingConfiguration.Parameters.Add(new ConstructorArgument(\r\n                    argumentName,\r\n                    ctx => compiledExpression.DynamicInvoke(new ConstructorArgumentSyntax(ctx))))", span="216-218", cluster="Ninject.Planning.Bindings.BindingBuilder.AddConstructorArgument(System.Linq.Expressions.Expression, string, System.Linq.Expressions.ParameterExpression)", file="TypeConverter.cs"];
m17_85 [label="methodCall == null ||\r\n                !methodCall.Method.IsGenericMethod ||\r\n                methodCall.Method.GetGenericMethodDefinition().DeclaringType != typeof(IConstructorArgumentSyntax)", span="211-213", cluster="Ninject.Planning.Bindings.BindingBuilder.AddConstructorArgument(System.Linq.Expressions.Expression, string, System.Linq.Expressions.ParameterExpression)", file="TypeConverter.cs"];
m17_88 [label="Exit Ninject.Planning.Bindings.BindingBuilder.AddConstructorArgument(System.Linq.Expressions.Expression, string, System.Linq.Expressions.ParameterExpression)", span="208-208", cluster="Ninject.Planning.Bindings.BindingBuilder.AddConstructorArgument(System.Linq.Expressions.Expression, string, System.Linq.Expressions.ParameterExpression)", file="TypeConverter.cs"];
m17_72 [label="Entry Ninject.Activation.Providers.StandardProvider.GetCreationCallback(System.Type, System.Reflection.ConstructorInfo)", span="127-127", cluster="Ninject.Activation.Providers.StandardProvider.GetCreationCallback(System.Type, System.Reflection.ConstructorInfo)", file="TypeConverter.cs"];
m17_62 [label="Entry Ninject.Planning.Bindings.BindingBuilder.InternalToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", span="168-168", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", file="TypeConverter.cs"];
m17_63 [label="var ctorExpression = newExpression.Body as NewExpression", span="171-171", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", file="TypeConverter.cs"];
m17_68 [label="this.AddConstructorArguments(ctorExpression, newExpression.Parameters[0])", span="179-179", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", file="TypeConverter.cs"];
m17_64 [label="ctorExpression == null", span="172-172", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", file="TypeConverter.cs"];
m17_66 [label="this.BindingConfiguration.ProviderCallback = StandardProvider.GetCreationCallback(ctorExpression.Type, ctorExpression.Constructor)", span="177-177", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", file="TypeConverter.cs"];
m17_65 [label="throw new ArgumentException(''The expression must be a constructor call.'', ''newExpression'');", span="174-174", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", file="TypeConverter.cs"];
m17_67 [label="this.BindingConfiguration.Target = BindingTarget.Type", span="178-178", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", file="TypeConverter.cs"];
m17_69 [label="return new BindingConfigurationBuilder<TImplementation>(this.BindingConfiguration, this.ServiceNames);", span="181-181", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", file="TypeConverter.cs"];
m17_70 [label="Exit Ninject.Planning.Bindings.BindingBuilder.InternalToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", span="168-168", cluster="Ninject.Planning.Bindings.BindingBuilder.InternalToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", file="TypeConverter.cs"];
m17_105 [label="Ninject.Planning.Bindings.BindingBuilder", span="", file="TypeConverter.cs"];
m17_106 [label=constantProvider, span="", file="TypeConverter.cs"];
m17_107 [label=callbackProvider, span="", file="TypeConverter.cs"];
m17_108 [label="Ninject.Activation.IProvider<TImplementation>", span="", file="TypeConverter.cs"];
m17_109 [label="System.Type", span="", file="TypeConverter.cs"];
m17_110 [label=compiledExpression, span="", file="TypeConverter.cs"];
m17_111 [label="Ninject.Planning.Bindings.BindingBuilder.ConstructorArgumentSyntax", span="", file="TypeConverter.cs"];
m18_14 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="TypeLookup.cs"];
m18_4 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="TypeLookup.cs"];
m18_29 [label="Entry Unk.WithNextValue", span="", cluster="Unk.WithNextValue", file="TypeLookup.cs"];
m18_10 [label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8", cluster="string.MatchName(string, string, System.StringComparer)", file="TypeLookup.cs"];
m18_6 [label="Entry Unk.Map", span="", cluster="Unk.Map", file="TypeLookup.cs"];
m18_5 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="TypeLookup.cs"];
m18_33 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)", file="TypeLookup.cs"];
m18_0 [label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs"];
m18_1 [label="var info = specifications.SingleOrDefault(a => name.MatchName(a.ShortName, a.LongName, comparer))\r\n                .ToMaybe()\r\n                    .Map(\r\n                        s => TypeDescriptor.Create(s.TargetType, s.Max))", span="16-19", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs"];
m18_2 [label="return info;", span="20-20", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs"];
m18_3 [label="Exit CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs"];
m18_38 [label="Entry lambda expression", span="38-38", cluster="lambda expression", file="TypeLookup.cs"];
m18_8 [label="name.MatchName(a.ShortName, a.LongName, comparer)", span="16-16", cluster="lambda expression", file="TypeLookup.cs"];
m18_7 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="TypeLookup.cs"];
m18_11 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="TypeLookup.cs"];
m18_9 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="TypeLookup.cs"];
m18_12 [label="TypeDescriptor.Create(s.TargetType, s.Max)", span="19-19", cluster="lambda expression", file="TypeLookup.cs"];
m18_13 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="TypeLookup.cs"];
m18_20 [label="name.MatchName(a.ShortName, a.LongName, comparer)", span="29-29", cluster="lambda expression", file="TypeLookup.cs"];
m18_24 [label="var next = specifications\r\n                                    .SkipWhile(s => s.Equals(first)).Take(1)\r\n                                    .SingleOrDefault(x => x.IsValue()).ToMaybe()\r\n                                    .Map(second => TypeDescriptor.Create(second.TargetType, second.Max))", span="35-38", cluster="lambda expression", file="TypeLookup.cs"];
m18_19 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="TypeLookup.cs"];
m18_22 [label="Entry lambda expression", span="32-40", cluster="lambda expression", file="TypeLookup.cs"];
m18_21 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="TypeLookup.cs"];
m18_23 [label="var descr = TypeDescriptor.Create(first.TargetType, first.Max)", span="34-34", cluster="lambda expression", file="TypeLookup.cs"];
m18_31 [label="s.Equals(first)", span="36-36", cluster="lambda expression", file="TypeLookup.cs"];
m18_25 [label="return descr.WithNextValue(next);", span="39-39", cluster="lambda expression", file="TypeLookup.cs"];
m18_30 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="TypeLookup.cs"];
m18_34 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="TypeLookup.cs"];
m18_26 [label="Exit lambda expression", span="32-40", cluster="lambda expression", file="TypeLookup.cs"];
m18_32 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="TypeLookup.cs"];
m18_35 [label="x.IsValue()", span="37-37", cluster="lambda expression", file="TypeLookup.cs"];
m18_36 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="TypeLookup.cs"];
m18_39 [label="TypeDescriptor.Create(second.TargetType, second.Max)", span="38-38", cluster="lambda expression", file="TypeLookup.cs"];
m18_40 [label="Exit lambda expression", span="38-38", cluster="lambda expression", file="TypeLookup.cs"];
m18_15 [label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="23-23", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs"];
m18_16 [label="var info =\r\n                specifications.SingleOrDefault(a => name.MatchName(a.ShortName, a.LongName, comparer))\r\n                    .ToMaybe()\r\n                    .Map(\r\n                        first =>\r\n                            {\r\n                                var descr = TypeDescriptor.Create(first.TargetType, first.Max);\r\n                                var next = specifications\r\n                                    .SkipWhile(s => s.Equals(first)).Take(1)\r\n                                    .SingleOrDefault(x => x.IsValue()).ToMaybe()\r\n                                    .Map(second => TypeDescriptor.Create(second.TargetType, second.Max));\r\n                                return descr.WithNextValue(next);\r\n                            })", span="28-40", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs"];
m18_17 [label="return info;", span="41-41", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs"];
m18_18 [label="Exit CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="23-23", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs"];
m18_28 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="TypeLookup.cs"];
m18_27 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="TypeLookup.cs"];
m18_37 [label="Entry CommandLine.Core.Specification.IsValue()", span="15-15", cluster="CommandLine.Core.Specification.IsValue()", file="TypeLookup.cs"];
m18_41 [label=string, span="", file="TypeLookup.cs"];
m18_42 [label="System.StringComparer", span="", file="TypeLookup.cs"];
m18_43 [label=string, span="", file="TypeLookup.cs"];
m18_44 [label="System.StringComparer", span="", file="TypeLookup.cs"];
m18_45 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", file="TypeLookup.cs"];
m18_46 [label=T1, span="", file="TypeLookup.cs"];
m19_62 [label="Entry Unk.Just", span="", cluster="Unk.Just", file="ValueMapper.cs"];
m19_38 [label="Entry Unk.Empty", span="", cluster="Unk.Empty", file="ValueMapper.cs"];
m19_32 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31", cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="ValueMapper.cs"];
m19_0 [label="Entry CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="15-15", cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m19_1 [label="var propAndErrors = MapValuesImpl(specProps, values, converter)", span="20-20", cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m19_2 [label="return Result.Succeed(\r\n                propAndErrors.Select(pe => pe.Item1),\r\n                propAndErrors.Select(pe => pe.Item2)\r\n                    .OfType<Just<Error>>().Select(e => e.Value)\r\n                );", span="22-26", cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m19_3 [label="Exit CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="15-15", cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m19_50 [label="Entry Unk.converter", span="", cluster="Unk.converter", file="ValueMapper.cs"];
m19_6 [label="Entry Unk.>", span="", cluster="Unk.>", file="ValueMapper.cs"];
m19_4 [label="Entry CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="29-29", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m19_17 [label="specProps.Empty()", span="34-34", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m19_18 [label="yield break;", span="36-36", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m19_22 [label="yield return\r\n                    Tuple.Create(pt, pt.Specification.MakeErrorInCaseOfMinConstraint());", span="42-43", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m19_23 [label="yield break;", span="44-44", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m19_26 [label="yield return\r\n                    Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                        pt, Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName)));", span="52-54", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m19_27 [label="yield break;", span="55-55", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m19_28 [label="yield return\r\n                converter(taken, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                    .Return(\r\n                        converted => Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>()),\r\n                        Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                            pt, Maybe.Just<Error>(new BadFormatConversionError(NameInfo.EmptyName))));", span="58-63", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m19_30 [label="yield return value;", span="67-67", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m19_19 [label="var pt = specProps.First()", span="38-38", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m19_20 [label="var taken = values.Take(pt.Specification.CountOfMaxNumberOfValues().Return(n => n, values.Count()))", span="39-39", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m19_24 [label="var next = specProps.Skip(1).FirstOrDefault(s => s.Specification.IsValue()).ToMaybe()", span="47-47", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m19_25 [label="pt.Specification.Max.IsJust()\r\n                && next.IsNothing()\r\n                && values.Skip(taken.Count()).Any()", span="48-50", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m19_29 [label="MapValuesImpl(specProps.Skip(1), values.Skip(taken.Count()), converter)", span="65-65", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m19_21 [label="taken.Empty()", span="40-40", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m19_31 [label="Exit CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="29-29", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m19_34 [label="Entry CommandLine.Core.Specification.CountOfMaxNumberOfValues()", span="71-71", cluster="CommandLine.Core.Specification.CountOfMaxNumberOfValues()", file="ValueMapper.cs"];
m19_58 [label="Entry CommandLine.Core.Specification.IsValue()", span="15-15", cluster="CommandLine.Core.Specification.IsValue()", file="ValueMapper.cs"];
m19_45 [label="Entry Unk.IsNothing", span="", cluster="Unk.IsNothing", file="ValueMapper.cs"];
m19_37 [label="Entry Unk.Take", span="", cluster="Unk.Take", file="ValueMapper.cs"];
m19_43 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="ValueMapper.cs"];
m19_47 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ValueMapper.cs"];
m19_40 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="ValueMapper.cs"];
m19_48 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="360-360", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="ValueMapper.cs"];
m19_59 [label="Entry lambda expression", span="61-61", cluster="lambda expression", file="ValueMapper.cs"];
m19_8 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="ValueMapper.cs"];
m19_11 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="ValueMapper.cs"];
m19_14 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="ValueMapper.cs"];
m19_9 [label="pe.Item1", span="23-23", cluster="lambda expression", file="ValueMapper.cs"];
m19_10 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="ValueMapper.cs"];
m19_12 [label="pe.Item2", span="24-24", cluster="lambda expression", file="ValueMapper.cs"];
m19_13 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="ValueMapper.cs"];
m19_15 [label="e.Value", span="25-25", cluster="lambda expression", file="ValueMapper.cs"];
m19_16 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="ValueMapper.cs"];
m19_60 [label="Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>())", span="61-61", cluster="lambda expression", file="ValueMapper.cs"];
m19_52 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="ValueMapper.cs"];
m19_55 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="ValueMapper.cs"];
m19_53 [label=n, span="39-39", cluster="lambda expression", file="ValueMapper.cs"];
m19_54 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="ValueMapper.cs"];
m19_56 [label="s.Specification.IsValue()", span="47-47", cluster="lambda expression", file="ValueMapper.cs"];
m19_57 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="ValueMapper.cs"];
m19_61 [label="Exit lambda expression", span="61-61", cluster="lambda expression", file="ValueMapper.cs"];
m19_33 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ValueMapper.cs"];
m19_49 [label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124", cluster="CSharpx.Maybe.Just<T>(T)", file="ValueMapper.cs"];
m19_41 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="ValueMapper.cs"];
m19_75 [label="Entry CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="87-87", cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m19_76 [label="return specification.Min.IsJust()\r\n                ? Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName))\r\n                : Maybe.Nothing<Error>();", span="89-91", cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m19_77 [label="Exit CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="87-87", cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m19_5 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ValueMapper.cs"];
m19_51 [label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="349-349", cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="ValueMapper.cs"];
m19_39 [label="Entry CommandLine.Core.Specification.MakeErrorInCaseOfMinConstraint()", span="87-87", cluster="CommandLine.Core.Specification.MakeErrorInCaseOfMinConstraint()", file="ValueMapper.cs"];
m19_36 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="ValueMapper.cs"];
m19_74 [label="Entry CSharpx.Maybe<T>.FromJust<T>()", span="342-342", cluster="CSharpx.Maybe<T>.FromJust<T>()", file="ValueMapper.cs"];
m19_64 [label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116", cluster="CSharpx.Maybe.Nothing<T>()", file="ValueMapper.cs"];
m19_63 [label="Entry Unk.WithValue", span="", cluster="Unk.WithValue", file="ValueMapper.cs"];
m19_35 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="ValueMapper.cs"];
m19_65 [label="Entry CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="71-71", cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m19_66 [label="specification.TargetType", span="73-73", cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m19_70 [label="specification.Max.IsJust()", span="78-78", cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m19_71 [label="return Maybe.Just(specification.Max.FromJust());", span="80-80", cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m19_67 [label="TargetType.Scalar", span="75-75", cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m19_69 [label="TargetType.Sequence", span="77-77", cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m19_68 [label="return Maybe.Just(1);", span="76-76", cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m19_72 [label="return Maybe.Nothing<int>();", span="84-84", cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m19_73 [label="Exit CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="71-71", cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m19_42 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="ValueMapper.cs"];
m19_44 [label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326", cluster="CSharpx.Maybe<T>.IsJust<T>()", file="ValueMapper.cs"];
m19_46 [label="Entry Unk.Count", span="", cluster="Unk.Count", file="ValueMapper.cs"];
m19_7 [label="Entry Unk.Succeed", span="", cluster="Unk.Succeed", file="ValueMapper.cs"];
m19_78 [label=pt, span="", file="ValueMapper.cs"];
m20_10 [label="Entry System.Type.ToTargetType()", span="71-71", cluster="System.Type.ToTargetType()", file="ValueSpecification.cs"];
m20_0 [label="Entry CommandLine.Core.ValueSpecification.ValueSpecification(int, string, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="13-13", cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, string, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="ValueSpecification.cs"];
m20_1 [label="this.index = index", span="18-18", cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, string, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="ValueSpecification.cs"];
m20_2 [label="this.metaName = metaName", span="19-19", cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, string, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="ValueSpecification.cs"];
m20_3 [label="Exit CommandLine.Core.ValueSpecification.ValueSpecification(int, string, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="13-13", cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, string, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="ValueSpecification.cs"];
m20_9 [label="Entry T.ToMaybe<T>()", span="249-249", cluster="T.ToMaybe<T>()", file="ValueSpecification.cs"];
m20_8 [label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124", cluster="CSharpx.Maybe.Just<T>(T)", file="ValueSpecification.cs"];
m20_4 [label="Entry CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="22-22", cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="ValueSpecification.cs"];
m20_5 [label="return new ValueSpecification(\r\n                attribute.Index,\r\n                attribute.MetaName,\r\n                attribute.Required,\r\n                attribute.Min == -1 ? Maybe.Nothing<int>() : Maybe.Just(attribute.Min),\r\n                attribute.Max == -1 ? Maybe.Nothing<int>() : Maybe.Just(attribute.Max),\r\n                attribute.Default.ToMaybe(),\r\n                attribute.HelpText,\r\n                attribute.MetaValue,\r\n                enumValues,\r\n                conversionType,\r\n                conversionType.ToTargetType());", span="24-35", cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="ValueSpecification.cs"];
m20_6 [label="Exit CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="22-22", cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="ValueSpecification.cs"];
m20_7 [label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116", cluster="CSharpx.Maybe.Nothing<T>()", file="ValueSpecification.cs"];
m20_11 [label="CommandLine.Core.ValueSpecification", span="", file="ValueSpecification.cs"];
m21_17 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="Verb.cs"];
m21_0 [label="Entry CommandLine.Core.Verb.Verb(string, string)", span="13-13", cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs"];
m21_1 [label="name == null", span="15-15", cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs"];
m21_3 [label="helpText == null", span="16-16", cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs"];
m21_5 [label="this.name = name", span="18-18", cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs"];
m21_6 [label="this.helpText = helpText", span="19-19", cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs"];
m21_2 [label="throw new ArgumentNullException(''name'');", span="15-15", cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs"];
m21_4 [label="throw new ArgumentNullException(''helpText'');", span="16-16", cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs"];
m21_7 [label="Exit CommandLine.Core.Verb.Verb(string, string)", span="13-13", cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs"];
m21_16 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="Verb.cs"];
m21_15 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="Verb.cs"];
m21_12 [label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="Verb.cs"];
m21_13 [label="return from type in types\r\n                   let attrs = type.GetCustomAttributes(typeof(VerbAttribute), true)\r\n                   where attrs.Length == 1\r\n                   select Tuple.Create(\r\n                       FromAttribute((VerbAttribute)attrs.Single()),\r\n                       type);", span="42-47", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="Verb.cs"];
m21_14 [label="Exit CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="Verb.cs"];
m21_9 [label="Entry CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", span="32-32", cluster="CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", file="Verb.cs"];
m21_10 [label="return new Verb(\r\n                attribute.Name,\r\n                attribute.HelpText\r\n                );", span="34-37", cluster="CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", file="Verb.cs"];
m21_11 [label="Exit CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", span="32-32", cluster="CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", file="Verb.cs"];
m21_8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Verb.cs"];
m21_18 [label="CommandLine.Core.Verb", span="", file="Verb.cs"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
n2 -> n3  [key=0, style=solid];
n3 -> n2  [key=0, style=bold, color=blue];
n4 -> n5  [key=0, style=solid];
n5 -> n4  [key=0, style=bold, color=blue];
n6 -> n7  [key=0, style=solid];
n7 -> n6  [key=0, style=bold, color=blue];
m1_34 -> m1_40  [key=0, style=solid];
m1_34 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_42  [key=2, style=dotted];
m1_40 -> m1_43  [key=2, style=dotted];
m1_40 -> m1_44  [key=2, style=dotted];
m1_40 -> m1_45  [key=2, style=dotted];
m1_40 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_41 -> m1_34  [key=0, style=bold, color=blue];
m1_56 -> m1_57  [key=0, style=solid];
m1_18 -> m1_19  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_30  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [key=2, style=dotted];
m1_20 -> m1_18  [key=0, style=bold, color=blue];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_25  [key=2, style=dotted];
m1_23 -> m1_26  [key=2, style=dotted];
m1_24 -> m1_22  [key=0, style=bold, color=blue];
m1_29 -> m1_27  [key=0, style=bold, color=blue];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_38  [key=2, style=dotted];
m1_36 -> m1_39  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_37 -> m1_35  [key=0, style=bold, color=blue];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_49  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_48 -> m1_46  [key=0, style=bold, color=blue];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_49  [key=2, style=dotted];
m1_58 -> m1_56  [key=0, style=bold, color=blue];
m1_21 -> m1_31  [key=0, style=solid];
m1_21 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_21 -> m1_5  [key=3, color=darkorchid, style=bold, label="Parameter variable string pattern"];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_33  [key=2, style=dotted];
m1_31 -> m1_34  [key=2, style=dotted];
m1_31 -> m1_13  [key=2, style=dotted];
m1_31 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_32 -> m1_21  [key=0, style=bold, color=blue];
m1_44 -> m1_50  [key=0, style=solid];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label=baseDirectory];
m1_50 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label=baseDirectory];
m1_51 -> m1_52  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_54  [key=2, style=dotted];
m1_52 -> m1_55  [key=2, style=dotted];
m1_52 -> m1_45  [key=2, style=dotted];
m1_52 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_53 -> m1_44  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_12  [key=2, style=dotted];
m1_4 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label=plugins];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_13  [key=2, style=dotted];
m1_5 -> m1_14  [key=2, style=dotted];
m1_5 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_5 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_15  [key=2, style=dotted];
m1_8 -> m1_16  [key=2, style=dotted];
m1_8 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_8 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=plugin];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_11  [key=0, style=solid];
m1_6 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=fileGroup];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label=extension];
m1_10 -> m1_6  [key=0, style=solid];
m1_10 -> m1_17  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_6  [key=0, style=solid];
m1_11 -> m1_3  [key=0, style=bold, color=blue];
m1_59 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Modules.ModuleLoader"];
m1_59 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Modules.ModuleLoader"];
m1_60 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label=extension];
m1_61 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_62 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_63 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label=baseDirectory];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [key=0, style=bold, color=blue];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m3_8 -> m3_4  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.NameInfo FromSpecification"];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_12  [key=0, style=solid];
m3_11 -> m3_13  [key=0, style=solid];
m3_11 -> m3_4  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_12 -> m3_13  [key=0, style=solid];
m3_13 -> m3_8  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_8  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.OptionSpecification specification"];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [key=2, style=dotted];
m3_6 -> m3_4  [key=0, style=bold, color=blue];
m4_26 -> m4_27  [key=0, style=solid];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_10  [key=2, style=dotted];
m4_8 -> m4_11  [key=2, style=dotted];
m4_8 -> m4_12  [key=2, style=dotted];
m4_8 -> m4_13  [key=2, style=dotted];
m4_8 -> m4_14  [key=2, style=dotted];
m4_8 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_8 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_18  [key=2, style=dotted];
m4_16 -> m4_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_22  [key=2, style=dotted];
m4_20 -> m4_23  [key=2, style=dotted];
m4_20 -> m4_24  [key=2, style=dotted];
m4_20 -> m4_25  [key=2, style=dotted];
m4_20 -> m4_13  [key=2, style=dotted];
m4_20 -> m4_14  [key=2, style=dotted];
m4_20 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_16  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m4_7 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m4_7 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m4_31 -> m4_32  [key=0, style=solid];
m4_34 -> m4_35  [key=0, style=solid];
m4_37 -> m4_38  [key=0, style=solid];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_29  [key=2, style=dotted];
m4_27 -> m4_30  [key=2, style=dotted];
m4_27 -> m4_12  [key=2, style=dotted];
m4_27 -> m4_13  [key=2, style=dotted];
m4_9 -> m4_7  [key=0, style=bold, color=blue];
m4_15 -> m4_16  [key=0, style=solid];
m4_19 -> m4_20  [key=0, style=solid];
m4_17 -> m4_15  [key=0, style=bold, color=blue];
m4_21 -> m4_19  [key=0, style=bold, color=blue];
m4_28 -> m4_26  [key=0, style=bold, color=blue];
m4_32 -> m4_33  [key=0, style=solid];
m4_33 -> m4_31  [key=0, style=bold, color=blue];
m4_35 -> m4_36  [key=0, style=solid];
m4_36 -> m4_34  [key=0, style=bold, color=blue];
m4_38 -> m4_39  [key=0, style=solid];
m4_39 -> m4_37  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>"];
m4_0 -> m4_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m4_0 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>"];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_4  [key=2, style=dotted];
m4_1 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_4  [key=2, style=dotted];
m4_2 -> m4_5  [key=2, style=dotted];
m4_2 -> m4_6  [key=2, style=dotted];
m4_2 -> m4_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2 -> m4_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2 -> m4_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3 -> m4_0  [key=0, style=bold, color=blue];
m4_40 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>"];
m4_41 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>"];
m4_41 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>"];
m4_42 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m4_42 -> m4_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m4_43 -> m4_16  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m4_43 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m4_43 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_0 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label=char];
m5_0 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_0  [key=0, style=bold, color=blue];
m5_13 -> m5_14  [key=0, style=solid];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_0  [key=2, style=dotted];
m5_14 -> m5_9  [key=2, style=dotted];
m5_14 -> m5_16  [key=2, style=dotted];
m5_15 -> m5_13  [key=0, style=bold, color=blue];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_0  [key=2, style=dotted];
m5_7 -> m5_9  [key=2, style=dotted];
m5_7 -> m5_10  [key=2, style=dotted];
m5_7 -> m5_11  [key=2, style=dotted];
m5_7 -> m5_12  [key=2, style=dotted];
m5_8 -> m5_6  [key=0, style=bold, color=blue];
m5_17 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m5_17 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m5_17 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m5_17 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label=T];
m6_0 -> m6_0  [key=3, color=darkorchid, style=bold, label="Parameter variable T field"];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_2 -> m6_4  [key=0, style=solid];
m6_2 -> m6_5  [key=2, style=dotted];
m6_4 -> m6_0  [key=0, style=bold, color=blue];
m7_11 -> m7_12  [key=0, style=solid];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_7  [key=2, style=dotted];
m7_5 -> m7_8  [key=2, style=dotted];
m7_5 -> m7_9  [key=2, style=dotted];
m7_5 -> m7_10  [key=2, style=dotted];
m7_5 -> m7_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m7_12 -> m7_13  [key=0, style=solid];
m7_6 -> m7_4  [key=0, style=bold, color=blue];
m7_13 -> m7_11  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>"];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=2, style=dotted];
m7_1 -> m7_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_1 -> m7_1  [key=1, style=dashed, color=darkseagreen4, label=tseq];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m7_14 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>"];
m7_15 -> m7_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m7_16 -> m7_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m8_0 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=2, style=dotted];
m8_1 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_1 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label=tseq];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m8_36 -> m8_37  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_7  [key=2, style=dotted];
m8_5 -> m8_8  [key=2, style=dotted];
m8_5 -> m8_9  [key=2, style=dotted];
m8_5 -> m8_10  [key=2, style=dotted];
m8_5 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_14  [key=2, style=dotted];
m8_12 -> m8_15  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m8_6 -> m8_4  [key=0, style=bold, color=blue];
m8_11 -> m8_12  [key=0, style=solid];
m8_13 -> m8_11  [key=0, style=bold, color=blue];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_28  [key=2, style=dotted];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_23  [key=2, style=dotted];
m8_30 -> m8_24  [key=2, style=dotted];
m8_30 -> m8_10  [key=2, style=dotted];
m8_30 -> m8_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_30 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_23  [key=2, style=dotted];
m8_33 -> m8_35  [key=2, style=dotted];
m8_25 -> m8_26  [key=0, style=solid];
m8_29 -> m8_30  [key=0, style=solid];
m8_39 -> m8_40  [key=0, style=solid];
m8_27 -> m8_25  [key=0, style=bold, color=blue];
m8_31 -> m8_29  [key=0, style=bold, color=blue];
m8_32 -> m8_33  [key=0, style=solid];
m8_34 -> m8_32  [key=0, style=bold, color=blue];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_8  [key=2, style=dotted];
m8_38 -> m8_36  [key=0, style=bold, color=blue];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_8  [key=2, style=dotted];
m8_41 -> m8_39  [key=0, style=bold, color=blue];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m8_16 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m8_16 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m8_16 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_22  [key=2, style=dotted];
m8_17 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_17 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label=nameIndex];
m8_17 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label=nameIndex];
m8_17 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label=nameIndex];
m8_19 -> m8_21  [key=0, style=solid];
m8_19 -> m8_23  [key=2, style=dotted];
m8_19 -> m8_24  [key=2, style=dotted];
m8_19 -> m8_10  [key=2, style=dotted];
m8_19 -> m8_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_19 -> m8_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_20  [key=0, style=solid];
m8_20 -> m8_21  [key=0, style=solid];
m8_21 -> m8_16  [key=0, style=bold, color=blue];
m8_42 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m8_42 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m8_43 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>"];
m8_44 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m8_45 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m8_46 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m8_46 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m8_47 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.TypeDescriptor"];
m8_48 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label=nameIndex];
m8_48 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label=nameIndex];
m9_8 -> m9_9  [key=0, style=solid];
m9_3 -> m9_3  [key=3, color=green, style=bold, label="Local variable System.Action resetter"];
m9_3 -> m9_4  [key=0, style=solid, color=green];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_8  [key=2, style=dotted];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m9_0 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=2, style=dotted];
m9_1 -> m9_4  [key=2, style=dotted];
m9_1 -> m9_11  [key=1, style=dashed, color=green, label=currentCulutre];
m9_2 -> m9_0  [key=0, style=bold, color=blue];
m9_2 -> m9_3  [key=0, style=solid, color=green];
m9_2 -> m9_2  [key=3, color=darkorchid, style=bold, label="Local variable System.Action changer"];
m9_2 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label=changer];
m9_12 -> m9_10  [key=0, style=bold, color=blue];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_6  [key=2, style=dotted];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_7  [key=0, style=bold, color=blue];
m9_10 -> m9_11  [key=0, style=solid, color=green];
m9_10 -> m9_12  [key=2, style=dotted];
m9_11 -> m9_9  [key=0, style=bold, color=blue];
m9_11 -> m9_12  [key=0, style=solid, color=green];
m9_5 -> m9_0  [key=0, style=bold, color=blue];
m9_5 -> m9_6  [key=0, style=solid];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_16  [key=2, style=dotted];
m9_14 -> m9_11  [key=1, style=dashed, color=green, label=currentCulutre];
m9_15 -> m9_13  [key=0, style=bold, color=blue];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_5  [key=0, style=bold, color=blue];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_8  [key=0, style=solid];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_0  [key=2, style=dotted];
m10_7 -> m10_9  [key=0, style=solid];
m10_7 -> m10_10  [key=2, style=dotted];
m10_9 -> m10_5  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m10_0 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<object>"];
m10_1 -> m10_2  [key=0, style=solid];
m10_2 -> m10_3  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_4 -> m10_0  [key=0, style=bold, color=blue];
m10_11 -> m10_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m10_11 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m10_11 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m12_17 -> m12_18  [key=0, style=solid];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_20  [key=2, style=dotted];
m12_18 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_19 -> m12_17  [key=0, style=bold, color=blue];
m12_57 -> m12_58  [key=0, style=solid];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_63  [key=2, style=dotted];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_24  [key=2, style=dotted];
m12_59 -> m12_61  [key=1, style=dashed, color=darkseagreen4, label=service1];
m12_60 -> m12_61  [key=0, style=solid];
m12_60 -> m12_24  [key=2, style=dotted];
m12_61 -> m12_62  [key=0, style=solid];
m12_61 -> m12_32  [key=2, style=dotted];
m12_61 -> m12_64  [key=2, style=dotted];
m12_62 -> m12_57  [key=0, style=bold, color=blue];
m12_3 -> m12_4  [key=0, style=solid];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_9  [key=2, style=dotted];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_10  [key=2, style=dotted];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_11  [key=2, style=dotted];
m12_6 -> m12_12  [key=2, style=dotted];
m12_6 -> m12_13  [key=2, style=dotted];
m12_6 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_7 -> m12_8  [key=0, style=solid];
m12_8 -> m12_3  [key=0, style=bold, color=blue];
m12_114 -> m12_115  [key=0, style=solid];
m12_115 -> m12_116  [key=0, style=solid];
m12_115 -> m12_117  [key=2, style=dotted];
m12_115 -> m12_118  [key=2, style=dotted];
m12_116 -> m12_114  [key=0, style=bold, color=blue];
m12_100 -> m12_101  [key=0, style=solid];
m12_14 -> m12_15  [key=0, style=solid];
m12_15 -> m12_16  [key=0, style=solid];
m12_16 -> m12_14  [key=0, style=bold, color=blue];
m12_21 -> m12_22  [key=0, style=solid];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_24  [key=2, style=dotted];
m12_23 -> m12_21  [key=0, style=bold, color=blue];
m12_101 -> m12_102  [key=0, style=solid];
m12_101 -> m12_24  [key=2, style=dotted];
m12_102 -> m12_100  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=2, style=dotted];
m12_2 -> m12_0  [key=0, style=bold, color=blue];
m12_75 -> m12_76  [key=0, style=solid];
m12_76 -> m12_77  [key=0, style=solid];
m12_76 -> m12_31  [key=2, style=dotted];
m12_77 -> m12_78  [key=0, style=solid];
m12_77 -> m12_31  [key=2, style=dotted];
m12_78 -> m12_79  [key=0, style=solid];
m12_78 -> m12_72  [key=2, style=dotted];
m12_78 -> m12_73  [key=2, style=dotted];
m12_78 -> m12_80  [key=1, style=dashed, color=darkseagreen4, label=services];
m12_78 -> m12_81  [key=1, style=dashed, color=darkseagreen4, label=services];
m12_78 -> m12_82  [key=1, style=dashed, color=darkseagreen4, label=services];
m12_79 -> m12_80  [key=0, style=solid];
m12_79 -> m12_32  [key=2, style=dotted];
m12_79 -> m12_33  [key=2, style=dotted];
m12_80 -> m12_81  [key=0, style=solid];
m12_80 -> m12_32  [key=2, style=dotted];
m12_80 -> m12_74  [key=2, style=dotted];
m12_81 -> m12_82  [key=0, style=solid];
m12_81 -> m12_32  [key=2, style=dotted];
m12_81 -> m12_20  [key=2, style=dotted];
m12_82 -> m12_83  [key=0, style=solid];
m12_82 -> m12_32  [key=2, style=dotted];
m12_82 -> m12_20  [key=2, style=dotted];
m12_83 -> m12_75  [key=0, style=bold, color=blue];
m12_103 -> m12_104  [key=0, style=solid];
m12_104 -> m12_105  [key=0, style=solid];
m12_104 -> m12_31  [key=2, style=dotted];
m12_105 -> m12_106  [key=0, style=solid];
m12_105 -> m12_31  [key=2, style=dotted];
m12_106 -> m12_107  [key=0, style=solid];
m12_106 -> m12_72  [key=2, style=dotted];
m12_106 -> m12_73  [key=2, style=dotted];
m12_106 -> m12_108  [key=1, style=dashed, color=darkseagreen4, label=services];
m12_106 -> m12_110  [key=1, style=dashed, color=darkseagreen4, label=services];
m12_106 -> m12_111  [key=1, style=dashed, color=darkseagreen4, label=services];
m12_107 -> m12_108  [key=0, style=solid];
m12_107 -> m12_32  [key=2, style=dotted];
m12_107 -> m12_33  [key=2, style=dotted];
m12_108 -> m12_109  [key=0, style=solid];
m12_108 -> m12_32  [key=2, style=dotted];
m12_108 -> m12_74  [key=2, style=dotted];
m12_110 -> m12_111  [key=0, style=solid];
m12_110 -> m12_32  [key=2, style=dotted];
m12_110 -> m12_113  [key=2, style=dotted];
m12_111 -> m12_112  [key=0, style=solid];
m12_111 -> m12_32  [key=2, style=dotted];
m12_111 -> m12_113  [key=2, style=dotted];
m12_109 -> m12_110  [key=0, style=solid];
m12_109 -> m12_99  [key=2, style=dotted];
m12_112 -> m12_103  [key=0, style=bold, color=blue];
m12_41 -> m12_42  [key=0, style=solid];
m12_42 -> m12_43  [key=0, style=solid];
m12_42 -> m12_31  [key=2, style=dotted];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> m12_31  [key=2, style=dotted];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_31  [key=2, style=dotted];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_24  [key=2, style=dotted];
m12_45 -> m12_47  [key=1, style=dashed, color=darkseagreen4, label=asks];
m12_45 -> m12_48  [key=1, style=dashed, color=darkseagreen4, label=asks];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_32  [key=2, style=dotted];
m12_46 -> m12_33  [key=2, style=dotted];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> m12_32  [key=2, style=dotted];
m12_47 -> m12_33  [key=2, style=dotted];
m12_48 -> m12_49  [key=0, style=solid];
m12_48 -> m12_32  [key=2, style=dotted];
m12_48 -> m12_20  [key=2, style=dotted];
m12_49 -> m12_41  [key=0, style=bold, color=blue];
m12_50 -> m12_51  [key=0, style=solid];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_31  [key=2, style=dotted];
m12_52 -> m12_53  [key=0, style=solid];
m12_52 -> m12_24  [key=2, style=dotted];
m12_52 -> m12_54  [key=1, style=dashed, color=darkseagreen4, label=service1];
m12_53 -> m12_54  [key=0, style=solid];
m12_53 -> m12_24  [key=2, style=dotted];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_32  [key=2, style=dotted];
m12_54 -> m12_56  [key=2, style=dotted];
m12_55 -> m12_50  [key=0, style=bold, color=blue];
m12_92 -> m12_93  [key=0, style=solid];
m12_93 -> m12_94  [key=0, style=solid];
m12_93 -> m12_31  [key=2, style=dotted];
m12_94 -> m12_95  [key=0, style=solid];
m12_94 -> m12_24  [key=2, style=dotted];
m12_95 -> m12_96  [key=0, style=solid];
m12_95 -> m12_32  [key=2, style=dotted];
m12_95 -> m12_33  [key=2, style=dotted];
m12_96 -> m12_97  [key=0, style=solid];
m12_96 -> m12_99  [key=2, style=dotted];
m12_97 -> m12_98  [key=0, style=solid];
m12_97 -> m12_20  [key=2, style=dotted];
m12_97 -> m12_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_98 -> m12_92  [key=0, style=bold, color=blue];
m12_25 -> m12_26  [key=0, style=solid];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_31  [key=2, style=dotted];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_24  [key=2, style=dotted];
m12_27 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label=service];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_32  [key=2, style=dotted];
m12_28 -> m12_33  [key=2, style=dotted];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_32  [key=2, style=dotted];
m12_29 -> m12_20  [key=2, style=dotted];
m12_30 -> m12_25  [key=0, style=bold, color=blue];
m12_84 -> m12_85  [key=0, style=solid];
m12_85 -> m12_86  [key=0, style=solid];
m12_85 -> m12_31  [key=2, style=dotted];
m12_86 -> m12_87  [key=0, style=solid];
m12_86 -> m12_24  [key=2, style=dotted];
m12_86 -> m12_88  [key=1, style=dashed, color=darkseagreen4, label=service1];
m12_86 -> m12_90  [key=1, style=dashed, color=darkseagreen4, label=service1];
m12_87 -> m12_88  [key=0, style=solid];
m12_87 -> m12_24  [key=2, style=dotted];
m12_87 -> m12_89  [key=1, style=dashed, color=darkseagreen4, label=service2];
m12_87 -> m12_90  [key=1, style=dashed, color=darkseagreen4, label=service2];
m12_88 -> m12_89  [key=0, style=solid];
m12_88 -> m12_32  [key=2, style=dotted];
m12_88 -> m12_33  [key=2, style=dotted];
m12_90 -> m12_91  [key=0, style=solid];
m12_90 -> m12_32  [key=2, style=dotted];
m12_90 -> m12_56  [key=2, style=dotted];
m12_89 -> m12_90  [key=0, style=solid];
m12_89 -> m12_32  [key=2, style=dotted];
m12_89 -> m12_33  [key=2, style=dotted];
m12_91 -> m12_84  [key=0, style=bold, color=blue];
m12_34 -> m12_35  [key=0, style=solid];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_31  [key=2, style=dotted];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_31  [key=2, style=dotted];
m12_37 -> m12_38  [key=0, style=solid];
m12_37 -> m12_24  [key=2, style=dotted];
m12_37 -> m12_39  [key=1, style=dashed, color=darkseagreen4, label=service];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_32  [key=2, style=dotted];
m12_38 -> m12_33  [key=2, style=dotted];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_32  [key=2, style=dotted];
m12_39 -> m12_20  [key=2, style=dotted];
m12_40 -> m12_34  [key=0, style=bold, color=blue];
m12_65 -> m12_66  [key=0, style=solid];
m12_66 -> m12_67  [key=0, style=solid];
m12_66 -> m12_31  [key=2, style=dotted];
m12_67 -> m12_68  [key=0, style=solid];
m12_67 -> m12_72  [key=2, style=dotted];
m12_67 -> m12_73  [key=2, style=dotted];
m12_67 -> m12_69  [key=1, style=dashed, color=darkseagreen4, label=services];
m12_67 -> m12_70  [key=1, style=dashed, color=darkseagreen4, label=services];
m12_68 -> m12_69  [key=0, style=solid];
m12_68 -> m12_32  [key=2, style=dotted];
m12_68 -> m12_33  [key=2, style=dotted];
m12_69 -> m12_70  [key=0, style=solid];
m12_69 -> m12_32  [key=2, style=dotted];
m12_69 -> m12_74  [key=2, style=dotted];
m12_70 -> m12_71  [key=0, style=solid];
m12_70 -> m12_32  [key=2, style=dotted];
m12_70 -> m12_20  [key=2, style=dotted];
m12_71 -> m12_65  [key=0, style=bold, color=blue];
m12_119 -> m12_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext"];
m12_119 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext"];
m12_119 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext"];
m12_119 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext"];
m12_119 -> m12_7  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext"];
m12_120 -> m12_18  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m12_120 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m12_120 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m12_120 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m12_120 -> m12_35  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m12_120 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m12_120 -> m12_37  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m12_120 -> m12_42  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m12_120 -> m12_43  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m12_120 -> m12_44  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m12_120 -> m12_45  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m12_120 -> m12_51  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m12_120 -> m12_52  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m12_120 -> m12_53  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m12_120 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m12_120 -> m12_59  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m12_120 -> m12_60  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m12_121 -> m12_66  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m12_121 -> m12_67  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m12_121 -> m12_76  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m12_121 -> m12_77  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m12_121 -> m12_78  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m12_121 -> m12_85  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m12_121 -> m12_86  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m12_121 -> m12_87  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m12_122 -> m12_93  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m12_122 -> m12_94  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m12_122 -> m12_96  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m12_122 -> m12_97  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m12_122 -> m12_101  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m12_122 -> m12_104  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m12_122 -> m12_105  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m12_122 -> m12_106  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m12_122 -> m12_109  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m12_123 -> m12_115  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.AsksForEnumerable"];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_3  [key=2, style=dotted];
m13_1 -> m13_4  [key=2, style=dotted];
m13_1 -> m13_1  [key=1, style=dashed, color=darkseagreen4, label=t];
m13_1 -> m13_5  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1 -> m13_6  [key=1, style=dashed, color=darkseagreen4, label=t];
m13_2 -> m13_0  [key=0, style=bold, color=blue];
m13_5 -> m13_6  [key=0, style=solid];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_8  [key=2, style=dotted];
m13_7 -> m13_5  [key=0, style=bold, color=blue];
m13_9 -> m13_6  [key=1, style=dashed, color=darkseagreen4, label=t];
m14_17 -> m14_18  [key=0, style=solid];
m14_18 -> m14_19  [key=0, style=solid];
m14_18 -> m14_20  [key=2, style=dotted];
m14_18 -> m14_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_19 -> m14_17  [key=0, style=bold, color=blue];
m14_57 -> m14_58  [key=0, style=solid];
m14_58 -> m14_59  [key=0, style=solid];
m14_58 -> m14_63  [key=2, style=dotted];
m14_59 -> m14_60  [key=0, style=solid];
m14_59 -> m14_24  [key=2, style=dotted];
m14_59 -> m14_61  [key=1, style=dashed, color=darkseagreen4, label=service1];
m14_60 -> m14_61  [key=0, style=solid];
m14_60 -> m14_24  [key=2, style=dotted];
m14_61 -> m14_62  [key=0, style=solid];
m14_61 -> m14_32  [key=2, style=dotted];
m14_61 -> m14_64  [key=2, style=dotted];
m14_62 -> m14_57  [key=0, style=bold, color=blue];
m14_3 -> m14_4  [key=0, style=solid];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_9  [key=2, style=dotted];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_10  [key=2, style=dotted];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_11  [key=2, style=dotted];
m14_6 -> m14_12  [key=2, style=dotted];
m14_6 -> m14_13  [key=2, style=dotted];
m14_6 -> m14_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_7 -> m14_8  [key=0, style=solid];
m14_8 -> m14_3  [key=0, style=bold, color=blue];
m14_114 -> m14_115  [key=0, style=solid];
m14_115 -> m14_116  [key=0, style=solid];
m14_115 -> m14_117  [key=2, style=dotted];
m14_115 -> m14_118  [key=2, style=dotted];
m14_116 -> m14_114  [key=0, style=bold, color=blue];
m14_100 -> m14_101  [key=0, style=solid];
m14_14 -> m14_15  [key=0, style=solid];
m14_15 -> m14_16  [key=0, style=solid];
m14_16 -> m14_14  [key=0, style=bold, color=blue];
m14_21 -> m14_22  [key=0, style=solid];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_24  [key=2, style=dotted];
m14_23 -> m14_21  [key=0, style=bold, color=blue];
m14_101 -> m14_102  [key=0, style=solid];
m14_101 -> m14_24  [key=2, style=dotted];
m14_102 -> m14_100  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=2, style=dotted];
m14_2 -> m14_0  [key=0, style=bold, color=blue];
m14_75 -> m14_76  [key=0, style=solid];
m14_76 -> m14_77  [key=0, style=solid];
m14_76 -> m14_31  [key=2, style=dotted];
m14_77 -> m14_78  [key=0, style=solid];
m14_77 -> m14_31  [key=2, style=dotted];
m14_78 -> m14_79  [key=0, style=solid];
m14_78 -> m14_72  [key=2, style=dotted];
m14_78 -> m14_73  [key=2, style=dotted];
m14_78 -> m14_80  [key=1, style=dashed, color=darkseagreen4, label=services];
m14_78 -> m14_81  [key=1, style=dashed, color=darkseagreen4, label=services];
m14_78 -> m14_82  [key=1, style=dashed, color=darkseagreen4, label=services];
m14_79 -> m14_80  [key=0, style=solid];
m14_79 -> m14_32  [key=2, style=dotted];
m14_79 -> m14_33  [key=2, style=dotted];
m14_80 -> m14_81  [key=0, style=solid];
m14_80 -> m14_32  [key=2, style=dotted];
m14_80 -> m14_74  [key=2, style=dotted];
m14_81 -> m14_82  [key=0, style=solid];
m14_81 -> m14_32  [key=2, style=dotted];
m14_81 -> m14_20  [key=2, style=dotted];
m14_82 -> m14_83  [key=0, style=solid];
m14_82 -> m14_32  [key=2, style=dotted];
m14_82 -> m14_20  [key=2, style=dotted];
m14_83 -> m14_75  [key=0, style=bold, color=blue];
m14_103 -> m14_104  [key=0, style=solid];
m14_104 -> m14_105  [key=0, style=solid];
m14_104 -> m14_31  [key=2, style=dotted];
m14_105 -> m14_106  [key=0, style=solid];
m14_105 -> m14_31  [key=2, style=dotted];
m14_106 -> m14_107  [key=0, style=solid];
m14_106 -> m14_72  [key=2, style=dotted];
m14_106 -> m14_73  [key=2, style=dotted];
m14_106 -> m14_108  [key=1, style=dashed, color=darkseagreen4, label=services];
m14_106 -> m14_110  [key=1, style=dashed, color=darkseagreen4, label=services];
m14_106 -> m14_111  [key=1, style=dashed, color=darkseagreen4, label=services];
m14_107 -> m14_108  [key=0, style=solid];
m14_107 -> m14_32  [key=2, style=dotted];
m14_107 -> m14_33  [key=2, style=dotted];
m14_108 -> m14_109  [key=0, style=solid];
m14_108 -> m14_32  [key=2, style=dotted];
m14_108 -> m14_74  [key=2, style=dotted];
m14_110 -> m14_111  [key=0, style=solid];
m14_110 -> m14_32  [key=2, style=dotted];
m14_110 -> m14_113  [key=2, style=dotted];
m14_111 -> m14_112  [key=0, style=solid];
m14_111 -> m14_32  [key=2, style=dotted];
m14_111 -> m14_113  [key=2, style=dotted];
m14_109 -> m14_110  [key=0, style=solid];
m14_109 -> m14_99  [key=2, style=dotted];
m14_112 -> m14_103  [key=0, style=bold, color=blue];
m14_41 -> m14_42  [key=0, style=solid];
m14_42 -> m14_43  [key=0, style=solid];
m14_42 -> m14_31  [key=2, style=dotted];
m14_43 -> m14_44  [key=0, style=solid];
m14_43 -> m14_31  [key=2, style=dotted];
m14_44 -> m14_45  [key=0, style=solid];
m14_44 -> m14_31  [key=2, style=dotted];
m14_45 -> m14_46  [key=0, style=solid];
m14_45 -> m14_24  [key=2, style=dotted];
m14_45 -> m14_47  [key=1, style=dashed, color=darkseagreen4, label=asks];
m14_45 -> m14_48  [key=1, style=dashed, color=darkseagreen4, label=asks];
m14_46 -> m14_47  [key=0, style=solid];
m14_46 -> m14_32  [key=2, style=dotted];
m14_46 -> m14_33  [key=2, style=dotted];
m14_47 -> m14_48  [key=0, style=solid];
m14_47 -> m14_32  [key=2, style=dotted];
m14_47 -> m14_33  [key=2, style=dotted];
m14_48 -> m14_49  [key=0, style=solid];
m14_48 -> m14_32  [key=2, style=dotted];
m14_48 -> m14_20  [key=2, style=dotted];
m14_49 -> m14_41  [key=0, style=bold, color=blue];
m14_50 -> m14_51  [key=0, style=solid];
m14_51 -> m14_52  [key=0, style=solid];
m14_51 -> m14_31  [key=2, style=dotted];
m14_52 -> m14_53  [key=0, style=solid];
m14_52 -> m14_24  [key=2, style=dotted];
m14_52 -> m14_54  [key=1, style=dashed, color=darkseagreen4, label=service1];
m14_53 -> m14_54  [key=0, style=solid];
m14_53 -> m14_24  [key=2, style=dotted];
m14_54 -> m14_55  [key=0, style=solid];
m14_54 -> m14_32  [key=2, style=dotted];
m14_54 -> m14_56  [key=2, style=dotted];
m14_55 -> m14_50  [key=0, style=bold, color=blue];
m14_92 -> m14_93  [key=0, style=solid];
m14_93 -> m14_94  [key=0, style=solid];
m14_93 -> m14_31  [key=2, style=dotted];
m14_94 -> m14_95  [key=0, style=solid];
m14_94 -> m14_24  [key=2, style=dotted];
m14_95 -> m14_96  [key=0, style=solid];
m14_95 -> m14_32  [key=2, style=dotted];
m14_95 -> m14_33  [key=2, style=dotted];
m14_96 -> m14_97  [key=0, style=solid];
m14_96 -> m14_99  [key=2, style=dotted];
m14_97 -> m14_98  [key=0, style=solid];
m14_97 -> m14_20  [key=2, style=dotted];
m14_97 -> m14_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_98 -> m14_92  [key=0, style=bold, color=blue];
m14_25 -> m14_26  [key=0, style=solid];
m14_26 -> m14_27  [key=0, style=solid];
m14_26 -> m14_31  [key=2, style=dotted];
m14_27 -> m14_28  [key=0, style=solid];
m14_27 -> m14_24  [key=2, style=dotted];
m14_27 -> m14_29  [key=1, style=dashed, color=darkseagreen4, label=service];
m14_28 -> m14_29  [key=0, style=solid];
m14_28 -> m14_32  [key=2, style=dotted];
m14_28 -> m14_33  [key=2, style=dotted];
m14_29 -> m14_30  [key=0, style=solid];
m14_29 -> m14_32  [key=2, style=dotted];
m14_29 -> m14_20  [key=2, style=dotted];
m14_30 -> m14_25  [key=0, style=bold, color=blue];
m14_84 -> m14_85  [key=0, style=solid];
m14_85 -> m14_86  [key=0, style=solid];
m14_85 -> m14_31  [key=2, style=dotted];
m14_86 -> m14_87  [key=0, style=solid];
m14_86 -> m14_24  [key=2, style=dotted];
m14_86 -> m14_88  [key=1, style=dashed, color=darkseagreen4, label=service1];
m14_86 -> m14_90  [key=1, style=dashed, color=darkseagreen4, label=service1];
m14_87 -> m14_88  [key=0, style=solid];
m14_87 -> m14_24  [key=2, style=dotted];
m14_87 -> m14_89  [key=1, style=dashed, color=darkseagreen4, label=service2];
m14_87 -> m14_90  [key=1, style=dashed, color=darkseagreen4, label=service2];
m14_88 -> m14_89  [key=0, style=solid];
m14_88 -> m14_32  [key=2, style=dotted];
m14_88 -> m14_33  [key=2, style=dotted];
m14_90 -> m14_91  [key=0, style=solid];
m14_90 -> m14_32  [key=2, style=dotted];
m14_90 -> m14_56  [key=2, style=dotted];
m14_89 -> m14_90  [key=0, style=solid];
m14_89 -> m14_32  [key=2, style=dotted];
m14_89 -> m14_33  [key=2, style=dotted];
m14_91 -> m14_84  [key=0, style=bold, color=blue];
m14_34 -> m14_35  [key=0, style=solid];
m14_35 -> m14_36  [key=0, style=solid];
m14_35 -> m14_31  [key=2, style=dotted];
m14_36 -> m14_37  [key=0, style=solid];
m14_36 -> m14_31  [key=2, style=dotted];
m14_37 -> m14_38  [key=0, style=solid];
m14_37 -> m14_24  [key=2, style=dotted];
m14_37 -> m14_39  [key=1, style=dashed, color=darkseagreen4, label=service];
m14_38 -> m14_39  [key=0, style=solid];
m14_38 -> m14_32  [key=2, style=dotted];
m14_38 -> m14_33  [key=2, style=dotted];
m14_39 -> m14_40  [key=0, style=solid];
m14_39 -> m14_32  [key=2, style=dotted];
m14_39 -> m14_20  [key=2, style=dotted];
m14_40 -> m14_34  [key=0, style=bold, color=blue];
m14_65 -> m14_66  [key=0, style=solid];
m14_66 -> m14_67  [key=0, style=solid];
m14_66 -> m14_31  [key=2, style=dotted];
m14_67 -> m14_68  [key=0, style=solid];
m14_67 -> m14_72  [key=2, style=dotted];
m14_67 -> m14_73  [key=2, style=dotted];
m14_67 -> m14_69  [key=1, style=dashed, color=darkseagreen4, label=services];
m14_67 -> m14_70  [key=1, style=dashed, color=darkseagreen4, label=services];
m14_68 -> m14_69  [key=0, style=solid];
m14_68 -> m14_32  [key=2, style=dotted];
m14_68 -> m14_33  [key=2, style=dotted];
m14_69 -> m14_70  [key=0, style=solid];
m14_69 -> m14_32  [key=2, style=dotted];
m14_69 -> m14_74  [key=2, style=dotted];
m14_70 -> m14_71  [key=0, style=solid];
m14_70 -> m14_32  [key=2, style=dotted];
m14_70 -> m14_20  [key=2, style=dotted];
m14_71 -> m14_65  [key=0, style=bold, color=blue];
m14_119 -> m14_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext"];
m14_119 -> m14_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext"];
m14_119 -> m14_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext"];
m14_119 -> m14_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext"];
m14_119 -> m14_7  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.ComponentContainerContext"];
m14_120 -> m14_18  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m14_120 -> m14_22  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m14_120 -> m14_26  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m14_120 -> m14_27  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m14_120 -> m14_35  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m14_120 -> m14_36  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m14_120 -> m14_37  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m14_120 -> m14_42  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m14_120 -> m14_43  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m14_120 -> m14_44  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m14_120 -> m14_45  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m14_120 -> m14_51  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m14_120 -> m14_52  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m14_120 -> m14_53  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m14_120 -> m14_58  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m14_120 -> m14_59  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m14_120 -> m14_60  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetIsCalled"];
m14_121 -> m14_66  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m14_121 -> m14_67  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m14_121 -> m14_76  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m14_121 -> m14_77  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m14_121 -> m14_78  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m14_121 -> m14_85  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m14_121 -> m14_86  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m14_121 -> m14_87  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenGetAllIsCalledOnComponentContainer"];
m14_122 -> m14_93  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m14_122 -> m14_94  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m14_122 -> m14_96  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m14_122 -> m14_97  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m14_122 -> m14_101  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m14_122 -> m14_104  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m14_122 -> m14_105  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m14_122 -> m14_106  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m14_122 -> m14_109  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.WhenRemoveAllIsCalled"];
m14_123 -> m14_115  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.ComponentContainerTests.AsksForEnumerable"];
m15_3 -> m15_7  [key=0, style=solid];
m15_3 -> m15_9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m15_3 -> m15_10  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>"];
m15_3 -> m15_11  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CommandLine.Core.NameLookupResult>"];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_14  [key=2, style=dotted];
m15_7 -> m15_12  [key=1, style=dashed, color=darkseagreen4, label=errors];
m15_9 -> m15_10  [key=0, style=solid];
m15_9 -> m15_15  [key=2, style=dotted];
m15_9 -> m15_16  [key=2, style=dotted];
m15_9 -> m15_17  [key=2, style=dotted];
m15_9 -> m15_18  [key=2, style=dotted];
m15_9 -> m15_19  [key=2, style=dotted];
m15_9 -> m15_9  [key=1, style=dashed, color=darkseagreen4, label=arg];
m15_10 -> m15_11  [key=0, style=solid];
m15_10 -> m15_20  [key=2, style=dotted];
m15_10 -> m15_12  [key=1, style=dashed, color=darkseagreen4, label=normalized];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_21  [key=2, style=dotted];
m15_11 -> m15_22  [key=2, style=dotted];
m15_11 -> m15_19  [key=2, style=dotted];
m15_11 -> m15_11  [key=1, style=dashed, color=darkseagreen4, label=t];
m15_11 -> m15_28  [key=1, style=dashed, color=darkseagreen4, label=unkTokens];
m15_8 -> m15_9  [key=0, style=solid];
m15_12 -> m15_13  [key=0, style=solid];
m15_12 -> m15_23  [key=2, style=dotted];
m15_12 -> m15_24  [key=2, style=dotted];
m15_12 -> m15_25  [key=2, style=dotted];
m15_12 -> m15_26  [key=2, style=dotted];
m15_12 -> m15_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_12 -> m15_12  [key=1, style=dashed, color=darkseagreen4, label=t];
m15_13 -> m15_3  [key=0, style=bold, color=blue];
m15_31 -> m15_32  [key=0, style=solid];
m15_31 -> m15_33  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m15_31 -> m15_34  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m15_31 -> m15_36  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m15_32 -> m15_33  [key=0, style=solid];
m15_32 -> m15_36  [key=0, style=solid];
m15_32 -> m15_38  [key=2, style=dotted];
m15_32 -> m15_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_33 -> m15_34  [key=0, style=solid];
m15_33 -> m15_39  [key=2, style=dotted];
m15_33 -> m15_22  [key=2, style=dotted];
m15_33 -> m15_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_33 -> m15_35  [key=1, style=dashed, color=darkseagreen4, label=tokenizerResult];
m15_34 -> m15_35  [key=0, style=solid];
m15_34 -> m15_40  [key=2, style=dotted];
m15_34 -> m15_41  [key=2, style=dotted];
m15_34 -> m15_42  [key=2, style=dotted];
m15_34 -> m15_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_34 -> m15_55  [key=1, style=dashed, color=darkseagreen4, label=values];
m15_36 -> m15_37  [key=0, style=solid];
m15_36 -> m15_22  [key=2, style=dotted];
m15_35 -> m15_37  [key=0, style=solid];
m15_35 -> m15_43  [key=2, style=dotted];
m15_35 -> m15_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_37 -> m15_31  [key=0, style=bold, color=blue];
m15_97 -> m15_98  [key=0, style=solid];
m15_97 -> m15_106  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m15_97 -> m15_107  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, bool>"];
m15_97 -> m15_115  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, bool>"];
m15_97 -> m15_99  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m15_97 -> m15_100  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m15_98 -> m15_99  [key=0, style=solid];
m15_98 -> m15_42  [key=2, style=dotted];
m15_98 -> m15_23  [key=2, style=dotted];
m15_98 -> m15_103  [key=2, style=dotted];
m15_98 -> m15_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_98 -> m15_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_98 -> m15_98  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_98 -> m15_124  [key=1, style=dashed, color=darkseagreen4, label=indexes];
m15_99 -> m15_100  [key=0, style=solid];
m15_99 -> m15_42  [key=2, style=dotted];
m15_99 -> m15_23  [key=2, style=dotted];
m15_99 -> m15_103  [key=2, style=dotted];
m15_99 -> m15_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_99 -> m15_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_99 -> m15_99  [key=1, style=dashed, color=darkseagreen4, label=t];
m15_100 -> m15_101  [key=0, style=solid];
m15_100 -> m15_104  [key=2, style=dotted];
m15_101 -> m15_102  [key=0, style=solid];
m15_102 -> m15_97  [key=0, style=bold, color=blue];
m15_18 -> m15_129  [key=0, style=solid];
m15_18 -> m15_132  [key=0, style=bold, color=crimson];
m15_18 -> m15_133  [key=0, style=bold, color=crimson];
m15_18 -> m15_135  [key=0, style=bold, color=crimson];
m15_18 -> m15_136  [key=0, style=bold, color=crimson];
m15_18 -> m15_143  [key=0, style=bold, color=crimson];
m15_18 -> m15_146  [key=0, style=bold, color=crimson];
m15_18 -> m15_130  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_18 -> m15_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_18 -> m15_140  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CommandLine.Core.NameLookupResult>"];
m15_129 -> m15_130  [key=0, style=solid];
m15_129 -> m15_147  [key=0, style=solid];
m15_132 -> m15_133  [key=0, style=solid];
m15_132 -> m15_16  [key=2, style=dotted];
m15_133 -> m15_134  [key=0, style=solid];
m15_135 -> m15_136  [key=0, style=solid];
m15_135 -> m15_150  [key=2, style=dotted];
m15_136 -> m15_137  [key=0, style=solid];
m15_143 -> m15_144  [key=0, style=solid];
m15_143 -> m15_150  [key=2, style=dotted];
m15_146 -> m15_147  [key=0, style=solid];
m15_146 -> m15_148  [key=2, style=dotted];
m15_146 -> m15_16  [key=2, style=dotted];
m15_130 -> m15_131  [key=0, style=solid];
m15_130 -> m15_148  [key=2, style=dotted];
m15_130 -> m15_135  [key=1, style=dashed, color=darkseagreen4, label=text];
m15_130 -> m15_138  [key=1, style=dashed, color=darkseagreen4, label=text];
m15_130 -> m15_145  [key=1, style=dashed, color=darkseagreen4, label=text];
m15_130 -> m15_146  [key=1, style=dashed, color=darkseagreen4, label=text];
m15_134 -> m15_135  [key=0, style=solid];
m15_134 -> m15_137  [key=0, style=solid];
m15_140 -> m15_141  [key=0, style=solid];
m15_140 -> m15_22  [key=2, style=dotted];
m15_140 -> m15_144  [key=1, style=dashed, color=darkseagreen4, label=r];
m15_131 -> m15_132  [key=0, style=solid];
m15_131 -> m15_134  [key=0, style=solid];
m15_131 -> m15_149  [key=2, style=dotted];
m15_138 -> m15_139  [key=0, style=solid];
m15_138 -> m15_145  [key=0, style=solid];
m15_145 -> m15_146  [key=0, style=solid];
m15_145 -> m15_147  [key=0, style=solid];
m15_137 -> m15_138  [key=0, style=solid];
m15_137 -> m15_141  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_137 -> m15_142  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_137 -> m15_145  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_137 -> m15_146  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_137 -> m15_137  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m15_141 -> m15_142  [key=0, style=solid];
m15_141 -> m15_145  [key=0, style=solid];
m15_142 -> m15_143  [key=0, style=solid];
m15_142 -> m15_142  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_142 -> m15_145  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_142 -> m15_146  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_139 -> m15_140  [key=0, style=solid];
m15_139 -> m15_151  [key=2, style=dotted];
m15_139 -> m15_143  [key=1, style=dashed, color=darkseagreen4, label=n];
m15_144 -> m15_138  [key=0, style=solid];
m15_144 -> m15_145  [key=0, style=solid];
m15_147 -> m15_18  [key=0, style=bold, color=blue];
m15_57 -> m15_58  [key=0, style=solid];
m15_57 -> m15_59  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CSharpx.Maybe<char>>"];
m15_57 -> m15_69  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CSharpx.Maybe<char>>"];
m15_57 -> m15_62  [key=1, style=dashed, color=darkseagreen4, label="RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>"];
m15_58 -> m15_59  [key=0, style=solid];
m15_58 -> m15_64  [key=2, style=dotted];
m15_58 -> m15_60  [key=1, style=dashed, color=darkseagreen4, label=tokens];
m15_59 -> m15_60  [key=0, style=solid];
m15_59 -> m15_42  [key=2, style=dotted];
m15_59 -> m15_65  [key=2, style=dotted];
m15_59 -> m15_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_59 -> m15_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_59 -> m15_81  [key=1, style=dashed, color=darkseagreen4, label=replaces];
m15_62 -> m15_63  [key=0, style=solid];
m15_62 -> m15_67  [key=2, style=dotted];
m15_62 -> m15_26  [key=2, style=dotted];
m15_60 -> m15_61  [key=0, style=solid];
m15_60 -> m15_42  [key=2, style=dotted];
m15_60 -> m15_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_61 -> m15_62  [key=0, style=solid];
m15_61 -> m15_66  [key=2, style=dotted];
m15_61 -> m15_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_63 -> m15_57  [key=0, style=bold, color=blue];
m15_114 -> m15_115  [key=0, style=solid];
m15_4 -> m15_5  [key=0, style=solid];
m15_5 -> m15_6  [key=0, style=solid];
m15_6 -> m15_4  [key=0, style=bold, color=blue];
m15_28 -> m15_29  [key=0, style=solid];
m15_28 -> m15_30  [key=2, style=dotted];
m15_27 -> m15_28  [key=0, style=solid];
m15_29 -> m15_27  [key=0, style=bold, color=blue];
m15_44 -> m15_45  [key=0, style=solid];
m15_48 -> m15_49  [key=0, style=solid];
m15_51 -> m15_52  [key=0, style=solid];
m15_55 -> m15_56  [key=0, style=solid];
m15_55 -> m15_25  [key=2, style=dotted];
m15_54 -> m15_55  [key=0, style=solid];
m15_45 -> m15_46  [key=0, style=solid];
m15_45 -> m15_47  [key=2, style=dotted];
m15_46 -> m15_44  [key=0, style=bold, color=blue];
m15_49 -> m15_50  [key=0, style=solid];
m15_49 -> m15_47  [key=2, style=dotted];
m15_50 -> m15_48  [key=0, style=bold, color=blue];
m15_52 -> m15_53  [key=0, style=solid];
m15_52 -> m15_47  [key=2, style=dotted];
m15_53 -> m15_51  [key=0, style=bold, color=blue];
m15_56 -> m15_54  [key=0, style=bold, color=blue];
m15_69 -> m15_70  [key=0, style=solid];
m15_69 -> m15_22  [key=2, style=dotted];
m15_69 -> m15_71  [key=2, style=dotted];
m15_69 -> m15_72  [key=2, style=dotted];
m15_69 -> m15_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_68 -> m15_69  [key=0, style=solid];
m15_68 -> m15_74  [key=1, style=dashed, color=darkseagreen4, label=int];
m15_77 -> m15_78  [key=0, style=solid];
m15_81 -> m15_82  [key=0, style=solid];
m15_81 -> m15_83  [key=2, style=dotted];
m15_81 -> m15_84  [key=2, style=dotted];
m15_81 -> m15_85  [key=2, style=dotted];
m15_81 -> m15_86  [key=2, style=dotted];
m15_81 -> m15_72  [key=2, style=dotted];
m15_81 -> m15_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_81 -> m15_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_80 -> m15_81  [key=0, style=solid];
m15_80 -> m15_88  [key=1, style=dashed, color=darkseagreen4, label=int];
m15_80 -> m15_91  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m15_94 -> m15_95  [key=0, style=solid];
m15_74 -> m15_75  [key=0, style=solid];
m15_74 -> m15_76  [key=2, style=dotted];
m15_70 -> m15_68  [key=0, style=bold, color=blue];
m15_73 -> m15_74  [key=0, style=solid];
m15_75 -> m15_73  [key=0, style=bold, color=blue];
m15_78 -> m15_79  [key=0, style=solid];
m15_79 -> m15_77  [key=0, style=bold, color=blue];
m15_88 -> m15_89  [key=0, style=solid];
m15_91 -> m15_92  [key=0, style=solid];
m15_91 -> m15_93  [key=2, style=dotted];
m15_91 -> m15_42  [key=2, style=dotted];
m15_82 -> m15_80  [key=0, style=bold, color=blue];
m15_87 -> m15_88  [key=0, style=solid];
m15_90 -> m15_91  [key=0, style=solid];
m15_89 -> m15_87  [key=0, style=bold, color=blue];
m15_92 -> m15_90  [key=0, style=bold, color=blue];
m15_95 -> m15_96  [key=0, style=solid];
m15_96 -> m15_94  [key=0, style=bold, color=blue];
m15_106 -> m15_107  [key=0, style=solid];
m15_106 -> m15_109  [key=2, style=dotted];
m15_106 -> m15_110  [key=2, style=dotted];
m15_107 -> m15_108  [key=0, style=solid];
m15_107 -> m15_111  [key=2, style=dotted];
m15_107 -> m15_72  [key=2, style=dotted];
m15_107 -> m15_112  [key=2, style=dotted];
m15_107 -> m15_113  [key=2, style=dotted];
m15_107 -> m15_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_115 -> m15_116  [key=0, style=solid];
m15_115 -> m15_117  [key=2, style=dotted];
m15_115 -> m15_118  [key=2, style=dotted];
m15_105 -> m15_106  [key=0, style=solid];
m15_105 -> m15_107  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m15_119 -> m15_120  [key=0, style=solid];
m15_124 -> m15_125  [key=0, style=solid];
m15_124 -> m15_30  [key=2, style=dotted];
m15_124 -> m15_112  [key=2, style=dotted];
m15_124 -> m15_113  [key=2, style=dotted];
m15_123 -> m15_124  [key=0, style=solid];
m15_126 -> m15_127  [key=0, style=solid];
m15_108 -> m15_105  [key=0, style=bold, color=blue];
m15_116 -> m15_114  [key=0, style=bold, color=blue];
m15_120 -> m15_121  [key=0, style=solid];
m15_120 -> m15_122  [key=2, style=dotted];
m15_121 -> m15_119  [key=0, style=bold, color=blue];
m15_125 -> m15_123  [key=0, style=bold, color=blue];
m15_127 -> m15_128  [key=0, style=solid];
m15_127 -> m15_122  [key=2, style=dotted];
m15_128 -> m15_126  [key=0, style=bold, color=blue];
m15_17 -> m15_152  [key=0, style=solid];
m15_17 -> m15_156  [key=0, style=bold, color=crimson];
m15_17 -> m15_157  [key=0, style=bold, color=crimson];
m15_17 -> m15_160  [key=0, style=bold, color=crimson];
m15_17 -> m15_162  [key=0, style=bold, color=crimson];
m15_17 -> m15_163  [key=0, style=bold, color=crimson];
m15_17 -> m15_153  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_17 -> m15_159  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_152 -> m15_153  [key=0, style=solid];
m15_152 -> m15_164  [key=0, style=solid];
m15_152 -> m15_15  [key=2, style=dotted];
m15_156 -> m15_157  [key=0, style=solid];
m15_156 -> m15_150  [key=2, style=dotted];
m15_157 -> m15_158  [key=0, style=solid];
m15_160 -> m15_161  [key=0, style=solid];
m15_162 -> m15_163  [key=0, style=solid];
m15_162 -> m15_150  [key=2, style=dotted];
m15_163 -> m15_164  [key=0, style=solid];
m15_163 -> m15_169  [key=2, style=dotted];
m15_153 -> m15_154  [key=0, style=solid];
m15_153 -> m15_148  [key=2, style=dotted];
m15_153 -> m15_156  [key=1, style=dashed, color=darkseagreen4, label=text];
m15_153 -> m15_161  [key=1, style=dashed, color=darkseagreen4, label=text];
m15_159 -> m15_160  [key=0, style=solid];
m15_159 -> m15_166  [key=2, style=dotted];
m15_159 -> m15_167  [key=2, style=dotted];
m15_154 -> m15_155  [key=0, style=solid];
m15_154 -> m15_165  [key=2, style=dotted];
m15_154 -> m15_158  [key=1, style=dashed, color=darkseagreen4, label=equalIndex];
m15_161 -> m15_162  [key=0, style=solid];
m15_161 -> m15_168  [key=2, style=dotted];
m15_161 -> m15_163  [key=1, style=dashed, color=darkseagreen4, label=parts];
m15_155 -> m15_156  [key=0, style=solid];
m15_155 -> m15_158  [key=0, style=solid];
m15_158 -> m15_159  [key=0, style=solid];
m15_158 -> m15_161  [key=0, style=solid];
m15_164 -> m15_17  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_3  [key=3, color=darkorchid, style=bold, label="method methodReturn RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error> Tokenize"];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_3  [key=2, style=dotted];
m15_1 -> m15_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_2 -> m15_0  [key=0, style=bold, color=blue];
m15_170 -> m15_28  [key=1, style=dashed, color=darkseagreen4, label=unkTokens];
m15_171 -> m15_55  [key=1, style=dashed, color=darkseagreen4, label=values];
m15_172 -> m15_69  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CSharpx.Maybe<char>>"];
m15_173 -> m15_74  [key=1, style=dashed, color=darkseagreen4, label=int];
m15_174 -> m15_81  [key=1, style=dashed, color=darkseagreen4, label=replaces];
m15_175 -> m15_88  [key=1, style=dashed, color=darkseagreen4, label=int];
m15_176 -> m15_91  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m15_177 -> m15_106  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m15_178 -> m15_107  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, bool>"];
m15_178 -> m15_115  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, bool>"];
m15_179 -> m15_124  [key=1, style=dashed, color=darkseagreen4, label=indexes];
m16_0 -> m16_1  [key=0, style=solid];
m16_0 -> m16_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m16_0 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m16_1 -> m16_2  [key=0, style=solid];
m16_2 -> m16_3  [key=0, style=solid];
m16_3 -> m16_4  [key=0, style=solid];
m16_4 -> m16_0  [key=0, style=bold, color=blue];
m16_5 -> m16_6  [key=0, style=solid];
m16_6 -> m16_7  [key=0, style=solid];
m16_6 -> m16_0  [key=2, style=dotted];
m16_7 -> m16_5  [key=0, style=bold, color=blue];
m16_8 -> m16_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.TokenPartitions"];
m16_8 -> m16_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.TokenPartitions"];
m16_8 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.TokenPartitions"];
m17_44 -> m17_45  [key=0, style=solid];
m17_45 -> m17_46  [key=0, style=solid];
m17_45 -> m17_50  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m17_46 -> m17_47  [key=0, style=solid];
m17_47 -> m17_48  [key=0, style=solid];
m17_47 -> m17_14  [key=2, style=dotted];
m17_48 -> m17_44  [key=0, style=bold, color=blue];
m17_15 -> m17_16  [key=0, style=solid];
m17_16 -> m17_17  [key=0, style=solid];
m17_16 -> m17_22  [key=2, style=dotted];
m17_16 -> m17_24  [key=1, style=dashed, color=darkseagreen4, label=constantProvider];
m17_17 -> m17_18  [key=0, style=solid];
m17_18 -> m17_19  [key=0, style=solid];
m17_19 -> m17_20  [key=0, style=solid];
m17_20 -> m17_21  [key=0, style=solid];
m17_20 -> m17_14  [key=2, style=dotted];
m17_21 -> m17_15  [key=0, style=bold, color=blue];
m17_53 -> m17_54  [key=0, style=solid];
m17_53 -> m17_59  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m17_54 -> m17_55  [key=0, style=solid];
m17_54 -> m17_59  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m17_55 -> m17_56  [key=0, style=solid];
m17_56 -> m17_57  [key=0, style=solid];
m17_56 -> m17_14  [key=2, style=dotted];
m17_57 -> m17_53  [key=0, style=bold, color=blue];
m17_73 -> m17_74  [key=0, style=solid];
m17_73 -> m17_76  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.NewExpression"];
m17_73 -> m17_77  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.NewExpression"];
m17_73 -> m17_79  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.ParameterExpression"];
m17_74 -> m17_75  [key=0, style=solid];
m17_74 -> m17_82  [key=2, style=dotted];
m17_74 -> m17_78  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m17_76 -> m17_77  [key=0, style=solid];
m17_76 -> m17_81  [key=0, style=solid];
m17_77 -> m17_78  [key=0, style=solid];
m17_77 -> m17_79  [key=1, style=dashed, color=darkseagreen4, label=argument];
m17_79 -> m17_80  [key=0, style=solid];
m17_79 -> m17_83  [key=2, style=dotted];
m17_75 -> m17_76  [key=0, style=solid];
m17_75 -> m17_77  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_75 -> m17_78  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_75 -> m17_80  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_78 -> m17_79  [key=0, style=solid];
m17_80 -> m17_76  [key=0, style=solid];
m17_80 -> m17_80  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_81 -> m17_73  [key=0, style=bold, color=blue];
m17_5 -> m17_6  [key=0, style=solid];
m17_6 -> m17_7  [key=0, style=solid];
m17_6 -> m17_8  [key=2, style=dotted];
m17_7 -> m17_5  [key=0, style=bold, color=blue];
m17_8 -> m17_9  [key=0, style=solid];
m17_9 -> m17_10  [key=0, style=solid];
m17_9 -> m17_13  [key=2, style=dotted];
m17_10 -> m17_11  [key=0, style=solid];
m17_11 -> m17_12  [key=0, style=solid];
m17_11 -> m17_14  [key=2, style=dotted];
m17_12 -> m17_8  [key=0, style=bold, color=blue];
m17_94 -> m17_95  [key=0, style=solid];
m17_24 -> m17_25  [key=0, style=solid];
m17_23 -> m17_24  [key=0, style=solid];
m17_25 -> m17_23  [key=0, style=bold, color=blue];
m17_34 -> m17_35  [key=0, style=solid];
m17_33 -> m17_34  [key=0, style=solid];
m17_35 -> m17_33  [key=0, style=bold, color=blue];
m17_42 -> m17_43  [key=0, style=solid];
m17_41 -> m17_42  [key=0, style=solid];
m17_43 -> m17_41  [key=0, style=bold, color=blue];
m17_50 -> m17_51  [key=0, style=solid];
m17_50 -> m17_52  [key=2, style=dotted];
m17_49 -> m17_50  [key=0, style=solid];
m17_51 -> m17_49  [key=0, style=bold, color=blue];
m17_59 -> m17_60  [key=0, style=solid];
m17_59 -> m17_61  [key=2, style=dotted];
m17_58 -> m17_59  [key=0, style=solid];
m17_60 -> m17_58  [key=0, style=bold, color=blue];
m17_95 -> m17_96  [key=0, style=solid];
m17_95 -> m17_97  [key=2, style=dotted];
m17_95 -> m17_98  [key=2, style=dotted];
m17_96 -> m17_94  [key=0, style=bold, color=blue];
m17_26 -> m17_27  [key=0, style=solid];
m17_27 -> m17_28  [key=0, style=solid];
m17_27 -> m17_32  [key=2, style=dotted];
m17_27 -> m17_34  [key=1, style=dashed, color=darkseagreen4, label=callbackProvider];
m17_28 -> m17_29  [key=0, style=solid];
m17_29 -> m17_30  [key=0, style=solid];
m17_30 -> m17_31  [key=0, style=solid];
m17_30 -> m17_14  [key=2, style=dotted];
m17_31 -> m17_26  [key=0, style=bold, color=blue];
m17_36 -> m17_37  [key=0, style=solid];
m17_36 -> m17_42  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IProvider<TImplementation>"];
m17_37 -> m17_38  [key=0, style=solid];
m17_38 -> m17_39  [key=0, style=solid];
m17_39 -> m17_40  [key=0, style=solid];
m17_39 -> m17_14  [key=2, style=dotted];
m17_40 -> m17_36  [key=0, style=bold, color=blue];
m17_101 -> m17_102  [key=0, style=solid];
m17_102 -> m17_103  [key=0, style=solid];
m17_102 -> m17_104  [key=2, style=dotted];
m17_103 -> m17_101  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid];
m17_0 -> m17_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_0 -> m17_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.INinjectSettings"];
m17_1 -> m17_2  [key=0, style=solid];
m17_2 -> m17_3  [key=0, style=solid];
m17_3 -> m17_4  [key=0, style=solid];
m17_4 -> m17_0  [key=0, style=bold, color=blue];
m17_97 -> m17_99  [key=0, style=solid];
m17_99 -> m17_100  [key=0, style=solid];
m17_100 -> m17_97  [key=0, style=bold, color=blue];
m17_83 -> m17_84  [key=0, style=solid];
m17_83 -> m17_86  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression"];
m17_83 -> m17_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_84 -> m17_85  [key=0, style=solid];
m17_86 -> m17_87  [key=0, style=solid];
m17_86 -> m17_90  [key=2, style=dotted];
m17_86 -> m17_91  [key=2, style=dotted];
m17_86 -> m17_95  [key=1, style=dashed, color=darkseagreen4, label=compiledExpression];
m17_87 -> m17_88  [key=0, style=solid];
m17_87 -> m17_92  [key=2, style=dotted];
m17_87 -> m17_93  [key=2, style=dotted];
m17_87 -> m17_95  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m17_85 -> m17_86  [key=0, style=solid];
m17_85 -> m17_88  [key=0, style=solid];
m17_85 -> m17_89  [key=2, style=dotted];
m17_88 -> m17_83  [key=0, style=bold, color=blue];
m17_62 -> m17_63  [key=0, style=solid];
m17_62 -> m17_68  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>"];
m17_63 -> m17_64  [key=0, style=solid];
m17_63 -> m17_66  [key=1, style=dashed, color=darkseagreen4, label=ctorExpression];
m17_63 -> m17_68  [key=1, style=dashed, color=darkseagreen4, label=ctorExpression];
m17_68 -> m17_69  [key=0, style=solid];
m17_68 -> m17_73  [key=2, style=dotted];
m17_64 -> m17_65  [key=0, style=solid];
m17_64 -> m17_66  [key=0, style=solid];
m17_66 -> m17_67  [key=0, style=solid];
m17_66 -> m17_72  [key=2, style=dotted];
m17_65 -> m17_70  [key=0, style=solid];
m17_65 -> m17_71  [key=2, style=dotted];
m17_67 -> m17_68  [key=0, style=solid];
m17_69 -> m17_70  [key=0, style=solid];
m17_69 -> m17_14  [key=2, style=dotted];
m17_70 -> m17_62  [key=0, style=bold, color=blue];
m17_105 -> m17_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_9  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_10  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_11  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_17  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_18  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_19  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_20  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_28  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_29  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_30  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_37  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_38  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_39  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_45  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_46  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_47  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_54  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_55  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_56  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_66  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_67  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_68  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_69  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_79  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_105 -> m17_87  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder"];
m17_106 -> m17_24  [key=1, style=dashed, color=darkseagreen4, label=constantProvider];
m17_107 -> m17_34  [key=1, style=dashed, color=darkseagreen4, label=callbackProvider];
m17_108 -> m17_42  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IProvider<TImplementation>"];
m17_109 -> m17_59  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m17_110 -> m17_95  [key=1, style=dashed, color=darkseagreen4, label=compiledExpression];
m17_111 -> m17_99  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.BindingBuilder.ConstructorArgumentSyntax"];
m18_0 -> m18_1  [key=0, style=solid];
m18_0 -> m18_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_4  [key=2, style=dotted];
m18_1 -> m18_5  [key=2, style=dotted];
m18_1 -> m18_6  [key=2, style=dotted];
m18_1 -> m18_7  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_1 -> m18_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_2 -> m18_3  [key=0, style=solid];
m18_3 -> m18_0  [key=0, style=bold, color=blue];
m18_38 -> m18_39  [key=0, style=solid];
m18_8 -> m18_9  [key=0, style=solid];
m18_8 -> m18_10  [key=2, style=dotted];
m18_7 -> m18_8  [key=0, style=solid];
m18_11 -> m18_12  [key=0, style=solid];
m18_9 -> m18_7  [key=0, style=bold, color=blue];
m18_12 -> m18_13  [key=0, style=solid];
m18_12 -> m18_14  [key=2, style=dotted];
m18_13 -> m18_11  [key=0, style=bold, color=blue];
m18_20 -> m18_21  [key=0, style=solid];
m18_20 -> m18_10  [key=2, style=dotted];
m18_24 -> m18_25  [key=0, style=solid];
m18_24 -> m18_27  [key=2, style=dotted];
m18_24 -> m18_28  [key=2, style=dotted];
m18_24 -> m18_4  [key=2, style=dotted];
m18_24 -> m18_5  [key=2, style=dotted];
m18_24 -> m18_6  [key=2, style=dotted];
m18_24 -> m18_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_24 -> m18_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_24 -> m18_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_19 -> m18_20  [key=0, style=solid];
m18_22 -> m18_23  [key=0, style=solid];
m18_22 -> m18_24  [key=1, style=dashed, color=darkseagreen4, label=T1];
m18_22 -> m18_31  [key=1, style=dashed, color=darkseagreen4, label=T1];
m18_21 -> m18_19  [key=0, style=bold, color=blue];
m18_23 -> m18_24  [key=0, style=solid];
m18_23 -> m18_14  [key=2, style=dotted];
m18_23 -> m18_25  [key=1, style=dashed, color=darkseagreen4, label=descr];
m18_31 -> m18_32  [key=0, style=solid];
m18_31 -> m18_33  [key=2, style=dotted];
m18_25 -> m18_26  [key=0, style=solid];
m18_25 -> m18_29  [key=2, style=dotted];
m18_30 -> m18_31  [key=0, style=solid];
m18_34 -> m18_35  [key=0, style=solid];
m18_26 -> m18_22  [key=0, style=bold, color=blue];
m18_32 -> m18_30  [key=0, style=bold, color=blue];
m18_35 -> m18_36  [key=0, style=solid];
m18_35 -> m18_37  [key=2, style=dotted];
m18_36 -> m18_34  [key=0, style=bold, color=blue];
m18_39 -> m18_40  [key=0, style=solid];
m18_39 -> m18_14  [key=2, style=dotted];
m18_40 -> m18_38  [key=0, style=bold, color=blue];
m18_15 -> m18_16  [key=0, style=solid];
m18_15 -> m18_20  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_15 -> m18_24  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m18_16 -> m18_17  [key=0, style=solid];
m18_16 -> m18_4  [key=2, style=dotted];
m18_16 -> m18_5  [key=2, style=dotted];
m18_16 -> m18_6  [key=2, style=dotted];
m18_16 -> m18_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_16 -> m18_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_17 -> m18_18  [key=0, style=solid];
m18_18 -> m18_15  [key=0, style=bold, color=blue];
m18_41 -> m18_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_42 -> m18_8  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m18_43 -> m18_20  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_44 -> m18_20  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m18_45 -> m18_24  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m18_46 -> m18_31  [key=1, style=dashed, color=darkseagreen4, label=T1];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_4  [key=2, style=dotted];
m19_2 -> m19_3  [key=0, style=solid];
m19_2 -> m19_5  [key=2, style=dotted];
m19_2 -> m19_6  [key=2, style=dotted];
m19_2 -> m19_7  [key=2, style=dotted];
m19_2 -> m19_8  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_2 -> m19_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_2 -> m19_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_3 -> m19_0  [key=0, style=bold, color=blue];
m19_4 -> m19_17  [key=0, style=solid];
m19_4 -> m19_18  [key=0, style=bold, color=crimson];
m19_4 -> m19_22  [key=0, style=bold, color=crimson];
m19_4 -> m19_23  [key=0, style=bold, color=crimson];
m19_4 -> m19_26  [key=0, style=bold, color=crimson];
m19_4 -> m19_27  [key=0, style=bold, color=crimson];
m19_4 -> m19_28  [key=0, style=bold, color=crimson];
m19_4 -> m19_30  [key=0, style=bold, color=crimson];
m19_4 -> m19_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m19_4 -> m19_20  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m19_4 -> m19_24  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m19_4 -> m19_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m19_4 -> m19_29  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m19_17 -> m19_18  [key=0, style=solid];
m19_17 -> m19_19  [key=0, style=solid];
m19_17 -> m19_32  [key=2, style=dotted];
m19_18 -> m19_19  [key=0, style=solid];
m19_22 -> m19_23  [key=0, style=solid];
m19_22 -> m19_39  [key=2, style=dotted];
m19_22 -> m19_40  [key=2, style=dotted];
m19_23 -> m19_24  [key=0, style=solid];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_48  [key=2, style=dotted];
m19_26 -> m19_49  [key=2, style=dotted];
m19_26 -> m19_40  [key=2, style=dotted];
m19_27 -> m19_28  [key=0, style=solid];
m19_28 -> m19_29  [key=0, style=solid];
m19_28 -> m19_50  [key=2, style=dotted];
m19_28 -> m19_51  [key=2, style=dotted];
m19_28 -> m19_49  [key=2, style=dotted];
m19_28 -> m19_40  [key=2, style=dotted];
m19_28 -> m19_36  [key=2, style=dotted];
m19_28 -> m19_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_30 -> m19_29  [key=0, style=solid];
m19_19 -> m19_20  [key=0, style=solid];
m19_19 -> m19_33  [key=2, style=dotted];
m19_19 -> m19_22  [key=1, style=dashed, color=darkseagreen4, label=pt];
m19_19 -> m19_25  [key=1, style=dashed, color=darkseagreen4, label=pt];
m19_19 -> m19_26  [key=1, style=dashed, color=darkseagreen4, label=pt];
m19_19 -> m19_28  [key=1, style=dashed, color=darkseagreen4, label=pt];
m19_19 -> m19_60  [key=1, style=dashed, color=darkseagreen4, label=pt];
m19_20 -> m19_21  [key=0, style=solid];
m19_20 -> m19_34  [key=2, style=dotted];
m19_20 -> m19_35  [key=2, style=dotted];
m19_20 -> m19_36  [key=2, style=dotted];
m19_20 -> m19_37  [key=2, style=dotted];
m19_20 -> m19_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_20 -> m19_25  [key=1, style=dashed, color=darkseagreen4, label=taken];
m19_20 -> m19_28  [key=1, style=dashed, color=darkseagreen4, label=taken];
m19_20 -> m19_29  [key=1, style=dashed, color=darkseagreen4, label=taken];
m19_24 -> m19_25  [key=0, style=solid];
m19_24 -> m19_41  [key=2, style=dotted];
m19_24 -> m19_42  [key=2, style=dotted];
m19_24 -> m19_43  [key=2, style=dotted];
m19_24 -> m19_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_25 -> m19_26  [key=0, style=solid];
m19_25 -> m19_28  [key=0, style=solid];
m19_25 -> m19_44  [key=2, style=dotted];
m19_25 -> m19_45  [key=2, style=dotted];
m19_25 -> m19_46  [key=2, style=dotted];
m19_25 -> m19_41  [key=2, style=dotted];
m19_25 -> m19_47  [key=2, style=dotted];
m19_29 -> m19_30  [key=0, style=solid];
m19_29 -> m19_31  [key=0, style=solid];
m19_29 -> m19_41  [key=2, style=dotted];
m19_29 -> m19_46  [key=2, style=dotted];
m19_29 -> m19_4  [key=2, style=dotted];
m19_21 -> m19_22  [key=0, style=solid];
m19_21 -> m19_24  [key=0, style=solid];
m19_21 -> m19_38  [key=2, style=dotted];
m19_31 -> m19_4  [key=0, style=bold, color=blue];
m19_59 -> m19_60  [key=0, style=solid];
m19_8 -> m19_9  [key=0, style=solid];
m19_11 -> m19_12  [key=0, style=solid];
m19_14 -> m19_15  [key=0, style=solid];
m19_9 -> m19_10  [key=0, style=solid];
m19_10 -> m19_8  [key=0, style=bold, color=blue];
m19_12 -> m19_13  [key=0, style=solid];
m19_13 -> m19_11  [key=0, style=bold, color=blue];
m19_15 -> m19_16  [key=0, style=solid];
m19_16 -> m19_14  [key=0, style=bold, color=blue];
m19_60 -> m19_61  [key=0, style=solid];
m19_60 -> m19_62  [key=2, style=dotted];
m19_60 -> m19_63  [key=2, style=dotted];
m19_60 -> m19_64  [key=2, style=dotted];
m19_60 -> m19_40  [key=2, style=dotted];
m19_52 -> m19_53  [key=0, style=solid];
m19_55 -> m19_56  [key=0, style=solid];
m19_53 -> m19_54  [key=0, style=solid];
m19_54 -> m19_52  [key=0, style=bold, color=blue];
m19_56 -> m19_57  [key=0, style=solid];
m19_56 -> m19_58  [key=2, style=dotted];
m19_57 -> m19_55  [key=0, style=bold, color=blue];
m19_61 -> m19_59  [key=0, style=bold, color=blue];
m19_75 -> m19_76  [key=0, style=solid];
m19_76 -> m19_77  [key=0, style=solid];
m19_76 -> m19_44  [key=2, style=dotted];
m19_76 -> m19_48  [key=2, style=dotted];
m19_76 -> m19_49  [key=2, style=dotted];
m19_76 -> m19_64  [key=2, style=dotted];
m19_77 -> m19_75  [key=0, style=bold, color=blue];
m19_65 -> m19_66  [key=0, style=solid];
m19_65 -> m19_70  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m19_65 -> m19_71  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m19_66 -> m19_67  [key=0, style=solid];
m19_66 -> m19_69  [key=0, style=solid];
m19_70 -> m19_71  [key=0, style=solid];
m19_70 -> m19_72  [key=0, style=solid];
m19_70 -> m19_44  [key=2, style=dotted];
m19_71 -> m19_73  [key=0, style=solid];
m19_71 -> m19_74  [key=2, style=dotted];
m19_71 -> m19_49  [key=2, style=dotted];
m19_67 -> m19_68  [key=0, style=solid];
m19_69 -> m19_70  [key=0, style=solid];
m19_68 -> m19_73  [key=0, style=solid];
m19_68 -> m19_49  [key=2, style=dotted];
m19_72 -> m19_73  [key=0, style=solid];
m19_72 -> m19_64  [key=2, style=dotted];
m19_73 -> m19_65  [key=0, style=bold, color=blue];
m19_78 -> m19_60  [key=1, style=dashed, color=darkseagreen4, label=pt];
m20_0 -> m20_1  [key=0, style=solid];
m20_0 -> m20_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m20_1 -> m20_2  [key=0, style=solid];
m20_2 -> m20_3  [key=0, style=solid];
m20_3 -> m20_0  [key=0, style=bold, color=blue];
m20_4 -> m20_5  [key=0, style=solid];
m20_5 -> m20_6  [key=0, style=solid];
m20_5 -> m20_0  [key=2, style=dotted];
m20_5 -> m20_7  [key=2, style=dotted];
m20_5 -> m20_8  [key=2, style=dotted];
m20_5 -> m20_9  [key=2, style=dotted];
m20_5 -> m20_10  [key=2, style=dotted];
m20_6 -> m20_4  [key=0, style=bold, color=blue];
m20_11 -> m20_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m20_11 -> m20_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m21_0 -> m21_1  [key=0, style=solid];
m21_0 -> m21_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_0 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_0 -> m21_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_1 -> m21_2  [key=0, style=solid];
m21_1 -> m21_3  [key=0, style=solid];
m21_3 -> m21_4  [key=0, style=solid];
m21_3 -> m21_5  [key=0, style=solid];
m21_5 -> m21_6  [key=0, style=solid];
m21_6 -> m21_7  [key=0, style=solid];
m21_2 -> m21_7  [key=0, style=solid];
m21_2 -> m21_8  [key=2, style=dotted];
m21_4 -> m21_7  [key=0, style=solid];
m21_4 -> m21_8  [key=2, style=dotted];
m21_7 -> m21_0  [key=0, style=bold, color=blue];
m21_12 -> m21_13  [key=0, style=solid];
m21_13 -> m21_14  [key=0, style=solid];
m21_13 -> m21_15  [key=2, style=dotted];
m21_13 -> m21_16  [key=2, style=dotted];
m21_13 -> m21_9  [key=2, style=dotted];
m21_13 -> m21_17  [key=2, style=dotted];
m21_13 -> m21_13  [key=1, style=dashed, color=darkseagreen4, label=type];
m21_14 -> m21_12  [key=0, style=bold, color=blue];
m21_9 -> m21_10  [key=0, style=solid];
m21_10 -> m21_11  [key=0, style=solid];
m21_10 -> m21_0  [key=2, style=dotted];
m21_11 -> m21_9  [key=0, style=bold, color=blue];
m21_18 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Verb"];
m21_18 -> m21_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Verb"];
}
