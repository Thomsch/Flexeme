digraph  {
m0_8 [cluster="Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="CultureInfoExtensions.cs", label="Entry Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", span="31-31"];
m0_3 [cluster="TModule.cstr", file="CultureInfoExtensions.cs", label="Entry TModule.cstr", span=""];
m0_16 [cluster="Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", file="CultureInfoExtensions.cs", label="Entry Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", span="44-44"];
m0_0 [cluster="Ninject.ModuleLoadExtensions.Load<TModule>(Ninject.IKernelConfiguration)", file="CultureInfoExtensions.cs", label="Entry Ninject.ModuleLoadExtensions.Load<TModule>(Ninject.IKernelConfiguration)", span="28-28"];
m0_1 [cluster="Ninject.ModuleLoadExtensions.Load<TModule>(Ninject.IKernelConfiguration)", file="CultureInfoExtensions.cs", label="kernelConfiguration.Load(new TModule())", span="31-31"];
m0_2 [cluster="Ninject.ModuleLoadExtensions.Load<TModule>(Ninject.IKernelConfiguration)", file="CultureInfoExtensions.cs", label="Exit Ninject.ModuleLoadExtensions.Load<TModule>(Ninject.IKernelConfiguration)", span="28-28"];
m0_12 [cluster="Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<string>)", file="CultureInfoExtensions.cs", label="Entry Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<string>)", span="38-38"];
m0_4 [cluster="Ninject.IKernelConfiguration.Load(params Ninject.Modules.INinjectModule[])", file="CultureInfoExtensions.cs", label="Entry Ninject.IKernelConfiguration.Load(params Ninject.Modules.INinjectModule[])", span="39-39"];
m0_9 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params string[])", file="CultureInfoExtensions.cs", label="Entry Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params string[])", span="50-50"];
m0_10 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params string[])", file="CultureInfoExtensions.cs", label="kernelConfiguration.Load(filePatterns)", span="52-52"];
m0_11 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params string[])", file="CultureInfoExtensions.cs", label="Exit Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params string[])", span="50-50"];
m0_13 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params System.Reflection.Assembly[])", file="CultureInfoExtensions.cs", label="Entry Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params System.Reflection.Assembly[])", span="60-60"];
m0_14 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params System.Reflection.Assembly[])", file="CultureInfoExtensions.cs", label="kernelConfiguration.Load(assemblies)", span="62-62"];
m0_15 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params System.Reflection.Assembly[])", file="CultureInfoExtensions.cs", label="Exit Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params System.Reflection.Assembly[])", span="60-60"];
m0_5 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params Ninject.Modules.INinjectModule[])", file="CultureInfoExtensions.cs", label="Entry Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params Ninject.Modules.INinjectModule[])", span="39-39"];
m0_6 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params Ninject.Modules.INinjectModule[])", file="CultureInfoExtensions.cs", label="kernelConfiguration.Load(modules)", span="41-41"];
m0_7 [cluster="Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params Ninject.Modules.INinjectModule[])", file="CultureInfoExtensions.cs", label="Exit Ninject.ModuleLoadExtensions.Load(Ninject.IKernelConfiguration, params Ninject.Modules.INinjectModule[])", span="39-39"];
m1_17 [cluster="System.Type.InstanceProperty(string, object)", file="FSharpOptionHelper.cs", label="Entry System.Type.InstanceProperty(string, object)", span="199-199"];
m1_3 [cluster="System.Type.GetGenericArguments()", file="FSharpOptionHelper.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m1_13 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="FSharpOptionHelper.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="30-30"];
m1_14 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="FSharpOptionHelper.cs", label="return typeof(FSharpOption<>)\r\n                .MakeGenericType(GetUnderlyingType(value.GetType()))\r\n                .InstanceProperty(\r\n                    ''Value'', value);", span="32-35"];
m1_15 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="FSharpOptionHelper.cs", label="Exit CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="30-30"];
m1_18 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="FSharpOptionHelper.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="38-38"];
m1_19 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="FSharpOptionHelper.cs", label="return (bool)typeof(FSharpOption<>)\r\n                .MakeGenericType(GetUnderlyingType(value.GetType()))\r\n                .StaticMethod(\r\n                    ''get_IsSome'', value);", span="40-43"];
m1_20 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="FSharpOptionHelper.cs", label="Exit CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="38-38"];
m1_16 [cluster="object.GetType()", file="FSharpOptionHelper.cs", label="Entry object.GetType()", span="0-0"];
m1_12 [cluster="System.Type.StaticProperty(string)", file="FSharpOptionHelper.cs", label="Entry System.Type.StaticProperty(string)", span="189-189"];
m1_4 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="FSharpOptionHelper.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="14-14"];
m1_5 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="FSharpOptionHelper.cs", label="return typeof(FSharpOption<>)\r\n                    .MakeGenericType(type)\r\n                    .StaticMethod(\r\n                        ''Some'', value);", span="16-19"];
m1_6 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="FSharpOptionHelper.cs", label="Exit CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="14-14"];
m1_9 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="FSharpOptionHelper.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="22-22"];
m1_10 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="FSharpOptionHelper.cs", label="return typeof(FSharpOption<>)\r\n                    .MakeGenericType(type)\r\n                    .StaticProperty(\r\n                        ''None'');", span="24-27"];
m1_11 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="FSharpOptionHelper.cs", label="Exit CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="22-22"];
m1_7 [cluster="System.Type.MakeGenericType(params System.Type[])", file="FSharpOptionHelper.cs", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0"];
m1_8 [cluster="System.Type.StaticMethod(string, params object[])", file="FSharpOptionHelper.cs", label="Entry System.Type.StaticMethod(string, params object[])", span="179-179"];
m1_0 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="FSharpOptionHelper.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", span="8-8"];
m1_1 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="FSharpOptionHelper.cs", label="return type\r\n                .GetGenericArguments()[0];", span="10-11"];
m1_2 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="FSharpOptionHelper.cs", label="Exit CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", span="8-8"];
m2_18 [cluster="CommandLine.Infrastructure.StringExtensions.Spaces(int)", file="HelpText.cs", label="Entry CommandLine.Infrastructure.StringExtensions.Spaces(int)", span="35-35"];
m2_19 [cluster="CommandLine.Infrastructure.StringExtensions.Spaces(int)", file="HelpText.cs", label="return new string(' ', value);", span="37-37"];
m2_20 [cluster="CommandLine.Infrastructure.StringExtensions.Spaces(int)", file="HelpText.cs", label="Exit CommandLine.Infrastructure.StringExtensions.Spaces(int)", span="35-35"];
m2_15 [cluster="CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", file="HelpText.cs", label="Entry CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", span="30-30"];
m2_16 [cluster="CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", file="HelpText.cs", label="return string.Format(CultureInfo.CurrentCulture, value, arguments);", span="32-32"];
m2_17 [cluster="CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", file="HelpText.cs", label="Exit CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", span="30-30"];
m2_3 [cluster="string.String(char, int)", file="HelpText.cs", label="Entry string.String(char, int)", span="0-0"];
m2_34 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="HelpText.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m2_35 [cluster="System.Text.StringBuilder.Append(string)", file="HelpText.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m2_24 [cluster="string.CompareOrdinal(string, string)", file="HelpText.cs", label="Entry string.CompareOrdinal(string, string)", span="0-0"];
m2_37 [cluster="CommandLine.Infrastructure.StringExtensions.IsBooleanString(string)", file="HelpText.cs", label="Entry CommandLine.Infrastructure.StringExtensions.IsBooleanString(string)", span="60-60"];
m2_38 [cluster="CommandLine.Infrastructure.StringExtensions.IsBooleanString(string)", file="HelpText.cs", label="return value.Equals(''true'', StringComparison.OrdinalIgnoreCase)\r\n                || value.Equals(''false'', StringComparison.OrdinalIgnoreCase);", span="62-63"];
m2_39 [cluster="CommandLine.Infrastructure.StringExtensions.IsBooleanString(string)", file="HelpText.cs", label="Exit CommandLine.Infrastructure.StringExtensions.IsBooleanString(string)", span="60-60"];
m2_7 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="HelpText.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m2_41 [cluster="CommandLine.Infrastructure.StringExtensions.ToBoolean(string)", file="HelpText.cs", label="Entry CommandLine.Infrastructure.StringExtensions.ToBoolean(string)", span="66-66"];
m2_42 [cluster="CommandLine.Infrastructure.StringExtensions.ToBoolean(string)", file="HelpText.cs", label="return value.Equals(''true'', StringComparison.OrdinalIgnoreCase);", span="68-68"];
m2_43 [cluster="CommandLine.Infrastructure.StringExtensions.ToBoolean(string)", file="HelpText.cs", label="Exit CommandLine.Infrastructure.StringExtensions.ToBoolean(string)", span="66-66"];
m2_21 [cluster="CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", file="HelpText.cs", label="Entry CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", span="40-40"];
m2_22 [cluster="CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", file="HelpText.cs", label="return string.CompareOrdinal(strA, strB) == 0;", span="42-42"];
m2_23 [cluster="CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", file="HelpText.cs", label="Exit CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", span="40-40"];
m2_8 [cluster="CommandLine.Infrastructure.StringExtensions.ToStringLocal<T>(T)", file="HelpText.cs", label="Entry CommandLine.Infrastructure.StringExtensions.ToStringLocal<T>(T)", span="20-20"];
m2_9 [cluster="CommandLine.Infrastructure.StringExtensions.ToStringLocal<T>(T)", file="HelpText.cs", label="return Convert.ToString(value, CultureInfo.CurrentCulture);", span="22-22"];
m2_10 [cluster="CommandLine.Infrastructure.StringExtensions.ToStringLocal<T>(T)", file="HelpText.cs", label="Exit CommandLine.Infrastructure.StringExtensions.ToStringLocal<T>(T)", span="20-20"];
m2_40 [cluster="string.Equals(string, System.StringComparison)", file="HelpText.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m2_36 [cluster="System.Text.StringBuilder.ToString()", file="HelpText.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m2_28 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="HelpText.cs", label="Entry CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", span="50-50"];
m2_29 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="HelpText.cs", label="var builder = new StringBuilder(value)", span="52-52"];
m2_30 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="HelpText.cs", label=others, span="53-53"];
m2_31 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="HelpText.cs", label="builder.Append(v)", span="55-55"];
m2_32 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="HelpText.cs", label="return builder.ToString();", span="57-57"];
m2_33 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="HelpText.cs", label="Exit CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", span="50-50"];
m2_25 [cluster="CommandLine.Infrastructure.StringExtensions.SafeLength(string)", file="HelpText.cs", label="Entry CommandLine.Infrastructure.StringExtensions.SafeLength(string)", span="45-45"];
m2_26 [cluster="CommandLine.Infrastructure.StringExtensions.SafeLength(string)", file="HelpText.cs", label="return value == null ? 0 : value.Length;", span="47-47"];
m2_27 [cluster="CommandLine.Infrastructure.StringExtensions.SafeLength(string)", file="HelpText.cs", label="Exit CommandLine.Infrastructure.StringExtensions.SafeLength(string)", span="45-45"];
m2_11 [cluster="CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", file="HelpText.cs", label="Entry CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", span="25-25"];
m2_12 [cluster="CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", file="HelpText.cs", label="return string.Format(CultureInfo.InvariantCulture, value, arguments);", span="27-27"];
m2_13 [cluster="CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", file="HelpText.cs", label="Exit CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", span="25-25"];
m2_0 [cluster="CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", file="HelpText.cs", label="Entry CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", span="10-10"];
m2_1 [cluster="CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", file="HelpText.cs", label="return new string(c, 1);", span="12-12"];
m2_2 [cluster="CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", file="HelpText.cs", label="Exit CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", span="10-10"];
m2_4 [cluster="CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", file="HelpText.cs", label="Entry CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", span="15-15"];
m2_5 [cluster="CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", file="HelpText.cs", label="return Convert.ToString(value, CultureInfo.InvariantCulture);", span="17-17"];
m2_6 [cluster="CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", file="HelpText.cs", label="Exit CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", span="15-15"];
m2_14 [cluster="string.Format(System.IFormatProvider, string, params object[])", file="HelpText.cs", label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0"];
m3_50 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="94-94"];
m3_51 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<Options_With_Enum_Having_HelpText>(TypeInfo.Create(typeof(Options_With_Enum_Having_HelpText)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="98-101"];
m3_52 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="105-105"];
m3_53 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="106-106"];
m3_54 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="107-107"];
m3_55 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here.'')", span="108-108"];
m3_56 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="109-109"];
m3_57 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--version        Display version information.'')", span="110-110"];
m3_58 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''post-options'')", span="111-111"];
m3_59 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="94-94"];
m3_16 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="82-82"];
m3_126 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458"];
m3_22 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="47-47"];
m3_23 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<Simple_Options>(TypeInfo.Create(typeof(Simple_Options)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="51-54"];
m3_24 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="58-58"];
m3_25 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="59-59"];
m3_26 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="60-60"];
m3_27 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="61-61"];
m3_28 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="62-62"];
m3_29 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="63-63"];
m3_30 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="64-64"];
m3_31 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''value pos. 0     Define a long value here.'')", span="65-65"];
m3_32 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[7].ShouldBeEquivalentTo(''post-options'')", span="66-66"];
m3_33 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="47-47"];
m3_66 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="132-132"];
m3_67 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="136-136"];
m3_68 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="137-137"];
m3_69 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="sut.AddOptions(\r\n                new NotParsed<Simple_Options_With_HelpText_Set_To_Long_Description>(\r\n                    TypeInfo.Create(typeof(Simple_Options_With_HelpText_Set_To_Long_Description)),\r\n                    Enumerable.Empty<Error>()))", span="138-141"];
m3_70 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="144-144"];
m3_71 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description'')", span="145-145"];
m3_72 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''                of the verbosity to '')", span="147-147"];
m3_73 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''                test out the wrapping '')", span="148-148"];
m3_74 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''                capabilities of the '')", span="149-149"];
m3_75 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''                Help Text.'')", span="150-150"];
m3_76 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="132-132"];
m3_222 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516"];
m3_78 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="155-155"];
m3_79 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="159-159"];
m3_80 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="160-160"];
m3_81 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="sut.AddOptions(\r\n                new NotParsed<Simple_Options_With_HelpText_Set_To_Long_Description_Without_Spaces>(\r\n                    TypeInfo.Create(typeof(Simple_Options_With_HelpText_Set_To_Long_Description_Without_Spaces)),\r\n                    Enumerable.Empty<Error>()))", span="161-164"];
m3_82 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="167-167"];
m3_83 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''  v, verbose    Before '')", span="168-168"];
m3_84 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="169-169"];
m3_85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''                After'')", span="170-170"];
m3_86 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''  input-file    Before '')", span="171-171"];
m3_87 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="172-172"];
m3_88 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''                456789 After'')", span="173-173"];
m3_89 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="155-155"];
m3_191 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpTextTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m3_116 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="HelpTextTests.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="221-221"];
m3_149 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="260-260"];
m3_150 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<Simple_Options>(\r\n                TypeInfo.Create(typeof(Simple_Options)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="263-269"];
m3_151 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="272-272"];
m3_152 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="275-275"];
m3_153 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="276-276"];
m3_154 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="277-277"];
m3_155 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="278-278"];
m3_156 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="279-279"];
m3_157 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''A sequence option 'i' is defined with fewer or more items than required.'')", span="280-280"];
m3_158 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="281-281"];
m3_159 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="282-282"];
m3_160 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[7].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="283-283"];
m3_161 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[8].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="284-284"];
m3_162 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="260-260"];
m3_193 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="343-343"];
m3_194 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<Options_With_HelpText_And_MetaValue>(TypeInfo.Create(typeof(Options_With_HelpText_And_MetaValue)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="347-350"];
m3_195 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="354-354"];
m3_196 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="355-355"];
m3_197 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue=STR            Define a string value here.'')", span="356-356"];
m3_198 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''-i INTSEQ                    Define a int sequence here.'')", span="357-357"];
m3_199 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''-x                           Define a boolean or switch value here.'')", span="358-358"];
m3_200 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--help                       Display this help screen.'')", span="359-359"];
m3_201 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--version                    Display version information.'')", span="360-360"];
m3_202 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''number (pos. 0) NUM          Define a long value here.'')", span="361-361"];
m3_203 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[7].ShouldBeEquivalentTo(''paintcolor (pos. 1) COLOR    Define a color value here.'')", span="362-362"];
m3_204 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[8].ShouldBeEquivalentTo(''post-options'', lines[8])", span="363-363"];
m3_205 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="343-343"];
m3_39 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="71-71"];
m3_40 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<Options_With_Enum_Having_HelpText>(TypeInfo.Create(typeof(Options_With_Enum_Having_HelpText)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="75-78"];
m3_41 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="82-82"];
m3_42 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="83-83"];
m3_43 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="84-84"];
m3_44 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here. Valid values: Circle, Square,'')", span="85-85"];
m3_45 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''Triangle'')", span="86-86"];
m3_46 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="87-87"];
m3_47 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="88-88"];
m3_48 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''post-options'')", span="89-89"];
m3_49 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="71-71"];
m3_120 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="316-316"];
m3_90 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="178-178"];
m3_91 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="var sut = new HelpText(''Heading Info.'')", span="182-182"];
m3_92 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="183-183"];
m3_93 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new NotParsed<Simple_Options_Without_HelpText>(TypeInfo.Create(typeof(Simple_Options_Without_HelpText)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="184-186"];
m3_94 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="189-189"];
m3_95 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''Before '')", span="190-190"];
m3_96 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="191-191"];
m3_97 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''012 After'')", span="192-192"];
m3_98 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 3].ShouldBeEquivalentTo(''Before '')", span="193-193"];
m3_99 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="194-194"];
m3_100 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 1].ShouldBeEquivalentTo('' After'')", span="195-195"];
m3_101 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="178-178"];
m3_178 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="316-316"];
m3_179 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb) })", span="319-320"];
m3_180 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance),\r\n                    verbTypes),\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="321-324"];
m3_181 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="327-327"];
m3_182 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="330-330"];
m3_183 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="332-332"];
m3_184 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="333-333"];
m3_185 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="334-334"];
m3_186 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="335-335"];
m3_187 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="336-336"];
m3_188 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="337-337"];
m3_189 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="338-338"];
m3_190 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="316-316"];
m3_0 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="17-17"];
m3_1 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="string.Empty.ShouldBeEquivalentTo(new HelpText().ToString())", span="19-19"];
m3_2 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="17-17"];
m3_266 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="HelpTextTests.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m3_268 [cluster="System.Type.ToTypeInfo()", file="HelpTextTests.cs", label="Entry System.Type.ToTypeInfo()", span="174-174"];
m3_145 [cluster="System.InvalidOperationException.InvalidOperationException()", file="HelpTextTests.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m3_36 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpTextTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m3_38 [cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="HelpTextTests.cs", label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15"];
m3_34 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpTextTests.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m3_123 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="HelpTextTests.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="382-382"];
m3_3 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36"];
m3_60 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="116-116"];
m3_61 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="var sut =\r\n                new HelpText(''Meta Value.'').AddOptions(\r\n                    new NotParsed<Options_With_MetaValue>(TypeInfo.Create(typeof(Options_With_MetaValue)), Enumerable.Empty<Error>()))", span="120-122"];
m3_62 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="125-125"];
m3_63 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="127-127"];
m3_64 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="116-116"];
m3_19 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322"];
m3_125 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="HelpTextTests.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="408-408"];
m3_206 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="368-368"];
m3_207 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="ParserResult<Options_With_Usage_Attribute> result =\r\n                new NotParsed<Options_With_Usage_Attribute>(\r\n                    TypeInfo.Create(typeof(Options_With_Usage_Attribute)), Enumerable.Empty<Error>())", span="371-373"];
m3_208 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="var text = HelpText.RenderUsageText(result)", span="376-376"];
m3_209 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="var lines = text.ToNotEmptyLines()", span="379-379"];
m3_210 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''Normal scenario:'')", span="382-382"];
m3_211 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''  mono testapp.exe --input file.bin --output out.bin'')", span="383-383"];
m3_212 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''Logging warnings:'')", span="384-384"];
m3_213 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''  mono testapp.exe -w --input file.bin'')", span="385-385"];
m3_214 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''Logging errors:'')", span="386-386"];
m3_215 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''  mono testapp.exe -e --input file.bin'')", span="387-387"];
m3_216 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''  mono testapp.exe --errs --input=file.bin'')", span="388-388"];
m3_217 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[7].ShouldBeEquivalentTo(''List:'')", span="389-389"];
m3_218 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[8].ShouldBeEquivalentTo(''  mono testapp.exe -l 1,2'')", span="390-390"];
m3_219 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[9].ShouldBeEquivalentTo(''Value:'')", span="391-391"];
m3_220 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[10].ShouldBeEquivalentTo(''  mono testapp.exe value'')", span="392-392"];
m3_221 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="368-368"];
m3_121 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="360-360"];
m3_37 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389"];
m3_146 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="241-241"];
m3_128 [cluster="lambda expression", file="HelpTextTests.cs", label="err.Tag", span="220-220"];
m3_130 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="223-223"];
m3_132 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="225-225"];
m3_134 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="227-227"];
m3_136 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="229-229"];
m3_138 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="231-231"];
m3_142 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="235-235"];
m3_127 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="218-239"];
m3_129 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.BadFormatTokenError", span="222-222"];
m3_131 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MissingValueOptionError", span="224-224"];
m3_133 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.UnknownOptionError", span="226-226"];
m3_135 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MissingRequiredOptionError", span="228-228"];
m3_137 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.SequenceOutOfRangeError", span="230-230"];
m3_139 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.NoVerbSelectedError", span="232-232"];
m3_141 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.BadVerbSelectedError", span="234-234"];
m3_143 [cluster="lambda expression", file="HelpTextTests.cs", label="throw new InvalidOperationException();", span="237-237"];
m3_140 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR no-verb-selected'';", span="233-233"];
m3_144 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="218-239"];
m3_147 [cluster="lambda expression", file="HelpTextTests.cs", label="string.Empty", span="241-241"];
m3_148 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="241-241"];
m3_192 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="HelpTextTests.cs", label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m3_254 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", span="442-442"];
m3_255 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="var handlers = new CultureInfo(''en-US'').MakeCultureHandlers()", span="445-445"];
m3_256 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="var fakeResult =\r\n                new NotParsed<Options_With_Default_Set_To_Sequence>(\r\n                    typeof(Options_With_Default_Set_To_Sequence).ToTypeInfo(),\r\n                    new Error[] { new BadFormatTokenError(''badtoken'') })", span="446-449"];
m3_257 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="handlers.ChangeCulture()", span="452-452"];
m3_259 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="handlers.ResetCulture()", span="454-454"];
m3_258 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="453-453"];
m3_260 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="var text = helpText.ToString()", span="457-457"];
m3_261 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="458-458"];
m3_262 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="lines[4].Should().Be(''-z, --strseq    (Default: a b c)'')", span="460-460"];
m3_263 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="lines[5].Should().Be(''-y, --intseq    (Default: 1 2 3)'')", span="461-461"];
m3_264 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="lines[6].Should().Be(''-q, --dblseq    (Default: 1.1 2.2 3.3)'')", span="462-462"];
m3_265 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", span="442-442"];
m3_35 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="HelpTextTests.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m3_65 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
m3_117 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="294-294"];
m3_164 [cluster="Unk.Should", file="HelpTextTests.cs", label="Entry Unk.Should", span=""];
m3_267 [cluster="System.Globalization.CultureInfo.MakeCultureHandlers()", file="HelpTextTests.cs", label="Entry System.Globalization.CultureInfo.MakeCultureHandlers()", span="16-16"];
m3_270 [cluster="Unk.Be", file="HelpTextTests.cs", label="Entry Unk.Be", span=""];
m3_4 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="580-580"];
m3_165 [cluster="Unk.StartWithEquivalent", file="HelpTextTests.cs", label="Entry Unk.StartWithEquivalent", span=""];
m3_163 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260"];
m3_122 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="HelpTextTests.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="446-446"];
m3_17 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27"];
m3_119 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="HelpTextTests.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="305-305"];
m3_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="HelpTextTests.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60"];
m3_20 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333"];
m3_21 [cluster="string.ToNotEmptyLines()", file="HelpTextTests.cs", label="Entry string.ToNotEmptyLines()", span="10-10"];
m3_223 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="396-396"];
m3_224 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<Options_With_Usage_Attribute>(\r\n                TypeInfo.Create(typeof(Options_With_Usage_Attribute)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken'')\r\n                    })", span="399-404"];
m3_225 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="407-407"];
m3_226 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var text = helpText.ToString()", span="410-410"];
m3_227 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="411-411"];
m3_228 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="412-412"];
m3_229 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="413-413"];
m3_230 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="414-414"];
m3_231 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="415-415"];
m3_232 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''USAGE:'')", span="416-416"];
m3_233 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''Normal scenario:'')", span="417-417"];
m3_234 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''mono testapp.exe --input file.bin --output out.bin'')", span="418-418"];
m3_235 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[7].ShouldBeEquivalentTo(''Logging warnings:'')", span="419-419"];
m3_236 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[8].ShouldBeEquivalentTo(''mono testapp.exe -w --input file.bin'')", span="420-420"];
m3_237 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[9].ShouldBeEquivalentTo(''Logging errors:'')", span="421-421"];
m3_238 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[10].ShouldBeEquivalentTo(''mono testapp.exe -e --input file.bin'')", span="422-422"];
m3_239 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[11].ShouldBeEquivalentTo(''mono testapp.exe --errs --input=file.bin'')", span="423-423"];
m3_240 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[12].ShouldBeEquivalentTo(''List:'')", span="424-424"];
m3_241 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[13].ShouldBeEquivalentTo(''mono testapp.exe -l 1,2'')", span="425-425"];
m3_242 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[14].ShouldBeEquivalentTo(''Value:'')", span="426-426"];
m3_243 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[15].ShouldBeEquivalentTo(''mono testapp.exe value'')", span="427-427"];
m3_244 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[16].ShouldBeEquivalentTo(''-i, --input     Set input file.'')", span="428-428"];
m3_245 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[17].ShouldBeEquivalentTo(''-i, --output    Set output file.'')", span="429-429"];
m3_246 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[18].ShouldBeEquivalentTo(''--verbose       Set verbosity level.'')", span="430-430"];
m3_247 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[19].ShouldBeEquivalentTo(''-w, --warns     Log warnings.'')", span="431-431"];
m3_248 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[20].ShouldBeEquivalentTo(''-e, --errs      Log errors.'')", span="432-432"];
m3_249 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[21].ShouldBeEquivalentTo(''-l              List.'')", span="433-433"];
m3_250 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[22].ShouldBeEquivalentTo(''--help          Display this help screen.'')", span="434-434"];
m3_251 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[23].ShouldBeEquivalentTo(''--version       Display version information.'')", span="435-435"];
m3_252 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[24].ShouldBeEquivalentTo(''value pos. 0    Value.'')", span="436-436"];
m3_253 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="396-396"];
m3_118 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m3_6 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="23-23"];
m3_7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="27-32"];
m3_8 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="35-35"];
m3_9 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''Unit-tests 2.0'')", span="37-37"];
m3_10 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (C) 2005 - 2013 Author'')", span="38-38"];
m3_11 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''pre-options line 1'')", span="39-39"];
m3_12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''pre-options line 2'')", span="40-40"];
m3_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''post-options line 1'')", span="41-41"];
m3_14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''post-options line 2'')", span="42-42"];
m3_15 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="23-23"];
m3_102 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="201-201"];
m3_103 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="204-217"];
m3_104 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="218-239"];
m3_106 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, fakeMutExclRenderer, 2)", span="244-244"];
m3_105 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Func<IEnumerable<MutuallyExclusiveSetError>, string> fakeMutExclRenderer =\r\n                _ => string.Empty", span="240-241"];
m3_107 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = errorsText.ToNotEmptyLines()", span="247-247"];
m3_108 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''  ERR badtoken'')", span="249-249"];
m3_109 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''  ERR x, switch'')", span="250-250"];
m3_110 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''  ERR unknown'')", span="251-251"];
m3_111 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''  ERR missing'')", span="252-252"];
m3_112 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''  ERR s, sequence'')", span="253-253"];
m3_113 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''  ERR no-verb-selected'')", span="254-254"];
m3_114 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''  ERR badverb'')", span="255-255"];
m3_115 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="201-201"];
m3_166 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="289-289"];
m3_167 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(Commit_Verb), true)\r\n                    })", span="292-297"];
m3_168 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="300-300"];
m3_169 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="303-303"];
m3_170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="305-305"];
m3_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="306-306"];
m3_172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''-p, --patch      Use the interactive patch selection interface to chose which'')", span="307-307"];
m3_173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''changes to commit.'')", span="308-308"];
m3_174 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--amend          Used to amend the tip of the current branch.'')", span="309-309"];
m3_175 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''-m, --message    Use the given message as the commit message.'')", span="310-310"];
m3_176 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="311-311"];
m3_177 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="289-289"];
m3_269 [cluster="System.Action.Invoke()", file="HelpTextTests.cs", label="Entry System.Action.Invoke()", span="0-0"];
m3_124 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="HelpTextTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="393-393"];
m3_77 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextTests.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m3_5 [cluster="Unk.ShouldBeEquivalentTo", file="HelpTextTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m4_68 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="16-16"];
m4_14 [cluster="Unk.ThrowingValidate", file="InstanceBuilder.cs", label="Entry Unk.ThrowingValidate", span=""];
m4_104 [cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="InstanceBuilder.cs", label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="82-82"];
m4_98 [cluster="string.MatchName(string, string, System.StringComparer)", file="InstanceBuilder.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m4_144 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m4_91 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="14-14"];
m4_0 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14"];
m4_1 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceBuilder.cs", label="var typeInfo = factory.MapValueOrDefault(f => f().GetType(), typeof(T))", span="22-22"];
m4_5 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceBuilder.cs", label="Func<T> makeDefault = () =>\r\n                typeof(T).IsMutable()\r\n                    ? factory.MapValueOrDefault(f => f(), Activator.CreateInstance<T>())\r\n                    : ReflectionHelper.CreateDefaultImmutableInstance<T>(\r\n                        (from p in specProps select p.Specification.ConversionType).ToArray())", span="33-37"];
m4_7 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceBuilder.cs", label="Func<ParserResult<T>> buildUp = () =>\r\n            {\r\n                var tokenizerResult = tokenizer(arguments, optionSpecs);\r\n\r\n                var tokens = tokenizerResult.SucceededWith();\r\n\r\n                var partitions = TokenPartitioner.Partition(\r\n                    tokens,\r\n                    name => TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer));\r\n                var optionsPartition = partitions.Item1;\r\n                var valuesPartition = partitions.Item2;\r\n                var errorsPartition = partitions.Item3;\r\n\r\n                var optionSpecPropsResult =\r\n                    OptionMapper.MapValues(\r\n                        (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                        optionsPartition,\r\n                        (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                        nameComparer);\r\n\r\n                var valueSpecPropsResult =\r\n                    ValueMapper.MapValues(\r\n                        (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                        valuesPartition,\r\n                        (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture));\r\n\r\n                var missingValueErrors = from token in errorsPartition\r\n                                         select\r\n                        new MissingValueOptionError(\r\n                            optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer))\r\n                                .FromOptionSpecification());\r\n\r\n                var specPropsWithValue =\r\n                    optionSpecPropsResult.SucceededWith().Concat(valueSpecPropsResult.SucceededWith());\r\n\r\n                Func<T> buildMutable = () =>\r\n                {\r\n                    var mutable = factory.MapValueOrDefault(f => f(), Activator.CreateInstance<T>());\r\n                    mutable =\r\n                        mutable.SetProperties(specPropsWithValue, sp => sp.Value.IsJust(), sp => sp.Value.FromJustOrFail())\r\n                            .SetProperties(\r\n                                specPropsWithValue,\r\n                                sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                                sp => sp.Specification.DefaultValue.FromJustOrFail())\r\n                            .SetProperties(\r\n                                specPropsWithValue,\r\n                                sp =>\r\n                                    sp.Value.IsNothing() && sp.Specification.TargetType == TargetType.Sequence\r\n                                    && sp.Specification.DefaultValue.MatchNothing(),\r\n                                sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray());\r\n                    return mutable;\r\n                };\r\n\r\n                Func<T> buildImmutable = () =>\r\n                {\r\n                    var ctor = typeInfo.GetConstructor((from sp in specProps select sp.Property.PropertyType).ToArray());\r\n                    var values = (from prms in ctor.GetParameters()\r\n                        join sp in specPropsWithValue on prms.Name.ToLower() equals sp.Property.Name.ToLower()\r\n                        select\r\n                            sp.Value.GetValueOrDefault(\r\n                                sp.Specification.DefaultValue.GetValueOrDefault(\r\n                                    sp.Specification.ConversionType.CreateDefaultForImmutable()))).ToArray();\r\n                    var immutable = (T)ctor.Invoke(values);\r\n                    return immutable;\r\n                };\r\n\r\n                var instance = typeInfo.IsMutable() ? buildMutable() : buildImmutable();\r\n\r\n                var validationErrors = specPropsWithValue.Validate(SpecificationPropertyRules.Lookup(tokens));\r\n\r\n                var allErrors =\r\n                    tokenizerResult.SuccessfulMessages()\r\n                        .Concat(missingValueErrors)\r\n                        .Concat(optionSpecPropsResult.SuccessfulMessages())\r\n                        .Concat(valueSpecPropsResult.SuccessfulMessages())\r\n                        .Concat(validationErrors)\r\n                        .Memorize();\r\n\r\n                var warnings = from e in allErrors where nonFatalErrors.Contains(e.Tag) select e;\r\n\r\n                return allErrors.Except(warnings).ToParserResult(instance);\r\n            }", span="42-123"];
m4_8 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceBuilder.cs", label="var preprocessorErrors = arguments.Any()\r\n                ? arguments.Preprocess(PreprocessorGuards.Lookup(nameComparer))\r\n                : Enumerable.Empty<Error>()", span="125-127"];
m4_9 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceBuilder.cs", label="var result = arguments.Any()\r\n                ? preprocessorErrors.Any()\r\n                    ? notParsed(preprocessorErrors)\r\n                    : buildUp()\r\n                : buildUp()", span="129-133"];
m4_2 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceBuilder.cs", label="var specProps = typeInfo.GetSpecifications(pi => SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>()))", span="24-25"];
m4_3 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceBuilder.cs", label="var specs = from pt in specProps select pt.Specification", span="27-27"];
m4_4 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceBuilder.cs", label="var optionSpecs = specs\r\n                .ThrowingValidate(SpecificationGuards.Lookup)\r\n                .OfType<OptionSpecification>()", span="29-31"];
m4_6 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceBuilder.cs", label="Func<IEnumerable<Error>, ParserResult<T>> notParsed =\r\n                errs => new NotParsed<T>(makeDefault().GetType().ToTypeInfo(), errs)", span="39-40"];
m4_10 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceBuilder.cs", label="return result;", span="135-135"];
m4_11 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceBuilder.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14"];
m4_38 [cluster="Unk.>", file="InstanceBuilder.cs", label="Entry Unk.>", span=""];
m4_46 [cluster="System.Type.ToTypeInfo()", file="InstanceBuilder.cs", label="Entry System.Type.ToTypeInfo()", span="174-174"];
m4_20 [cluster="System.Func<T, TResult>.Invoke(T)", file="InstanceBuilder.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m4_71 [cluster="CommandLine.Core.Specification.IsValue()", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m4_77 [cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="40-40"];
m4_19 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="InstanceBuilder.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m4_140 [cluster="System.Reflection.MethodBase.GetParameters()", file="InstanceBuilder.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m4_45 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceBuilder.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m4_142 [cluster="System.Type.CreateDefaultForImmutable()", file="InstanceBuilder.cs", label="Entry System.Type.CreateDefaultForImmutable()", span="149-149"];
m4_139 [cluster="Unk.GetConstructor", file="InstanceBuilder.cs", label="Entry Unk.GetConstructor", span=""];
m4_73 [cluster="Unk.Single", file="InstanceBuilder.cs", label="Entry Unk.Single", span=""];
m4_13 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="InstanceBuilder.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m4_81 [cluster="Unk.Contains", file="InstanceBuilder.cs", label="Entry Unk.Contains", span=""];
m4_16 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m4_21 [cluster="System.Func<TResult>.Invoke()", file="InstanceBuilder.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m4_25 [cluster="object.GetType()", file="InstanceBuilder.cs", label="Entry object.GetType()", span="0-0"];
m4_133 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="95-106"];
m4_33 [cluster="lambda expression", file="InstanceBuilder.cs", label="typeof(T).IsMutable()\r\n                    ? factory.MapValueOrDefault(f => f(), Activator.CreateInstance<T>())\r\n                    : ReflectionHelper.CreateDefaultImmutableInstance<T>(\r\n                        (from p in specProps select p.Specification.ConversionType).ToArray())", span="34-37"];
m4_48 [cluster="lambda expression", file="InstanceBuilder.cs", label="var tokenizerResult = tokenizer(arguments, optionSpecs)", span="44-44"];
m4_50 [cluster="lambda expression", file="InstanceBuilder.cs", label="var partitions = TokenPartitioner.Partition(\r\n                    tokens,\r\n                    name => TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer))", span="48-50"];
m4_85 [cluster="lambda expression", file="InstanceBuilder.cs", label="TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer)", span="50-50"];
m4_54 [cluster="lambda expression", file="InstanceBuilder.cs", label="var optionSpecPropsResult =\r\n                    OptionMapper.MapValues(\r\n                        (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                        optionsPartition,\r\n                        (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                        nameComparer)", span="55-60"];
m4_89 [cluster="lambda expression", file="InstanceBuilder.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="59-59"];
m4_55 [cluster="lambda expression", file="InstanceBuilder.cs", label="var valueSpecPropsResult =\r\n                    ValueMapper.MapValues(\r\n                        (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                        valuesPartition,\r\n                        (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture))", span="62-66"];
m4_93 [cluster="lambda expression", file="InstanceBuilder.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="66-66"];
m4_56 [cluster="lambda expression", file="InstanceBuilder.cs", label="var missingValueErrors = from token in errorsPartition\r\n                                         select\r\n                        new MissingValueOptionError(\r\n                            optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer))\r\n                                .FromOptionSpecification())", span="68-72"];
m4_96 [cluster="lambda expression", file="InstanceBuilder.cs", label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="71-71"];
m4_58 [cluster="lambda expression", file="InstanceBuilder.cs", label="Func<T> buildMutable = () =>\r\n                {\r\n                    var mutable = factory.MapValueOrDefault(f => f(), Activator.CreateInstance<T>());\r\n                    mutable =\r\n                        mutable.SetProperties(specPropsWithValue, sp => sp.Value.IsJust(), sp => sp.Value.FromJustOrFail())\r\n                            .SetProperties(\r\n                                specPropsWithValue,\r\n                                sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                                sp => sp.Specification.DefaultValue.FromJustOrFail())\r\n                            .SetProperties(\r\n                                specPropsWithValue,\r\n                                sp =>\r\n                                    sp.Value.IsNothing() && sp.Specification.TargetType == TargetType.Sequence\r\n                                    && sp.Specification.DefaultValue.MatchNothing(),\r\n                                sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray());\r\n                    return mutable;\r\n                }", span="77-93"];
m4_100 [cluster="lambda expression", file="InstanceBuilder.cs", label="var mutable = factory.MapValueOrDefault(f => f(), Activator.CreateInstance<T>())", span="79-79"];
m4_63 [cluster="lambda expression", file="InstanceBuilder.cs", label="var warnings = from e in allErrors where nonFatalErrors.Contains(e.Tag) select e", span="120-120"];
m4_22 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="22-22"];
m4_59 [cluster="lambda expression", file="InstanceBuilder.cs", label="Func<T> buildImmutable = () =>\r\n                {\r\n                    var ctor = typeInfo.GetConstructor((from sp in specProps select sp.Property.PropertyType).ToArray());\r\n                    var values = (from prms in ctor.GetParameters()\r\n                        join sp in specPropsWithValue on prms.Name.ToLower() equals sp.Property.Name.ToLower()\r\n                        select\r\n                            sp.Value.GetValueOrDefault(\r\n                                sp.Specification.DefaultValue.GetValueOrDefault(\r\n                                    sp.Specification.ConversionType.CreateDefaultForImmutable()))).ToArray();\r\n                    var immutable = (T)ctor.Invoke(values);\r\n                    return immutable;\r\n                }", span="95-106"];
m4_134 [cluster="lambda expression", file="InstanceBuilder.cs", label="var ctor = typeInfo.GetConstructor((from sp in specProps select sp.Property.PropertyType).ToArray())", span="97-97"];
m4_60 [cluster="lambda expression", file="InstanceBuilder.cs", label="var instance = typeInfo.IsMutable() ? buildMutable() : buildImmutable()", span="108-108"];
m4_26 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="24-25"];
m4_43 [cluster="lambda expression", file="InstanceBuilder.cs", label="new NotParsed<T>(makeDefault().GetType().ToTypeInfo(), errs)", span="40-40"];
m4_23 [cluster="lambda expression", file="InstanceBuilder.cs", label="f().GetType()", span="22-22"];
m4_24 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="22-22"];
m4_27 [cluster="lambda expression", file="InstanceBuilder.cs", label="SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>())", span="24-25"];
m4_28 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="24-25"];
m4_32 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="33-37"];
m4_34 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="33-37"];
m4_39 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="35-35"];
m4_40 [cluster="lambda expression", file="InstanceBuilder.cs", label="f()", span="35-35"];
m4_41 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="35-35"];
m4_42 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="40-40"];
m4_44 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="40-40"];
m4_47 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="42-123"];
m4_49 [cluster="lambda expression", file="InstanceBuilder.cs", label="var tokens = tokenizerResult.SucceededWith()", span="46-46"];
m4_62 [cluster="lambda expression", file="InstanceBuilder.cs", label="var allErrors =\r\n                    tokenizerResult.SuccessfulMessages()\r\n                        .Concat(missingValueErrors)\r\n                        .Concat(optionSpecPropsResult.SuccessfulMessages())\r\n                        .Concat(valueSpecPropsResult.SuccessfulMessages())\r\n                        .Concat(validationErrors)\r\n                        .Memorize()", span="112-118"];
m4_61 [cluster="lambda expression", file="InstanceBuilder.cs", label="var validationErrors = specPropsWithValue.Validate(SpecificationPropertyRules.Lookup(tokens))", span="110-110"];
m4_51 [cluster="lambda expression", file="InstanceBuilder.cs", label="var optionsPartition = partitions.Item1", span="51-51"];
m4_84 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="50-50"];
m4_52 [cluster="lambda expression", file="InstanceBuilder.cs", label="var valuesPartition = partitions.Item2", span="52-52"];
m4_53 [cluster="lambda expression", file="InstanceBuilder.cs", label="var errorsPartition = partitions.Item3", span="53-53"];
m4_88 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="59-59"];
m4_57 [cluster="lambda expression", file="InstanceBuilder.cs", label="var specPropsWithValue =\r\n                    optionSpecPropsResult.SucceededWith().Concat(valueSpecPropsResult.SucceededWith())", span="74-75"];
m4_92 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="66-66"];
m4_95 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="71-71"];
m4_101 [cluster="lambda expression", file="InstanceBuilder.cs", label="mutable =\r\n                        mutable.SetProperties(specPropsWithValue, sp => sp.Value.IsJust(), sp => sp.Value.FromJustOrFail())\r\n                            .SetProperties(\r\n                                specPropsWithValue,\r\n                                sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                                sp => sp.Specification.DefaultValue.FromJustOrFail())\r\n                            .SetProperties(\r\n                                specPropsWithValue,\r\n                                sp =>\r\n                                    sp.Value.IsNothing() && sp.Specification.TargetType == TargetType.Sequence\r\n                                    && sp.Specification.DefaultValue.MatchNothing(),\r\n                                sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray())", span="80-91"];
m4_135 [cluster="lambda expression", file="InstanceBuilder.cs", label="var values = (from prms in ctor.GetParameters()\r\n                        join sp in specPropsWithValue on prms.Name.ToLower() equals sp.Property.Name.ToLower()\r\n                        select\r\n                            sp.Value.GetValueOrDefault(\r\n                                sp.Specification.DefaultValue.GetValueOrDefault(\r\n                                    sp.Specification.ConversionType.CreateDefaultForImmutable()))).ToArray()", span="98-103"];
m4_64 [cluster="lambda expression", file="InstanceBuilder.cs", label="return allErrors.Except(warnings).ToParserResult(instance);", span="122-122"];
m4_65 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="42-123"];
m4_86 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="50-50"];
m4_90 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="59-59"];
m4_94 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="66-66"];
m4_97 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="71-71"];
m4_99 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="77-93"];
m4_105 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="79-79"];
m4_102 [cluster="lambda expression", file="InstanceBuilder.cs", label="return mutable;", span="92-92"];
m4_108 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="81-81"];
m4_112 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="81-81"];
m4_116 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="84-84"];
m4_120 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="85-85"];
m4_123 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="88-90"];
m4_127 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="91-91"];
m4_103 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="77-93"];
m4_106 [cluster="lambda expression", file="InstanceBuilder.cs", label="f()", span="79-79"];
m4_107 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="79-79"];
m4_109 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Value.IsJust()", span="81-81"];
m4_110 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="81-81"];
m4_113 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Value.FromJustOrFail()", span="81-81"];
m4_114 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="81-81"];
m4_117 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust()", span="84-84"];
m4_118 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="84-84"];
m4_121 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Specification.DefaultValue.FromJustOrFail()", span="85-85"];
m4_122 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="85-85"];
m4_124 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Value.IsNothing() && sp.Specification.TargetType == TargetType.Sequence\r\n                                    && sp.Specification.DefaultValue.MatchNothing()", span="89-90"];
m4_125 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="88-90"];
m4_128 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray()", span="91-91"];
m4_129 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="91-91"];
m4_136 [cluster="lambda expression", file="InstanceBuilder.cs", label="var immutable = (T)ctor.Invoke(values)", span="104-104"];
m4_137 [cluster="lambda expression", file="InstanceBuilder.cs", label="return immutable;", span="105-105"];
m4_138 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="95-106"];
m4_76 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m4_143 [cluster="CSharpx.Maybe<T>.GetValueOrDefault<T>(T)", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe<T>.GetValueOrDefault<T>(T)", span="368-368"];
m4_18 [cluster="System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11"];
m4_72 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="InstanceBuilder.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="294-294"];
m4_78 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", file="InstanceBuilder.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", span="15-15"];
m4_79 [cluster="Unk.Concat", file="InstanceBuilder.cs", label="Entry Unk.Concat", span=""];
m4_131 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m4_132 [cluster="System.Type.CreateEmptyArray()", file="InstanceBuilder.cs", label="Entry System.Type.CreateEmptyArray()", span="125-125"];
m4_130 [cluster="System.Type.GetGenericArguments()", file="InstanceBuilder.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m4_80 [cluster="Unk.Memorize", file="InstanceBuilder.cs", label="Entry Unk.Memorize", span=""];
m4_141 [cluster="string.ToLower()", file="InstanceBuilder.cs", label="Entry string.ToLower()", span="0-0"];
m4_82 [cluster="Unk.Except", file="InstanceBuilder.cs", label="Entry Unk.Except", span=""];
m4_83 [cluster="Unk.ToParserResult", file="InstanceBuilder.cs", label="Entry Unk.ToParserResult", span=""];
m4_87 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m4_30 [cluster="CSharpx.Maybe.Nothing<T>()", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m4_36 [cluster="System.Activator.CreateInstance<T>()", file="InstanceBuilder.cs", label="Entry System.Activator.CreateInstance<T>()", span="0-0"];
m4_67 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", file="InstanceBuilder.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", span="653-653"];
m4_12 [cluster="CSharpx.Maybe<T1>.MapValueOrDefault<T1, T2>(System.Func<T1, T2>, T2)", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe<T1>.MapValueOrDefault<T1, T2>(System.Func<T1, T2>, T2)", span="377-377"];
m4_69 [cluster="CommandLine.Core.Specification.IsOption()", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m4_119 [cluster="CSharpx.Maybe<T>.IsNothing<T>()", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe<T>.IsNothing<T>()", span="334-334"];
m4_126 [cluster="CSharpx.Maybe<T>.MatchNothing()", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57"];
m4_35 [cluster="System.Type.IsMutable()", file="InstanceBuilder.cs", label="Entry System.Type.IsMutable()", span="139-139"];
m4_31 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="21-21"];
m4_115 [cluster="CSharpx.Maybe<T>.FromJustOrFail<T>(System.Exception)", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe<T>.FromJustOrFail<T>(System.Exception)", span="355-355"];
m4_74 [cluster="Unk.FromOptionSpecification", file="InstanceBuilder.cs", label="Entry Unk.FromOptionSpecification", span=""];
m4_15 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="InstanceBuilder.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m4_17 [cluster="CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", span="11-11"];
m4_145 [cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="InstanceBuilder.cs", label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0"];
m4_37 [cluster="Unk.ToArray", file="InstanceBuilder.cs", label="Entry Unk.ToArray", span=""];
m4_111 [cluster="CSharpx.Maybe<T>.IsJust<T>()", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326"];
m4_29 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="103-103"];
m4_66 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="InstanceBuilder.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m4_75 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m4_70 [cluster="Unk.MapValues", file="InstanceBuilder.cs", label="Entry Unk.MapValues", span=""];
m4_146 [file="InstanceBuilder.cs", label="CSharpx.Maybe<System.Func<T>>", span=""];
m4_147 [file="InstanceBuilder.cs", label=specProps, span=""];
m4_148 [file="InstanceBuilder.cs", label=makeDefault, span=""];
m4_149 [file="InstanceBuilder.cs", label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", span=""];
m4_150 [file="InstanceBuilder.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m4_151 [file="InstanceBuilder.cs", label=optionSpecs, span=""];
m4_152 [file="InstanceBuilder.cs", label="System.StringComparer", span=""];
m4_153 [file="InstanceBuilder.cs", label="System.Globalization.CultureInfo", span=""];
m4_154 [file="InstanceBuilder.cs", label=typeInfo, span=""];
m4_155 [file="InstanceBuilder.cs", label="System.Collections.Generic.IEnumerable<CommandLine.ErrorType>", span=""];
m4_156 [file="InstanceBuilder.cs", label=token, span=""];
m4_157 [file="InstanceBuilder.cs", label=specPropsWithValue, span=""];
m5_0 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", span="13-13"];
m5_1 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="InstanceBuilderTests.cs", label="this.patch = patch", span="15-15"];
m5_2 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="InstanceBuilderTests.cs", label="this.force = force", span="16-16"];
m5_3 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="InstanceBuilderTests.cs", label="this.fileName = fileName", span="17-17"];
m5_4 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", span="13-13"];
m5_5 [cluster="CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", span="38-38"];
m5_6 [cluster="CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", file="InstanceBuilderTests.cs", label="this.patch = patch", span="40-40"];
m5_7 [cluster="CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", file="InstanceBuilderTests.cs", label="this.amend = amend", span="41-41"];
m5_8 [cluster="CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", span="38-38"];
m5_9 [cluster="CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", span="59-59"];
m5_10 [cluster="CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", file="InstanceBuilderTests.cs", label="this.noHardLinks = noHardLinks", span="61-61"];
m5_11 [cluster="CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", file="InstanceBuilderTests.cs", label="this.quiet = quiet", span="62-62"];
m5_12 [cluster="CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", file="InstanceBuilderTests.cs", label="this.urls = urls", span="63-63"];
m5_13 [cluster="CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", span="59-59"];
m5_14 [file="InstanceBuilderTests.cs", label="CommandLine.Tests.Fakes.ImmutableAddOptions", span=""];
m5_15 [file="InstanceBuilderTests.cs", label="CommandLine.Tests.Fakes.ImmutableCommitOptions", span=""];
m5_16 [file="InstanceBuilderTests.cs", label="CommandLine.Tests.Fakes.ImmutableCloneOptions", span=""];
m6_12 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Get_name_from_option_specification()", file="NameLookupTests.cs", label="Entry CommandLine.Tests.Unit.Core.NameLookupTests.Get_name_from_option_specification()", span="31-31"];
m6_13 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Get_name_from_option_specification()", file="NameLookupTests.cs", label="string ShortName = ''s''", span="33-33"];
m6_14 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Get_name_from_option_specification()", file="NameLookupTests.cs", label="string LongName = ''long''", span="34-34"];
m6_15 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Get_name_from_option_specification()", file="NameLookupTests.cs", label="var expected = new NameInfo(ShortName, LongName)", span="37-37"];
m6_16 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Get_name_from_option_specification()", file="NameLookupTests.cs", label="var spec = new OptionSpecification(ShortName, LongName, false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '.', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)", span="38-38"];
m6_18 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Get_name_from_option_specification()", file="NameLookupTests.cs", label="expected.ShouldBeEquivalentTo(result)", span="44-44"];
m6_17 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Get_name_from_option_specification()", file="NameLookupTests.cs", label="var result = spec.FromOptionSpecification()", span="41-41"];
m6_19 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Get_name_from_option_specification()", file="NameLookupTests.cs", label="Exit CommandLine.Tests.Unit.Core.NameLookupTests.Get_name_from_option_specification()", span="31-31"];
m6_20 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameLookupTests.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m6_21 [cluster="CommandLine.Core.OptionSpecification.FromOptionSpecification()", file="NameLookupTests.cs", label="Entry CommandLine.Core.OptionSpecification.FromOptionSpecification()", span="15-15"];
m6_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="NameLookupTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m6_6 [cluster="CSharpx.Maybe.Just<T>(T)", file="NameLookupTests.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m6_8 [cluster="CSharpx.Maybe.Nothing<T>()", file="NameLookupTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m6_0 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs", label="Entry CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", span="14-14"];
m6_1 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs", label="var expected = Maybe.Just(''.'')", span="17-17"];
m6_2 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '.', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)}", span="18-19"];
m6_4 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs", label="expected.ShouldBeEquivalentTo(result)", span="25-25"];
m6_3 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs", label="var result = NameLookup.HavingSeparator(''string-seq'', specs, StringComparer.InvariantCulture)", span="22-22"];
m6_5 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs", label="Exit CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", span="14-14"];
m6_10 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookupTests.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="27-27"];
m6_11 [cluster="Unk.ShouldBeEquivalentTo", file="NameLookupTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m6_9 [cluster="System.Collections.Generic.List<T>.List()", file="NameLookupTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m7_13 [cluster="Unk.Where", file="OptionMapperTests.cs", label="Entry Unk.Where", span=""];
m7_12 [cluster="Unk.Create", file="OptionMapperTests.cs", label="Entry Unk.Create", span=""];
m7_6 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="OptionMapperTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m7_11 [cluster="Unk.Single", file="OptionMapperTests.cs", label="Entry Unk.Single", span=""];
m7_15 [cluster="Unk.NotNull", file="OptionMapperTests.cs", label="Entry Unk.NotNull", span=""];
m7_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m7_27 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="14-14"];
m7_0 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Entry CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="17-17"];
m7_1 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var tokenPartitions = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''x'', new [] { ''true'' })\r\n                }", span="20-23"];
m7_2 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var specProps = new[]\r\n                {\r\n                    SpecificationProperty.Create(\r\n                        new OptionSpecification(''x'', string.Empty, false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '\0', Maybe.Nothing<object>(), string.Empty, string.Empty, new List<string>(), typeof(bool), TargetType.Switch), \r\n                        typeof(Simple_Options).GetProperties().Single(p => p.Name.Equals(''BoolValue'', StringComparison.Ordinal)),\r\n                        Maybe.Nothing<object>())\r\n                }", span="24-30"];
m7_3 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", color=green, community=0, file="OptionMapperTests.cs", label="0: var result = OptionMapper.MapValues(\r\n                specProps.Where(pt => pt.Specification.IsOption()),\r\n                tokenPartitions,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture),\r\n#if !PLATFORM_DOTNET\r\n                StringComparer.InvariantCulture\r\n#else\r\n                StringComparer.Ordinal\r\n#endif\r\n                )", span="36-45"];
m7_4 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Assert.NotNull(((Ok<IEnumerable<SpecificationProperty>, Error>)result).Success.Single(\r\n                a => a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value))", span="40-43"];
m7_5 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Exit CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="17-17"];
m7_28 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="41-43"];
m7_16 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="28-28"];
m7_20 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="34-34"];
m7_24 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="36-36"];
m7_17 [cluster="lambda expression", file="OptionMapperTests.cs", label="p.Name.Equals(''BoolValue'', StringComparison.Ordinal)", span="28-28"];
m7_18 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="28-28"];
m7_21 [cluster="lambda expression", file="OptionMapperTests.cs", label="pt.Specification.IsOption()", span="34-34"];
m7_22 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="34-34"];
m7_25 [cluster="lambda expression", file="OptionMapperTests.cs", label="TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture)", span="36-36"];
m7_26 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="36-36"];
m7_29 [cluster="lambda expression", file="OptionMapperTests.cs", label="a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value", span="41-43"];
m7_30 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="41-43"];
m7_31 [cluster="string.Equals(string)", file="OptionMapperTests.cs", label="Entry string.Equals(string)", span="0-0"];
m7_8 [cluster="CSharpx.Maybe.Nothing<T>()", file="OptionMapperTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m7_19 [cluster="string.Equals(string, System.StringComparison)", file="OptionMapperTests.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m7_23 [cluster="CommandLine.Core.Specification.IsOption()", file="OptionMapperTests.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m7_14 [cluster="Unk.MapValues", file="OptionMapperTests.cs", label="Entry Unk.MapValues", span=""];
m7_10 [cluster="System.Type.GetProperties()", file="OptionMapperTests.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m7_9 [cluster="System.Collections.Generic.List<T>.List()", file="OptionMapperTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m8_142 [cluster="CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", span="199-199"];
m8_143 [cluster="CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", file="ReflectionExtensions.cs", label="return type.InvokeMember(\r\n                name,\r\n                BindingFlags.GetProperty | BindingFlags.Public | BindingFlags.Instance,\r\n                null,\r\n                target,\r\n                new object[] { });", span="201-206"];
m8_144 [cluster="CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", span="199-199"];
m8_17 [cluster="Unk.SingleOrDefault", file="ReflectionExtensions.cs", label="Entry Unk.SingleOrDefault", span=""];
m8_44 [cluster="System.Type.GetInterfaces()", file="ReflectionExtensions.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m8_91 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", span="139-139"];
m8_92 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="ReflectionExtensions.cs", label="Func<bool> isMutable = () => {\r\n                var props = type.GetProperties(BindingFlags.Public | BindingFlags.Instance).Any(p => p.CanWrite);\r\n                var fields = type.GetFields(BindingFlags.Public | BindingFlags.Instance).Any();\r\n                return props || fields;\r\n            }", span="141-145"];
m8_93 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="ReflectionExtensions.cs", label="return type != typeof(object) ? isMutable() : true;", span="146-146"];
m8_94 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", span="139-139"];
m8_148 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="ReflectionExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m8_101 [cluster="System.Type.GetFields(System.Reflection.BindingFlags)", file="ReflectionExtensions.cs", label="Entry System.Type.GetFields(System.Reflection.BindingFlags)", span="0-0"];
m8_126 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="ReflectionExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m8_145 [cluster="CommandLine.Core.ReflectionExtensions.IsPrimitiveEx(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.IsPrimitiveEx(System.Type)", span="209-209"];
m8_146 [cluster="CommandLine.Core.ReflectionExtensions.IsPrimitiveEx(System.Type)", color=red, community=0, file="ReflectionExtensions.cs", label="0: return\r\n                   (type.IsValueType && type != typeof(Guid))\r\n                || type.IsPrimitive\r\n                || new [] { \r\n                     typeof(string)\r\n                    ,typeof(decimal)\r\n                    ,typeof(DateTime)\r\n                    ,typeof(DateTimeOffset)\r\n                    ,typeof(TimeSpan)\r\n                   }.Contains(type)\r\n                || Convert.GetTypeCode(type) != TypeCode.Object;", span="211-221"];
m8_147 [cluster="CommandLine.Core.ReflectionExtensions.IsPrimitiveEx(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="0: Exit CommandLine.Core.ReflectionExtensions.IsPrimitiveEx(System.Type)", span="209-209"];
m8_6 [cluster="Unk.>", file="ReflectionExtensions.cs", label="Entry Unk.>", span=""];
m8_73 [cluster="System.Action<T>.Invoke(T)", file="ReflectionExtensions.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m8_82 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", span="130-130"];
m8_83 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="ReflectionExtensions.cs", label="var e = Expression.Lambda<Func<object>>(\r\n                Expression.Convert(\r\n                    Expression.Default(type),\r\n                    typeof(object)))", span="132-135"];
m8_84 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="ReflectionExtensions.cs", label="return e.Compile()();", span="136-136"];
m8_85 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", span="130-130"];
m8_7 [cluster="Unk.Any", file="ReflectionExtensions.cs", label="Entry Unk.Any", span=""];
m8_8 [cluster="Unk.First", file="ReflectionExtensions.cs", label="Entry Unk.First", span=""];
m8_131 [cluster="CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", span="174-174"];
m8_132 [cluster="CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", file="ReflectionExtensions.cs", label="return TypeInfo.Create(type);", span="176-176"];
m8_133 [cluster="CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", span="174-174"];
m8_43 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ReflectionExtensions.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m8_26 [cluster="Unk.Create", file="ReflectionExtensions.cs", label="Entry Unk.Create", span=""];
m8_52 [cluster="Unk.Where", file="ReflectionExtensions.cs", label="Entry Unk.Where", span=""];
m8_59 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", span="97-97"];
m8_60 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=red, community=0, file="ReflectionExtensions.cs", label="0: Action<Exception> fail = inner => { throw new ApplicationException(''Cannot set value to target instance.'', inner); }", span="99-99"];
m8_61 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label="3: Action<Exception> fail = inner => {\r\n#if !PLATFORM_DOTNET\r\n                throw new ApplicationException(''Cannot set value to target instance.'', inner);\r\n#else\r\n                throw new Exception(''Cannot set value to target instance.'', inner);\r\n#endif\r\n            }", span="99-105"];
m8_70 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="return instance;", span="122-122"];
m8_63 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="fail(e)", span="107-107"];
m8_65 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="fail(e)", span="111-111"];
m8_67 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="fail(e)", span="115-115"];
m8_69 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="fail(e)", span="119-119"];
m8_62 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label=TargetException, span="105-105"];
m8_64 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label=TargetParameterCountException, span="109-109"];
m8_66 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label=MethodAccessException, span="113-113"];
m8_68 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label=TargetInvocationException, span="117-117"];
m8_71 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", span="97-97"];
m8_45 [cluster="CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", span="71-71"];
m8_46 [cluster="CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", file="ReflectionExtensions.cs", label="return type == typeof(bool)\r\n                       ? TargetType.Switch\r\n                       : type == typeof(string)\r\n                             ? TargetType.Scalar\r\n                             : type.IsArray || typeof(IEnumerable).IsAssignableFrom(type)\r\n                                   ? TargetType.Sequence\r\n                                   : TargetType.Scalar;", span="73-79"];
m8_47 [cluster="CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", span="71-71"];
m8_102 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ReflectionExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m8_77 [cluster="System.ApplicationException.ApplicationException(string, System.Exception)", file="ReflectionExtensions.cs", label="Entry System.ApplicationException.ApplicationException(string, System.Exception)", span="0-0"];
m8_18 [cluster="Unk.ToMaybe", file="ReflectionExtensions.cs", label="Entry Unk.ToMaybe", span=""];
m8_39 [cluster="System.Type.SafeGetInterfaces()", file="ReflectionExtensions.cs", label="Entry System.Type.SafeGetInterfaces()", span="66-66"];
m8_22 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="ReflectionExtensions.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m8_4 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="ReflectionExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m8_14 [cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", span="27-27"];
m8_15 [cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", file="ReflectionExtensions.cs", label="return\r\n                (from attr in\r\n                 type.FlattenHierarchy().SelectMany(x => x.GetCustomAttributes(typeof(VerbAttribute), true))\r\n                 let vattr = (VerbAttribute)attr\r\n                 select vattr)\r\n                    .SingleOrDefault()\r\n                    .ToMaybe();", span="29-35"];
m8_16 [cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", span="27-27"];
m8_9 [cluster="Unk.selector", file="ReflectionExtensions.cs", label="Entry Unk.selector", span=""];
m8_128 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="169-169"];
m8_10 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="18-18"];
m8_11 [cluster="lambda expression", file="ReflectionExtensions.cs", label="x.GetProperties()", span="18-18"];
m8_12 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="18-18"];
m8_19 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="31-31"];
m8_20 [cluster="lambda expression", file="ReflectionExtensions.cs", label="x.GetCustomAttributes(typeof(VerbAttribute), true)", span="31-31"];
m8_21 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="31-31"];
m8_27 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="41-41"];
m8_28 [cluster="lambda expression", file="ReflectionExtensions.cs", label="x.GetProperties()", span="41-41"];
m8_29 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="41-41"];
m8_55 [cluster="lambda expression", file="ReflectionExtensions.cs", label="specProp.Property.SetValue(current, selector(specProp))", span="92-92"];
m8_56 [cluster="lambda expression", file="ReflectionExtensions.cs", label="return instance;", span="93-93"];
m8_54 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="90-94"];
m8_57 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="90-94"];
m8_75 [cluster="lambda expression", color=red, community=0, file="ReflectionExtensions.cs", label="2: throw new ApplicationException(''Cannot set value to target instance.'', inner);", span="99-99"];
m8_74 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="99-99"];
m8_76 [cluster="lambda expression", color=green, community=0, file="ReflectionExtensions.cs", label="0: throw new ApplicationException(''Cannot set value to target instance.'', inner);", span="101-101"];
m8_96 [cluster="lambda expression", file="ReflectionExtensions.cs", label="var props = type.GetProperties(BindingFlags.Public | BindingFlags.Instance).Any(p => p.CanWrite)", span="142-142"];
m8_97 [cluster="lambda expression", file="ReflectionExtensions.cs", label="var fields = type.GetFields(BindingFlags.Public | BindingFlags.Instance).Any()", span="143-143"];
m8_95 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="141-145"];
m8_103 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="142-142"];
m8_98 [cluster="lambda expression", file="ReflectionExtensions.cs", label="return props || fields;", span="144-144"];
m8_99 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="141-145"];
m8_104 [cluster="lambda expression", file="ReflectionExtensions.cs", label="p.CanWrite", span="142-142"];
m8_105 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="142-142"];
m8_129 [cluster="lambda expression", file="ReflectionExtensions.cs", label="pi.PropertyType", span="169-169"];
m8_130 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="169-169"];
m8_72 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="ReflectionExtensions.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m8_81 [cluster="System.Array.CreateInstance(System.Type, int)", file="ReflectionExtensions.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m8_87 [cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="ReflectionExtensions.cs", label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0"];
m8_86 [cluster="System.Linq.Expressions.Expression.Default(System.Type)", file="ReflectionExtensions.cs", label="Entry System.Linq.Expressions.Expression.Default(System.Type)", span="0-0"];
m8_90 [cluster="System.Func<TResult>.Invoke()", file="ReflectionExtensions.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m8_127 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="ReflectionExtensions.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", span="50-50"];
m8_48 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ReflectionExtensions.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m8_106 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", span="149-149"];
m8_107 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ReflectionExtensions.cs", label="type == typeof(string)", span="151-151"];
m8_109 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", color=red, community=0, file="ReflectionExtensions.cs", label="0: type.IsGenericType && type.GetGenericTypeDefinition() == typeof(IEnumerable<>)", span="155-155"];
m8_110 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="0: type.GetTypeInfo().IsGenericType && type.GetGenericTypeDefinition() == typeof(IEnumerable<>)", span="163-163"];
m8_111 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ReflectionExtensions.cs", label="return type.GetDefaultValue();", span="159-159"];
m8_108 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ReflectionExtensions.cs", label="return string.Empty;", span="153-153"];
m8_112 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", span="149-149"];
m8_134 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m8_13 [cluster="System.Type.GetProperties()", file="ReflectionExtensions.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m8_23 [cluster="CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", span="38-38"];
m8_24 [cluster="CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", file="ReflectionExtensions.cs", label="return\r\n                (from pi in type.FlattenHierarchy().SelectMany(x => x.GetProperties())\r\n                    let attrs = pi.GetCustomAttributes(true)\r\n                    where attrs.OfType<UsageAttribute>().Any()\r\n                    select Tuple.Create(pi, (UsageAttribute)attrs.First()))\r\n                        .SingleOrDefault()\r\n                        .ToMaybe();", span="40-46"];
m8_25 [cluster="CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", span="38-38"];
m8_0 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m8_1 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="ReflectionExtensions.cs", label="return from pi in type.FlattenHierarchy().SelectMany(x => x.GetProperties())\r\n                   let attrs = pi.GetCustomAttributes(true)\r\n                   where\r\n                       attrs.OfType<OptionAttribute>().Any() ||\r\n                       attrs.OfType<ValueAttribute>().Any()\r\n                   group pi by pi.Name into g\r\n                   select selector(g.First());", span="18-24"];
m8_2 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m8_88 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="ReflectionExtensions.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m8_113 [cluster="System.Type.GetGenericTypeDefinition()", file="ReflectionExtensions.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m8_117 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", span="162-162"];
m8_118 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ReflectionExtensions.cs", label="type.IsMutable()", span="164-164"];
m8_119 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ReflectionExtensions.cs", label="return Activator.CreateInstance(type);", span="166-166"];
m8_120 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ReflectionExtensions.cs", label="var ctorTypes = type.GetSpecifications(pi => pi.PropertyType).ToArray()", span="169-169"];
m8_121 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ReflectionExtensions.cs", label="return ReflectionHelper.CreateDefaultImmutableInstance(type, ctorTypes);", span="171-171"];
m8_122 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", span="162-162"];
m8_139 [cluster="CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", span="189-189"];
m8_140 [cluster="CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", file="ReflectionExtensions.cs", label="return type.InvokeMember(\r\n                name,\r\n                BindingFlags.GetProperty | BindingFlags.Public | BindingFlags.Static,\r\n                null,\r\n                null,\r\n                new object[] { });", span="191-196"];
m8_141 [cluster="CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", span="189-189"];
m8_149 [cluster="System.Convert.GetTypeCode(object)", file="ReflectionExtensions.cs", label="Entry System.Convert.GetTypeCode(object)", span="0-0"];
m8_40 [cluster="System.Type.GetTypeInfo()", file="ReflectionExtensions.cs", label="Entry System.Type.GetTypeInfo()", span="251-251"];
m8_41 [cluster="CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", file="ReflectionExtensions.cs", label="return type == null ? Enumerable.Empty<Type>() : type.GetInterfaces();", span="68-68"];
m8_42 [cluster="CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", span="66-66"];
m8_115 [cluster="System.Type.CreateEmptyArray()", file="ReflectionExtensions.cs", label="Entry System.Type.CreateEmptyArray()", span="125-125"];
m8_116 [cluster="System.Type.GetDefaultValue()", file="ReflectionExtensions.cs", label="Entry System.Type.GetDefaultValue()", span="130-130"];
m8_114 [cluster="System.Type.GetGenericArguments()", file="ReflectionExtensions.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m8_125 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="ReflectionExtensions.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m8_124 [cluster="System.Activator.CreateInstance(System.Type)", file="ReflectionExtensions.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m8_100 [cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="ReflectionExtensions.cs", label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0"];
m8_5 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="ReflectionExtensions.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m8_123 [cluster="System.Type.IsMutable()", file="ReflectionExtensions.cs", label="Entry System.Type.IsMutable()", span="139-139"];
m8_53 [cluster="Unk.Aggregate", file="ReflectionExtensions.cs", label="Entry Unk.Aggregate", span=""];
m8_78 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", span="125-125"];
m8_79 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="ReflectionExtensions.cs", label="return Array.CreateInstance(type, 0);", span="127-127"];
m8_80 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", span="125-125"];
m8_49 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="82-82"];
m8_50 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="ReflectionExtensions.cs", label="return specProps.Where(predicate).Aggregate(\r\n                instance,\r\n                (current, specProp) =>\r\n                    {\r\n                        specProp.Property.SetValue(current, selector(specProp));\r\n                        return instance;\r\n                    });", span="88-94"];
m8_51 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="82-82"];
m8_30 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", span="49-49"];
m8_31 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="type == null", span="51-51"];
m8_32 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="yield break;", span="53-53"];
m8_33 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="yield return type;", span="55-55"];
m8_35 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="yield return @interface;", span="58-58"];
m8_37 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="yield return @interface;", span="62-62"];
m8_34 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="type.SafeGetInterfaces()", span="56-56"];
m8_36 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="1: FlattenHierarchy(type.GetTypeInfo().BaseType)", span="60-60"];
m8_38 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", span="49-49"];
m8_58 [cluster="Unk.SetValue", file="ReflectionExtensions.cs", label="Entry Unk.SetValue", span=""];
m8_151 [cluster="CommandLine.Core.ReflectionExtensions.GetTypeInfo(System.Type)", file="ReflectionExtensions.cs", label=T, span=""];
m8_152 [cluster="CommandLine.Core.ReflectionExtensions.GetTypeInfo(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="0: System.Type", span=""];
m8_153 [cluster="CommandLine.Core.ReflectionExtensions.GetTypeInfo(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetTypeInfo(System.Type)", span="251-251"];
m8_138 [cluster="System.Type.InvokeMember(string, System.Reflection.BindingFlags, System.Reflection.Binder, object, object[])", file="ReflectionExtensions.cs", label="Entry System.Type.InvokeMember(string, System.Reflection.BindingFlags, System.Reflection.Binder, object, object[])", span="0-0"];
m8_135 [cluster="CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", span="179-179"];
m8_136 [cluster="CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", file="ReflectionExtensions.cs", label="return type.InvokeMember(\r\n                name,\r\n                BindingFlags.InvokeMethod | BindingFlags.Public | BindingFlags.Static,\r\n                null,\r\n                null,\r\n                args);", span="181-186"];
m8_137 [cluster="CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", span="179-179"];
m8_3 [cluster="System.Type.FlattenHierarchy()", file="ReflectionExtensions.cs", label="Entry System.Type.FlattenHierarchy()", span="49-49"];
m8_89 [cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="ReflectionExtensions.cs", label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0"];
m8_150 [file="ReflectionExtensions.cs", label="System.Func<CommandLine.Core.SpecificationProperty, object>", span=""];
m9_20 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35"];
m9_21 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="ReflectionHelper.cs", label="return type.FullName.StartsWith(\r\n                ''Microsoft.FSharp.Core.FSharpOption`1'', StringComparison.Ordinal);", span="37-38"];
m9_22 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35"];
m9_1 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="15-15"];
m9_0 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12"];
m9_2 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="var attributes = assembly.GetCustomAttributes(typeof(TAttribute), false)", span="16-16"];
m9_3 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="return attributes.Length > 0\r\n                ? Maybe.Just((TAttribute)attributes[0])\r\n                : Maybe.Nothing<TAttribute>();", span="18-20"];
m9_4 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12"];
m9_7 [cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0"];
m9_6 [cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0"];
m9_5 [cluster="System.Reflection.Assembly.GetEntryAssembly()", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetEntryAssembly()", span="0-0"];
m9_14 [cluster="System.Reflection.Assembly.GetName()", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetName()", span="0-0"];
m9_16 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs", label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="31-31"];
m9_15 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", span="29-29"];
m9_17 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs", label="return assembly.GetName().Version.ToStringInvariant();", span="32-32"];
m9_18 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", span="29-29"];
m9_19 [cluster="T.ToStringInvariant<T>()", file="ReflectionHelper.cs", label="Entry T.ToStringInvariant<T>()", span="15-15"];
m9_32 [cluster="System.Type.CreateDefaultForImmutable()", file="ReflectionHelper.cs", label="Entry System.Type.CreateDefaultForImmutable()", span="149-149"];
m9_8 [cluster="CSharpx.Maybe.Just<T>(T)", file="ReflectionHelper.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m9_34 [cluster="Unk.Invoke", file="ReflectionHelper.cs", label="Entry Unk.Invoke", span=""];
m9_30 [cluster="System.Type.GetConstructor(System.Type[])", file="ReflectionHelper.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m9_35 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", span="50-50"];
m9_36 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="ReflectionHelper.cs", label="var ctor = type.GetConstructor(constructorTypes)", span="52-52"];
m9_37 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="ReflectionHelper.cs", label="var values = (from prms in ctor.GetParameters()\r\n                          select prms.ParameterType.CreateDefaultForImmutable()).ToArray()", span="53-54"];
m9_38 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="ReflectionHelper.cs", label="return ctor.Invoke(values);", span="55-55"];
m9_39 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", span="50-50"];
m9_33 [cluster="Unk.ToArray", file="ReflectionHelper.cs", label="Entry Unk.ToArray", span=""];
m9_23 [cluster="string.StartsWith(string, System.StringComparison)", file="ReflectionHelper.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m9_9 [cluster="CSharpx.Maybe.Nothing<T>()", file="ReflectionHelper.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m9_11 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs", label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="25-25"];
m9_10 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="23-23"];
m9_12 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs", label="return assembly.GetName().Name;", span="26-26"];
m9_13 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="23-23"];
m9_24 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", span="41-41"];
m9_25 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="ReflectionHelper.cs", label="var t = typeof(T)", span="43-43"];
m9_26 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="ReflectionHelper.cs", label="var ctor = t.GetConstructor(constructorTypes)", span="44-44"];
m9_27 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="ReflectionHelper.cs", label="var values = (from prms in ctor.GetParameters()\r\n                          select prms.ParameterType.CreateDefaultForImmutable()).ToArray()", span="45-46"];
m9_28 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="ReflectionHelper.cs", label="return (T)ctor.Invoke(values);", span="47-47"];
m9_29 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", span="41-41"];
m9_31 [cluster="System.Reflection.MethodBase.GetParameters()", file="ReflectionHelper.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m10_30 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="Specification.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m10_31 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="27-27"];
m10_27 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m10_26 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="Specification.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m10_0 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="Entry CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="37-37"];
m10_1 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.tag = tag", span="41-41"];
m10_2 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.required = required", span="42-42"];
m10_3 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.min = min", span="43-43"];
m10_4 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.max = max", span="44-44"];
m10_5 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.defaultValue = defaultValue", span="45-45"];
m10_6 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.conversionType = conversionType", span="46-46"];
m10_7 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.targetType = targetType", span="47-47"];
m10_8 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.helpText = helpText", span="48-48"];
m10_9 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.metaValue = metaValue", span="49-49"];
m10_10 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.enumValues = enumValues", span="50-50"];
m10_11 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="Exit CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="37-37"];
m10_34 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="Entry CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="22-22"];
m10_32 [cluster="string.ToLowerInvariant()", file="Specification.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m10_29 [cluster="System.Enum.GetNames(System.Type)", file="Specification.cs", label="Entry System.Enum.GetNames(System.Type)", span="0-0"];
m10_12 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="103-103"];
m10_13 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="var attrs = property.GetCustomAttributes(true)", span="105-105"];
m10_16 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=red, community=0, file="Specification.cs", label="0: var spec = OptionSpecification.FromAttribute(oa.Single(), property.PropertyType,\r\n                    property.PropertyType.IsEnum\r\n                        ? Enum.GetNames(property.PropertyType)\r\n                        : Enumerable.Empty<string>())", span="109-112"];
m10_18 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="return spec.WithLongName(property.Name.ToLowerInvariant());", span="115-115"];
m10_22 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=red, community=0, file="Specification.cs", label="0: return ValueSpecification.FromAttribute(va.Single(), property.PropertyType,\r\n                    property.PropertyType.IsEnum\r\n                        ? Enum.GetNames(property.PropertyType)\r\n                        : Enumerable.Empty<string>());", span="123-126"];
m10_14 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="var oa = attrs.OfType<OptionAttribute>()", span="106-106"];
m10_20 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="var va = attrs.OfType<ValueAttribute>()", span="120-120"];
m10_15 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="oa.Count() == 1", span="107-107"];
m10_17 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="spec.ShortName.Length == 0 && spec.LongName.Length == 0", span="113-113"];
m10_19 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="return spec;", span="117-117"];
m10_21 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="va.Count() == 1", span="121-121"];
m10_23 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="throw new InvalidOperationException();", span="129-129"];
m10_24 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="Exit CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="103-103"];
m10_25 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="Specification.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m10_28 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m10_33 [cluster="CommandLine.Core.OptionSpecification.WithLongName(string)", file="Specification.cs", label="Entry CommandLine.Core.OptionSpecification.WithLongName(string)", span="20-20"];
m10_35 [cluster="System.InvalidOperationException.InvalidOperationException()", file="Specification.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m10_36 [file="Specification.cs", label="CommandLine.Core.Specification", span=""];
m11_13 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="43-43"];
m11_14 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label=guardsLookup, span="45-45"];
m11_15 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="specifications.Any(spec => guard.Item1(spec))", span="47-47"];
m11_17 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="return specifications;", span="53-53"];
m11_16 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="throw new ApplicationException(guard.Item2);", span="49-49"];
m11_18 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="43-43"];
m11_33 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="SpecificationExtensions.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m11_25 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", span="56-56"];
m11_26 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="SpecificationExtensions.cs", label="int min", span="58-58"];
m11_28 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="SpecificationExtensions.cs", label="specification.Min.MatchJust(out min) && specification.Max.MatchJust(out max)", span="60-60"];
m11_29 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="SpecificationExtensions.cs", label="return predicate(min, max);", span="62-62"];
m11_27 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="SpecificationExtensions.cs", label="int max", span="59-59"];
m11_30 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="SpecificationExtensions.cs", label="return false;", span="64-64"];
m11_31 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", span="56-56"];
m11_0 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="10-10"];
m11_1 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return specification.Tag == SpecificationType.Option;", span="12-12"];
m11_2 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="10-10"];
m11_9 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m11_3 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="15-15"];
m11_4 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return specification.Tag == SpecificationType.Value;", span="17-17"];
m11_5 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="15-15"];
m11_21 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Entry lambda expression", span="47-47"];
m11_22 [cluster="lambda expression", file="SpecificationExtensions.cs", label="guard.Item1(spec)", span="47-47"];
m11_23 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Exit lambda expression", span="47-47"];
m11_40 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", span="77-77"];
m11_41 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="int max", span="79-79"];
m11_42 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="specification.Max.MatchJust(out max)", span="80-80"];
m11_43 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="return predicate(max);", span="82-82"];
m11_44 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="return false;", span="84-84"];
m11_45 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", span="77-77"];
m11_10 [cluster="CommandLine.Core.SpecificationExtensions.UniqueName(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.UniqueName(CommandLine.Core.OptionSpecification)", span="38-38"];
m11_11 [cluster="CommandLine.Core.SpecificationExtensions.UniqueName(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs", label="return specification.ShortName.Length > 0 ? specification.ShortName : specification.LongName;", span="40-40"];
m11_12 [cluster="CommandLine.Core.SpecificationExtensions.UniqueName(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.UniqueName(CommandLine.Core.OptionSpecification)", span="38-38"];
m11_34 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", span="67-67"];
m11_35 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="int min", span="69-69"];
m11_36 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="specification.Min.MatchJust(out min)", span="70-70"];
m11_37 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="return predicate(min);", span="72-72"];
m11_38 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="return false;", span="74-74"];
m11_39 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", span="67-67"];
m11_20 [cluster="System.ApplicationException.ApplicationException(string)", file="SpecificationExtensions.cs", label="Entry System.ApplicationException.ApplicationException(string)", span="0-0"];
m11_19 [cluster="Unk.Any", file="SpecificationExtensions.cs", label="Entry Unk.Any", span=""];
m11_6 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", span="20-20"];
m11_7 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="SpecificationExtensions.cs", label="return new OptionSpecification(\r\n                specification.ShortName,\r\n                newLongName,\r\n                specification.Required,\r\n                specification.SetName,\r\n                specification.Min,\r\n                specification.Max,\r\n                specification.Separator,\r\n                specification.DefaultValue,\r\n                specification.HelpText,\r\n                specification.MetaValue,\r\n                specification.EnumValues,\r\n                specification.ConversionType,\r\n                specification.TargetType);", span="22-35"];
m11_8 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", span="20-20"];
m11_24 [cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m11_32 [cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="SpecificationExtensions.cs", label="Entry CSharpx.Maybe<T>.MatchJust(out T)", span="48-48"];
m11_46 [file="SpecificationExtensions.cs", label=guard, span=""];
m12_6 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="21-21"];
m12_7 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CSharpx.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CSharpx.Maybe<object>)", span="18-18"];
m12_8 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CSharpx.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="newValue == null", span="20-20"];
m12_10 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CSharpx.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="return SpecificationProperty.Create(specProp.Specification, specProp.Property, newValue);", span="22-22"];
m12_9 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CSharpx.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="throw new ArgumentNullException(''newValue'');", span="20-20"];
m12_11 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CSharpx.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CSharpx.Maybe<object>)", span="18-18"];
m12_0 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", span="11-11"];
m12_1 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="newSpecification == null", span="13-13"];
m12_3 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="return SpecificationProperty.Create(newSpecification, specProp.Property, specProp.Value);", span="15-15"];
m12_2 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="throw new ArgumentNullException(''newSpecification'');", span="13-13"];
m12_4 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", span="11-11"];
m12_12 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", span="25-25"];
m12_13 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="specProp.Specification.TargetType", span="27-27"];
m12_15 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="return specProp.Property.PropertyType.GetGenericArguments()\r\n                             .SingleOrDefault()\r\n                             .ToMaybe()\r\n                             .FromJustOrFail(\r\n                                 new InvalidOperationException(''Sequence properties should be of type IEnumerable<T>.''));", span="30-34"];
m12_16 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="return specProp.Property.PropertyType;", span="36-36"];
m12_14 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="TargetType.Sequence", span="29-29"];
m12_17 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", span="25-25"];
m12_22 [cluster="CSharpx.Maybe<T>.FromJustOrFail<T>(System.Exception)", file="SpecificationPropertyExtensions.cs", label="Entry CSharpx.Maybe<T>.FromJustOrFail<T>(System.Exception)", span="355-355"];
m12_18 [cluster="System.Type.GetGenericArguments()", file="SpecificationPropertyExtensions.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m12_20 [cluster="T.ToMaybe<T>()", file="SpecificationPropertyExtensions.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m12_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="SpecificationPropertyExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m12_27 [cluster="lambda expression", file="SpecificationPropertyExtensions.cs", label="Entry lambda expression", span="45-45"];
m12_28 [cluster="lambda expression", file="SpecificationPropertyExtensions.cs", label="rule(specProps)", span="45-45"];
m12_29 [cluster="lambda expression", file="SpecificationPropertyExtensions.cs", label="Exit lambda expression", span="45-45"];
m12_23 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="40-40"];
m12_24 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="SpecificationPropertyExtensions.cs", label="return rules.SelectMany(rule => rule(specProps));", span="45-45"];
m12_25 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="40-40"];
m12_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationPropertyExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m12_21 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SpecificationPropertyExtensions.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m12_19 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="SpecificationPropertyExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m12_30 [cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationPropertyExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m12_31 [file="SpecificationPropertyExtensions.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", span=""];
m13_11 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="TokenizerTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m13_20 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="47-47"];
m13_23 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", color=green, community=0, file="TokenizerTests.cs", label="0: var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    Result.Succeed(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''x''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n#if !PLATFORM_DOTNET\r\n                        optionName => NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture))", span="56-63"];
m13_22 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), ',', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)}", span="52-53"];
m13_24 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="((Ok<IEnumerable<Token>, Error>)result).Success.ShouldBeEquivalentTo(expectedTokens)", span="69-69"];
m13_21 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="var expectedTokens = new[] { Token.Name(''x''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="50-51"];
m13_25 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="47-47"];
m13_35 [cluster="CommandLine.Core.Token.Value(string, bool)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Token.Value(string, bool)", span="29-29"];
m13_29 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="TokenizerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", span="75-75"];
m13_32 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="TokenizerTests.cs", label="var result =\r\n                Tokenizer.Normalize(\r\n                    //Result.Succeed(\r\n                        Enumerable.Empty<Token>()\r\n                            .Concat(\r\n                                new[] {\r\n                                    Token.Name(''x''), Token.Name(''string-seq''), Token.Value(''aaa''), Token.Value(''bb''),\r\n                                    Token.Name(''unknown''), Token.Value(''value0'', true), Token.Name(''switch'') })\r\n                        //,Enumerable.Empty<Error>()),\r\n                    ,nameLookup)", span="85-94"];
m13_30 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="TokenizerTests.cs", label="var expectedTokens = new[] {\r\n                Token.Name(''x''), Token.Name(''string-seq''), Token.Value(''aaa''), Token.Value(''bb''),\r\n                Token.Name(''unknown''), Token.Name(''switch'') }", span="78-80"];
m13_33 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="TokenizerTests.cs", label="result.ShouldBeEquivalentTo(expectedTokens)", span="97-97"];
m13_31 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="TokenizerTests.cs", label="Func<string, bool> nameLookup =\r\n                name => name.Equals(''x'') || name.Equals(''string-seq'') || name.Equals(''switch'')", span="81-82"];
m13_34 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="TokenizerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", span="75-75"];
m13_19 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TokenizerTests.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="27-27"];
m13_36 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", span="78-78"];
m13_8 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="TokenizerTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m13_0 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="20-20"];
m13_3 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", color=green, community=0, file="TokenizerTests.cs", label="0: var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    Result.Succeed(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''i''), Token.Value(''10''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n#if !PLATFORM_DOTNET\r\n                        optionName => NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture))", span="29-36"];
m13_2 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), ',', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)}", span="25-26"];
m13_4 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="((Ok<IEnumerable<Token>, Error>)result).Success.ShouldBeEquivalentTo(expectedTokens)", span="41-41"];
m13_1 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="var expectedTokens = new[] { Token.Name(''i''), Token.Value(''10''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="23-24"];
m13_5 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="20-20"];
m13_37 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="82-82"];
m13_16 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="36-36"];
m13_26 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="63-63"];
m13_17 [cluster="lambda expression", file="TokenizerTests.cs", label="NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="36-36"];
m13_18 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="36-36"];
m13_27 [cluster="lambda expression", file="TokenizerTests.cs", label="NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="63-63"];
m13_28 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="63-63"];
m13_38 [cluster="lambda expression", file="TokenizerTests.cs", label="name.Equals(''x'') || name.Equals(''string-seq'') || name.Equals(''switch'')", span="82-82"];
m13_39 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="82-82"];
m13_40 [cluster="string.Equals(string)", file="TokenizerTests.cs", label="Entry string.Equals(string)", span="0-0"];
m13_14 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="57-57"];
m13_6 [cluster="CommandLine.Core.Token.Name(string)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m13_9 [cluster="CSharpx.Maybe.Nothing<T>()", file="TokenizerTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m13_12 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="TokenizerTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m13_7 [cluster="CommandLine.Core.Token.Value(string)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m13_15 [cluster="Unk.ShouldBeEquivalentTo", file="TokenizerTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m13_13 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="TokenizerTests.cs", label="Entry RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", span="202-202"];
m13_10 [cluster="System.Collections.Generic.List<T>.List()", file="TokenizerTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m13_41 [file="TokenizerTests.cs", label=specs, span=""];
m13_42 [file="TokenizerTests.cs", label=specs, span=""];
m14_0 [cluster="CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", span="10-10"];
m14_3 [cluster="string.String(char, int)", color=green, community=0, file="TokenPartitionerTests.cs", label="0: Entry string.String(char, int)", span="0-0"];
m14_2 [cluster="CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", file="TokenPartitionerTests.cs", label="Exit CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", span="10-10"];
m14_4 [cluster="CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", span="15-15"];
m14_1 [cluster="CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", file="TokenPartitionerTests.cs", label="return new string(c, 1);", span="12-12"];
m14_5 [cluster="CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", file="TokenPartitionerTests.cs", label="return Convert.ToString(value, CultureInfo.InvariantCulture);", span="17-17"];
m14_6 [cluster="CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", file="TokenPartitionerTests.cs", label="Exit CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", span="15-15"];
m14_14 [cluster="string.Format(System.IFormatProvider, string, params object[])", file="TokenPartitionerTests.cs", label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0"];
m14_7 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="TokenPartitionerTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m14_8 [cluster="CommandLine.Infrastructure.StringExtensions.ToStringLocal<T>(T)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Infrastructure.StringExtensions.ToStringLocal<T>(T)", span="20-20"];
m14_16 [cluster="CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", file="TokenPartitionerTests.cs", label="return string.Format(CultureInfo.CurrentCulture, value, arguments);", span="32-32"];
m14_21 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="39-39"];
m14_22 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="39-39"];
m14_23 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="39-39"];
m14_9 [cluster="CSharpx.Maybe.Nothing<T>()", file="TokenPartitionerTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m14_10 [cluster="System.Collections.Generic.List<T>.List()", file="TokenPartitionerTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m14_12 [cluster="CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", file="TokenPartitionerTests.cs", label="return string.Format(CultureInfo.InvariantCulture, value, arguments);", span="27-27"];
m14_25 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="39-39"];
m14_26 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="39-39"];
m14_27 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="39-39"];
m14_24 [cluster="string.CompareOrdinal(string, string)", file="TokenPartitionerTests.cs", label="Entry string.CompareOrdinal(string, string)", span="0-0"];
m14_13 [cluster="CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", file="TokenPartitionerTests.cs", label="Exit CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", span="25-25"];
m14_15 [cluster="Unk.All", file="TokenPartitionerTests.cs", label="Entry Unk.All", span=""];
m14_17 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="31-31"];
m14_37 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="62-62"];
m14_38 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="TypeLookup.FindTypeDescriptorAndSibling(name, specs, StringComparer.InvariantCulture)", span="62-62"];
m14_39 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="62-62"];
m14_41 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="70-70"];
m14_42 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="70-70"];
m14_43 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="70-70"];
m14_11 [cluster="CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", file="TokenPartitionerTests.cs", label="Entry CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", span="25-25"];
m14_18 [cluster="CommandLine.Infrastructure.StringExtensions.Spaces(int)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Infrastructure.StringExtensions.Spaces(int)", span="35-35"];
m14_19 [cluster="CommandLine.Infrastructure.StringExtensions.Spaces(int)", file="TokenPartitionerTests.cs", label="return new string(' ', value);", span="37-37"];
m14_40 [cluster="string.Equals(string, System.StringComparison)", file="TokenPartitionerTests.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m14_44 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="70-70"];
m14_45 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="70-70"];
m14_29 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="TokenPartitionerTests.cs", label="var builder = new StringBuilder(value)", span="52-52"];
m14_28 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="TokenPartitionerTests.cs", label="Entry CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", span="50-50"];
m14_20 [cluster="CommandLine.Infrastructure.StringExtensions.Spaces(int)", file="TokenPartitionerTests.cs", label="Exit CommandLine.Infrastructure.StringExtensions.Spaces(int)", span="35-35"];
m14_36 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="45-45"];
m14_35 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs", label="Assert.True(expectedSequence.All(a => options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="70-70"];
m14_30 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="TokenPartitionerTests.cs", label=others, span="53-53"];
m14_33 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", color=green, community=0, file="TokenPartitionerTests.cs", label="0: Exit CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", span="50-50"];
m14_32 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="TokenPartitionerTests.cs", label="return builder.ToString();", span="57-57"];
m14_34 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="TokenPartitionerTests.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m14_31 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="TokenPartitionerTests.cs", label="builder.Append(v)", span="55-55"];
m14_46 [file="TokenPartitionerTests.cs", label=specs, span=""];
m14_47 [file="TokenPartitionerTests.cs", label=options, span=""];
m14_49 [file="TokenPartitionerTests.cs", label=specs, span=""];
m14_50 [file="TokenPartitionerTests.cs", label=options, span=""];
m14_48 [file="TokenPartitionerTests.cs", label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span=""];
m14_51 [file="TokenPartitionerTests.cs", label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span=""];
m15_4 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Entry CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", span="37-37"];
m15_30 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="var result = ChangeTypeScalarImpl(value, conversionType, conversionCulture)", span="39-39"];
m15_31 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="result.Match((_,__) => { }, e => e.First().RethrowWhenAbsentIn(\r\n                new[] { typeof(InvalidCastException), typeof(FormatException), typeof(OverflowException) }))", span="40-41"];
m15_32 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="return result.ToMaybe();", span="42-42"];
m15_33 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Exit CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", span="37-37"];
m15_34 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Entry CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", span="45-45"];
m15_44 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", color=green, community=0, file="TypeConverter.cs", label="2: Func<object> changeType = () =>\r\n            {\r\n                Func<object> safeChangeType = () =>\r\n                {\r\n                    var isFsOption = ReflectionHelper.IsFSharpOptionType(conversionType);\r\n\r\n                    Func<Type> getUnderlyingType =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType);\r\n\r\n                    var type = getUnderlyingType() ?? conversionType;\r\n\r\n                    Func<object> withValue =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(value, type, conversionCulture))\r\n                                : Convert.ChangeType(value, type, conversionCulture);\r\n\r\n                    Func<object> empty = () => isFsOption ? FSharpOptionHelper.None(type) : null;\r\n\r\n                    return (value == null) ? empty() : withValue();\r\n                };\r\n\r\n                return value.IsBooleanString()\r\n                    ? value.ToBoolean() : conversionType.GetTypeInfo().IsEnum\r\n                        ? value.ToEnum(conversionType) : safeChangeType();\r\n            }", span="55-83"];
m15_45 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Func<object> makeType = () =>\r\n            {\r\n                try\r\n                {\r\n                    var ctor = conversionType.GetConstructor(new[] { typeof(string) });\r\n                    return ctor.Invoke(new object[] { value });\r\n                }\r\n                catch (Exception)\r\n                {\r\n                    throw new FormatException(''Destination conversion type must have a constructor that accepts a string.'');\r\n                }\r\n            }", span="77-88"];
m15_46 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="return Result.Try(\r\n                conversionType.IsPrimitiveEx() || ReflectionHelper.IsFSharpOptionType(conversionType)\r\n                    ? changeType\r\n                    : makeType);", span="90-93"];
m15_47 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Exit CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", span="45-45"];
m15_0 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="14-14"];
m15_1 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="return scalar\r\n                ? ChangeTypeScalar(values.Single(), conversionType, conversionCulture)\r\n                : ChangeTypeSequence(values, conversionType, conversionCulture);", span="16-18"];
m15_2 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Exit CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="14-14"];
m15_50 [cluster="RailwaySharp.ErrorHandling.Result.Try<TSuccess>(System.Func<TSuccess>)", file="TypeConverter.cs", label="Entry RailwaySharp.ErrorHandling.Result.Try<TSuccess>(System.Func<TSuccess>)", span="210-210"];
m15_101 [cluster="System.Enum.IsDefined(System.Type, object)", file="TypeConverter.cs", label="Entry System.Enum.IsDefined(System.Type, object)", span="0-0"];
m15_13 [cluster="System.ApplicationException.ApplicationException(string)", file="TypeConverter.cs", label="Entry System.ApplicationException.ApplicationException(string)", span="0-0"];
m15_76 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="TypeConverter.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="14-14"];
m15_16 [cluster="Unk.Any", file="TypeConverter.cs", label="Entry Unk.Any", span=""];
m15_70 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="TypeConverter.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", span="8-8"];
m15_71 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="TypeConverter.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m15_99 [cluster="System.Enum.Parse(System.Type, string)", file="TypeConverter.cs", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
m15_57 [cluster="string.ToEnum(System.Type)", file="TypeConverter.cs", label="Entry string.ToEnum(System.Type)", span="96-96"];
m15_12 [cluster="T.ToMaybe<T>()", file="TypeConverter.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m15_19 [cluster="CSharpx.Maybe.Just<T>(T)", file="TypeConverter.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m15_58 [cluster="System.Func<TResult>.Invoke()", file="TypeConverter.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m15_81 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="77-88"];
m15_21 [cluster="lambda expression", file="TypeConverter.cs", label="ChangeTypeScalar(value, type, conversionCulture)", span="30-30"];
m15_20 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="30-30"];
m15_23 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="32-32"];
m15_27 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="34-34"];
m15_22 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="30-30"];
m15_24 [cluster="lambda expression", file="TypeConverter.cs", label="a.MatchNothing()", span="32-32"];
m15_25 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="32-32"];
m15_28 [cluster="lambda expression", file="TypeConverter.cs", label="((Just<object>)c).Value", span="34-34"];
m15_29 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="34-34"];
m15_37 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="40-40"];
m15_39 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="40-41"];
m15_38 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="40-40"];
m15_40 [cluster="lambda expression", file="TypeConverter.cs", label="e.First().RethrowWhenAbsentIn(\r\n                new[] { typeof(InvalidCastException), typeof(FormatException), typeof(OverflowException) })", span="40-41"];
m15_41 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="40-41"];
m15_52 [cluster="lambda expression", file="TypeConverter.cs", label="Func<object> safeChangeType = () =>\r\n                {\r\n                    var isFsOption = ReflectionHelper.IsFSharpOptionType(conversionType);\r\n\r\n                    Func<Type> getUnderlyingType =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType);\r\n\r\n                    var type = getUnderlyingType() ?? conversionType;\r\n\r\n                    Func<object> withValue =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(value, type, conversionCulture))\r\n                                : Convert.ChangeType(value, type, conversionCulture);\r\n\r\n                    Func<object> empty = () => isFsOption ? FSharpOptionHelper.None(type) : null;\r\n\r\n                    return (value == null) ? empty() : withValue();\r\n                }", span="49-70"];
m15_60 [cluster="lambda expression", file="TypeConverter.cs", label="var isFsOption = ReflectionHelper.IsFSharpOptionType(conversionType)", span="51-51"];
m15_61 [cluster="lambda expression", file="TypeConverter.cs", label="Func<Type> getUnderlyingType =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType)", span="53-57"];
m15_68 [cluster="lambda expression", file="TypeConverter.cs", label="isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType)", span="55-57"];
m15_62 [cluster="lambda expression", file="TypeConverter.cs", label="var type = getUnderlyingType() ?? conversionType", span="59-59"];
m15_63 [cluster="lambda expression", file="TypeConverter.cs", label="Func<object> withValue =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(value, type, conversionCulture))\r\n                                : Convert.ChangeType(value, type, conversionCulture)", span="61-65"];
m15_73 [cluster="lambda expression", file="TypeConverter.cs", label="isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(value, type, conversionCulture))\r\n                                : Convert.ChangeType(value, type, conversionCulture)", span="63-65"];
m15_65 [cluster="lambda expression", file="TypeConverter.cs", label="return (value == null) ? empty() : withValue();", span="69-69"];
m15_53 [cluster="lambda expression", color=green, community=0, file="TypeConverter.cs", label="0: return value.IsBooleanString()\r\n                    ? value.ToBoolean() : conversionType.GetTypeInfo().IsEnum\r\n                        ? value.ToEnum(conversionType) : safeChangeType();", span="80-82"];
m15_82 [cluster="lambda expression", file="TypeConverter.cs", label="var ctor = conversionType.GetConstructor(new[] { typeof(string) })", span="81-81"];
m15_83 [cluster="lambda expression", file="TypeConverter.cs", label="return ctor.Invoke(new object[] { value });", span="82-82"];
m15_51 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="47-75"];
m15_54 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="47-75"];
m15_59 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="49-70"];
m15_64 [cluster="lambda expression", file="TypeConverter.cs", label="Func<object> empty = () => isFsOption ? FSharpOptionHelper.None(type) : null", span="67-67"];
m15_78 [cluster="lambda expression", file="TypeConverter.cs", label="isFsOption ? FSharpOptionHelper.None(type) : null", span="67-67"];
m15_66 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="49-70"];
m15_67 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="54-57"];
m15_69 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="54-57"];
m15_72 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="62-65"];
m15_74 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="62-65"];
m15_77 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="67-67"];
m15_79 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="67-67"];
m15_84 [cluster="lambda expression", file="TypeConverter.cs", label=Exception, span="84-84"];
m15_85 [cluster="lambda expression", file="TypeConverter.cs", label="throw new FormatException(''Destination conversion type must have a constructor that accepts a string.'');", span="86-86"];
m15_86 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="77-88"];
m15_42 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="TypeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m15_75 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="TypeConverter.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m15_3 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="TypeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m15_49 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="TypeConverter.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35"];
m15_48 [cluster="System.Type.IsPrimitiveEx()", file="TypeConverter.cs", label="Entry System.Type.IsPrimitiveEx()", span="209-209"];
m15_5 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Entry CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", span="21-21"];
m15_6 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", color=green, community=0, file="TypeConverter.cs", label="0: var type =\r\n                conversionType.GetGenericArguments()\r\n                              .SingleOrDefault()\r\n                              .ToMaybe()\r\n                              .FromJustOrFail(\r\n#if !PLATFORM_DOTNET\r\n                                  new ApplicationException(''Non scalar properties should be sequence of type IEnumerable<T>.'')\r\n#else\r\n                                  new Exception(''Non scalar properties should be sequence of type IEnumerable<T>.'')\r\n#endif\r\n                    )", span="26-36"];
m15_7 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="var converted = values.Select(value => ChangeTypeScalar(value, type, conversionCulture))", span="30-30"];
m15_8 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="return converted.Any(a => a.MatchNothing())\r\n                ? Maybe.Nothing<object>()\r\n                : Maybe.Just(converted.Select(c => ((Just<object>)c).Value).ToUntypedArray(type));", span="32-34"];
m15_9 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Exit CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", span="21-21"];
m15_15 [cluster="Unk.Select", file="TypeConverter.cs", label="Entry Unk.Select", span=""];
m15_10 [cluster="System.Type.GetGenericArguments()", file="TypeConverter.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m15_56 [cluster="string.ToBoolean()", file="TypeConverter.cs", label="Entry string.ToBoolean()", span="71-71"];
m15_89 [cluster="System.FormatException.FormatException(string)", file="TypeConverter.cs", label="Entry System.FormatException.FormatException(string)", span="0-0"];
m15_87 [cluster="System.Type.GetConstructor(System.Type[])", file="TypeConverter.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m15_17 [cluster="CSharpx.Maybe.Nothing<T>()", file="TypeConverter.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m15_14 [cluster="CSharpx.Maybe<T>.FromJustOrFail<T>(System.Exception)", file="TypeConverter.cs", label="Entry CSharpx.Maybe<T>.FromJustOrFail<T>(System.Exception)", span="355-355"];
m15_80 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="TypeConverter.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="22-22"];
m15_35 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Match<TSuccess, TMessage>(System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", file="TypeConverter.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Match<TSuccess, TMessage>(System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", span="495-495"];
m15_55 [cluster="string.IsBooleanString()", file="TypeConverter.cs", label="Entry string.IsBooleanString()", span="65-65"];
m15_26 [cluster="Unk.MatchNothing", file="TypeConverter.cs", label="Entry Unk.MatchNothing", span=""];
m15_90 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="Entry CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", span="96-96"];
m15_91 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="object parsedValue", span="98-98"];
m15_92 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="parsedValue = Enum.Parse(conversionType, value)", span="101-101"];
m15_95 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="Enum.IsDefined(conversionType, parsedValue)", span="107-107"];
m15_93 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label=ArgumentException, span="103-103"];
m15_96 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="return parsedValue;", span="109-109"];
m15_94 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="throw new FormatException();", span="105-105"];
m15_97 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="throw new FormatException();", span="111-111"];
m15_98 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="Exit CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", span="96-96"];
m15_88 [cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="TypeConverter.cs", label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0"];
m15_18 [cluster="Unk.ToUntypedArray", file="TypeConverter.cs", label="Entry Unk.ToUntypedArray", span=""];
m15_100 [cluster="System.FormatException.FormatException()", file="TypeConverter.cs", label="Entry System.FormatException.FormatException()", span="0-0"];
m15_36 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToMaybe<TSuccess, TMessage>()", file="TypeConverter.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToMaybe<TSuccess, TMessage>()", span="25-25"];
m15_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="TypeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m15_43 [cluster="System.Exception.RethrowWhenAbsentIn(System.Collections.Generic.IEnumerable<System.Type>)", file="TypeConverter.cs", label="Entry System.Exception.RethrowWhenAbsentIn(System.Collections.Generic.IEnumerable<System.Type>)", span="11-11"];
m15_102 [file="TypeConverter.cs", label="System.Globalization.CultureInfo", span=""];
m15_103 [file="TypeConverter.cs", label=type, span=""];
m15_104 [file="TypeConverter.cs", label=string, span=""];
m15_105 [file="TypeConverter.cs", label="System.Type", span=""];
m15_106 [file="TypeConverter.cs", label="System.Globalization.CultureInfo", span=""];
m15_107 [file="TypeConverter.cs", label=isFsOption, span=""];
m15_108 [file="TypeConverter.cs", label=type, span=""];
m16_17 [cluster="Unk.Create", file="Verb.cs", label="Entry Unk.Create", span=""];
m16_0 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs", label="Entry CommandLine.Core.Verb.Verb(string, string)", span="13-13"];
m16_1 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs", label="name == null", span="15-15"];
m16_3 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs", label="helpText == null", span="16-16"];
m16_5 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs", label="this.name = name", span="18-18"];
m16_6 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs", label="this.helpText = helpText", span="19-19"];
m16_2 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs", label="throw new ArgumentNullException(''name'');", span="15-15"];
m16_4 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs", label="throw new ArgumentNullException(''helpText'');", span="16-16"];
m16_7 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs", label="Exit CommandLine.Core.Verb.Verb(string, string)", span="13-13"];
m16_16 [cluster="Unk.Single", file="Verb.cs", label="Entry Unk.Single", span=""];
m16_15 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="Verb.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m16_12 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="Verb.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m16_13 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="Verb.cs", label="return from type in types\r\n                   let attrs = type.GetCustomAttributes(typeof(VerbAttribute), true)\r\n                   where attrs.Length == 1\r\n                   select Tuple.Create(\r\n                       FromAttribute((VerbAttribute)attrs.Single()),\r\n                       type);", span="42-47"];
m16_14 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="Verb.cs", label="Exit CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m16_9 [cluster="CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", file="Verb.cs", label="Entry CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", span="32-32"];
m16_10 [cluster="CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", file="Verb.cs", label="return new Verb(\r\n                attribute.Name,\r\n                attribute.HelpText\r\n                );", span="34-37"];
m16_11 [cluster="CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", file="Verb.cs", label="Exit CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", span="32-32"];
m16_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Verb.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m16_18 [file="Verb.cs", label="CommandLine.Core.Verb", span=""];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_1 -> m0_4  [key=2, style=dotted];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [key=2, style=dotted];
m0_11 -> m0_9  [color=blue, key=0, style=bold];
m0_13 -> m0_14  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_16  [key=2, style=dotted];
m0_15 -> m0_13  [color=blue, key=0, style=bold];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_8  [key=2, style=dotted];
m0_7 -> m0_5  [color=blue, key=0, style=bold];
m1_13 -> m1_14  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_16  [key=2, style=dotted];
m1_14 -> m1_0  [key=2, style=dotted];
m1_14 -> m1_7  [key=2, style=dotted];
m1_14 -> m1_17  [key=2, style=dotted];
m1_15 -> m1_13  [color=blue, key=0, style=bold];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_16  [key=2, style=dotted];
m1_19 -> m1_0  [key=2, style=dotted];
m1_19 -> m1_7  [key=2, style=dotted];
m1_19 -> m1_8  [key=2, style=dotted];
m1_20 -> m1_18  [color=blue, key=0, style=bold];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_7  [key=2, style=dotted];
m1_5 -> m1_8  [key=2, style=dotted];
m1_6 -> m1_4  [color=blue, key=0, style=bold];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_7  [key=2, style=dotted];
m1_10 -> m1_12  [key=2, style=dotted];
m1_11 -> m1_9  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m2_18 -> m2_19  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_3  [key=2, style=dotted];
m2_20 -> m2_18  [color=blue, key=0, style=bold];
m2_15 -> m2_16  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_14  [key=2, style=dotted];
m2_17 -> m2_15  [color=blue, key=0, style=bold];
m2_37 -> m2_38  [key=0, style=solid];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_40  [key=2, style=dotted];
m2_39 -> m2_37  [color=blue, key=0, style=bold];
m2_41 -> m2_42  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_40  [key=2, style=dotted];
m2_43 -> m2_41  [color=blue, key=0, style=bold];
m2_21 -> m2_22  [key=0, style=solid];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_24  [key=2, style=dotted];
m2_23 -> m2_21  [color=blue, key=0, style=bold];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_7  [key=2, style=dotted];
m2_10 -> m2_8  [color=blue, key=0, style=bold];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_30  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_34  [key=2, style=dotted];
m2_29 -> m2_31  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_29 -> m2_32  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_32  [key=0, style=solid];
m2_31 -> m2_30  [key=0, style=solid];
m2_31 -> m2_35  [key=2, style=dotted];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_36  [key=2, style=dotted];
m2_33 -> m2_28  [color=blue, key=0, style=bold];
m2_25 -> m2_26  [key=0, style=solid];
m2_26 -> m2_27  [key=0, style=solid];
m2_27 -> m2_25  [color=blue, key=0, style=bold];
m2_11 -> m2_12  [key=0, style=solid];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_14  [key=2, style=dotted];
m2_13 -> m2_11  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [key=2, style=dotted];
m2_6 -> m2_4  [color=blue, key=0, style=bold];
m3_50 -> m3_51  [key=0, style=solid];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_3  [key=2, style=dotted];
m3_51 -> m3_19  [key=2, style=dotted];
m3_51 -> m3_34  [key=2, style=dotted];
m3_51 -> m3_35  [key=2, style=dotted];
m3_51 -> m3_36  [key=2, style=dotted];
m3_51 -> m3_37  [key=2, style=dotted];
m3_51 -> m3_20  [key=2, style=dotted];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_4  [key=2, style=dotted];
m3_52 -> m3_21  [key=2, style=dotted];
m3_52 -> m3_38  [key=2, style=dotted];
m3_52 -> m3_54  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_52 -> m3_55  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_52 -> m3_56  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_52 -> m3_57  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_52 -> m3_58  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_5  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_5  [key=2, style=dotted];
m3_55 -> m3_56  [key=0, style=solid];
m3_55 -> m3_5  [key=2, style=dotted];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_5  [key=2, style=dotted];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_5  [key=2, style=dotted];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_5  [key=2, style=dotted];
m3_59 -> m3_50  [color=blue, key=0, style=bold];
m3_22 -> m3_23  [key=0, style=solid];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_3  [key=2, style=dotted];
m3_23 -> m3_19  [key=2, style=dotted];
m3_23 -> m3_34  [key=2, style=dotted];
m3_23 -> m3_35  [key=2, style=dotted];
m3_23 -> m3_36  [key=2, style=dotted];
m3_23 -> m3_37  [key=2, style=dotted];
m3_23 -> m3_20  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_4  [key=2, style=dotted];
m3_24 -> m3_21  [key=2, style=dotted];
m3_24 -> m3_38  [key=2, style=dotted];
m3_24 -> m3_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_24 -> m3_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_24 -> m3_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_24 -> m3_29  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_24 -> m3_30  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_24 -> m3_31  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_24 -> m3_32  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_5  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_5  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_5  [key=2, style=dotted];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_5  [key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_5  [key=2, style=dotted];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_5  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_5  [key=2, style=dotted];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_5  [key=2, style=dotted];
m3_33 -> m3_22  [color=blue, key=0, style=bold];
m3_66 -> m3_67  [key=0, style=solid];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_65  [key=2, style=dotted];
m3_67 -> m3_17  [key=2, style=dotted];
m3_67 -> m3_69  [color=darkseagreen4, key=1, label=sut, style=dashed];
m3_67 -> m3_70  [color=darkseagreen4, key=1, label=sut, style=dashed];
m3_68 -> m3_69  [key=0, style=solid];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_34  [key=2, style=dotted];
m3_69 -> m3_35  [key=2, style=dotted];
m3_69 -> m3_36  [key=2, style=dotted];
m3_69 -> m3_37  [key=2, style=dotted];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_4  [key=2, style=dotted];
m3_70 -> m3_77  [key=2, style=dotted];
m3_70 -> m3_72  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_70 -> m3_73  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_70 -> m3_74  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_70 -> m3_75  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_5  [key=2, style=dotted];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_5  [key=2, style=dotted];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_5  [key=2, style=dotted];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_5  [key=2, style=dotted];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_5  [key=2, style=dotted];
m3_76 -> m3_66  [color=blue, key=0, style=bold];
m3_78 -> m3_79  [key=0, style=solid];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_65  [key=2, style=dotted];
m3_79 -> m3_17  [key=2, style=dotted];
m3_79 -> m3_81  [color=darkseagreen4, key=1, label=sut, style=dashed];
m3_79 -> m3_82  [color=darkseagreen4, key=1, label=sut, style=dashed];
m3_80 -> m3_81  [key=0, style=solid];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_34  [key=2, style=dotted];
m3_81 -> m3_35  [key=2, style=dotted];
m3_81 -> m3_36  [key=2, style=dotted];
m3_81 -> m3_37  [key=2, style=dotted];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_4  [key=2, style=dotted];
m3_82 -> m3_21  [key=2, style=dotted];
m3_82 -> m3_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_82 -> m3_85  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_82 -> m3_86  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_82 -> m3_87  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_82 -> m3_88  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_83 -> m3_84  [key=0, style=solid];
m3_83 -> m3_5  [key=2, style=dotted];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_5  [key=2, style=dotted];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_5  [key=2, style=dotted];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_5  [key=2, style=dotted];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_5  [key=2, style=dotted];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_5  [key=2, style=dotted];
m3_89 -> m3_78  [color=blue, key=0, style=bold];
m3_149 -> m3_150  [key=0, style=solid];
m3_150 -> m3_151  [key=0, style=solid];
m3_150 -> m3_34  [key=2, style=dotted];
m3_150 -> m3_35  [key=2, style=dotted];
m3_150 -> m3_116  [key=2, style=dotted];
m3_150 -> m3_121  [key=2, style=dotted];
m3_150 -> m3_118  [key=2, style=dotted];
m3_151 -> m3_152  [key=0, style=solid];
m3_151 -> m3_163  [key=2, style=dotted];
m3_152 -> m3_153  [key=0, style=solid];
m3_152 -> m3_4  [key=2, style=dotted];
m3_152 -> m3_21  [key=2, style=dotted];
m3_152 -> m3_38  [key=2, style=dotted];
m3_152 -> m3_154  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_152 -> m3_155  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_152 -> m3_156  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_152 -> m3_157  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_152 -> m3_158  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_152 -> m3_159  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_152 -> m3_160  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_152 -> m3_161  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_153 -> m3_154  [key=0, style=solid];
m3_153 -> m3_164  [key=2, style=dotted];
m3_153 -> m3_165  [key=2, style=dotted];
m3_154 -> m3_155  [key=0, style=solid];
m3_154 -> m3_164  [key=2, style=dotted];
m3_154 -> m3_165  [key=2, style=dotted];
m3_155 -> m3_156  [key=0, style=solid];
m3_155 -> m3_5  [key=2, style=dotted];
m3_156 -> m3_157  [key=0, style=solid];
m3_156 -> m3_5  [key=2, style=dotted];
m3_157 -> m3_158  [key=0, style=solid];
m3_157 -> m3_5  [key=2, style=dotted];
m3_158 -> m3_159  [key=0, style=solid];
m3_158 -> m3_5  [key=2, style=dotted];
m3_159 -> m3_160  [key=0, style=solid];
m3_159 -> m3_5  [key=2, style=dotted];
m3_160 -> m3_161  [key=0, style=solid];
m3_160 -> m3_5  [key=2, style=dotted];
m3_161 -> m3_162  [key=0, style=solid];
m3_161 -> m3_5  [key=2, style=dotted];
m3_162 -> m3_149  [color=blue, key=0, style=bold];
m3_193 -> m3_194  [key=0, style=solid];
m3_194 -> m3_195  [key=0, style=solid];
m3_194 -> m3_3  [key=2, style=dotted];
m3_194 -> m3_19  [key=2, style=dotted];
m3_194 -> m3_34  [key=2, style=dotted];
m3_194 -> m3_35  [key=2, style=dotted];
m3_194 -> m3_36  [key=2, style=dotted];
m3_194 -> m3_37  [key=2, style=dotted];
m3_194 -> m3_20  [key=2, style=dotted];
m3_195 -> m3_196  [key=0, style=solid];
m3_195 -> m3_4  [key=2, style=dotted];
m3_195 -> m3_21  [key=2, style=dotted];
m3_195 -> m3_38  [key=2, style=dotted];
m3_195 -> m3_197  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_195 -> m3_198  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_195 -> m3_199  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_195 -> m3_200  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_195 -> m3_201  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_195 -> m3_202  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_195 -> m3_203  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_195 -> m3_204  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_196 -> m3_197  [key=0, style=solid];
m3_196 -> m3_5  [key=2, style=dotted];
m3_197 -> m3_198  [key=0, style=solid];
m3_197 -> m3_5  [key=2, style=dotted];
m3_198 -> m3_199  [key=0, style=solid];
m3_198 -> m3_5  [key=2, style=dotted];
m3_199 -> m3_200  [key=0, style=solid];
m3_199 -> m3_5  [key=2, style=dotted];
m3_200 -> m3_201  [key=0, style=solid];
m3_200 -> m3_5  [key=2, style=dotted];
m3_201 -> m3_202  [key=0, style=solid];
m3_201 -> m3_5  [key=2, style=dotted];
m3_202 -> m3_203  [key=0, style=solid];
m3_202 -> m3_5  [key=2, style=dotted];
m3_203 -> m3_204  [key=0, style=solid];
m3_203 -> m3_5  [key=2, style=dotted];
m3_204 -> m3_205  [key=0, style=solid];
m3_204 -> m3_5  [key=2, style=dotted];
m3_205 -> m3_193  [color=blue, key=0, style=bold];
m3_39 -> m3_40  [key=0, style=solid];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_3  [key=2, style=dotted];
m3_40 -> m3_19  [key=2, style=dotted];
m3_40 -> m3_34  [key=2, style=dotted];
m3_40 -> m3_35  [key=2, style=dotted];
m3_40 -> m3_36  [key=2, style=dotted];
m3_40 -> m3_37  [key=2, style=dotted];
m3_40 -> m3_20  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_4  [key=2, style=dotted];
m3_41 -> m3_21  [key=2, style=dotted];
m3_41 -> m3_38  [key=2, style=dotted];
m3_41 -> m3_43  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_41 -> m3_44  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_41 -> m3_45  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_41 -> m3_46  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_41 -> m3_47  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_41 -> m3_48  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_5  [key=2, style=dotted];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_5  [key=2, style=dotted];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_5  [key=2, style=dotted];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_5  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_5  [key=2, style=dotted];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_5  [key=2, style=dotted];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_5  [key=2, style=dotted];
m3_49 -> m3_39  [color=blue, key=0, style=bold];
m3_90 -> m3_91  [key=0, style=solid];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_65  [key=2, style=dotted];
m3_91 -> m3_93  [color=darkseagreen4, key=1, label=sut, style=dashed];
m3_91 -> m3_94  [color=darkseagreen4, key=1, label=sut, style=dashed];
m3_92 -> m3_93  [key=0, style=solid];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_19  [key=2, style=dotted];
m3_93 -> m3_34  [key=2, style=dotted];
m3_93 -> m3_35  [key=2, style=dotted];
m3_93 -> m3_36  [key=2, style=dotted];
m3_93 -> m3_37  [key=2, style=dotted];
m3_93 -> m3_20  [key=2, style=dotted];
m3_94 -> m3_95  [key=0, style=solid];
m3_94 -> m3_4  [key=2, style=dotted];
m3_94 -> m3_21  [key=2, style=dotted];
m3_94 -> m3_96  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_94 -> m3_97  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_94 -> m3_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_94 -> m3_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_94 -> m3_100  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_5  [key=2, style=dotted];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_5  [key=2, style=dotted];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_5  [key=2, style=dotted];
m3_98 -> m3_99  [key=0, style=solid];
m3_98 -> m3_5  [key=2, style=dotted];
m3_99 -> m3_100  [key=0, style=solid];
m3_99 -> m3_5  [key=2, style=dotted];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_5  [key=2, style=dotted];
m3_101 -> m3_90  [color=blue, key=0, style=bold];
m3_178 -> m3_179  [key=0, style=solid];
m3_179 -> m3_180  [key=0, style=solid];
m3_179 -> m3_36  [key=2, style=dotted];
m3_179 -> m3_191  [key=2, style=dotted];
m3_180 -> m3_181  [key=0, style=solid];
m3_180 -> m3_34  [key=2, style=dotted];
m3_180 -> m3_192  [key=2, style=dotted];
m3_180 -> m3_125  [key=2, style=dotted];
m3_181 -> m3_182  [key=0, style=solid];
m3_181 -> m3_163  [key=2, style=dotted];
m3_182 -> m3_183  [key=0, style=solid];
m3_182 -> m3_4  [key=2, style=dotted];
m3_182 -> m3_21  [key=2, style=dotted];
m3_182 -> m3_38  [key=2, style=dotted];
m3_182 -> m3_184  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_182 -> m3_185  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_182 -> m3_186  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_182 -> m3_187  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_182 -> m3_188  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_182 -> m3_189  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_183 -> m3_184  [key=0, style=solid];
m3_183 -> m3_164  [key=2, style=dotted];
m3_183 -> m3_165  [key=2, style=dotted];
m3_184 -> m3_185  [key=0, style=solid];
m3_184 -> m3_164  [key=2, style=dotted];
m3_184 -> m3_165  [key=2, style=dotted];
m3_185 -> m3_186  [key=0, style=solid];
m3_185 -> m3_5  [key=2, style=dotted];
m3_186 -> m3_187  [key=0, style=solid];
m3_186 -> m3_5  [key=2, style=dotted];
m3_187 -> m3_188  [key=0, style=solid];
m3_187 -> m3_5  [key=2, style=dotted];
m3_188 -> m3_189  [key=0, style=solid];
m3_188 -> m3_5  [key=2, style=dotted];
m3_189 -> m3_190  [key=0, style=solid];
m3_189 -> m3_5  [key=2, style=dotted];
m3_190 -> m3_178  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_1 -> m3_4  [key=2, style=dotted];
m3_1 -> m3_5  [key=2, style=dotted];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_60 -> m3_61  [key=0, style=solid];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_65  [key=2, style=dotted];
m3_61 -> m3_34  [key=2, style=dotted];
m3_61 -> m3_35  [key=2, style=dotted];
m3_61 -> m3_36  [key=2, style=dotted];
m3_61 -> m3_37  [key=2, style=dotted];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_4  [key=2, style=dotted];
m3_62 -> m3_21  [key=2, style=dotted];
m3_62 -> m3_38  [key=2, style=dotted];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_5  [key=2, style=dotted];
m3_64 -> m3_60  [color=blue, key=0, style=bold];
m3_206 -> m3_207  [key=0, style=solid];
m3_207 -> m3_208  [key=0, style=solid];
m3_207 -> m3_34  [key=2, style=dotted];
m3_207 -> m3_35  [key=2, style=dotted];
m3_207 -> m3_36  [key=2, style=dotted];
m3_208 -> m3_209  [key=0, style=solid];
m3_208 -> m3_222  [key=2, style=dotted];
m3_209 -> m3_210  [key=0, style=solid];
m3_209 -> m3_21  [key=2, style=dotted];
m3_209 -> m3_211  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_209 -> m3_212  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_209 -> m3_213  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_209 -> m3_214  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_209 -> m3_215  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_209 -> m3_216  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_209 -> m3_217  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_209 -> m3_218  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_209 -> m3_219  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_209 -> m3_220  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_210 -> m3_211  [key=0, style=solid];
m3_210 -> m3_5  [key=2, style=dotted];
m3_211 -> m3_212  [key=0, style=solid];
m3_211 -> m3_5  [key=2, style=dotted];
m3_212 -> m3_213  [key=0, style=solid];
m3_212 -> m3_5  [key=2, style=dotted];
m3_213 -> m3_214  [key=0, style=solid];
m3_213 -> m3_5  [key=2, style=dotted];
m3_214 -> m3_215  [key=0, style=solid];
m3_214 -> m3_5  [key=2, style=dotted];
m3_215 -> m3_216  [key=0, style=solid];
m3_215 -> m3_5  [key=2, style=dotted];
m3_216 -> m3_217  [key=0, style=solid];
m3_216 -> m3_5  [key=2, style=dotted];
m3_217 -> m3_218  [key=0, style=solid];
m3_217 -> m3_5  [key=2, style=dotted];
m3_218 -> m3_219  [key=0, style=solid];
m3_218 -> m3_5  [key=2, style=dotted];
m3_219 -> m3_220  [key=0, style=solid];
m3_219 -> m3_5  [key=2, style=dotted];
m3_220 -> m3_221  [key=0, style=solid];
m3_220 -> m3_5  [key=2, style=dotted];
m3_221 -> m3_206  [color=blue, key=0, style=bold];
m3_146 -> m3_147  [key=0, style=solid];
m3_128 -> m3_129  [key=0, style=solid];
m3_128 -> m3_131  [key=0, style=solid];
m3_128 -> m3_133  [key=0, style=solid];
m3_128 -> m3_135  [key=0, style=solid];
m3_128 -> m3_137  [key=0, style=solid];
m3_128 -> m3_139  [key=0, style=solid];
m3_128 -> m3_141  [key=0, style=solid];
m3_128 -> m3_143  [key=0, style=solid];
m3_130 -> m3_144  [key=0, style=solid];
m3_132 -> m3_144  [key=0, style=solid];
m3_134 -> m3_144  [key=0, style=solid];
m3_136 -> m3_144  [key=0, style=solid];
m3_138 -> m3_144  [key=0, style=solid];
m3_142 -> m3_144  [key=0, style=solid];
m3_127 -> m3_128  [key=0, style=solid];
m3_127 -> m3_130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_127 -> m3_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_127 -> m3_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_127 -> m3_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_127 -> m3_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_127 -> m3_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_129 -> m3_130  [key=0, style=solid];
m3_131 -> m3_132  [key=0, style=solid];
m3_133 -> m3_134  [key=0, style=solid];
m3_135 -> m3_136  [key=0, style=solid];
m3_137 -> m3_138  [key=0, style=solid];
m3_139 -> m3_140  [key=0, style=solid];
m3_141 -> m3_142  [key=0, style=solid];
m3_143 -> m3_144  [key=0, style=solid];
m3_143 -> m3_145  [key=2, style=dotted];
m3_140 -> m3_144  [key=0, style=solid];
m3_144 -> m3_127  [color=blue, key=0, style=bold];
m3_147 -> m3_148  [key=0, style=solid];
m3_148 -> m3_146  [color=blue, key=0, style=bold];
m3_254 -> m3_255  [key=0, style=solid];
m3_255 -> m3_256  [key=0, style=solid];
m3_255 -> m3_266  [key=2, style=dotted];
m3_255 -> m3_267  [key=2, style=dotted];
m3_255 -> m3_257  [color=darkseagreen4, key=1, label=handlers, style=dashed];
m3_255 -> m3_259  [color=darkseagreen4, key=1, label=handlers, style=dashed];
m3_256 -> m3_257  [key=0, style=solid];
m3_256 -> m3_34  [key=2, style=dotted];
m3_256 -> m3_268  [key=2, style=dotted];
m3_256 -> m3_116  [key=2, style=dotted];
m3_256 -> m3_258  [color=darkseagreen4, key=1, label=fakeResult, style=dashed];
m3_257 -> m3_258  [key=0, style=solid];
m3_257 -> m3_269  [key=2, style=dotted];
m3_259 -> m3_260  [key=0, style=solid];
m3_259 -> m3_269  [key=2, style=dotted];
m3_258 -> m3_259  [key=0, style=solid];
m3_258 -> m3_163  [key=2, style=dotted];
m3_258 -> m3_260  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m3_260 -> m3_261  [key=0, style=solid];
m3_260 -> m3_4  [key=2, style=dotted];
m3_261 -> m3_262  [key=0, style=solid];
m3_261 -> m3_21  [key=2, style=dotted];
m3_261 -> m3_38  [key=2, style=dotted];
m3_261 -> m3_263  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_261 -> m3_264  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_262 -> m3_263  [key=0, style=solid];
m3_262 -> m3_164  [key=2, style=dotted];
m3_262 -> m3_270  [key=2, style=dotted];
m3_263 -> m3_264  [key=0, style=solid];
m3_263 -> m3_164  [key=2, style=dotted];
m3_263 -> m3_270  [key=2, style=dotted];
m3_264 -> m3_265  [key=0, style=solid];
m3_264 -> m3_164  [key=2, style=dotted];
m3_264 -> m3_270  [key=2, style=dotted];
m3_265 -> m3_254  [color=blue, key=0, style=bold];
m3_223 -> m3_224  [key=0, style=solid];
m3_224 -> m3_225  [key=0, style=solid];
m3_224 -> m3_34  [key=2, style=dotted];
m3_224 -> m3_35  [key=2, style=dotted];
m3_224 -> m3_116  [key=2, style=dotted];
m3_225 -> m3_226  [key=0, style=solid];
m3_225 -> m3_163  [key=2, style=dotted];
m3_226 -> m3_227  [key=0, style=solid];
m3_226 -> m3_4  [key=2, style=dotted];
m3_227 -> m3_228  [key=0, style=solid];
m3_227 -> m3_21  [key=2, style=dotted];
m3_227 -> m3_38  [key=2, style=dotted];
m3_227 -> m3_229  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_230  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_231  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_232  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_233  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_234  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_235  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_236  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_237  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_238  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_239  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_240  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_241  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_242  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_243  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_244  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_245  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_246  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_247  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_248  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_249  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_250  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_251  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_227 -> m3_252  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_228 -> m3_229  [key=0, style=solid];
m3_228 -> m3_164  [key=2, style=dotted];
m3_228 -> m3_165  [key=2, style=dotted];
m3_229 -> m3_230  [key=0, style=solid];
m3_229 -> m3_164  [key=2, style=dotted];
m3_229 -> m3_165  [key=2, style=dotted];
m3_230 -> m3_231  [key=0, style=solid];
m3_230 -> m3_5  [key=2, style=dotted];
m3_231 -> m3_232  [key=0, style=solid];
m3_231 -> m3_5  [key=2, style=dotted];
m3_232 -> m3_233  [key=0, style=solid];
m3_232 -> m3_5  [key=2, style=dotted];
m3_233 -> m3_234  [key=0, style=solid];
m3_233 -> m3_5  [key=2, style=dotted];
m3_234 -> m3_235  [key=0, style=solid];
m3_234 -> m3_5  [key=2, style=dotted];
m3_235 -> m3_236  [key=0, style=solid];
m3_235 -> m3_5  [key=2, style=dotted];
m3_236 -> m3_237  [key=0, style=solid];
m3_236 -> m3_5  [key=2, style=dotted];
m3_237 -> m3_238  [key=0, style=solid];
m3_237 -> m3_5  [key=2, style=dotted];
m3_238 -> m3_239  [key=0, style=solid];
m3_238 -> m3_5  [key=2, style=dotted];
m3_239 -> m3_240  [key=0, style=solid];
m3_239 -> m3_5  [key=2, style=dotted];
m3_240 -> m3_241  [key=0, style=solid];
m3_240 -> m3_5  [key=2, style=dotted];
m3_241 -> m3_242  [key=0, style=solid];
m3_241 -> m3_5  [key=2, style=dotted];
m3_242 -> m3_243  [key=0, style=solid];
m3_242 -> m3_5  [key=2, style=dotted];
m3_243 -> m3_244  [key=0, style=solid];
m3_243 -> m3_5  [key=2, style=dotted];
m3_244 -> m3_245  [key=0, style=solid];
m3_244 -> m3_5  [key=2, style=dotted];
m3_245 -> m3_246  [key=0, style=solid];
m3_245 -> m3_5  [key=2, style=dotted];
m3_246 -> m3_247  [key=0, style=solid];
m3_246 -> m3_5  [key=2, style=dotted];
m3_247 -> m3_248  [key=0, style=solid];
m3_247 -> m3_5  [key=2, style=dotted];
m3_248 -> m3_249  [key=0, style=solid];
m3_248 -> m3_5  [key=2, style=dotted];
m3_249 -> m3_250  [key=0, style=solid];
m3_249 -> m3_5  [key=2, style=dotted];
m3_250 -> m3_251  [key=0, style=solid];
m3_250 -> m3_5  [key=2, style=dotted];
m3_251 -> m3_252  [key=0, style=solid];
m3_251 -> m3_5  [key=2, style=dotted];
m3_252 -> m3_253  [key=0, style=solid];
m3_252 -> m3_5  [key=2, style=dotted];
m3_253 -> m3_223  [color=blue, key=0, style=bold];
m3_6 -> m3_7  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_16  [key=2, style=dotted];
m3_7 -> m3_17  [key=2, style=dotted];
m3_7 -> m3_18  [key=2, style=dotted];
m3_7 -> m3_19  [key=2, style=dotted];
m3_7 -> m3_20  [key=2, style=dotted];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_4  [key=2, style=dotted];
m3_8 -> m3_21  [key=2, style=dotted];
m3_8 -> m3_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_8 -> m3_11  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_8 -> m3_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_8 -> m3_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_8 -> m3_14  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_5  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_5  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_5  [key=2, style=dotted];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_5  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_5  [key=2, style=dotted];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_5  [key=2, style=dotted];
m3_15 -> m3_6  [color=blue, key=0, style=bold];
m3_102 -> m3_103  [key=0, style=solid];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_34  [key=2, style=dotted];
m3_103 -> m3_35  [key=2, style=dotted];
m3_103 -> m3_116  [key=2, style=dotted];
m3_103 -> m3_117  [key=2, style=dotted];
m3_103 -> m3_118  [key=2, style=dotted];
m3_103 -> m3_119  [key=2, style=dotted];
m3_103 -> m3_120  [key=2, style=dotted];
m3_103 -> m3_121  [key=2, style=dotted];
m3_103 -> m3_122  [key=2, style=dotted];
m3_103 -> m3_123  [key=2, style=dotted];
m3_103 -> m3_124  [key=2, style=dotted];
m3_103 -> m3_125  [key=2, style=dotted];
m3_103 -> m3_106  [color=darkseagreen4, key=1, label=fakeResult, style=dashed];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_128  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_104 -> m3_130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_104 -> m3_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_104 -> m3_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_104 -> m3_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_104 -> m3_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_104 -> m3_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_104 -> m3_106  [color=darkseagreen4, key=1, label=fakeRenderer, style=dashed];
m3_104 -> m3_104  [color=darkorchid, key=3, label="Local variable System.Func<CommandLine.Error, string> fakeRenderer", style=bold];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_126  [key=2, style=dotted];
m3_105 -> m3_106  [key=0, style=solid];
m3_105 -> m3_105  [color=darkorchid, key=3, label="Local variable System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string> fakeMutExclRenderer", style=bold];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_21  [key=2, style=dotted];
m3_107 -> m3_109  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_107 -> m3_110  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_107 -> m3_111  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_107 -> m3_112  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_107 -> m3_113  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_107 -> m3_114  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_5  [key=2, style=dotted];
m3_109 -> m3_110  [key=0, style=solid];
m3_109 -> m3_5  [key=2, style=dotted];
m3_110 -> m3_111  [key=0, style=solid];
m3_110 -> m3_5  [key=2, style=dotted];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_5  [key=2, style=dotted];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> m3_5  [key=2, style=dotted];
m3_113 -> m3_114  [key=0, style=solid];
m3_113 -> m3_5  [key=2, style=dotted];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> m3_5  [key=2, style=dotted];
m3_115 -> m3_102  [color=blue, key=0, style=bold];
m3_166 -> m3_167  [key=0, style=solid];
m3_167 -> m3_168  [key=0, style=solid];
m3_167 -> m3_34  [key=2, style=dotted];
m3_167 -> m3_35  [key=2, style=dotted];
m3_167 -> m3_125  [key=2, style=dotted];
m3_168 -> m3_169  [key=0, style=solid];
m3_168 -> m3_163  [key=2, style=dotted];
m3_169 -> m3_170  [key=0, style=solid];
m3_169 -> m3_4  [key=2, style=dotted];
m3_169 -> m3_21  [key=2, style=dotted];
m3_169 -> m3_38  [key=2, style=dotted];
m3_169 -> m3_171  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_169 -> m3_172  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_169 -> m3_173  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_169 -> m3_174  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_169 -> m3_175  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_169 -> m3_176  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_164  [key=2, style=dotted];
m3_170 -> m3_165  [key=2, style=dotted];
m3_171 -> m3_172  [key=0, style=solid];
m3_171 -> m3_164  [key=2, style=dotted];
m3_171 -> m3_165  [key=2, style=dotted];
m3_172 -> m3_173  [key=0, style=solid];
m3_172 -> m3_5  [key=2, style=dotted];
m3_173 -> m3_174  [key=0, style=solid];
m3_173 -> m3_5  [key=2, style=dotted];
m3_174 -> m3_175  [key=0, style=solid];
m3_174 -> m3_5  [key=2, style=dotted];
m3_175 -> m3_176  [key=0, style=solid];
m3_175 -> m3_5  [key=2, style=dotted];
m3_176 -> m3_177  [key=0, style=solid];
m3_176 -> m3_5  [key=2, style=dotted];
m3_177 -> m3_166  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_5  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m4_0 -> m4_33  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m4_0 -> m4_7  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m4_0 -> m4_48  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", style=dashed];
m4_0 -> m4_50  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_0 -> m4_85  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_0 -> m4_54  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_0 -> m4_89  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m4_0 -> m4_55  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m4_0 -> m4_93  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m4_0 -> m4_56  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_0 -> m4_96  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_0 -> m4_58  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m4_0 -> m4_100  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m4_0 -> m4_63  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.ErrorType>", style=dashed];
m4_0 -> m4_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m4_0 -> m4_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_12  [key=2, style=dotted];
m4_1 -> m4_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1 -> m4_7  [color=darkseagreen4, key=1, label=typeInfo, style=dashed];
m4_1 -> m4_59  [color=darkseagreen4, key=1, label=typeInfo, style=dashed];
m4_1 -> m4_134  [color=darkseagreen4, key=1, label=typeInfo, style=dashed];
m4_1 -> m4_60  [color=darkseagreen4, key=1, label=typeInfo, style=dashed];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_43  [color=darkseagreen4, key=1, label=makeDefault, style=dashed];
m4_5 -> m4_5  [color=darkorchid, key=3, label="Local variable System.Func<T> makeDefault", style=bold];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_9  [color=darkseagreen4, key=1, label=buildUp, style=dashed];
m4_7 -> m4_7  [color=darkorchid, key=3, label="Local variable System.Func<CommandLine.ParserResult<T>> buildUp", style=bold];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_16  [key=2, style=dotted];
m4_8 -> m4_17  [key=2, style=dotted];
m4_8 -> m4_18  [key=2, style=dotted];
m4_8 -> m4_19  [key=2, style=dotted];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_16  [key=2, style=dotted];
m4_9 -> m4_20  [key=2, style=dotted];
m4_9 -> m4_21  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_13  [key=2, style=dotted];
m4_2 -> m4_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2 -> m4_5  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m4_2 -> m4_33  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m4_2 -> m4_7  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m4_2 -> m4_54  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m4_2 -> m4_55  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m4_2 -> m4_59  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m4_2 -> m4_134  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_3  [color=darkseagreen4, key=1, label=pt, style=dashed];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_14  [key=2, style=dotted];
m4_4 -> m4_15  [key=2, style=dotted];
m4_4 -> m4_7  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m4_4 -> m4_48  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m4_4 -> m4_50  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m4_4 -> m4_85  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m4_4 -> m4_56  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_43  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Error>", style=dashed];
m4_6 -> m4_9  [color=darkseagreen4, key=1, label=notParsed, style=dashed];
m4_6 -> m4_6  [color=darkorchid, key=3, label="Local variable System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.ParserResult<T>> notParsed", style=bold];
m4_10 -> m4_11  [key=0, style=solid];
m4_11 -> m4_0  [color=blue, key=0, style=bold];
m4_133 -> m4_134  [key=0, style=solid];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_35  [key=2, style=dotted];
m4_33 -> m4_36  [key=2, style=dotted];
m4_33 -> m4_12  [key=2, style=dotted];
m4_33 -> m4_37  [key=2, style=dotted];
m4_33 -> m4_38  [key=2, style=dotted];
m4_33 -> m4_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_33 -> m4_33  [color=darkseagreen4, key=1, label=p, style=dashed];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_66  [key=2, style=dotted];
m4_48 -> m4_62  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_68  [key=2, style=dotted];
m4_50 -> m4_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_50 -> m4_52  [color=darkseagreen4, key=1, label=partitions, style=dashed];
m4_50 -> m4_53  [color=darkseagreen4, key=1, label=partitions, style=dashed];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_87  [key=2, style=dotted];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_69  [key=2, style=dotted];
m4_54 -> m4_70  [key=2, style=dotted];
m4_54 -> m4_54  [color=darkseagreen4, key=1, label=pt, style=dashed];
m4_54 -> m4_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_54 -> m4_57  [color=darkseagreen4, key=1, label=optionSpecPropsResult, style=dashed];
m4_54 -> m4_62  [color=darkseagreen4, key=1, label=optionSpecPropsResult, style=dashed];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_91  [key=2, style=dotted];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_71  [key=2, style=dotted];
m4_55 -> m4_70  [key=2, style=dotted];
m4_55 -> m4_55  [color=darkseagreen4, key=1, label=pt, style=dashed];
m4_55 -> m4_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_55 -> m4_57  [color=darkseagreen4, key=1, label=valueSpecPropsResult, style=dashed];
m4_55 -> m4_62  [color=darkseagreen4, key=1, label=valueSpecPropsResult, style=dashed];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_91  [key=2, style=dotted];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_72  [key=2, style=dotted];
m4_56 -> m4_73  [key=2, style=dotted];
m4_56 -> m4_74  [key=2, style=dotted];
m4_56 -> m4_56  [color=darkseagreen4, key=1, label=token, style=dashed];
m4_56 -> m4_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_56 -> m4_96  [color=darkseagreen4, key=1, label=token, style=dashed];
m4_56 -> m4_62  [color=darkseagreen4, key=1, label=missingValueErrors, style=dashed];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_98  [key=2, style=dotted];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_60  [color=darkseagreen4, key=1, label=buildMutable, style=dashed];
m4_100 -> m4_101  [key=0, style=solid];
m4_100 -> m4_36  [key=2, style=dotted];
m4_100 -> m4_12  [key=2, style=dotted];
m4_100 -> m4_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_81  [key=2, style=dotted];
m4_63 -> m4_63  [color=darkseagreen4, key=1, label=e, style=dashed];
m4_22 -> m4_23  [key=0, style=solid];
m4_59 -> m4_60  [key=0, style=solid];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_37  [key=2, style=dotted];
m4_134 -> m4_139  [key=2, style=dotted];
m4_134 -> m4_134  [color=darkseagreen4, key=1, label=sp, style=dashed];
m4_134 -> m4_136  [color=darkseagreen4, key=1, label=ctor, style=dashed];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_35  [key=2, style=dotted];
m4_60 -> m4_21  [key=2, style=dotted];
m4_60 -> m4_64  [color=darkseagreen4, key=1, label=instance, style=dashed];
m4_26 -> m4_27  [key=0, style=solid];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_45  [key=2, style=dotted];
m4_43 -> m4_21  [key=2, style=dotted];
m4_43 -> m4_25  [key=2, style=dotted];
m4_43 -> m4_46  [key=2, style=dotted];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_21  [key=2, style=dotted];
m4_23 -> m4_25  [key=2, style=dotted];
m4_24 -> m4_22  [color=blue, key=0, style=bold];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_29  [key=2, style=dotted];
m4_27 -> m4_30  [key=2, style=dotted];
m4_27 -> m4_31  [key=2, style=dotted];
m4_28 -> m4_26  [color=blue, key=0, style=bold];
m4_32 -> m4_33  [key=0, style=solid];
m4_34 -> m4_32  [color=blue, key=0, style=bold];
m4_39 -> m4_40  [key=0, style=solid];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_21  [key=2, style=dotted];
m4_41 -> m4_39  [color=blue, key=0, style=bold];
m4_42 -> m4_43  [key=0, style=solid];
m4_44 -> m4_42  [color=blue, key=0, style=bold];
m4_47 -> m4_48  [key=0, style=solid];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_67  [key=2, style=dotted];
m4_49 -> m4_61  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_78  [key=2, style=dotted];
m4_62 -> m4_79  [key=2, style=dotted];
m4_62 -> m4_80  [key=2, style=dotted];
m4_62 -> m4_64  [color=darkseagreen4, key=1, label=allErrors, style=dashed];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> m4_76  [key=2, style=dotted];
m4_61 -> m4_77  [key=2, style=dotted];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_54  [color=darkseagreen4, key=1, label=optionsPartition, style=dashed];
m4_84 -> m4_85  [key=0, style=solid];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_55  [color=darkseagreen4, key=1, label=valuesPartition, style=dashed];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_56  [color=darkseagreen4, key=1, label=errorsPartition, style=dashed];
m4_88 -> m4_89  [key=0, style=solid];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_67  [key=2, style=dotted];
m4_57 -> m4_75  [key=2, style=dotted];
m4_57 -> m4_101  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m4_57 -> m4_59  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m4_57 -> m4_135  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m4_57 -> m4_61  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m4_92 -> m4_93  [key=0, style=solid];
m4_95 -> m4_96  [key=0, style=solid];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_104  [key=2, style=dotted];
m4_101 -> m4_101  [color=darkseagreen4, key=1, label=mutable, style=dashed];
m4_101 -> m4_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_101 -> m4_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_101 -> m4_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_101 -> m4_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_101 -> m4_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_101 -> m4_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_135 -> m4_136  [key=0, style=solid];
m4_135 -> m4_140  [key=2, style=dotted];
m4_135 -> m4_141  [key=2, style=dotted];
m4_135 -> m4_142  [key=2, style=dotted];
m4_135 -> m4_143  [key=2, style=dotted];
m4_135 -> m4_144  [key=2, style=dotted];
m4_135 -> m4_135  [color=darkseagreen4, key=1, label=prms, style=dashed];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_82  [key=2, style=dotted];
m4_64 -> m4_83  [key=2, style=dotted];
m4_65 -> m4_47  [color=blue, key=0, style=bold];
m4_86 -> m4_84  [color=blue, key=0, style=bold];
m4_90 -> m4_88  [color=blue, key=0, style=bold];
m4_94 -> m4_92  [color=blue, key=0, style=bold];
m4_97 -> m4_95  [color=blue, key=0, style=bold];
m4_99 -> m4_100  [key=0, style=solid];
m4_105 -> m4_106  [key=0, style=solid];
m4_102 -> m4_103  [key=0, style=solid];
m4_108 -> m4_109  [key=0, style=solid];
m4_112 -> m4_113  [key=0, style=solid];
m4_116 -> m4_117  [key=0, style=solid];
m4_120 -> m4_121  [key=0, style=solid];
m4_123 -> m4_124  [key=0, style=solid];
m4_127 -> m4_128  [key=0, style=solid];
m4_103 -> m4_99  [color=blue, key=0, style=bold];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_21  [key=2, style=dotted];
m4_107 -> m4_105  [color=blue, key=0, style=bold];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_111  [key=2, style=dotted];
m4_110 -> m4_108  [color=blue, key=0, style=bold];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_115  [key=2, style=dotted];
m4_114 -> m4_112  [color=blue, key=0, style=bold];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_119  [key=2, style=dotted];
m4_117 -> m4_111  [key=2, style=dotted];
m4_118 -> m4_116  [color=blue, key=0, style=bold];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_115  [key=2, style=dotted];
m4_122 -> m4_120  [color=blue, key=0, style=bold];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_119  [key=2, style=dotted];
m4_124 -> m4_126  [key=2, style=dotted];
m4_125 -> m4_123  [color=blue, key=0, style=bold];
m4_128 -> m4_129  [key=0, style=solid];
m4_128 -> m4_130  [key=2, style=dotted];
m4_128 -> m4_131  [key=2, style=dotted];
m4_128 -> m4_132  [key=2, style=dotted];
m4_129 -> m4_127  [color=blue, key=0, style=bold];
m4_136 -> m4_137  [key=0, style=solid];
m4_136 -> m4_145  [key=2, style=dotted];
m4_137 -> m4_138  [key=0, style=solid];
m4_138 -> m4_133  [color=blue, key=0, style=bold];
m4_146 -> m4_33  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m4_146 -> m4_58  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m4_146 -> m4_100  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m4_147 -> m4_33  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m4_147 -> m4_54  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m4_147 -> m4_55  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m4_147 -> m4_59  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m4_147 -> m4_134  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m4_148 -> m4_43  [color=darkseagreen4, key=1, label=makeDefault, style=dashed];
m4_149 -> m4_48  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", style=dashed];
m4_150 -> m4_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m4_151 -> m4_48  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m4_151 -> m4_50  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m4_151 -> m4_85  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m4_151 -> m4_56  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m4_152 -> m4_50  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_152 -> m4_85  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_152 -> m4_54  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_152 -> m4_56  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_152 -> m4_96  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_153 -> m4_54  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m4_153 -> m4_89  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m4_153 -> m4_55  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m4_153 -> m4_93  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m4_154 -> m4_59  [color=darkseagreen4, key=1, label=typeInfo, style=dashed];
m4_154 -> m4_134  [color=darkseagreen4, key=1, label=typeInfo, style=dashed];
m4_154 -> m4_60  [color=darkseagreen4, key=1, label=typeInfo, style=dashed];
m4_155 -> m4_63  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.ErrorType>", style=dashed];
m4_156 -> m4_96  [color=darkseagreen4, key=1, label=token, style=dashed];
m4_157 -> m4_101  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m4_157 -> m4_135  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [color=darkseagreen4, key=1, label=bool, style=dashed];
m5_0 -> m5_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_0  [color=blue, key=0, style=bold];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_7  [color=darkseagreen4, key=1, label=bool, style=dashed];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_5  [color=blue, key=0, style=bold];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_11  [color=darkseagreen4, key=1, label=bool, style=dashed];
m5_9 -> m5_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m5_10 -> m5_11  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_12 -> m5_13  [key=0, style=solid];
m5_13 -> m5_9  [color=blue, key=0, style=bold];
m5_14 -> m5_1  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableAddOptions", style=dashed];
m5_14 -> m5_2  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableAddOptions", style=dashed];
m5_14 -> m5_3  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableAddOptions", style=dashed];
m5_15 -> m5_6  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableCommitOptions", style=dashed];
m5_15 -> m5_7  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableCommitOptions", style=dashed];
m5_16 -> m5_10  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableCloneOptions", style=dashed];
m5_16 -> m5_11  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableCloneOptions", style=dashed];
m5_16 -> m5_12  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableCloneOptions", style=dashed];
m6_12 -> m6_13  [key=0, style=solid];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_15  [color=darkseagreen4, key=1, label=ShortName, style=dashed];
m6_13 -> m6_16  [color=darkseagreen4, key=1, label=ShortName, style=dashed];
m6_13 -> m6_13  [color=darkorchid, key=3, label="Local variable string ShortName", style=bold];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_16  [color=darkseagreen4, key=1, label=LongName, style=dashed];
m6_14 -> m6_14  [color=darkorchid, key=3, label="Local variable string LongName", style=bold];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_20  [key=2, style=dotted];
m6_15 -> m6_18  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_7  [key=2, style=dotted];
m6_16 -> m6_8  [key=2, style=dotted];
m6_16 -> m6_9  [key=2, style=dotted];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_11  [key=2, style=dotted];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_21  [key=2, style=dotted];
m6_19 -> m6_12  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_6  [key=2, style=dotted];
m6_1 -> m6_4  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_7  [key=2, style=dotted];
m6_2 -> m6_8  [key=2, style=dotted];
m6_2 -> m6_9  [key=2, style=dotted];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_11  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_10  [key=2, style=dotted];
m6_5 -> m6_0  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_6  [key=2, style=dotted];
m7_1 -> m7_3  [color=green, key=1, label=tokenPartitions, style=dashed];
m7_2 -> m7_3  [color=green, key=0, style=solid];
m7_2 -> m7_7  [key=2, style=dotted];
m7_2 -> m7_8  [key=2, style=dotted];
m7_2 -> m7_9  [key=2, style=dotted];
m7_2 -> m7_10  [key=2, style=dotted];
m7_2 -> m7_11  [key=2, style=dotted];
m7_2 -> m7_12  [key=2, style=dotted];
m7_2 -> m7_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_3 -> m7_4  [color=green, key=0, style=solid];
m7_3 -> m7_13  [color=green, key=2, style=dotted];
m7_3 -> m7_14  [color=green, key=2, style=dotted];
m7_3 -> m7_20  [color=green, key=1, label="lambda expression", style=dashed];
m7_3 -> m7_24  [color=green, key=1, label="lambda expression", style=dashed];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_11  [key=2, style=dotted];
m7_4 -> m7_15  [key=2, style=dotted];
m7_4 -> m7_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_5 -> m7_0  [color=blue, key=0, style=bold];
m7_28 -> m7_29  [key=0, style=solid];
m7_16 -> m7_17  [key=0, style=solid];
m7_20 -> m7_21  [key=0, style=solid];
m7_24 -> m7_25  [key=0, style=solid];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_19  [key=2, style=dotted];
m7_18 -> m7_16  [color=blue, key=0, style=bold];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_23  [key=2, style=dotted];
m7_22 -> m7_20  [color=blue, key=0, style=bold];
m7_25 -> m7_26  [key=0, style=solid];
m7_25 -> m7_27  [key=2, style=dotted];
m7_26 -> m7_24  [color=blue, key=0, style=bold];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_23  [key=2, style=dotted];
m7_29 -> m7_31  [key=2, style=dotted];
m7_30 -> m7_28  [color=blue, key=0, style=bold];
m8_142 -> m8_143  [key=0, style=solid];
m8_143 -> m8_144  [key=0, style=solid];
m8_143 -> m8_138  [key=2, style=dotted];
m8_144 -> m8_142  [color=blue, key=0, style=bold];
m8_91 -> m8_92  [key=0, style=solid];
m8_91 -> m8_96  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_91 -> m8_97  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_91 -> m8_93  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_92 -> m8_93  [key=0, style=solid];
m8_92 -> m8_92  [color=darkorchid, key=3, label="Local variable System.Func<bool> isMutable", style=bold];
m8_93 -> m8_94  [key=0, style=solid];
m8_93 -> m8_90  [key=2, style=dotted];
m8_94 -> m8_91  [color=blue, key=0, style=bold];
m8_145 -> m8_146  [color=red, key=0, style=solid];
m8_145 -> m8_147  [color=green, key=0, style=solid];
m8_146 -> m8_147  [color=red, key=0, style=solid];
m8_146 -> m8_148  [color=red, key=2, style=dotted];
m8_146 -> m8_149  [color=red, key=2, style=dotted];
m8_147 -> m8_147  [color=green, key=0, style=solid];
m8_147 -> m8_40  [color=green, key=2, style=dotted];
m8_147 -> m8_148  [color=green, key=2, style=dotted];
m8_147 -> m8_149  [color=green, key=2, style=dotted];
m8_147 -> m8_145  [color=blue, key=0, style=bold];
m8_82 -> m8_83  [key=0, style=solid];
m8_83 -> m8_84  [key=0, style=solid];
m8_83 -> m8_86  [key=2, style=dotted];
m8_83 -> m8_87  [key=2, style=dotted];
m8_83 -> m8_88  [key=2, style=dotted];
m8_84 -> m8_85  [key=0, style=solid];
m8_84 -> m8_89  [key=2, style=dotted];
m8_84 -> m8_90  [key=2, style=dotted];
m8_85 -> m8_82  [color=blue, key=0, style=bold];
m8_131 -> m8_132  [key=0, style=solid];
m8_132 -> m8_133  [key=0, style=solid];
m8_132 -> m8_134  [key=2, style=dotted];
m8_133 -> m8_131  [color=blue, key=0, style=bold];
m8_59 -> m8_60  [color=red, key=0, style=solid];
m8_59 -> m8_61  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m8_59 -> m8_70  [color=darkseagreen4, key=1, label=T, style=dashed];
m8_59 -> m8_59  [color=darkorchid, key=3, label="method methodReturn T SetValue", style=bold];
m8_60 -> m8_61  [color=red, key=0, style=solid];
m8_60 -> m8_75  [color=red, key=1, label="System.Exception", style=dashed];
m8_60 -> m8_63  [color=red, key=1, label=fail, style=dashed];
m8_60 -> m8_65  [color=red, key=1, label=fail, style=dashed];
m8_60 -> m8_67  [color=red, key=1, label=fail, style=dashed];
m8_60 -> m8_69  [color=red, key=1, label=fail, style=dashed];
m8_60 -> m8_60  [color=red, key=3, label="Local variable System.Action<System.Exception> fail", style=bold];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_64  [key=0, style=solid];
m8_61 -> m8_66  [key=0, style=solid];
m8_61 -> m8_68  [key=0, style=solid];
m8_61 -> m8_70  [key=0, style=solid];
m8_61 -> m8_72  [key=2, style=dotted];
m8_61 -> m8_61  [color=green, key=3, label="Local variable System.Action<System.Exception> fail", style=bold];
m8_61 -> m8_76  [color=green, key=1, label="System.Exception", style=dashed];
m8_61 -> m8_63  [color=green, key=1, label=fail, style=dashed];
m8_61 -> m8_65  [color=green, key=1, label=fail, style=dashed];
m8_61 -> m8_67  [color=green, key=1, label=fail, style=dashed];
m8_61 -> m8_69  [color=green, key=1, label=fail, style=dashed];
m8_70 -> m8_71  [key=0, style=solid];
m8_63 -> m8_70  [key=0, style=solid];
m8_63 -> m8_73  [key=2, style=dotted];
m8_65 -> m8_70  [key=0, style=solid];
m8_65 -> m8_73  [key=2, style=dotted];
m8_67 -> m8_70  [key=0, style=solid];
m8_67 -> m8_73  [key=2, style=dotted];
m8_69 -> m8_70  [key=0, style=solid];
m8_69 -> m8_73  [key=2, style=dotted];
m8_62 -> m8_63  [key=0, style=solid];
m8_64 -> m8_65  [key=0, style=solid];
m8_66 -> m8_67  [key=0, style=solid];
m8_68 -> m8_69  [key=0, style=solid];
m8_71 -> m8_59  [color=blue, key=0, style=bold];
m8_45 -> m8_46  [key=0, style=solid];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_48  [key=2, style=dotted];
m8_47 -> m8_45  [color=blue, key=0, style=bold];
m8_14 -> m8_15  [key=0, style=solid];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_3  [key=2, style=dotted];
m8_15 -> m8_4  [key=2, style=dotted];
m8_15 -> m8_17  [key=2, style=dotted];
m8_15 -> m8_18  [key=2, style=dotted];
m8_15 -> m8_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_15 -> m8_15  [color=darkseagreen4, key=1, label=attr, style=dashed];
m8_16 -> m8_14  [color=blue, key=0, style=bold];
m8_128 -> m8_129  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_13  [key=2, style=dotted];
m8_12 -> m8_10  [color=blue, key=0, style=bold];
m8_19 -> m8_20  [key=0, style=solid];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_22  [key=2, style=dotted];
m8_21 -> m8_19  [color=blue, key=0, style=bold];
m8_27 -> m8_28  [key=0, style=solid];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_13  [key=2, style=dotted];
m8_29 -> m8_27  [color=blue, key=0, style=bold];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_9  [key=2, style=dotted];
m8_55 -> m8_58  [key=2, style=dotted];
m8_56 -> m8_57  [key=0, style=solid];
m8_54 -> m8_55  [key=0, style=solid];
m8_57 -> m8_54  [color=blue, key=0, style=bold];
m8_75 -> m8_76  [color=red, key=0, style=solid];
m8_75 -> m8_77  [color=red, key=2, style=dotted];
m8_74 -> m8_75  [color=red, key=0, style=solid];
m8_74 -> m8_76  [color=green, key=0, style=solid];
m8_76 -> m8_74  [color=blue, key=0, style=bold];
m8_76 -> m8_76  [color=green, key=0, style=solid];
m8_76 -> m8_77  [color=green, key=2, style=dotted];
m8_96 -> m8_97  [key=0, style=solid];
m8_96 -> m8_100  [key=2, style=dotted];
m8_96 -> m8_7  [key=2, style=dotted];
m8_96 -> m8_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_96 -> m8_98  [color=darkseagreen4, key=1, label=props, style=dashed];
m8_97 -> m8_98  [key=0, style=solid];
m8_97 -> m8_101  [key=2, style=dotted];
m8_97 -> m8_102  [key=2, style=dotted];
m8_95 -> m8_96  [key=0, style=solid];
m8_103 -> m8_104  [key=0, style=solid];
m8_98 -> m8_99  [key=0, style=solid];
m8_99 -> m8_95  [color=blue, key=0, style=bold];
m8_104 -> m8_105  [key=0, style=solid];
m8_105 -> m8_103  [color=blue, key=0, style=bold];
m8_129 -> m8_130  [key=0, style=solid];
m8_130 -> m8_128  [color=blue, key=0, style=bold];
m8_106 -> m8_107  [key=0, style=solid];
m8_106 -> m8_109  [color=red, key=1, label="System.Type", style=dashed];
m8_106 -> m8_110  [color=green, key=1, label="System.Type", style=dashed];
m8_106 -> m8_111  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_106 -> m8_78  [color=darkorchid, key=3, label="method methodReturn object CreateDefaultForImmutable", style=bold];
m8_106 -> m8_82  [color=darkorchid, key=3, label="method methodReturn object CreateDefaultForImmutable", style=bold];
m8_107 -> m8_108  [key=0, style=solid];
m8_107 -> m8_109  [color=red, key=0, style=solid];
m8_107 -> m8_110  [color=green, key=0, style=solid];
m8_109 -> m8_110  [color=red, key=0, style=solid];
m8_109 -> m8_111  [color=red, key=0, style=solid];
m8_109 -> m8_113  [color=red, key=2, style=dotted];
m8_110 -> m8_112  [key=0, style=solid];
m8_110 -> m8_114  [key=2, style=dotted];
m8_110 -> m8_115  [key=2, style=dotted];
m8_110 -> m8_110  [color=green, key=0, style=solid];
m8_110 -> m8_111  [color=green, key=0, style=solid];
m8_110 -> m8_40  [color=green, key=2, style=dotted];
m8_110 -> m8_113  [color=green, key=2, style=dotted];
m8_111 -> m8_112  [key=0, style=solid];
m8_111 -> m8_116  [key=2, style=dotted];
m8_108 -> m8_112  [key=0, style=solid];
m8_112 -> m8_106  [color=blue, key=0, style=bold];
m8_23 -> m8_24  [key=0, style=solid];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_3  [key=2, style=dotted];
m8_24 -> m8_4  [key=2, style=dotted];
m8_24 -> m8_5  [key=2, style=dotted];
m8_24 -> m8_6  [key=2, style=dotted];
m8_24 -> m8_7  [key=2, style=dotted];
m8_24 -> m8_8  [key=2, style=dotted];
m8_24 -> m8_26  [key=2, style=dotted];
m8_24 -> m8_17  [key=2, style=dotted];
m8_24 -> m8_18  [key=2, style=dotted];
m8_24 -> m8_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_24 -> m8_24  [color=darkseagreen4, key=1, label=pi, style=dashed];
m8_25 -> m8_23  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_120  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Reflection.PropertyInfo, T> selector", style=bold];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=2, style=dotted];
m8_1 -> m8_4  [key=2, style=dotted];
m8_1 -> m8_5  [key=2, style=dotted];
m8_1 -> m8_6  [key=2, style=dotted];
m8_1 -> m8_7  [key=2, style=dotted];
m8_1 -> m8_8  [key=2, style=dotted];
m8_1 -> m8_9  [key=2, style=dotted];
m8_1 -> m8_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1 -> m8_1  [color=darkseagreen4, key=1, label=pi, style=dashed];
m8_2 -> m8_0  [color=blue, key=0, style=bold];
m8_117 -> m8_118  [key=0, style=solid];
m8_117 -> m8_119  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_117 -> m8_120  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_117 -> m8_121  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_118 -> m8_119  [key=0, style=solid];
m8_118 -> m8_120  [key=0, style=solid];
m8_118 -> m8_123  [key=2, style=dotted];
m8_119 -> m8_122  [key=0, style=solid];
m8_119 -> m8_124  [key=2, style=dotted];
m8_120 -> m8_121  [key=0, style=solid];
m8_120 -> m8_125  [key=2, style=dotted];
m8_120 -> m8_126  [key=2, style=dotted];
m8_120 -> m8_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_121 -> m8_122  [key=0, style=solid];
m8_121 -> m8_127  [key=2, style=dotted];
m8_122 -> m8_117  [color=blue, key=0, style=bold];
m8_139 -> m8_140  [key=0, style=solid];
m8_140 -> m8_141  [key=0, style=solid];
m8_140 -> m8_138  [key=2, style=dotted];
m8_141 -> m8_139  [color=blue, key=0, style=bold];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_40  [color=darkorchid, key=3, label="method methodReturn System.Type GetTypeInfo", style=bold];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_43  [key=2, style=dotted];
m8_41 -> m8_44  [key=2, style=dotted];
m8_42 -> m8_40  [color=blue, key=0, style=bold];
m8_78 -> m8_79  [key=0, style=solid];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_81  [key=2, style=dotted];
m8_80 -> m8_78  [color=blue, key=0, style=bold];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_55  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Core.SpecificationProperty, object>", style=dashed];
m8_49 -> m8_56  [color=darkseagreen4, key=1, label=T, style=dashed];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_52  [key=2, style=dotted];
m8_50 -> m8_53  [key=2, style=dotted];
m8_50 -> m8_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_51 -> m8_49  [color=blue, key=0, style=bold];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_32  [color=crimson, key=0, style=bold];
m8_30 -> m8_33  [color=crimson, key=0, style=bold];
m8_30 -> m8_35  [color=crimson, key=0, style=bold];
m8_30 -> m8_37  [color=crimson, key=0, style=bold];
m8_30 -> m8_34  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_30 -> m8_36  [color=green, key=1, label="System.Type", style=dashed];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_33  [key=0, style=solid];
m8_32 -> m8_33  [key=0, style=solid];
m8_33 -> m8_34  [key=0, style=solid];
m8_35 -> m8_34  [key=0, style=solid];
m8_37 -> m8_36  [color=green, key=0, style=solid];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_36  [color=green, key=0, style=solid];
m8_34 -> m8_39  [key=2, style=dotted];
m8_36 -> m8_37  [color=green, key=0, style=solid];
m8_36 -> m8_38  [color=green, key=0, style=solid];
m8_36 -> m8_30  [color=green, key=2, style=dotted];
m8_36 -> m8_40  [color=green, key=2, style=dotted];
m8_38 -> m8_30  [color=blue, key=0, style=bold];
m8_151 -> m8_152  [color=green, key=0, style=solid];
m8_151 -> m8_56  [color=darkseagreen4, key=1, label=T, style=dashed];
m8_152 -> m8_153  [color=green, key=0, style=solid];
m8_152 -> m8_96  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_152 -> m8_97  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_153 -> m8_151  [color=blue, key=0, style=bold];
m8_135 -> m8_136  [key=0, style=solid];
m8_136 -> m8_137  [key=0, style=solid];
m8_136 -> m8_138  [key=2, style=dotted];
m8_137 -> m8_135  [color=blue, key=0, style=bold];
m8_150 -> m8_55  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Core.SpecificationProperty, object>", style=dashed];
m9_20 -> m9_21  [key=0, style=solid];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_23  [key=2, style=dotted];
m9_22 -> m9_20  [color=blue, key=0, style=bold];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_5  [key=2, style=dotted];
m9_1 -> m9_6  [key=2, style=dotted];
m9_0 -> m9_1  [key=0, style=solid];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_7  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_8  [key=2, style=dotted];
m9_3 -> m9_9  [key=2, style=dotted];
m9_4 -> m9_0  [color=blue, key=0, style=bold];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_5  [key=2, style=dotted];
m9_16 -> m9_6  [key=2, style=dotted];
m9_15 -> m9_16  [key=0, style=solid];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_14  [key=2, style=dotted];
m9_17 -> m9_19  [key=2, style=dotted];
m9_18 -> m9_15  [color=blue, key=0, style=bold];
m9_35 -> m9_36  [key=0, style=solid];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_30  [key=2, style=dotted];
m9_36 -> m9_38  [color=darkseagreen4, key=1, label=ctor, style=dashed];
m9_37 -> m9_38  [key=0, style=solid];
m9_37 -> m9_31  [key=2, style=dotted];
m9_37 -> m9_32  [key=2, style=dotted];
m9_37 -> m9_33  [key=2, style=dotted];
m9_37 -> m9_37  [color=darkseagreen4, key=1, label=prms, style=dashed];
m9_38 -> m9_39  [key=0, style=solid];
m9_38 -> m9_34  [key=2, style=dotted];
m9_39 -> m9_35  [color=blue, key=0, style=bold];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_5  [key=2, style=dotted];
m9_11 -> m9_6  [key=2, style=dotted];
m9_10 -> m9_11  [key=0, style=solid];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_14  [key=2, style=dotted];
m9_13 -> m9_10  [color=blue, key=0, style=bold];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_26  [color=darkseagreen4, key=1, label="System.Type[]", style=dashed];
m9_25 -> m9_26  [key=0, style=solid];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_30  [key=2, style=dotted];
m9_26 -> m9_28  [color=darkseagreen4, key=1, label=ctor, style=dashed];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_31  [key=2, style=dotted];
m9_27 -> m9_32  [key=2, style=dotted];
m9_27 -> m9_33  [key=2, style=dotted];
m9_27 -> m9_27  [color=darkseagreen4, key=1, label=prms, style=dashed];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_34  [key=2, style=dotted];
m9_29 -> m9_24  [color=blue, key=0, style=bold];
m10_31 -> m10_0  [color=darkorchid, key=3, label="Field variable CSharpx.Maybe<int> min", style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_2  [color=darkseagreen4, key=1, label=bool, style=dashed];
m10_0 -> m10_3  [color=darkseagreen4, key=1, label="CSharpx.Maybe<int>", style=dashed];
m10_0 -> m10_4  [color=darkseagreen4, key=1, label="CSharpx.Maybe<int>", style=dashed];
m10_0 -> m10_5  [color=darkseagreen4, key=1, label="CSharpx.Maybe<object>", style=dashed];
m10_0 -> m10_6  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_0 -> m10_7  [color=darkseagreen4, key=1, label="CommandLine.Core.TargetType", style=dashed];
m10_0 -> m10_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_0 -> m10_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_0 -> m10_10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m10_1 -> m10_2  [key=0, style=solid];
m10_2 -> m10_3  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_4 -> m10_5  [key=0, style=solid];
m10_5 -> m10_6  [key=0, style=solid];
m10_6 -> m10_7  [key=0, style=solid];
m10_7 -> m10_8  [key=0, style=solid];
m10_8 -> m10_9  [key=0, style=solid];
m10_9 -> m10_10  [key=0, style=solid];
m10_10 -> m10_11  [key=0, style=solid];
m10_11 -> m10_0  [color=blue, key=0, style=bold];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_16  [color=red, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m10_12 -> m10_18  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m10_12 -> m10_22  [color=red, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m10_13 -> m10_14  [key=0, style=solid];
m10_13 -> m10_25  [key=2, style=dotted];
m10_13 -> m10_20  [color=darkseagreen4, key=1, label=attrs, style=dashed];
m10_16 -> m10_17  [color=red, key=0, style=solid];
m10_16 -> m10_28  [color=red, key=2, style=dotted];
m10_16 -> m10_29  [color=red, key=2, style=dotted];
m10_16 -> m10_30  [color=red, key=2, style=dotted];
m10_16 -> m10_31  [color=red, key=2, style=dotted];
m10_16 -> m10_18  [color=red, key=1, label=spec, style=dashed];
m10_16 -> m10_19  [color=red, key=1, label=spec, style=dashed];
m10_18 -> m10_24  [key=0, style=solid];
m10_18 -> m10_32  [key=2, style=dotted];
m10_18 -> m10_33  [key=2, style=dotted];
m10_22 -> m10_24  [color=red, key=0, style=solid];
m10_22 -> m10_28  [color=red, key=2, style=dotted];
m10_22 -> m10_29  [color=red, key=2, style=dotted];
m10_22 -> m10_30  [color=red, key=2, style=dotted];
m10_22 -> m10_34  [color=red, key=2, style=dotted];
m10_14 -> m10_15  [key=0, style=solid];
m10_14 -> m10_26  [key=2, style=dotted];
m10_14 -> m10_16  [color=red, key=1, label=oa, style=dashed];
m10_20 -> m10_21  [key=0, style=solid];
m10_20 -> m10_26  [key=2, style=dotted];
m10_20 -> m10_22  [color=red, key=1, label=va, style=dashed];
m10_15 -> m10_16  [color=red, key=0, style=solid];
m10_15 -> m10_20  [key=0, style=solid];
m10_15 -> m10_27  [key=2, style=dotted];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_19  [key=0, style=solid];
m10_19 -> m10_24  [key=0, style=solid];
m10_21 -> m10_22  [color=red, key=0, style=solid];
m10_21 -> m10_23  [key=0, style=solid];
m10_21 -> m10_27  [key=2, style=dotted];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_35  [key=2, style=dotted];
m10_24 -> m10_12  [color=blue, key=0, style=bold];
m10_36 -> m10_1  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m10_36 -> m10_2  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m10_36 -> m10_3  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m10_36 -> m10_4  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m10_36 -> m10_5  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m10_36 -> m10_6  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m10_36 -> m10_7  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m10_36 -> m10_8  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m10_36 -> m10_9  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m10_36 -> m10_10  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_15  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m11_13 -> m11_17  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m11_13 -> m11_13  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<CommandLine.Core.Specification> ThrowingValidate", style=bold];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_17  [key=0, style=solid];
m11_14 -> m11_22  [color=darkseagreen4, key=1, label=guard, style=dashed];
m11_14 -> m11_16  [color=darkseagreen4, key=1, label=guard, style=dashed];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_14  [key=0, style=solid];
m11_15 -> m11_19  [key=2, style=dotted];
m11_15 -> m11_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_17 -> m11_18  [key=0, style=solid];
m11_16 -> m11_18  [key=0, style=solid];
m11_16 -> m11_20  [key=2, style=dotted];
m11_18 -> m11_13  [color=blue, key=0, style=bold];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_28  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m11_25 -> m11_29  [color=darkseagreen4, key=1, label="System.Func<int, int, bool>", style=dashed];
m11_25 -> m11_30  [color=darkorchid, key=3, label="method methodReturn bool HavingRange", style=bold];
m11_26 -> m11_27  [key=0, style=solid];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_30  [key=0, style=solid];
m11_28 -> m11_32  [key=2, style=dotted];
m11_29 -> m11_31  [key=0, style=solid];
m11_29 -> m11_33  [key=2, style=dotted];
m11_27 -> m11_28  [key=0, style=solid];
m11_30 -> m11_31  [key=0, style=solid];
m11_31 -> m11_25  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_2 -> m11_0  [color=blue, key=0, style=bold];
m11_3 -> m11_4  [key=0, style=solid];
m11_4 -> m11_5  [key=0, style=solid];
m11_5 -> m11_3  [color=blue, key=0, style=bold];
m11_21 -> m11_22  [key=0, style=solid];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_24  [key=2, style=dotted];
m11_23 -> m11_21  [color=blue, key=0, style=bold];
m11_40 -> m11_41  [key=0, style=solid];
m11_40 -> m11_42  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m11_40 -> m11_43  [color=darkseagreen4, key=1, label="System.Func<int, bool>", style=dashed];
m11_40 -> m11_30  [color=darkorchid, key=3, label="method methodReturn bool HavingMax", style=bold];
m11_41 -> m11_42  [key=0, style=solid];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_44  [key=0, style=solid];
m11_42 -> m11_32  [key=2, style=dotted];
m11_43 -> m11_45  [key=0, style=solid];
m11_43 -> m11_24  [key=2, style=dotted];
m11_44 -> m11_45  [key=0, style=solid];
m11_45 -> m11_40  [color=blue, key=0, style=bold];
m11_10 -> m11_11  [key=0, style=solid];
m11_11 -> m11_12  [key=0, style=solid];
m11_12 -> m11_10  [color=blue, key=0, style=bold];
m11_34 -> m11_35  [key=0, style=solid];
m11_34 -> m11_36  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m11_34 -> m11_37  [color=darkseagreen4, key=1, label="System.Func<int, bool>", style=dashed];
m11_34 -> m11_30  [color=darkorchid, key=3, label="method methodReturn bool HavingMin", style=bold];
m11_35 -> m11_36  [key=0, style=solid];
m11_36 -> m11_37  [key=0, style=solid];
m11_36 -> m11_38  [key=0, style=solid];
m11_36 -> m11_32  [key=2, style=dotted];
m11_37 -> m11_39  [key=0, style=solid];
m11_37 -> m11_24  [key=2, style=dotted];
m11_38 -> m11_39  [key=0, style=solid];
m11_39 -> m11_34  [color=blue, key=0, style=bold];
m11_6 -> m11_7  [key=0, style=solid];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_9  [key=2, style=dotted];
m11_8 -> m11_6  [color=blue, key=0, style=bold];
m11_46 -> m11_22  [color=darkseagreen4, key=1, label=guard, style=dashed];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_10  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_10  [key=0, style=solid];
m12_10 -> m12_11  [key=0, style=solid];
m12_10 -> m12_6  [key=2, style=dotted];
m12_9 -> m12_11  [key=0, style=solid];
m12_9 -> m12_5  [key=2, style=dotted];
m12_11 -> m12_7  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_3  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_6  [key=2, style=dotted];
m12_2 -> m12_4  [key=0, style=solid];
m12_2 -> m12_5  [key=2, style=dotted];
m12_4 -> m12_0  [color=blue, key=0, style=bold];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_15  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m12_12 -> m12_16  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_16  [key=0, style=solid];
m12_15 -> m12_17  [key=0, style=solid];
m12_15 -> m12_18  [key=2, style=dotted];
m12_15 -> m12_19  [key=2, style=dotted];
m12_15 -> m12_20  [key=2, style=dotted];
m12_15 -> m12_21  [key=2, style=dotted];
m12_15 -> m12_22  [key=2, style=dotted];
m12_16 -> m12_17  [key=0, style=solid];
m12_14 -> m12_15  [key=0, style=solid];
m12_17 -> m12_12  [color=blue, key=0, style=bold];
m12_27 -> m12_28  [key=0, style=solid];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_30  [key=2, style=dotted];
m12_29 -> m12_27  [color=blue, key=0, style=bold];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> m12_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_26  [key=2, style=dotted];
m12_24 -> m12_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_25 -> m12_23  [color=blue, key=0, style=bold];
m12_31 -> m12_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m13_20 -> m13_21  [key=0, style=solid];
m13_23 -> m13_24  [color=green, key=0, style=solid];
m13_23 -> m13_11  [color=green, key=2, style=dotted];
m13_23 -> m13_6  [color=green, key=2, style=dotted];
m13_23 -> m13_7  [color=green, key=2, style=dotted];
m13_23 -> m13_12  [color=green, key=2, style=dotted];
m13_23 -> m13_13  [color=green, key=2, style=dotted];
m13_23 -> m13_14  [color=green, key=2, style=dotted];
m13_23 -> m13_26  [color=green, key=1, label="lambda expression", style=dashed];
m13_22 -> m13_23  [color=green, key=0, style=solid];
m13_22 -> m13_8  [key=2, style=dotted];
m13_22 -> m13_9  [key=2, style=dotted];
m13_22 -> m13_10  [key=2, style=dotted];
m13_22 -> m13_27  [color=darkseagreen4, key=1, label=specs, style=dashed];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> m13_15  [key=2, style=dotted];
m13_21 -> m13_6  [key=2, style=dotted];
m13_21 -> m13_7  [key=2, style=dotted];
m13_21 -> m13_22  [key=0, style=solid];
m13_21 -> m13_24  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m13_25 -> m13_20  [color=blue, key=0, style=bold];
m13_29 -> m13_30  [key=0, style=solid];
m13_32 -> m13_11  [key=2, style=dotted];
m13_32 -> m13_6  [key=2, style=dotted];
m13_32 -> m13_7  [key=2, style=dotted];
m13_32 -> m13_12  [key=2, style=dotted];
m13_32 -> m13_33  [key=0, style=solid];
m13_32 -> m13_35  [key=2, style=dotted];
m13_32 -> m13_36  [key=2, style=dotted];
m13_30 -> m13_6  [key=2, style=dotted];
m13_30 -> m13_7  [key=2, style=dotted];
m13_30 -> m13_31  [key=0, style=solid];
m13_30 -> m13_33  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m13_33 -> m13_15  [key=2, style=dotted];
m13_33 -> m13_34  [key=0, style=solid];
m13_31 -> m13_32  [key=0, style=solid];
m13_31 -> m13_31  [color=darkorchid, key=3, label="Local variable System.Func<string, bool> nameLookup", style=bold];
m13_31 -> m13_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_34 -> m13_29  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [key=0, style=solid];
m13_3 -> m13_4  [color=green, key=0, style=solid];
m13_3 -> m13_11  [color=green, key=2, style=dotted];
m13_3 -> m13_6  [color=green, key=2, style=dotted];
m13_3 -> m13_7  [color=green, key=2, style=dotted];
m13_3 -> m13_12  [color=green, key=2, style=dotted];
m13_3 -> m13_13  [color=green, key=2, style=dotted];
m13_3 -> m13_14  [color=green, key=2, style=dotted];
m13_3 -> m13_16  [color=green, key=1, label="lambda expression", style=dashed];
m13_2 -> m13_3  [color=green, key=0, style=solid];
m13_2 -> m13_8  [key=2, style=dotted];
m13_2 -> m13_9  [key=2, style=dotted];
m13_2 -> m13_10  [key=2, style=dotted];
m13_2 -> m13_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_15  [key=2, style=dotted];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_4  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m13_1 -> m13_6  [key=2, style=dotted];
m13_1 -> m13_7  [key=2, style=dotted];
m13_5 -> m13_0  [color=blue, key=0, style=bold];
m13_37 -> m13_38  [key=0, style=solid];
m13_16 -> m13_17  [key=0, style=solid];
m13_26 -> m13_27  [key=0, style=solid];
m13_17 -> m13_18  [key=0, style=solid];
m13_17 -> m13_19  [key=2, style=dotted];
m13_18 -> m13_16  [color=blue, key=0, style=bold];
m13_27 -> m13_28  [key=0, style=solid];
m13_27 -> m13_19  [key=2, style=dotted];
m13_28 -> m13_26  [color=blue, key=0, style=bold];
m13_38 -> m13_39  [key=0, style=solid];
m13_38 -> m13_40  [key=2, style=dotted];
m13_39 -> m13_37  [color=blue, key=0, style=bold];
m13_41 -> m13_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m13_42 -> m13_27  [color=darkseagreen4, key=1, label=specs, style=dashed];
m14_0 -> m14_1  [key=0, style=solid];
m14_3 -> m14_4  [color=green, key=0, style=solid];
m14_3 -> m14_12  [color=green, key=2, style=dotted];
m14_3 -> m14_13  [color=green, key=2, style=dotted];
m14_3 -> m14_14  [color=green, key=2, style=dotted];
m14_3 -> m14_17  [color=green, key=1, label="lambda expression", style=dashed];
m14_2 -> m14_3  [color=green, key=0, style=solid];
m14_2 -> m14_8  [key=2, style=dotted];
m14_2 -> m14_9  [key=2, style=dotted];
m14_2 -> m14_10  [key=2, style=dotted];
m14_2 -> m14_11  [key=2, style=dotted];
m14_2 -> m14_18  [color=darkseagreen4, key=1, label=specs, style=dashed];
m14_2 -> m14_0  [color=blue, key=0, style=bold];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_22  [color=darkseagreen4, key=1, label=options, style=dashed];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_7  [key=2, style=dotted];
m14_1 -> m14_5  [color=darkseagreen4, key=1, label=expectedSequence, style=dashed];
m14_1 -> m14_3  [key=2, style=dotted];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_15  [key=2, style=dotted];
m14_5 -> m14_16  [key=2, style=dotted];
m14_5 -> m14_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_5 -> m14_7  [key=2, style=dotted];
m14_6 -> m14_0  [color=blue, key=0, style=bold];
m14_6 -> m14_4  [color=blue, key=0, style=bold];
m14_8 -> m14_9  [key=0, style=solid];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_14  [key=2, style=dotted];
m14_21 -> m14_22  [key=0, style=solid];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_24  [key=2, style=dotted];
m14_22 -> m14_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_22 -> m14_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m14_23 -> m14_21  [color=blue, key=0, style=bold];
m14_9 -> m14_10  [key=0, style=solid];
m14_9 -> m14_7  [key=2, style=dotted];
m14_10 -> m14_8  [color=blue, key=0, style=bold];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_14  [key=2, style=dotted];
m14_25 -> m14_26  [key=0, style=solid];
m14_26 -> m14_27  [key=0, style=solid];
m14_26 -> m14_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m14_26 -> m14_28  [key=2, style=dotted];
m14_26 -> m14_29  [key=2, style=dotted];
m14_27 -> m14_25  [color=blue, key=0, style=bold];
m14_13 -> m14_11  [color=blue, key=0, style=bold];
m14_15 -> m14_16  [key=0, style=solid];
m14_17 -> m14_15  [color=blue, key=0, style=bold];
m14_17 -> m14_18  [key=0, style=solid];
m14_37 -> m14_38  [key=0, style=solid];
m14_38 -> m14_39  [key=0, style=solid];
m14_38 -> m14_40  [key=2, style=dotted];
m14_38 -> m14_20  [key=2, style=dotted];
m14_39 -> m14_37  [color=blue, key=0, style=bold];
m14_41 -> m14_42  [key=0, style=solid];
m14_41 -> m14_24  [key=2, style=dotted];
m14_41 -> m14_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_41 -> m14_44  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m14_42 -> m14_43  [key=0, style=solid];
m14_42 -> m14_40  [key=2, style=dotted];
m14_43 -> m14_41  [color=blue, key=0, style=bold];
m14_43 -> m14_44  [key=0, style=solid];
m14_11 -> m14_12  [key=0, style=solid];
m14_18 -> m14_19  [key=0, style=solid];
m14_18 -> m14_20  [key=2, style=dotted];
m14_19 -> m14_17  [color=blue, key=0, style=bold];
m14_19 -> m14_20  [key=0, style=solid];
m14_19 -> m14_3  [key=2, style=dotted];
m14_40 -> m14_41  [key=0, style=solid];
m14_44 -> m14_44  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m14_44 -> m14_45  [key=0, style=solid];
m14_44 -> m14_28  [key=2, style=dotted];
m14_44 -> m14_29  [key=2, style=dotted];
m14_45 -> m14_43  [color=blue, key=0, style=bold];
m14_29 -> m14_30  [key=0, style=solid];
m14_29 -> m14_34  [key=2, style=dotted];
m14_29 -> m14_31  [color=darkseagreen4, key=1, label=builder, style=dashed];
m14_29 -> m14_32  [color=darkseagreen4, key=1, label=builder, style=dashed];
m14_28 -> m14_29  [key=0, style=solid];
m14_28 -> m14_30  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m14_20 -> m14_18  [color=blue, key=0, style=bold];
m14_36 -> m14_30  [color=blue, key=0, style=bold];
m14_35 -> m14_36  [key=0, style=solid];
m14_35 -> m14_15  [key=2, style=dotted];
m14_35 -> m14_16  [key=2, style=dotted];
m14_35 -> m14_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_30 -> m14_31  [key=0, style=solid];
m14_30 -> m14_32  [key=0, style=solid];
m14_33 -> m14_34  [color=green, key=0, style=solid];
m14_33 -> m14_12  [color=green, key=2, style=dotted];
m14_33 -> m14_13  [color=green, key=2, style=dotted];
m14_33 -> m14_14  [color=green, key=2, style=dotted];
m14_33 -> m14_37  [color=green, key=1, label="lambda expression", style=dashed];
m14_33 -> m14_28  [color=blue, key=0, style=bold];
m14_32 -> m14_33  [color=green, key=0, style=solid];
m14_32 -> m14_8  [key=2, style=dotted];
m14_32 -> m14_9  [key=2, style=dotted];
m14_32 -> m14_10  [key=2, style=dotted];
m14_32 -> m14_11  [key=2, style=dotted];
m14_32 -> m14_38  [color=darkseagreen4, key=1, label=specs, style=dashed];
m14_32 -> m14_36  [key=2, style=dotted];
m14_34 -> m14_35  [key=0, style=solid];
m14_34 -> m14_41  [color=darkseagreen4, key=1, label=options, style=dashed];
m14_31 -> m14_32  [key=0, style=solid];
m14_31 -> m14_7  [key=2, style=dotted];
m14_31 -> m14_35  [color=darkseagreen4, key=1, label=expectedSequence, style=dashed];
m14_31 -> m14_30  [key=0, style=solid];
m14_46 -> m14_18  [color=darkseagreen4, key=1, label=specs, style=dashed];
m14_47 -> m14_22  [color=darkseagreen4, key=1, label=options, style=dashed];
m14_49 -> m14_38  [color=darkseagreen4, key=1, label=specs, style=dashed];
m14_50 -> m14_41  [color=darkseagreen4, key=1, label=options, style=dashed];
m14_48 -> m14_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m14_51 -> m14_44  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m15_4 -> m15_30  [key=0, style=solid];
m15_4 -> m15_0  [color=darkorchid, key=3, label="Parameter variable System.Globalization.CultureInfo conversionCulture", style=bold];
m15_4 -> m15_6  [color=green, key=3, label="Parameter variable System.Type conversionType", style=bold];
m15_4 -> m15_5  [color=darkorchid, key=3, label="Parameter variable System.Globalization.CultureInfo conversionCulture", style=bold];
m15_4 -> m15_7  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m15_30 -> m15_31  [key=0, style=solid];
m15_30 -> m15_34  [key=2, style=dotted];
m15_30 -> m15_32  [color=darkseagreen4, key=1, label=result, style=dashed];
m15_31 -> m15_32  [key=0, style=solid];
m15_31 -> m15_35  [key=2, style=dotted];
m15_31 -> m15_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_31 -> m15_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_32 -> m15_33  [key=0, style=solid];
m15_32 -> m15_36  [key=2, style=dotted];
m15_33 -> m15_4  [color=blue, key=0, style=bold];
m15_34 -> m15_44  [color=green, key=0, style=solid];
m15_34 -> m15_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_34 -> m15_60  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m15_34 -> m15_61  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m15_34 -> m15_68  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m15_34 -> m15_62  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m15_34 -> m15_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_34 -> m15_73  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_34 -> m15_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_34 -> m15_53  [color=green, key=1, label=string, style=dashed];
m15_34 -> m15_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_34 -> m15_82  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m15_34 -> m15_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_34 -> m15_46  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m15_34 -> m15_4  [color=darkorchid, key=3, label="Parameter variable System.Globalization.CultureInfo conversionCulture", style=bold];
m15_44 -> m15_45  [color=green, key=0, style=solid];
m15_44 -> m15_46  [color=green, key=1, label=changeType, style=dashed];
m15_44 -> m15_44  [color=green, key=3, label="Local variable System.Func<object> changeType", style=bold];
m15_45 -> m15_46  [key=0, style=solid];
m15_45 -> m15_45  [color=darkorchid, key=3, label="Local variable System.Func<object> makeType", style=bold];
m15_46 -> m15_47  [key=0, style=solid];
m15_46 -> m15_48  [key=2, style=dotted];
m15_46 -> m15_49  [key=2, style=dotted];
m15_46 -> m15_50  [key=2, style=dotted];
m15_47 -> m15_34  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_3  [key=2, style=dotted];
m15_1 -> m15_4  [key=2, style=dotted];
m15_1 -> m15_5  [key=2, style=dotted];
m15_2 -> m15_0  [color=blue, key=0, style=bold];
m15_57 -> m15_34  [color=darkorchid, key=3, label="Parameter variable System.Type conversionType", style=bold];
m15_57 -> m15_91  [color=darkorchid, key=3, label="method methodReturn object ToEnum", style=bold];
m15_81 -> m15_82  [key=0, style=solid];
m15_21 -> m15_22  [key=0, style=solid];
m15_21 -> m15_4  [key=2, style=dotted];
m15_20 -> m15_21  [key=0, style=solid];
m15_23 -> m15_24  [key=0, style=solid];
m15_27 -> m15_28  [key=0, style=solid];
m15_22 -> m15_20  [color=blue, key=0, style=bold];
m15_24 -> m15_25  [key=0, style=solid];
m15_24 -> m15_26  [key=2, style=dotted];
m15_25 -> m15_23  [color=blue, key=0, style=bold];
m15_28 -> m15_29  [key=0, style=solid];
m15_29 -> m15_27  [color=blue, key=0, style=bold];
m15_37 -> m15_38  [key=0, style=solid];
m15_39 -> m15_40  [key=0, style=solid];
m15_38 -> m15_37  [color=blue, key=0, style=bold];
m15_40 -> m15_41  [key=0, style=solid];
m15_40 -> m15_42  [key=2, style=dotted];
m15_40 -> m15_43  [key=2, style=dotted];
m15_41 -> m15_39  [color=blue, key=0, style=bold];
m15_52 -> m15_53  [color=green, key=0, style=solid];
m15_60 -> m15_61  [key=0, style=solid];
m15_60 -> m15_49  [key=2, style=dotted];
m15_60 -> m15_68  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m15_60 -> m15_63  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m15_60 -> m15_73  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m15_60 -> m15_64  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m15_60 -> m15_78  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m15_61 -> m15_62  [key=0, style=solid];
m15_68 -> m15_69  [key=0, style=solid];
m15_68 -> m15_70  [key=2, style=dotted];
m15_68 -> m15_71  [key=2, style=dotted];
m15_62 -> m15_63  [key=0, style=solid];
m15_62 -> m15_58  [key=2, style=dotted];
m15_62 -> m15_73  [color=darkseagreen4, key=1, label=type, style=dashed];
m15_62 -> m15_64  [color=darkseagreen4, key=1, label=type, style=dashed];
m15_62 -> m15_78  [color=darkseagreen4, key=1, label=type, style=dashed];
m15_63 -> m15_64  [key=0, style=solid];
m15_63 -> m15_65  [color=darkseagreen4, key=1, label=withValue, style=dashed];
m15_73 -> m15_74  [key=0, style=solid];
m15_73 -> m15_75  [key=2, style=dotted];
m15_73 -> m15_76  [key=2, style=dotted];
m15_65 -> m15_66  [key=0, style=solid];
m15_65 -> m15_58  [key=2, style=dotted];
m15_53 -> m15_54  [color=green, key=0, style=solid];
m15_53 -> m15_55  [color=green, key=2, style=dotted];
m15_53 -> m15_56  [color=green, key=2, style=dotted];
m15_53 -> m15_57  [color=green, key=2, style=dotted];
m15_53 -> m15_58  [color=green, key=2, style=dotted];
m15_82 -> m15_83  [key=0, style=solid];
m15_82 -> m15_87  [key=2, style=dotted];
m15_83 -> m15_86  [key=0, style=solid];
m15_83 -> m15_88  [key=2, style=dotted];
m15_51 -> m15_52  [key=0, style=solid];
m15_54 -> m15_51  [color=blue, key=0, style=bold];
m15_59 -> m15_60  [key=0, style=solid];
m15_64 -> m15_65  [key=0, style=solid];
m15_78 -> m15_79  [key=0, style=solid];
m15_78 -> m15_80  [key=2, style=dotted];
m15_66 -> m15_59  [color=blue, key=0, style=bold];
m15_67 -> m15_68  [key=0, style=solid];
m15_69 -> m15_67  [color=blue, key=0, style=bold];
m15_72 -> m15_73  [key=0, style=solid];
m15_74 -> m15_72  [color=blue, key=0, style=bold];
m15_77 -> m15_78  [key=0, style=solid];
m15_79 -> m15_77  [color=blue, key=0, style=bold];
m15_84 -> m15_85  [key=0, style=solid];
m15_85 -> m15_86  [key=0, style=solid];
m15_85 -> m15_89  [key=2, style=dotted];
m15_86 -> m15_81  [color=blue, key=0, style=bold];
m15_5 -> m15_6  [color=green, key=0, style=solid];
m15_5 -> m15_7  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m15_5 -> m15_21  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m15_5 -> m15_0  [color=darkorchid, key=3, label="Parameter variable System.Globalization.CultureInfo conversionCulture", style=bold];
m15_6 -> m15_7  [color=green, key=0, style=solid];
m15_6 -> m15_10  [color=green, key=2, style=dotted];
m15_6 -> m15_11  [color=green, key=2, style=dotted];
m15_6 -> m15_12  [color=green, key=2, style=dotted];
m15_6 -> m15_13  [color=green, key=2, style=dotted];
m15_6 -> m15_14  [color=green, key=2, style=dotted];
m15_6 -> m15_21  [color=green, key=1, label=type, style=dashed];
m15_6 -> m15_8  [color=green, key=1, label=type, style=dashed];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_15  [key=2, style=dotted];
m15_7 -> m15_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_16  [key=2, style=dotted];
m15_8 -> m15_17  [key=2, style=dotted];
m15_8 -> m15_15  [key=2, style=dotted];
m15_8 -> m15_18  [key=2, style=dotted];
m15_8 -> m15_19  [key=2, style=dotted];
m15_8 -> m15_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_8 -> m15_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_9 -> m15_5  [color=blue, key=0, style=bold];
m15_90 -> m15_91  [key=0, style=solid];
m15_90 -> m15_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_90 -> m15_95  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m15_91 -> m15_92  [key=0, style=solid];
m15_92 -> m15_93  [key=0, style=solid];
m15_92 -> m15_95  [key=0, style=solid];
m15_92 -> m15_99  [key=2, style=dotted];
m15_92 -> m15_96  [color=darkseagreen4, key=1, label=parsedValue, style=dashed];
m15_95 -> m15_96  [key=0, style=solid];
m15_95 -> m15_97  [key=0, style=solid];
m15_95 -> m15_101  [key=2, style=dotted];
m15_93 -> m15_94  [key=0, style=solid];
m15_96 -> m15_98  [key=0, style=solid];
m15_94 -> m15_98  [key=0, style=solid];
m15_94 -> m15_100  [key=2, style=dotted];
m15_97 -> m15_98  [key=0, style=solid];
m15_97 -> m15_100  [key=2, style=dotted];
m15_98 -> m15_90  [color=blue, key=0, style=bold];
m15_102 -> m15_21  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m15_103 -> m15_21  [color=darkseagreen4, key=1, label=type, style=dashed];
m15_104 -> m15_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_104 -> m15_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_104 -> m15_73  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_104 -> m15_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_104 -> m15_53  [color=green, key=1, label=string, style=dashed];
m15_104 -> m15_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_105 -> m15_52  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m15_105 -> m15_60  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m15_105 -> m15_61  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m15_105 -> m15_68  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m15_105 -> m15_62  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m15_105 -> m15_53  [color=green, key=1, label="System.Type", style=dashed];
m15_105 -> m15_82  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m15_106 -> m15_52  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m15_106 -> m15_63  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m15_106 -> m15_73  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m15_107 -> m15_68  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m15_107 -> m15_73  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m15_107 -> m15_78  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m15_108 -> m15_73  [color=darkseagreen4, key=1, label=type, style=dashed];
m15_108 -> m15_78  [color=darkseagreen4, key=1, label=type, style=dashed];
m16_0 -> m16_1  [key=0, style=solid];
m16_0 -> m16_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_0 -> m16_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_0 -> m16_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_3  [key=0, style=solid];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_5  [key=0, style=solid];
m16_5 -> m16_6  [key=0, style=solid];
m16_6 -> m16_7  [key=0, style=solid];
m16_2 -> m16_7  [key=0, style=solid];
m16_2 -> m16_8  [key=2, style=dotted];
m16_4 -> m16_7  [key=0, style=solid];
m16_4 -> m16_8  [key=2, style=dotted];
m16_7 -> m16_0  [color=blue, key=0, style=bold];
m16_12 -> m16_13  [key=0, style=solid];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_15  [key=2, style=dotted];
m16_13 -> m16_16  [key=2, style=dotted];
m16_13 -> m16_9  [key=2, style=dotted];
m16_13 -> m16_17  [key=2, style=dotted];
m16_13 -> m16_13  [color=darkseagreen4, key=1, label=type, style=dashed];
m16_14 -> m16_12  [color=blue, key=0, style=bold];
m16_9 -> m16_10  [key=0, style=solid];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_0  [key=2, style=dotted];
m16_11 -> m16_9  [color=blue, key=0, style=bold];
m16_18 -> m16_5  [color=darkseagreen4, key=1, label="CommandLine.Core.Verb", style=dashed];
m16_18 -> m16_6  [color=darkseagreen4, key=1, label="CommandLine.Core.Verb", style=dashed];
}
