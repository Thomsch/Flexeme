digraph  {
m0_7 [cluster="CommandLine.Parsing.StringArrayEnumerator.StringArrayEnumerator(string[])", file="AssemblyLicenseAttribute.cs", label="Entry CommandLine.Parsing.StringArrayEnumerator.StringArrayEnumerator(string[])", span="38-38"];
m0_12 [cluster="Unk.Be", file="AssemblyLicenseAttribute.cs", label="Entry Unk.Be", span=""];
m0_10 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="AssemblyLicenseAttribute.cs", label="Entry CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="47-47"];
m0_0 [cluster="CommandLine.Tests.Unit.Infrastructure.ArgumentParserFixture.Get_next_input_values()", file="AssemblyLicenseAttribute.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.ArgumentParserFixture.Get_next_input_values()", span="44-44"];
m0_1 [cluster="CommandLine.Tests.Unit.Infrastructure.ArgumentParserFixture.Get_next_input_values()", color=green, community=0, file="AssemblyLicenseAttribute.cs", label="0: var ae = new StringArrayEnumerator(new string[] { ''--optarr'', ''one'', ''two'', ''--plain'', ''3'' })", span="46-46"];
m0_2 [cluster="CommandLine.Tests.Unit.Infrastructure.ArgumentParserFixture.Get_next_input_values()", file="AssemblyLicenseAttribute.cs", label="ae.MoveNext()", span="48-48"];
m0_3 [cluster="CommandLine.Tests.Unit.Infrastructure.ArgumentParserFixture.Get_next_input_values()", file="AssemblyLicenseAttribute.cs", label="var items = ArgumentParser.InternalWrapperOfGetNextInputValues(ae)", span="50-50"];
m0_5 [cluster="CommandLine.Tests.Unit.Infrastructure.ArgumentParserFixture.Get_next_input_values()", file="AssemblyLicenseAttribute.cs", label="ae.Current.Should().Be(''two'')", span="53-53"];
m0_4 [cluster="CommandLine.Tests.Unit.Infrastructure.ArgumentParserFixture.Get_next_input_values()", file="AssemblyLicenseAttribute.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'' }, items)", span="52-52"];
m0_6 [cluster="CommandLine.Tests.Unit.Infrastructure.ArgumentParserFixture.Get_next_input_values()", file="AssemblyLicenseAttribute.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.ArgumentParserFixture.Get_next_input_values()", span="44-44"];
m0_8 [cluster="CommandLine.Parsing.StringArrayEnumerator.MoveNext()", file="AssemblyLicenseAttribute.cs", label="Entry CommandLine.Parsing.StringArrayEnumerator.MoveNext()", span="93-93"];
m0_11 [cluster="Unk.Should", file="AssemblyLicenseAttribute.cs", label="Entry Unk.Should", span=""];
m0_9 [cluster="CommandLine.Parsing.ArgumentParser.InternalWrapperOfGetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", file="AssemblyLicenseAttribute.cs", label="Entry CommandLine.Parsing.ArgumentParser.InternalWrapperOfGetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", span="106-106"];
m0_13 [file="AssemblyLicenseAttribute.cs", label="CommandLine.Tests.Unit.Infrastructure.ArgumentParserFixture", span=""];
m1_8 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", span="68-68"];
m1_9 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", span="68-68"];
m1_2 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", span="29-29"];
m1_3 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", span="29-29"];
m1_6 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", span="54-54"];
m1_7 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", span="54-54"];
m1_0 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", span="18-18"];
m1_1 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", span="18-18"];
m1_4 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", span="41-41"];
m1_5 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", span="41-41"];
m2_40 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", span="110-110"];
m2_41 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="115-119"];
m2_42 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="CopyrightInfo.cs", label="Assert.True(expected.SequenceEqual(result.Value.IntSequence))", span="122-122"];
m2_43 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", span="110-110"];
m2_150 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", span="6-6"];
m2_172 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="CopyrightInfo.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33"];
m2_306 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", span="732-732"];
m2_307 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithScalarValueAndSequenceStringAdjacent(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="737-741"];
m2_308 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="CopyrightInfo.cs", label="expected.ShouldBeEquivalentTo(result.Value)", span="744-744"];
m2_309 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", span="732-732"];
m2_11 [cluster="Unk.True", file="CopyrightInfo.cs", label="Entry Unk.True", span=""];
m2_159 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", span="405-405"];
m2_160 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndSeparator(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="410-414"];
m2_161 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="CopyrightInfo.cs", label="expected.ShouldBeEquivalentTo(result.Value.StringSequence)", span="417-417"];
m2_162 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", span="405-405"];
m2_233 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="556-556"];
m2_234 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''i'', '''')) }", span="559-559"];
m2_235 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new [] { ''-i'', ''10'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="562-566"];
m2_236 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="569-569"];
m2_237 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="556-556"];
m2_274 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", span="652-652"];
m2_275 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="CopyrightInfo.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(NameInfo.EmptyName) }", span="655-655"];
m2_276 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithRequiredValue(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="658-662"];
m2_277 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="CopyrightInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="665-665"];
m2_278 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", span="652-652"];
m2_220 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="CopyrightInfo.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283"];
m2_82 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", span="6-6"];
m2_62 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraint.FakeOptionsWithSequenceAndOnlyMaxConstraint()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraint.FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="6-6"];
m2_151 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", span="383-383"];
m2_152 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndSeparator(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="388-392"];
m2_153 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="CopyrightInfo.cs", label="expected.ShouldBeEquivalentTo(result.Value.LongSequence)", span="395-395"];
m2_154 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", span="383-383"];
m2_143 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", span="361-361"];
m2_144 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceWithoutRange(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="366-370"];
m2_145 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="CopyrightInfo.cs", label="expected.ShouldBeEquivalentTo(result.Value.LongSequence)", span="373-373"];
m2_146 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", span="361-361"];
m2_241 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="575-575"];
m2_242 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="CopyrightInfo.cs", label="var expectedResult = new[] { new UnknownOptionError(''xyz'') }", span="578-578"];
m2_243 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''--stringvalue'', ''abc'', ''--xyz'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="581-585"];
m2_244 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="CopyrightInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="588-588"];
m2_245 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="575-575"];
m2_55 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="155-155"];
m2_56 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMaxConstraint(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="160-164"];
m2_57 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="CopyrightInfo.cs", label="Assert.True(expected.SequenceEqual(result.Value.StringSequence))", span="167-167"];
m2_58 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="155-155"];
m2_54 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraint.FakeOptionsWithSequenceAndOnlyMinConstraint()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraint.FakeOptionsWithSequenceAndOnlyMinConstraint()", span="6-6"];
m2_266 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", span="634-634"];
m2_267 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="639-643"];
m2_268 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="CopyrightInfo.cs", label="Assert.True(expected.Equals(result.Value.StringValue))", span="646-646"];
m2_269 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", span="634-634"];
m2_314 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", span="751-751"];
m2_315 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithNullables(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="756-760"];
m2_316 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="CopyrightInfo.cs", label="expected.ShouldBeEquivalentTo(result.Value.NullableInt)", span="763-763"];
m2_317 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", span="751-751"];
m2_207 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="498-498"];
m2_208 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="CopyrightInfo.cs", label="var expectedResult = new FakeOptionWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = ''str2''\r\n            }", span="500-503"];
m2_209 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] { ''--ftpurl'', ''str1'', ''--weburl'', ''str2'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="505-509"];
m2_210 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="CopyrightInfo.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="512-512"];
m2_211 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="498-498"];
m2_187 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="CopyrightInfo.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m2_31 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", span="88-88"];
m2_32 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequence(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="93-97"];
m2_33 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", color=red, community=0, file="CopyrightInfo.cs", label="0: Assert.True(expected.SequenceEqual(result.Value.IntSequence))", span="100-100"];
m2_34 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", span="88-88"];
m2_0 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="16-16"];
m2_1 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="CopyrightInfo.cs", label="var fakeOptions = new FakeOptions()", span="19-19"];
m2_2 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="CopyrightInfo.cs", label="var expectedResult = ParserResult.Create(\r\n                ParserResultType.Options,\r\n                fakeOptions, new Error[] { new HelpRequestedError() })", span="20-22"];
m2_3 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => fakeOptions,\r\n                new[] { ''--help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="25-29"];
m2_4 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="CopyrightInfo.cs", label="Assert.True(expectedResult.Equals(result))", span="32-32"];
m2_5 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="16-16"];
m2_224 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="537-537"];
m2_225 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="CopyrightInfo.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(new NameInfo('''', ''str'')) }", span="540-540"];
m2_226 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequired(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="543-547"];
m2_227 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="CopyrightInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="550-550"];
m2_228 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="537-537"];
m2_8 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="CopyrightInfo.cs", label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="100-100"];
m2_290 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="693-693"];
m2_291 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="696-696"];
m2_292 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceMinMaxEqual(),\r\n                new[] { ''one'', ''two'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="699-703"];
m2_293 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="706-706"];
m2_294 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="693-693"];
m2_78 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="CopyrightInfo.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m2_322 [cluster="FakeOptionsWithNullables.cstr", file="CopyrightInfo.cs", label="Entry FakeOptionsWithNullables.cstr", span=""];
m2_319 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="757-757"];
m2_13 [cluster="lambda expression", file="CopyrightInfo.cs", label=fakeOptions, span="26-26"];
m2_12 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="26-26"];
m2_14 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="26-26"];
m2_20 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="47-47"];
m2_21 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptions()", span="47-47"];
m2_22 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="47-47"];
m2_27 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="70-70"];
m2_28 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithDouble()", span="70-70"];
m2_29 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="70-70"];
m2_36 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="94-94"];
m2_37 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithSequence()", span="94-94"];
m2_38 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="94-94"];
m2_44 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="116-116"];
m2_45 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptions()", span="116-116"];
m2_46 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="116-116"];
m2_51 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="139-139"];
m2_52 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithSequenceAndOnlyMinConstraint()", span="139-139"];
m2_53 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="139-139"];
m2_59 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="161-161"];
m2_60 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="161-161"];
m2_61 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="161-161"];
m2_70 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="180-180"];
m2_71 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithSequenceAndOnlyMinConstraint()", span="180-180"];
m2_72 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="180-180"];
m2_79 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="199-199"];
m2_80 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", span="199-199"];
m2_81 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="199-199"];
m2_88 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="219-219"];
m2_89 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="219-219"];
m2_90 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="219-219"];
m2_96 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="238-238"];
m2_97 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", span="238-238"];
m2_98 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="238-238"];
m2_105 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="262-262"];
m2_106 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithEnum()", span="262-262"];
m2_107 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="262-262"];
m2_115 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="281-281"];
m2_116 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithEnum()", span="281-281"];
m2_117 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="281-281"];
m2_123 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="300-300"];
m2_124 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithEnum()", span="300-300"];
m2_125 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="300-300"];
m2_131 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="319-319"];
m2_132 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithEnum()", span="319-319"];
m2_133 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="319-319"];
m2_140 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="344-344"];
m2_141 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithValues()", span="344-344"];
m2_142 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="344-344"];
m2_147 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="367-367"];
m2_148 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithSequenceWithoutRange()", span="367-367"];
m2_149 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="367-367"];
m2_155 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="389-389"];
m2_156 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithSequenceAndSeparator()", span="389-389"];
m2_157 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="389-389"];
m2_163 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="411-411"];
m2_164 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithSequenceAndSeparator()", span="411-411"];
m2_165 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="411-411"];
m2_173 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="440-440"];
m2_176 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="441-443"];
m2_174 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithValues()", span="440-440"];
m2_175 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="440-440"];
m2_177 [cluster="lambda expression", file="CopyrightInfo.cs", label="Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)))", span="442-443"];
m2_181 [cluster="lambda expression", file="CopyrightInfo.cs", label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))", span="443-443"];
m2_185 [cluster="lambda expression", file="CopyrightInfo.cs", label="NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)", span="443-443"];
m2_178 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="441-443"];
m2_180 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="443-443"];
m2_182 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="443-443"];
m2_184 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="443-443"];
m2_186 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="443-443"];
m2_194 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="466-466"];
m2_195 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithSets()", span="466-466"];
m2_196 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="466-466"];
m2_204 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="486-486"];
m2_205 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionWithRequiredAndSet()", span="486-486"];
m2_206 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="486-486"];
m2_212 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="506-506"];
m2_213 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionWithRequiredAndSet()", span="506-506"];
m2_214 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="506-506"];
m2_221 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="526-526"];
m2_222 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionWithRequiredAndSet()", span="526-526"];
m2_223 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="526-526"];
m2_229 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="544-544"];
m2_230 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionWithRequired()", span="544-544"];
m2_231 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="544-544"];
m2_238 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="563-563"];
m2_239 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptions()", span="563-563"];
m2_240 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="563-563"];
m2_247 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="582-582"];
m2_248 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptions()", span="582-582"];
m2_249 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="582-582"];
m2_255 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="601-601"];
m2_256 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptions()", span="601-601"];
m2_257 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="601-601"];
m2_263 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="620-620"];
m2_264 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptions()", span="620-620"];
m2_265 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="620-620"];
m2_271 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="640-640"];
m2_272 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptions()", span="640-640"];
m2_273 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="640-640"];
m2_279 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="659-659"];
m2_280 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithRequiredValue()", span="659-659"];
m2_281 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="659-659"];
m2_287 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="681-681"];
m2_288 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptions()", span="681-681"];
m2_289 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="681-681"];
m2_295 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="700-700"];
m2_296 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithSequenceMinMaxEqual()", span="700-700"];
m2_297 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="700-700"];
m2_303 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="719-719"];
m2_304 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithRequiredValue()", span="719-719"];
m2_305 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="719-719"];
m2_310 [cluster="lambda expression", file="CopyrightInfo.cs", label="Entry lambda expression", span="738-738"];
m2_311 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithScalarValueAndSequenceStringAdjacent()", span="738-738"];
m2_312 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="738-738"];
m2_320 [cluster="lambda expression", file="CopyrightInfo.cs", label="new FakeOptionsWithNullables()", span="757-757"];
m2_321 [cluster="lambda expression", file="CopyrightInfo.cs", label="Exit lambda expression", span="757-757"];
m2_215 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="517-517"];
m2_216 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="CopyrightInfo.cs", label="var expectedResult = new[]\r\n            {\r\n                new MissingRequiredOptionError(new NameInfo('''', ''ftpurl'')),\r\n                new MissingRequiredOptionError(new NameInfo('''', ''weburl''))\r\n            }", span="519-523"];
m2_217 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] {''''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="525-529"];
m2_218 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="CopyrightInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="532-532"];
m2_219 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="517-517"];
m2_100 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", span="256-256"];
m2_101 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="261-265"];
m2_102 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="CopyrightInfo.cs", label="expected.ShouldBeEquivalentTo(result.Value.Colors)", span="268-268"];
m2_103 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", span="256-256"];
m2_35 [cluster="Unk.SequenceEqual", file="CopyrightInfo.cs", label="Entry Unk.SequenceEqual", span=""];
m2_126 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", span="312-312"];
m2_127 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="CopyrightInfo.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="315-315"];
m2_128 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''RED'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="318-322"];
m2_129 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="CopyrightInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="325-325"];
m2_130 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", span="312-312"];
m2_68 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="CopyrightInfo.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261"];
m2_99 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", span="6-6"];
m2_166 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="426-426"];
m2_167 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="CopyrightInfo.cs", label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''str1'',\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''-a'', ''--bee'', ''-c'' },\r\n                    IntValue = 20\r\n                }", span="429-435"];
m2_168 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="CopyrightInfo.cs", label="var arguments = new[] { ''--stringvalue'', ''str1'', ''--'', ''10'', ''-a'', ''--bee'', ''-c'', ''20'' }", span="436-436"];
m2_170 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="CopyrightInfo.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="449-449"];
m2_169 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                (a, optionSpecs) =>\r\n                    Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="439-446"];
m2_171 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="426-426"];
m2_83 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="212-212"];
m2_84 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''s'', ''string-seq'')) }", span="215-215"];
m2_85 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMaxConstraint(),\r\n                new[] { ''--string-seq=one'', ''two'', ''three'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="218-222"];
m2_86 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="225-225"];
m2_87 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="212-212"];
m2_299 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", span="713-713"];
m2_300 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithRequiredValue(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="718-722"];
m2_301 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="CopyrightInfo.cs", label="expected.ShouldBeEquivalentTo(result.Value)", span="725-725"];
m2_302 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", span="713-713"];
m2_258 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="613-613"];
m2_259 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="CopyrightInfo.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="616-616"];
m2_260 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-zx'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="619-623"];
m2_261 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="CopyrightInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="626-626"];
m2_262 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="613-613"];
m2_10 [cluster="CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", file="CopyrightInfo.cs", label="Entry CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", span="87-87"];
m2_30 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", span="4-4"];
m2_63 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="173-173"];
m2_64 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="CopyrightInfo.cs", label="var expectedResult = new[] { new MissingValueOptionError(new NameInfo(''s'', ''string-seq'')) }", span="176-176"];
m2_65 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMinConstraint(),\r\n                new[] { ''-s'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="179-183"];
m2_66 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="CopyrightInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="186-186"];
m2_67 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="173-173"];
m2_108 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", span="11-11"];
m2_134 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="331-331"];
m2_135 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="CopyrightInfo.cs", label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = string.Empty,\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''a'', ''b'', ''c'' },\r\n                    IntValue = 20\r\n                }", span="334-340"];
m2_136 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                new[] { ''10'', ''a'', ''b'', ''c'', ''20'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="343-347"];
m2_137 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="CopyrightInfo.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="350-350"];
m2_138 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="331-331"];
m2_283 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", span="675-675"];
m2_284 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="680-684"];
m2_285 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="CopyrightInfo.cs", label="expected.ShouldBeEquivalentTo(result.Value.StringValue)", span="687-687"];
m2_286 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", span="675-675"];
m2_313 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent.FakeOptionsWithScalarValueAndSequenceStringAdjacent()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent.FakeOptionsWithScalarValueAndSequenceStringAdjacent()", span="6-6"];
m2_203 [cluster="CommandLine.Tests.Fakes.FakeOptionWithRequiredAndSet.FakeOptionWithRequiredAndSet()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequiredAndSet.FakeOptionWithRequiredAndSet()", span="4-4"];
m2_73 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="192-192"];
m2_74 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="195-195"];
m2_75 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMinConstraintAsValue(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="198-202"];
m2_76 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="205-205"];
m2_77 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="192-192"];
m2_246 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="CopyrightInfo.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="272-272"];
m2_91 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="231-231"];
m2_92 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="234-234"];
m2_93 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue(),\r\n                new[] { ''one'', ''two'', ''three'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="237-241"];
m2_94 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="244-244"];
m2_95 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="231-231"];
m2_114 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="CopyrightInfo.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="305-305"];
m2_158 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", span="6-6"];
m2_179 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="CopyrightInfo.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="31-31"];
m2_183 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="CopyrightInfo.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m2_198 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", span="478-478"];
m2_199 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="CopyrightInfo.cs", label="var expectedResult = new FakeOptionWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = null\r\n            }", span="480-483"];
m2_200 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] { ''--ftpurl'', ''str1''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="485-489"];
m2_201 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="CopyrightInfo.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="492-492"];
m2_202 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", span="478-478"];
m2_197 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", span="4-4"];
m2_270 [cluster="string.Equals(string)", file="CopyrightInfo.cs", label="Entry string.Equals(string)", span="0-0"];
m2_193 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="CopyrightInfo.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294"];
m2_298 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceMinMaxEqual.FakeOptionsWithSequenceMinMaxEqual()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceMinMaxEqual.FakeOptionsWithSequenceMinMaxEqual()", span="9-9"];
m2_232 [cluster="CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", span="4-4"];
m2_69 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="CopyrightInfo.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m2_47 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="133-133"];
m2_48 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMinConstraint(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="138-142"];
m2_49 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="CopyrightInfo.cs", label="Assert.True(expected.SequenceEqual(result.Value.StringSequence))", span="145-145"];
m2_50 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="133-133"];
m2_15 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", span="41-41"];
m2_16 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="46-50"];
m2_17 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="CopyrightInfo.cs", label="Assert.Equal(expected, result.Value.LongValue)", span="53-53"];
m2_18 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", span="41-41"];
m2_39 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", span="6-6"];
m2_6 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m2_250 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="594-594"];
m2_251 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="CopyrightInfo.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="597-597"];
m2_252 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-z'', ''-x'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="600-604"];
m2_253 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="CopyrightInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="607-607"];
m2_254 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="594-594"];
m2_118 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", span="293-293"];
m2_119 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="CopyrightInfo.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="296-296"];
m2_120 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''Yellow'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="299-303"];
m2_121 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="CopyrightInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="306-306"];
m2_122 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", span="293-293"];
m2_109 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", span="274-274"];
m2_110 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="CopyrightInfo.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="277-277"];
m2_111 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''3'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="280-284"];
m2_112 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="CopyrightInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="287-287"];
m2_113 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", span="274-274"];
m2_23 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", span="64-64"];
m2_24 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithDouble(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="69-73"];
m2_25 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="CopyrightInfo.cs", label="Assert.Equal(expected, result.Value.DoubleValue)", span="76-76"];
m2_26 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", span="64-64"];
m2_139 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6"];
m2_282 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue.FakeOptionsWithRequiredValue()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue.FakeOptionsWithRequiredValue()", span="4-4"];
m2_7 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="CopyrightInfo.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338"];
m2_19 [cluster="Unk.Equal", file="CopyrightInfo.cs", label="Entry Unk.Equal", span=""];
m2_318 [cluster="Unk.Build", file="CopyrightInfo.cs", label="Entry Unk.Build", span=""];
m2_188 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="CopyrightInfo.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="455-455"];
m2_189 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="CopyrightInfo.cs", label="var expectedResult = new[]\r\n                {\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''weburl'')),\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''ftpurl''))\r\n                }", span="458-462"];
m2_190 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="CopyrightInfo.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSets(),\r\n                new[] { ''--weburl'', ''http://mywebsite.org/'', ''--ftpurl'', ''fpt://ftpsite.org/'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="465-469"];
m2_191 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="CopyrightInfo.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="472-472"];
m2_192 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="CopyrightInfo.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="455-455"];
m2_104 [cluster="Unk.ShouldBeEquivalentTo", file="CopyrightInfo.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m2_9 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="CopyrightInfo.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m2_323 [file="CopyrightInfo.cs", label=fakeOptions, span=""];
m2_324 [file="CopyrightInfo.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m22_34 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="105-105"];
m22_35 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="string.IsNullOrWhiteSpace(''message'')", span="107-107"];
m22_37 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="writer == null", span="108-108"];
m22_39 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="var builder = new StringBuilder(this.programName.Length + message.Length + 2)", span="110-110"];
m22_42 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="builder.Append(message)", span="113-113"];
m22_43 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="writer.WriteLine(builder.ToString())", span="114-114"];
m22_36 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="throw new ArgumentException(''message'');", span="107-107"];
m22_38 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="throw new ArgumentNullException(''writer'');", span="108-108"];
m22_40 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="builder.Append(this.programName)", span="111-111"];
m22_41 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="builder.Append('': '')", span="112-112"];
m22_44 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="105-105"];
m22_32 [cluster="System.Text.StringBuilder.Append(char)", file="HeadingInfo.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m22_46 [cluster="System.IO.TextWriter.WriteLine(string)", file="HeadingInfo.cs", label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0"];
m22_47 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string)", span="123-123"];
m22_48 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="HeadingInfo.cs", label="WriteMessage(message, Console.Out)", span="125-125"];
m22_49 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.WriteMessage(string)", span="123-123"];
m22_2 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="37-37"];
m22_3 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfo.cs", label="string.IsNullOrWhiteSpace(''programName'')", span="39-39"];
m22_5 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfo.cs", label="this.programName = programName", span="41-41"];
m22_6 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfo.cs", label="this.version = version", span="42-42"];
m22_4 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfo.cs", label="throw new ArgumentException(''programName'');", span="39-39"];
m22_7 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="37-37"];
m22_30 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="HeadingInfo.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m22_17 [cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", span="73-73"];
m22_18 [cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="HeadingInfo.cs", label="return info.ToString();", span="75-75"];
m22_19 [cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", span="73-73"];
m22_0 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="25-25"];
m22_1 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="25-25"];
m22_20 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.ToString()", span="82-82"];
m22_21 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="bool isVersionNull = string.IsNullOrEmpty(this.version)", span="84-84"];
m22_22 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="var builder = new StringBuilder(this.programName.Length +\n                (!isVersionNull ? this.version.Length + 1 : 0))", span="85-86"];
m22_24 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="!isVersionNull", span="88-88"];
m22_23 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="builder.Append(this.programName)", span="87-87"];
m22_25 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="builder.Append(' ')", span="90-90"];
m22_26 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="builder.Append(this.version)", span="91-91"];
m22_27 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="return builder.ToString();", span="94-94"];
m22_28 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.ToString()", span="82-82"];
m22_14 [cluster="lambda expression", file="HeadingInfo.cs", label="Entry lambda expression", span="62-62"];
m22_10 [cluster="lambda expression", file="HeadingInfo.cs", label="Entry lambda expression", span="58-58"];
m22_11 [cluster="lambda expression", file="HeadingInfo.cs", label="Path.GetFileNameWithoutExtension(titleAttribute.Title)", span="58-58"];
m22_12 [cluster="lambda expression", file="HeadingInfo.cs", label="Exit lambda expression", span="58-58"];
m22_15 [cluster="lambda expression", color=red, community=0, file="HeadingInfo.cs", label="1: versionAttribute.InformationalVersion", span="62-62"];
m22_16 [cluster="lambda expression", file="HeadingInfo.cs", label="Exit lambda expression", span="62-62"];
m22_29 [cluster="string.IsNullOrEmpty(string)", file="HeadingInfo.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m22_13 [cluster="System.IO.Path.GetFileNameWithoutExtension(string)", file="HeadingInfo.cs", label="Entry System.IO.Path.GetFileNameWithoutExtension(string)", span="0-0"];
m22_33 [cluster="System.Text.StringBuilder.ToString()", file="HeadingInfo.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m22_45 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="HeadingInfo.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m22_31 [cluster="System.Text.StringBuilder.Append(string)", file="HeadingInfo.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m22_50 [cluster="CommandLine.Text.HeadingInfo.WriteError(string)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.WriteError(string)", span="134-134"];
m22_51 [cluster="CommandLine.Text.HeadingInfo.WriteError(string)", file="HeadingInfo.cs", label="WriteMessage(message, Console.Error)", span="136-136"];
m22_52 [cluster="CommandLine.Text.HeadingInfo.WriteError(string)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.WriteError(string)", span="134-134"];
m22_9 [cluster="System.ArgumentException.ArgumentException(string)", file="HeadingInfo.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m22_8 [cluster="string.IsNullOrWhiteSpace(string)", file="HeadingInfo.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m22_53 [file="HeadingInfo.cs", label="CommandLine.Text.HeadingInfo", span=""];
m26_0 [cluster="CommandLine.Infrastructure.Identity<T>.Identity(T)", file="Identity.cs", label="Entry CommandLine.Infrastructure.Identity<T>.Identity(T)", span="10-10"];
m26_1 [cluster="CommandLine.Infrastructure.Identity<T>.Identity(T)", file="Identity.cs", label="this.value = value", span="12-12"];
m26_2 [cluster="CommandLine.Infrastructure.Identity<T>.Identity(T)", file="Identity.cs", label="Exit CommandLine.Infrastructure.Identity<T>.Identity(T)", span="10-10"];
m26_10 [cluster="CommandLine.Infrastructure.IdentityExtensions.Map<T1, T2>(CommandLine.Infrastructure.Identity<T1>, System.Func<T1, T2>)", file="Identity.cs", label="Entry CommandLine.Infrastructure.IdentityExtensions.Map<T1, T2>(CommandLine.Infrastructure.Identity<T1>, System.Func<T1, T2>)", span="33-33"];
m26_11 [cluster="CommandLine.Infrastructure.IdentityExtensions.Map<T1, T2>(CommandLine.Infrastructure.Identity<T1>, System.Func<T1, T2>)", file="Identity.cs", label="return func(identity.Value).ToIdentity();", span="35-35"];
m26_12 [cluster="CommandLine.Infrastructure.IdentityExtensions.Map<T1, T2>(CommandLine.Infrastructure.Identity<T1>, System.Func<T1, T2>)", file="Identity.cs", label="Exit CommandLine.Infrastructure.IdentityExtensions.Map<T1, T2>(CommandLine.Infrastructure.Identity<T1>, System.Func<T1, T2>)", span="33-33"];
m26_13 [cluster="T.ToIdentity<T>()", file="Identity.cs", label="Entry T.ToIdentity<T>()", span="23-23"];
m26_6 [cluster="CommandLine.Infrastructure.IdentityExtensions.Bind<T1, T2>(CommandLine.Infrastructure.Identity<T1>, System.Func<T1, CommandLine.Infrastructure.Identity<T2>>)", file="Identity.cs", label="Entry CommandLine.Infrastructure.IdentityExtensions.Bind<T1, T2>(CommandLine.Infrastructure.Identity<T1>, System.Func<T1, CommandLine.Infrastructure.Identity<T2>>)", span="28-28"];
m26_7 [cluster="CommandLine.Infrastructure.IdentityExtensions.Bind<T1, T2>(CommandLine.Infrastructure.Identity<T1>, System.Func<T1, CommandLine.Infrastructure.Identity<T2>>)", file="Identity.cs", label="return func(identity.Value);", span="30-30"];
m26_8 [cluster="CommandLine.Infrastructure.IdentityExtensions.Bind<T1, T2>(CommandLine.Infrastructure.Identity<T1>, System.Func<T1, CommandLine.Infrastructure.Identity<T2>>)", file="Identity.cs", label="Exit CommandLine.Infrastructure.IdentityExtensions.Bind<T1, T2>(CommandLine.Infrastructure.Identity<T1>, System.Func<T1, CommandLine.Infrastructure.Identity<T2>>)", span="28-28"];
m26_17 [cluster="CommandLine.Infrastructure.IdentityExtensions.SelectMany<TSource, TValue, TResult>(CommandLine.Infrastructure.Identity<TSource>, System.Func<TSource, CommandLine.Infrastructure.Identity<TValue>>, System.Func<TSource, TValue, TResult>)", file="Identity.cs", label="Entry CommandLine.Infrastructure.IdentityExtensions.SelectMany<TSource, TValue, TResult>(CommandLine.Infrastructure.Identity<TSource>, System.Func<TSource, CommandLine.Infrastructure.Identity<TValue>>, System.Func<TSource, TValue, TResult>)", span="44-44"];
m26_18 [cluster="CommandLine.Infrastructure.IdentityExtensions.SelectMany<TSource, TValue, TResult>(CommandLine.Infrastructure.Identity<TSource>, System.Func<TSource, CommandLine.Infrastructure.Identity<TValue>>, System.Func<TSource, TValue, TResult>)", file="Identity.cs", label="return resultSelector(identity.Value, valueSelector(identity.Value).Value).ToIdentity();", span="49-49"];
m26_19 [cluster="CommandLine.Infrastructure.IdentityExtensions.SelectMany<TSource, TValue, TResult>(CommandLine.Infrastructure.Identity<TSource>, System.Func<TSource, CommandLine.Infrastructure.Identity<TValue>>, System.Func<TSource, TValue, TResult>)", file="Identity.cs", label="Exit CommandLine.Infrastructure.IdentityExtensions.SelectMany<TSource, TValue, TResult>(CommandLine.Infrastructure.Identity<TSource>, System.Func<TSource, CommandLine.Infrastructure.Identity<TValue>>, System.Func<TSource, TValue, TResult>)", span="44-44"];
m26_14 [cluster="CommandLine.Infrastructure.IdentityExtensions.Select<TSource, TResult>(CommandLine.Infrastructure.Identity<TSource>, System.Func<TSource, TResult>)", file="Identity.cs", label="Entry CommandLine.Infrastructure.IdentityExtensions.Select<TSource, TResult>(CommandLine.Infrastructure.Identity<TSource>, System.Func<TSource, TResult>)", span="38-38"];
m26_15 [cluster="CommandLine.Infrastructure.IdentityExtensions.Select<TSource, TResult>(CommandLine.Infrastructure.Identity<TSource>, System.Func<TSource, TResult>)", file="Identity.cs", label="return selector(identity.Value).ToIdentity();", span="41-41"];
m26_16 [cluster="CommandLine.Infrastructure.IdentityExtensions.Select<TSource, TResult>(CommandLine.Infrastructure.Identity<TSource>, System.Func<TSource, TResult>)", file="Identity.cs", label="Exit CommandLine.Infrastructure.IdentityExtensions.Select<TSource, TResult>(CommandLine.Infrastructure.Identity<TSource>, System.Func<TSource, TResult>)", span="38-38"];
m26_20 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="Identity.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m26_3 [cluster="CommandLine.Infrastructure.IdentityExtensions.ToIdentity<T>(T)", file="Identity.cs", label="Entry CommandLine.Infrastructure.IdentityExtensions.ToIdentity<T>(T)", span="23-23"];
m26_4 [cluster="CommandLine.Infrastructure.IdentityExtensions.ToIdentity<T>(T)", file="Identity.cs", label="return new Identity<T>(value);", span="25-25"];
m26_5 [cluster="CommandLine.Infrastructure.IdentityExtensions.ToIdentity<T>(T)", file="Identity.cs", label="Exit CommandLine.Infrastructure.IdentityExtensions.ToIdentity<T>(T)", span="23-23"];
m26_9 [cluster="System.Func<T, TResult>.Invoke(T)", file="Identity.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m26_21 [file="Identity.cs", label="CommandLine.Infrastructure.Identity<T>", span=""];
m27_14 [cluster="Unk.SingleOrDefault", file="InstanceBuilder.cs", label="Entry Unk.SingleOrDefault", span=""];
m27_0 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="18-18"];
m27_1 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilder.cs", label="var option = specifications.FirstOrDefault(a => name.MatchName(a.ShortName, a.LongName, comparer))", span="20-20"];
m27_2 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilder.cs", label="option == null", span="21-21"];
m27_4 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilder.cs", label="return option.ConversionType == typeof(bool)\r\n                ? NameLookupResult.BooleanOptionFound\r\n                : NameLookupResult.OtherOptionFound;", span="22-24"];
m27_3 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilder.cs", label="return NameLookupResult.NoOptionFound;", span="21-21"];
m27_5 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilder.cs", label="Exit CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="18-18"];
m27_10 [cluster="string.MatchName(string, string, System.StringComparer)", file="InstanceBuilder.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m27_15 [cluster="Unk.ToMaybe", file="InstanceBuilder.cs", label="Entry Unk.ToMaybe", span=""];
m27_6 [cluster="Unk.FirstOrDefault", file="InstanceBuilder.cs", label="Entry Unk.FirstOrDefault", span=""];
m27_24 [cluster="Unk.Just", file="InstanceBuilder.cs", label="Entry Unk.Just", span=""];
m27_21 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="33-33"];
m27_8 [cluster="lambda expression", file="InstanceBuilder.cs", label="name.MatchName(a.ShortName, a.LongName, comparer)", span="20-20"];
m27_7 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="20-20"];
m27_9 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="20-20"];
m27_19 [cluster="lambda expression", file="InstanceBuilder.cs", label="name.MatchName(a.ShortName, a.LongName, comparer) && a.Separator != '\0'", span="31-31"];
m27_18 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="31-31"];
m27_20 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="31-31"];
m27_22 [cluster="lambda expression", file="InstanceBuilder.cs", label="Maybe.Just(spec.Separator)", span="33-33"];
m27_23 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="33-33"];
m27_16 [cluster="CSharpx.Maybe.Nothing<T>()", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m27_17 [cluster="Unk.MapMaybeOrDefault", file="InstanceBuilder.cs", label="Entry Unk.MapMaybeOrDefault", span=""];
m27_11 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="27-27"];
m27_12 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilder.cs", label="return specifications.SingleOrDefault(\r\n                a => name.MatchName(a.ShortName, a.LongName, comparer) && a.Separator != '\0')\r\n                .ToMaybe()\r\n                .MapMaybeOrDefault(spec => Maybe.Just(spec.Separator), Maybe.Nothing<char>());", span="30-33"];
m27_13 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilder.cs", label="Exit CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="27-27"];
m27_25 [file="InstanceBuilder.cs", label=string, span=""];
m27_26 [file="InstanceBuilder.cs", label="System.StringComparer", span=""];
m27_27 [file="InstanceBuilder.cs", label=string, span=""];
m27_28 [file="InstanceBuilder.cs", label="System.StringComparer", span=""];
m28_136 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", span="7-7"];
m28_41 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence()", span="95-95"];
m28_43 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequence(),\r\n                new[] { ''--int-seq'', ''1'', ''20'', ''300'', ''4000'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="101-105"];
m28_44 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Value.IntSequence))", span="108-108"];
m28_42 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { 1, 20, 300, 4000 }", span="98-98"];
m28_45 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence()", span="95-95"];
m28_163 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33"];
m28_33 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", span="76-76"];
m28_35 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithDouble(),\r\n                new[] { ''-0.123'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="82-86"];
m28_34 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs", label="var expectedResult = -.123D", span="79-79"];
m28_36 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs", label="Assert.Equal(expectedResult, result.Value.DoubleValue)", span="89-89"];
m28_37 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", span="76-76"];
m28_11 [cluster="Unk.True", file="InstanceBuilderTests.cs", label="Entry Unk.True", span=""];
m28_224 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="503-503"];
m28_225 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''i'', '''')) }", span="506-506"];
m28_226 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new [] { ''-i'', ''10'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="509-513"];
m28_227 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="516-516"];
m28_228 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="503-503"];
m28_211 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283"];
m28_94 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", span="7-7"];
m28_74 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraint.FakeOptionsWithSequenceAndOnlyMaxConstraint()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraint.FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="7-7"];
m28_232 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="522-522"];
m28_234 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''--stringvalue'', ''abc'', ''--xyz'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="528-532"];
m28_235 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="535-535"];
m28_233 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new UnknownOptionError(''xyz'') }", span="525-525"];
m28_236 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="522-522"];
m28_67 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="160-160"];
m28_68 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMaxConstraint(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="165-169"];
m28_69 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="Assert.True(expected.SequenceEqual(result.Value.StringSequence))", span="172-172"];
m28_70 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="160-160"];
m28_66 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraint.FakeOptionsWithSequenceAndOnlyMinConstraint()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraint.FakeOptionsWithSequenceAndOnlyMinConstraint()", span="7-7"];
m28_198 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="445-445"];
m28_200 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] { ''--ftpurl'', ''str1'', ''--weburl'', ''str2'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="452-456"];
m28_199 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs", label="var expectedResult = new FakeOptionWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = ''str2''\r\n            }", span="447-450"];
m28_201 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="459-459"];
m28_202 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="445-445"];
m28_178 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12"];
m28_0 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="16-16"];
m28_3 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => fakeOptions,\r\n                new[] { ''--help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="25-29"];
m28_4 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.Equals(result))", span="32-32"];
m28_1 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="var fakeOptions = new FakeOptions()", span="19-19"];
m28_2 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="var expectedResult = ParserResult.Create(\r\n                ParserResultType.Options,\r\n                fakeOptions, new Error[] { new HelpRequestedError() })", span="20-22"];
m28_5 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="16-16"];
m28_215 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="484-484"];
m28_217 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequired(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="490-494"];
m28_218 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="497-497"];
m28_216 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(new NameInfo('''', ''str'')) }", span="487-487"];
m28_219 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="484-484"];
m28_8 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="103-103"];
m28_90 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m28_175 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="390-390"];
m28_108 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="243-243"];
m28_109 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", span="243-243"];
m28_110 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="243-243"];
m28_12 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="26-26"];
m28_21 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="45-45"];
m28_29 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="64-64"];
m28_38 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="83-83"];
m28_47 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="102-102"];
m28_56 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="121-121"];
m28_63 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="144-144"];
m28_71 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="166-166"];
m28_82 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="185-185"];
m28_91 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="204-204"];
m28_100 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="224-224"];
m28_119 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="265-265"];
m28_128 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="290-290"];
m28_137 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="312-312"];
m28_146 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="335-335"];
m28_154 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="358-358"];
m28_185 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="413-413"];
m28_195 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="433-433"];
m28_203 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="453-453"];
m28_212 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="473-473"];
m28_220 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="491-491"];
m28_229 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="510-510"];
m28_238 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="529-529"];
m28_246 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="548-548"];
m28_254 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="567-567"];
m28_13 [cluster="lambda expression", file="InstanceBuilderTests.cs", label=fakeOptions, span="26-26"];
m28_14 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="26-26"];
m28_23 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="45-45"];
m28_22 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="45-45"];
m28_31 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="64-64"];
m28_30 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithDouble()", span="64-64"];
m28_40 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="83-83"];
m28_39 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithDouble()", span="83-83"];
m28_49 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="102-102"];
m28_48 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSequence()", span="102-102"];
m28_58 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="121-121"];
m28_57 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="121-121"];
m28_65 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="144-144"];
m28_64 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSequenceAndOnlyMinConstraint()", span="144-144"];
m28_73 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="166-166"];
m28_72 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="166-166"];
m28_84 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="185-185"];
m28_83 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSequenceAndOnlyMinConstraint()", span="185-185"];
m28_93 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="204-204"];
m28_92 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", span="204-204"];
m28_102 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="224-224"];
m28_101 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="224-224"];
m28_121 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="265-265"];
m28_120 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithEnum()", span="265-265"];
m28_130 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="290-290"];
m28_129 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithValues()", span="290-290"];
m28_139 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="312-312"];
m28_138 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSequenceWithoutRange()", span="312-312"];
m28_148 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="335-335"];
m28_147 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSequenceAndSeparator()", span="335-335"];
m28_156 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="358-358"];
m28_155 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSequenceAndSeparator()", span="358-358"];
m28_187 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="413-413"];
m28_186 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSets()", span="413-413"];
m28_197 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="433-433"];
m28_196 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionWithRequiredAndSet()", span="433-433"];
m28_205 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="453-453"];
m28_204 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionWithRequiredAndSet()", span="453-453"];
m28_214 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="473-473"];
m28_213 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionWithRequiredAndSet()", span="473-473"];
m28_222 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="491-491"];
m28_221 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionWithRequired()", span="491-491"];
m28_231 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="510-510"];
m28_230 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="510-510"];
m28_240 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="529-529"];
m28_239 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="529-529"];
m28_248 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="548-548"];
m28_247 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="548-548"];
m28_256 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="567-567"];
m28_255 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="567-567"];
m28_165 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithValues()", span="387-387"];
m28_164 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="387-387"];
m28_166 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="387-387"];
m28_167 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="388-390"];
m28_169 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="388-390"];
m28_168 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)))", span="389-390"];
m28_172 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))", span="390-390"];
m28_176 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)", span="390-390"];
m28_171 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="390-390"];
m28_173 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="390-390"];
m28_177 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="390-390"];
m28_206 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="464-464"];
m28_208 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] {''''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="472-476"];
m28_209 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="479-479"];
m28_207 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="var expectedResult = new[]\r\n            {\r\n                new MissingRequiredOptionError(new NameInfo('''', ''ftpurl'')),\r\n                new MissingRequiredOptionError(new NameInfo('''', ''weburl''))\r\n            }", span="466-470"];
m28_210 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="464-464"];
m28_46 [cluster="Unk.SequenceEqual", file="InstanceBuilderTests.cs", label="Entry Unk.SequenceEqual", span=""];
m28_157 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="373-373"];
m28_161 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="396-396"];
m28_158 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''str1'',\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''-a'', ''--bee'', ''-c'' },\r\n                    IntValue = 20\r\n                }", span="376-382"];
m28_160 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                (a, optionSpecs) =>\r\n                    Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="386-393"];
m28_159 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="var arguments = new[] { ''--stringvalue'', ''str1'', ''--'', ''10'', ''-a'', ''--bee'', ''-c'', ''20'' }", span="383-383"];
m28_162 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="373-373"];
m28_80 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261"];
m28_111 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", span="7-7"];
m28_85 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_an_error()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_an_error()", span="197-197"];
m28_86 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_an_error()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="200-200"];
m28_87 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_an_error()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMinConstraintAsValue(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="203-207"];
m28_88 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_an_error()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="210-210"];
m28_89 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_an_error()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_an_error()", span="197-197"];
m28_95 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="217-217"];
m28_96 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''s'', ''string-seq'')) }", span="220-220"];
m28_97 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMaxConstraint(),\r\n                new[] { ''--string-seq=one'', ''two'', ''three'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="223-227"];
m28_98 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="230-230"];
m28_99 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="217-217"];
m28_140 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", span="324-324"];
m28_142 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndSeparator(),\r\n                new[] { ''--long-seq'', ''1;1234;59678'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="334-338"];
m28_141 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", file="InstanceBuilderTests.cs", label="var expectedResult = new FakeOptionsWithSequenceAndSeparator\r\n                {\r\n                    LongSequence = new[] { 1L, 1234L, 59678L },\r\n                    StringSequence = new string[] { }\r\n                }", span="327-331"];
m28_143 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="341-341"];
m28_144 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", span="324-324"];
m28_249 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="560-560"];
m28_251 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-zx'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="566-570"];
m28_252 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="573-573"];
m28_250 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="563-563"];
m28_253 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="560-560"];
m28_10 [cluster="CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", span="90-90"];
m28_75 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="178-178"];
m28_77 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMinConstraint(),\r\n                new[] { ''-s'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="184-188"];
m28_78 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="191-191"];
m28_76 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new MissingValueOptionError(new NameInfo(''s'', ''string-seq'')) }", span="181-181"];
m28_79 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="178-178"];
m28_122 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="277-277"];
m28_124 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                new[] { ''10'', ''a'', ''b'', ''c'', ''20'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="289-293"];
m28_123 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = string.Empty,\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''a'', ''b'', ''c'' },\r\n                    IntValue = 20\r\n                }", span="280-286"];
m28_125 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="296-296"];
m28_126 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="277-277"];
m28_117 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", span="14-14"];
m28_32 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", span="7-7"];
m28_194 [cluster="CommandLine.Tests.Fakes.FakeOptionWithRequiredAndSet.FakeOptionWithRequiredAndSet()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequiredAndSet.FakeOptionWithRequiredAndSet()", span="2-2"];
m28_103 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="236-236"];
m28_104 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="239-239"];
m28_105 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", color=green, community=1, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue(),\r\n                new[] { ''one'', ''two'', ''three'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="242-246"];
m28_106 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: Assert.True(expectedResult.SequenceEqual(result.Errors))", span="249-249"];
m28_107 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="236-236"];
m28_237 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="272-272"];
m28_145 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", span="7-7"];
m28_189 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", span="425-425"];
m28_191 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] { ''--ftpurl'', ''str1''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="432-436"];
m28_190 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="InstanceBuilderTests.cs", label="var expectedResult = new FakeOptionWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = null\r\n            }", span="427-430"];
m28_192 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="439-439"];
m28_193 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", span="425-425"];
m28_170 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="33-33"];
m28_174 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m28_118 [cluster="Unk.ShouldBeEquivalentTo", file="InstanceBuilderTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m28_188 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", span="4-4"];
m28_149 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", span="347-347"];
m28_151 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndSeparator(),\r\n                new[] { ''-s'', ''eml1@xyz.com,test@unit.org,xyz@srv.it'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="357-361"];
m28_150 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="InstanceBuilderTests.cs", label="var expectedResult = new FakeOptionsWithSequenceAndSeparator\r\n            {\r\n                LongSequence = new long[] {},\r\n                StringSequence = new[] { ''eml1@xyz.com'', ''test@unit.org'', ''xyz@srv.it'' }\r\n            }", span="350-354"];
m28_152 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="364-364"];
m28_153 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", span="347-347"];
m28_184 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294"];
m28_179 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="402-402"];
m28_181 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSets(),\r\n                new[] { ''--weburl'', ''http://mywebsite.org/'', ''--ftpurl'', ''fpt://ftpsite.org/'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="412-416"];
m28_182 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="419-419"];
m28_180 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[]\r\n                {\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''weburl'')),\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''ftpurl''))\r\n                }", span="405-409"];
m28_183 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="402-402"];
m28_24 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", span="57-57"];
m28_26 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithDouble(),\r\n                new[] { ''0.123'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="63-67"];
m28_25 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs", label="var expectedResult = .123D", span="60-60"];
m28_27 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs", label="Assert.Equal(expectedResult, result.Value.DoubleValue)", span="70-70"];
m28_28 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", span="57-57"];
m28_223 [cluster="CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", span="4-4"];
m28_81 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m28_59 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="138-138"];
m28_60 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMinConstraint(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="143-147"];
m28_61 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="Assert.True(expected.SequenceEqual(result.Value.StringSequence))", span="150-150"];
m28_62 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="138-138"];
m28_50 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", span="7-7"];
m28_15 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", span="38-38"];
m28_17 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-123'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="44-48"];
m28_16 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs", label="var expectedResult = -123", span="41-41"];
m28_18 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs", label="Assert.Equal(expectedResult, result.Value.LongValue)", span="51-51"];
m28_19 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", span="38-38"];
m28_241 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="541-541"];
m28_243 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-z'', ''-x'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="547-551"];
m28_244 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="554-554"];
m28_242 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="544-544"];
m28_245 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="541-541"];
m28_6 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m28_112 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", span="255-255"];
m28_114 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''Green'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="264-268"];
m28_113 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs", label="var expectedResult = new FakeOptionsWithEnum\r\n                {\r\n                    Colors = Colors.Green\r\n                }", span="258-261"];
m28_115 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="271-271"];
m28_116 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", span="255-255"];
m28_127 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6"];
m28_7 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338"];
m28_20 [cluster="Unk.Equal", file="InstanceBuilderTests.cs", label="Entry Unk.Equal", span=""];
m28_51 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", span="114-114"];
m28_53 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-i'', ''10'', ''20'', ''30'', ''40'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="120-124"];
m28_54 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Value.IntSequence))", span="127-127"];
m28_52 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { 10, 20, 30, 40 }", span="117-117"];
m28_55 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", span="114-114"];
m28_131 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", span="302-302"];
m28_133 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceWithoutRange(),\r\n                new[] { ''1'', ''2'', ''3'', ''4'', ''5'', ''6'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="311-315"];
m28_132 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs", label="var expectedResult = new FakeOptionsWithSequenceWithoutRange\r\n                {\r\n                    LongSequence = new[] { 1L, 2L, 3L, 4L, 5L, 6L }\r\n                }", span="305-308"];
m28_134 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="318-318"];
m28_135 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", span="302-302"];
m28_9 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m28_257 [file="InstanceBuilderTests.cs", label=fakeOptions, span=""];
m28_258 [file="InstanceBuilderTests.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m31_16 [cluster="CommandLine.Utils.StringExtensions.IsWhiteSpace(char)", file="Maybe.cs", label="Entry CommandLine.Utils.StringExtensions.IsWhiteSpace(char)", span="60-60"];
m31_17 [cluster="CommandLine.Utils.StringExtensions.IsWhiteSpace(char)", file="Maybe.cs", label=c, span="62-62"];
m31_23 [cluster="CommandLine.Utils.StringExtensions.IsWhiteSpace(char)", file="Maybe.cs", label="return (c > 127 && char.IsWhiteSpace(c));", span="73-73"];
m31_18 [cluster="CommandLine.Utils.StringExtensions.IsWhiteSpace(char)", file="Maybe.cs", label="'\f'", span="65-65"];
m31_19 [cluster="CommandLine.Utils.StringExtensions.IsWhiteSpace(char)", file="Maybe.cs", label="'\v'", span="66-66"];
m31_20 [cluster="CommandLine.Utils.StringExtensions.IsWhiteSpace(char)", file="Maybe.cs", label="' '", span="67-67"];
m31_21 [cluster="CommandLine.Utils.StringExtensions.IsWhiteSpace(char)", file="Maybe.cs", label="'\t'", span="68-68"];
m31_22 [cluster="CommandLine.Utils.StringExtensions.IsWhiteSpace(char)", file="Maybe.cs", label="return true;", span="69-69"];
m31_24 [cluster="CommandLine.Utils.StringExtensions.IsWhiteSpace(char)", file="Maybe.cs", label="Exit CommandLine.Utils.StringExtensions.IsWhiteSpace(char)", span="60-60"];
m31_8 [cluster="decimal.TryParse(string, out decimal)", file="Maybe.cs", label="Entry decimal.TryParse(string, out decimal)", span="0-0"];
m31_3 [cluster="string.String(char, int)", file="Maybe.cs", label="Entry string.String(char, int)", span="0-0"];
m31_25 [cluster="char.IsWhiteSpace(char)", file="Maybe.cs", label="Entry char.IsWhiteSpace(char)", span="0-0"];
m31_9 [cluster="CommandLine.Utils.StringExtensions.FormatInvariant(string, params object[])", file="Maybe.cs", label="Entry CommandLine.Utils.StringExtensions.FormatInvariant(string, params object[])", span="50-50"];
m31_10 [cluster="CommandLine.Utils.StringExtensions.FormatInvariant(string, params object[])", file="Maybe.cs", label="return string.Format(CultureInfo.InvariantCulture, value, arguments);", span="52-52"];
m31_11 [cluster="CommandLine.Utils.StringExtensions.FormatInvariant(string, params object[])", file="Maybe.cs", label="Exit CommandLine.Utils.StringExtensions.FormatInvariant(string, params object[])", span="50-50"];
m31_26 [cluster="CommandLine.Utils.StringExtensions.IsLineTerminator(char)", file="Maybe.cs", label="Entry CommandLine.Utils.StringExtensions.IsLineTerminator(char)", span="77-77"];
m31_27 [cluster="CommandLine.Utils.StringExtensions.IsLineTerminator(char)", file="Maybe.cs", label=c, span="79-79"];
m31_28 [cluster="CommandLine.Utils.StringExtensions.IsLineTerminator(char)", file="Maybe.cs", label="'\xD'", span="81-81"];
m31_33 [cluster="CommandLine.Utils.StringExtensions.IsLineTerminator(char)", file="Maybe.cs", label="return false;", span="88-88"];
m31_29 [cluster="CommandLine.Utils.StringExtensions.IsLineTerminator(char)", file="Maybe.cs", label="'\xA'", span="82-82"];
m31_30 [cluster="CommandLine.Utils.StringExtensions.IsLineTerminator(char)", file="Maybe.cs", label="'\x2028'", span="83-83"];
m31_31 [cluster="CommandLine.Utils.StringExtensions.IsLineTerminator(char)", file="Maybe.cs", label="'\x2029'", span="84-84"];
m31_32 [cluster="CommandLine.Utils.StringExtensions.IsLineTerminator(char)", file="Maybe.cs", label="return true;", span="85-85"];
m31_34 [cluster="CommandLine.Utils.StringExtensions.IsLineTerminator(char)", file="Maybe.cs", label="Exit CommandLine.Utils.StringExtensions.IsLineTerminator(char)", span="77-77"];
m31_4 [cluster="CommandLine.Utils.StringExtensions.IsNumeric(string)", file="Maybe.cs", label="Entry CommandLine.Utils.StringExtensions.IsNumeric(string)", span="44-44"];
m31_5 [cluster="CommandLine.Utils.StringExtensions.IsNumeric(string)", file="Maybe.cs", label="decimal temporary", span="46-46"];
m31_6 [cluster="CommandLine.Utils.StringExtensions.IsNumeric(string)", file="Maybe.cs", label="return decimal.TryParse(value, out temporary);", span="47-47"];
m31_7 [cluster="CommandLine.Utils.StringExtensions.IsNumeric(string)", file="Maybe.cs", label="Exit CommandLine.Utils.StringExtensions.IsNumeric(string)", span="44-44"];
m31_13 [cluster="CommandLine.Utils.StringExtensions.FormatLocal(string, params object[])", file="Maybe.cs", label="Entry CommandLine.Utils.StringExtensions.FormatLocal(string, params object[])", span="55-55"];
m31_14 [cluster="CommandLine.Utils.StringExtensions.FormatLocal(string, params object[])", file="Maybe.cs", label="return string.Format(CultureInfo.CurrentCulture, value, arguments);", span="57-57"];
m31_15 [cluster="CommandLine.Utils.StringExtensions.FormatLocal(string, params object[])", file="Maybe.cs", label="Exit CommandLine.Utils.StringExtensions.FormatLocal(string, params object[])", span="55-55"];
m31_0 [cluster="CommandLine.Utils.StringExtensions.Spaces(int)", file="Maybe.cs", label="Entry CommandLine.Utils.StringExtensions.Spaces(int)", span="39-39"];
m31_1 [cluster="CommandLine.Utils.StringExtensions.Spaces(int)", file="Maybe.cs", label="return new string(' ', value);", span="41-41"];
m31_2 [cluster="CommandLine.Utils.StringExtensions.Spaces(int)", file="Maybe.cs", label="Exit CommandLine.Utils.StringExtensions.Spaces(int)", span="39-39"];
m31_12 [cluster="string.Format(System.IFormatProvider, string, params object[])", file="Maybe.cs", label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0"];
m34_12 [cluster="CommandLine.Internal.OptionExtensions.IsShortOption(string)", file="NameLookup.cs", label="Entry CommandLine.Internal.OptionExtensions.IsShortOption(string)", span="19-19"];
m34_13 [cluster="CommandLine.Internal.OptionExtensions.IsShortOption(string)", file="NameLookup.cs", label="return value[0] == '-';", span="21-21"];
m34_14 [cluster="CommandLine.Internal.OptionExtensions.IsShortOption(string)", file="NameLookup.cs", label="Exit CommandLine.Internal.OptionExtensions.IsShortOption(string)", span="19-19"];
m34_0 [cluster="CommandLine.Internal.OptionExtensions.ToOption(string)", file="NameLookup.cs", label="Entry CommandLine.Internal.OptionExtensions.ToOption(string)", span="4-4"];
m34_1 [cluster="CommandLine.Internal.OptionExtensions.ToOption(string)", file="NameLookup.cs", label="return string.Concat(''--'', value);", span="6-6"];
m34_2 [cluster="CommandLine.Internal.OptionExtensions.ToOption(string)", file="NameLookup.cs", label="Exit CommandLine.Internal.OptionExtensions.ToOption(string)", span="4-4"];
m34_11 [cluster="string.CompareOrdinal(string, string)", file="NameLookup.cs", label="Entry string.CompareOrdinal(string, string)", span="0-0"];
m34_3 [cluster="string.Concat(string, string)", file="NameLookup.cs", label="Entry string.Concat(string, string)", span="0-0"];
m34_4 [cluster="CommandLine.Internal.OptionExtensions.ToOption(char?)", file="NameLookup.cs", label="Entry CommandLine.Internal.OptionExtensions.ToOption(char?)", span="9-9"];
m34_5 [cluster="CommandLine.Internal.OptionExtensions.ToOption(char?)", file="NameLookup.cs", label="return string.Concat(''-'', value);", span="11-11"];
m34_6 [cluster="CommandLine.Internal.OptionExtensions.ToOption(char?)", file="NameLookup.cs", label="Exit CommandLine.Internal.OptionExtensions.ToOption(char?)", span="9-9"];
m34_8 [cluster="CommandLine.Internal.OptionExtensions.IsDash(string)", file="NameLookup.cs", label="Entry CommandLine.Internal.OptionExtensions.IsDash(string)", span="14-14"];
m34_9 [cluster="CommandLine.Internal.OptionExtensions.IsDash(string)", file="NameLookup.cs", label="return string.CompareOrdinal(value, ''-'') == 0;", span="16-16"];
m34_10 [cluster="CommandLine.Internal.OptionExtensions.IsDash(string)", file="NameLookup.cs", label="Exit CommandLine.Internal.OptionExtensions.IsDash(string)", span="14-14"];
m34_7 [cluster="string.Concat(object, object)", file="NameLookup.cs", label="Entry string.Concat(object, object)", span="0-0"];
m34_15 [cluster="CommandLine.Internal.OptionExtensions.IsLongOption(string)", file="NameLookup.cs", label="Entry CommandLine.Internal.OptionExtensions.IsLongOption(string)", span="24-24"];
m34_16 [cluster="CommandLine.Internal.OptionExtensions.IsLongOption(string)", file="NameLookup.cs", label="return value[0] == '-' && value[1] == '-';", span="26-26"];
m34_17 [cluster="CommandLine.Internal.OptionExtensions.IsLongOption(string)", file="NameLookup.cs", label="Exit CommandLine.Internal.OptionExtensions.IsLongOption(string)", span="24-24"];
m35_17 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="Entry CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", span="75-75"];
m35_18 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="var list = ReflectionUtil.RetrievePropertyList<BaseOptionAttribute>(target)", span="77-77"];
m35_21 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="var map = new OptionMap(list.Count, settings)", span="82-82"];
m35_25 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="map.RawOptions = target", span="90-90"];
m35_19 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="list == null", span="78-78"];
m35_22 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label=list, span="83-83"];
m35_20 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="return null;", span="80-80"];
m35_24 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="87-87"];
m35_26 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="return map;", span="91-91"];
m35_23 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="pair.Left != null && pair.Right != null", span="85-85"];
m35_27 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="Exit CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", span="75-75"];
m35_49 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="NameLookupTests.cs", label="Entry CommandLine.Internal.OptionMap.SetDefaults()", span="156-156"];
m35_50 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="NameLookupTests.cs", label="_map.Values", span="158-158"];
m35_51 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="NameLookupTests.cs", label="option.SetDefault(RawOptions)", span="160-160"];
m35_52 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="NameLookupTests.cs", label="Exit CommandLine.Internal.OptionMap.SetDefaults()", span="156-156"];
m35_30 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="Entry CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", span="94-94"];
m35_31 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="var map = new OptionMap(verbs.Count, settings)", span="97-97"];
m35_32 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label=verbs, span="98-98"];
m35_34 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="!optionInfo.HasParameterLessCtor && verb.Left.GetValue(target, null) == null", span="105-105"];
m35_37 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="map.RawOptions = target", span="112-112"];
m35_36 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="map[verb.Right.UniqueName] = optionInfo", span="110-110"];
m35_38 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="return map;", span="113-113"];
m35_33 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="var optionInfo = new OptionInfo(verb.Right, verb.Left)\r\n                {\r\n                    HasParameterLessCtor = verb.Left.PropertyType.GetConstructor(Type.EmptyTypes) != null\r\n\r\n                }", span="100-104"];
m35_35 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="throw new CommandLineParserException(''Type {0} must have a parameterless constructor or'' +\r\n                        '' be already initialized to be used as a verb command.''.FormatInvariant(verb.Left.PropertyType));", span="107-108"];
m35_39 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="Exit CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", span="94-94"];
m35_42 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="NameLookupTests.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="54-54"];
m35_48 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="NameLookupTests.cs", label="Entry CommandLine.Internal.OptionMap.EnforceRequiredRule()", span="164-164"];
m35_54 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="NameLookupTests.cs", label="bool requiredRulesAllMet = true", span="166-166"];
m35_55 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="NameLookupTests.cs", label="_map.Values", span="167-167"];
m35_59 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="NameLookupTests.cs", label="return requiredRulesAllMet;", span="175-175"];
m35_56 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="NameLookupTests.cs", label="option.Required && !option.IsDefined", span="169-169"];
m35_57 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="NameLookupTests.cs", label="SetParserStateIfNeeded(RawOptions, option, true, null)", span="171-171"];
m35_58 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="NameLookupTests.cs", label="requiredRulesAllMet = false", span="172-172"];
m35_60 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="NameLookupTests.cs", label="Exit CommandLine.Internal.OptionMap.EnforceRequiredRule()", span="164-164"];
m35_28 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="NameLookupTests.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38"];
m35_8 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="Entry CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="58-58"];
m35_9 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="_settings = settings", span="63-63"];
m35_11 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="_names = new Dictionary<string, string>(capacity, comparer)", span="67-67"];
m35_12 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="_map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="68-68"];
m35_14 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="_mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="71-71"];
m35_10 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="IEqualityComparer<string> comparer =\r\n                _settings.CaseSensitive ? StringComparer.Ordinal : StringComparer.OrdinalIgnoreCase", span="65-66"];
m35_13 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="_settings.MutuallyExclusive", span="69-69"];
m35_15 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="NameLookupTests.cs", label="Exit CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="58-58"];
m35_98 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="NameLookupTests.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m35_79 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="NameLookupTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m35_2 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="NameLookupTests.cs", label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", span="43-43"];
m35_3 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="NameLookupTests.cs", label="BadOption = option", span="45-45"];
m35_4 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="NameLookupTests.cs", label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", span="43-43"];
m35_73 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="NameLookupTests.cs", label="Entry CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", span="202-202"];
m35_74 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="NameLookupTests.cs", label="var setName = option.MutuallyExclusiveSet", span="204-204"];
m35_76 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="NameLookupTests.cs", label="_mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="207-207"];
m35_75 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="NameLookupTests.cs", label="!_mutuallyExclusiveSetMap.ContainsKey(setName)", span="205-205"];
m35_77 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="NameLookupTests.cs", label="_mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="209-209"];
m35_78 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="NameLookupTests.cs", label="Exit CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", span="202-202"];
m35_61 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="NameLookupTests.cs", label="Entry CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", span="212-212"];
m35_81 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="NameLookupTests.cs", label="var list = ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(options)", span="214-214"];
m35_85 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="NameLookupTests.cs", label="property.GetValue(options, null) == null", span="221-221"];
m35_86 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="NameLookupTests.cs", label="property.SetValue(options, new CommandLine.ParserState(), null)", span="223-223"];
m35_87 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="NameLookupTests.cs", label="var parserState = (IParserState)property.GetValue(options, null)", span="225-225"];
m35_90 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="NameLookupTests.cs", label="var error = new ParsingError\r\n                {\r\n                    BadOption =\r\n                        {\r\n                            ShortName = option.ShortName,\r\n                            LongName = option.LongName\r\n                        }\r\n                }", span="230-237"];
m35_91 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="NameLookupTests.cs", label="required != null", span="238-238"];
m35_92 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="NameLookupTests.cs", label="error.ViolatesRequired = required.Value", span="238-238"];
m35_93 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="NameLookupTests.cs", label="mutualExclusiveness != null", span="239-239"];
m35_94 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="NameLookupTests.cs", label="error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="239-239"];
m35_82 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="NameLookupTests.cs", label="list.Count == 0", span="215-215"];
m35_84 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="NameLookupTests.cs", label="var property = list[0].Left", span="219-219"];
m35_83 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="NameLookupTests.cs", label="return;", span="217-217"];
m35_88 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="NameLookupTests.cs", label="parserState == null", span="226-226"];
m35_95 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="NameLookupTests.cs", label="parserState.Errors.Add(error)", span="240-240"];
m35_89 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="NameLookupTests.cs", label="return;", span="228-228"];
m35_96 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="NameLookupTests.cs", label="Exit CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", span="212-212"];
m35_29 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="NameLookupTests.cs", label="Entry CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", span="45-45"];
m35_44 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="NameLookupTests.cs", label="Entry CommandLine.Internal.OptionMap.EnforceRules()", span="151-151"];
m35_45 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="NameLookupTests.cs", label="return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="153-153"];
m35_46 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="NameLookupTests.cs", label="Exit CommandLine.Internal.OptionMap.EnforceRules()", span="151-151"];
m35_100 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="NameLookupTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m35_0 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", file="NameLookupTests.cs", label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", span="41-41"];
m35_1 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", file="NameLookupTests.cs", label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", span="41-41"];
m35_40 [cluster="System.Type.GetConstructor(System.Type[])", file="NameLookupTests.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m35_47 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="NameLookupTests.cs", label="Entry CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", span="178-178"];
m35_62 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="NameLookupTests.cs", label="!_settings.MutuallyExclusive", span="180-180"];
m35_63 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="NameLookupTests.cs", label="return true;", span="182-182"];
m35_64 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="NameLookupTests.cs", label="_map.Values", span="184-184"];
m35_65 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="NameLookupTests.cs", label="option.IsDefined && option.MutuallyExclusiveSet != null", span="186-186"];
m35_67 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="NameLookupTests.cs", label="_mutuallyExclusiveSetMap.Values", span="191-191"];
m35_66 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="NameLookupTests.cs", label="BuildMutuallyExclusiveMap(option)", span="188-188"];
m35_68 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="NameLookupTests.cs", label="info.Occurrence > 1", span="193-193"];
m35_71 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="NameLookupTests.cs", label="return true;", span="199-199"];
m35_69 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="NameLookupTests.cs", label="SetParserStateIfNeeded(RawOptions, info.BadOption, null, true)", span="195-195"];
m35_70 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="NameLookupTests.cs", label="return false;", span="196-196"];
m35_72 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="NameLookupTests.cs", label="Exit CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", span="178-178"];
m35_53 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="NameLookupTests.cs", label="Entry CommandLine.Internal.OptionInfo.SetDefault(object)", span="127-127"];
m35_97 [cluster="CommandLine.ParserState.ParserState()", file="NameLookupTests.cs", label="Entry CommandLine.ParserState.ParserState()", span="39-39"];
m35_99 [cluster="CommandLine.ParsingError.ParsingError()", file="NameLookupTests.cs", label="Entry CommandLine.ParsingError.ParsingError()", span="36-36"];
m35_43 [cluster="string.FormatInvariant(params object[])", file="NameLookupTests.cs", label="Entry string.FormatInvariant(params object[])", span="50-50"];
m35_41 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="NameLookupTests.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m35_80 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="NameLookupTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m35_5 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="NameLookupTests.cs", label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="50-50"];
m35_6 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="NameLookupTests.cs", label="++_count", span="50-50"];
m35_7 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="NameLookupTests.cs", label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="50-50"];
m35_16 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", file="NameLookupTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m35_101 [file="NameLookupTests.cs", label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo", span=""];
m35_102 [file="NameLookupTests.cs", label="CommandLine.Internal.OptionMap", span=""];
m36_0 [cluster="CommandLine.NullInstance.NullInstance()", file="NullInstance.cs", label="Entry CommandLine.NullInstance.NullInstance()", span="9-9"];
m36_1 [cluster="CommandLine.NullInstance.NullInstance()", file="NullInstance.cs", label="Exit CommandLine.NullInstance.NullInstance()", span="9-9"];
m37_0 [cluster="CSharpx.Either<T1, T2>.Either(CSharpx.Either2Type)", file="OptionAttribute.cs", label="Entry CSharpx.Either<T1, T2>.Either(CSharpx.Either2Type)", span="24-24"];
m37_1 [cluster="CSharpx.Either<T1, T2>.Either(CSharpx.Either2Type)", file="OptionAttribute.cs", label="this.tag = tag", span="26-26"];
m37_2 [cluster="CSharpx.Either<T1, T2>.Either(CSharpx.Either2Type)", file="OptionAttribute.cs", label="Exit CSharpx.Either<T1, T2>.Either(CSharpx.Either2Type)", span="24-24"];
m37_28 [cluster="CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", file="OptionAttribute.cs", label="Entry CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", span="848-848"];
m37_29 [cluster="CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", file="OptionAttribute.cs", label="return new Either1Of2<T2, Exception>(func(value));", span="852-852"];
m37_30 [cluster="CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", file="OptionAttribute.cs", label=Exception, span="854-854"];
m37_31 [cluster="CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", file="OptionAttribute.cs", label="return new Either2Of2<T2, Exception>(ex);", span="856-856"];
m37_32 [cluster="CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", file="OptionAttribute.cs", label="Exit CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", span="848-848"];
m37_84 [cluster="CSharpx.EitherExtensions.Match<T1, T2>(CSharpx.Either<T1, T2>, System.Action<T1>, System.Action<T2>)", file="OptionAttribute.cs", label="Entry CSharpx.EitherExtensions.Match<T1, T2>(CSharpx.Either<T1, T2>, System.Action<T1>, System.Action<T2>)", span="966-966"];
m37_85 [cluster="CSharpx.EitherExtensions.Match<T1, T2>(CSharpx.Either<T1, T2>, System.Action<T1>, System.Action<T2>)", file="OptionAttribute.cs", label="either.Tag == Either2Type.Either1Of2", span="968-968"];
m37_86 [cluster="CSharpx.EitherExtensions.Match<T1, T2>(CSharpx.Either<T1, T2>, System.Action<T1>, System.Action<T2>)", file="OptionAttribute.cs", label="ifFirst(((Either1Of2<T1, T2>)either).Value)", span="970-970"];
m37_88 [cluster="CSharpx.EitherExtensions.Match<T1, T2>(CSharpx.Either<T1, T2>, System.Action<T1>, System.Action<T2>)", file="OptionAttribute.cs", label="ifSecond(((Either2Of2<T1, T2>)either).Value)", span="973-973"];
m37_87 [cluster="CSharpx.EitherExtensions.Match<T1, T2>(CSharpx.Either<T1, T2>, System.Action<T1>, System.Action<T2>)", file="OptionAttribute.cs", label="return;", span="971-971"];
m37_89 [cluster="CSharpx.EitherExtensions.Match<T1, T2>(CSharpx.Either<T1, T2>, System.Action<T1>, System.Action<T2>)", file="OptionAttribute.cs", label="Exit CSharpx.EitherExtensions.Match<T1, T2>(CSharpx.Either<T1, T2>, System.Action<T1>, System.Action<T2>)", span="966-966"];
m37_51 [cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="Entry CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", span="892-892"];
m37_52 [cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="either.Tag == Either2Type.Either1Of2", span="894-894"];
m37_53 [cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="var x = (Either1Of2<T1, T3>)either", span="896-896"];
m37_54 [cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="return new Either1Of2<T2, T3>(func(x.Value));", span="897-897"];
m37_55 [cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="var y = (Either2Of2<T1, T3>)either", span="899-899"];
m37_56 [cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="return new Either2Of2<T2, T3>(y.Value);", span="900-900"];
m37_57 [cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="Exit CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", span="892-892"];
m37_90 [cluster="System.Action<T>.Invoke(T)", file="OptionAttribute.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m37_33 [cluster="System.Func<T, TResult>.Invoke(T)", file="OptionAttribute.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m37_65 [cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="Entry CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", span="922-922"];
m37_66 [cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="either.Tag == Either2Type.Either1Of2", span="924-924"];
m37_67 [cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="var x = (Either1Of2<T1, T3>)either", span="926-926"];
m37_68 [cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="return new Either1Of2<T2, T4>(func1(x.Value));", span="927-927"];
m37_69 [cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="var y = (Either2Of2<T1, T3>)either", span="929-929"];
m37_70 [cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="return new Either2Of2<T2, T4>(func2(y.Value));", span="930-930"];
m37_71 [cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="Exit CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", span="922-922"];
m37_3 [cluster="CSharpx.Either1Of2<T1, T2>.Either1Of2(T1)", file="OptionAttribute.cs", label="Entry CSharpx.Either1Of2<T1, T2>.Either1Of2(T1)", span="42-42"];
m37_4 [cluster="CSharpx.Either1Of2<T1, T2>.Either1Of2(T1)", file="OptionAttribute.cs", label="this.value = value", span="45-45"];
m37_5 [cluster="CSharpx.Either1Of2<T1, T2>.Either1Of2(T1)", file="OptionAttribute.cs", label="Exit CSharpx.Either1Of2<T1, T2>.Either1Of2(T1)", span="42-42"];
m37_72 [cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="Entry CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", span="938-938"];
m37_73 [cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="either.Tag == Either2Type.Either1Of2", span="940-940"];
m37_74 [cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="var x = (Either1Of2<T1, T3>)either", span="942-942"];
m37_75 [cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="return func1(x.Value);", span="943-943"];
m37_76 [cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="var y = (Either2Of2<T1, T3>)either", span="945-945"];
m37_77 [cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="return func2(y.Value);", span="946-946"];
m37_78 [cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="Exit CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", span="938-938"];
m37_37 [cluster="lambda expression", file="OptionAttribute.cs", label="Entry lambda expression", span="866-866"];
m37_19 [cluster="lambda expression", file="OptionAttribute.cs", label="new Either1Of2<T1, T2>(value)", span="830-830"];
m37_18 [cluster="lambda expression", file="OptionAttribute.cs", label="Entry lambda expression", span="830-830"];
m37_20 [cluster="lambda expression", file="OptionAttribute.cs", label="Exit lambda expression", span="830-830"];
m37_38 [cluster="lambda expression", file="OptionAttribute.cs", label="(T1)obj", span="866-866"];
m37_39 [cluster="lambda expression", file="OptionAttribute.cs", label="Exit lambda expression", span="866-866"];
m37_26 [cluster="System.ArgumentException.ArgumentException(string, string)", file="OptionAttribute.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m37_6 [cluster="CSharpx.Either2Of2<T1, T2>.Either2Of2(T2)", file="OptionAttribute.cs", label="Entry CSharpx.Either2Of2<T1, T2>.Either2Of2(T2)", span="61-61"];
m37_7 [cluster="CSharpx.Either2Of2<T1, T2>.Either2Of2(T2)", file="OptionAttribute.cs", label="this.value = value", span="64-64"];
m37_8 [cluster="CSharpx.Either2Of2<T1, T2>.Either2Of2(T2)", file="OptionAttribute.cs", label="Exit CSharpx.Either2Of2<T1, T2>.Either2Of2(T2)", span="61-61"];
m37_40 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", file="OptionAttribute.cs", label="Entry CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", span="872-872"];
m37_41 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", file="OptionAttribute.cs", label="func.Tag == Either2Type.Either1Of2 && value.Tag == Either2Type.Either1Of2", span="874-874"];
m37_42 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", file="OptionAttribute.cs", label="var f = (Either1Of2<Func<T1, T3>, T2>)func", span="876-876"];
m37_43 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", file="OptionAttribute.cs", label="var x = (Either1Of2<T1, T2>)value", span="877-877"];
m37_45 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", file="OptionAttribute.cs", label="func.Tag == Either2Type.Either2Of2", span="880-880"];
m37_46 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", file="OptionAttribute.cs", label="var e = (Either2Of2<Func<T1, T3>, T2>)func", span="882-882"];
m37_48 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", file="OptionAttribute.cs", label="var g = (Either2Of2<T1, T2>)value", span="885-885"];
m37_44 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", file="OptionAttribute.cs", label="return new Either1Of2<T3, T2>(f.Value(x.Value));", span="878-878"];
m37_47 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", file="OptionAttribute.cs", label="return new Either2Of2<T3, T2>(e.Value);", span="883-883"];
m37_49 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", file="OptionAttribute.cs", label="return new Either2Of2<T3, T2>(g.Value);", span="886-886"];
m37_50 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", file="OptionAttribute.cs", label="Exit CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", span="872-872"];
m37_21 [cluster="CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", file="OptionAttribute.cs", label="Entry CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", span="836-836"];
m37_22 [cluster="CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", file="OptionAttribute.cs", label="either.Tag == Either2Type.Either1Of2", span="838-838"];
m37_23 [cluster="CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", file="OptionAttribute.cs", label="return ((Either1Of2<T1, T2>)either).Value;", span="840-840"];
m37_24 [cluster="CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", file="OptionAttribute.cs", label="throw new ArgumentException(''either'', string.Format(''The either value was Either2Of2 {0}'', either));", span="842-842"];
m37_25 [cluster="CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", file="OptionAttribute.cs", label="Exit CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", span="836-836"];
m37_15 [cluster="CSharpx.Either.ReturnM<T1, T2>()", file="OptionAttribute.cs", label="Entry CSharpx.Either.ReturnM<T1, T2>()", span="828-828"];
m37_16 [cluster="CSharpx.Either.ReturnM<T1, T2>()", file="OptionAttribute.cs", label="return value => new Either1Of2<T1, T2>(value);", span="830-830"];
m37_17 [cluster="CSharpx.Either.ReturnM<T1, T2>()", file="OptionAttribute.cs", label="Exit CSharpx.Either.ReturnM<T1, T2>()", span="828-828"];
m37_9 [cluster="CSharpx.Either.New1Of2<T1, T2>(T1)", file="OptionAttribute.cs", label="Entry CSharpx.Either.New1Of2<T1, T2>(T1)", span="679-679"];
m37_10 [cluster="CSharpx.Either.New1Of2<T1, T2>(T1)", file="OptionAttribute.cs", label="return new Either1Of2<T1, T2>(value);", span="681-681"];
m37_11 [cluster="CSharpx.Either.New1Of2<T1, T2>(T1)", file="OptionAttribute.cs", label="Exit CSharpx.Either.New1Of2<T1, T2>(T1)", span="679-679"];
m37_79 [cluster="CSharpx.Either.OfMaybe<T1, T2>(CSharpx.Maybe<T1>, T2)", file="OptionAttribute.cs", label="Entry CSharpx.Either.OfMaybe<T1, T2>(CSharpx.Maybe<T1>, T2)", span="950-950"];
m37_80 [cluster="CSharpx.Either.OfMaybe<T1, T2>(CSharpx.Maybe<T1>, T2)", file="OptionAttribute.cs", label="maybe.Tag == MaybeType.Just", span="952-952"];
m37_81 [cluster="CSharpx.Either.OfMaybe<T1, T2>(CSharpx.Maybe<T1>, T2)", file="OptionAttribute.cs", label="return new Either1Of2<T1, T2>(((Just<T1>)maybe).Value);", span="954-954"];
m37_82 [cluster="CSharpx.Either.OfMaybe<T1, T2>(CSharpx.Maybe<T1>, T2)", file="OptionAttribute.cs", label="return new Either2Of2<T1, T2>(second);", span="956-956"];
m37_83 [cluster="CSharpx.Either.OfMaybe<T1, T2>(CSharpx.Maybe<T1>, T2)", file="OptionAttribute.cs", label="Exit CSharpx.Either.OfMaybe<T1, T2>(CSharpx.Maybe<T1>, T2)", span="950-950"];
m37_27 [cluster="string.Format(string, object)", file="OptionAttribute.cs", label="Entry string.Format(string, object)", span="0-0"];
m37_12 [cluster="CSharpx.Either.New2Of2<T1, T2>(T2)", file="OptionAttribute.cs", label="Entry CSharpx.Either.New2Of2<T1, T2>(T2)", span="684-684"];
m37_13 [cluster="CSharpx.Either.New2Of2<T1, T2>(T2)", file="OptionAttribute.cs", label="return new Either2Of2<T1, T2>(value);", span="686-686"];
m37_14 [cluster="CSharpx.Either.New2Of2<T1, T2>(T2)", file="OptionAttribute.cs", label="Exit CSharpx.Either.New2Of2<T1, T2>(T2)", span="684-684"];
m37_58 [cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="Entry CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", span="906-906"];
m37_59 [cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="either.Tag == Either2Type.Either1Of2", span="908-908"];
m37_60 [cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="var x = (Either1Of2<T1, T3>)either", span="910-910"];
m37_61 [cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="return func(x.Value);", span="911-911"];
m37_62 [cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="var y = (Either2Of2<T1, T3>)either", span="913-913"];
m37_63 [cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="return new Either2Of2<T2, T3>(y.Value);", span="914-914"];
m37_64 [cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", file="OptionAttribute.cs", label="Exit CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", span="906-906"];
m37_34 [cluster="CSharpx.Either.Cast<T1>(object)", file="OptionAttribute.cs", label="Entry CSharpx.Either.Cast<T1>(object)", span="864-864"];
m37_35 [cluster="CSharpx.Either.Cast<T1>(object)", file="OptionAttribute.cs", label="return Protect(v => (T1)obj, obj);", span="866-866"];
m37_36 [cluster="CSharpx.Either.Cast<T1>(object)", file="OptionAttribute.cs", label="Exit CSharpx.Either.Cast<T1>(object)", span="864-864"];
m37_91 [file="OptionAttribute.cs", label="CSharpx.Either<T1, T2>", span=""];
m37_92 [file="OptionAttribute.cs", label="CSharpx.Either1Of2<T1, T2>", span=""];
m37_93 [file="OptionAttribute.cs", label="CSharpx.Either2Of2<T1, T2>", span=""];
m37_94 [file="OptionAttribute.cs", label=object, span=""];
m38_0 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionMapper.cs", label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m38_1 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionMapper.cs", label="return from t in tokens\r\n                   where typeLookup(t.Text).MapMaybe(info => t.IsName() && info.TargetType == TargetType.Switch, false)\r\n                   select t;", span="15-17"];
m38_2 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionMapper.cs", label="Exit CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m38_5 [cluster="lambda expression", file="OptionMapper.cs", label="Entry lambda expression", span="16-16"];
m38_6 [cluster="lambda expression", file="OptionMapper.cs", label="t.IsName() && info.TargetType == TargetType.Switch", span="16-16"];
m38_7 [cluster="lambda expression", file="OptionMapper.cs", label="Exit lambda expression", span="16-16"];
m38_4 [cluster="Unk.MapMaybe", file="OptionMapper.cs", label="Entry Unk.MapMaybe", span=""];
m38_8 [cluster="CommandLine.Core.Token.IsName()", file="OptionMapper.cs", label="Entry CommandLine.Core.Token.IsName()", span="128-128"];
m38_3 [cluster="System.Func<T, TResult>.Invoke(T)", file="OptionMapper.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m38_9 [file="OptionMapper.cs", label=t, span=""];
m39_8 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="OptionMapperTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m39_12 [cluster="Unk.Create", file="OptionMapperTests.cs", label="Entry Unk.Create", span=""];
m39_13 [cluster="Unk.Where", file="OptionMapperTests.cs", label="Entry Unk.Where", span=""];
m39_6 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="OptionMapperTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m39_11 [cluster="Unk.Single", file="OptionMapperTests.cs", label="Entry Unk.Single", span=""];
m39_15 [cluster="Unk.NotNull", file="OptionMapperTests.cs", label="Entry Unk.NotNull", span=""];
m39_27 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12"];
m39_0 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Entry CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="16-16"];
m39_1 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var tokenPartitions = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''x'', new [] { ''true'' })\r\n                }", span="19-22"];
m39_2 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var specProps = new[]\r\n                {\r\n                    SpecificationProperty.Create(\r\n                        new OptionSpecification(''x'', string.Empty, false, string.Empty, -1, -1, '\0', Maybe.Nothing<object>(), typeof(bool), string.Empty, string.Empty, new List<string>()), \r\n                        typeof(FakeOptions).GetProperties().Single(p => p.Name.Equals(''BoolValue'', StringComparison.Ordinal)),\r\n                        Maybe.Nothing<object>())\r\n                }", span="23-29"];
m39_3 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var result = OptionMapper.MapValues(\r\n                specProps.Where(pt => pt.Specification.IsOption()),\r\n                tokenPartitions,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture),\r\n                StringComparer.InvariantCulture)", span="32-36"];
m39_4 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Assert.NotNull(result.Value.Single(\r\n                a => a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value == true))", span="39-42"];
m39_5 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Exit CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="16-16"];
m39_28 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="40-42"];
m39_16 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="27-27"];
m39_20 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="33-33"];
m39_24 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="35-35"];
m39_17 [cluster="lambda expression", file="OptionMapperTests.cs", label="p.Name.Equals(''BoolValue'', StringComparison.Ordinal)", span="27-27"];
m39_18 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="27-27"];
m39_21 [cluster="lambda expression", file="OptionMapperTests.cs", label="pt.Specification.IsOption()", span="33-33"];
m39_22 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="33-33"];
m39_25 [cluster="lambda expression", file="OptionMapperTests.cs", label="TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture)", span="35-35"];
m39_26 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="35-35"];
m39_29 [cluster="lambda expression", file="OptionMapperTests.cs", label="a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value == true", span="40-42"];
m39_30 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="40-42"];
m39_31 [cluster="string.Equals(string)", file="OptionMapperTests.cs", label="Entry string.Equals(string)", span="0-0"];
m39_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17"];
m39_19 [cluster="string.Equals(string, System.StringComparison)", file="OptionMapperTests.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m39_23 [cluster="CommandLine.Core.Specification.IsOption()", file="OptionMapperTests.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
m39_14 [cluster="Unk.MapValues", file="OptionMapperTests.cs", label="Entry Unk.MapValues", span=""];
m39_10 [cluster="System.Type.GetProperties()", file="OptionMapperTests.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m39_9 [cluster="System.Collections.Generic.List<T>.List()", file="OptionMapperTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m40_9 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="OptionSpecification.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m40_20 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="OptionSpecification.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="32-32"];
m40_21 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="OptionSpecification.cs", label="return type.FullName.StartsWith(\r\n                ''Microsoft.FSharp.Core.FSharpOption`1'', StringComparison.Ordinal);", span="34-35"];
m40_22 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="OptionSpecification.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="32-32"];
m40_1 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="OptionSpecification.cs", label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="12-12"];
m40_0 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="OptionSpecification.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="9-9"];
m40_2 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="OptionSpecification.cs", label="var attributes = assembly.GetCustomAttributes(typeof(TAttribute), false)", span="13-13"];
m40_3 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="OptionSpecification.cs", label="return attributes.Length > 0\r\n                ? Maybe.Just((TAttribute)attributes[0])\r\n                : Maybe.Nothing<TAttribute>();", span="15-17"];
m40_4 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="OptionSpecification.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="9-9"];
m40_8 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="OptionSpecification.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
m40_7 [cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="OptionSpecification.cs", label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0"];
m40_6 [cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="OptionSpecification.cs", label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0"];
m40_5 [cluster="System.Reflection.Assembly.GetEntryAssembly()", file="OptionSpecification.cs", label="Entry System.Reflection.Assembly.GetEntryAssembly()", span="0-0"];
m40_14 [cluster="System.Reflection.Assembly.GetName()", file="OptionSpecification.cs", label="Entry System.Reflection.Assembly.GetName()", span="0-0"];
m40_16 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="OptionSpecification.cs", label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="28-28"];
m40_15 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="OptionSpecification.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", span="26-26"];
m40_17 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="OptionSpecification.cs", label="return assembly.GetName().Version.ToStringInvariant();", span="29-29"];
m40_18 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="OptionSpecification.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", span="26-26"];
m40_19 [cluster="T.ToStringInvariant<T>()", file="OptionSpecification.cs", label="Entry T.ToStringInvariant<T>()", span="14-14"];
m40_23 [cluster="string.StartsWith(string, System.StringComparison)", file="OptionSpecification.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m40_11 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="OptionSpecification.cs", label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="22-22"];
m40_10 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="OptionSpecification.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="20-20"];
m40_12 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="OptionSpecification.cs", label="return assembly.GetName().Name;", span="23-23"];
m40_13 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="OptionSpecification.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="20-20"];
m41_5 [cluster="CommandLine.Helpers.Assumes.NotNullOrEmpty(string, string)", file="Parser.cs", label="Entry CommandLine.Helpers.Assumes.NotNullOrEmpty(string, string)", span="49-49"];
m41_14 [cluster="string.Substring(int, int)", file="Parser.cs", label="Entry string.Substring(int, int)", span="0-0"];
m41_24 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.MovePrevious()", file="Parser.cs", label="Entry CommandLine.Infrastructure.OneCharStringEnumerator.MovePrevious()", span="117-117"];
m41_25 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.MovePrevious()", file="Parser.cs", label="throw new NotSupportedException();", span="119-119"];
m41_26 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.MovePrevious()", file="Parser.cs", label="Exit CommandLine.Infrastructure.OneCharStringEnumerator.MovePrevious()", span="117-117"];
m41_23 [cluster="string.Substring(int)", file="Parser.cs", label="Entry string.Substring(int)", span="0-0"];
m41_15 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.GetRemainingFromNext()", file="Parser.cs", label="Entry CommandLine.Infrastructure.OneCharStringEnumerator.GetRemainingFromNext()", span="102-102"];
m41_16 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.GetRemainingFromNext()", file="Parser.cs", label="_index == -1", span="104-104"];
m41_17 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.GetRemainingFromNext()", file="Parser.cs", label="throw new InvalidOperationException();", span="106-106"];
m41_18 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.GetRemainingFromNext()", file="Parser.cs", label="_index > _data.Length", span="109-109"];
m41_19 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.GetRemainingFromNext()", file="Parser.cs", label="throw new InvalidOperationException();", span="111-111"];
m41_20 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.GetRemainingFromNext()", file="Parser.cs", label="return _data.Substring(_index + 1);", span="114-114"];
m41_21 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.GetRemainingFromNext()", file="Parser.cs", label="Exit CommandLine.Infrastructure.OneCharStringEnumerator.GetRemainingFromNext()", span="102-102"];
m41_27 [cluster="System.NotSupportedException.NotSupportedException()", file="Parser.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m41_6 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.MoveNext()", file="Parser.cs", label="Entry CommandLine.Infrastructure.OneCharStringEnumerator.MoveNext()", span="89-89"];
m41_7 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.MoveNext()", file="Parser.cs", label="_index < (_data.Length - 1)", span="91-91"];
m41_8 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.MoveNext()", file="Parser.cs", label="_index++", span="93-93"];
m41_11 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.MoveNext()", file="Parser.cs", label="_index = _data.Length", span="98-98"];
m41_9 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.MoveNext()", file="Parser.cs", label="_currentElement = _data.Substring(_index, 1)", span="94-94"];
m41_10 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.MoveNext()", file="Parser.cs", label="return true;", span="95-95"];
m41_12 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.MoveNext()", file="Parser.cs", label="return false;", span="99-99"];
m41_13 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.MoveNext()", file="Parser.cs", label="Exit CommandLine.Infrastructure.OneCharStringEnumerator.MoveNext()", span="89-89"];
m41_0 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="Parser.cs", label="Entry CommandLine.Infrastructure.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="36-36"];
m41_1 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="Parser.cs", label="Assumes.NotNullOrEmpty(value, ''value'')", span="38-38"];
m41_2 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="Parser.cs", label="_data = value", span="39-39"];
m41_3 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="Parser.cs", label="_index = -1", span="40-40"];
m41_4 [cluster="CommandLine.Infrastructure.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="Parser.cs", label="Exit CommandLine.Infrastructure.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="36-36"];
m41_22 [cluster="System.InvalidOperationException.InvalidOperationException()", file="Parser.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m41_28 [file="Parser.cs", label="CommandLine.Infrastructure.OneCharStringEnumerator", span=""];
m42_0 [cluster="CSharpx.Either<T1, T2>.Either(CSharpx.Either2Type)", file="ParserExtensions.cs", label="Entry CSharpx.Either<T1, T2>.Either(CSharpx.Either2Type)", span="24-24"];
m42_1 [cluster="CSharpx.Either<T1, T2>.Either(CSharpx.Either2Type)", file="ParserExtensions.cs", label="this.tag = tag", span="26-26"];
m42_2 [cluster="CSharpx.Either<T1, T2>.Either(CSharpx.Either2Type)", file="ParserExtensions.cs", label="Exit CSharpx.Either<T1, T2>.Either(CSharpx.Either2Type)", span="24-24"];
m42_28 [cluster="CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", file="ParserExtensions.cs", label="Entry CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", span="848-848"];
m42_29 [cluster="CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", file="ParserExtensions.cs", label="return new Either1Of2<T2, Exception>(func(value));", span="852-852"];
m42_30 [cluster="CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", file="ParserExtensions.cs", label=Exception, span="854-854"];
m42_31 [cluster="CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", file="ParserExtensions.cs", label="return new Either2Of2<T2, Exception>(ex);", span="856-856"];
m42_32 [cluster="CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", file="ParserExtensions.cs", label="Exit CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", span="848-848"];
m42_84 [cluster="CSharpx.EitherExtensions.Match<T1, T2>(CSharpx.Either<T1, T2>, System.Action<T1>, System.Action<T2>)", file="ParserExtensions.cs", label="Entry CSharpx.EitherExtensions.Match<T1, T2>(CSharpx.Either<T1, T2>, System.Action<T1>, System.Action<T2>)", span="966-966"];
m42_85 [cluster="CSharpx.EitherExtensions.Match<T1, T2>(CSharpx.Either<T1, T2>, System.Action<T1>, System.Action<T2>)", file="ParserExtensions.cs", label="either.Tag == Either2Type.Either1Of2", span="968-968"];
m42_86 [cluster="CSharpx.EitherExtensions.Match<T1, T2>(CSharpx.Either<T1, T2>, System.Action<T1>, System.Action<T2>)", file="ParserExtensions.cs", label="ifFirst(((Either1Of2<T1, T2>)either).Value)", span="970-970"];
m42_88 [cluster="CSharpx.EitherExtensions.Match<T1, T2>(CSharpx.Either<T1, T2>, System.Action<T1>, System.Action<T2>)", file="ParserExtensions.cs", label="ifSecond(((Either2Of2<T1, T2>)either).Value)", span="973-973"];
m42_87 [cluster="CSharpx.EitherExtensions.Match<T1, T2>(CSharpx.Either<T1, T2>, System.Action<T1>, System.Action<T2>)", file="ParserExtensions.cs", label="return;", span="971-971"];
m42_89 [cluster="CSharpx.EitherExtensions.Match<T1, T2>(CSharpx.Either<T1, T2>, System.Action<T1>, System.Action<T2>)", file="ParserExtensions.cs", label="Exit CSharpx.EitherExtensions.Match<T1, T2>(CSharpx.Either<T1, T2>, System.Action<T1>, System.Action<T2>)", span="966-966"];
m42_51 [cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="Entry CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", span="892-892"];
m42_52 [cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="either.Tag == Either2Type.Either1Of2", span="894-894"];
m42_53 [cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="var x = (Either1Of2<T1, T3>)either", span="896-896"];
m42_54 [cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="return new Either1Of2<T2, T3>(func(x.Value));", span="897-897"];
m42_55 [cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="var y = (Either2Of2<T1, T3>)either", span="899-899"];
m42_56 [cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="return new Either2Of2<T2, T3>(y.Value);", span="900-900"];
m42_57 [cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="Exit CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", span="892-892"];
m42_90 [cluster="System.Action<T>.Invoke(T)", file="ParserExtensions.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m42_33 [cluster="System.Func<T, TResult>.Invoke(T)", file="ParserExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m42_65 [cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="Entry CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", span="922-922"];
m42_66 [cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="either.Tag == Either2Type.Either1Of2", span="924-924"];
m42_67 [cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="var x = (Either1Of2<T1, T3>)either", span="926-926"];
m42_68 [cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="return new Either1Of2<T2, T4>(func1(x.Value));", span="927-927"];
m42_69 [cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="var y = (Either2Of2<T1, T3>)either", span="929-929"];
m42_70 [cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="return new Either2Of2<T2, T4>(func2(y.Value));", span="930-930"];
m42_71 [cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="Exit CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", span="922-922"];
m42_3 [cluster="CSharpx.Either1Of2<T1, T2>.Either1Of2(T1)", file="ParserExtensions.cs", label="Entry CSharpx.Either1Of2<T1, T2>.Either1Of2(T1)", span="42-42"];
m42_4 [cluster="CSharpx.Either1Of2<T1, T2>.Either1Of2(T1)", file="ParserExtensions.cs", label="this.value = value", span="45-45"];
m42_5 [cluster="CSharpx.Either1Of2<T1, T2>.Either1Of2(T1)", file="ParserExtensions.cs", label="Exit CSharpx.Either1Of2<T1, T2>.Either1Of2(T1)", span="42-42"];
m42_72 [cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="Entry CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", span="938-938"];
m42_73 [cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="either.Tag == Either2Type.Either1Of2", span="940-940"];
m42_74 [cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="var x = (Either1Of2<T1, T3>)either", span="942-942"];
m42_75 [cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="return func1(x.Value);", span="943-943"];
m42_76 [cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="var y = (Either2Of2<T1, T3>)either", span="945-945"];
m42_77 [cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="return func2(y.Value);", span="946-946"];
m42_78 [cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="Exit CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", span="938-938"];
m42_37 [cluster="lambda expression", file="ParserExtensions.cs", label="Entry lambda expression", span="866-866"];
m42_19 [cluster="lambda expression", file="ParserExtensions.cs", label="new Either1Of2<T1, T2>(value)", span="830-830"];
m42_18 [cluster="lambda expression", file="ParserExtensions.cs", label="Entry lambda expression", span="830-830"];
m42_20 [cluster="lambda expression", file="ParserExtensions.cs", label="Exit lambda expression", span="830-830"];
m42_38 [cluster="lambda expression", file="ParserExtensions.cs", label="(T1)obj", span="866-866"];
m42_39 [cluster="lambda expression", file="ParserExtensions.cs", label="Exit lambda expression", span="866-866"];
m42_26 [cluster="System.ArgumentException.ArgumentException(string, string)", file="ParserExtensions.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m42_6 [cluster="CSharpx.Either2Of2<T1, T2>.Either2Of2(T2)", file="ParserExtensions.cs", label="Entry CSharpx.Either2Of2<T1, T2>.Either2Of2(T2)", span="61-61"];
m42_7 [cluster="CSharpx.Either2Of2<T1, T2>.Either2Of2(T2)", file="ParserExtensions.cs", label="this.value = value", span="64-64"];
m42_8 [cluster="CSharpx.Either2Of2<T1, T2>.Either2Of2(T2)", file="ParserExtensions.cs", label="Exit CSharpx.Either2Of2<T1, T2>.Either2Of2(T2)", span="61-61"];
m42_40 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", file="ParserExtensions.cs", label="Entry CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", span="872-872"];
m42_41 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", file="ParserExtensions.cs", label="func.Tag == Either2Type.Either1Of2 && value.Tag == Either2Type.Either1Of2", span="874-874"];
m42_42 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", file="ParserExtensions.cs", label="var f = (Either1Of2<Func<T1, T3>, T2>)func", span="876-876"];
m42_43 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", file="ParserExtensions.cs", label="var x = (Either1Of2<T1, T2>)value", span="877-877"];
m42_45 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", file="ParserExtensions.cs", label="func.Tag == Either2Type.Either2Of2", span="880-880"];
m42_46 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", file="ParserExtensions.cs", label="var e = (Either2Of2<Func<T1, T3>, T2>)func", span="882-882"];
m42_48 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", file="ParserExtensions.cs", label="var g = (Either2Of2<T1, T2>)value", span="885-885"];
m42_44 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", file="ParserExtensions.cs", label="return new Either1Of2<T3, T2>(f.Value(x.Value));", span="878-878"];
m42_47 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", file="ParserExtensions.cs", label="return new Either2Of2<T3, T2>(e.Value);", span="883-883"];
m42_49 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", file="ParserExtensions.cs", label="return new Either2Of2<T3, T2>(g.Value);", span="886-886"];
m42_50 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", file="ParserExtensions.cs", label="Exit CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", span="872-872"];
m42_21 [cluster="CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", file="ParserExtensions.cs", label="Entry CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", span="836-836"];
m42_22 [cluster="CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", file="ParserExtensions.cs", label="either.Tag == Either2Type.Either1Of2", span="838-838"];
m42_23 [cluster="CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", file="ParserExtensions.cs", label="return ((Either1Of2<T1, T2>)either).Value;", span="840-840"];
m42_24 [cluster="CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", file="ParserExtensions.cs", label="throw new ArgumentException(''either'', string.Format(''The either value was Either2Of2 {0}'', either));", span="842-842"];
m42_25 [cluster="CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", file="ParserExtensions.cs", label="Exit CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", span="836-836"];
m42_15 [cluster="CSharpx.Either.ReturnM<T1, T2>()", file="ParserExtensions.cs", label="Entry CSharpx.Either.ReturnM<T1, T2>()", span="828-828"];
m42_16 [cluster="CSharpx.Either.ReturnM<T1, T2>()", file="ParserExtensions.cs", label="return value => new Either1Of2<T1, T2>(value);", span="830-830"];
m42_17 [cluster="CSharpx.Either.ReturnM<T1, T2>()", file="ParserExtensions.cs", label="Exit CSharpx.Either.ReturnM<T1, T2>()", span="828-828"];
m42_9 [cluster="CSharpx.Either.New1Of2<T1, T2>(T1)", file="ParserExtensions.cs", label="Entry CSharpx.Either.New1Of2<T1, T2>(T1)", span="679-679"];
m42_10 [cluster="CSharpx.Either.New1Of2<T1, T2>(T1)", file="ParserExtensions.cs", label="return new Either1Of2<T1, T2>(value);", span="681-681"];
m42_11 [cluster="CSharpx.Either.New1Of2<T1, T2>(T1)", file="ParserExtensions.cs", label="Exit CSharpx.Either.New1Of2<T1, T2>(T1)", span="679-679"];
m42_79 [cluster="CSharpx.Either.OfMaybe<T1, T2>(CSharpx.Maybe<T1>, T2)", file="ParserExtensions.cs", label="Entry CSharpx.Either.OfMaybe<T1, T2>(CSharpx.Maybe<T1>, T2)", span="950-950"];
m42_80 [cluster="CSharpx.Either.OfMaybe<T1, T2>(CSharpx.Maybe<T1>, T2)", file="ParserExtensions.cs", label="maybe.Tag == MaybeType.Just", span="952-952"];
m42_81 [cluster="CSharpx.Either.OfMaybe<T1, T2>(CSharpx.Maybe<T1>, T2)", file="ParserExtensions.cs", label="return new Either1Of2<T1, T2>(((Just<T1>)maybe).Value);", span="954-954"];
m42_82 [cluster="CSharpx.Either.OfMaybe<T1, T2>(CSharpx.Maybe<T1>, T2)", file="ParserExtensions.cs", label="return new Either2Of2<T1, T2>(second);", span="956-956"];
m42_83 [cluster="CSharpx.Either.OfMaybe<T1, T2>(CSharpx.Maybe<T1>, T2)", file="ParserExtensions.cs", label="Exit CSharpx.Either.OfMaybe<T1, T2>(CSharpx.Maybe<T1>, T2)", span="950-950"];
m42_27 [cluster="string.Format(string, object)", file="ParserExtensions.cs", label="Entry string.Format(string, object)", span="0-0"];
m42_12 [cluster="CSharpx.Either.New2Of2<T1, T2>(T2)", file="ParserExtensions.cs", label="Entry CSharpx.Either.New2Of2<T1, T2>(T2)", span="684-684"];
m42_13 [cluster="CSharpx.Either.New2Of2<T1, T2>(T2)", file="ParserExtensions.cs", label="return new Either2Of2<T1, T2>(value);", span="686-686"];
m42_14 [cluster="CSharpx.Either.New2Of2<T1, T2>(T2)", file="ParserExtensions.cs", label="Exit CSharpx.Either.New2Of2<T1, T2>(T2)", span="684-684"];
m42_58 [cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="Entry CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", span="906-906"];
m42_59 [cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="either.Tag == Either2Type.Either1Of2", span="908-908"];
m42_60 [cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="var x = (Either1Of2<T1, T3>)either", span="910-910"];
m42_61 [cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="return func(x.Value);", span="911-911"];
m42_62 [cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="var y = (Either2Of2<T1, T3>)either", span="913-913"];
m42_63 [cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="return new Either2Of2<T2, T3>(y.Value);", span="914-914"];
m42_64 [cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", file="ParserExtensions.cs", label="Exit CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", span="906-906"];
m42_34 [cluster="CSharpx.Either.Cast<T1>(object)", file="ParserExtensions.cs", label="Entry CSharpx.Either.Cast<T1>(object)", span="864-864"];
m42_35 [cluster="CSharpx.Either.Cast<T1>(object)", file="ParserExtensions.cs", label="return Protect(v => (T1)obj, obj);", span="866-866"];
m42_36 [cluster="CSharpx.Either.Cast<T1>(object)", file="ParserExtensions.cs", label="Exit CSharpx.Either.Cast<T1>(object)", span="864-864"];
m42_91 [file="ParserExtensions.cs", label="CSharpx.Either<T1, T2>", span=""];
m42_92 [file="ParserExtensions.cs", label="CSharpx.Either1Of2<T1, T2>", span=""];
m42_93 [file="ParserExtensions.cs", label="CSharpx.Either2Of2<T1, T2>", span=""];
m42_94 [file="ParserExtensions.cs", label=object, span=""];
m45_62 [cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="ParserTests.cs", label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="42-42"];
m45_61 [cluster="string.Substring(int, int)", file="ParserTests.cs", label="Entry string.Substring(int, int)", span="0-0"];
m45_63 [cluster="System.Text.StringBuilder.Append(char)", file="ParserTests.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m45_0 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="ParserTests.cs", label="Entry CommandLine.Text.SentenceBuilder.CreateDefault()", span="22-22"];
m45_1 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="ParserTests.cs", label="return new DefaultSentenceBuilder();", span="24-24"];
m45_2 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="ParserTests.cs", label="Exit CommandLine.Text.SentenceBuilder.CreateDefault()", span="22-22"];
m45_47 [cluster="Unk.Select", file="ParserTests.cs", label="Entry Unk.Select", span=""];
m45_49 [cluster="Unk.Join", file="ParserTests.cs", label="Entry Unk.Join", span=""];
m45_58 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="ParserTests.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m45_39 [cluster="string.JoinTo(params string[])", file="ParserTests.cs", label="Entry string.JoinTo(params string[])", span="45-45"];
m45_50 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="147-168"];
m45_4 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="63-63"];
m45_5 [cluster="lambda expression", file="ParserTests.cs", label="''Required.''", span="63-63"];
m45_6 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="63-63"];
m45_7 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="71-71"];
m45_8 [cluster="lambda expression", file="ParserTests.cs", label="''ERROR(S):''", span="71-71"];
m45_9 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="71-71"];
m45_10 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="79-81"];
m45_11 [cluster="lambda expression", file="ParserTests.cs", label="isOption\r\n                        ? ''Display this help screen.''\r\n                        : ''Display more information on a specific command.''", span="79-81"];
m45_12 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="79-81"];
m45_13 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="89-89"];
m45_14 [cluster="lambda expression", file="ParserTests.cs", label="''Display version information.''", span="89-89"];
m45_15 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="89-89"];
m45_16 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="97-132"];
m45_17 [cluster="lambda expression", file="ParserTests.cs", label="error.Tag", span="99-99"];
m45_19 [cluster="lambda expression", file="ParserTests.cs", label="return ''Token '''.JoinTo(((BadFormatTokenError)error).Token, ''' is not recognized.'');", span="102-102"];
m45_21 [cluster="lambda expression", file="ParserTests.cs", label="return ''Option '''.JoinTo(((MissingValueOptionError)error).NameInfo.NameText,\r\n                                        ''' has no value.'');", span="104-105"];
m45_23 [cluster="lambda expression", file="ParserTests.cs", label="return ''Option '''.JoinTo(((UnknownOptionError)error).Token, ''' is unknown.'');", span="107-107"];
m45_25 [cluster="lambda expression", file="ParserTests.cs", label="var errMisssing = ((MissingRequiredOptionError)error)", span="109-109"];
m45_28 [cluster="lambda expression", file="ParserTests.cs", label="var badFormat = ((BadFormatConversionError)error)", span="116-116"];
m45_31 [cluster="lambda expression", file="ParserTests.cs", label="var seqOutRange = ((SequenceOutOfRangeError)error)", span="121-121"];
m45_34 [cluster="lambda expression", file="ParserTests.cs", label="return ''Verb '''.JoinTo(((BadVerbSelectedError)error).Token, ''' is not recognized.'');", span="127-127"];
m45_18 [cluster="lambda expression", file="ParserTests.cs", label="ErrorType.BadFormatTokenError", span="101-101"];
m45_20 [cluster="lambda expression", file="ParserTests.cs", label="ErrorType.MissingValueOptionError", span="103-103"];
m45_22 [cluster="lambda expression", file="ParserTests.cs", label="ErrorType.UnknownOptionError", span="106-106"];
m45_24 [cluster="lambda expression", file="ParserTests.cs", label="ErrorType.MissingRequiredOptionError", span="108-108"];
m45_27 [cluster="lambda expression", file="ParserTests.cs", label="ErrorType.BadFormatConversionError", span="115-115"];
m45_30 [cluster="lambda expression", file="ParserTests.cs", label="ErrorType.SequenceOutOfRangeError", span="120-120"];
m45_33 [cluster="lambda expression", file="ParserTests.cs", label="ErrorType.BadVerbSelectedError", span="126-126"];
m45_35 [cluster="lambda expression", file="ParserTests.cs", label="ErrorType.NoVerbSelectedError", span="128-128"];
m45_26 [cluster="lambda expression", file="ParserTests.cs", label="return errMisssing.NameInfo == NameInfo.EmptyName\r\n                                               ? ''A required value not bound to option name is missing.''\r\n                                               : ''Required option '''.JoinTo(errMisssing.NameInfo.NameText, ''' is missing.'');", span="110-112"];
m45_29 [cluster="lambda expression", file="ParserTests.cs", label="return badFormat.NameInfo == NameInfo.EmptyName\r\n                                               ? ''A value not bound to option name is defined with a bad format.''\r\n                                               : ''Option '''.JoinTo(badFormat.NameInfo.NameText, ''' is defined with a bad format.'');", span="117-119"];
m45_32 [cluster="lambda expression", file="ParserTests.cs", label="return seqOutRange.NameInfo == NameInfo.EmptyName\r\n                                               ? ''A sequence value not bound to option name is defined with few items than required.''\r\n                                               : ''A sequence option '''.JoinTo(seqOutRange.NameInfo.NameText,\r\n                                                    ''' is defined with few items than required.'');", span="122-125"];
m45_36 [cluster="lambda expression", file="ParserTests.cs", label="return ''No verb selected.'';", span="129-129"];
m45_37 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="97-132"];
m45_38 [cluster="lambda expression", file="ParserTests.cs", label="throw new InvalidOperationException();", span="131-131"];
m45_41 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="140-170"];
m45_42 [cluster="lambda expression", file="ParserTests.cs", label="var bySet = from e in errors\r\n                                group e by e.SetName into g\r\n                                select new { SetName = g.Key, Errors = g.ToList() }", span="142-144"];
m45_43 [cluster="lambda expression", file="ParserTests.cs", label="var msgs = bySet.Select(\r\n                            set =>\r\n                            {\r\n                                var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select ''''' + e.NameInfo.NameText + ''', '').ToArray());\r\n                                var namesCount = set.Errors.Count();\r\n\r\n                                var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors\r\n                                        where !e.SetName.Equals(set.SetName)\r\n                                        select ''''' + e.NameInfo.NameText + ''', '').ToArray());\r\n                                return\r\n                                    new StringBuilder(''Option'').AppendWhen(namesCount > 1, ''s'')\r\n                                        .Append('': '')\r\n                                        .Append(names.Substring(0, names.Length - 3))\r\n                                        .AppendIf(namesCount > 1, ''are'', ''is'')\r\n                                        .Append('' not compatible with: '')\r\n                                        .Append(incompat.Substring(0, incompat.Length - 3))\r\n                                        .Append('.')\r\n                                        .ToString();\r\n                            }).ToArray()", span="146-168"];
m45_44 [cluster="lambda expression", file="ParserTests.cs", label="return string.Join(Environment.NewLine, msgs);", span="169-169"];
m45_45 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="140-170"];
m45_51 [cluster="lambda expression", file="ParserTests.cs", label="var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select ''''' + e.NameInfo.NameText + ''', '').ToArray())", span="149-151"];
m45_52 [cluster="lambda expression", file="ParserTests.cs", label="var namesCount = set.Errors.Count()", span="152-152"];
m45_53 [cluster="lambda expression", file="ParserTests.cs", label="var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors\r\n                                        where !e.SetName.Equals(set.SetName)\r\n                                        select ''''' + e.NameInfo.NameText + ''', '').ToArray())", span="154-158"];
m45_54 [cluster="lambda expression", file="ParserTests.cs", label="return\r\n                                    new StringBuilder(''Option'').AppendWhen(namesCount > 1, ''s'')\r\n                                        .Append('': '')\r\n                                        .Append(names.Substring(0, names.Length - 3))\r\n                                        .AppendIf(namesCount > 1, ''are'', ''is'')\r\n                                        .Append('' not compatible with: '')\r\n                                        .Append(incompat.Substring(0, incompat.Length - 3))\r\n                                        .Append('.')\r\n                                        .ToString();", span="159-167"];
m45_55 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="147-168"];
m45_57 [cluster="Unk.Equals", file="ParserTests.cs", label="Entry Unk.Equals", span=""];
m45_48 [cluster="Unk.ToArray", file="ParserTests.cs", label="Entry Unk.ToArray", span=""];
m45_59 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="ParserTests.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m45_56 [cluster="Unk.Count", file="ParserTests.cs", label="Entry Unk.Count", span=""];
m45_46 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ParserTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m45_60 [cluster="System.Text.StringBuilder.Append(string)", file="ParserTests.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m45_64 [cluster="System.Text.StringBuilder.ToString()", file="ParserTests.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m45_3 [cluster="CommandLine.Text.SentenceBuilder.DefaultSentenceBuilder.DefaultSentenceBuilder()", file="ParserTests.cs", label="Entry CommandLine.Text.SentenceBuilder.DefaultSentenceBuilder.DefaultSentenceBuilder()", span="57-57"];
m45_40 [cluster="System.InvalidOperationException.InvalidOperationException()", file="ParserTests.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m46_154 [cluster="CommandLine.Parsing.StringArrayEnumerator.StringArrayEnumerator(string[])", file="ReflectionExtensions.cs", label="Entry CommandLine.Parsing.StringArrayEnumerator.StringArrayEnumerator(string[])", span="38-38"];
m46_13 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="85-85"];
m46_14 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="ReflectionExtensions.cs", label="Assumes.NotNull(configuration, ''configuration'', SR.ArgumentNullException_ParserSettingsDelegateCannotBeNull)", span="87-87"];
m46_16 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="ReflectionExtensions.cs", label="configuration.Invoke(Settings)", span="90-90"];
m46_15 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="ReflectionExtensions.cs", label="_settings = new ParserSettings()", span="89-89"];
m46_17 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="ReflectionExtensions.cs", label="_settings.Consumed = true", span="91-91"];
m46_18 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="ReflectionExtensions.cs", label="Exit CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="85-85"];
m46_64 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", span="227-227"];
m46_65 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ReflectionExtensions.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="229-229"];
m46_66 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ReflectionExtensions.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="230-230"];
m46_67 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ReflectionExtensions.cs", label="Assumes.NotNull(options, ''onVerbCommand'', SR.ArgumentNullException_OnVerbDelegateCannotBeNull)", span="231-231"];
m46_69 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ReflectionExtensions.cs", label="!DoParseArgumentsVerbs(args, options, ref verbInstance)", span="235-235"];
m46_70 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ReflectionExtensions.cs", label="onVerbCommand(args.FirstOrDefault() ?? string.Empty, null)", span="237-237"];
m46_71 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ReflectionExtensions.cs", label="InvokeAutoBuildIfNeeded(options)", span="239-239"];
m46_72 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ReflectionExtensions.cs", label="onFail == null", span="241-241"];
m46_74 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ReflectionExtensions.cs", label="onFail()", span="247-247"];
m46_76 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ReflectionExtensions.cs", label="onVerbCommand(args.FirstOrDefault() ?? string.Empty, verbInstance)", span="253-253"];
m46_68 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ReflectionExtensions.cs", label="object verbInstance = null", span="233-233"];
m46_73 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ReflectionExtensions.cs", label="Environment.Exit(DefaultExitCodeFail)", span="243-243"];
m46_75 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ReflectionExtensions.cs", label="return false;", span="250-250"];
m46_77 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ReflectionExtensions.cs", label="return true;", span="254-254"];
m46_78 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ReflectionExtensions.cs", label="Exit CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", span="227-227"];
m46_125 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="431-431"];
m46_190 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ReflectionExtensions.cs", label="var caseSensitive = _settings.CaseSensitive", span="433-433"];
m46_191 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ReflectionExtensions.cs", label=args, span="434-434"];
m46_192 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ReflectionExtensions.cs", label="helpOption.ShortName != null", span="436-436"];
m46_193 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ReflectionExtensions.cs", label="ArgumentParser.CompareShort(arg, helpOption.ShortName, caseSensitive)", span="438-438"];
m46_195 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ReflectionExtensions.cs", label="string.IsNullOrEmpty(helpOption.LongName)", span="444-444"];
m46_196 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ReflectionExtensions.cs", label="ArgumentParser.CompareLong(arg, helpOption.LongName, caseSensitive)", span="449-449"];
m46_198 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ReflectionExtensions.cs", label="return false;", span="455-455"];
m46_194 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ReflectionExtensions.cs", label="return true;", span="440-440"];
m46_197 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ReflectionExtensions.cs", label="return true;", span="451-451"];
m46_199 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ReflectionExtensions.cs", label="Exit CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="431-431"];
m46_229 [cluster="object.HasVerbHelp()", file="ReflectionExtensions.cs", label="Entry object.HasVerbHelp()", span="44-44"];
m46_28 [cluster="CommandLine.Parser.~Parser()", file="ReflectionExtensions.cs", label="Entry CommandLine.Parser.~Parser()", span="109-109"];
m46_29 [cluster="CommandLine.Parser.~Parser()", file="ReflectionExtensions.cs", label="Dispose(false)", span="111-111"];
m46_30 [cluster="CommandLine.Parser.~Parser()", file="ReflectionExtensions.cs", label="Exit CommandLine.Parser.~Parser()", span="109-109"];
m46_84 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", span="268-268"];
m46_85 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ReflectionExtensions.cs", label="found = false", span="270-270"];
m46_86 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ReflectionExtensions.cs", label="string.IsNullOrEmpty(verb)", span="271-271"];
m46_87 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ReflectionExtensions.cs", label="return target;", span="273-273"];
m46_88 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ReflectionExtensions.cs", label="var pair = ReflectionHelper.RetrieveOptionProperty<VerbOptionAttribute>(target, verb)", span="276-276"];
m46_90 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ReflectionExtensions.cs", label="return found ? pair.Left.GetValue(target, null) : target;", span="278-278"];
m46_89 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ReflectionExtensions.cs", label="found = pair != null", span="277-277"];
m46_91 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ReflectionExtensions.cs", label="Exit CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", span="268-268"];
m46_189 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="ReflectionExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m46_106 [cluster="CommandLine.Infrastructure.ReflectionHelper.RetrievePropertyList<TAttribute>(object)", file="ReflectionExtensions.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.RetrievePropertyList<TAttribute>(object)", span="46-46"];
m46_19 [cluster="System.Action<T>.Invoke(T)", file="ReflectionExtensions.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m46_231 [cluster="CommandLine.Text.HelpText.AutoBuild(object, System.Action<CommandLine.Text.HelpText>, bool)", file="ReflectionExtensions.cs", label="Entry CommandLine.Text.HelpText.AutoBuild(object, System.Action<CommandLine.Text.HelpText>, bool)", span="278-278"];
m46_37 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parser.DoParseArguments(string[], object)", span="310-310"];
m46_113 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ReflectionExtensions.cs", label="var pair = ReflectionHelper.RetrieveMethod<HelpOptionAttribute>(options)", span="312-312"];
m46_116 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ReflectionExtensions.cs", label="ParseHelp(args, pair.Right) || !DoParseArgumentsCore(args, options)", span="318-318"];
m46_118 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ReflectionExtensions.cs", label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="321-321"];
m46_122 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ReflectionExtensions.cs", label="return DoParseArgumentsCore(args, options);", span="329-329"];
m46_114 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ReflectionExtensions.cs", label="var helpWriter = _settings.HelpWriter", span="313-313"];
m46_115 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ReflectionExtensions.cs", label="pair != null && helpWriter != null", span="315-315"];
m46_119 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ReflectionExtensions.cs", label="helpWriter.Write(helpText)", span="322-322"];
m46_117 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ReflectionExtensions.cs", label="string helpText", span="320-320"];
m46_121 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ReflectionExtensions.cs", label="return true;", span="326-326"];
m46_120 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ReflectionExtensions.cs", label="return false;", span="323-323"];
m46_123 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ReflectionExtensions.cs", label="Exit CommandLine.Parser.DoParseArguments(string[], object)", span="310-310"];
m46_4 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="66-66"];
m46_5 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="ReflectionExtensions.cs", label="Assumes.NotNull(settings, ''settings'', SR.ArgumentNullException_ParserSettingsInstanceCannotBeNull)", span="68-68"];
m46_6 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="ReflectionExtensions.cs", label="settings.Consumed", span="70-70"];
m46_8 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="ReflectionExtensions.cs", label="_settings = settings", span="75-75"];
m46_7 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="ReflectionExtensions.cs", label="throw new InvalidOperationException(SR.InvalidOperationException_ParserSettingsInstanceCanBeUsedOnce);", span="72-72"];
m46_9 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="ReflectionExtensions.cs", label="_settings.Consumed = true", span="76-76"];
m46_10 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="ReflectionExtensions.cs", label="Exit CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="66-66"];
m46_62 [cluster="System.Environment.Exit(int)", file="ReflectionExtensions.cs", label="Entry System.Environment.Exit(int)", span="0-0"];
m46_151 [cluster="CommandLine.Parsing.OptionMap.Create(object, CommandLine.ParserSettings)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parsing.OptionMap.Create(object, CommandLine.ParserSettings)", span="101-101"];
m46_183 [cluster="CommandLine.Parsing.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Infrastructure.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.ParserSettings)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parsing.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Infrastructure.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.ParserSettings)", span="134-134"];
m46_200 [cluster="CommandLine.Parsing.ArgumentParser.CompareShort(string, char?, bool)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parsing.ArgumentParser.CompareShort(string, char?, bool)", span="43-43"];
m46_235 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", file="ReflectionExtensions.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", span="338-338"];
m46_159 [cluster="CommandLine.Parsing.OptionMap.EnforceRules()", file="ReflectionExtensions.cs", label="Entry CommandLine.Parsing.OptionMap.EnforceRules()", span="161-161"];
m46_156 [cluster="CommandLine.Parsing.ArgumentParser.Create(string, bool)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parsing.ArgumentParser.Create(string, bool)", span="59-59"];
m46_201 [cluster="CommandLine.Parsing.ArgumentParser.CompareLong(string, string, bool)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parsing.ArgumentParser.CompareLong(string, string, bool)", span="51-51"];
m46_3 [cluster="CommandLine.ParserSettings.ParserSettings()", file="ReflectionExtensions.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="49-49"];
m46_124 [cluster="CommandLine.Infrastructure.ReflectionHelper.RetrieveMethod<TAttribute>(object)", file="ReflectionExtensions.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.RetrieveMethod<TAttribute>(object)", span="86-86"];
m46_32 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="140-140"];
m46_33 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="ReflectionExtensions.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="142-142"];
m46_34 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="ReflectionExtensions.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="143-143"];
m46_35 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="ReflectionExtensions.cs", label="return DoParseArguments(args, options);", span="145-145"];
m46_36 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="ReflectionExtensions.cs", label="Exit CommandLine.Parser.ParseArguments(string[], object)", span="140-140"];
m46_49 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="ReflectionExtensions.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m46_50 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", span="188-188"];
m46_51 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="ReflectionExtensions.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="190-190"];
m46_52 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="ReflectionExtensions.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="191-191"];
m46_53 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="ReflectionExtensions.cs", label="!DoParseArguments(args, options)", span="193-193"];
m46_54 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="ReflectionExtensions.cs", label="InvokeAutoBuildIfNeeded(options)", span="195-195"];
m46_55 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="ReflectionExtensions.cs", label="onFail == null", span="197-197"];
m46_57 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="ReflectionExtensions.cs", label="onFail()", span="203-203"];
m46_59 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="ReflectionExtensions.cs", label="return true;", span="209-209"];
m46_56 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="ReflectionExtensions.cs", label="Environment.Exit(DefaultExitCodeFail)", span="199-199"];
m46_58 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="ReflectionExtensions.cs", label="return false;", span="206-206"];
m46_60 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="ReflectionExtensions.cs", label="Exit CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", span="188-188"];
m46_0 [cluster="CommandLine.Parser.Parser()", file="ReflectionExtensions.cs", label="Entry CommandLine.Parser.Parser()", span="54-54"];
m46_1 [cluster="CommandLine.Parser.Parser()", file="ReflectionExtensions.cs", label="_settings = new ParserSettings { Consumed = true }", span="56-56"];
m46_2 [cluster="CommandLine.Parser.Parser()", file="ReflectionExtensions.cs", label="Exit CommandLine.Parser.Parser()", span="54-54"];
m46_232 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="519-519"];
m46_22 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="96-102"];
m46_23 [cluster="lambda expression", file="ReflectionExtensions.cs", label="with.CaseSensitive = false", span="98-98"];
m46_24 [cluster="lambda expression", file="ReflectionExtensions.cs", label="with.MutuallyExclusive = false", span="99-99"];
m46_25 [cluster="lambda expression", file="ReflectionExtensions.cs", label="with.HelpWriter = Console.Error", span="100-100"];
m46_26 [cluster="lambda expression", file="ReflectionExtensions.cs", label="with.ParsingCulture = CultureInfo.InvariantCulture", span="101-101"];
m46_27 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="96-102"];
m46_233 [cluster="lambda expression", file="ReflectionExtensions.cs", label="HelpText.DefaultParsingErrorsHandler(options, current)", span="519-519"];
m46_234 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="519-519"];
m46_47 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", span="378-378"];
m46_160 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="var verbs = ReflectionHelper.RetrievePropertyList<VerbOptionAttribute>(options)", span="380-380"];
m46_161 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="var helpInfo = ReflectionHelper.RetrieveMethod<HelpVerbOptionAttribute>(options)", span="381-381"];
m46_162 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="args.Length == 0", span="382-382"];
m46_164 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="DisplayHelpVerbText(options, helpInfo, null)", span="386-386"];
m46_166 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="var optionMap = OptionMap.Create(options, verbs, _settings)", span="392-392"];
m46_167 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="TryParseHelpVerb(args, options, helpInfo, optionMap)", span="395-395"];
m46_169 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="var verbOption = optionMap[args.First()]", span="401-401"];
m46_172 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="DisplayHelpVerbText(options, helpInfo, null)", span="408-408"];
m46_174 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="verbInstance = verbOption.GetValue(options)", span="414-414"];
m46_176 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="verbInstance = verbOption.CreateInstance(options)", span="418-418"];
m46_177 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="var verbResult = DoParseArgumentsCore(args.Skip(1).ToArray(), verbInstance)", span="421-421"];
m46_179 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="DisplayHelpVerbText(options, helpInfo, args.First())", span="425-425"];
m46_163 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="helpInfo != null || _settings.HelpWriter != null", span="384-384"];
m46_171 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="helpInfo != null", span="406-406"];
m46_178 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="!verbResult && helpInfo != null", span="422-422"];
m46_165 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="return false;", span="389-389"];
m46_168 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="return false;", span="398-398"];
m46_170 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="verbOption == null", span="404-404"];
m46_173 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="return false;", span="411-411"];
m46_175 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="verbInstance == null", span="415-415"];
m46_180 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="return verbResult;", span="428-428"];
m46_181 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ReflectionExtensions.cs", label="Exit CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", span="378-378"];
m46_108 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="ReflectionExtensions.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m46_185 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ReflectionExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m46_126 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parser.DoParseArgumentsCore(string[], object)", span="332-332"];
m46_129 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="var hadError = false", span="334-334"];
m46_130 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="var optionMap = OptionMap.Create(options, _settings)", span="335-335"];
m46_132 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="var valueMapper = new ValueMapper(options, _settings.ParsingCulture)", span="337-337"];
m46_133 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="var arguments = new StringArrayEnumerator(args)", span="339-339"];
m46_139 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="var result = parser.Parse(arguments, optionMap, options)", span="351-351"];
m46_141 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="SetParserStateIfNeeded(options, parser.PostParsingState)", span="354-354"];
m46_148 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="hadError |= !optionMap.EnforceRules()", span="373-373"];
m46_131 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="optionMap.SetDefaults()", span="336-336"];
m46_145 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="valueMapper.CanReceiveValues", span="364-364"];
m46_146 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="!valueMapper.MapValueItem(argument)", span="366-366"];
m46_134 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="arguments.MoveNext()", span="340-340"];
m46_135 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="var argument = arguments.Current", span="342-342"];
m46_144 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="arguments.MoveNext()", span="361-361"];
m46_136 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="string.IsNullOrEmpty(argument)", span="343-343"];
m46_137 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="var parser = ArgumentParser.Create(argument, _settings.IgnoreUnknownArguments)", span="348-348"];
m46_138 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="parser != null", span="349-349"];
m46_140 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="(result & PresentParserState.Failure) == PresentParserState.Failure", span="352-352"];
m46_143 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="(result & PresentParserState.MoveOnNextElement) == PresentParserState.MoveOnNextElement", span="359-359"];
m46_142 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="hadError = true", span="355-355"];
m46_147 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="hadError = true", span="368-368"];
m46_149 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="return !hadError;", span="375-375"];
m46_150 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ReflectionExtensions.cs", label="Exit CommandLine.Parser.DoParseArgumentsCore(string[], object)", span="332-332"];
m46_188 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="ReflectionExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m46_153 [cluster="CommandLine.Parsing.ValueMapper.ValueMapper(object, System.Globalization.CultureInfo)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parsing.ValueMapper.ValueMapper(object, System.Globalization.CultureInfo)", span="47-47"];
m46_228 [cluster="object.HasHelp()", file="ReflectionExtensions.cs", label="Entry object.HasHelp()", span="39-39"];
m46_95 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="281-281"];
m46_96 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ReflectionExtensions.cs", label="!options.CanReceiveParserState()", span="283-283"];
m46_98 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ReflectionExtensions.cs", label="var property = ReflectionHelper.RetrievePropertyList<ParserStateAttribute>(options)[0].Left", span="288-288"];
m46_99 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ReflectionExtensions.cs", label="property.GetValue(options, null) == null", span="291-291"];
m46_100 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ReflectionExtensions.cs", label="property.SetValue(options, new ParserState(), null)", span="294-294"];
m46_101 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ReflectionExtensions.cs", label="var parserState = (IParserState)property.GetValue(options, null)", span="297-297"];
m46_102 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ReflectionExtensions.cs", label=errors, span="299-299"];
m46_97 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ReflectionExtensions.cs", label="return;", span="285-285"];
m46_103 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ReflectionExtensions.cs", label="parserState.Errors.Add(error)", span="301-301"];
m46_104 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ReflectionExtensions.cs", label="Exit CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="281-281"];
m46_11 [cluster="CommandLine.Infrastructure.Assumes.NotNull<T>(T, string, string)", file="ReflectionExtensions.cs", label="Entry CommandLine.Infrastructure.Assumes.NotNull<T>(T, string, string)", span="40-40"];
m46_157 [cluster="CommandLine.Parsing.ArgumentParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parsing.ArgumentParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", span="99-99"];
m46_223 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="ReflectionExtensions.cs", label="Entry CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", span="85-85"];
m46_109 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ReflectionExtensions.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m46_20 [cluster="CommandLine.Parser.Parser(bool)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parser.Parser(bool)", span="95-95"];
m46_21 [cluster="CommandLine.Parser.Parser(bool)", file="ReflectionExtensions.cs", label="Exit CommandLine.Parser.Parser(bool)", span="95-95"];
m46_152 [cluster="CommandLine.Parsing.OptionMap.SetDefaults()", file="ReflectionExtensions.cs", label="Entry CommandLine.Parsing.OptionMap.SetDefaults()", span="166-166"];
m46_230 [cluster="object.HasVerbs()", file="ReflectionExtensions.cs", label="Entry object.HasVerbs()", span="34-34"];
m46_83 [cluster="System.GC.SuppressFinalize(object)", file="ReflectionExtensions.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m46_38 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", span="161-161"];
m46_39 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="ReflectionExtensions.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="163-163"];
m46_40 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="ReflectionExtensions.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="164-164"];
m46_41 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="ReflectionExtensions.cs", label="Assumes.NotNull(options, ''onVerbCommand'', SR.ArgumentNullException_OnVerbDelegateCannotBeNull)", span="165-165"];
m46_43 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="ReflectionExtensions.cs", label="var result = DoParseArgumentsVerbs(args, options, ref verbInstance)", span="169-169"];
m46_44 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="ReflectionExtensions.cs", label="onVerbCommand(args.FirstOrDefault() ?? string.Empty, result ? verbInstance : null)", span="171-171"];
m46_42 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="ReflectionExtensions.cs", label="object verbInstance = null", span="167-167"];
m46_45 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="ReflectionExtensions.cs", label="return result;", span="173-173"];
m46_46 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="ReflectionExtensions.cs", label="Exit CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", span="161-161"];
m46_92 [cluster="string.IsNullOrEmpty(string)", file="ReflectionExtensions.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m46_105 [cluster="object.CanReceiveParserState()", file="ReflectionExtensions.cs", label="Entry object.CanReceiveParserState()", span="49-49"];
m46_48 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="ReflectionExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m46_243 [cluster="CommandLine.ParserSettings.Dispose()", file="ReflectionExtensions.cs", label="Entry CommandLine.ParserSettings.Dispose()", span="235-235"];
m46_12 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ReflectionExtensions.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m46_186 [cluster="CommandLine.Parsing.OptionInfo.GetValue(object)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parsing.OptionInfo.GetValue(object)", span="142-142"];
m46_79 [cluster="CommandLine.Parser.Dispose()", file="ReflectionExtensions.cs", label="Entry CommandLine.Parser.Dispose()", span="260-260"];
m46_80 [cluster="CommandLine.Parser.Dispose()", file="ReflectionExtensions.cs", label="Dispose(true)", span="262-262"];
m46_81 [cluster="CommandLine.Parser.Dispose()", file="ReflectionExtensions.cs", label="GC.SuppressFinalize(this)", span="264-264"];
m46_82 [cluster="CommandLine.Parser.Dispose()", file="ReflectionExtensions.cs", label="Exit CommandLine.Parser.Dispose()", span="260-260"];
m46_158 [cluster="CommandLine.Parsing.ValueMapper.MapValueItem(string)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parsing.ValueMapper.MapValueItem(string)", span="70-70"];
m46_182 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="488-488"];
m46_216 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ReflectionExtensions.cs", label="string helpText", span="490-490"];
m46_217 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ReflectionExtensions.cs", label="verb == null", span="491-491"];
m46_218 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ReflectionExtensions.cs", label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, null, out helpText)", span="493-493"];
m46_219 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ReflectionExtensions.cs", label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, verb, out helpText)", span="497-497"];
m46_220 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ReflectionExtensions.cs", label="_settings.HelpWriter != null", span="500-500"];
m46_221 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ReflectionExtensions.cs", label="_settings.HelpWriter.Write(helpText)", span="502-502"];
m46_222 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ReflectionExtensions.cs", label="Exit CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="488-488"];
m46_107 [cluster="CommandLine.ParserState.ParserState()", file="ReflectionExtensions.cs", label="Entry CommandLine.ParserState.ParserState()", span="34-34"];
m46_110 [cluster="CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", span="305-305"];
m46_111 [cluster="CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", file="ReflectionExtensions.cs", label="return settings.CaseSensitive ? StringComparison.Ordinal : StringComparison.OrdinalIgnoreCase;", span="307-307"];
m46_112 [cluster="CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", file="ReflectionExtensions.cs", label="Exit CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", span="305-305"];
m46_187 [cluster="CommandLine.Parsing.OptionInfo.CreateInstance(object)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parsing.OptionInfo.CreateInstance(object)", span="147-147"];
m46_215 [cluster="string.Compare(string, string, System.StringComparison)", file="ReflectionExtensions.cs", label="Entry string.Compare(string, string, System.StringComparison)", span="0-0"];
m46_31 [cluster="CommandLine.Parser.Dispose(bool)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parser.Dispose(bool)", span="523-523"];
m46_236 [cluster="CommandLine.Parser.Dispose(bool)", file="ReflectionExtensions.cs", label=_disposed, span="525-525"];
m46_238 [cluster="CommandLine.Parser.Dispose(bool)", file="ReflectionExtensions.cs", label=disposing, span="530-530"];
m46_237 [cluster="CommandLine.Parser.Dispose(bool)", file="ReflectionExtensions.cs", label="return;", span="527-527"];
m46_239 [cluster="CommandLine.Parser.Dispose(bool)", file="ReflectionExtensions.cs", label="_settings != null", span="532-532"];
m46_240 [cluster="CommandLine.Parser.Dispose(bool)", file="ReflectionExtensions.cs", label="_settings.Dispose()", span="534-534"];
m46_241 [cluster="CommandLine.Parser.Dispose(bool)", file="ReflectionExtensions.cs", label="_disposed = true", span="537-537"];
m46_242 [cluster="CommandLine.Parser.Dispose(bool)", file="ReflectionExtensions.cs", label="Exit CommandLine.Parser.Dispose(bool)", span="523-523"];
m46_127 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="ReflectionExtensions.cs", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="108-108"];
m46_63 [cluster="System.Action.Invoke()", file="ReflectionExtensions.cs", label="Entry System.Action.Invoke()", span="0-0"];
m46_61 [cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", span="506-506"];
m46_224 [cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="ReflectionExtensions.cs", label="_settings.HelpWriter == null ||\r\n                options.HasHelp() ||\r\n                options.HasVerbHelp()", span="508-510"];
m46_226 [cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="ReflectionExtensions.cs", label="_settings.HelpWriter.Write(\r\n                HelpText.AutoBuild(\r\n                    options,\r\n                    current => HelpText.DefaultParsingErrorsHandler(options, current),\r\n                    options.HasVerbs()))", span="516-520"];
m46_225 [cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="ReflectionExtensions.cs", label="return;", span="512-512"];
m46_227 [cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="ReflectionExtensions.cs", label="Exit CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", span="506-506"];
m46_184 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="ReflectionExtensions.cs", label="Entry CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", span="458-458"];
m46_202 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="ReflectionExtensions.cs", label="var helpWriter = _settings.HelpWriter", span="460-460"];
m46_203 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="ReflectionExtensions.cs", label="helpInfo != null && helpWriter != null", span="461-461"];
m46_204 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="ReflectionExtensions.cs", label="string.Compare(args[0], helpInfo.Right.LongName, GetStringComparison(_settings)) == 0", span="463-463"];
m46_205 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="ReflectionExtensions.cs", label="var verb = args.FirstOrDefault()", span="466-466"];
m46_207 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="ReflectionExtensions.cs", label="var verbOption = optionMap[verb]", span="469-469"];
m46_209 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="ReflectionExtensions.cs", label="verbOption.GetValue(options) == null", span="472-472"];
m46_210 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="ReflectionExtensions.cs", label="verbOption.CreateInstance(options)", span="475-475"];
m46_211 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="ReflectionExtensions.cs", label="DisplayHelpVerbText(options, helpInfo, verb)", span="480-480"];
m46_213 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="ReflectionExtensions.cs", label="return false;", span="485-485"];
m46_206 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="ReflectionExtensions.cs", label="verb != null", span="467-467"];
m46_208 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="ReflectionExtensions.cs", label="verbOption != null", span="470-470"];
m46_212 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="ReflectionExtensions.cs", label="return true;", span="481-481"];
m46_214 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="ReflectionExtensions.cs", label="Exit CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", span="458-458"];
m46_155 [cluster="CommandLine.Parsing.StringArrayEnumerator.MoveNext()", file="ReflectionExtensions.cs", label="Entry CommandLine.Parsing.StringArrayEnumerator.MoveNext()", span="93-93"];
m46_94 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="ReflectionExtensions.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m46_128 [cluster="System.IO.TextWriter.Write(string)", file="ReflectionExtensions.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m46_93 [cluster="CommandLine.Infrastructure.ReflectionHelper.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionExtensions.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.RetrieveOptionProperty<TAttribute>(object, string)", span="199-199"];
m46_244 [file="ReflectionExtensions.cs", label="CommandLine.Parser", span=""];
m46_245 [file="ReflectionExtensions.cs", label=object, span=""];
m48_6 [cluster="Unk.Equal", file="SentenceBuilder.cs", label="Entry Unk.Equal", span=""];
m48_5 [cluster="int.ToWords()", file="SentenceBuilder.cs", label="Entry int.ToWords()", span="27-27"];
m48_2 [cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWordsPortuguese(int, string)", file="SentenceBuilder.cs", label="Entry Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWordsPortuguese(int, string)", span="41-41"];
m48_3 [cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWordsPortuguese(int, string)", file="SentenceBuilder.cs", label="Assert.Equal(expected, number.ToWords())", span="43-43"];
m48_4 [cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWordsPortuguese(int, string)", file="SentenceBuilder.cs", label="Exit Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWordsPortuguese(int, string)", span="41-41"];
m48_0 [cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", file="SentenceBuilder.cs", label="Entry Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", span="7-7"];
m48_1 [cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", file="SentenceBuilder.cs", label="Exit Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", span="7-7"];
m50_50 [cluster="System.Array.FindLastIndex<T>(T[], System.Predicate<T>)", file="Specification.cs", label="Entry System.Array.FindLastIndex<T>(T[], System.Predicate<T>)", span="0-0"];
m50_46 [cluster="CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", file="Specification.cs", label="Entry CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", span="170-170"];
m50_47 [cluster="CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", file="Specification.cs", label="var index = Array.FindLastIndex(value, str => !string.IsNullOrEmpty(str))", span="172-172"];
m50_48 [cluster="CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", file="Specification.cs", label="return index + 1;", span="175-175"];
m50_49 [cluster="CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", file="Specification.cs", label="Exit CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", span="170-170"];
m50_4 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string)", file="Specification.cs", label="Entry CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string)", span="47-47"];
m50_5 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string)", file="Specification.cs", label="Exit CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string)", span="47-47"];
m50_2 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string)", file="Specification.cs", label="Entry CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string)", span="35-35"];
m50_3 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string)", file="Specification.cs", label="Exit CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string)", span="35-35"];
m50_41 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="Specification.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="323-323"];
m50_6 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string)", file="Specification.cs", label="Entry CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string)", span="60-60"];
m50_7 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string)", file="Specification.cs", label="Exit CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string)", span="60-60"];
m50_45 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="Specification.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333"];
m50_51 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="172-172"];
m50_32 [cluster="lambda expression", file="Specification.cs", label="func(line)", span="152-152"];
m50_31 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="152-152"];
m50_33 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="152-152"];
m50_39 [cluster="lambda expression", file="Specification.cs", label="helpText.AddPreOptionsLine(line)", span="160-160"];
m50_43 [cluster="lambda expression", file="Specification.cs", label="helpText.AddPostOptionsLine(line)", span="161-161"];
m50_38 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="160-160"];
m50_42 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="161-161"];
m50_40 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="160-160"];
m50_44 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="161-161"];
m50_52 [cluster="lambda expression", file="Specification.cs", label="!string.IsNullOrEmpty(str)", span="172-172"];
m50_53 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="172-172"];
m50_54 [cluster="string.IsNullOrEmpty(string)", file="Specification.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m50_35 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="Specification.cs", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155"];
m50_36 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="Specification.cs", label="return before\r\n                ? this.AddToHelpText(helpText, line => helpText.AddPreOptionsLine(line))\r\n                : this.AddToHelpText(helpText, line => helpText.AddPostOptionsLine(line));", span="159-161"];
m50_37 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="Specification.cs", label="Exit CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155"];
m50_8 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="Specification.cs", label="Entry CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", span="74-74"];
m50_9 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="Specification.cs", label="line1 == null", span="76-76"];
m50_11 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="Specification.cs", label="line2 == null", span="77-77"];
m50_13 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="Specification.cs", label="line3 == null", span="78-78"];
m50_15 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="Specification.cs", label="line4 == null", span="79-79"];
m50_17 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="Specification.cs", label="line5 == null", span="80-80"];
m50_19 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="Specification.cs", label="this.line1 = line1", span="82-82"];
m50_20 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="Specification.cs", label="this.line2 = line2", span="83-83"];
m50_21 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="Specification.cs", label="this.line3 = line3", span="84-84"];
m50_22 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="Specification.cs", label="this.line4 = line4", span="85-85"];
m50_23 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="Specification.cs", label="this.line5 = line5", span="86-86"];
m50_10 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="Specification.cs", label="throw new ArgumentException(''line1'');", span="76-76"];
m50_12 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="Specification.cs", label="throw new ArgumentException(''line2'');", span="77-77"];
m50_14 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="Specification.cs", label="throw new ArgumentException(''line3'');", span="78-78"];
m50_16 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="Specification.cs", label="throw new ArgumentException(''line4'');", span="79-79"];
m50_18 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="Specification.cs", label="throw new ArgumentException(''line5'');", span="80-80"];
m50_24 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="Specification.cs", label="Exit CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", span="74-74"];
m50_26 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, System.Func<string, CommandLine.Text.HelpText>)", file="Specification.cs", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, System.Func<string, CommandLine.Text.HelpText>)", span="149-149"];
m50_27 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, System.Func<string, CommandLine.Text.HelpText>)", file="Specification.cs", label="var strArray = new[] { this.line1, this.line2, this.line3, this.line4, this.line5 }", span="151-151"];
m50_28 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, System.Func<string, CommandLine.Text.HelpText>)", file="Specification.cs", label="return strArray.Aggregate(helpText, (current, line) => func(line));", span="152-152"];
m50_29 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, System.Func<string, CommandLine.Text.HelpText>)", file="Specification.cs", label="Exit CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, System.Func<string, CommandLine.Text.HelpText>)", span="149-149"];
m50_0 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string)", file="Specification.cs", label="Entry CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string)", span="24-24"];
m50_1 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string)", file="Specification.cs", label="Exit CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string)", span="24-24"];
m50_34 [cluster="System.Func<T, TResult>.Invoke(T)", file="Specification.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m50_25 [cluster="System.ArgumentException.ArgumentException(string)", file="Specification.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m50_30 [cluster="Unk.Aggregate", file="Specification.cs", label="Entry Unk.Aggregate", span=""];
m50_55 [file="Specification.cs", label="CommandLine.Text.MultilineTextAttribute", span=""];
m50_56 [file="Specification.cs", label="System.Func<string, CommandLine.Text.HelpText>", span=""];
m50_57 [file="Specification.cs", label="CommandLine.Text.HelpText", span=""];
m51_42 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="SpecificationExtensions.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m51_15 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="42-42"];
m51_16 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label=guardsLookup, span="44-44"];
m51_17 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="specifications.Any(spec => guard.Item1(spec))", span="46-46"];
m51_19 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="return specifications;", span="52-52"];
m51_18 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="throw new ApplicationException(guard.Item2);", span="48-48"];
m51_20 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="42-42"];
m51_41 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="SpecificationExtensions.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m51_0 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11"];
m51_1 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="specification == null", span="13-13"];
m51_3 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return specification.Tag == SpecificationType.Option;", span="15-15"];
m51_2 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="throw new ArgumentNullException(''specification'');", span="13-13"];
m51_4 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11"];
m51_6 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="18-18"];
m51_7 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="specification == null", span="20-20"];
m51_9 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return specification.Tag == SpecificationType.Value;", span="22-22"];
m51_8 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="throw new ArgumentNullException(''specification'');", span="20-20"];
m51_10 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="18-18"];
m51_23 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Entry lambda expression", span="46-46"];
m51_24 [cluster="lambda expression", file="SpecificationExtensions.cs", label="guard.Item1(spec)", span="46-46"];
m51_25 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Exit lambda expression", span="46-46"];
m51_27 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="55-55"];
m51_28 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="specification == null", span="57-57"];
m51_30 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="specification.ConversionType.ToDescriptor()", span="59-59"];
m51_34 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="var min = specification.Min", span="64-64"];
m51_35 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="var max = specification.Max", span="65-65"];
m51_29 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="throw new ArgumentNullException(''specification'');", span="57-57"];
m51_31 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="DescriptorType.Scalar", span="61-61"];
m51_33 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="DescriptorType.Sequence", span="63-63"];
m51_32 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return  Maybe.Just(1);", span="62-62"];
m51_36 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="min >= 0 && max >= 0", span="66-66"];
m51_37 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return Maybe.Just(max);", span="68-68"];
m51_38 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return Maybe.Nothing<int>();", span="73-73"];
m51_39 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="55-55"];
m51_22 [cluster="System.ApplicationException.ApplicationException(string)", file="SpecificationExtensions.cs", label="Entry System.ApplicationException.ApplicationException(string)", span="0-0"];
m51_26 [cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m51_14 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17"];
m51_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m51_40 [cluster="System.Type.ToDescriptor()", file="SpecificationExtensions.cs", label="Entry System.Type.ToDescriptor()", span="22-22"];
m51_21 [cluster="Unk.Any", file="SpecificationExtensions.cs", label="Entry Unk.Any", span=""];
m51_43 [cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", span="76-76"];
m51_44 [cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return specification.Min == -1;", span="78-78"];
m51_45 [cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", span="76-76"];
m51_11 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", span="25-25"];
m51_12 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs", label="return new OptionSpecification(\r\n                specification.ShortName,\r\n                newLongName,\r\n                specification.Required,\r\n                specification.SetName,\r\n                specification.Min,\r\n                specification.Max,\r\n                specification.Separator,\r\n                specification.DefaultValue,\r\n                specification.ConversionType,\r\n                specification.HelpText,\r\n                specification.MetaValue,\r\n                enumValues);", span="27-39"];
m51_13 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", span="25-25"];
m51_46 [cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", span="81-81"];
m51_47 [cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return specification.Max == -1;", span="83-83"];
m51_48 [cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", span="81-81"];
m51_49 [file="SpecificationExtensions.cs", label=guard, span=""];
m52_6 [cluster="CommandLine.Internal.OneCharStringEnumerator.MoveNext()", file="SpecificationGuards.cs", label="Entry CommandLine.Internal.OneCharStringEnumerator.MoveNext()", span="75-75"];
m52_7 [cluster="CommandLine.Internal.OneCharStringEnumerator.MoveNext()", file="SpecificationGuards.cs", label="_index < (_data.Length - 1)", span="77-77"];
m52_8 [cluster="CommandLine.Internal.OneCharStringEnumerator.MoveNext()", file="SpecificationGuards.cs", label="_index++", span="79-79"];
m52_11 [cluster="CommandLine.Internal.OneCharStringEnumerator.MoveNext()", file="SpecificationGuards.cs", label="_index = _data.Length", span="83-83"];
m52_9 [cluster="CommandLine.Internal.OneCharStringEnumerator.MoveNext()", file="SpecificationGuards.cs", label="_currentElement = _data.Substring(_index, 1)", span="80-80"];
m52_10 [cluster="CommandLine.Internal.OneCharStringEnumerator.MoveNext()", file="SpecificationGuards.cs", label="return true;", span="81-81"];
m52_12 [cluster="CommandLine.Internal.OneCharStringEnumerator.MoveNext()", file="SpecificationGuards.cs", label="return false;", span="84-84"];
m52_13 [cluster="CommandLine.Internal.OneCharStringEnumerator.MoveNext()", file="SpecificationGuards.cs", label="Exit CommandLine.Internal.OneCharStringEnumerator.MoveNext()", span="75-75"];
m52_14 [cluster="string.Substring(int, int)", file="SpecificationGuards.cs", label="Entry string.Substring(int, int)", span="0-0"];
m52_0 [cluster="CommandLine.Internal.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="SpecificationGuards.cs", label="Entry CommandLine.Internal.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="37-37"];
m52_1 [cluster="CommandLine.Internal.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="SpecificationGuards.cs", label="Assumes.NotNullOrEmpty(value, ''value'')", span="39-39"];
m52_2 [cluster="CommandLine.Internal.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="SpecificationGuards.cs", label="_data = value", span="40-40"];
m52_3 [cluster="CommandLine.Internal.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="SpecificationGuards.cs", label="_index = -1", span="41-41"];
m52_4 [cluster="CommandLine.Internal.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="SpecificationGuards.cs", label="Exit CommandLine.Internal.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="37-37"];
m52_27 [cluster="System.NotSupportedException.NotSupportedException()", file="SpecificationGuards.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m52_5 [cluster="CommandLine.Utils.Assumes.NotNullOrEmpty(string, string)", file="SpecificationGuards.cs", label="Entry CommandLine.Utils.Assumes.NotNullOrEmpty(string, string)", span="54-54"];
m52_15 [cluster="CommandLine.Internal.OneCharStringEnumerator.GetRemainingFromNext()", file="SpecificationGuards.cs", label="Entry CommandLine.Internal.OneCharStringEnumerator.GetRemainingFromNext()", span="87-87"];
m52_16 [cluster="CommandLine.Internal.OneCharStringEnumerator.GetRemainingFromNext()", file="SpecificationGuards.cs", label="_index == -1", span="89-89"];
m52_17 [cluster="CommandLine.Internal.OneCharStringEnumerator.GetRemainingFromNext()", file="SpecificationGuards.cs", label="throw new InvalidOperationException();", span="89-89"];
m52_18 [cluster="CommandLine.Internal.OneCharStringEnumerator.GetRemainingFromNext()", file="SpecificationGuards.cs", label="_index > _data.Length", span="90-90"];
m52_19 [cluster="CommandLine.Internal.OneCharStringEnumerator.GetRemainingFromNext()", file="SpecificationGuards.cs", label="throw new InvalidOperationException();", span="90-90"];
m52_20 [cluster="CommandLine.Internal.OneCharStringEnumerator.GetRemainingFromNext()", file="SpecificationGuards.cs", label="return _data.Substring(_index + 1);", span="91-91"];
m52_21 [cluster="CommandLine.Internal.OneCharStringEnumerator.GetRemainingFromNext()", file="SpecificationGuards.cs", label="Exit CommandLine.Internal.OneCharStringEnumerator.GetRemainingFromNext()", span="87-87"];
m52_24 [cluster="CommandLine.Internal.OneCharStringEnumerator.MovePrevious()", file="SpecificationGuards.cs", label="Entry CommandLine.Internal.OneCharStringEnumerator.MovePrevious()", span="94-94"];
m52_25 [cluster="CommandLine.Internal.OneCharStringEnumerator.MovePrevious()", file="SpecificationGuards.cs", label="throw new NotSupportedException();", span="94-94"];
m52_26 [cluster="CommandLine.Internal.OneCharStringEnumerator.MovePrevious()", file="SpecificationGuards.cs", label="Exit CommandLine.Internal.OneCharStringEnumerator.MovePrevious()", span="94-94"];
m52_23 [cluster="string.Substring(int)", file="SpecificationGuards.cs", label="Entry string.Substring(int)", span="0-0"];
m52_22 [cluster="System.InvalidOperationException.InvalidOperationException()", file="SpecificationGuards.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m52_28 [file="SpecificationGuards.cs", label="CommandLine.Internal.OneCharStringEnumerator", span=""];
m53_14 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationProperty.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m53_0 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationProperty.cs", label="Entry CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="14-14"];
m53_1 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationProperty.cs", label="this.property = property", span="16-16"];
m53_2 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationProperty.cs", label="this.specification = specification", span="17-17"];
m53_3 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationProperty.cs", label="this.value = value", span="18-18"];
m53_4 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationProperty.cs", label="Exit CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="14-14"];
m53_5 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationProperty.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21"];
m53_6 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationProperty.cs", label="specification == null", span="23-23"];
m53_8 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationProperty.cs", label="property == null", span="24-24"];
m53_10 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationProperty.cs", label="value == null", span="25-25"];
m53_12 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationProperty.cs", label="return new SpecificationProperty(specification, property, value);", span="27-27"];
m53_7 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationProperty.cs", label="throw new ArgumentNullException(''specification'');", span="23-23"];
m53_9 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationProperty.cs", label="throw new ArgumentNullException(''property'');", span="24-24"];
m53_11 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationProperty.cs", label="throw new ArgumentNullException(''value'');", span="25-25"];
m53_13 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationProperty.cs", label="Exit CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21"];
m53_15 [file="SpecificationProperty.cs", label="CommandLine.Core.SpecificationProperty", span=""];
m54_30 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", span="44-44"];
m54_31 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="SpecificationPropertyExtensions.cs", label="specProps == null", span="49-49"];
m54_33 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="SpecificationPropertyExtensions.cs", label="return rules.SelectMany(rule => rule(specProps));", span="51-51"];
m54_32 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="SpecificationPropertyExtensions.cs", label="throw new ArgumentNullException(''specProps'');", span="49-49"];
m54_34 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", span="44-44"];
m54_0 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", span="11-11"];
m54_1 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="specProp == null", span="13-13"];
m54_3 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="newSpecification == null", span="14-14"];
m54_5 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="return SpecificationProperty.Create(newSpecification, specProp.Property, specProp.Value);", span="16-16"];
m54_2 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="throw new ArgumentNullException(''specProp'');", span="13-13"];
m54_4 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="throw new ArgumentNullException(''newSpecification'');", span="14-14"];
m54_6 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", span="11-11"];
m54_16 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", span="27-27"];
m54_17 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="specProp == null", span="29-29"];
m54_19 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="specProp.Specification.ConversionType.ToDescriptor()", span="31-31"];
m54_21 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="return specProp.Property.PropertyType.GetGenericArguments()\r\n                             .SingleOrDefault()\r\n                             .ToMaybe()\r\n                             .FromJust(\r\n                                 new InvalidOperationException(''Sequence properties should be of type IEnumerable<T>.''));", span="34-38"];
m54_22 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="return specProp.Property.PropertyType;", span="40-40"];
m54_18 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="throw new ArgumentNullException(''specProp'');", span="29-29"];
m54_20 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="DescriptorType.Sequence", span="33-33"];
m54_23 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", span="27-27"];
m54_29 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="137-137"];
m54_8 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21"];
m54_9 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", span="19-19"];
m54_10 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="specProp == null", span="21-21"];
m54_12 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="newValue == null", span="22-22"];
m54_14 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="return SpecificationProperty.Create(specProp.Specification, specProp.Property, newValue);", span="24-24"];
m54_11 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="throw new ArgumentNullException(''specProp'');", span="21-21"];
m54_13 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="throw new ArgumentNullException(''newValue'');", span="22-22"];
m54_15 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", span="19-19"];
m54_25 [cluster="System.Type.GetGenericArguments()", file="SpecificationPropertyExtensions.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m54_27 [cluster="T.ToMaybe<T>()", file="SpecificationPropertyExtensions.cs", label="Entry T.ToMaybe<T>()", span="82-82"];
m54_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="SpecificationPropertyExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m54_36 [cluster="lambda expression", file="SpecificationPropertyExtensions.cs", label="Entry lambda expression", span="51-51"];
m54_37 [cluster="lambda expression", file="SpecificationPropertyExtensions.cs", label="rule(specProps)", span="51-51"];
m54_38 [cluster="lambda expression", file="SpecificationPropertyExtensions.cs", label="Exit lambda expression", span="51-51"];
m54_24 [cluster="System.Type.ToDescriptor()", file="SpecificationPropertyExtensions.cs", label="Entry System.Type.ToDescriptor()", span="22-22"];
m54_7 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationPropertyExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m54_28 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SpecificationPropertyExtensions.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m54_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="SpecificationPropertyExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m54_39 [cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationPropertyExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m54_40 [file="SpecificationPropertyExtensions.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", span=""];
m55_0 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m55_1 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="SpecificationPropertyRules.cs", label="return from t in tokens\r\n                   where typeLookup(t.Text).MapMaybe(info => t.IsName() && info.TargetType == TargetType.Switch, false)\r\n                   select t;", span="15-17"];
m55_2 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m55_5 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="16-16"];
m55_6 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="t.IsName() && info.TargetType == TargetType.Switch", span="16-16"];
m55_7 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="16-16"];
m55_4 [cluster="Unk.MapMaybe", file="SpecificationPropertyRules.cs", label="Entry Unk.MapMaybe", span=""];
m55_8 [cluster="CommandLine.Core.Token.IsName()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.Token.IsName()", span="128-128"];
m55_3 [cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationPropertyRules.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m55_9 [file="SpecificationPropertyRules.cs", label=t, span=""];
m57_6 [cluster="System.ArgumentException.ArgumentException(string)", file="Token.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m57_5 [cluster="string.IsNullOrWhiteSpace(string)", file="Token.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m57_0 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="Token.cs", label="Entry CommandLine.VerbAttribute.VerbAttribute(string)", span="20-20"];
m57_1 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="Token.cs", label="string.IsNullOrWhiteSpace(name)", span="22-22"];
m57_3 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="Token.cs", label="this.name = name", span="24-24"];
m57_2 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="Token.cs", label="throw new ArgumentException(''name'');", span="22-22"];
m57_4 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="Token.cs", label="Exit CommandLine.VerbAttribute.VerbAttribute(string)", span="20-20"];
m57_7 [file="Token.cs", label="CommandLine.VerbAttribute", span=""];
m58_0 [cluster="CommandLine.Core.TokenGroup.TokenGroup(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenGroup.cs", label="Entry CommandLine.Core.TokenGroup.TokenGroup(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m58_1 [cluster="CommandLine.Core.TokenGroup.TokenGroup(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenGroup.cs", label="this.options = options", span="17-17"];
m58_2 [cluster="CommandLine.Core.TokenGroup.TokenGroup(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenGroup.cs", label="this.values = values", span="18-18"];
m58_3 [cluster="CommandLine.Core.TokenGroup.TokenGroup(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenGroup.cs", label="this.errors = errors", span="19-19"];
m58_4 [cluster="CommandLine.Core.TokenGroup.TokenGroup(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenGroup.cs", label="Exit CommandLine.Core.TokenGroup.TokenGroup(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m58_5 [cluster="CommandLine.Core.TokenGroup.Create(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenGroup.cs", label="Entry CommandLine.Core.TokenGroup.Create(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="37-37"];
m58_6 [cluster="CommandLine.Core.TokenGroup.Create(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenGroup.cs", label="return new TokenGroup(options, values, errors);", span="42-42"];
m58_7 [cluster="CommandLine.Core.TokenGroup.Create(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenGroup.cs", label="Exit CommandLine.Core.TokenGroup.Create(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="37-37"];
m58_8 [file="TokenGroup.cs", label="CommandLine.Core.TokenGroup", span=""];
m59_62 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="48-48"];
m59_63 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="Tokenizer.cs", label="tokens == null", span="52-52"];
m59_65 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="Tokenizer.cs", label="var replaces = tokens.Value.Select((t,i) =>\r\n                optionSequenceWithSeparatorLookup(t.Text)\r\n                    .Return(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))).SkipWhile(x => x.Item1 < 0)", span="54-57"];
m59_66 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="Tokenizer.cs", label="var exploded = tokens.Value.Select((t, i) =>\r\n                        replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .Return(r => t.Text.Split(r.Item2).Select(str => Token.Value(str)),\r\n                                Enumerable.Empty<Token>().Concat(new[]{ t })))", span="59-62"];
m59_68 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="Tokenizer.cs", label="return StatePair.Create(flattened, tokens.Errors);", span="66-66"];
m59_64 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="Tokenizer.cs", label="throw new ArgumentNullException(''tokens'');", span="52-52"];
m59_67 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="Tokenizer.cs", label="var flattened = exploded.SelectMany(x => x)", span="64-64"];
m59_69 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="48-48"];
m59_150 [cluster="string.Split(params char[])", file="Tokenizer.cs", label="Entry string.Split(params char[])", span="0-0"];
m59_17 [cluster="Unk.nameLookup", file="Tokenizer.cs", label="Entry Unk.nameLookup", span=""];
m59_76 [cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="Tokenizer.cs", label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="103-103"];
m59_148 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="Tokenizer.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="188-188"];
m59_11 [cluster="string.StartsWith(string, System.StringComparison)", file="Tokenizer.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m59_70 [cluster="Unk.SkipWhile", file="Tokenizer.cs", label="Entry Unk.SkipWhile", span=""];
m59_127 [cluster="CommandLine.Core.Token.Name(string)", file="Tokenizer.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m59_149 [cluster="System.Action<T>.Invoke(T)", file="Tokenizer.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m59_39 [cluster="Unk.Any", file="Tokenizer.cs", label="Entry Unk.Any", span=""];
m59_12 [cluster="CommandLine.Core.Token.Value(string)", file="Tokenizer.cs", label="Entry CommandLine.Core.Token.Value(string)", span="26-26"];
m59_16 [cluster="Unk.IsName", file="Tokenizer.cs", label="Entry Unk.IsName", span=""];
m59_41 [cluster="System.Func<T, TResult>.Invoke(T)", file="Tokenizer.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m59_18 [cluster="Unk.Where", file="Tokenizer.cs", label="Entry Unk.Where", span=""];
m59_21 [cluster="Unk.Create", file="Tokenizer.cs", label="Entry Unk.Create", span=""];
m59_88 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="Tokenizer.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m59_128 [cluster="string.Substring(int, int)", file="Tokenizer.cs", label="Entry string.Substring(int, int)", span="0-0"];
m59_129 [cluster="string.String(char, int)", file="Tokenizer.cs", label="Entry string.String(char, int)", span="0-0"];
m59_29 [cluster="Unk.Contains", file="Tokenizer.cs", label="Entry Unk.Contains", span=""];
m59_87 [cluster="Unk.ToMaybe", file="Tokenizer.cs", label="Entry Unk.ToMaybe", span=""];
m59_75 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="Tokenizer.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m59_98 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="61-61"];
m59_23 [cluster="lambda expression", file="Tokenizer.cs", label="errors.Add(e)", span="18-18"];
m59_27 [cluster="lambda expression", file="Tokenizer.cs", label="!unkTokens.Contains(x)", span="30-30"];
m59_26 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="30-30"];
m59_22 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="18-18"];
m59_24 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="18-18"];
m59_28 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="30-30"];
m59_46 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="39-39"];
m59_50 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="41-41"];
m59_53 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="42-42"];
m59_56 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="42-42"];
m59_60 [cluster="lambda expression", file="Tokenizer.cs", label="tokens.Concat(values)", span="43-43"];
m59_59 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="43-43"];
m59_47 [cluster="lambda expression", file="Tokenizer.cs", label="arg.EqualsOrdinal(''--'')", span="39-39"];
m59_48 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="39-39"];
m59_51 [cluster="lambda expression", file="Tokenizer.cs", label="!arg.EqualsOrdinal(''--'')", span="41-41"];
m59_52 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="41-41"];
m59_54 [cluster="lambda expression", file="Tokenizer.cs", label="!arg.EqualsOrdinal(''--'')", span="42-42"];
m59_55 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="42-42"];
m59_57 [cluster="lambda expression", file="Tokenizer.cs", label="Token.Value(t)", span="42-42"];
m59_58 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="42-42"];
m59_61 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="43-43"];
m59_73 [cluster="lambda expression", file="Tokenizer.cs", label="optionSequenceWithSeparatorLookup(t.Text)\r\n                    .Return(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))", span="55-57"];
m59_72 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="54-57"];
m59_80 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="57-57"];
m59_84 [cluster="lambda expression", file="Tokenizer.cs", label="replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .Return(r => t.Text.Split(r.Item2).Select(str => Token.Value(str)),\r\n                                Enumerable.Empty<Token>().Concat(new[]{ t }))", span="60-62"];
m59_83 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="59-62"];
m59_101 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="64-64"];
m59_78 [cluster="lambda expression", file="Tokenizer.cs", label="Tuple.Create(i + 1, sep)", span="56-56"];
m59_74 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="54-57"];
m59_77 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="56-56"];
m59_79 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="56-56"];
m59_81 [cluster="lambda expression", file="Tokenizer.cs", label="x.Item1 < 0", span="57-57"];
m59_82 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="57-57"];
m59_92 [cluster="lambda expression", file="Tokenizer.cs", label="x.Item1 == i", span="60-60"];
m59_95 [cluster="lambda expression", file="Tokenizer.cs", label="t.Text.Split(r.Item2).Select(str => Token.Value(str))", span="61-61"];
m59_85 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="59-62"];
m59_91 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="60-60"];
m59_94 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="61-61"];
m59_93 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="60-60"];
m59_96 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="61-61"];
m59_99 [cluster="lambda expression", file="Tokenizer.cs", label="Token.Value(str)", span="61-61"];
m59_100 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="61-61"];
m59_102 [cluster="lambda expression", file="Tokenizer.cs", label=x, span="64-64"];
m59_103 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="64-64"];
m59_43 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m59_13 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="119-119"];
m59_132 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="value == null", span="123-123"];
m59_138 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield return Token.Name(text);", span="134-134"];
m59_139 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield break;", span="135-135"];
m59_142 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield break;", span="140-140"];
m59_144 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield return Token.Name(parts[0]);", span="143-143"];
m59_145 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield return Token.Value(parts[1]);", span="144-144"];
m59_134 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="value.Length > 2 && value.StartsWith(''--'', StringComparison.Ordinal)", span="128-128"];
m59_135 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="var text = value.Substring(2)", span="130-130"];
m59_141 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="onError(new BadFormatTokenError(value))", span="139-139"];
m59_133 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="throw new ArgumentNullException(''value'');", span="125-125"];
m59_136 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="var equalIndex = text.IndexOf('=')", span="131-131"];
m59_143 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="var parts = text.Split('=')", span="142-142"];
m59_137 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="equalIndex <= 0", span="132-132"];
m59_140 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="equalIndex == 1", span="137-137"];
m59_146 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="119-119"];
m59_42 [cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m59_20 [cluster="Unk.Concat", file="Tokenizer.cs", label="Entry Unk.Concat", span=""];
m59_49 [cluster="string.EqualsOrdinal(string)", file="Tokenizer.cs", label="Entry string.EqualsOrdinal(string)", span="34-34"];
m59_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m59_147 [cluster="string.IndexOf(char)", file="Tokenizer.cs", label="Entry string.IndexOf(char)", span="0-0"];
m59_44 [cluster="Unk.Select", file="Tokenizer.cs", label="Entry Unk.Select", span=""];
m59_45 [cluster="CommandLine.Core.StatePair<T1>.MapValue<T1, T2>(System.Func<T1, T2>)", file="Tokenizer.cs", label="Entry CommandLine.Core.StatePair<T1>.MapValue<T1, T2>(System.Func<T1, T2>)", span="69-69"];
m59_0 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m59_1 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="arguments == null", span="15-15"];
m59_5 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="var tokens = (from arg in arguments\r\n                          from token in !arg.StartsWith(''-'', StringComparison.Ordinal)\r\n                               ? new Token[] { Token.Value(arg) }\r\n                               : arg.StartsWith(''--'', StringComparison.Ordinal)\r\n                                     ? TokenizeLongName(arg, onError)\r\n                                     : TokenizeShortName(arg, nameLookup)\r\n                          select token).ToList()", span="20-26"];
m59_6 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="var unkTokens = (from t in tokens where t.IsName() && !nameLookup(t.Text) select t).ToList()", span="28-28"];
m59_2 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="throw new ArgumentNullException(''arguments'');", span="15-15"];
m59_3 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="var errors = new List<Error>()", span="17-17"];
m59_4 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="Action<Error> onError = e => errors.Add(e)", span="18-18"];
m59_7 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="return StatePair.Create(tokens.Where(x=>!unkTokens.Contains(x)), errors.Concat(from t in unkTokens select new UnknownOptionError(t.Text)));", span="30-30"];
m59_8 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m59_30 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="33-33"];
m59_31 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="arguments == null", span="37-37"];
m59_33 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="arguments.Any(arg => arg.EqualsOrdinal(''--''))", span="39-39"];
m59_34 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="var tokenizerResult = tokenizer(arguments.TakeWhile(arg => !arg.EqualsOrdinal(''--'')))", span="41-41"];
m59_35 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="var values = arguments.SkipWhile(arg => !arg.EqualsOrdinal(''--'')).Skip(1).Select(t => Token.Value(t))", span="42-42"];
m59_37 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="return tokenizer(arguments);", span="45-45"];
m59_32 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="throw new ArgumentNullException(''arguments'');", span="37-37"];
m59_36 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="return tokenizerResult.MapValue(tokens => tokens.Concat(values));", span="43-43"];
m59_38 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="33-33"];
m59_15 [cluster="Unk.ToList", file="Tokenizer.cs", label="Entry Unk.ToList", span=""];
m59_90 [cluster="Unk.Return", file="Tokenizer.cs", label="Entry Unk.Return", span=""];
m59_25 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Tokenizer.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m59_126 [cluster="char.IsDigit(char)", file="Tokenizer.cs", label="Entry char.IsDigit(char)", span="0-0"];
m59_10 [cluster="System.Collections.Generic.List<T>.List()", file="Tokenizer.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m59_19 [cluster="UnknownOptionError.cstr", file="Tokenizer.cs", label="Entry UnknownOptionError.cstr", span=""];
m59_131 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m59_71 [cluster="Unk.SelectMany", file="Tokenizer.cs", label="Entry Unk.SelectMany", span=""];
m59_86 [cluster="Unk.FirstOrDefault", file="Tokenizer.cs", label="Entry Unk.FirstOrDefault", span=""];
m59_97 [cluster="Unk.Split", file="Tokenizer.cs", label="Entry Unk.Split", span=""];
m59_14 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="69-69"];
m59_104 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="value == null", span="73-73"];
m59_109 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Value(value);", span="84-84"];
m59_110 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield break;", span="85-85"];
m59_112 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Name(text);", span="90-90"];
m59_113 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield break;", span="91-91"];
m59_115 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Name(first);", span="95-95"];
m59_121 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Name(n);", span="105-105"];
m59_123 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Value(text.Substring(seen.Count()));", span="114-114"];
m59_106 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="value.Length > 1 || value[0] == '-' || value[1] != '-'", span="78-78"];
m59_107 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var text = value.Substring(1)", span="80-80"];
m59_111 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="value.Length == 2", span="88-88"];
m59_119 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="!seen.Contains(c) && nameLookup(n)", span="102-102"];
m59_105 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="throw new ArgumentNullException(''value'');", span="75-75"];
m59_108 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="char.IsDigit(text[0])", span="82-82"];
m59_114 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var first = text.Substring(0, 1)", span="94-94"];
m59_117 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="text.Substring(1)", span="99-99"];
m59_122 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="seen.Count() < text.Length", span="112-112"];
m59_116 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var seen = new List<char> { first[0] }", span="97-97"];
m59_120 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="seen.Add(c)", span="104-104"];
m59_118 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var n = new string(c, 1)", span="101-101"];
m59_124 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="69-69"];
m59_9 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Tokenizer.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m59_89 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m59_130 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="Tokenizer.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m59_125 [cluster="string.Substring(int)", file="Tokenizer.cs", label="Entry string.Substring(int)", span="0-0"];
m59_151 [file="Tokenizer.cs", label=errors, span=""];
m59_152 [file="Tokenizer.cs", label=unkTokens, span=""];
m59_153 [file="Tokenizer.cs", label=values, span=""];
m59_154 [file="Tokenizer.cs", label="System.Func<string, CommandLine.Infrastructure.Maybe<char>>", span=""];
m59_155 [file="Tokenizer.cs", label=int, span=""];
m59_156 [file="Tokenizer.cs", label=replaces, span=""];
m59_157 [file="Tokenizer.cs", label=int, span=""];
m59_158 [file="Tokenizer.cs", label="CommandLine.Core.Token", span=""];
m60_10 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="TokenizerTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m60_12 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="TokenizerTests.cs", label="Entry CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="61-61"];
m60_20 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="40-40"];
m60_21 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="var expectedTokens = new[] { Token.Name(''x''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch''), }", span="43-44"];
m60_22 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, -1, -1, ',', null, typeof(IEnumerable<string>), string.Empty, string.Empty, new List<string>())}", span="45-46"];
m60_24 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="Assert.True(expectedTokens.SequenceEqual(result.Value))", span="58-58"];
m60_23 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    StatePair.Create(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''x''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.WithSeparator(optionName, specs, StringComparer.InvariantCulture))", span="49-55"];
m60_25 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="40-40"];
m60_19 [cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TokenizerTests.cs", label="Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="19-19"];
m60_15 [cluster="Unk.True", file="TokenizerTests.cs", label="Entry Unk.True", span=""];
m60_0 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="16-16"];
m60_1 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="var expectedTokens = new[] { Token.Name(''i''), Token.Value(''10''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch''), }", span="19-20"];
m60_2 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, -1, -1, ',', null, typeof(IEnumerable<string>), string.Empty, string.Empty, new List<string>())}", span="21-22"];
m60_4 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="Assert.True(expectedTokens.SequenceEqual(result.Value))", span="34-34"];
m60_3 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    StatePair.Create(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''i''), Token.Value(''10''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.WithSeparator(optionName, specs, StringComparer.InvariantCulture))", span="25-31"];
m60_5 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="16-16"];
m60_26 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="55-55"];
m60_17 [cluster="lambda expression", file="TokenizerTests.cs", label="NameLookup.WithSeparator(optionName, specs, StringComparer.InvariantCulture)", span="31-31"];
m60_16 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="31-31"];
m60_18 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="31-31"];
m60_27 [cluster="lambda expression", file="TokenizerTests.cs", label="NameLookup.WithSeparator(optionName, specs, StringComparer.InvariantCulture)", span="55-55"];
m60_28 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="55-55"];
m60_6 [cluster="CommandLine.Core.Token.Name(string)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m60_8 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="TokenizerTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17"];
m60_13 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="48-48"];
m60_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="TokenizerTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m60_7 [cluster="CommandLine.Core.Token.Value(string)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Token.Value(string)", span="26-26"];
m60_14 [cluster="Unk.SequenceEqual", file="TokenizerTests.cs", label="Entry Unk.SequenceEqual", span=""];
m60_9 [cluster="System.Collections.Generic.List<T>.List()", file="TokenizerTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m60_29 [file="TokenizerTests.cs", label=specs, span=""];
m60_30 [file="TokenizerTests.cs", label=specs, span=""];
m61_17 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="Entry CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", span="75-75"];
m61_18 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="var list = ReflectionUtil.RetrievePropertyList<BaseOptionAttribute>(target)", span="77-77"];
m61_21 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="var map = new OptionMap(list.Count, settings)", span="82-82"];
m61_25 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="map.RawOptions = target", span="90-90"];
m61_19 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="list == null", span="78-78"];
m61_22 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label=list, span="83-83"];
m61_20 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="return null;", span="80-80"];
m61_24 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="87-87"];
m61_26 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="return map;", span="91-91"];
m61_23 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="pair.Left != null && pair.Right != null", span="85-85"];
m61_27 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="Exit CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", span="75-75"];
m61_49 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="TokenPartitioner.cs", label="Entry CommandLine.Internal.OptionMap.SetDefaults()", span="156-156"];
m61_50 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="TokenPartitioner.cs", label="_map.Values", span="158-158"];
m61_51 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="TokenPartitioner.cs", label="option.SetDefault(RawOptions)", span="160-160"];
m61_52 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="TokenPartitioner.cs", label="Exit CommandLine.Internal.OptionMap.SetDefaults()", span="156-156"];
m61_30 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="Entry CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", span="94-94"];
m61_31 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="var map = new OptionMap(verbs.Count, settings)", span="97-97"];
m61_32 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label=verbs, span="98-98"];
m61_34 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="!optionInfo.HasParameterLessCtor && verb.Left.GetValue(target, null) == null", span="105-105"];
m61_37 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="map.RawOptions = target", span="112-112"];
m61_36 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="map[verb.Right.UniqueName] = optionInfo", span="110-110"];
m61_38 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="return map;", span="113-113"];
m61_33 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="var optionInfo = new OptionInfo(verb.Right, verb.Left)\r\n                {\r\n                    HasParameterLessCtor = verb.Left.PropertyType.GetConstructor(Type.EmptyTypes) != null\r\n\r\n                }", span="100-104"];
m61_35 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="throw new CommandLineParserException(''Type {0} must have a parameterless constructor or'' +\r\n                        '' be already initialized to be used as a verb command.''.FormatInvariant(verb.Left.PropertyType));", span="107-108"];
m61_39 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="Exit CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", span="94-94"];
m61_42 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="TokenPartitioner.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="54-54"];
m61_48 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="TokenPartitioner.cs", label="Entry CommandLine.Internal.OptionMap.EnforceRequiredRule()", span="164-164"];
m61_54 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="TokenPartitioner.cs", label="bool requiredRulesAllMet = true", span="166-166"];
m61_55 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="TokenPartitioner.cs", label="_map.Values", span="167-167"];
m61_59 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="TokenPartitioner.cs", label="return requiredRulesAllMet;", span="175-175"];
m61_56 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="TokenPartitioner.cs", label="option.Required && !option.IsDefined", span="169-169"];
m61_57 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="TokenPartitioner.cs", label="SetParserStateIfNeeded(RawOptions, option, true, null)", span="171-171"];
m61_58 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="TokenPartitioner.cs", label="requiredRulesAllMet = false", span="172-172"];
m61_60 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="TokenPartitioner.cs", label="Exit CommandLine.Internal.OptionMap.EnforceRequiredRule()", span="164-164"];
m61_28 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="TokenPartitioner.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38"];
m61_8 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="Entry CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="58-58"];
m61_9 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="_settings = settings", span="63-63"];
m61_11 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="_names = new Dictionary<string, string>(capacity, comparer)", span="67-67"];
m61_12 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="_map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="68-68"];
m61_14 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="_mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="71-71"];
m61_10 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="IEqualityComparer<string> comparer =\r\n                _settings.CaseSensitive ? StringComparer.Ordinal : StringComparer.OrdinalIgnoreCase", span="65-66"];
m61_13 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="_settings.MutuallyExclusive", span="69-69"];
m61_15 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="TokenPartitioner.cs", label="Exit CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="58-58"];
m61_98 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="TokenPartitioner.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m61_79 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m61_2 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="TokenPartitioner.cs", label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", span="43-43"];
m61_3 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="TokenPartitioner.cs", label="BadOption = option", span="45-45"];
m61_4 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="TokenPartitioner.cs", label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", span="43-43"];
m61_73 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="TokenPartitioner.cs", label="Entry CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", span="202-202"];
m61_74 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="TokenPartitioner.cs", label="var setName = option.MutuallyExclusiveSet", span="204-204"];
m61_76 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="TokenPartitioner.cs", label="_mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="207-207"];
m61_75 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="TokenPartitioner.cs", label="!_mutuallyExclusiveSetMap.ContainsKey(setName)", span="205-205"];
m61_77 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="TokenPartitioner.cs", label="_mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="209-209"];
m61_78 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="TokenPartitioner.cs", label="Exit CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", span="202-202"];
m61_61 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="TokenPartitioner.cs", label="Entry CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", span="212-212"];
m61_81 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="TokenPartitioner.cs", label="var list = ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(options)", span="214-214"];
m61_85 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="TokenPartitioner.cs", label="property.GetValue(options, null) == null", span="221-221"];
m61_86 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="TokenPartitioner.cs", label="property.SetValue(options, new CommandLine.ParserState(), null)", span="223-223"];
m61_87 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="TokenPartitioner.cs", label="var parserState = (IParserState)property.GetValue(options, null)", span="225-225"];
m61_90 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="TokenPartitioner.cs", label="var error = new ParsingError\r\n                {\r\n                    BadOption =\r\n                        {\r\n                            ShortName = option.ShortName,\r\n                            LongName = option.LongName\r\n                        }\r\n                }", span="230-237"];
m61_91 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="TokenPartitioner.cs", label="required != null", span="238-238"];
m61_92 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="TokenPartitioner.cs", label="error.ViolatesRequired = required.Value", span="238-238"];
m61_93 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="TokenPartitioner.cs", label="mutualExclusiveness != null", span="239-239"];
m61_94 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="TokenPartitioner.cs", label="error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="239-239"];
m61_82 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="TokenPartitioner.cs", label="list.Count == 0", span="215-215"];
m61_84 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="TokenPartitioner.cs", label="var property = list[0].Left", span="219-219"];
m61_83 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="TokenPartitioner.cs", label="return;", span="217-217"];
m61_88 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="TokenPartitioner.cs", label="parserState == null", span="226-226"];
m61_95 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="TokenPartitioner.cs", label="parserState.Errors.Add(error)", span="240-240"];
m61_89 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="TokenPartitioner.cs", label="return;", span="228-228"];
m61_96 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="TokenPartitioner.cs", label="Exit CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", span="212-212"];
m61_29 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="TokenPartitioner.cs", label="Entry CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", span="45-45"];
m61_44 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="TokenPartitioner.cs", label="Entry CommandLine.Internal.OptionMap.EnforceRules()", span="151-151"];
m61_45 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="TokenPartitioner.cs", label="return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="153-153"];
m61_46 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="TokenPartitioner.cs", label="Exit CommandLine.Internal.OptionMap.EnforceRules()", span="151-151"];
m61_100 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m61_0 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", file="TokenPartitioner.cs", label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", span="41-41"];
m61_1 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", file="TokenPartitioner.cs", label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", span="41-41"];
m61_40 [cluster="System.Type.GetConstructor(System.Type[])", file="TokenPartitioner.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m61_47 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="TokenPartitioner.cs", label="Entry CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", span="178-178"];
m61_62 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="TokenPartitioner.cs", label="!_settings.MutuallyExclusive", span="180-180"];
m61_63 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="TokenPartitioner.cs", label="return true;", span="182-182"];
m61_64 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="TokenPartitioner.cs", label="_map.Values", span="184-184"];
m61_65 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="TokenPartitioner.cs", label="option.IsDefined && option.MutuallyExclusiveSet != null", span="186-186"];
m61_67 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="TokenPartitioner.cs", label="_mutuallyExclusiveSetMap.Values", span="191-191"];
m61_66 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="TokenPartitioner.cs", label="BuildMutuallyExclusiveMap(option)", span="188-188"];
m61_68 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="TokenPartitioner.cs", label="info.Occurrence > 1", span="193-193"];
m61_71 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="TokenPartitioner.cs", label="return true;", span="199-199"];
m61_69 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="TokenPartitioner.cs", label="SetParserStateIfNeeded(RawOptions, info.BadOption, null, true)", span="195-195"];
m61_70 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="TokenPartitioner.cs", label="return false;", span="196-196"];
m61_72 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="TokenPartitioner.cs", label="Exit CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", span="178-178"];
m61_53 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="TokenPartitioner.cs", label="Entry CommandLine.Internal.OptionInfo.SetDefault(object)", span="127-127"];
m61_97 [cluster="CommandLine.ParserState.ParserState()", file="TokenPartitioner.cs", label="Entry CommandLine.ParserState.ParserState()", span="39-39"];
m61_99 [cluster="CommandLine.ParsingError.ParsingError()", file="TokenPartitioner.cs", label="Entry CommandLine.ParsingError.ParsingError()", span="36-36"];
m61_43 [cluster="string.FormatInvariant(params object[])", file="TokenPartitioner.cs", label="Entry string.FormatInvariant(params object[])", span="50-50"];
m61_41 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="TokenPartitioner.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m61_80 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m61_5 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="TokenPartitioner.cs", label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="50-50"];
m61_6 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="TokenPartitioner.cs", label="++_count", span="50-50"];
m61_7 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="TokenPartitioner.cs", label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="50-50"];
m61_16 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m61_101 [file="TokenPartitioner.cs", label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo", span=""];
m61_102 [file="TokenPartitioner.cs", label="CommandLine.Internal.OptionMap", span=""];
m62_4 [cluster="CommandLine.Parser.FormatCommandLine<T>(T)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Parser.FormatCommandLine<T>(T)", span="17-17"];
m62_0 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", span="21-21"];
m62_1 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", file="TokenPartitionerTests.cs", label="new Parser()\r                .FormatCommandLine(options)\r                .ShouldBeEquivalentTo(result)", span="23-25"];
m62_2 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", file="TokenPartitionerTests.cs", label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", span="21-21"];
m62_5 [cluster="Unk.ShouldBeEquivalentTo", file="TokenPartitionerTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m62_3 [cluster="CommandLine.Parser.Parser()", file="TokenPartitionerTests.cs", label="Entry CommandLine.Parser.Parser()", span="26-26"];
m66_0 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="Entry CommandLine.ValueAttribute.ValueAttribute(int)", span="21-21"];
m66_1 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="this.index = index", span="23-23"];
m66_2 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="this.min = -1", span="24-24"];
m66_3 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="this.max = -1", span="25-25"];
m66_4 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="Exit CommandLine.ValueAttribute.ValueAttribute(int)", span="21-21"];
m66_5 [file="ValueAttribute.cs", label="CommandLine.ValueAttribute", span=""];
m67_0 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="ValueMapper.cs", label="Entry CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", span="8-8"];
m67_1 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="ValueMapper.cs", label="StringValue = stringValue", span="10-10"];
m67_2 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="ValueMapper.cs", label="IntSequence = intSequence", span="11-11"];
m67_3 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="ValueMapper.cs", label="BoolValue = boolValue", span="12-12"];
m67_4 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="ValueMapper.cs", label="LongValue = longValue", span="13-13"];
m67_5 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="ValueMapper.cs", label="Exit CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", span="8-8"];
m67_6 [file="ValueMapper.cs", label="CommandLine.Tests.Fakes.FakeImmutableOptions", span=""];
m68_0 [cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="ValueSpecification.cs", label="Entry CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="11-11"];
m68_1 [cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="ValueSpecification.cs", label="this.index = index", span="14-14"];
m68_2 [cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="ValueSpecification.cs", label="Exit CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="11-11"];
m68_3 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="ValueSpecification.cs", label="Entry CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="17-17"];
m68_4 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="ValueSpecification.cs", label="return new ValueSpecification(\r\n                attribute.Index,\r\n                attribute.Required,\r\n                attribute.Min,\r\n                attribute.Max,\r\n                attribute.DefaultValue.ToMaybe(),\r\n                conversionType);", span="19-25"];
m68_5 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="ValueSpecification.cs", label="Exit CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="17-17"];
m68_6 [cluster="T.ToMaybe<T>()", file="ValueSpecification.cs", label="Entry T.ToMaybe<T>()", span="82-82"];
m68_7 [file="ValueSpecification.cs", label="CommandLine.Core.ValueSpecification", span=""];
m69_9 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="Verb.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m69_20 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="Verb.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="32-32"];
m69_21 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="Verb.cs", label="return type.FullName.StartsWith(\r\n                ''Microsoft.FSharp.Core.FSharpOption`1'', StringComparison.Ordinal);", span="34-35"];
m69_22 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="Verb.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="32-32"];
m69_1 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="Verb.cs", label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="12-12"];
m69_0 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="Verb.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="9-9"];
m69_2 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="Verb.cs", label="var attributes = assembly.GetCustomAttributes(typeof(TAttribute), false)", span="13-13"];
m69_3 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="Verb.cs", label="return attributes.Length > 0\r\n                ? Maybe.Just((TAttribute)attributes[0])\r\n                : Maybe.Nothing<TAttribute>();", span="15-17"];
m69_4 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="Verb.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="9-9"];
m69_8 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="Verb.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
m69_7 [cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="Verb.cs", label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0"];
m69_6 [cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="Verb.cs", label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0"];
m69_5 [cluster="System.Reflection.Assembly.GetEntryAssembly()", file="Verb.cs", label="Entry System.Reflection.Assembly.GetEntryAssembly()", span="0-0"];
m69_14 [cluster="System.Reflection.Assembly.GetName()", file="Verb.cs", label="Entry System.Reflection.Assembly.GetName()", span="0-0"];
m69_16 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="Verb.cs", label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="28-28"];
m69_15 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="Verb.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", span="26-26"];
m69_17 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="Verb.cs", label="return assembly.GetName().Version.ToStringInvariant();", span="29-29"];
m69_18 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="Verb.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", span="26-26"];
m69_19 [cluster="T.ToStringInvariant<T>()", file="Verb.cs", label="Entry T.ToStringInvariant<T>()", span="14-14"];
m69_23 [cluster="string.StartsWith(string, System.StringComparison)", file="Verb.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m69_11 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="Verb.cs", label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="22-22"];
m69_10 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="Verb.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="20-20"];
m69_12 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="Verb.cs", label="return assembly.GetName().Name;", span="23-23"];
m69_13 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="Verb.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="20-20"];
m70_6 [cluster="System.ArgumentException.ArgumentException(string)", file="VerbAttribute.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m70_5 [cluster="string.IsNullOrWhiteSpace(string)", file="VerbAttribute.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m70_0 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="VerbAttribute.cs", label="Entry CommandLine.VerbAttribute.VerbAttribute(string)", span="20-20"];
m70_1 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="VerbAttribute.cs", label="string.IsNullOrWhiteSpace(name)", span="22-22"];
m70_3 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="VerbAttribute.cs", label="this.name = name", span="24-24"];
m70_2 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="VerbAttribute.cs", label="throw new ArgumentException(''name'');", span="22-22"];
m70_4 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="VerbAttribute.cs", label="Exit CommandLine.VerbAttribute.VerbAttribute(string)", span="20-20"];
m70_7 [file="VerbAttribute.cs", label="CommandLine.VerbAttribute", span=""];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_7  [color=green, key=2, style=dotted];
m0_1 -> m0_3  [color=green, key=1, label=ae, style=dashed];
m0_1 -> m0_5  [color=green, key=1, label=ae, style=dashed];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_8  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_9  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_11  [key=2, style=dotted];
m0_5 -> m0_12  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_10  [key=2, style=dotted];
m0_6 -> m0_0  [color=blue, key=0, style=bold];
m0_13 -> m0_4  [color=darkseagreen4, key=1, label="CommandLine.Tests.Unit.Infrastructure.ArgumentParserFixture", style=dashed];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_8  [color=blue, key=0, style=bold];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_2  [color=blue, key=0, style=bold];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_6  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [color=blue, key=0, style=bold];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_4  [color=blue, key=0, style=bold];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_42  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_9  [key=2, style=dotted];
m2_41 -> m2_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_35  [key=2, style=dotted];
m2_42 -> m2_11  [key=2, style=dotted];
m2_43 -> m2_40  [color=blue, key=0, style=bold];
m2_306 -> m2_307  [key=0, style=solid];
m2_306 -> m2_308  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent", style=dashed];
m2_307 -> m2_308  [key=0, style=solid];
m2_307 -> m2_9  [key=2, style=dotted];
m2_307 -> m2_310  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_308 -> m2_309  [key=0, style=solid];
m2_308 -> m2_104  [key=2, style=dotted];
m2_309 -> m2_306  [color=blue, key=0, style=bold];
m2_159 -> m2_160  [key=0, style=solid];
m2_159 -> m2_161  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_160 -> m2_161  [key=0, style=solid];
m2_160 -> m2_9  [key=2, style=dotted];
m2_160 -> m2_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_161 -> m2_162  [key=0, style=solid];
m2_161 -> m2_104  [key=2, style=dotted];
m2_162 -> m2_159  [color=blue, key=0, style=bold];
m2_233 -> m2_234  [key=0, style=solid];
m2_234 -> m2_235  [key=0, style=solid];
m2_234 -> m2_78  [key=2, style=dotted];
m2_234 -> m2_69  [key=2, style=dotted];
m2_234 -> m2_236  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_235 -> m2_236  [key=0, style=solid];
m2_235 -> m2_9  [key=2, style=dotted];
m2_235 -> m2_238  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_236 -> m2_237  [key=0, style=solid];
m2_236 -> m2_35  [key=2, style=dotted];
m2_236 -> m2_11  [key=2, style=dotted];
m2_237 -> m2_233  [color=blue, key=0, style=bold];
m2_274 -> m2_275  [key=0, style=solid];
m2_275 -> m2_276  [key=0, style=solid];
m2_275 -> m2_220  [key=2, style=dotted];
m2_275 -> m2_277  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_276 -> m2_277  [key=0, style=solid];
m2_276 -> m2_9  [key=2, style=dotted];
m2_276 -> m2_279  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_277 -> m2_278  [key=0, style=solid];
m2_277 -> m2_35  [key=2, style=dotted];
m2_277 -> m2_11  [key=2, style=dotted];
m2_278 -> m2_274  [color=blue, key=0, style=bold];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_153  [color=darkseagreen4, key=1, label="long[]", style=dashed];
m2_152 -> m2_153  [key=0, style=solid];
m2_152 -> m2_9  [key=2, style=dotted];
m2_152 -> m2_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_104  [key=2, style=dotted];
m2_154 -> m2_151  [color=blue, key=0, style=bold];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_145  [color=darkseagreen4, key=1, label="long[]", style=dashed];
m2_144 -> m2_145  [key=0, style=solid];
m2_144 -> m2_9  [key=2, style=dotted];
m2_144 -> m2_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_104  [key=2, style=dotted];
m2_146 -> m2_143  [color=blue, key=0, style=bold];
m2_241 -> m2_242  [key=0, style=solid];
m2_242 -> m2_243  [key=0, style=solid];
m2_242 -> m2_246  [key=2, style=dotted];
m2_242 -> m2_244  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_243 -> m2_244  [key=0, style=solid];
m2_243 -> m2_9  [key=2, style=dotted];
m2_243 -> m2_247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_244 -> m2_245  [key=0, style=solid];
m2_244 -> m2_35  [key=2, style=dotted];
m2_244 -> m2_11  [key=2, style=dotted];
m2_245 -> m2_241  [color=blue, key=0, style=bold];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_57  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_9  [key=2, style=dotted];
m2_56 -> m2_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_35  [key=2, style=dotted];
m2_57 -> m2_11  [key=2, style=dotted];
m2_58 -> m2_55  [color=blue, key=0, style=bold];
m2_266 -> m2_267  [key=0, style=solid];
m2_266 -> m2_268  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_267 -> m2_268  [key=0, style=solid];
m2_267 -> m2_9  [key=2, style=dotted];
m2_267 -> m2_271  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_268 -> m2_269  [key=0, style=solid];
m2_268 -> m2_270  [key=2, style=dotted];
m2_268 -> m2_11  [key=2, style=dotted];
m2_269 -> m2_266  [color=blue, key=0, style=bold];
m2_314 -> m2_315  [key=0, style=solid];
m2_314 -> m2_316  [color=darkseagreen4, key=1, label="int?", style=dashed];
m2_315 -> m2_316  [key=0, style=solid];
m2_315 -> m2_318  [key=2, style=dotted];
m2_315 -> m2_319  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_316 -> m2_317  [key=0, style=solid];
m2_316 -> m2_104  [key=2, style=dotted];
m2_317 -> m2_314  [color=blue, key=0, style=bold];
m2_207 -> m2_208  [key=0, style=solid];
m2_208 -> m2_209  [key=0, style=solid];
m2_208 -> m2_203  [key=2, style=dotted];
m2_208 -> m2_210  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_209 -> m2_210  [key=0, style=solid];
m2_209 -> m2_9  [key=2, style=dotted];
m2_209 -> m2_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_210 -> m2_211  [key=0, style=solid];
m2_210 -> m2_104  [key=2, style=dotted];
m2_211 -> m2_207  [color=blue, key=0, style=bold];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_33  [color=red, key=1, label="int[]", style=dashed];
m2_32 -> m2_33  [color=red, key=0, style=solid];
m2_32 -> m2_9  [key=2, style=dotted];
m2_32 -> m2_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_33 -> m2_34  [color=red, key=0, style=solid];
m2_33 -> m2_35  [color=red, key=2, style=dotted];
m2_33 -> m2_11  [color=red, key=2, style=dotted];
m2_34 -> m2_31  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_6  [key=2, style=dotted];
m2_1 -> m2_3  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m2_1 -> m2_13  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_7  [key=2, style=dotted];
m2_2 -> m2_8  [key=2, style=dotted];
m2_2 -> m2_4  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_9  [key=2, style=dotted];
m2_3 -> m2_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_10  [key=2, style=dotted];
m2_4 -> m2_11  [key=2, style=dotted];
m2_5 -> m2_0  [color=blue, key=0, style=bold];
m2_224 -> m2_225  [key=0, style=solid];
m2_225 -> m2_226  [key=0, style=solid];
m2_225 -> m2_220  [key=2, style=dotted];
m2_225 -> m2_69  [key=2, style=dotted];
m2_225 -> m2_227  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_226 -> m2_227  [key=0, style=solid];
m2_226 -> m2_9  [key=2, style=dotted];
m2_226 -> m2_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_227 -> m2_228  [key=0, style=solid];
m2_227 -> m2_35  [key=2, style=dotted];
m2_227 -> m2_11  [key=2, style=dotted];
m2_228 -> m2_224  [color=blue, key=0, style=bold];
m2_290 -> m2_291  [key=0, style=solid];
m2_291 -> m2_292  [key=0, style=solid];
m2_291 -> m2_78  [key=2, style=dotted];
m2_291 -> m2_293  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_292 -> m2_293  [key=0, style=solid];
m2_292 -> m2_9  [key=2, style=dotted];
m2_292 -> m2_295  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_293 -> m2_294  [key=0, style=solid];
m2_293 -> m2_35  [key=2, style=dotted];
m2_293 -> m2_11  [key=2, style=dotted];
m2_294 -> m2_290  [color=blue, key=0, style=bold];
m2_319 -> m2_320  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_12 -> m2_13  [key=0, style=solid];
m2_14 -> m2_12  [color=blue, key=0, style=bold];
m2_20 -> m2_21  [key=0, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_6  [key=2, style=dotted];
m2_22 -> m2_20  [color=blue, key=0, style=bold];
m2_27 -> m2_28  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_30  [key=2, style=dotted];
m2_29 -> m2_27  [color=blue, key=0, style=bold];
m2_36 -> m2_37  [key=0, style=solid];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_39  [key=2, style=dotted];
m2_38 -> m2_36  [color=blue, key=0, style=bold];
m2_44 -> m2_45  [key=0, style=solid];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_6  [key=2, style=dotted];
m2_46 -> m2_44  [color=blue, key=0, style=bold];
m2_51 -> m2_52  [key=0, style=solid];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_54  [key=2, style=dotted];
m2_53 -> m2_51  [color=blue, key=0, style=bold];
m2_59 -> m2_60  [key=0, style=solid];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_62  [key=2, style=dotted];
m2_61 -> m2_59  [color=blue, key=0, style=bold];
m2_70 -> m2_71  [key=0, style=solid];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_54  [key=2, style=dotted];
m2_72 -> m2_70  [color=blue, key=0, style=bold];
m2_79 -> m2_80  [key=0, style=solid];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_82  [key=2, style=dotted];
m2_81 -> m2_79  [color=blue, key=0, style=bold];
m2_88 -> m2_89  [key=0, style=solid];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_62  [key=2, style=dotted];
m2_90 -> m2_88  [color=blue, key=0, style=bold];
m2_96 -> m2_97  [key=0, style=solid];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_99  [key=2, style=dotted];
m2_98 -> m2_96  [color=blue, key=0, style=bold];
m2_105 -> m2_106  [key=0, style=solid];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_108  [key=2, style=dotted];
m2_107 -> m2_105  [color=blue, key=0, style=bold];
m2_115 -> m2_116  [key=0, style=solid];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_108  [key=2, style=dotted];
m2_117 -> m2_115  [color=blue, key=0, style=bold];
m2_123 -> m2_124  [key=0, style=solid];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_108  [key=2, style=dotted];
m2_125 -> m2_123  [color=blue, key=0, style=bold];
m2_131 -> m2_132  [key=0, style=solid];
m2_132 -> m2_133  [key=0, style=solid];
m2_132 -> m2_108  [key=2, style=dotted];
m2_133 -> m2_131  [color=blue, key=0, style=bold];
m2_140 -> m2_141  [key=0, style=solid];
m2_141 -> m2_142  [key=0, style=solid];
m2_141 -> m2_139  [key=2, style=dotted];
m2_142 -> m2_140  [color=blue, key=0, style=bold];
m2_147 -> m2_148  [key=0, style=solid];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_150  [key=2, style=dotted];
m2_149 -> m2_147  [color=blue, key=0, style=bold];
m2_155 -> m2_156  [key=0, style=solid];
m2_156 -> m2_157  [key=0, style=solid];
m2_156 -> m2_158  [key=2, style=dotted];
m2_157 -> m2_155  [color=blue, key=0, style=bold];
m2_163 -> m2_164  [key=0, style=solid];
m2_164 -> m2_165  [key=0, style=solid];
m2_164 -> m2_158  [key=2, style=dotted];
m2_165 -> m2_163  [color=blue, key=0, style=bold];
m2_173 -> m2_174  [key=0, style=solid];
m2_176 -> m2_177  [key=0, style=solid];
m2_176 -> m2_181  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m2_176 -> m2_185  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m2_174 -> m2_175  [key=0, style=solid];
m2_174 -> m2_139  [key=2, style=dotted];
m2_175 -> m2_173  [color=blue, key=0, style=bold];
m2_177 -> m2_178  [key=0, style=solid];
m2_177 -> m2_179  [key=2, style=dotted];
m2_177 -> m2_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_181 -> m2_182  [key=0, style=solid];
m2_181 -> m2_183  [key=2, style=dotted];
m2_181 -> m2_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_185 -> m2_186  [key=0, style=solid];
m2_185 -> m2_187  [key=2, style=dotted];
m2_178 -> m2_176  [color=blue, key=0, style=bold];
m2_180 -> m2_181  [key=0, style=solid];
m2_182 -> m2_180  [color=blue, key=0, style=bold];
m2_184 -> m2_185  [key=0, style=solid];
m2_186 -> m2_184  [color=blue, key=0, style=bold];
m2_194 -> m2_195  [key=0, style=solid];
m2_195 -> m2_196  [key=0, style=solid];
m2_195 -> m2_197  [key=2, style=dotted];
m2_196 -> m2_194  [color=blue, key=0, style=bold];
m2_204 -> m2_205  [key=0, style=solid];
m2_205 -> m2_206  [key=0, style=solid];
m2_205 -> m2_203  [key=2, style=dotted];
m2_206 -> m2_204  [color=blue, key=0, style=bold];
m2_212 -> m2_213  [key=0, style=solid];
m2_213 -> m2_214  [key=0, style=solid];
m2_213 -> m2_203  [key=2, style=dotted];
m2_214 -> m2_212  [color=blue, key=0, style=bold];
m2_221 -> m2_222  [key=0, style=solid];
m2_222 -> m2_223  [key=0, style=solid];
m2_222 -> m2_203  [key=2, style=dotted];
m2_223 -> m2_221  [color=blue, key=0, style=bold];
m2_229 -> m2_230  [key=0, style=solid];
m2_230 -> m2_231  [key=0, style=solid];
m2_230 -> m2_232  [key=2, style=dotted];
m2_231 -> m2_229  [color=blue, key=0, style=bold];
m2_238 -> m2_239  [key=0, style=solid];
m2_239 -> m2_240  [key=0, style=solid];
m2_239 -> m2_6  [key=2, style=dotted];
m2_240 -> m2_238  [color=blue, key=0, style=bold];
m2_247 -> m2_248  [key=0, style=solid];
m2_248 -> m2_249  [key=0, style=solid];
m2_248 -> m2_6  [key=2, style=dotted];
m2_249 -> m2_247  [color=blue, key=0, style=bold];
m2_255 -> m2_256  [key=0, style=solid];
m2_256 -> m2_257  [key=0, style=solid];
m2_256 -> m2_6  [key=2, style=dotted];
m2_257 -> m2_255  [color=blue, key=0, style=bold];
m2_263 -> m2_264  [key=0, style=solid];
m2_264 -> m2_265  [key=0, style=solid];
m2_264 -> m2_6  [key=2, style=dotted];
m2_265 -> m2_263  [color=blue, key=0, style=bold];
m2_271 -> m2_272  [key=0, style=solid];
m2_272 -> m2_273  [key=0, style=solid];
m2_272 -> m2_6  [key=2, style=dotted];
m2_273 -> m2_271  [color=blue, key=0, style=bold];
m2_279 -> m2_280  [key=0, style=solid];
m2_280 -> m2_281  [key=0, style=solid];
m2_280 -> m2_282  [key=2, style=dotted];
m2_281 -> m2_279  [color=blue, key=0, style=bold];
m2_287 -> m2_288  [key=0, style=solid];
m2_288 -> m2_289  [key=0, style=solid];
m2_288 -> m2_6  [key=2, style=dotted];
m2_289 -> m2_287  [color=blue, key=0, style=bold];
m2_295 -> m2_296  [key=0, style=solid];
m2_296 -> m2_297  [key=0, style=solid];
m2_296 -> m2_298  [key=2, style=dotted];
m2_297 -> m2_295  [color=blue, key=0, style=bold];
m2_303 -> m2_304  [key=0, style=solid];
m2_304 -> m2_305  [key=0, style=solid];
m2_304 -> m2_282  [key=2, style=dotted];
m2_305 -> m2_303  [color=blue, key=0, style=bold];
m2_310 -> m2_311  [key=0, style=solid];
m2_311 -> m2_312  [key=0, style=solid];
m2_311 -> m2_313  [key=2, style=dotted];
m2_312 -> m2_310  [color=blue, key=0, style=bold];
m2_320 -> m2_321  [key=0, style=solid];
m2_320 -> m2_322  [key=2, style=dotted];
m2_321 -> m2_319  [color=blue, key=0, style=bold];
m2_215 -> m2_216  [key=0, style=solid];
m2_216 -> m2_217  [key=0, style=solid];
m2_216 -> m2_220  [key=2, style=dotted];
m2_216 -> m2_69  [key=2, style=dotted];
m2_216 -> m2_218  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_217 -> m2_218  [key=0, style=solid];
m2_217 -> m2_9  [key=2, style=dotted];
m2_217 -> m2_221  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_218 -> m2_219  [key=0, style=solid];
m2_218 -> m2_35  [key=2, style=dotted];
m2_218 -> m2_11  [key=2, style=dotted];
m2_219 -> m2_215  [color=blue, key=0, style=bold];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_102  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Colors", style=dashed];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_9  [key=2, style=dotted];
m2_101 -> m2_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_104  [key=2, style=dotted];
m2_102 -> m2_102  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Colors", style=dashed];
m2_103 -> m2_100  [color=blue, key=0, style=bold];
m2_126 -> m2_127  [key=0, style=solid];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_114  [key=2, style=dotted];
m2_127 -> m2_69  [key=2, style=dotted];
m2_127 -> m2_129  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_9  [key=2, style=dotted];
m2_128 -> m2_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_129 -> m2_130  [key=0, style=solid];
m2_129 -> m2_35  [key=2, style=dotted];
m2_129 -> m2_11  [key=2, style=dotted];
m2_130 -> m2_126  [color=blue, key=0, style=bold];
m2_166 -> m2_167  [key=0, style=solid];
m2_167 -> m2_168  [key=0, style=solid];
m2_167 -> m2_139  [key=2, style=dotted];
m2_167 -> m2_170  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_168 -> m2_169  [key=0, style=solid];
m2_170 -> m2_171  [key=0, style=solid];
m2_170 -> m2_104  [key=2, style=dotted];
m2_169 -> m2_170  [key=0, style=solid];
m2_169 -> m2_172  [key=2, style=dotted];
m2_169 -> m2_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_169 -> m2_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_171 -> m2_166  [color=blue, key=0, style=bold];
m2_83 -> m2_84  [key=0, style=solid];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_78  [key=2, style=dotted];
m2_84 -> m2_69  [key=2, style=dotted];
m2_84 -> m2_86  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_9  [key=2, style=dotted];
m2_85 -> m2_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_35  [key=2, style=dotted];
m2_86 -> m2_11  [key=2, style=dotted];
m2_87 -> m2_83  [color=blue, key=0, style=bold];
m2_299 -> m2_300  [key=0, style=solid];
m2_299 -> m2_301  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue", style=dashed];
m2_300 -> m2_301  [key=0, style=solid];
m2_300 -> m2_9  [key=2, style=dotted];
m2_300 -> m2_303  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_301 -> m2_302  [key=0, style=solid];
m2_301 -> m2_104  [key=2, style=dotted];
m2_302 -> m2_299  [color=blue, key=0, style=bold];
m2_258 -> m2_259  [key=0, style=solid];
m2_259 -> m2_260  [key=0, style=solid];
m2_259 -> m2_246  [key=2, style=dotted];
m2_259 -> m2_261  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_260 -> m2_261  [key=0, style=solid];
m2_260 -> m2_9  [key=2, style=dotted];
m2_260 -> m2_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_261 -> m2_262  [key=0, style=solid];
m2_261 -> m2_35  [key=2, style=dotted];
m2_261 -> m2_11  [key=2, style=dotted];
m2_262 -> m2_258  [color=blue, key=0, style=bold];
m2_63 -> m2_64  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_68  [key=2, style=dotted];
m2_64 -> m2_69  [key=2, style=dotted];
m2_64 -> m2_66  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_9  [key=2, style=dotted];
m2_65 -> m2_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_35  [key=2, style=dotted];
m2_66 -> m2_11  [key=2, style=dotted];
m2_67 -> m2_63  [color=blue, key=0, style=bold];
m2_134 -> m2_135  [key=0, style=solid];
m2_135 -> m2_136  [key=0, style=solid];
m2_135 -> m2_139  [key=2, style=dotted];
m2_135 -> m2_137  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_136 -> m2_137  [key=0, style=solid];
m2_136 -> m2_9  [key=2, style=dotted];
m2_136 -> m2_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_104  [key=2, style=dotted];
m2_138 -> m2_134  [color=blue, key=0, style=bold];
m2_283 -> m2_284  [key=0, style=solid];
m2_283 -> m2_285  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_284 -> m2_285  [key=0, style=solid];
m2_284 -> m2_9  [key=2, style=dotted];
m2_284 -> m2_287  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_285 -> m2_286  [key=0, style=solid];
m2_285 -> m2_104  [key=2, style=dotted];
m2_286 -> m2_283  [color=blue, key=0, style=bold];
m2_73 -> m2_74  [key=0, style=solid];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_78  [key=2, style=dotted];
m2_74 -> m2_76  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_9  [key=2, style=dotted];
m2_75 -> m2_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_35  [key=2, style=dotted];
m2_76 -> m2_11  [key=2, style=dotted];
m2_77 -> m2_73  [color=blue, key=0, style=bold];
m2_91 -> m2_92  [key=0, style=solid];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_78  [key=2, style=dotted];
m2_92 -> m2_94  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_9  [key=2, style=dotted];
m2_93 -> m2_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_35  [key=2, style=dotted];
m2_94 -> m2_11  [key=2, style=dotted];
m2_95 -> m2_91  [color=blue, key=0, style=bold];
m2_198 -> m2_199  [key=0, style=solid];
m2_199 -> m2_200  [key=0, style=solid];
m2_199 -> m2_203  [key=2, style=dotted];
m2_199 -> m2_201  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_200 -> m2_201  [key=0, style=solid];
m2_200 -> m2_9  [key=2, style=dotted];
m2_200 -> m2_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_201 -> m2_202  [key=0, style=solid];
m2_201 -> m2_104  [key=2, style=dotted];
m2_202 -> m2_198  [color=blue, key=0, style=bold];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_49  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_9  [key=2, style=dotted];
m2_48 -> m2_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_35  [key=2, style=dotted];
m2_49 -> m2_11  [key=2, style=dotted];
m2_50 -> m2_47  [color=blue, key=0, style=bold];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_17  [color=darkseagreen4, key=1, label=long, style=dashed];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_9  [key=2, style=dotted];
m2_16 -> m2_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [key=2, style=dotted];
m2_18 -> m2_15  [color=blue, key=0, style=bold];
m2_250 -> m2_251  [key=0, style=solid];
m2_251 -> m2_252  [key=0, style=solid];
m2_251 -> m2_246  [key=2, style=dotted];
m2_251 -> m2_253  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_252 -> m2_253  [key=0, style=solid];
m2_252 -> m2_9  [key=2, style=dotted];
m2_252 -> m2_255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_253 -> m2_254  [key=0, style=solid];
m2_253 -> m2_35  [key=2, style=dotted];
m2_253 -> m2_11  [key=2, style=dotted];
m2_254 -> m2_250  [color=blue, key=0, style=bold];
m2_118 -> m2_119  [key=0, style=solid];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_114  [key=2, style=dotted];
m2_119 -> m2_69  [key=2, style=dotted];
m2_119 -> m2_121  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_9  [key=2, style=dotted];
m2_120 -> m2_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_35  [key=2, style=dotted];
m2_121 -> m2_11  [key=2, style=dotted];
m2_122 -> m2_118  [color=blue, key=0, style=bold];
m2_109 -> m2_110  [key=0, style=solid];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_114  [key=2, style=dotted];
m2_110 -> m2_69  [key=2, style=dotted];
m2_110 -> m2_112  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_9  [key=2, style=dotted];
m2_111 -> m2_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_35  [key=2, style=dotted];
m2_112 -> m2_11  [key=2, style=dotted];
m2_113 -> m2_109  [color=blue, key=0, style=bold];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_25  [color=darkseagreen4, key=1, label=double, style=dashed];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_9  [key=2, style=dotted];
m2_24 -> m2_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_19  [key=2, style=dotted];
m2_26 -> m2_23  [color=blue, key=0, style=bold];
m2_188 -> m2_189  [key=0, style=solid];
m2_189 -> m2_190  [key=0, style=solid];
m2_189 -> m2_193  [key=2, style=dotted];
m2_189 -> m2_69  [key=2, style=dotted];
m2_189 -> m2_191  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_190 -> m2_191  [key=0, style=solid];
m2_190 -> m2_9  [key=2, style=dotted];
m2_190 -> m2_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_191 -> m2_192  [key=0, style=solid];
m2_191 -> m2_35  [key=2, style=dotted];
m2_191 -> m2_11  [key=2, style=dotted];
m2_192 -> m2_188  [color=blue, key=0, style=bold];
m2_323 -> m2_13  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m2_324 -> m2_181  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m2_324 -> m2_185  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m22_34 -> m22_35  [key=0, style=solid];
m22_34 -> m22_37  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m22_34 -> m22_39  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_34 -> m22_42  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_34 -> m22_43  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m22_34 -> m22_47  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m22_34 -> m22_50  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m22_35 -> m22_36  [key=0, style=solid];
m22_35 -> m22_37  [key=0, style=solid];
m22_35 -> m22_8  [key=2, style=dotted];
m22_37 -> m22_38  [key=0, style=solid];
m22_37 -> m22_39  [key=0, style=solid];
m22_39 -> m22_40  [key=0, style=solid];
m22_39 -> m22_30  [key=2, style=dotted];
m22_39 -> m22_41  [color=darkseagreen4, key=1, label=builder, style=dashed];
m22_39 -> m22_42  [color=darkseagreen4, key=1, label=builder, style=dashed];
m22_39 -> m22_43  [color=darkseagreen4, key=1, label=builder, style=dashed];
m22_42 -> m22_43  [key=0, style=solid];
m22_42 -> m22_31  [key=2, style=dotted];
m22_43 -> m22_44  [key=0, style=solid];
m22_43 -> m22_33  [key=2, style=dotted];
m22_43 -> m22_46  [key=2, style=dotted];
m22_36 -> m22_44  [key=0, style=solid];
m22_36 -> m22_9  [key=2, style=dotted];
m22_38 -> m22_44  [key=0, style=solid];
m22_38 -> m22_45  [key=2, style=dotted];
m22_40 -> m22_41  [key=0, style=solid];
m22_40 -> m22_31  [key=2, style=dotted];
m22_41 -> m22_42  [key=0, style=solid];
m22_41 -> m22_31  [key=2, style=dotted];
m22_44 -> m22_34  [color=blue, key=0, style=bold];
m22_47 -> m22_48  [key=0, style=solid];
m22_48 -> m22_49  [key=0, style=solid];
m22_48 -> m22_34  [key=2, style=dotted];
m22_49 -> m22_47  [color=blue, key=0, style=bold];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_2 -> m22_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_5  [key=0, style=solid];
m22_3 -> m22_8  [key=2, style=dotted];
m22_5 -> m22_6  [key=0, style=solid];
m22_6 -> m22_7  [key=0, style=solid];
m22_4 -> m22_7  [key=0, style=solid];
m22_4 -> m22_9  [key=2, style=dotted];
m22_7 -> m22_2  [color=blue, key=0, style=bold];
m22_17 -> m22_18  [key=0, style=solid];
m22_17 -> m22_20  [color=darkorchid, key=3, label="method methodReturn string op_Implicit", style=bold];
m22_18 -> m22_19  [key=0, style=solid];
m22_18 -> m22_20  [key=2, style=dotted];
m22_19 -> m22_17  [color=blue, key=0, style=bold];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_0  [color=blue, key=0, style=bold];
m22_20 -> m22_21  [key=0, style=solid];
m22_21 -> m22_22  [key=0, style=solid];
m22_21 -> m22_29  [key=2, style=dotted];
m22_21 -> m22_24  [color=darkseagreen4, key=1, label=isVersionNull, style=dashed];
m22_22 -> m22_23  [key=0, style=solid];
m22_22 -> m22_30  [key=2, style=dotted];
m22_22 -> m22_25  [color=darkseagreen4, key=1, label=builder, style=dashed];
m22_22 -> m22_26  [color=darkseagreen4, key=1, label=builder, style=dashed];
m22_22 -> m22_27  [color=darkseagreen4, key=1, label=builder, style=dashed];
m22_24 -> m22_25  [key=0, style=solid];
m22_24 -> m22_27  [key=0, style=solid];
m22_23 -> m22_24  [key=0, style=solid];
m22_23 -> m22_31  [key=2, style=dotted];
m22_25 -> m22_26  [key=0, style=solid];
m22_25 -> m22_32  [key=2, style=dotted];
m22_26 -> m22_27  [key=0, style=solid];
m22_26 -> m22_31  [key=2, style=dotted];
m22_27 -> m22_28  [key=0, style=solid];
m22_27 -> m22_33  [key=2, style=dotted];
m22_28 -> m22_20  [color=blue, key=0, style=bold];
m22_14 -> m22_15  [color=red, key=0, style=solid];
m22_10 -> m22_11  [key=0, style=solid];
m22_11 -> m22_12  [key=0, style=solid];
m22_11 -> m22_13  [key=2, style=dotted];
m22_12 -> m22_10  [color=blue, key=0, style=bold];
m22_15 -> m22_16  [color=red, key=0, style=solid];
m22_16 -> m22_14  [color=blue, key=0, style=bold];
m22_50 -> m22_51  [key=0, style=solid];
m22_51 -> m22_52  [key=0, style=solid];
m22_51 -> m22_34  [key=2, style=dotted];
m22_52 -> m22_50  [color=blue, key=0, style=bold];
m22_53 -> m22_5  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m22_53 -> m22_6  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m22_53 -> m22_21  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m22_53 -> m22_22  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m22_53 -> m22_23  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m22_53 -> m22_26  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m22_53 -> m22_39  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m22_53 -> m22_40  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m22_53 -> m22_48  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m22_53 -> m22_51  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_2  [key=0, style=solid];
m26_2 -> m26_0  [color=blue, key=0, style=bold];
m26_10 -> m26_11  [key=0, style=solid];
m26_10 -> m26_3  [color=darkorchid, key=3, label="method methodReturn CommandLine.Infrastructure.Identity<T2> Map", style=bold];
m26_11 -> m26_12  [key=0, style=solid];
m26_11 -> m26_9  [key=2, style=dotted];
m26_11 -> m26_13  [key=2, style=dotted];
m26_12 -> m26_10  [color=blue, key=0, style=bold];
m26_6 -> m26_7  [key=0, style=solid];
m26_7 -> m26_8  [key=0, style=solid];
m26_7 -> m26_9  [key=2, style=dotted];
m26_8 -> m26_6  [color=blue, key=0, style=bold];
m26_17 -> m26_18  [key=0, style=solid];
m26_17 -> m26_3  [color=darkorchid, key=3, label="method methodReturn CommandLine.Infrastructure.Identity<TResult> SelectMany", style=bold];
m26_18 -> m26_19  [key=0, style=solid];
m26_18 -> m26_9  [key=2, style=dotted];
m26_18 -> m26_20  [key=2, style=dotted];
m26_18 -> m26_13  [key=2, style=dotted];
m26_19 -> m26_17  [color=blue, key=0, style=bold];
m26_14 -> m26_15  [key=0, style=solid];
m26_14 -> m26_3  [color=darkorchid, key=3, label="method methodReturn CommandLine.Infrastructure.Identity<TResult> Select", style=bold];
m26_15 -> m26_16  [key=0, style=solid];
m26_15 -> m26_9  [key=2, style=dotted];
m26_15 -> m26_13  [key=2, style=dotted];
m26_16 -> m26_14  [color=blue, key=0, style=bold];
m26_3 -> m26_4  [key=0, style=solid];
m26_4 -> m26_5  [key=0, style=solid];
m26_4 -> m26_0  [key=2, style=dotted];
m26_5 -> m26_3  [color=blue, key=0, style=bold];
m26_21 -> m26_1  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.Identity<T>", style=dashed];
m27_0 -> m27_1  [key=0, style=solid];
m27_0 -> m27_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_6  [key=2, style=dotted];
m27_1 -> m27_7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_1 -> m27_4  [color=darkseagreen4, key=1, label=option, style=dashed];
m27_2 -> m27_3  [key=0, style=solid];
m27_2 -> m27_4  [key=0, style=solid];
m27_4 -> m27_5  [key=0, style=solid];
m27_3 -> m27_5  [key=0, style=solid];
m27_5 -> m27_0  [color=blue, key=0, style=bold];
m27_21 -> m27_22  [key=0, style=solid];
m27_8 -> m27_9  [key=0, style=solid];
m27_8 -> m27_10  [key=2, style=dotted];
m27_7 -> m27_8  [key=0, style=solid];
m27_9 -> m27_7  [color=blue, key=0, style=bold];
m27_19 -> m27_20  [key=0, style=solid];
m27_19 -> m27_10  [key=2, style=dotted];
m27_18 -> m27_19  [key=0, style=solid];
m27_20 -> m27_18  [color=blue, key=0, style=bold];
m27_22 -> m27_23  [key=0, style=solid];
m27_22 -> m27_24  [key=2, style=dotted];
m27_23 -> m27_21  [color=blue, key=0, style=bold];
m27_11 -> m27_12  [key=0, style=solid];
m27_11 -> m27_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m27_12 -> m27_13  [key=0, style=solid];
m27_12 -> m27_14  [key=2, style=dotted];
m27_12 -> m27_15  [key=2, style=dotted];
m27_12 -> m27_16  [key=2, style=dotted];
m27_12 -> m27_17  [key=2, style=dotted];
m27_12 -> m27_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_12 -> m27_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_13 -> m27_11  [color=blue, key=0, style=bold];
m27_25 -> m27_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m27_26 -> m27_8  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m27_27 -> m27_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m27_28 -> m27_19  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m28_41 -> m28_42  [key=0, style=solid];
m28_43 -> m28_9  [key=2, style=dotted];
m28_43 -> m28_44  [key=0, style=solid];
m28_43 -> m28_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_44 -> m28_46  [key=2, style=dotted];
m28_44 -> m28_11  [key=2, style=dotted];
m28_44 -> m28_45  [key=0, style=solid];
m28_42 -> m28_43  [key=0, style=solid];
m28_42 -> m28_44  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_45 -> m28_41  [color=blue, key=0, style=bold];
m28_33 -> m28_34  [key=0, style=solid];
m28_35 -> m28_9  [key=2, style=dotted];
m28_35 -> m28_36  [key=0, style=solid];
m28_35 -> m28_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_34 -> m28_35  [key=0, style=solid];
m28_34 -> m28_34  [color=darkorchid, key=3, label="Local variable double expectedResult", style=bold];
m28_34 -> m28_36  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_36 -> m28_37  [key=0, style=solid];
m28_36 -> m28_20  [key=2, style=dotted];
m28_37 -> m28_33  [color=blue, key=0, style=bold];
m28_224 -> m28_225  [key=0, style=solid];
m28_225 -> m28_90  [key=2, style=dotted];
m28_225 -> m28_226  [key=0, style=solid];
m28_225 -> m28_81  [key=2, style=dotted];
m28_225 -> m28_227  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_226 -> m28_9  [key=2, style=dotted];
m28_226 -> m28_227  [key=0, style=solid];
m28_226 -> m28_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_227 -> m28_46  [key=2, style=dotted];
m28_227 -> m28_11  [key=2, style=dotted];
m28_227 -> m28_228  [key=0, style=solid];
m28_228 -> m28_224  [color=blue, key=0, style=bold];
m28_232 -> m28_233  [key=0, style=solid];
m28_234 -> m28_9  [key=2, style=dotted];
m28_234 -> m28_235  [key=0, style=solid];
m28_234 -> m28_238  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_235 -> m28_46  [key=2, style=dotted];
m28_235 -> m28_11  [key=2, style=dotted];
m28_235 -> m28_236  [key=0, style=solid];
m28_233 -> m28_234  [key=0, style=solid];
m28_233 -> m28_235  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_233 -> m28_237  [key=2, style=dotted];
m28_236 -> m28_232  [color=blue, key=0, style=bold];
m28_67 -> m28_68  [key=0, style=solid];
m28_67 -> m28_69  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m28_68 -> m28_9  [key=2, style=dotted];
m28_68 -> m28_69  [key=0, style=solid];
m28_68 -> m28_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_69 -> m28_46  [key=2, style=dotted];
m28_69 -> m28_11  [key=2, style=dotted];
m28_69 -> m28_70  [key=0, style=solid];
m28_70 -> m28_67  [color=blue, key=0, style=bold];
m28_198 -> m28_199  [key=0, style=solid];
m28_200 -> m28_9  [key=2, style=dotted];
m28_200 -> m28_201  [key=0, style=solid];
m28_200 -> m28_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_199 -> m28_200  [key=0, style=solid];
m28_199 -> m28_194  [key=2, style=dotted];
m28_199 -> m28_201  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_201 -> m28_202  [key=0, style=solid];
m28_201 -> m28_118  [key=2, style=dotted];
m28_202 -> m28_198  [color=blue, key=0, style=bold];
m28_0 -> m28_1  [key=0, style=solid];
m28_3 -> m28_9  [key=2, style=dotted];
m28_3 -> m28_4  [key=0, style=solid];
m28_3 -> m28_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_4 -> m28_11  [key=2, style=dotted];
m28_4 -> m28_5  [key=0, style=solid];
m28_4 -> m28_10  [key=2, style=dotted];
m28_1 -> m28_3  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m28_1 -> m28_2  [key=0, style=solid];
m28_1 -> m28_6  [key=2, style=dotted];
m28_1 -> m28_13  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m28_2 -> m28_3  [key=0, style=solid];
m28_2 -> m28_4  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_2 -> m28_7  [key=2, style=dotted];
m28_2 -> m28_8  [key=2, style=dotted];
m28_5 -> m28_0  [color=blue, key=0, style=bold];
m28_215 -> m28_216  [key=0, style=solid];
m28_217 -> m28_9  [key=2, style=dotted];
m28_217 -> m28_218  [key=0, style=solid];
m28_217 -> m28_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_218 -> m28_46  [key=2, style=dotted];
m28_218 -> m28_11  [key=2, style=dotted];
m28_218 -> m28_219  [key=0, style=solid];
m28_216 -> m28_217  [key=0, style=solid];
m28_216 -> m28_218  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_216 -> m28_81  [key=2, style=dotted];
m28_216 -> m28_211  [key=2, style=dotted];
m28_219 -> m28_215  [color=blue, key=0, style=bold];
m28_175 -> m28_176  [key=0, style=solid];
m28_108 -> m28_109  [color=green, key=0, style=solid];
m28_109 -> m28_110  [color=green, key=0, style=solid];
m28_109 -> m28_111  [color=green, key=2, style=dotted];
m28_110 -> m28_108  [color=blue, key=0, style=bold];
m28_12 -> m28_13  [key=0, style=solid];
m28_21 -> m28_22  [key=0, style=solid];
m28_29 -> m28_30  [key=0, style=solid];
m28_38 -> m28_39  [key=0, style=solid];
m28_47 -> m28_48  [key=0, style=solid];
m28_56 -> m28_57  [key=0, style=solid];
m28_63 -> m28_64  [key=0, style=solid];
m28_71 -> m28_72  [key=0, style=solid];
m28_82 -> m28_83  [key=0, style=solid];
m28_91 -> m28_92  [key=0, style=solid];
m28_100 -> m28_101  [key=0, style=solid];
m28_119 -> m28_120  [key=0, style=solid];
m28_128 -> m28_129  [key=0, style=solid];
m28_137 -> m28_138  [key=0, style=solid];
m28_146 -> m28_147  [key=0, style=solid];
m28_154 -> m28_155  [key=0, style=solid];
m28_185 -> m28_186  [key=0, style=solid];
m28_195 -> m28_196  [key=0, style=solid];
m28_203 -> m28_204  [key=0, style=solid];
m28_212 -> m28_213  [key=0, style=solid];
m28_220 -> m28_221  [key=0, style=solid];
m28_229 -> m28_230  [key=0, style=solid];
m28_238 -> m28_239  [key=0, style=solid];
m28_246 -> m28_247  [key=0, style=solid];
m28_254 -> m28_255  [key=0, style=solid];
m28_13 -> m28_14  [key=0, style=solid];
m28_14 -> m28_12  [color=blue, key=0, style=bold];
m28_23 -> m28_21  [color=blue, key=0, style=bold];
m28_22 -> m28_6  [key=2, style=dotted];
m28_22 -> m28_23  [key=0, style=solid];
m28_31 -> m28_29  [color=blue, key=0, style=bold];
m28_30 -> m28_31  [key=0, style=solid];
m28_30 -> m28_32  [key=2, style=dotted];
m28_40 -> m28_38  [color=blue, key=0, style=bold];
m28_39 -> m28_40  [key=0, style=solid];
m28_39 -> m28_32  [key=2, style=dotted];
m28_49 -> m28_47  [color=blue, key=0, style=bold];
m28_48 -> m28_49  [key=0, style=solid];
m28_48 -> m28_50  [key=2, style=dotted];
m28_58 -> m28_56  [color=blue, key=0, style=bold];
m28_57 -> m28_6  [key=2, style=dotted];
m28_57 -> m28_58  [key=0, style=solid];
m28_65 -> m28_63  [color=blue, key=0, style=bold];
m28_64 -> m28_65  [key=0, style=solid];
m28_64 -> m28_66  [key=2, style=dotted];
m28_73 -> m28_71  [color=blue, key=0, style=bold];
m28_72 -> m28_73  [key=0, style=solid];
m28_72 -> m28_74  [key=2, style=dotted];
m28_84 -> m28_82  [color=blue, key=0, style=bold];
m28_83 -> m28_84  [key=0, style=solid];
m28_83 -> m28_66  [key=2, style=dotted];
m28_93 -> m28_91  [color=blue, key=0, style=bold];
m28_92 -> m28_93  [key=0, style=solid];
m28_92 -> m28_94  [key=2, style=dotted];
m28_102 -> m28_100  [color=blue, key=0, style=bold];
m28_101 -> m28_102  [key=0, style=solid];
m28_101 -> m28_74  [key=2, style=dotted];
m28_121 -> m28_119  [color=blue, key=0, style=bold];
m28_120 -> m28_117  [key=2, style=dotted];
m28_120 -> m28_121  [key=0, style=solid];
m28_130 -> m28_128  [color=blue, key=0, style=bold];
m28_129 -> m28_127  [key=2, style=dotted];
m28_129 -> m28_130  [key=0, style=solid];
m28_139 -> m28_137  [color=blue, key=0, style=bold];
m28_138 -> m28_136  [key=2, style=dotted];
m28_138 -> m28_139  [key=0, style=solid];
m28_148 -> m28_146  [color=blue, key=0, style=bold];
m28_147 -> m28_145  [key=2, style=dotted];
m28_147 -> m28_148  [key=0, style=solid];
m28_156 -> m28_154  [color=blue, key=0, style=bold];
m28_155 -> m28_145  [key=2, style=dotted];
m28_155 -> m28_156  [key=0, style=solid];
m28_187 -> m28_185  [color=blue, key=0, style=bold];
m28_186 -> m28_187  [key=0, style=solid];
m28_186 -> m28_188  [key=2, style=dotted];
m28_197 -> m28_195  [color=blue, key=0, style=bold];
m28_196 -> m28_194  [key=2, style=dotted];
m28_196 -> m28_197  [key=0, style=solid];
m28_205 -> m28_203  [color=blue, key=0, style=bold];
m28_204 -> m28_194  [key=2, style=dotted];
m28_204 -> m28_205  [key=0, style=solid];
m28_214 -> m28_212  [color=blue, key=0, style=bold];
m28_213 -> m28_194  [key=2, style=dotted];
m28_213 -> m28_214  [key=0, style=solid];
m28_222 -> m28_220  [color=blue, key=0, style=bold];
m28_221 -> m28_222  [key=0, style=solid];
m28_221 -> m28_223  [key=2, style=dotted];
m28_231 -> m28_229  [color=blue, key=0, style=bold];
m28_230 -> m28_6  [key=2, style=dotted];
m28_230 -> m28_231  [key=0, style=solid];
m28_240 -> m28_238  [color=blue, key=0, style=bold];
m28_239 -> m28_6  [key=2, style=dotted];
m28_239 -> m28_240  [key=0, style=solid];
m28_248 -> m28_246  [color=blue, key=0, style=bold];
m28_247 -> m28_6  [key=2, style=dotted];
m28_247 -> m28_248  [key=0, style=solid];
m28_256 -> m28_254  [color=blue, key=0, style=bold];
m28_255 -> m28_6  [key=2, style=dotted];
m28_255 -> m28_256  [key=0, style=solid];
m28_165 -> m28_127  [key=2, style=dotted];
m28_165 -> m28_166  [key=0, style=solid];
m28_164 -> m28_165  [key=0, style=solid];
m28_166 -> m28_164  [color=blue, key=0, style=bold];
m28_167 -> m28_168  [key=0, style=solid];
m28_167 -> m28_172  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m28_167 -> m28_176  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m28_169 -> m28_167  [color=blue, key=0, style=bold];
m28_168 -> m28_169  [key=0, style=solid];
m28_168 -> m28_170  [key=2, style=dotted];
m28_168 -> m28_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_172 -> m28_173  [key=0, style=solid];
m28_172 -> m28_174  [key=2, style=dotted];
m28_172 -> m28_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_176 -> m28_177  [key=0, style=solid];
m28_176 -> m28_178  [key=2, style=dotted];
m28_171 -> m28_172  [key=0, style=solid];
m28_173 -> m28_171  [color=blue, key=0, style=bold];
m28_177 -> m28_175  [color=blue, key=0, style=bold];
m28_206 -> m28_207  [key=0, style=solid];
m28_208 -> m28_9  [key=2, style=dotted];
m28_208 -> m28_209  [key=0, style=solid];
m28_208 -> m28_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_209 -> m28_46  [key=2, style=dotted];
m28_209 -> m28_11  [key=2, style=dotted];
m28_209 -> m28_210  [key=0, style=solid];
m28_207 -> m28_208  [key=0, style=solid];
m28_207 -> m28_209  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_207 -> m28_81  [key=2, style=dotted];
m28_207 -> m28_211  [key=2, style=dotted];
m28_210 -> m28_206  [color=blue, key=0, style=bold];
m28_157 -> m28_158  [key=0, style=solid];
m28_161 -> m28_118  [key=2, style=dotted];
m28_161 -> m28_162  [key=0, style=solid];
m28_158 -> m28_127  [key=2, style=dotted];
m28_158 -> m28_161  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_158 -> m28_159  [key=0, style=solid];
m28_160 -> m28_161  [key=0, style=solid];
m28_160 -> m28_163  [key=2, style=dotted];
m28_160 -> m28_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_160 -> m28_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_159 -> m28_160  [key=0, style=solid];
m28_162 -> m28_157  [color=blue, key=0, style=bold];
m28_85 -> m28_86  [key=0, style=solid];
m28_86 -> m28_90  [key=2, style=dotted];
m28_86 -> m28_87  [key=0, style=solid];
m28_86 -> m28_88  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_87 -> m28_9  [key=2, style=dotted];
m28_87 -> m28_88  [key=0, style=solid];
m28_87 -> m28_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_88 -> m28_46  [key=2, style=dotted];
m28_88 -> m28_11  [key=2, style=dotted];
m28_88 -> m28_89  [key=0, style=solid];
m28_89 -> m28_85  [color=blue, key=0, style=bold];
m28_95 -> m28_96  [key=0, style=solid];
m28_96 -> m28_90  [key=2, style=dotted];
m28_96 -> m28_97  [key=0, style=solid];
m28_96 -> m28_81  [key=2, style=dotted];
m28_96 -> m28_98  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_97 -> m28_9  [key=2, style=dotted];
m28_97 -> m28_98  [key=0, style=solid];
m28_97 -> m28_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_98 -> m28_46  [key=2, style=dotted];
m28_98 -> m28_11  [key=2, style=dotted];
m28_98 -> m28_99  [key=0, style=solid];
m28_99 -> m28_95  [color=blue, key=0, style=bold];
m28_140 -> m28_141  [key=0, style=solid];
m28_142 -> m28_9  [key=2, style=dotted];
m28_142 -> m28_143  [key=0, style=solid];
m28_142 -> m28_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_141 -> m28_142  [key=0, style=solid];
m28_141 -> m28_145  [key=2, style=dotted];
m28_141 -> m28_143  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_143 -> m28_144  [key=0, style=solid];
m28_143 -> m28_118  [key=2, style=dotted];
m28_144 -> m28_140  [color=blue, key=0, style=bold];
m28_249 -> m28_250  [key=0, style=solid];
m28_251 -> m28_9  [key=2, style=dotted];
m28_251 -> m28_252  [key=0, style=solid];
m28_251 -> m28_254  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_252 -> m28_46  [key=2, style=dotted];
m28_252 -> m28_11  [key=2, style=dotted];
m28_252 -> m28_253  [key=0, style=solid];
m28_250 -> m28_251  [key=0, style=solid];
m28_250 -> m28_252  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_250 -> m28_237  [key=2, style=dotted];
m28_253 -> m28_249  [color=blue, key=0, style=bold];
m28_75 -> m28_76  [key=0, style=solid];
m28_77 -> m28_9  [key=2, style=dotted];
m28_77 -> m28_78  [key=0, style=solid];
m28_77 -> m28_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_78 -> m28_46  [key=2, style=dotted];
m28_78 -> m28_11  [key=2, style=dotted];
m28_78 -> m28_79  [key=0, style=solid];
m28_76 -> m28_77  [key=0, style=solid];
m28_76 -> m28_78  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_76 -> m28_81  [key=2, style=dotted];
m28_76 -> m28_80  [key=2, style=dotted];
m28_79 -> m28_75  [color=blue, key=0, style=bold];
m28_122 -> m28_123  [key=0, style=solid];
m28_124 -> m28_9  [key=2, style=dotted];
m28_124 -> m28_125  [key=0, style=solid];
m28_124 -> m28_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_123 -> m28_124  [key=0, style=solid];
m28_123 -> m28_127  [key=2, style=dotted];
m28_123 -> m28_125  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_125 -> m28_126  [key=0, style=solid];
m28_125 -> m28_118  [key=2, style=dotted];
m28_126 -> m28_122  [color=blue, key=0, style=bold];
m28_103 -> m28_104  [color=green, key=0, style=solid];
m28_104 -> m28_105  [color=green, key=0, style=solid];
m28_104 -> m28_90  [color=green, key=2, style=dotted];
m28_104 -> m28_106  [color=green, key=1, label=expectedResult, style=dashed];
m28_105 -> m28_106  [color=green, key=0, style=solid];
m28_105 -> m28_9  [color=green, key=2, style=dotted];
m28_105 -> m28_108  [color=green, key=1, label="lambda expression", style=dashed];
m28_106 -> m28_107  [color=green, key=0, style=solid];
m28_106 -> m28_46  [color=green, key=2, style=dotted];
m28_106 -> m28_11  [color=green, key=2, style=dotted];
m28_107 -> m28_103  [color=blue, key=0, style=bold];
m28_189 -> m28_190  [key=0, style=solid];
m28_191 -> m28_9  [key=2, style=dotted];
m28_191 -> m28_192  [key=0, style=solid];
m28_191 -> m28_195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_190 -> m28_191  [key=0, style=solid];
m28_190 -> m28_194  [key=2, style=dotted];
m28_190 -> m28_192  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_192 -> m28_193  [key=0, style=solid];
m28_192 -> m28_118  [key=2, style=dotted];
m28_193 -> m28_189  [color=blue, key=0, style=bold];
m28_149 -> m28_150  [key=0, style=solid];
m28_151 -> m28_9  [key=2, style=dotted];
m28_151 -> m28_152  [key=0, style=solid];
m28_151 -> m28_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_150 -> m28_151  [key=0, style=solid];
m28_150 -> m28_145  [key=2, style=dotted];
m28_150 -> m28_152  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_152 -> m28_153  [key=0, style=solid];
m28_152 -> m28_118  [key=2, style=dotted];
m28_153 -> m28_149  [color=blue, key=0, style=bold];
m28_179 -> m28_180  [key=0, style=solid];
m28_181 -> m28_9  [key=2, style=dotted];
m28_181 -> m28_182  [key=0, style=solid];
m28_181 -> m28_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_182 -> m28_46  [key=2, style=dotted];
m28_182 -> m28_11  [key=2, style=dotted];
m28_182 -> m28_183  [key=0, style=solid];
m28_180 -> m28_181  [key=0, style=solid];
m28_180 -> m28_182  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_180 -> m28_81  [key=2, style=dotted];
m28_180 -> m28_184  [key=2, style=dotted];
m28_183 -> m28_179  [color=blue, key=0, style=bold];
m28_24 -> m28_25  [key=0, style=solid];
m28_26 -> m28_9  [key=2, style=dotted];
m28_26 -> m28_27  [key=0, style=solid];
m28_26 -> m28_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_25 -> m28_26  [key=0, style=solid];
m28_25 -> m28_25  [color=darkorchid, key=3, label="Local variable double expectedResult", style=bold];
m28_25 -> m28_27  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_27 -> m28_28  [key=0, style=solid];
m28_27 -> m28_20  [key=2, style=dotted];
m28_28 -> m28_24  [color=blue, key=0, style=bold];
m28_59 -> m28_60  [key=0, style=solid];
m28_59 -> m28_61  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m28_60 -> m28_9  [key=2, style=dotted];
m28_60 -> m28_61  [key=0, style=solid];
m28_60 -> m28_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_61 -> m28_46  [key=2, style=dotted];
m28_61 -> m28_11  [key=2, style=dotted];
m28_61 -> m28_62  [key=0, style=solid];
m28_62 -> m28_59  [color=blue, key=0, style=bold];
m28_15 -> m28_16  [key=0, style=solid];
m28_17 -> m28_9  [key=2, style=dotted];
m28_17 -> m28_18  [key=0, style=solid];
m28_17 -> m28_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_16 -> m28_17  [key=0, style=solid];
m28_16 -> m28_16  [color=darkorchid, key=3, label="Local variable int expectedResult", style=bold];
m28_16 -> m28_18  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_18 -> m28_19  [key=0, style=solid];
m28_18 -> m28_20  [key=2, style=dotted];
m28_19 -> m28_15  [color=blue, key=0, style=bold];
m28_241 -> m28_242  [key=0, style=solid];
m28_243 -> m28_9  [key=2, style=dotted];
m28_243 -> m28_244  [key=0, style=solid];
m28_243 -> m28_246  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_244 -> m28_46  [key=2, style=dotted];
m28_244 -> m28_11  [key=2, style=dotted];
m28_244 -> m28_245  [key=0, style=solid];
m28_242 -> m28_243  [key=0, style=solid];
m28_242 -> m28_244  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_242 -> m28_237  [key=2, style=dotted];
m28_245 -> m28_241  [color=blue, key=0, style=bold];
m28_112 -> m28_113  [key=0, style=solid];
m28_114 -> m28_9  [key=2, style=dotted];
m28_114 -> m28_115  [key=0, style=solid];
m28_114 -> m28_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_113 -> m28_114  [key=0, style=solid];
m28_113 -> m28_117  [key=2, style=dotted];
m28_113 -> m28_115  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_115 -> m28_116  [key=0, style=solid];
m28_115 -> m28_118  [key=2, style=dotted];
m28_116 -> m28_112  [color=blue, key=0, style=bold];
m28_51 -> m28_52  [key=0, style=solid];
m28_53 -> m28_9  [key=2, style=dotted];
m28_53 -> m28_54  [key=0, style=solid];
m28_53 -> m28_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_54 -> m28_46  [key=2, style=dotted];
m28_54 -> m28_11  [key=2, style=dotted];
m28_54 -> m28_55  [key=0, style=solid];
m28_52 -> m28_53  [key=0, style=solid];
m28_52 -> m28_54  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_55 -> m28_51  [color=blue, key=0, style=bold];
m28_131 -> m28_132  [key=0, style=solid];
m28_133 -> m28_9  [key=2, style=dotted];
m28_133 -> m28_134  [key=0, style=solid];
m28_133 -> m28_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_132 -> m28_133  [key=0, style=solid];
m28_132 -> m28_136  [key=2, style=dotted];
m28_132 -> m28_134  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m28_134 -> m28_135  [key=0, style=solid];
m28_134 -> m28_118  [key=2, style=dotted];
m28_135 -> m28_131  [color=blue, key=0, style=bold];
m28_257 -> m28_13  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m28_258 -> m28_172  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m28_258 -> m28_176  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m31_16 -> m31_17  [key=0, style=solid];
m31_16 -> m31_23  [color=darkseagreen4, key=1, label=char, style=dashed];
m31_17 -> m31_18  [key=0, style=solid];
m31_17 -> m31_23  [key=0, style=solid];
m31_23 -> m31_24  [key=0, style=solid];
m31_23 -> m31_25  [key=2, style=dotted];
m31_18 -> m31_19  [key=0, style=solid];
m31_19 -> m31_20  [key=0, style=solid];
m31_20 -> m31_21  [key=0, style=solid];
m31_21 -> m31_22  [key=0, style=solid];
m31_22 -> m31_24  [key=0, style=solid];
m31_24 -> m31_16  [color=blue, key=0, style=bold];
m31_9 -> m31_10  [key=0, style=solid];
m31_10 -> m31_11  [key=0, style=solid];
m31_10 -> m31_12  [key=2, style=dotted];
m31_11 -> m31_9  [color=blue, key=0, style=bold];
m31_26 -> m31_27  [key=0, style=solid];
m31_27 -> m31_28  [key=0, style=solid];
m31_27 -> m31_33  [key=0, style=solid];
m31_28 -> m31_29  [key=0, style=solid];
m31_33 -> m31_34  [key=0, style=solid];
m31_29 -> m31_30  [key=0, style=solid];
m31_30 -> m31_31  [key=0, style=solid];
m31_31 -> m31_32  [key=0, style=solid];
m31_32 -> m31_34  [key=0, style=solid];
m31_34 -> m31_26  [color=blue, key=0, style=bold];
m31_4 -> m31_5  [key=0, style=solid];
m31_4 -> m31_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_5 -> m31_6  [key=0, style=solid];
m31_6 -> m31_7  [key=0, style=solid];
m31_6 -> m31_8  [key=2, style=dotted];
m31_7 -> m31_4  [color=blue, key=0, style=bold];
m31_13 -> m31_14  [key=0, style=solid];
m31_13 -> m31_6  [color=darkorchid, key=3, label="Property variable T Value", style=bold];
m31_14 -> m31_15  [key=0, style=solid];
m31_14 -> m31_12  [key=2, style=dotted];
m31_15 -> m31_13  [color=blue, key=0, style=bold];
m31_0 -> m31_1  [key=0, style=solid];
m31_1 -> m31_2  [key=0, style=solid];
m31_1 -> m31_3  [key=2, style=dotted];
m31_2 -> m31_0  [color=blue, key=0, style=bold];
m34_12 -> m34_13  [key=0, style=solid];
m34_13 -> m34_14  [key=0, style=solid];
m34_14 -> m34_12  [color=blue, key=0, style=bold];
m34_0 -> m34_1  [key=0, style=solid];
m34_1 -> m34_2  [key=0, style=solid];
m34_1 -> m34_3  [key=2, style=dotted];
m34_2 -> m34_0  [color=blue, key=0, style=bold];
m34_4 -> m34_5  [key=0, style=solid];
m34_5 -> m34_6  [key=0, style=solid];
m34_5 -> m34_7  [key=2, style=dotted];
m34_6 -> m34_4  [color=blue, key=0, style=bold];
m34_8 -> m34_9  [key=0, style=solid];
m34_9 -> m34_10  [key=0, style=solid];
m34_9 -> m34_11  [key=2, style=dotted];
m34_10 -> m34_8  [color=blue, key=0, style=bold];
m34_15 -> m34_16  [key=0, style=solid];
m34_16 -> m34_17  [key=0, style=solid];
m34_17 -> m34_15  [color=blue, key=0, style=bold];
m35_17 -> m35_18  [key=0, style=solid];
m35_17 -> m35_21  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
m35_17 -> m35_25  [color=darkseagreen4, key=1, label=object, style=dashed];
m35_17 -> m35_20  [color=darkorchid, key=3, label="method methodReturn CommandLine.Internal.OptionMap Create", style=bold];
m35_18 -> m35_19  [key=0, style=solid];
m35_18 -> m35_28  [key=2, style=dotted];
m35_18 -> m35_21  [color=darkseagreen4, key=1, label=list, style=dashed];
m35_18 -> m35_22  [color=darkseagreen4, key=1, label=list, style=dashed];
m35_21 -> m35_22  [key=0, style=solid];
m35_21 -> m35_8  [key=2, style=dotted];
m35_21 -> m35_24  [color=darkseagreen4, key=1, label=map, style=dashed];
m35_21 -> m35_25  [color=darkseagreen4, key=1, label=map, style=dashed];
m35_21 -> m35_26  [color=darkseagreen4, key=1, label=map, style=dashed];
m35_25 -> m35_26  [key=0, style=solid];
m35_19 -> m35_20  [key=0, style=solid];
m35_19 -> m35_21  [key=0, style=solid];
m35_22 -> m35_23  [key=0, style=solid];
m35_22 -> m35_25  [key=0, style=solid];
m35_22 -> m35_24  [color=darkseagreen4, key=1, label=pair, style=dashed];
m35_20 -> m35_27  [key=0, style=solid];
m35_24 -> m35_22  [key=0, style=solid];
m35_24 -> m35_29  [key=2, style=dotted];
m35_26 -> m35_27  [key=0, style=solid];
m35_23 -> m35_24  [key=0, style=solid];
m35_23 -> m35_22  [key=0, style=solid];
m35_27 -> m35_17  [color=blue, key=0, style=bold];
m35_49 -> m35_50  [key=0, style=solid];
m35_50 -> m35_51  [key=0, style=solid];
m35_50 -> m35_52  [key=0, style=solid];
m35_51 -> m35_50  [key=0, style=solid];
m35_51 -> m35_53  [key=2, style=dotted];
m35_52 -> m35_49  [color=blue, key=0, style=bold];
m35_30 -> m35_31  [key=0, style=solid];
m35_30 -> m35_32  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>", style=dashed];
m35_30 -> m35_34  [color=darkseagreen4, key=1, label=object, style=dashed];
m35_30 -> m35_37  [color=darkseagreen4, key=1, label=object, style=dashed];
m35_31 -> m35_32  [key=0, style=solid];
m35_31 -> m35_8  [key=2, style=dotted];
m35_31 -> m35_36  [color=darkseagreen4, key=1, label=map, style=dashed];
m35_31 -> m35_37  [color=darkseagreen4, key=1, label=map, style=dashed];
m35_31 -> m35_38  [color=darkseagreen4, key=1, label=map, style=dashed];
m35_32 -> m35_33  [key=0, style=solid];
m35_32 -> m35_37  [key=0, style=solid];
m35_32 -> m35_34  [color=darkseagreen4, key=1, label=verb, style=dashed];
m35_32 -> m35_35  [color=darkseagreen4, key=1, label=verb, style=dashed];
m35_32 -> m35_36  [color=darkseagreen4, key=1, label=verb, style=dashed];
m35_34 -> m35_35  [key=0, style=solid];
m35_34 -> m35_36  [key=0, style=solid];
m35_34 -> m35_41  [key=2, style=dotted];
m35_37 -> m35_38  [key=0, style=solid];
m35_36 -> m35_32  [key=0, style=solid];
m35_38 -> m35_39  [key=0, style=solid];
m35_33 -> m35_34  [key=0, style=solid];
m35_33 -> m35_29  [key=2, style=dotted];
m35_33 -> m35_40  [key=2, style=dotted];
m35_33 -> m35_36  [color=darkseagreen4, key=1, label=optionInfo, style=dashed];
m35_35 -> m35_39  [key=0, style=solid];
m35_35 -> m35_42  [key=2, style=dotted];
m35_35 -> m35_43  [key=2, style=dotted];
m35_39 -> m35_30  [color=blue, key=0, style=bold];
m35_48 -> m35_54  [key=0, style=solid];
m35_54 -> m35_55  [key=0, style=solid];
m35_54 -> m35_59  [color=darkseagreen4, key=1, label=requiredRulesAllMet, style=dashed];
m35_54 -> m35_54  [color=darkorchid, key=3, label="Local variable bool requiredRulesAllMet", style=bold];
m35_55 -> m35_56  [key=0, style=solid];
m35_55 -> m35_59  [key=0, style=solid];
m35_55 -> m35_57  [color=darkseagreen4, key=1, label=option, style=dashed];
m35_59 -> m35_60  [key=0, style=solid];
m35_56 -> m35_57  [key=0, style=solid];
m35_56 -> m35_55  [key=0, style=solid];
m35_57 -> m35_58  [key=0, style=solid];
m35_57 -> m35_61  [key=2, style=dotted];
m35_58 -> m35_55  [key=0, style=solid];
m35_58 -> m35_59  [color=darkseagreen4, key=1, label=requiredRulesAllMet, style=dashed];
m35_60 -> m35_48  [color=blue, key=0, style=bold];
m35_8 -> m35_9  [key=0, style=solid];
m35_8 -> m35_11  [color=darkseagreen4, key=1, label=int, style=dashed];
m35_8 -> m35_12  [color=darkseagreen4, key=1, label=int, style=dashed];
m35_8 -> m35_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m35_9 -> m35_10  [key=0, style=solid];
m35_11 -> m35_12  [key=0, style=solid];
m35_11 -> m35_16  [key=2, style=dotted];
m35_12 -> m35_13  [key=0, style=solid];
m35_12 -> m35_16  [key=2, style=dotted];
m35_14 -> m35_15  [key=0, style=solid];
m35_14 -> m35_16  [key=2, style=dotted];
m35_10 -> m35_11  [key=0, style=solid];
m35_10 -> m35_12  [color=darkseagreen4, key=1, label=comparer, style=dashed];
m35_13 -> m35_14  [key=0, style=solid];
m35_13 -> m35_15  [key=0, style=solid];
m35_15 -> m35_8  [color=blue, key=0, style=bold];
m35_2 -> m35_3  [key=0, style=solid];
m35_3 -> m35_4  [key=0, style=solid];
m35_4 -> m35_2  [color=blue, key=0, style=bold];
m35_73 -> m35_74  [key=0, style=solid];
m35_73 -> m35_76  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m35_73 -> m35_64  [color=darkorchid, key=3, label="Parameter variable CommandLine.Internal.OptionInfo option", style=bold];
m35_74 -> m35_75  [key=0, style=solid];
m35_74 -> m35_76  [color=darkseagreen4, key=1, label=setName, style=dashed];
m35_74 -> m35_77  [color=darkseagreen4, key=1, label=setName, style=dashed];
m35_76 -> m35_77  [key=0, style=solid];
m35_76 -> m35_2  [key=2, style=dotted];
m35_76 -> m35_80  [key=2, style=dotted];
m35_75 -> m35_76  [key=0, style=solid];
m35_75 -> m35_77  [key=0, style=solid];
m35_75 -> m35_79  [key=2, style=dotted];
m35_77 -> m35_78  [key=0, style=solid];
m35_77 -> m35_5  [key=2, style=dotted];
m35_78 -> m35_73  [color=blue, key=0, style=bold];
m35_61 -> m35_81  [key=0, style=solid];
m35_61 -> m35_85  [color=darkseagreen4, key=1, label=object, style=dashed];
m35_61 -> m35_86  [color=darkseagreen4, key=1, label=object, style=dashed];
m35_61 -> m35_87  [color=darkseagreen4, key=1, label=object, style=dashed];
m35_61 -> m35_90  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m35_61 -> m35_91  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m35_61 -> m35_92  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m35_61 -> m35_93  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m35_61 -> m35_94  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m35_61 -> m35_55  [color=darkorchid, key=3, label="Parameter variable CommandLine.Internal.OptionInfo option", style=bold];
m35_61 -> m35_54  [color=darkorchid, key=3, label="Parameter variable bool? mutualExclusiveness", style=bold];
m35_61 -> m35_20  [color=darkorchid, key=3, label="Parameter variable bool? mutualExclusiveness", style=bold];
m35_81 -> m35_82  [key=0, style=solid];
m35_81 -> m35_28  [key=2, style=dotted];
m35_81 -> m35_84  [color=darkseagreen4, key=1, label=list, style=dashed];
m35_85 -> m35_86  [key=0, style=solid];
m35_85 -> m35_87  [key=0, style=solid];
m35_85 -> m35_41  [key=2, style=dotted];
m35_86 -> m35_87  [key=0, style=solid];
m35_86 -> m35_97  [key=2, style=dotted];
m35_86 -> m35_98  [key=2, style=dotted];
m35_87 -> m35_88  [key=0, style=solid];
m35_87 -> m35_41  [key=2, style=dotted];
m35_87 -> m35_95  [color=darkseagreen4, key=1, label=parserState, style=dashed];
m35_90 -> m35_91  [key=0, style=solid];
m35_90 -> m35_99  [key=2, style=dotted];
m35_90 -> m35_92  [color=darkseagreen4, key=1, label=error, style=dashed];
m35_90 -> m35_94  [color=darkseagreen4, key=1, label=error, style=dashed];
m35_90 -> m35_95  [color=darkseagreen4, key=1, label=error, style=dashed];
m35_91 -> m35_92  [key=0, style=solid];
m35_91 -> m35_93  [key=0, style=solid];
m35_92 -> m35_93  [key=0, style=solid];
m35_93 -> m35_94  [key=0, style=solid];
m35_93 -> m35_95  [key=0, style=solid];
m35_94 -> m35_95  [key=0, style=solid];
m35_82 -> m35_83  [key=0, style=solid];
m35_82 -> m35_84  [key=0, style=solid];
m35_84 -> m35_85  [key=0, style=solid];
m35_84 -> m35_86  [color=darkseagreen4, key=1, label=property, style=dashed];
m35_84 -> m35_87  [color=darkseagreen4, key=1, label=property, style=dashed];
m35_83 -> m35_96  [key=0, style=solid];
m35_88 -> m35_89  [key=0, style=solid];
m35_88 -> m35_90  [key=0, style=solid];
m35_95 -> m35_96  [key=0, style=solid];
m35_95 -> m35_100  [key=2, style=dotted];
m35_89 -> m35_96  [key=0, style=solid];
m35_96 -> m35_61  [color=blue, key=0, style=bold];
m35_44 -> m35_45  [key=0, style=solid];
m35_45 -> m35_46  [key=0, style=solid];
m35_45 -> m35_47  [key=2, style=dotted];
m35_45 -> m35_48  [key=2, style=dotted];
m35_46 -> m35_44  [color=blue, key=0, style=bold];
m35_0 -> m35_1  [key=0, style=solid];
m35_1 -> m35_0  [color=blue, key=0, style=bold];
m35_47 -> m35_62  [key=0, style=solid];
m35_47 -> m35_54  [color=darkorchid, key=3, label="method methodReturn bool EnforceMutuallyExclusiveMap", style=bold];
m35_47 -> m35_70  [color=darkorchid, key=3, label="method methodReturn bool EnforceMutuallyExclusiveMap", style=bold];
m35_62 -> m35_63  [key=0, style=solid];
m35_62 -> m35_64  [key=0, style=solid];
m35_63 -> m35_72  [key=0, style=solid];
m35_64 -> m35_65  [key=0, style=solid];
m35_64 -> m35_67  [key=0, style=solid];
m35_64 -> m35_66  [color=darkseagreen4, key=1, label=option, style=dashed];
m35_65 -> m35_66  [key=0, style=solid];
m35_65 -> m35_64  [key=0, style=solid];
m35_67 -> m35_68  [key=0, style=solid];
m35_67 -> m35_71  [key=0, style=solid];
m35_67 -> m35_69  [color=darkseagreen4, key=1, label=info, style=dashed];
m35_66 -> m35_64  [key=0, style=solid];
m35_66 -> m35_73  [key=2, style=dotted];
m35_68 -> m35_69  [key=0, style=solid];
m35_68 -> m35_67  [key=0, style=solid];
m35_71 -> m35_72  [key=0, style=solid];
m35_69 -> m35_70  [key=0, style=solid];
m35_69 -> m35_61  [key=2, style=dotted];
m35_70 -> m35_72  [key=0, style=solid];
m35_72 -> m35_47  [color=blue, key=0, style=bold];
m35_5 -> m35_6  [key=0, style=solid];
m35_6 -> m35_7  [key=0, style=solid];
m35_7 -> m35_5  [color=blue, key=0, style=bold];
m35_101 -> m35_3  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo", style=dashed];
m35_101 -> m35_6  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo", style=dashed];
m35_102 -> m35_9  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m35_102 -> m35_10  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m35_102 -> m35_11  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m35_102 -> m35_12  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m35_102 -> m35_13  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m35_102 -> m35_14  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m35_102 -> m35_45  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m35_102 -> m35_50  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m35_102 -> m35_51  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m35_102 -> m35_55  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m35_102 -> m35_57  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m35_102 -> m35_62  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m35_102 -> m35_64  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m35_102 -> m35_66  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m35_102 -> m35_67  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m35_102 -> m35_69  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m35_102 -> m35_75  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m35_102 -> m35_76  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m35_102 -> m35_77  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m36_0 -> m36_1  [key=0, style=solid];
m36_1 -> m36_0  [color=blue, key=0, style=bold];
m37_0 -> m37_1  [key=0, style=solid];
m37_1 -> m37_2  [key=0, style=solid];
m37_2 -> m37_0  [color=blue, key=0, style=bold];
m37_28 -> m37_29  [key=0, style=solid];
m37_29 -> m37_32  [key=0, style=solid];
m37_29 -> m37_3  [key=2, style=dotted];
m37_29 -> m37_33  [key=2, style=dotted];
m37_30 -> m37_31  [key=0, style=solid];
m37_31 -> m37_32  [key=0, style=solid];
m37_31 -> m37_6  [key=2, style=dotted];
m37_32 -> m37_28  [color=blue, key=0, style=bold];
m37_84 -> m37_85  [key=0, style=solid];
m37_84 -> m37_86  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T2>", style=dashed];
m37_84 -> m37_88  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T2>", style=dashed];
m37_85 -> m37_86  [key=0, style=solid];
m37_85 -> m37_88  [key=0, style=solid];
m37_86 -> m37_87  [key=0, style=solid];
m37_86 -> m37_90  [key=2, style=dotted];
m37_88 -> m37_89  [key=0, style=solid];
m37_88 -> m37_90  [key=2, style=dotted];
m37_87 -> m37_89  [key=0, style=solid];
m37_89 -> m37_84  [color=blue, key=0, style=bold];
m37_51 -> m37_52  [key=0, style=solid];
m37_51 -> m37_53  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T3>", style=dashed];
m37_51 -> m37_54  [color=darkseagreen4, key=1, label="System.Func<T1, T2>", style=dashed];
m37_51 -> m37_55  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T3>", style=dashed];
m37_52 -> m37_53  [key=0, style=solid];
m37_52 -> m37_55  [key=0, style=solid];
m37_53 -> m37_54  [key=0, style=solid];
m37_54 -> m37_57  [key=0, style=solid];
m37_54 -> m37_3  [key=2, style=dotted];
m37_54 -> m37_33  [key=2, style=dotted];
m37_55 -> m37_56  [key=0, style=solid];
m37_56 -> m37_57  [key=0, style=solid];
m37_56 -> m37_6  [key=2, style=dotted];
m37_57 -> m37_51  [color=blue, key=0, style=bold];
m37_65 -> m37_66  [key=0, style=solid];
m37_65 -> m37_67  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T3>", style=dashed];
m37_65 -> m37_68  [color=darkseagreen4, key=1, label="System.Func<T1, T2>", style=dashed];
m37_65 -> m37_69  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T3>", style=dashed];
m37_65 -> m37_70  [color=darkseagreen4, key=1, label="System.Func<T3, T4>", style=dashed];
m37_66 -> m37_67  [key=0, style=solid];
m37_66 -> m37_69  [key=0, style=solid];
m37_67 -> m37_68  [key=0, style=solid];
m37_68 -> m37_71  [key=0, style=solid];
m37_68 -> m37_3  [key=2, style=dotted];
m37_68 -> m37_33  [key=2, style=dotted];
m37_69 -> m37_70  [key=0, style=solid];
m37_70 -> m37_71  [key=0, style=solid];
m37_70 -> m37_6  [key=2, style=dotted];
m37_70 -> m37_33  [key=2, style=dotted];
m37_71 -> m37_65  [color=blue, key=0, style=bold];
m37_3 -> m37_4  [key=0, style=solid];
m37_4 -> m37_5  [key=0, style=solid];
m37_5 -> m37_3  [color=blue, key=0, style=bold];
m37_72 -> m37_73  [key=0, style=solid];
m37_72 -> m37_74  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T3>", style=dashed];
m37_72 -> m37_75  [color=darkseagreen4, key=1, label="System.Func<T1, T2>", style=dashed];
m37_72 -> m37_76  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T3>", style=dashed];
m37_72 -> m37_77  [color=darkseagreen4, key=1, label="System.Func<T3, T2>", style=dashed];
m37_73 -> m37_74  [key=0, style=solid];
m37_73 -> m37_76  [key=0, style=solid];
m37_74 -> m37_75  [key=0, style=solid];
m37_75 -> m37_78  [key=0, style=solid];
m37_75 -> m37_33  [key=2, style=dotted];
m37_76 -> m37_77  [key=0, style=solid];
m37_77 -> m37_78  [key=0, style=solid];
m37_77 -> m37_33  [key=2, style=dotted];
m37_78 -> m37_72  [color=blue, key=0, style=bold];
m37_37 -> m37_38  [key=0, style=solid];
m37_19 -> m37_20  [key=0, style=solid];
m37_19 -> m37_3  [key=2, style=dotted];
m37_18 -> m37_19  [key=0, style=solid];
m37_20 -> m37_18  [color=blue, key=0, style=bold];
m37_38 -> m37_39  [key=0, style=solid];
m37_39 -> m37_37  [color=blue, key=0, style=bold];
m37_6 -> m37_7  [key=0, style=solid];
m37_7 -> m37_8  [key=0, style=solid];
m37_8 -> m37_6  [color=blue, key=0, style=bold];
m37_40 -> m37_41  [key=0, style=solid];
m37_40 -> m37_42  [color=darkseagreen4, key=1, label="CSharpx.Either<System.Func<T1, T3>, T2>", style=dashed];
m37_40 -> m37_43  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T2>", style=dashed];
m37_40 -> m37_45  [color=darkseagreen4, key=1, label="CSharpx.Either<System.Func<T1, T3>, T2>", style=dashed];
m37_40 -> m37_46  [color=darkseagreen4, key=1, label="CSharpx.Either<System.Func<T1, T3>, T2>", style=dashed];
m37_40 -> m37_48  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T2>", style=dashed];
m37_41 -> m37_42  [key=0, style=solid];
m37_41 -> m37_45  [key=0, style=solid];
m37_42 -> m37_43  [key=0, style=solid];
m37_42 -> m37_44  [color=darkseagreen4, key=1, label=f, style=dashed];
m37_43 -> m37_44  [key=0, style=solid];
m37_45 -> m37_46  [key=0, style=solid];
m37_45 -> m37_48  [key=0, style=solid];
m37_46 -> m37_47  [key=0, style=solid];
m37_48 -> m37_49  [key=0, style=solid];
m37_44 -> m37_50  [key=0, style=solid];
m37_44 -> m37_3  [key=2, style=dotted];
m37_44 -> m37_33  [key=2, style=dotted];
m37_47 -> m37_50  [key=0, style=solid];
m37_47 -> m37_6  [key=2, style=dotted];
m37_49 -> m37_50  [key=0, style=solid];
m37_49 -> m37_6  [key=2, style=dotted];
m37_50 -> m37_40  [color=blue, key=0, style=bold];
m37_21 -> m37_22  [key=0, style=solid];
m37_21 -> m37_23  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T2>", style=dashed];
m37_21 -> m37_24  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T2>", style=dashed];
m37_22 -> m37_23  [key=0, style=solid];
m37_22 -> m37_24  [key=0, style=solid];
m37_23 -> m37_25  [key=0, style=solid];
m37_24 -> m37_25  [key=0, style=solid];
m37_24 -> m37_26  [key=2, style=dotted];
m37_24 -> m37_27  [key=2, style=dotted];
m37_25 -> m37_21  [color=blue, key=0, style=bold];
m37_15 -> m37_16  [key=0, style=solid];
m37_16 -> m37_17  [key=0, style=solid];
m37_16 -> m37_19  [color=darkseagreen4, key=1, label=T1, style=dashed];
m37_17 -> m37_15  [color=blue, key=0, style=bold];
m37_9 -> m37_10  [key=0, style=solid];
m37_10 -> m37_11  [key=0, style=solid];
m37_10 -> m37_3  [key=2, style=dotted];
m37_11 -> m37_9  [color=blue, key=0, style=bold];
m37_79 -> m37_80  [key=0, style=solid];
m37_79 -> m37_81  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T1>", style=dashed];
m37_79 -> m37_82  [color=darkseagreen4, key=1, label=T2, style=dashed];
m37_80 -> m37_81  [key=0, style=solid];
m37_80 -> m37_82  [key=0, style=solid];
m37_81 -> m37_83  [key=0, style=solid];
m37_81 -> m37_3  [key=2, style=dotted];
m37_82 -> m37_83  [key=0, style=solid];
m37_82 -> m37_6  [key=2, style=dotted];
m37_83 -> m37_79  [color=blue, key=0, style=bold];
m37_12 -> m37_13  [key=0, style=solid];
m37_13 -> m37_14  [key=0, style=solid];
m37_13 -> m37_6  [key=2, style=dotted];
m37_14 -> m37_12  [color=blue, key=0, style=bold];
m37_58 -> m37_59  [key=0, style=solid];
m37_58 -> m37_60  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T3>", style=dashed];
m37_58 -> m37_61  [color=darkseagreen4, key=1, label="System.Func<T1, CSharpx.Either<T2, T3>>", style=dashed];
m37_58 -> m37_62  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T3>", style=dashed];
m37_59 -> m37_60  [key=0, style=solid];
m37_59 -> m37_62  [key=0, style=solid];
m37_60 -> m37_61  [key=0, style=solid];
m37_61 -> m37_64  [key=0, style=solid];
m37_61 -> m37_33  [key=2, style=dotted];
m37_62 -> m37_63  [key=0, style=solid];
m37_63 -> m37_64  [key=0, style=solid];
m37_63 -> m37_6  [key=2, style=dotted];
m37_64 -> m37_58  [color=blue, key=0, style=bold];
m37_34 -> m37_35  [key=0, style=solid];
m37_34 -> m37_38  [color=darkseagreen4, key=1, label=object, style=dashed];
m37_35 -> m37_36  [key=0, style=solid];
m37_35 -> m37_28  [key=2, style=dotted];
m37_35 -> m37_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_36 -> m37_34  [color=blue, key=0, style=bold];
m37_91 -> m37_1  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T2>", style=dashed];
m37_92 -> m37_4  [color=darkseagreen4, key=1, label="CSharpx.Either1Of2<T1, T2>", style=dashed];
m37_93 -> m37_7  [color=darkseagreen4, key=1, label="CSharpx.Either2Of2<T1, T2>", style=dashed];
m37_94 -> m37_38  [color=darkseagreen4, key=1, label=object, style=dashed];
m38_0 -> m38_1  [key=0, style=solid];
m38_1 -> m38_2  [key=0, style=solid];
m38_1 -> m38_3  [key=2, style=dotted];
m38_1 -> m38_4  [key=2, style=dotted];
m38_1 -> m38_1  [color=darkseagreen4, key=1, label=t, style=dashed];
m38_1 -> m38_5  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_1 -> m38_6  [color=darkseagreen4, key=1, label=t, style=dashed];
m38_2 -> m38_0  [color=blue, key=0, style=bold];
m38_5 -> m38_6  [key=0, style=solid];
m38_6 -> m38_7  [key=0, style=solid];
m38_6 -> m38_8  [key=2, style=dotted];
m38_7 -> m38_5  [color=blue, key=0, style=bold];
m38_9 -> m38_6  [color=darkseagreen4, key=1, label=t, style=dashed];
m39_0 -> m39_1  [key=0, style=solid];
m39_1 -> m39_2  [key=0, style=solid];
m39_1 -> m39_6  [key=2, style=dotted];
m39_1 -> m39_3  [color=darkseagreen4, key=1, label=tokenPartitions, style=dashed];
m39_2 -> m39_3  [key=0, style=solid];
m39_2 -> m39_7  [key=2, style=dotted];
m39_2 -> m39_8  [key=2, style=dotted];
m39_2 -> m39_9  [key=2, style=dotted];
m39_2 -> m39_10  [key=2, style=dotted];
m39_2 -> m39_11  [key=2, style=dotted];
m39_2 -> m39_12  [key=2, style=dotted];
m39_2 -> m39_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_3 -> m39_4  [key=0, style=solid];
m39_3 -> m39_13  [key=2, style=dotted];
m39_3 -> m39_14  [key=2, style=dotted];
m39_3 -> m39_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_3 -> m39_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_4 -> m39_5  [key=0, style=solid];
m39_4 -> m39_11  [key=2, style=dotted];
m39_4 -> m39_15  [key=2, style=dotted];
m39_4 -> m39_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_5 -> m39_0  [color=blue, key=0, style=bold];
m39_28 -> m39_29  [key=0, style=solid];
m39_16 -> m39_17  [key=0, style=solid];
m39_20 -> m39_21  [key=0, style=solid];
m39_24 -> m39_25  [key=0, style=solid];
m39_17 -> m39_18  [key=0, style=solid];
m39_17 -> m39_19  [key=2, style=dotted];
m39_18 -> m39_16  [color=blue, key=0, style=bold];
m39_21 -> m39_22  [key=0, style=solid];
m39_21 -> m39_23  [key=2, style=dotted];
m39_22 -> m39_20  [color=blue, key=0, style=bold];
m39_25 -> m39_26  [key=0, style=solid];
m39_25 -> m39_27  [key=2, style=dotted];
m39_26 -> m39_24  [color=blue, key=0, style=bold];
m39_29 -> m39_30  [key=0, style=solid];
m39_29 -> m39_23  [key=2, style=dotted];
m39_29 -> m39_31  [key=2, style=dotted];
m39_30 -> m39_28  [color=blue, key=0, style=bold];
m40_20 -> m40_21  [key=0, style=solid];
m40_21 -> m40_22  [key=0, style=solid];
m40_21 -> m40_23  [key=2, style=dotted];
m40_22 -> m40_20  [color=blue, key=0, style=bold];
m40_1 -> m40_2  [key=0, style=solid];
m40_1 -> m40_5  [key=2, style=dotted];
m40_1 -> m40_6  [key=2, style=dotted];
m40_0 -> m40_1  [key=0, style=solid];
m40_2 -> m40_3  [key=0, style=solid];
m40_2 -> m40_7  [key=2, style=dotted];
m40_3 -> m40_4  [key=0, style=solid];
m40_3 -> m40_8  [key=2, style=dotted];
m40_3 -> m40_9  [key=2, style=dotted];
m40_4 -> m40_0  [color=blue, key=0, style=bold];
m40_16 -> m40_17  [key=0, style=solid];
m40_16 -> m40_5  [key=2, style=dotted];
m40_16 -> m40_6  [key=2, style=dotted];
m40_15 -> m40_16  [key=0, style=solid];
m40_17 -> m40_18  [key=0, style=solid];
m40_17 -> m40_14  [key=2, style=dotted];
m40_17 -> m40_19  [key=2, style=dotted];
m40_18 -> m40_15  [color=blue, key=0, style=bold];
m40_11 -> m40_12  [key=0, style=solid];
m40_11 -> m40_5  [key=2, style=dotted];
m40_11 -> m40_6  [key=2, style=dotted];
m40_10 -> m40_11  [key=0, style=solid];
m40_12 -> m40_13  [key=0, style=solid];
m40_12 -> m40_14  [key=2, style=dotted];
m40_13 -> m40_10  [color=blue, key=0, style=bold];
m41_24 -> m41_25  [key=0, style=solid];
m41_25 -> m41_26  [key=0, style=solid];
m41_25 -> m41_27  [key=2, style=dotted];
m41_26 -> m41_24  [color=blue, key=0, style=bold];
m41_15 -> m41_16  [key=0, style=solid];
m41_15 -> m41_6  [color=darkorchid, key=3, label="Parameter variable System.Func<T> factory", style=bold];
m41_16 -> m41_17  [key=0, style=solid];
m41_16 -> m41_18  [key=0, style=solid];
m41_17 -> m41_21  [key=0, style=solid];
m41_17 -> m41_22  [key=2, style=dotted];
m41_18 -> m41_19  [key=0, style=solid];
m41_18 -> m41_20  [key=0, style=solid];
m41_19 -> m41_21  [key=0, style=solid];
m41_19 -> m41_22  [key=2, style=dotted];
m41_20 -> m41_21  [key=0, style=solid];
m41_20 -> m41_23  [key=2, style=dotted];
m41_21 -> m41_15  [color=blue, key=0, style=bold];
m41_6 -> m41_7  [key=0, style=solid];
m41_7 -> m41_8  [key=0, style=solid];
m41_7 -> m41_11  [key=0, style=solid];
m41_8 -> m41_9  [key=0, style=solid];
m41_11 -> m41_12  [key=0, style=solid];
m41_9 -> m41_10  [key=0, style=solid];
m41_9 -> m41_14  [key=2, style=dotted];
m41_10 -> m41_13  [key=0, style=solid];
m41_12 -> m41_13  [key=0, style=solid];
m41_13 -> m41_6  [color=blue, key=0, style=bold];
m41_0 -> m41_1  [key=0, style=solid];
m41_0 -> m41_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_1 -> m41_2  [key=0, style=solid];
m41_1 -> m41_5  [key=2, style=dotted];
m41_2 -> m41_3  [key=0, style=solid];
m41_3 -> m41_4  [key=0, style=solid];
m41_4 -> m41_0  [color=blue, key=0, style=bold];
m41_28 -> m41_2  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OneCharStringEnumerator", style=dashed];
m41_28 -> m41_3  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OneCharStringEnumerator", style=dashed];
m41_28 -> m41_7  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OneCharStringEnumerator", style=dashed];
m41_28 -> m41_8  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OneCharStringEnumerator", style=dashed];
m41_28 -> m41_9  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OneCharStringEnumerator", style=dashed];
m41_28 -> m41_11  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OneCharStringEnumerator", style=dashed];
m41_28 -> m41_16  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OneCharStringEnumerator", style=dashed];
m41_28 -> m41_18  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OneCharStringEnumerator", style=dashed];
m41_28 -> m41_20  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OneCharStringEnumerator", style=dashed];
m42_0 -> m42_1  [key=0, style=solid];
m42_1 -> m42_2  [key=0, style=solid];
m42_2 -> m42_0  [color=blue, key=0, style=bold];
m42_28 -> m42_29  [key=0, style=solid];
m42_28 -> m42_35  [color=darkorchid, key=3, label="Parameter variable System.Func<T1, T2> func", style=bold];
m42_28 -> m42_34  [color=darkorchid, key=3, label="Parameter variable T1 value", style=bold];
m42_29 -> m42_32  [key=0, style=solid];
m42_29 -> m42_3  [key=2, style=dotted];
m42_29 -> m42_33  [key=2, style=dotted];
m42_30 -> m42_31  [key=0, style=solid];
m42_31 -> m42_32  [key=0, style=solid];
m42_31 -> m42_6  [key=2, style=dotted];
m42_32 -> m42_28  [color=blue, key=0, style=bold];
m42_84 -> m42_85  [key=0, style=solid];
m42_84 -> m42_86  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T2>", style=dashed];
m42_84 -> m42_88  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T2>", style=dashed];
m42_85 -> m42_86  [key=0, style=solid];
m42_85 -> m42_88  [key=0, style=solid];
m42_86 -> m42_87  [key=0, style=solid];
m42_86 -> m42_90  [key=2, style=dotted];
m42_88 -> m42_89  [key=0, style=solid];
m42_88 -> m42_90  [key=2, style=dotted];
m42_87 -> m42_89  [key=0, style=solid];
m42_89 -> m42_84  [color=blue, key=0, style=bold];
m42_51 -> m42_52  [key=0, style=solid];
m42_51 -> m42_53  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T3>", style=dashed];
m42_51 -> m42_54  [color=darkseagreen4, key=1, label="System.Func<T1, T2>", style=dashed];
m42_51 -> m42_55  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T3>", style=dashed];
m42_52 -> m42_53  [key=0, style=solid];
m42_52 -> m42_55  [key=0, style=solid];
m42_53 -> m42_54  [key=0, style=solid];
m42_54 -> m42_57  [key=0, style=solid];
m42_54 -> m42_3  [key=2, style=dotted];
m42_54 -> m42_33  [key=2, style=dotted];
m42_55 -> m42_56  [key=0, style=solid];
m42_56 -> m42_57  [key=0, style=solid];
m42_56 -> m42_6  [key=2, style=dotted];
m42_57 -> m42_51  [color=blue, key=0, style=bold];
m42_65 -> m42_66  [key=0, style=solid];
m42_65 -> m42_67  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T3>", style=dashed];
m42_65 -> m42_68  [color=darkseagreen4, key=1, label="System.Func<T1, T2>", style=dashed];
m42_65 -> m42_69  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T3>", style=dashed];
m42_65 -> m42_70  [color=darkseagreen4, key=1, label="System.Func<T3, T4>", style=dashed];
m42_66 -> m42_67  [key=0, style=solid];
m42_66 -> m42_69  [key=0, style=solid];
m42_67 -> m42_68  [key=0, style=solid];
m42_68 -> m42_71  [key=0, style=solid];
m42_68 -> m42_3  [key=2, style=dotted];
m42_68 -> m42_33  [key=2, style=dotted];
m42_69 -> m42_70  [key=0, style=solid];
m42_70 -> m42_71  [key=0, style=solid];
m42_70 -> m42_6  [key=2, style=dotted];
m42_70 -> m42_33  [key=2, style=dotted];
m42_71 -> m42_65  [color=blue, key=0, style=bold];
m42_3 -> m42_4  [key=0, style=solid];
m42_4 -> m42_5  [key=0, style=solid];
m42_5 -> m42_3  [color=blue, key=0, style=bold];
m42_72 -> m42_73  [key=0, style=solid];
m42_72 -> m42_74  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T3>", style=dashed];
m42_72 -> m42_75  [color=darkseagreen4, key=1, label="System.Func<T1, T2>", style=dashed];
m42_72 -> m42_76  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T3>", style=dashed];
m42_72 -> m42_77  [color=darkseagreen4, key=1, label="System.Func<T3, T2>", style=dashed];
m42_73 -> m42_74  [key=0, style=solid];
m42_73 -> m42_76  [key=0, style=solid];
m42_74 -> m42_75  [key=0, style=solid];
m42_75 -> m42_78  [key=0, style=solid];
m42_75 -> m42_33  [key=2, style=dotted];
m42_76 -> m42_77  [key=0, style=solid];
m42_77 -> m42_78  [key=0, style=solid];
m42_77 -> m42_33  [key=2, style=dotted];
m42_78 -> m42_72  [color=blue, key=0, style=bold];
m42_37 -> m42_38  [key=0, style=solid];
m42_19 -> m42_20  [key=0, style=solid];
m42_19 -> m42_3  [key=2, style=dotted];
m42_18 -> m42_19  [key=0, style=solid];
m42_20 -> m42_18  [color=blue, key=0, style=bold];
m42_38 -> m42_39  [key=0, style=solid];
m42_39 -> m42_37  [color=blue, key=0, style=bold];
m42_6 -> m42_7  [key=0, style=solid];
m42_7 -> m42_8  [key=0, style=solid];
m42_8 -> m42_6  [color=blue, key=0, style=bold];
m42_40 -> m42_41  [key=0, style=solid];
m42_40 -> m42_42  [color=darkseagreen4, key=1, label="CSharpx.Either<System.Func<T1, T3>, T2>", style=dashed];
m42_40 -> m42_43  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T2>", style=dashed];
m42_40 -> m42_45  [color=darkseagreen4, key=1, label="CSharpx.Either<System.Func<T1, T3>, T2>", style=dashed];
m42_40 -> m42_46  [color=darkseagreen4, key=1, label="CSharpx.Either<System.Func<T1, T3>, T2>", style=dashed];
m42_40 -> m42_48  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T2>", style=dashed];
m42_41 -> m42_42  [key=0, style=solid];
m42_41 -> m42_45  [key=0, style=solid];
m42_42 -> m42_43  [key=0, style=solid];
m42_42 -> m42_44  [color=darkseagreen4, key=1, label=f, style=dashed];
m42_43 -> m42_44  [key=0, style=solid];
m42_45 -> m42_46  [key=0, style=solid];
m42_45 -> m42_48  [key=0, style=solid];
m42_46 -> m42_47  [key=0, style=solid];
m42_48 -> m42_49  [key=0, style=solid];
m42_44 -> m42_50  [key=0, style=solid];
m42_44 -> m42_3  [key=2, style=dotted];
m42_44 -> m42_33  [key=2, style=dotted];
m42_47 -> m42_50  [key=0, style=solid];
m42_47 -> m42_6  [key=2, style=dotted];
m42_49 -> m42_50  [key=0, style=solid];
m42_49 -> m42_6  [key=2, style=dotted];
m42_50 -> m42_40  [color=blue, key=0, style=bold];
m42_21 -> m42_22  [key=0, style=solid];
m42_21 -> m42_23  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T2>", style=dashed];
m42_21 -> m42_24  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T2>", style=dashed];
m42_22 -> m42_23  [key=0, style=solid];
m42_22 -> m42_24  [key=0, style=solid];
m42_23 -> m42_25  [key=0, style=solid];
m42_24 -> m42_25  [key=0, style=solid];
m42_24 -> m42_26  [key=2, style=dotted];
m42_24 -> m42_27  [key=2, style=dotted];
m42_25 -> m42_21  [color=blue, key=0, style=bold];
m42_15 -> m42_16  [key=0, style=solid];
m42_16 -> m42_17  [key=0, style=solid];
m42_16 -> m42_19  [color=darkseagreen4, key=1, label=T1, style=dashed];
m42_17 -> m42_15  [color=blue, key=0, style=bold];
m42_9 -> m42_10  [key=0, style=solid];
m42_10 -> m42_11  [key=0, style=solid];
m42_10 -> m42_3  [key=2, style=dotted];
m42_11 -> m42_9  [color=blue, key=0, style=bold];
m42_79 -> m42_80  [key=0, style=solid];
m42_79 -> m42_81  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T1>", style=dashed];
m42_79 -> m42_82  [color=darkseagreen4, key=1, label=T2, style=dashed];
m42_80 -> m42_81  [key=0, style=solid];
m42_80 -> m42_82  [key=0, style=solid];
m42_81 -> m42_83  [key=0, style=solid];
m42_81 -> m42_3  [key=2, style=dotted];
m42_82 -> m42_83  [key=0, style=solid];
m42_82 -> m42_6  [key=2, style=dotted];
m42_83 -> m42_79  [color=blue, key=0, style=bold];
m42_12 -> m42_13  [key=0, style=solid];
m42_13 -> m42_14  [key=0, style=solid];
m42_13 -> m42_6  [key=2, style=dotted];
m42_14 -> m42_12  [color=blue, key=0, style=bold];
m42_58 -> m42_59  [key=0, style=solid];
m42_58 -> m42_60  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T3>", style=dashed];
m42_58 -> m42_61  [color=darkseagreen4, key=1, label="System.Func<T1, CSharpx.Either<T2, T3>>", style=dashed];
m42_58 -> m42_62  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T3>", style=dashed];
m42_59 -> m42_60  [key=0, style=solid];
m42_59 -> m42_62  [key=0, style=solid];
m42_60 -> m42_61  [key=0, style=solid];
m42_61 -> m42_64  [key=0, style=solid];
m42_61 -> m42_33  [key=2, style=dotted];
m42_62 -> m42_63  [key=0, style=solid];
m42_63 -> m42_64  [key=0, style=solid];
m42_63 -> m42_6  [key=2, style=dotted];
m42_64 -> m42_58  [color=blue, key=0, style=bold];
m42_34 -> m42_35  [key=0, style=solid];
m42_34 -> m42_38  [color=darkseagreen4, key=1, label=object, style=dashed];
m42_34 -> m42_28  [color=darkorchid, key=3, label="method methodReturn CSharpx.Either<T1, System.Exception> Cast", style=bold];
m42_35 -> m42_36  [key=0, style=solid];
m42_35 -> m42_28  [key=2, style=dotted];
m42_35 -> m42_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_36 -> m42_34  [color=blue, key=0, style=bold];
m42_91 -> m42_1  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T2>", style=dashed];
m42_92 -> m42_4  [color=darkseagreen4, key=1, label="CSharpx.Either1Of2<T1, T2>", style=dashed];
m42_93 -> m42_7  [color=darkseagreen4, key=1, label="CSharpx.Either2Of2<T1, T2>", style=dashed];
m42_94 -> m42_38  [color=darkseagreen4, key=1, label=object, style=dashed];
m45_0 -> m45_1  [key=0, style=solid];
m45_1 -> m45_2  [key=0, style=solid];
m45_1 -> m45_3  [key=2, style=dotted];
m45_2 -> m45_0  [color=blue, key=0, style=bold];
m45_50 -> m45_51  [key=0, style=solid];
m45_50 -> m45_52  [color=darkseagreen4, key=1, label="?", style=dashed];
m45_50 -> m45_53  [color=darkseagreen4, key=1, label="?", style=dashed];
m45_4 -> m45_5  [key=0, style=solid];
m45_5 -> m45_6  [key=0, style=solid];
m45_6 -> m45_4  [color=blue, key=0, style=bold];
m45_7 -> m45_8  [key=0, style=solid];
m45_8 -> m45_9  [key=0, style=solid];
m45_9 -> m45_7  [color=blue, key=0, style=bold];
m45_10 -> m45_11  [key=0, style=solid];
m45_11 -> m45_12  [key=0, style=solid];
m45_12 -> m45_10  [color=blue, key=0, style=bold];
m45_13 -> m45_14  [key=0, style=solid];
m45_14 -> m45_15  [key=0, style=solid];
m45_15 -> m45_13  [color=blue, key=0, style=bold];
m45_16 -> m45_17  [key=0, style=solid];
m45_16 -> m45_19  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m45_16 -> m45_21  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m45_16 -> m45_23  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m45_16 -> m45_25  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m45_16 -> m45_28  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m45_16 -> m45_31  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m45_16 -> m45_34  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m45_17 -> m45_18  [key=0, style=solid];
m45_17 -> m45_20  [key=0, style=solid];
m45_17 -> m45_22  [key=0, style=solid];
m45_17 -> m45_24  [key=0, style=solid];
m45_17 -> m45_27  [key=0, style=solid];
m45_17 -> m45_30  [key=0, style=solid];
m45_17 -> m45_33  [key=0, style=solid];
m45_17 -> m45_35  [key=0, style=solid];
m45_19 -> m45_37  [key=0, style=solid];
m45_19 -> m45_39  [key=2, style=dotted];
m45_21 -> m45_37  [key=0, style=solid];
m45_21 -> m45_39  [key=2, style=dotted];
m45_23 -> m45_37  [key=0, style=solid];
m45_23 -> m45_39  [key=2, style=dotted];
m45_25 -> m45_26  [key=0, style=solid];
m45_28 -> m45_29  [key=0, style=solid];
m45_31 -> m45_32  [key=0, style=solid];
m45_34 -> m45_37  [key=0, style=solid];
m45_34 -> m45_39  [key=2, style=dotted];
m45_18 -> m45_19  [key=0, style=solid];
m45_20 -> m45_21  [key=0, style=solid];
m45_22 -> m45_23  [key=0, style=solid];
m45_24 -> m45_25  [key=0, style=solid];
m45_27 -> m45_28  [key=0, style=solid];
m45_30 -> m45_31  [key=0, style=solid];
m45_33 -> m45_34  [key=0, style=solid];
m45_35 -> m45_36  [key=0, style=solid];
m45_26 -> m45_37  [key=0, style=solid];
m45_26 -> m45_39  [key=2, style=dotted];
m45_29 -> m45_37  [key=0, style=solid];
m45_29 -> m45_39  [key=2, style=dotted];
m45_32 -> m45_37  [key=0, style=solid];
m45_32 -> m45_39  [key=2, style=dotted];
m45_36 -> m45_37  [key=0, style=solid];
m45_37 -> m45_16  [color=blue, key=0, style=bold];
m45_38 -> m45_37  [key=0, style=solid];
m45_38 -> m45_40  [key=2, style=dotted];
m45_41 -> m45_42  [key=0, style=solid];
m45_42 -> m45_43  [key=0, style=solid];
m45_42 -> m45_46  [key=2, style=dotted];
m45_42 -> m45_42  [color=darkseagreen4, key=1, label=e, style=dashed];
m45_43 -> m45_44  [key=0, style=solid];
m45_43 -> m45_47  [key=2, style=dotted];
m45_43 -> m45_48  [key=2, style=dotted];
m45_43 -> m45_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_44 -> m45_45  [key=0, style=solid];
m45_44 -> m45_49  [key=2, style=dotted];
m45_45 -> m45_41  [color=blue, key=0, style=bold];
m45_51 -> m45_52  [key=0, style=solid];
m45_51 -> m45_48  [key=2, style=dotted];
m45_51 -> m45_49  [key=2, style=dotted];
m45_51 -> m45_51  [color=darkseagreen4, key=1, label=e, style=dashed];
m45_51 -> m45_54  [color=darkseagreen4, key=1, label=names, style=dashed];
m45_52 -> m45_53  [key=0, style=solid];
m45_52 -> m45_56  [key=2, style=dotted];
m45_52 -> m45_54  [color=darkseagreen4, key=1, label=namesCount, style=dashed];
m45_53 -> m45_54  [key=0, style=solid];
m45_53 -> m45_57  [key=2, style=dotted];
m45_53 -> m45_48  [key=2, style=dotted];
m45_53 -> m45_49  [key=2, style=dotted];
m45_53 -> m45_53  [color=darkseagreen4, key=1, label=e, style=dashed];
m45_54 -> m45_55  [key=0, style=solid];
m45_54 -> m45_58  [key=2, style=dotted];
m45_54 -> m45_59  [key=2, style=dotted];
m45_54 -> m45_60  [key=2, style=dotted];
m45_54 -> m45_61  [key=2, style=dotted];
m45_54 -> m45_62  [key=2, style=dotted];
m45_54 -> m45_63  [key=2, style=dotted];
m45_54 -> m45_64  [key=2, style=dotted];
m45_55 -> m45_50  [color=blue, key=0, style=bold];
m46_13 -> m46_14  [key=0, style=solid];
m46_13 -> m46_16  [color=darkseagreen4, key=1, label="System.Action<CommandLine.ParserSettings>", style=dashed];
m46_14 -> m46_15  [key=0, style=solid];
m46_14 -> m46_11  [key=2, style=dotted];
m46_16 -> m46_17  [key=0, style=solid];
m46_16 -> m46_19  [key=2, style=dotted];
m46_15 -> m46_16  [key=0, style=solid];
m46_15 -> m46_3  [key=2, style=dotted];
m46_17 -> m46_18  [key=0, style=solid];
m46_18 -> m46_13  [color=blue, key=0, style=bold];
m46_64 -> m46_65  [key=0, style=solid];
m46_64 -> m46_66  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_64 -> m46_67  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_64 -> m46_69  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_64 -> m46_70  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_64 -> m46_71  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_64 -> m46_72  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m46_64 -> m46_74  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m46_64 -> m46_76  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_65 -> m46_66  [key=0, style=solid];
m46_65 -> m46_11  [key=2, style=dotted];
m46_66 -> m46_67  [key=0, style=solid];
m46_66 -> m46_11  [key=2, style=dotted];
m46_67 -> m46_68  [key=0, style=solid];
m46_67 -> m46_11  [key=2, style=dotted];
m46_69 -> m46_70  [key=0, style=solid];
m46_69 -> m46_76  [key=0, style=solid];
m46_69 -> m46_47  [key=2, style=dotted];
m46_69 -> m46_69  [color=darkseagreen4, key=1, label=verbInstance, style=dashed];
m46_70 -> m46_71  [key=0, style=solid];
m46_70 -> m46_48  [key=2, style=dotted];
m46_70 -> m46_49  [key=2, style=dotted];
m46_71 -> m46_72  [key=0, style=solid];
m46_71 -> m46_61  [key=2, style=dotted];
m46_72 -> m46_73  [key=0, style=solid];
m46_72 -> m46_74  [key=0, style=solid];
m46_74 -> m46_75  [key=0, style=solid];
m46_74 -> m46_63  [key=2, style=dotted];
m46_76 -> m46_77  [key=0, style=solid];
m46_76 -> m46_48  [key=2, style=dotted];
m46_76 -> m46_49  [key=2, style=dotted];
m46_68 -> m46_69  [key=0, style=solid];
m46_73 -> m46_75  [key=0, style=solid];
m46_73 -> m46_62  [key=2, style=dotted];
m46_75 -> m46_78  [key=0, style=solid];
m46_77 -> m46_78  [key=0, style=solid];
m46_78 -> m46_64  [color=blue, key=0, style=bold];
m46_125 -> m46_190  [key=0, style=solid];
m46_125 -> m46_191  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_125 -> m46_192  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m46_125 -> m46_193  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m46_125 -> m46_195  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m46_125 -> m46_196  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m46_190 -> m46_191  [key=0, style=solid];
m46_190 -> m46_193  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
m46_190 -> m46_196  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
m46_191 -> m46_192  [key=0, style=solid];
m46_191 -> m46_198  [key=0, style=solid];
m46_191 -> m46_193  [color=darkseagreen4, key=1, label=arg, style=dashed];
m46_191 -> m46_196  [color=darkseagreen4, key=1, label=arg, style=dashed];
m46_192 -> m46_193  [key=0, style=solid];
m46_192 -> m46_195  [key=0, style=solid];
m46_193 -> m46_194  [key=0, style=solid];
m46_193 -> m46_195  [key=0, style=solid];
m46_193 -> m46_200  [key=2, style=dotted];
m46_195 -> m46_196  [key=0, style=solid];
m46_195 -> m46_191  [key=0, style=solid];
m46_195 -> m46_92  [key=2, style=dotted];
m46_196 -> m46_197  [key=0, style=solid];
m46_196 -> m46_191  [key=0, style=solid];
m46_196 -> m46_201  [key=2, style=dotted];
m46_198 -> m46_199  [key=0, style=solid];
m46_194 -> m46_199  [key=0, style=solid];
m46_197 -> m46_199  [key=0, style=solid];
m46_199 -> m46_125  [color=blue, key=0, style=bold];
m46_28 -> m46_29  [key=0, style=solid];
m46_29 -> m46_30  [key=0, style=solid];
m46_29 -> m46_31  [key=2, style=dotted];
m46_30 -> m46_28  [color=blue, key=0, style=bold];
m46_84 -> m46_85  [key=0, style=solid];
m46_84 -> m46_86  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_84 -> m46_87  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_84 -> m46_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_84 -> m46_90  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_85 -> m46_86  [key=0, style=solid];
m46_86 -> m46_87  [key=0, style=solid];
m46_86 -> m46_88  [key=0, style=solid];
m46_86 -> m46_92  [key=2, style=dotted];
m46_87 -> m46_91  [key=0, style=solid];
m46_88 -> m46_89  [key=0, style=solid];
m46_88 -> m46_93  [key=2, style=dotted];
m46_88 -> m46_90  [color=darkseagreen4, key=1, label=pair, style=dashed];
m46_90 -> m46_91  [key=0, style=solid];
m46_90 -> m46_94  [key=2, style=dotted];
m46_89 -> m46_90  [key=0, style=solid];
m46_89 -> m46_91  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m46_91 -> m46_84  [color=blue, key=0, style=bold];
m46_37 -> m46_113  [key=0, style=solid];
m46_37 -> m46_116  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_37 -> m46_118  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_37 -> m46_122  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_113 -> m46_114  [key=0, style=solid];
m46_113 -> m46_124  [key=2, style=dotted];
m46_113 -> m46_115  [color=darkseagreen4, key=1, label=pair, style=dashed];
m46_113 -> m46_116  [color=darkseagreen4, key=1, label=pair, style=dashed];
m46_113 -> m46_118  [color=darkseagreen4, key=1, label=pair, style=dashed];
m46_116 -> m46_117  [key=0, style=solid];
m46_116 -> m46_121  [key=0, style=solid];
m46_116 -> m46_125  [key=2, style=dotted];
m46_116 -> m46_126  [key=2, style=dotted];
m46_118 -> m46_119  [key=0, style=solid];
m46_118 -> m46_127  [key=2, style=dotted];
m46_122 -> m46_123  [key=0, style=solid];
m46_122 -> m46_126  [key=2, style=dotted];
m46_114 -> m46_115  [key=0, style=solid];
m46_114 -> m46_119  [color=darkseagreen4, key=1, label=helpWriter, style=dashed];
m46_115 -> m46_116  [key=0, style=solid];
m46_115 -> m46_122  [key=0, style=solid];
m46_119 -> m46_120  [key=0, style=solid];
m46_119 -> m46_128  [key=2, style=dotted];
m46_117 -> m46_118  [key=0, style=solid];
m46_121 -> m46_123  [key=0, style=solid];
m46_120 -> m46_123  [key=0, style=solid];
m46_123 -> m46_37  [color=blue, key=0, style=bold];
m46_4 -> m46_5  [key=0, style=solid];
m46_4 -> m46_6  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m46_4 -> m46_8  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m46_5 -> m46_6  [key=0, style=solid];
m46_5 -> m46_11  [key=2, style=dotted];
m46_6 -> m46_7  [key=0, style=solid];
m46_6 -> m46_8  [key=0, style=solid];
m46_8 -> m46_9  [key=0, style=solid];
m46_7 -> m46_10  [key=0, style=solid];
m46_7 -> m46_12  [key=2, style=dotted];
m46_9 -> m46_10  [key=0, style=solid];
m46_10 -> m46_4  [color=blue, key=0, style=bold];
m46_32 -> m46_33  [key=0, style=solid];
m46_32 -> m46_34  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_32 -> m46_35  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_33 -> m46_34  [key=0, style=solid];
m46_33 -> m46_11  [key=2, style=dotted];
m46_34 -> m46_35  [key=0, style=solid];
m46_34 -> m46_11  [key=2, style=dotted];
m46_35 -> m46_36  [key=0, style=solid];
m46_35 -> m46_37  [key=2, style=dotted];
m46_36 -> m46_32  [color=blue, key=0, style=bold];
m46_50 -> m46_51  [key=0, style=solid];
m46_50 -> m46_52  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_50 -> m46_53  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_50 -> m46_54  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_50 -> m46_55  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m46_50 -> m46_57  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m46_51 -> m46_52  [key=0, style=solid];
m46_51 -> m46_11  [key=2, style=dotted];
m46_52 -> m46_53  [key=0, style=solid];
m46_52 -> m46_11  [key=2, style=dotted];
m46_53 -> m46_54  [key=0, style=solid];
m46_53 -> m46_59  [key=0, style=solid];
m46_53 -> m46_37  [key=2, style=dotted];
m46_54 -> m46_55  [key=0, style=solid];
m46_54 -> m46_61  [key=2, style=dotted];
m46_55 -> m46_56  [key=0, style=solid];
m46_55 -> m46_57  [key=0, style=solid];
m46_57 -> m46_58  [key=0, style=solid];
m46_57 -> m46_63  [key=2, style=dotted];
m46_59 -> m46_60  [key=0, style=solid];
m46_56 -> m46_58  [key=0, style=solid];
m46_56 -> m46_62  [key=2, style=dotted];
m46_58 -> m46_60  [key=0, style=solid];
m46_60 -> m46_50  [color=blue, key=0, style=bold];
m46_0 -> m46_1  [key=0, style=solid];
m46_1 -> m46_2  [key=0, style=solid];
m46_1 -> m46_3  [key=2, style=dotted];
m46_2 -> m46_0  [color=blue, key=0, style=bold];
m46_232 -> m46_233  [key=0, style=solid];
m46_22 -> m46_23  [key=0, style=solid];
m46_22 -> m46_24  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m46_22 -> m46_25  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m46_22 -> m46_26  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m46_23 -> m46_24  [key=0, style=solid];
m46_24 -> m46_25  [key=0, style=solid];
m46_25 -> m46_26  [key=0, style=solid];
m46_26 -> m46_27  [key=0, style=solid];
m46_27 -> m46_22  [color=blue, key=0, style=bold];
m46_233 -> m46_234  [key=0, style=solid];
m46_233 -> m46_235  [key=2, style=dotted];
m46_234 -> m46_232  [color=blue, key=0, style=bold];
m46_47 -> m46_160  [key=0, style=solid];
m46_47 -> m46_161  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_47 -> m46_162  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_47 -> m46_164  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_47 -> m46_166  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_47 -> m46_167  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_47 -> m46_169  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_47 -> m46_172  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_47 -> m46_174  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_47 -> m46_176  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_47 -> m46_177  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_47 -> m46_179  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_160 -> m46_161  [key=0, style=solid];
m46_160 -> m46_106  [key=2, style=dotted];
m46_160 -> m46_166  [color=darkseagreen4, key=1, label=verbs, style=dashed];
m46_161 -> m46_162  [key=0, style=solid];
m46_161 -> m46_124  [key=2, style=dotted];
m46_161 -> m46_163  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m46_161 -> m46_164  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m46_161 -> m46_167  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m46_161 -> m46_171  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m46_161 -> m46_172  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m46_161 -> m46_178  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m46_161 -> m46_179  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m46_162 -> m46_163  [key=0, style=solid];
m46_162 -> m46_166  [key=0, style=solid];
m46_164 -> m46_165  [key=0, style=solid];
m46_164 -> m46_182  [key=2, style=dotted];
m46_166 -> m46_167  [key=0, style=solid];
m46_166 -> m46_183  [key=2, style=dotted];
m46_166 -> m46_169  [color=darkseagreen4, key=1, label=optionMap, style=dashed];
m46_167 -> m46_168  [key=0, style=solid];
m46_167 -> m46_169  [key=0, style=solid];
m46_167 -> m46_184  [key=2, style=dotted];
m46_169 -> m46_170  [key=0, style=solid];
m46_169 -> m46_185  [key=2, style=dotted];
m46_169 -> m46_174  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m46_169 -> m46_176  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m46_172 -> m46_173  [key=0, style=solid];
m46_172 -> m46_182  [key=2, style=dotted];
m46_174 -> m46_175  [key=0, style=solid];
m46_174 -> m46_186  [key=2, style=dotted];
m46_174 -> m46_177  [color=darkseagreen4, key=1, label="ref object", style=dashed];
m46_174 -> m46_181  [color=darkseagreen4, key=1, label="ref object", style=dashed];
m46_176 -> m46_177  [key=0, style=solid];
m46_176 -> m46_187  [key=2, style=dotted];
m46_176 -> m46_181  [color=darkseagreen4, key=1, label="ref object", style=dashed];
m46_177 -> m46_178  [key=0, style=solid];
m46_177 -> m46_188  [key=2, style=dotted];
m46_177 -> m46_189  [key=2, style=dotted];
m46_177 -> m46_126  [key=2, style=dotted];
m46_177 -> m46_180  [color=darkseagreen4, key=1, label=verbResult, style=dashed];
m46_179 -> m46_180  [key=0, style=solid];
m46_179 -> m46_185  [key=2, style=dotted];
m46_179 -> m46_182  [key=2, style=dotted];
m46_163 -> m46_164  [key=0, style=solid];
m46_163 -> m46_165  [key=0, style=solid];
m46_171 -> m46_172  [key=0, style=solid];
m46_171 -> m46_173  [key=0, style=solid];
m46_178 -> m46_179  [key=0, style=solid];
m46_178 -> m46_180  [key=0, style=solid];
m46_165 -> m46_181  [key=0, style=solid];
m46_168 -> m46_181  [key=0, style=solid];
m46_170 -> m46_171  [key=0, style=solid];
m46_170 -> m46_174  [key=0, style=solid];
m46_173 -> m46_181  [key=0, style=solid];
m46_175 -> m46_176  [key=0, style=solid];
m46_175 -> m46_177  [key=0, style=solid];
m46_180 -> m46_181  [key=0, style=solid];
m46_181 -> m46_47  [color=blue, key=0, style=bold];
m46_126 -> m46_129  [key=0, style=solid];
m46_126 -> m46_130  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_126 -> m46_132  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_126 -> m46_133  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_126 -> m46_139  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_126 -> m46_141  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_129 -> m46_130  [key=0, style=solid];
m46_129 -> m46_148  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m46_130 -> m46_131  [key=0, style=solid];
m46_130 -> m46_151  [key=2, style=dotted];
m46_130 -> m46_139  [color=darkseagreen4, key=1, label=optionMap, style=dashed];
m46_130 -> m46_148  [color=darkseagreen4, key=1, label=optionMap, style=dashed];
m46_132 -> m46_133  [key=0, style=solid];
m46_132 -> m46_153  [key=2, style=dotted];
m46_132 -> m46_145  [color=darkseagreen4, key=1, label=valueMapper, style=dashed];
m46_132 -> m46_146  [color=darkseagreen4, key=1, label=valueMapper, style=dashed];
m46_133 -> m46_134  [key=0, style=solid];
m46_133 -> m46_154  [key=2, style=dotted];
m46_133 -> m46_135  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m46_133 -> m46_139  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m46_133 -> m46_144  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m46_139 -> m46_140  [key=0, style=solid];
m46_139 -> m46_157  [key=2, style=dotted];
m46_139 -> m46_143  [color=darkseagreen4, key=1, label=result, style=dashed];
m46_141 -> m46_142  [key=0, style=solid];
m46_141 -> m46_95  [key=2, style=dotted];
m46_148 -> m46_149  [key=0, style=solid];
m46_148 -> m46_159  [key=2, style=dotted];
m46_148 -> m46_148  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m46_131 -> m46_132  [key=0, style=solid];
m46_131 -> m46_152  [key=2, style=dotted];
m46_145 -> m46_146  [key=0, style=solid];
m46_145 -> m46_134  [key=0, style=solid];
m46_146 -> m46_147  [key=0, style=solid];
m46_146 -> m46_134  [key=0, style=solid];
m46_146 -> m46_158  [key=2, style=dotted];
m46_134 -> m46_135  [key=0, style=solid];
m46_134 -> m46_148  [key=0, style=solid];
m46_134 -> m46_155  [key=2, style=dotted];
m46_135 -> m46_136  [key=0, style=solid];
m46_135 -> m46_137  [color=darkseagreen4, key=1, label=argument, style=dashed];
m46_135 -> m46_146  [color=darkseagreen4, key=1, label=argument, style=dashed];
m46_144 -> m46_134  [key=0, style=solid];
m46_144 -> m46_155  [key=2, style=dotted];
m46_136 -> m46_137  [key=0, style=solid];
m46_136 -> m46_134  [key=0, style=solid];
m46_136 -> m46_92  [key=2, style=dotted];
m46_137 -> m46_138  [key=0, style=solid];
m46_137 -> m46_156  [key=2, style=dotted];
m46_137 -> m46_139  [color=darkseagreen4, key=1, label=parser, style=dashed];
m46_137 -> m46_141  [color=darkseagreen4, key=1, label=parser, style=dashed];
m46_138 -> m46_139  [key=0, style=solid];
m46_138 -> m46_145  [key=0, style=solid];
m46_140 -> m46_141  [key=0, style=solid];
m46_140 -> m46_143  [key=0, style=solid];
m46_143 -> m46_144  [key=0, style=solid];
m46_143 -> m46_134  [key=0, style=solid];
m46_142 -> m46_134  [key=0, style=solid];
m46_142 -> m46_148  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m46_147 -> m46_134  [key=0, style=solid];
m46_147 -> m46_148  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m46_149 -> m46_150  [key=0, style=solid];
m46_150 -> m46_126  [color=blue, key=0, style=bold];
m46_95 -> m46_96  [key=0, style=solid];
m46_95 -> m46_98  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_95 -> m46_99  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_95 -> m46_100  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_95 -> m46_101  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_95 -> m46_102  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.ParsingError>", style=dashed];
m46_96 -> m46_97  [key=0, style=solid];
m46_96 -> m46_98  [key=0, style=solid];
m46_96 -> m46_105  [key=2, style=dotted];
m46_98 -> m46_99  [key=0, style=solid];
m46_98 -> m46_106  [key=2, style=dotted];
m46_98 -> m46_100  [color=darkseagreen4, key=1, label=property, style=dashed];
m46_98 -> m46_101  [color=darkseagreen4, key=1, label=property, style=dashed];
m46_99 -> m46_100  [key=0, style=solid];
m46_99 -> m46_101  [key=0, style=solid];
m46_99 -> m46_94  [key=2, style=dotted];
m46_100 -> m46_101  [key=0, style=solid];
m46_100 -> m46_107  [key=2, style=dotted];
m46_100 -> m46_108  [key=2, style=dotted];
m46_101 -> m46_102  [key=0, style=solid];
m46_101 -> m46_94  [key=2, style=dotted];
m46_101 -> m46_103  [color=darkseagreen4, key=1, label=parserState, style=dashed];
m46_102 -> m46_103  [key=0, style=solid];
m46_102 -> m46_104  [key=0, style=solid];
m46_97 -> m46_104  [key=0, style=solid];
m46_103 -> m46_102  [key=0, style=solid];
m46_103 -> m46_109  [key=2, style=dotted];
m46_104 -> m46_95  [color=blue, key=0, style=bold];
m46_20 -> m46_21  [key=0, style=solid];
m46_21 -> m46_20  [color=blue, key=0, style=bold];
m46_38 -> m46_39  [key=0, style=solid];
m46_38 -> m46_40  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_38 -> m46_41  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_38 -> m46_43  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_38 -> m46_44  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_39 -> m46_40  [key=0, style=solid];
m46_39 -> m46_11  [key=2, style=dotted];
m46_40 -> m46_41  [key=0, style=solid];
m46_40 -> m46_11  [key=2, style=dotted];
m46_41 -> m46_42  [key=0, style=solid];
m46_41 -> m46_11  [key=2, style=dotted];
m46_43 -> m46_44  [key=0, style=solid];
m46_43 -> m46_47  [key=2, style=dotted];
m46_43 -> m46_43  [color=darkseagreen4, key=1, label=verbInstance, style=dashed];
m46_43 -> m46_45  [color=darkseagreen4, key=1, label=result, style=dashed];
m46_44 -> m46_45  [key=0, style=solid];
m46_44 -> m46_48  [key=2, style=dotted];
m46_44 -> m46_49  [key=2, style=dotted];
m46_42 -> m46_43  [key=0, style=solid];
m46_45 -> m46_46  [key=0, style=solid];
m46_46 -> m46_38  [color=blue, key=0, style=bold];
m46_79 -> m46_80  [key=0, style=solid];
m46_80 -> m46_81  [key=0, style=solid];
m46_80 -> m46_31  [key=2, style=dotted];
m46_81 -> m46_82  [key=0, style=solid];
m46_81 -> m46_83  [key=2, style=dotted];
m46_82 -> m46_79  [color=blue, key=0, style=bold];
m46_182 -> m46_216  [key=0, style=solid];
m46_182 -> m46_217  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_182 -> m46_218  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_182 -> m46_219  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_216 -> m46_217  [key=0, style=solid];
m46_217 -> m46_218  [key=0, style=solid];
m46_217 -> m46_219  [key=0, style=solid];
m46_218 -> m46_220  [key=0, style=solid];
m46_218 -> m46_223  [key=2, style=dotted];
m46_218 -> m46_221  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m46_219 -> m46_220  [key=0, style=solid];
m46_219 -> m46_223  [key=2, style=dotted];
m46_219 -> m46_221  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m46_220 -> m46_221  [key=0, style=solid];
m46_220 -> m46_222  [key=0, style=solid];
m46_221 -> m46_222  [key=0, style=solid];
m46_221 -> m46_128  [key=2, style=dotted];
m46_222 -> m46_182  [color=blue, key=0, style=bold];
m46_110 -> m46_111  [key=0, style=solid];
m46_111 -> m46_112  [key=0, style=solid];
m46_112 -> m46_110  [color=blue, key=0, style=bold];
m46_31 -> m46_236  [key=0, style=solid];
m46_31 -> m46_238  [color=darkseagreen4, key=1, label=bool, style=dashed];
m46_236 -> m46_237  [key=0, style=solid];
m46_236 -> m46_238  [key=0, style=solid];
m46_238 -> m46_239  [key=0, style=solid];
m46_238 -> m46_242  [key=0, style=solid];
m46_237 -> m46_242  [key=0, style=solid];
m46_239 -> m46_240  [key=0, style=solid];
m46_239 -> m46_241  [key=0, style=solid];
m46_240 -> m46_241  [key=0, style=solid];
m46_240 -> m46_243  [key=2, style=dotted];
m46_241 -> m46_242  [key=0, style=solid];
m46_242 -> m46_31  [color=blue, key=0, style=bold];
m46_61 -> m46_224  [key=0, style=solid];
m46_61 -> m46_226  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_61 -> m46_233  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_224 -> m46_225  [key=0, style=solid];
m46_224 -> m46_226  [key=0, style=solid];
m46_224 -> m46_228  [key=2, style=dotted];
m46_224 -> m46_229  [key=2, style=dotted];
m46_226 -> m46_227  [key=0, style=solid];
m46_226 -> m46_230  [key=2, style=dotted];
m46_226 -> m46_231  [key=2, style=dotted];
m46_226 -> m46_128  [key=2, style=dotted];
m46_226 -> m46_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_225 -> m46_227  [key=0, style=solid];
m46_227 -> m46_61  [color=blue, key=0, style=bold];
m46_184 -> m46_202  [key=0, style=solid];
m46_184 -> m46_203  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>", style=dashed];
m46_184 -> m46_204  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_184 -> m46_205  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_184 -> m46_207  [color=darkseagreen4, key=1, label="CommandLine.Parsing.OptionMap", style=dashed];
m46_184 -> m46_209  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_184 -> m46_210  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_184 -> m46_211  [color=darkseagreen4, key=1, label=object, style=dashed];
m46_202 -> m46_203  [key=0, style=solid];
m46_203 -> m46_204  [key=0, style=solid];
m46_203 -> m46_213  [key=0, style=solid];
m46_204 -> m46_205  [key=0, style=solid];
m46_204 -> m46_213  [key=0, style=solid];
m46_204 -> m46_110  [key=2, style=dotted];
m46_204 -> m46_215  [key=2, style=dotted];
m46_205 -> m46_206  [key=0, style=solid];
m46_205 -> m46_48  [key=2, style=dotted];
m46_205 -> m46_207  [color=darkseagreen4, key=1, label=verb, style=dashed];
m46_205 -> m46_211  [color=darkseagreen4, key=1, label=verb, style=dashed];
m46_207 -> m46_208  [key=0, style=solid];
m46_207 -> m46_209  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m46_207 -> m46_210  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m46_209 -> m46_210  [key=0, style=solid];
m46_209 -> m46_211  [key=0, style=solid];
m46_209 -> m46_186  [key=2, style=dotted];
m46_210 -> m46_211  [key=0, style=solid];
m46_210 -> m46_187  [key=2, style=dotted];
m46_211 -> m46_212  [key=0, style=solid];
m46_211 -> m46_182  [key=2, style=dotted];
m46_213 -> m46_214  [key=0, style=solid];
m46_206 -> m46_207  [key=0, style=solid];
m46_206 -> m46_211  [key=0, style=solid];
m46_208 -> m46_209  [key=0, style=solid];
m46_208 -> m46_211  [key=0, style=solid];
m46_212 -> m46_214  [key=0, style=solid];
m46_214 -> m46_184  [color=blue, key=0, style=bold];
m46_244 -> m46_1  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_8  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_9  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_15  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_16  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_17  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_29  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_35  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_43  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_53  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_54  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_69  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_71  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_80  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_81  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_114  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_116  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_122  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_130  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_132  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_137  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_163  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_164  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_166  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_167  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_172  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_177  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_179  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_190  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_202  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_204  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_211  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_220  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_221  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_224  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_226  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_236  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_239  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_240  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_244 -> m46_241  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m46_245 -> m46_233  [color=darkseagreen4, key=1, label=object, style=dashed];
m48_2 -> m48_3  [key=0, style=solid];
m48_3 -> m48_4  [key=0, style=solid];
m48_3 -> m48_5  [key=2, style=dotted];
m48_3 -> m48_6  [key=2, style=dotted];
m48_4 -> m48_2  [color=blue, key=0, style=bold];
m48_0 -> m48_1  [key=0, style=solid];
m48_1 -> m48_0  [color=blue, key=0, style=bold];
m50_46 -> m50_47  [key=0, style=solid];
m50_47 -> m50_48  [key=0, style=solid];
m50_47 -> m50_50  [key=2, style=dotted];
m50_47 -> m50_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m50_48 -> m50_49  [key=0, style=solid];
m50_49 -> m50_46  [color=blue, key=0, style=bold];
m50_4 -> m50_5  [key=0, style=solid];
m50_5 -> m50_4  [color=blue, key=0, style=bold];
m50_2 -> m50_3  [key=0, style=solid];
m50_3 -> m50_2  [color=blue, key=0, style=bold];
m50_6 -> m50_7  [key=0, style=solid];
m50_7 -> m50_6  [color=blue, key=0, style=bold];
m50_51 -> m50_52  [key=0, style=solid];
m50_32 -> m50_33  [key=0, style=solid];
m50_32 -> m50_34  [key=2, style=dotted];
m50_31 -> m50_32  [key=0, style=solid];
m50_33 -> m50_31  [color=blue, key=0, style=bold];
m50_39 -> m50_40  [key=0, style=solid];
m50_39 -> m50_41  [key=2, style=dotted];
m50_43 -> m50_44  [key=0, style=solid];
m50_43 -> m50_45  [key=2, style=dotted];
m50_38 -> m50_39  [key=0, style=solid];
m50_42 -> m50_43  [key=0, style=solid];
m50_40 -> m50_38  [color=blue, key=0, style=bold];
m50_44 -> m50_42  [color=blue, key=0, style=bold];
m50_52 -> m50_53  [key=0, style=solid];
m50_52 -> m50_54  [key=2, style=dotted];
m50_53 -> m50_51  [color=blue, key=0, style=bold];
m50_35 -> m50_36  [key=0, style=solid];
m50_35 -> m50_39  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m50_35 -> m50_43  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m50_36 -> m50_37  [key=0, style=solid];
m50_36 -> m50_26  [key=2, style=dotted];
m50_36 -> m50_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m50_36 -> m50_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m50_37 -> m50_35  [color=blue, key=0, style=bold];
m50_8 -> m50_9  [key=0, style=solid];
m50_8 -> m50_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_8 -> m50_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_8 -> m50_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_8 -> m50_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_8 -> m50_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_8 -> m50_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_8 -> m50_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_8 -> m50_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_8 -> m50_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_9 -> m50_10  [key=0, style=solid];
m50_9 -> m50_11  [key=0, style=solid];
m50_11 -> m50_12  [key=0, style=solid];
m50_11 -> m50_13  [key=0, style=solid];
m50_13 -> m50_14  [key=0, style=solid];
m50_13 -> m50_15  [key=0, style=solid];
m50_15 -> m50_16  [key=0, style=solid];
m50_15 -> m50_17  [key=0, style=solid];
m50_17 -> m50_18  [key=0, style=solid];
m50_17 -> m50_19  [key=0, style=solid];
m50_19 -> m50_20  [key=0, style=solid];
m50_20 -> m50_21  [key=0, style=solid];
m50_21 -> m50_22  [key=0, style=solid];
m50_22 -> m50_23  [key=0, style=solid];
m50_23 -> m50_24  [key=0, style=solid];
m50_10 -> m50_24  [key=0, style=solid];
m50_10 -> m50_25  [key=2, style=dotted];
m50_12 -> m50_24  [key=0, style=solid];
m50_12 -> m50_25  [key=2, style=dotted];
m50_14 -> m50_24  [key=0, style=solid];
m50_14 -> m50_25  [key=2, style=dotted];
m50_16 -> m50_24  [key=0, style=solid];
m50_16 -> m50_25  [key=2, style=dotted];
m50_18 -> m50_24  [key=0, style=solid];
m50_18 -> m50_25  [key=2, style=dotted];
m50_24 -> m50_8  [color=blue, key=0, style=bold];
m50_26 -> m50_27  [key=0, style=solid];
m50_26 -> m50_28  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m50_26 -> m50_32  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Text.HelpText>", style=dashed];
m50_27 -> m50_28  [key=0, style=solid];
m50_28 -> m50_29  [key=0, style=solid];
m50_28 -> m50_30  [key=2, style=dotted];
m50_28 -> m50_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m50_29 -> m50_26  [color=blue, key=0, style=bold];
m50_0 -> m50_1  [key=0, style=solid];
m50_1 -> m50_0  [color=blue, key=0, style=bold];
m50_55 -> m50_19  [color=darkseagreen4, key=1, label="CommandLine.Text.MultilineTextAttribute", style=dashed];
m50_55 -> m50_20  [color=darkseagreen4, key=1, label="CommandLine.Text.MultilineTextAttribute", style=dashed];
m50_55 -> m50_21  [color=darkseagreen4, key=1, label="CommandLine.Text.MultilineTextAttribute", style=dashed];
m50_55 -> m50_22  [color=darkseagreen4, key=1, label="CommandLine.Text.MultilineTextAttribute", style=dashed];
m50_55 -> m50_23  [color=darkseagreen4, key=1, label="CommandLine.Text.MultilineTextAttribute", style=dashed];
m50_55 -> m50_27  [color=darkseagreen4, key=1, label="CommandLine.Text.MultilineTextAttribute", style=dashed];
m50_55 -> m50_36  [color=darkseagreen4, key=1, label="CommandLine.Text.MultilineTextAttribute", style=dashed];
m50_56 -> m50_32  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Text.HelpText>", style=dashed];
m50_57 -> m50_39  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m50_57 -> m50_43  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m51_15 -> m51_16  [key=0, style=solid];
m51_15 -> m51_17  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m51_15 -> m51_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m51_15 -> m51_15  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<CommandLine.Core.Specification> ThrowingValidate", style=bold];
m51_16 -> m51_17  [key=0, style=solid];
m51_16 -> m51_19  [key=0, style=solid];
m51_16 -> m51_24  [color=darkseagreen4, key=1, label=guard, style=dashed];
m51_16 -> m51_18  [color=darkseagreen4, key=1, label=guard, style=dashed];
m51_17 -> m51_18  [key=0, style=solid];
m51_17 -> m51_16  [key=0, style=solid];
m51_17 -> m51_21  [key=2, style=dotted];
m51_17 -> m51_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m51_19 -> m51_20  [key=0, style=solid];
m51_18 -> m51_20  [key=0, style=solid];
m51_18 -> m51_22  [key=2, style=dotted];
m51_20 -> m51_15  [color=blue, key=0, style=bold];
m51_0 -> m51_1  [key=0, style=solid];
m51_0 -> m51_3  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m51_1 -> m51_2  [key=0, style=solid];
m51_1 -> m51_3  [key=0, style=solid];
m51_3 -> m51_4  [key=0, style=solid];
m51_2 -> m51_4  [key=0, style=solid];
m51_2 -> m51_5  [key=2, style=dotted];
m51_4 -> m51_0  [color=blue, key=0, style=bold];
m51_6 -> m51_7  [key=0, style=solid];
m51_6 -> m51_9  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m51_7 -> m51_8  [key=0, style=solid];
m51_7 -> m51_9  [key=0, style=solid];
m51_9 -> m51_10  [key=0, style=solid];
m51_8 -> m51_10  [key=0, style=solid];
m51_8 -> m51_5  [key=2, style=dotted];
m51_10 -> m51_6  [color=blue, key=0, style=bold];
m51_23 -> m51_24  [key=0, style=solid];
m51_24 -> m51_25  [key=0, style=solid];
m51_24 -> m51_26  [key=2, style=dotted];
m51_25 -> m51_23  [color=blue, key=0, style=bold];
m51_27 -> m51_28  [key=0, style=solid];
m51_27 -> m51_30  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m51_27 -> m51_34  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m51_27 -> m51_35  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m51_28 -> m51_29  [key=0, style=solid];
m51_28 -> m51_30  [key=0, style=solid];
m51_30 -> m51_31  [key=0, style=solid];
m51_30 -> m51_33  [key=0, style=solid];
m51_30 -> m51_40  [key=2, style=dotted];
m51_34 -> m51_35  [key=0, style=solid];
m51_34 -> m51_36  [color=darkseagreen4, key=1, label=min, style=dashed];
m51_35 -> m51_36  [key=0, style=solid];
m51_35 -> m51_37  [color=darkseagreen4, key=1, label=max, style=dashed];
m51_29 -> m51_39  [key=0, style=solid];
m51_29 -> m51_5  [key=2, style=dotted];
m51_31 -> m51_32  [key=0, style=solid];
m51_33 -> m51_34  [key=0, style=solid];
m51_32 -> m51_39  [key=0, style=solid];
m51_32 -> m51_41  [key=2, style=dotted];
m51_36 -> m51_37  [key=0, style=solid];
m51_36 -> m51_38  [key=0, style=solid];
m51_37 -> m51_39  [key=0, style=solid];
m51_37 -> m51_41  [key=2, style=dotted];
m51_38 -> m51_39  [key=0, style=solid];
m51_38 -> m51_42  [key=2, style=dotted];
m51_39 -> m51_27  [color=blue, key=0, style=bold];
m51_43 -> m51_44  [key=0, style=solid];
m51_44 -> m51_45  [key=0, style=solid];
m51_45 -> m51_43  [color=blue, key=0, style=bold];
m51_11 -> m51_12  [key=0, style=solid];
m51_12 -> m51_13  [key=0, style=solid];
m51_12 -> m51_14  [key=2, style=dotted];
m51_13 -> m51_11  [color=blue, key=0, style=bold];
m51_46 -> m51_47  [key=0, style=solid];
m51_47 -> m51_48  [key=0, style=solid];
m51_48 -> m51_46  [color=blue, key=0, style=bold];
m51_49 -> m51_24  [color=darkseagreen4, key=1, label=guard, style=dashed];
m52_6 -> m52_7  [key=0, style=solid];
m52_7 -> m52_8  [key=0, style=solid];
m52_7 -> m52_11  [key=0, style=solid];
m52_8 -> m52_9  [key=0, style=solid];
m52_11 -> m52_12  [key=0, style=solid];
m52_9 -> m52_10  [key=0, style=solid];
m52_9 -> m52_14  [key=2, style=dotted];
m52_10 -> m52_13  [key=0, style=solid];
m52_12 -> m52_13  [key=0, style=solid];
m52_13 -> m52_6  [color=blue, key=0, style=bold];
m52_0 -> m52_1  [key=0, style=solid];
m52_0 -> m52_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m52_1 -> m52_2  [key=0, style=solid];
m52_1 -> m52_5  [key=2, style=dotted];
m52_2 -> m52_3  [key=0, style=solid];
m52_3 -> m52_4  [key=0, style=solid];
m52_4 -> m52_0  [color=blue, key=0, style=bold];
m52_15 -> m52_16  [key=0, style=solid];
m52_16 -> m52_17  [key=0, style=solid];
m52_16 -> m52_18  [key=0, style=solid];
m52_17 -> m52_21  [key=0, style=solid];
m52_17 -> m52_22  [key=2, style=dotted];
m52_18 -> m52_19  [key=0, style=solid];
m52_18 -> m52_20  [key=0, style=solid];
m52_19 -> m52_21  [key=0, style=solid];
m52_19 -> m52_22  [key=2, style=dotted];
m52_20 -> m52_21  [key=0, style=solid];
m52_20 -> m52_23  [key=2, style=dotted];
m52_21 -> m52_15  [color=blue, key=0, style=bold];
m52_24 -> m52_25  [key=0, style=solid];
m52_25 -> m52_26  [key=0, style=solid];
m52_25 -> m52_27  [key=2, style=dotted];
m52_26 -> m52_24  [color=blue, key=0, style=bold];
m52_28 -> m52_2  [color=darkseagreen4, key=1, label="CommandLine.Internal.OneCharStringEnumerator", style=dashed];
m52_28 -> m52_3  [color=darkseagreen4, key=1, label="CommandLine.Internal.OneCharStringEnumerator", style=dashed];
m52_28 -> m52_7  [color=darkseagreen4, key=1, label="CommandLine.Internal.OneCharStringEnumerator", style=dashed];
m52_28 -> m52_8  [color=darkseagreen4, key=1, label="CommandLine.Internal.OneCharStringEnumerator", style=dashed];
m52_28 -> m52_9  [color=darkseagreen4, key=1, label="CommandLine.Internal.OneCharStringEnumerator", style=dashed];
m52_28 -> m52_11  [color=darkseagreen4, key=1, label="CommandLine.Internal.OneCharStringEnumerator", style=dashed];
m52_28 -> m52_16  [color=darkseagreen4, key=1, label="CommandLine.Internal.OneCharStringEnumerator", style=dashed];
m52_28 -> m52_18  [color=darkseagreen4, key=1, label="CommandLine.Internal.OneCharStringEnumerator", style=dashed];
m52_28 -> m52_20  [color=darkseagreen4, key=1, label="CommandLine.Internal.OneCharStringEnumerator", style=dashed];
m53_0 -> m53_1  [key=0, style=solid];
m53_0 -> m53_2  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m53_0 -> m53_3  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.Maybe<object>", style=dashed];
m53_1 -> m53_2  [key=0, style=solid];
m53_2 -> m53_3  [key=0, style=solid];
m53_3 -> m53_4  [key=0, style=solid];
m53_4 -> m53_0  [color=blue, key=0, style=bold];
m53_5 -> m53_6  [key=0, style=solid];
m53_5 -> m53_8  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m53_5 -> m53_10  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.Maybe<object>", style=dashed];
m53_5 -> m53_12  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m53_6 -> m53_7  [key=0, style=solid];
m53_6 -> m53_8  [key=0, style=solid];
m53_8 -> m53_9  [key=0, style=solid];
m53_8 -> m53_10  [key=0, style=solid];
m53_10 -> m53_11  [key=0, style=solid];
m53_10 -> m53_12  [key=0, style=solid];
m53_12 -> m53_13  [key=0, style=solid];
m53_12 -> m53_0  [key=2, style=dotted];
m53_7 -> m53_13  [key=0, style=solid];
m53_7 -> m53_14  [key=2, style=dotted];
m53_9 -> m53_13  [key=0, style=solid];
m53_9 -> m53_14  [key=2, style=dotted];
m53_11 -> m53_13  [key=0, style=solid];
m53_11 -> m53_14  [key=2, style=dotted];
m53_13 -> m53_5  [color=blue, key=0, style=bold];
m53_15 -> m53_1  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m53_15 -> m53_2  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m53_15 -> m53_3  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m54_30 -> m54_31  [key=0, style=solid];
m54_30 -> m54_33  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m54_30 -> m54_37  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m54_31 -> m54_32  [key=0, style=solid];
m54_31 -> m54_33  [key=0, style=solid];
m54_33 -> m54_34  [key=0, style=solid];
m54_33 -> m54_35  [key=2, style=dotted];
m54_33 -> m54_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_32 -> m54_34  [key=0, style=solid];
m54_32 -> m54_7  [key=2, style=dotted];
m54_34 -> m54_30  [color=blue, key=0, style=bold];
m54_0 -> m54_1  [key=0, style=solid];
m54_0 -> m54_3  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m54_0 -> m54_5  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m54_1 -> m54_2  [key=0, style=solid];
m54_1 -> m54_3  [key=0, style=solid];
m54_3 -> m54_4  [key=0, style=solid];
m54_3 -> m54_5  [key=0, style=solid];
m54_5 -> m54_6  [key=0, style=solid];
m54_5 -> m54_8  [key=2, style=dotted];
m54_2 -> m54_6  [key=0, style=solid];
m54_2 -> m54_7  [key=2, style=dotted];
m54_4 -> m54_6  [key=0, style=solid];
m54_4 -> m54_7  [key=2, style=dotted];
m54_6 -> m54_0  [color=blue, key=0, style=bold];
m54_16 -> m54_17  [key=0, style=solid];
m54_16 -> m54_19  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m54_16 -> m54_21  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m54_16 -> m54_22  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m54_17 -> m54_18  [key=0, style=solid];
m54_17 -> m54_19  [key=0, style=solid];
m54_19 -> m54_20  [key=0, style=solid];
m54_19 -> m54_22  [key=0, style=solid];
m54_19 -> m54_24  [key=2, style=dotted];
m54_21 -> m54_23  [key=0, style=solid];
m54_21 -> m54_25  [key=2, style=dotted];
m54_21 -> m54_26  [key=2, style=dotted];
m54_21 -> m54_27  [key=2, style=dotted];
m54_21 -> m54_28  [key=2, style=dotted];
m54_21 -> m54_29  [key=2, style=dotted];
m54_22 -> m54_23  [key=0, style=solid];
m54_18 -> m54_23  [key=0, style=solid];
m54_18 -> m54_7  [key=2, style=dotted];
m54_20 -> m54_21  [key=0, style=solid];
m54_23 -> m54_16  [color=blue, key=0, style=bold];
m54_9 -> m54_10  [key=0, style=solid];
m54_9 -> m54_12  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.Maybe<object>", style=dashed];
m54_9 -> m54_14  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m54_10 -> m54_11  [key=0, style=solid];
m54_10 -> m54_12  [key=0, style=solid];
m54_12 -> m54_13  [key=0, style=solid];
m54_12 -> m54_14  [key=0, style=solid];
m54_14 -> m54_15  [key=0, style=solid];
m54_14 -> m54_8  [key=2, style=dotted];
m54_11 -> m54_15  [key=0, style=solid];
m54_11 -> m54_7  [key=2, style=dotted];
m54_13 -> m54_15  [key=0, style=solid];
m54_13 -> m54_7  [key=2, style=dotted];
m54_15 -> m54_9  [color=blue, key=0, style=bold];
m54_36 -> m54_37  [key=0, style=solid];
m54_37 -> m54_38  [key=0, style=solid];
m54_37 -> m54_39  [key=2, style=dotted];
m54_38 -> m54_36  [color=blue, key=0, style=bold];
m54_40 -> m54_37  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m55_0 -> m55_1  [key=0, style=solid];
m55_1 -> m55_2  [key=0, style=solid];
m55_1 -> m55_3  [key=2, style=dotted];
m55_1 -> m55_4  [key=2, style=dotted];
m55_1 -> m55_1  [color=darkseagreen4, key=1, label=t, style=dashed];
m55_1 -> m55_5  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m55_1 -> m55_6  [color=darkseagreen4, key=1, label=t, style=dashed];
m55_2 -> m55_0  [color=blue, key=0, style=bold];
m55_5 -> m55_6  [key=0, style=solid];
m55_6 -> m55_7  [key=0, style=solid];
m55_6 -> m55_8  [key=2, style=dotted];
m55_7 -> m55_5  [color=blue, key=0, style=bold];
m55_9 -> m55_6  [color=darkseagreen4, key=1, label=t, style=dashed];
m57_0 -> m57_1  [key=0, style=solid];
m57_0 -> m57_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m57_1 -> m57_2  [key=0, style=solid];
m57_1 -> m57_3  [key=0, style=solid];
m57_1 -> m57_5  [key=2, style=dotted];
m57_3 -> m57_4  [key=0, style=solid];
m57_2 -> m57_4  [key=0, style=solid];
m57_2 -> m57_6  [key=2, style=dotted];
m57_4 -> m57_0  [color=blue, key=0, style=bold];
m57_7 -> m57_3  [color=darkseagreen4, key=1, label="CommandLine.VerbAttribute", style=dashed];
m58_0 -> m58_1  [key=0, style=solid];
m58_0 -> m58_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m58_0 -> m58_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m58_1 -> m58_2  [key=0, style=solid];
m58_2 -> m58_3  [key=0, style=solid];
m58_3 -> m58_4  [key=0, style=solid];
m58_4 -> m58_0  [color=blue, key=0, style=bold];
m58_5 -> m58_6  [key=0, style=solid];
m58_6 -> m58_7  [key=0, style=solid];
m58_6 -> m58_0  [key=2, style=dotted];
m58_7 -> m58_5  [color=blue, key=0, style=bold];
m58_8 -> m58_1  [color=darkseagreen4, key=1, label="CommandLine.Core.TokenGroup", style=dashed];
m58_8 -> m58_2  [color=darkseagreen4, key=1, label="CommandLine.Core.TokenGroup", style=dashed];
m58_8 -> m58_3  [color=darkseagreen4, key=1, label="CommandLine.Core.TokenGroup", style=dashed];
m59_62 -> m59_63  [key=0, style=solid];
m59_62 -> m59_65  [color=darkseagreen4, key=1, label="CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>", style=dashed];
m59_62 -> m59_73  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<char>>", style=dashed];
m59_62 -> m59_66  [color=darkseagreen4, key=1, label="CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>", style=dashed];
m59_62 -> m59_68  [color=darkseagreen4, key=1, label="CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>", style=dashed];
m59_63 -> m59_64  [key=0, style=solid];
m59_63 -> m59_65  [key=0, style=solid];
m59_65 -> m59_66  [key=0, style=solid];
m59_65 -> m59_44  [key=2, style=dotted];
m59_65 -> m59_70  [key=2, style=dotted];
m59_65 -> m59_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_65 -> m59_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_65 -> m59_84  [color=darkseagreen4, key=1, label=replaces, style=dashed];
m59_66 -> m59_67  [key=0, style=solid];
m59_66 -> m59_44  [key=2, style=dotted];
m59_66 -> m59_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_68 -> m59_69  [key=0, style=solid];
m59_68 -> m59_21  [key=2, style=dotted];
m59_64 -> m59_69  [key=0, style=solid];
m59_64 -> m59_9  [key=2, style=dotted];
m59_67 -> m59_68  [key=0, style=solid];
m59_67 -> m59_71  [key=2, style=dotted];
m59_67 -> m59_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_69 -> m59_62  [color=blue, key=0, style=bold];
m59_98 -> m59_99  [key=0, style=solid];
m59_23 -> m59_24  [key=0, style=solid];
m59_23 -> m59_25  [key=2, style=dotted];
m59_27 -> m59_28  [key=0, style=solid];
m59_27 -> m59_29  [key=2, style=dotted];
m59_26 -> m59_27  [key=0, style=solid];
m59_22 -> m59_23  [key=0, style=solid];
m59_24 -> m59_22  [color=blue, key=0, style=bold];
m59_28 -> m59_26  [color=blue, key=0, style=bold];
m59_46 -> m59_47  [key=0, style=solid];
m59_50 -> m59_51  [key=0, style=solid];
m59_53 -> m59_54  [key=0, style=solid];
m59_56 -> m59_57  [key=0, style=solid];
m59_60 -> m59_61  [key=0, style=solid];
m59_60 -> m59_20  [key=2, style=dotted];
m59_59 -> m59_60  [key=0, style=solid];
m59_47 -> m59_48  [key=0, style=solid];
m59_47 -> m59_49  [key=2, style=dotted];
m59_48 -> m59_46  [color=blue, key=0, style=bold];
m59_51 -> m59_52  [key=0, style=solid];
m59_51 -> m59_49  [key=2, style=dotted];
m59_52 -> m59_50  [color=blue, key=0, style=bold];
m59_54 -> m59_55  [key=0, style=solid];
m59_54 -> m59_49  [key=2, style=dotted];
m59_55 -> m59_53  [color=blue, key=0, style=bold];
m59_57 -> m59_58  [key=0, style=solid];
m59_57 -> m59_12  [key=2, style=dotted];
m59_58 -> m59_56  [color=blue, key=0, style=bold];
m59_61 -> m59_59  [color=blue, key=0, style=bold];
m59_73 -> m59_74  [key=0, style=solid];
m59_73 -> m59_41  [key=2, style=dotted];
m59_73 -> m59_75  [key=2, style=dotted];
m59_73 -> m59_76  [key=2, style=dotted];
m59_73 -> m59_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_72 -> m59_73  [key=0, style=solid];
m59_72 -> m59_78  [color=darkseagreen4, key=1, label=int, style=dashed];
m59_80 -> m59_81  [key=0, style=solid];
m59_84 -> m59_85  [key=0, style=solid];
m59_84 -> m59_86  [key=2, style=dotted];
m59_84 -> m59_87  [key=2, style=dotted];
m59_84 -> m59_88  [key=2, style=dotted];
m59_84 -> m59_89  [key=2, style=dotted];
m59_84 -> m59_90  [key=2, style=dotted];
m59_84 -> m59_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_84 -> m59_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_83 -> m59_84  [key=0, style=solid];
m59_83 -> m59_92  [color=darkseagreen4, key=1, label=int, style=dashed];
m59_83 -> m59_95  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m59_101 -> m59_102  [key=0, style=solid];
m59_78 -> m59_79  [key=0, style=solid];
m59_78 -> m59_75  [key=2, style=dotted];
m59_74 -> m59_72  [color=blue, key=0, style=bold];
m59_77 -> m59_78  [key=0, style=solid];
m59_79 -> m59_77  [color=blue, key=0, style=bold];
m59_81 -> m59_82  [key=0, style=solid];
m59_82 -> m59_80  [color=blue, key=0, style=bold];
m59_92 -> m59_93  [key=0, style=solid];
m59_95 -> m59_96  [key=0, style=solid];
m59_95 -> m59_97  [key=2, style=dotted];
m59_95 -> m59_44  [key=2, style=dotted];
m59_95 -> m59_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_85 -> m59_83  [color=blue, key=0, style=bold];
m59_91 -> m59_92  [key=0, style=solid];
m59_94 -> m59_95  [key=0, style=solid];
m59_93 -> m59_91  [color=blue, key=0, style=bold];
m59_96 -> m59_94  [color=blue, key=0, style=bold];
m59_99 -> m59_100  [key=0, style=solid];
m59_99 -> m59_12  [key=2, style=dotted];
m59_100 -> m59_98  [color=blue, key=0, style=bold];
m59_102 -> m59_103  [key=0, style=solid];
m59_103 -> m59_101  [color=blue, key=0, style=bold];
m59_13 -> m59_132  [key=0, style=solid];
m59_13 -> m59_138  [color=crimson, key=0, style=bold];
m59_13 -> m59_139  [color=crimson, key=0, style=bold];
m59_13 -> m59_142  [color=crimson, key=0, style=bold];
m59_13 -> m59_144  [color=crimson, key=0, style=bold];
m59_13 -> m59_145  [color=crimson, key=0, style=bold];
m59_13 -> m59_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m59_13 -> m59_135  [color=darkseagreen4, key=1, label=string, style=dashed];
m59_13 -> m59_141  [color=darkseagreen4, key=1, label=string, style=dashed];
m59_132 -> m59_133  [key=0, style=solid];
m59_132 -> m59_134  [key=0, style=solid];
m59_138 -> m59_139  [key=0, style=solid];
m59_138 -> m59_127  [key=2, style=dotted];
m59_139 -> m59_140  [key=0, style=solid];
m59_142 -> m59_143  [key=0, style=solid];
m59_144 -> m59_145  [key=0, style=solid];
m59_144 -> m59_127  [key=2, style=dotted];
m59_145 -> m59_146  [key=0, style=solid];
m59_145 -> m59_12  [key=2, style=dotted];
m59_134 -> m59_135  [key=0, style=solid];
m59_134 -> m59_146  [key=0, style=solid];
m59_134 -> m59_11  [key=2, style=dotted];
m59_135 -> m59_136  [key=0, style=solid];
m59_135 -> m59_125  [key=2, style=dotted];
m59_135 -> m59_138  [color=darkseagreen4, key=1, label=text, style=dashed];
m59_135 -> m59_143  [color=darkseagreen4, key=1, label=text, style=dashed];
m59_141 -> m59_142  [key=0, style=solid];
m59_141 -> m59_148  [key=2, style=dotted];
m59_141 -> m59_149  [key=2, style=dotted];
m59_133 -> m59_146  [key=0, style=solid];
m59_133 -> m59_9  [key=2, style=dotted];
m59_136 -> m59_137  [key=0, style=solid];
m59_136 -> m59_147  [key=2, style=dotted];
m59_136 -> m59_140  [color=darkseagreen4, key=1, label=equalIndex, style=dashed];
m59_143 -> m59_144  [key=0, style=solid];
m59_143 -> m59_150  [key=2, style=dotted];
m59_143 -> m59_145  [color=darkseagreen4, key=1, label=parts, style=dashed];
m59_137 -> m59_138  [key=0, style=solid];
m59_137 -> m59_140  [key=0, style=solid];
m59_140 -> m59_141  [key=0, style=solid];
m59_140 -> m59_143  [key=0, style=solid];
m59_146 -> m59_13  [color=blue, key=0, style=bold];
m59_0 -> m59_1  [key=0, style=solid];
m59_0 -> m59_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m59_0 -> m59_6  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m59_1 -> m59_2  [key=0, style=solid];
m59_1 -> m59_3  [key=0, style=solid];
m59_5 -> m59_6  [key=0, style=solid];
m59_5 -> m59_11  [key=2, style=dotted];
m59_5 -> m59_12  [key=2, style=dotted];
m59_5 -> m59_13  [key=2, style=dotted];
m59_5 -> m59_14  [key=2, style=dotted];
m59_5 -> m59_15  [key=2, style=dotted];
m59_5 -> m59_5  [color=darkseagreen4, key=1, label=arg, style=dashed];
m59_5 -> m59_7  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m59_6 -> m59_7  [key=0, style=solid];
m59_6 -> m59_16  [key=2, style=dotted];
m59_6 -> m59_17  [key=2, style=dotted];
m59_6 -> m59_15  [key=2, style=dotted];
m59_6 -> m59_6  [color=darkseagreen4, key=1, label=t, style=dashed];
m59_6 -> m59_27  [color=darkseagreen4, key=1, label=unkTokens, style=dashed];
m59_2 -> m59_8  [key=0, style=solid];
m59_2 -> m59_9  [key=2, style=dotted];
m59_3 -> m59_4  [key=0, style=solid];
m59_3 -> m59_10  [key=2, style=dotted];
m59_3 -> m59_23  [color=darkseagreen4, key=1, label=errors, style=dashed];
m59_3 -> m59_7  [color=darkseagreen4, key=1, label=errors, style=dashed];
m59_4 -> m59_5  [key=0, style=solid];
m59_4 -> m59_23  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m59_4 -> m59_4  [color=darkorchid, key=3, label="Local variable System.Action<CommandLine.Error> onError", style=bold];
m59_7 -> m59_8  [key=0, style=solid];
m59_7 -> m59_18  [key=2, style=dotted];
m59_7 -> m59_19  [key=2, style=dotted];
m59_7 -> m59_20  [key=2, style=dotted];
m59_7 -> m59_21  [key=2, style=dotted];
m59_7 -> m59_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_7 -> m59_7  [color=darkseagreen4, key=1, label=t, style=dashed];
m59_8 -> m59_0  [color=blue, key=0, style=bold];
m59_30 -> m59_31  [key=0, style=solid];
m59_30 -> m59_33  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m59_30 -> m59_34  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m59_30 -> m59_35  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m59_30 -> m59_37  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m59_31 -> m59_32  [key=0, style=solid];
m59_31 -> m59_33  [key=0, style=solid];
m59_33 -> m59_34  [key=0, style=solid];
m59_33 -> m59_37  [key=0, style=solid];
m59_33 -> m59_39  [key=2, style=dotted];
m59_33 -> m59_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_34 -> m59_35  [key=0, style=solid];
m59_34 -> m59_40  [key=2, style=dotted];
m59_34 -> m59_41  [key=2, style=dotted];
m59_34 -> m59_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_34 -> m59_36  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m59_35 -> m59_36  [key=0, style=solid];
m59_35 -> m59_42  [key=2, style=dotted];
m59_35 -> m59_43  [key=2, style=dotted];
m59_35 -> m59_44  [key=2, style=dotted];
m59_35 -> m59_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_35 -> m59_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_35 -> m59_60  [color=darkseagreen4, key=1, label=values, style=dashed];
m59_37 -> m59_38  [key=0, style=solid];
m59_37 -> m59_41  [key=2, style=dotted];
m59_32 -> m59_38  [key=0, style=solid];
m59_32 -> m59_9  [key=2, style=dotted];
m59_36 -> m59_38  [key=0, style=solid];
m59_36 -> m59_45  [key=2, style=dotted];
m59_36 -> m59_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_38 -> m59_30  [color=blue, key=0, style=bold];
m59_14 -> m59_104  [key=0, style=solid];
m59_14 -> m59_109  [color=crimson, key=0, style=bold];
m59_14 -> m59_110  [color=crimson, key=0, style=bold];
m59_14 -> m59_112  [color=crimson, key=0, style=bold];
m59_14 -> m59_113  [color=crimson, key=0, style=bold];
m59_14 -> m59_115  [color=crimson, key=0, style=bold];
m59_14 -> m59_121  [color=crimson, key=0, style=bold];
m59_14 -> m59_123  [color=crimson, key=0, style=bold];
m59_14 -> m59_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m59_14 -> m59_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m59_14 -> m59_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m59_14 -> m59_119  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m59_104 -> m59_105  [key=0, style=solid];
m59_104 -> m59_106  [key=0, style=solid];
m59_109 -> m59_110  [key=0, style=solid];
m59_109 -> m59_12  [key=2, style=dotted];
m59_110 -> m59_111  [key=0, style=solid];
m59_112 -> m59_113  [key=0, style=solid];
m59_112 -> m59_127  [key=2, style=dotted];
m59_113 -> m59_114  [key=0, style=solid];
m59_115 -> m59_116  [key=0, style=solid];
m59_115 -> m59_127  [key=2, style=dotted];
m59_121 -> m59_117  [key=0, style=solid];
m59_121 -> m59_127  [key=2, style=dotted];
m59_123 -> m59_124  [key=0, style=solid];
m59_123 -> m59_131  [key=2, style=dotted];
m59_123 -> m59_125  [key=2, style=dotted];
m59_123 -> m59_12  [key=2, style=dotted];
m59_106 -> m59_107  [key=0, style=solid];
m59_106 -> m59_124  [key=0, style=solid];
m59_107 -> m59_108  [key=0, style=solid];
m59_107 -> m59_125  [key=2, style=dotted];
m59_107 -> m59_112  [color=darkseagreen4, key=1, label=text, style=dashed];
m59_107 -> m59_114  [color=darkseagreen4, key=1, label=text, style=dashed];
m59_107 -> m59_117  [color=darkseagreen4, key=1, label=text, style=dashed];
m59_107 -> m59_122  [color=darkseagreen4, key=1, label=text, style=dashed];
m59_107 -> m59_123  [color=darkseagreen4, key=1, label=text, style=dashed];
m59_111 -> m59_112  [key=0, style=solid];
m59_111 -> m59_114  [key=0, style=solid];
m59_119 -> m59_120  [key=0, style=solid];
m59_119 -> m59_122  [key=0, style=solid];
m59_119 -> m59_130  [key=2, style=dotted];
m59_119 -> m59_41  [key=2, style=dotted];
m59_105 -> m59_124  [key=0, style=solid];
m59_105 -> m59_9  [key=2, style=dotted];
m59_108 -> m59_109  [key=0, style=solid];
m59_108 -> m59_111  [key=0, style=solid];
m59_108 -> m59_126  [key=2, style=dotted];
m59_114 -> m59_115  [key=0, style=solid];
m59_114 -> m59_128  [key=2, style=dotted];
m59_114 -> m59_116  [color=darkseagreen4, key=1, label=first, style=dashed];
m59_117 -> m59_118  [key=0, style=solid];
m59_117 -> m59_122  [key=0, style=solid];
m59_117 -> m59_125  [key=2, style=dotted];
m59_117 -> m59_119  [color=darkseagreen4, key=1, label=c, style=dashed];
m59_117 -> m59_120  [color=darkseagreen4, key=1, label=c, style=dashed];
m59_122 -> m59_123  [key=0, style=solid];
m59_122 -> m59_124  [key=0, style=solid];
m59_122 -> m59_131  [key=2, style=dotted];
m59_116 -> m59_117  [key=0, style=solid];
m59_116 -> m59_10  [key=2, style=dotted];
m59_116 -> m59_119  [color=darkseagreen4, key=1, label=seen, style=dashed];
m59_116 -> m59_120  [color=darkseagreen4, key=1, label=seen, style=dashed];
m59_116 -> m59_122  [color=darkseagreen4, key=1, label=seen, style=dashed];
m59_116 -> m59_123  [color=darkseagreen4, key=1, label=seen, style=dashed];
m59_120 -> m59_121  [key=0, style=solid];
m59_120 -> m59_25  [key=2, style=dotted];
m59_118 -> m59_119  [key=0, style=solid];
m59_118 -> m59_129  [key=2, style=dotted];
m59_118 -> m59_121  [color=darkseagreen4, key=1, label=n, style=dashed];
m59_124 -> m59_14  [color=blue, key=0, style=bold];
m59_151 -> m59_23  [color=darkseagreen4, key=1, label=errors, style=dashed];
m59_152 -> m59_27  [color=darkseagreen4, key=1, label=unkTokens, style=dashed];
m59_153 -> m59_60  [color=darkseagreen4, key=1, label=values, style=dashed];
m59_154 -> m59_73  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<char>>", style=dashed];
m59_155 -> m59_78  [color=darkseagreen4, key=1, label=int, style=dashed];
m59_156 -> m59_84  [color=darkseagreen4, key=1, label=replaces, style=dashed];
m59_157 -> m59_92  [color=darkseagreen4, key=1, label=int, style=dashed];
m59_158 -> m59_95  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m60_20 -> m60_21  [key=0, style=solid];
m60_21 -> m60_22  [key=0, style=solid];
m60_21 -> m60_6  [key=2, style=dotted];
m60_21 -> m60_7  [key=2, style=dotted];
m60_21 -> m60_24  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m60_22 -> m60_23  [key=0, style=solid];
m60_22 -> m60_8  [key=2, style=dotted];
m60_22 -> m60_9  [key=2, style=dotted];
m60_22 -> m60_27  [color=darkseagreen4, key=1, label=specs, style=dashed];
m60_24 -> m60_25  [key=0, style=solid];
m60_24 -> m60_14  [key=2, style=dotted];
m60_24 -> m60_15  [key=2, style=dotted];
m60_23 -> m60_24  [key=0, style=solid];
m60_23 -> m60_10  [key=2, style=dotted];
m60_23 -> m60_6  [key=2, style=dotted];
m60_23 -> m60_7  [key=2, style=dotted];
m60_23 -> m60_11  [key=2, style=dotted];
m60_23 -> m60_12  [key=2, style=dotted];
m60_23 -> m60_13  [key=2, style=dotted];
m60_23 -> m60_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_25 -> m60_20  [color=blue, key=0, style=bold];
m60_0 -> m60_1  [key=0, style=solid];
m60_1 -> m60_2  [key=0, style=solid];
m60_1 -> m60_6  [key=2, style=dotted];
m60_1 -> m60_7  [key=2, style=dotted];
m60_1 -> m60_4  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m60_2 -> m60_3  [key=0, style=solid];
m60_2 -> m60_8  [key=2, style=dotted];
m60_2 -> m60_9  [key=2, style=dotted];
m60_2 -> m60_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m60_4 -> m60_5  [key=0, style=solid];
m60_4 -> m60_14  [key=2, style=dotted];
m60_4 -> m60_15  [key=2, style=dotted];
m60_3 -> m60_4  [key=0, style=solid];
m60_3 -> m60_10  [key=2, style=dotted];
m60_3 -> m60_6  [key=2, style=dotted];
m60_3 -> m60_7  [key=2, style=dotted];
m60_3 -> m60_11  [key=2, style=dotted];
m60_3 -> m60_12  [key=2, style=dotted];
m60_3 -> m60_13  [key=2, style=dotted];
m60_3 -> m60_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_5 -> m60_0  [color=blue, key=0, style=bold];
m60_26 -> m60_27  [key=0, style=solid];
m60_17 -> m60_18  [key=0, style=solid];
m60_17 -> m60_19  [key=2, style=dotted];
m60_16 -> m60_17  [key=0, style=solid];
m60_18 -> m60_16  [color=blue, key=0, style=bold];
m60_27 -> m60_28  [key=0, style=solid];
m60_27 -> m60_19  [key=2, style=dotted];
m60_28 -> m60_26  [color=blue, key=0, style=bold];
m60_29 -> m60_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m60_30 -> m60_27  [color=darkseagreen4, key=1, label=specs, style=dashed];
m61_17 -> m61_18  [key=0, style=solid];
m61_17 -> m61_21  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
m61_17 -> m61_25  [color=darkseagreen4, key=1, label=object, style=dashed];
m61_18 -> m61_19  [key=0, style=solid];
m61_18 -> m61_28  [key=2, style=dotted];
m61_18 -> m61_21  [color=darkseagreen4, key=1, label=list, style=dashed];
m61_18 -> m61_22  [color=darkseagreen4, key=1, label=list, style=dashed];
m61_21 -> m61_22  [key=0, style=solid];
m61_21 -> m61_8  [key=2, style=dotted];
m61_21 -> m61_24  [color=darkseagreen4, key=1, label=map, style=dashed];
m61_21 -> m61_25  [color=darkseagreen4, key=1, label=map, style=dashed];
m61_21 -> m61_26  [color=darkseagreen4, key=1, label=map, style=dashed];
m61_25 -> m61_26  [key=0, style=solid];
m61_19 -> m61_20  [key=0, style=solid];
m61_19 -> m61_21  [key=0, style=solid];
m61_22 -> m61_23  [key=0, style=solid];
m61_22 -> m61_25  [key=0, style=solid];
m61_22 -> m61_24  [color=darkseagreen4, key=1, label=pair, style=dashed];
m61_20 -> m61_27  [key=0, style=solid];
m61_24 -> m61_22  [key=0, style=solid];
m61_24 -> m61_29  [key=2, style=dotted];
m61_26 -> m61_27  [key=0, style=solid];
m61_23 -> m61_24  [key=0, style=solid];
m61_23 -> m61_22  [key=0, style=solid];
m61_27 -> m61_17  [color=blue, key=0, style=bold];
m61_49 -> m61_50  [key=0, style=solid];
m61_50 -> m61_51  [key=0, style=solid];
m61_50 -> m61_52  [key=0, style=solid];
m61_51 -> m61_50  [key=0, style=solid];
m61_51 -> m61_53  [key=2, style=dotted];
m61_52 -> m61_49  [color=blue, key=0, style=bold];
m61_30 -> m61_31  [key=0, style=solid];
m61_30 -> m61_32  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>", style=dashed];
m61_30 -> m61_34  [color=darkseagreen4, key=1, label=object, style=dashed];
m61_30 -> m61_37  [color=darkseagreen4, key=1, label=object, style=dashed];
m61_31 -> m61_32  [key=0, style=solid];
m61_31 -> m61_8  [key=2, style=dotted];
m61_31 -> m61_36  [color=darkseagreen4, key=1, label=map, style=dashed];
m61_31 -> m61_37  [color=darkseagreen4, key=1, label=map, style=dashed];
m61_31 -> m61_38  [color=darkseagreen4, key=1, label=map, style=dashed];
m61_32 -> m61_33  [key=0, style=solid];
m61_32 -> m61_37  [key=0, style=solid];
m61_32 -> m61_34  [color=darkseagreen4, key=1, label=verb, style=dashed];
m61_32 -> m61_35  [color=darkseagreen4, key=1, label=verb, style=dashed];
m61_32 -> m61_36  [color=darkseagreen4, key=1, label=verb, style=dashed];
m61_34 -> m61_35  [key=0, style=solid];
m61_34 -> m61_36  [key=0, style=solid];
m61_34 -> m61_41  [key=2, style=dotted];
m61_37 -> m61_38  [key=0, style=solid];
m61_36 -> m61_32  [key=0, style=solid];
m61_38 -> m61_39  [key=0, style=solid];
m61_33 -> m61_34  [key=0, style=solid];
m61_33 -> m61_29  [key=2, style=dotted];
m61_33 -> m61_40  [key=2, style=dotted];
m61_33 -> m61_36  [color=darkseagreen4, key=1, label=optionInfo, style=dashed];
m61_35 -> m61_39  [key=0, style=solid];
m61_35 -> m61_42  [key=2, style=dotted];
m61_35 -> m61_43  [key=2, style=dotted];
m61_39 -> m61_30  [color=blue, key=0, style=bold];
m61_48 -> m61_54  [key=0, style=solid];
m61_54 -> m61_55  [key=0, style=solid];
m61_54 -> m61_59  [color=darkseagreen4, key=1, label=requiredRulesAllMet, style=dashed];
m61_55 -> m61_56  [key=0, style=solid];
m61_55 -> m61_59  [key=0, style=solid];
m61_55 -> m61_57  [color=darkseagreen4, key=1, label=option, style=dashed];
m61_59 -> m61_60  [key=0, style=solid];
m61_56 -> m61_57  [key=0, style=solid];
m61_56 -> m61_55  [key=0, style=solid];
m61_57 -> m61_58  [key=0, style=solid];
m61_57 -> m61_61  [key=2, style=dotted];
m61_58 -> m61_55  [key=0, style=solid];
m61_58 -> m61_59  [color=darkseagreen4, key=1, label=requiredRulesAllMet, style=dashed];
m61_60 -> m61_48  [color=blue, key=0, style=bold];
m61_8 -> m61_9  [key=0, style=solid];
m61_8 -> m61_11  [color=darkseagreen4, key=1, label=int, style=dashed];
m61_8 -> m61_12  [color=darkseagreen4, key=1, label=int, style=dashed];
m61_8 -> m61_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m61_9 -> m61_10  [key=0, style=solid];
m61_11 -> m61_12  [key=0, style=solid];
m61_11 -> m61_16  [key=2, style=dotted];
m61_12 -> m61_13  [key=0, style=solid];
m61_12 -> m61_16  [key=2, style=dotted];
m61_14 -> m61_15  [key=0, style=solid];
m61_14 -> m61_16  [key=2, style=dotted];
m61_10 -> m61_11  [key=0, style=solid];
m61_10 -> m61_12  [color=darkseagreen4, key=1, label=comparer, style=dashed];
m61_13 -> m61_14  [key=0, style=solid];
m61_13 -> m61_15  [key=0, style=solid];
m61_15 -> m61_8  [color=blue, key=0, style=bold];
m61_2 -> m61_3  [key=0, style=solid];
m61_3 -> m61_4  [key=0, style=solid];
m61_4 -> m61_2  [color=blue, key=0, style=bold];
m61_73 -> m61_74  [key=0, style=solid];
m61_73 -> m61_76  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m61_74 -> m61_75  [key=0, style=solid];
m61_74 -> m61_76  [color=darkseagreen4, key=1, label=setName, style=dashed];
m61_74 -> m61_77  [color=darkseagreen4, key=1, label=setName, style=dashed];
m61_76 -> m61_77  [key=0, style=solid];
m61_76 -> m61_2  [key=2, style=dotted];
m61_76 -> m61_80  [key=2, style=dotted];
m61_75 -> m61_76  [key=0, style=solid];
m61_75 -> m61_77  [key=0, style=solid];
m61_75 -> m61_79  [key=2, style=dotted];
m61_77 -> m61_78  [key=0, style=solid];
m61_77 -> m61_5  [key=2, style=dotted];
m61_78 -> m61_73  [color=blue, key=0, style=bold];
m61_61 -> m61_81  [key=0, style=solid];
m61_61 -> m61_85  [color=darkseagreen4, key=1, label=object, style=dashed];
m61_61 -> m61_86  [color=darkseagreen4, key=1, label=object, style=dashed];
m61_61 -> m61_87  [color=darkseagreen4, key=1, label=object, style=dashed];
m61_61 -> m61_90  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m61_61 -> m61_91  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m61_61 -> m61_92  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m61_61 -> m61_93  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m61_61 -> m61_94  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m61_81 -> m61_82  [key=0, style=solid];
m61_81 -> m61_28  [key=2, style=dotted];
m61_81 -> m61_84  [color=darkseagreen4, key=1, label=list, style=dashed];
m61_85 -> m61_86  [key=0, style=solid];
m61_85 -> m61_87  [key=0, style=solid];
m61_85 -> m61_41  [key=2, style=dotted];
m61_86 -> m61_87  [key=0, style=solid];
m61_86 -> m61_97  [key=2, style=dotted];
m61_86 -> m61_98  [key=2, style=dotted];
m61_87 -> m61_88  [key=0, style=solid];
m61_87 -> m61_41  [key=2, style=dotted];
m61_87 -> m61_95  [color=darkseagreen4, key=1, label=parserState, style=dashed];
m61_90 -> m61_91  [key=0, style=solid];
m61_90 -> m61_99  [key=2, style=dotted];
m61_90 -> m61_92  [color=darkseagreen4, key=1, label=error, style=dashed];
m61_90 -> m61_94  [color=darkseagreen4, key=1, label=error, style=dashed];
m61_90 -> m61_95  [color=darkseagreen4, key=1, label=error, style=dashed];
m61_91 -> m61_92  [key=0, style=solid];
m61_91 -> m61_93  [key=0, style=solid];
m61_92 -> m61_93  [key=0, style=solid];
m61_93 -> m61_94  [key=0, style=solid];
m61_93 -> m61_95  [key=0, style=solid];
m61_94 -> m61_95  [key=0, style=solid];
m61_82 -> m61_83  [key=0, style=solid];
m61_82 -> m61_84  [key=0, style=solid];
m61_84 -> m61_85  [key=0, style=solid];
m61_84 -> m61_86  [color=darkseagreen4, key=1, label=property, style=dashed];
m61_84 -> m61_87  [color=darkseagreen4, key=1, label=property, style=dashed];
m61_83 -> m61_96  [key=0, style=solid];
m61_88 -> m61_89  [key=0, style=solid];
m61_88 -> m61_90  [key=0, style=solid];
m61_95 -> m61_96  [key=0, style=solid];
m61_95 -> m61_100  [key=2, style=dotted];
m61_89 -> m61_96  [key=0, style=solid];
m61_96 -> m61_61  [color=blue, key=0, style=bold];
m61_44 -> m61_45  [key=0, style=solid];
m61_45 -> m61_46  [key=0, style=solid];
m61_45 -> m61_47  [key=2, style=dotted];
m61_45 -> m61_48  [key=2, style=dotted];
m61_46 -> m61_44  [color=blue, key=0, style=bold];
m61_0 -> m61_1  [key=0, style=solid];
m61_1 -> m61_0  [color=blue, key=0, style=bold];
m61_47 -> m61_62  [key=0, style=solid];
m61_62 -> m61_63  [key=0, style=solid];
m61_62 -> m61_64  [key=0, style=solid];
m61_63 -> m61_72  [key=0, style=solid];
m61_64 -> m61_65  [key=0, style=solid];
m61_64 -> m61_67  [key=0, style=solid];
m61_64 -> m61_66  [color=darkseagreen4, key=1, label=option, style=dashed];
m61_65 -> m61_66  [key=0, style=solid];
m61_65 -> m61_64  [key=0, style=solid];
m61_67 -> m61_68  [key=0, style=solid];
m61_67 -> m61_71  [key=0, style=solid];
m61_67 -> m61_69  [color=darkseagreen4, key=1, label=info, style=dashed];
m61_66 -> m61_64  [key=0, style=solid];
m61_66 -> m61_73  [key=2, style=dotted];
m61_68 -> m61_69  [key=0, style=solid];
m61_68 -> m61_67  [key=0, style=solid];
m61_71 -> m61_72  [key=0, style=solid];
m61_69 -> m61_70  [key=0, style=solid];
m61_69 -> m61_61  [key=2, style=dotted];
m61_70 -> m61_72  [key=0, style=solid];
m61_72 -> m61_47  [color=blue, key=0, style=bold];
m61_5 -> m61_6  [key=0, style=solid];
m61_6 -> m61_7  [key=0, style=solid];
m61_7 -> m61_5  [color=blue, key=0, style=bold];
m61_101 -> m61_3  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo", style=dashed];
m61_101 -> m61_6  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo", style=dashed];
m61_102 -> m61_9  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m61_102 -> m61_10  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m61_102 -> m61_11  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m61_102 -> m61_12  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m61_102 -> m61_13  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m61_102 -> m61_14  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m61_102 -> m61_45  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m61_102 -> m61_50  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m61_102 -> m61_51  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m61_102 -> m61_55  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m61_102 -> m61_57  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m61_102 -> m61_62  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m61_102 -> m61_64  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m61_102 -> m61_66  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m61_102 -> m61_67  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m61_102 -> m61_69  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m61_102 -> m61_75  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m61_102 -> m61_76  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m61_102 -> m61_77  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m62_0 -> m62_1  [key=0, style=solid];
m62_1 -> m62_2  [key=0, style=solid];
m62_1 -> m62_3  [key=2, style=dotted];
m62_1 -> m62_4  [key=2, style=dotted];
m62_1 -> m62_5  [key=2, style=dotted];
m62_2 -> m62_0  [color=blue, key=0, style=bold];
m66_0 -> m66_1  [key=0, style=solid];
m66_1 -> m66_2  [key=0, style=solid];
m66_2 -> m66_3  [key=0, style=solid];
m66_3 -> m66_4  [key=0, style=solid];
m66_4 -> m66_0  [color=blue, key=0, style=bold];
m66_5 -> m66_1  [color=darkseagreen4, key=1, label="CommandLine.ValueAttribute", style=dashed];
m66_5 -> m66_2  [color=darkseagreen4, key=1, label="CommandLine.ValueAttribute", style=dashed];
m66_5 -> m66_3  [color=darkseagreen4, key=1, label="CommandLine.ValueAttribute", style=dashed];
m67_0 -> m67_1  [key=0, style=solid];
m67_0 -> m67_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<int>", style=dashed];
m67_0 -> m67_3  [color=darkseagreen4, key=1, label=bool, style=dashed];
m67_0 -> m67_4  [color=darkseagreen4, key=1, label=long, style=dashed];
m67_1 -> m67_2  [key=0, style=solid];
m67_2 -> m67_3  [key=0, style=solid];
m67_3 -> m67_4  [key=0, style=solid];
m67_4 -> m67_5  [key=0, style=solid];
m67_5 -> m67_0  [color=blue, key=0, style=bold];
m67_6 -> m67_1  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeImmutableOptions", style=dashed];
m67_6 -> m67_2  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeImmutableOptions", style=dashed];
m67_6 -> m67_3  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeImmutableOptions", style=dashed];
m67_6 -> m67_4  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeImmutableOptions", style=dashed];
m68_0 -> m68_1  [key=0, style=solid];
m68_1 -> m68_2  [key=0, style=solid];
m68_2 -> m68_0  [color=blue, key=0, style=bold];
m68_3 -> m68_4  [key=0, style=solid];
m68_4 -> m68_5  [key=0, style=solid];
m68_4 -> m68_0  [key=2, style=dotted];
m68_4 -> m68_6  [key=2, style=dotted];
m68_5 -> m68_3  [color=blue, key=0, style=bold];
m68_7 -> m68_1  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m69_20 -> m69_21  [key=0, style=solid];
m69_21 -> m69_22  [key=0, style=solid];
m69_21 -> m69_23  [key=2, style=dotted];
m69_22 -> m69_20  [color=blue, key=0, style=bold];
m69_1 -> m69_2  [key=0, style=solid];
m69_1 -> m69_5  [key=2, style=dotted];
m69_1 -> m69_6  [key=2, style=dotted];
m69_0 -> m69_1  [key=0, style=solid];
m69_2 -> m69_3  [key=0, style=solid];
m69_2 -> m69_7  [key=2, style=dotted];
m69_3 -> m69_4  [key=0, style=solid];
m69_3 -> m69_8  [key=2, style=dotted];
m69_3 -> m69_9  [key=2, style=dotted];
m69_4 -> m69_0  [color=blue, key=0, style=bold];
m69_16 -> m69_17  [key=0, style=solid];
m69_16 -> m69_5  [key=2, style=dotted];
m69_16 -> m69_6  [key=2, style=dotted];
m69_15 -> m69_16  [key=0, style=solid];
m69_17 -> m69_18  [key=0, style=solid];
m69_17 -> m69_14  [key=2, style=dotted];
m69_17 -> m69_19  [key=2, style=dotted];
m69_18 -> m69_15  [color=blue, key=0, style=bold];
m69_11 -> m69_12  [key=0, style=solid];
m69_11 -> m69_5  [key=2, style=dotted];
m69_11 -> m69_6  [key=2, style=dotted];
m69_10 -> m69_11  [key=0, style=solid];
m69_12 -> m69_13  [key=0, style=solid];
m69_12 -> m69_14  [key=2, style=dotted];
m69_13 -> m69_10  [color=blue, key=0, style=bold];
m70_0 -> m70_1  [key=0, style=solid];
m70_0 -> m70_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m70_1 -> m70_2  [key=0, style=solid];
m70_1 -> m70_3  [key=0, style=solid];
m70_1 -> m70_5  [key=2, style=dotted];
m70_3 -> m70_4  [key=0, style=solid];
m70_2 -> m70_4  [key=0, style=solid];
m70_2 -> m70_6  [key=2, style=dotted];
m70_4 -> m70_0  [color=blue, key=0, style=bold];
m70_7 -> m70_3  [color=darkseagreen4, key=1, label="CommandLine.VerbAttribute", style=dashed];
}
