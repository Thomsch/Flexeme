digraph  {
d1 [label="this.targetType = targetType", span="15-15", cluster="CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, Maybe<int>, Maybe<CommandLine.Core.TypeDescriptor>)", color=green, community=0];
d21 [label="CommandLine.Core.TypeDescriptor", span=""];
d0 [label="Entry CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, Maybe<int>, Maybe<CommandLine.Core.TypeDescriptor>)", span="13-13", cluster="CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, Maybe<int>, Maybe<CommandLine.Core.TypeDescriptor>)"];
d2 [label="this.maxItems = maxItems", span="16-16", cluster="CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, Maybe<int>, Maybe<CommandLine.Core.TypeDescriptor>)", color=green, community=0];
d3 [label="this.nextValue = nextValue", span="17-17", cluster="CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, Maybe<int>, Maybe<CommandLine.Core.TypeDescriptor>)", color=green, community=0];
d4 [label="Exit CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, Maybe<int>, Maybe<CommandLine.Core.TypeDescriptor>)", span="13-13", cluster="CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, Maybe<int>, Maybe<CommandLine.Core.TypeDescriptor>)"];
d6 [label="maximumItems == null", span="37-37", cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, Maybe<int>, CommandLine.Core.TypeDescriptor)", color=green, community=0];
d5 [label="Entry CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, Maybe<int>, CommandLine.Core.TypeDescriptor)", span="35-35", cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, Maybe<int>, CommandLine.Core.TypeDescriptor)"];
d7 [label="throw new ArgumentNullException(''maximumItems'');", span="37-37", cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, Maybe<int>, CommandLine.Core.TypeDescriptor)", color=green, community=0];
d8 [label="return new TypeDescriptor(tag, maximumItems, next.ToMaybe());", span="39-39", cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, Maybe<int>, CommandLine.Core.TypeDescriptor)", color=green, community=0];
d9 [label="Exit CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, Maybe<int>, CommandLine.Core.TypeDescriptor)", span="35-35", cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, Maybe<int>, CommandLine.Core.TypeDescriptor)"];
d11 [label="Entry TypeDescriptor.cstr", span="", cluster="TypeDescriptor.cstr"];
d12 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe"];
d10 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
d14 [label="return TypeDescriptor.Create(descriptor.TargetType, descriptor.MaxItems, nextValue.Return(n => n, null));", span="47-47", cluster="CommandLine.Core.TypeDescriptorExtensions.WithNextValue(CommandLine.Core.TypeDescriptor, Maybe<CommandLine.Core.TypeDescriptor>)", color=green, community=0];
d13 [label="Entry CommandLine.Core.TypeDescriptorExtensions.WithNextValue(CommandLine.Core.TypeDescriptor, Maybe<CommandLine.Core.TypeDescriptor>)", span="45-45", cluster="CommandLine.Core.TypeDescriptorExtensions.WithNextValue(CommandLine.Core.TypeDescriptor, Maybe<CommandLine.Core.TypeDescriptor>)"];
d15 [label="Exit CommandLine.Core.TypeDescriptorExtensions.WithNextValue(CommandLine.Core.TypeDescriptor, Maybe<CommandLine.Core.TypeDescriptor>)", span="45-45", cluster="CommandLine.Core.TypeDescriptorExtensions.WithNextValue(CommandLine.Core.TypeDescriptor, Maybe<CommandLine.Core.TypeDescriptor>)"];
d16 [label="Entry Unk.Return", span="", cluster="Unk.Return"];
d17 [label="Entry Unk.Create", span="", cluster="Unk.Create"];
d18 [label="Entry lambda expression", span="47-47", cluster="lambda expression"];
d19 [label=n, span="47-47", cluster="lambda expression", color=green, community=0];
d20 [label="Exit lambda expression", span="47-47", cluster="lambda expression"];
m0_0 [label="Entry CommandLine.ValueAttribute.ValueAttribute(int)", span="20-20", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs"];
m0_1 [label="this.index = index", span="22-22", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs"];
m0_2 [label="min = -1", span="23-23", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", color=red, community=0, file="ValueAttribute.cs"];
m0_3 [label="max = -1", span="24-24", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", color=red, community=0, file="ValueAttribute.cs"];
m0_4 [label="Exit CommandLine.ValueAttribute.ValueAttribute(int)", span="20-20", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs"];
m0_5 [label="CommandLine.ValueAttribute", span="", file="ValueAttribute.cs"];
d1 -> d2  [key=0, style=solid, color=green];
d21 -> d1  [key=1, style=dashed, color=green, label="CommandLine.Core.TypeDescriptor"];
d21 -> d2  [key=1, style=dashed, color=green, label="CommandLine.Core.TypeDescriptor"];
d21 -> d3  [key=1, style=dashed, color=green, label="CommandLine.Core.TypeDescriptor"];
d0 -> d1  [key=0, style=solid, color=green];
d0 -> d2  [key=1, style=dashed, color=green, label="Maybe<int>"];
d0 -> d3  [key=1, style=dashed, color=green, label="Maybe<CommandLine.Core.TypeDescriptor>"];
d2 -> d3  [key=0, style=solid, color=green];
d3 -> d4  [key=0, style=solid, color=green];
d4 -> d0  [key=0, style=bold, color=blue];
d6 -> d7  [key=0, style=solid, color=green];
d6 -> d8  [key=0, style=solid, color=green];
d5 -> d6  [key=0, style=solid, color=green];
d5 -> d8  [key=1, style=dashed, color=green, label="CommandLine.Core.TargetType"];
d7 -> d9  [key=0, style=solid, color=green];
d7 -> d10  [key=2, style=dotted, color=green];
d8 -> d9  [key=0, style=solid, color=green];
d8 -> d11  [key=2, style=dotted, color=green];
d8 -> d12  [key=2, style=dotted, color=green];
d9 -> d5  [key=0, style=bold, color=blue];
d14 -> d15  [key=0, style=solid, color=green];
d14 -> d16  [key=2, style=dotted, color=green];
d14 -> d17  [key=2, style=dotted, color=green];
d14 -> d18  [key=1, style=dashed, color=green, label="lambda expression"];
d13 -> d14  [key=0, style=solid, color=green];
d15 -> d13  [key=0, style=bold, color=blue];
d18 -> d19  [key=0, style=solid, color=green];
d19 -> d20  [key=0, style=solid, color=green];
d20 -> d18  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid, color=red];
m0_1 -> m0_4  [key=0, style=solid, color=green];
m0_2 -> m0_3  [key=0, style=solid, color=red];
m0_3 -> m0_4  [key=0, style=solid, color=red];
m0_4 -> m0_0  [key=0, style=bold, color=blue];
m0_5 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ValueAttribute"];
m0_5 -> m0_2  [key=1, style=dashed, color=red, label="CommandLine.ValueAttribute"];
m0_5 -> m0_3  [key=1, style=dashed, color=red, label="CommandLine.ValueAttribute"];
}
