digraph  {
m0_4 [cluster="CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", span="64-64"];
m0_5 [cluster="CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", span="64-64"];
m0_8 [cluster="CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", span="91-91"];
m0_9 [cluster="CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", span="91-91"];
m0_2 [cluster="CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", span="52-52"];
m0_3 [cluster="CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", span="52-52"];
m0_0 [cluster="CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", span="41-41"];
m0_1 [cluster="CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", span="41-41"];
m0_6 [cluster="CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", span="77-77"];
m0_7 [cluster="CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", span="77-77"];
m1_8 [cluster="Unk.Be", file="BaseFixture.cs", label="Entry Unk.Be", span=""];
m1_7 [cluster="Unk.Should", file="BaseFixture.cs", label="Entry Unk.Should", span=""];
m1_0 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="Entry CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="38-38"];
m1_6 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="Exit CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="38-38"];
m1_9 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="Entry CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="47-47"];
m1_15 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="Exit CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="47-47"];
m2_3 [cluster="CommandLine.Text.EnglishSentenceBuilder.EnglishSentenceBuilder()", file="BaseSentenceBuilder.cs", label="Entry CommandLine.Text.EnglishSentenceBuilder.EnglishSentenceBuilder()", span="29-29"];
m2_0 [cluster="CommandLine.Text.BaseSentenceBuilder.CreateBuiltIn()", file="BaseSentenceBuilder.cs", label="Entry CommandLine.Text.BaseSentenceBuilder.CreateBuiltIn()", span="71-71"];
m2_2 [cluster="CommandLine.Text.BaseSentenceBuilder.CreateBuiltIn()", file="BaseSentenceBuilder.cs", label="Exit CommandLine.Text.BaseSentenceBuilder.CreateBuiltIn()", span="71-71"];
m3_19 [cluster="CommandLine.Parsing.StringArrayEnumerator.StringArrayEnumerator(string[])", file="EnumeratorsFixture.cs", label="Entry CommandLine.Parsing.StringArrayEnumerator.StringArrayEnumerator(string[])", span="38-38"];
m3_22 [cluster="Unk.Be", file="EnumeratorsFixture.cs", label="Entry Unk.Be", span=""];
m3_25 [cluster="Unk.BeTrue", file="EnumeratorsFixture.cs", label="Entry Unk.BeTrue", span=""];
m3_26 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", span="70-70"];
m3_46 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", file="EnumeratorsFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", span="70-70"];
m3_48 [cluster="CommandLine.Parsing.IArgumentEnumerator.GetRemainingFromNext()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Parsing.IArgumentEnumerator.GetRemainingFromNext()", span="38-38"];
m3_47 [cluster="CommandLine.Parsing.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="EnumeratorsFixture.cs", label="Entry CommandLine.Parsing.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="38-38"];
m3_0 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", span="42-42"];
m3_18 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", file="EnumeratorsFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", span="42-42"];
m3_23 [cluster="Unk.BeFalse", file="EnumeratorsFixture.cs", label="Entry Unk.BeFalse", span=""];
m3_20 [cluster="CommandLine.Parsing.IArgumentEnumerator.MoveNext()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Parsing.IArgumentEnumerator.MoveNext()", span="34-34"];
m3_24 [cluster="Unk.BeNull", file="EnumeratorsFixture.cs", label="Entry Unk.BeNull", span=""];
m3_21 [cluster="Unk.Should", file="EnumeratorsFixture.cs", label="Entry Unk.Should", span=""];
m6_0 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", span="9-9"];
m6_5 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", span="9-9"];
m6_17 [cluster="System.Text.StringBuilder.AppendFormat(string, params object[])", file="HelpVerbOptionAttribute.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, params object[])", span="0-0"];
m6_45 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", span="85-85"];
m6_50 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", span="85-85"];
m6_14 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", span="27-27"];
m6_16 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", span="27-27"];
m6_13 [cluster="System.Text.StringBuilder.Append(char)", file="HelpVerbOptionAttribute.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m6_18 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", span="34-34"];
m6_20 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", span="34-34"];
m6_7 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", span="18-18"];
m6_12 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", span="18-18"];
m6_34 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", span="66-66"];
m6_36 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", span="66-66"];
m6_44 [cluster="System.Text.StringBuilder.Remove(int, int)", file="HelpVerbOptionAttribute.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m6_28 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", span="57-57"];
m6_33 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", span="57-57"];
m6_38 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", span="73-73"];
m6_40 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", span="73-73"];
m6_41 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", span="78-78"];
m6_43 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", span="78-78"];
m6_21 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.BimapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.BimapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41"];
m6_23 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.BimapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.BimapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41"];
m6_6 [cluster="System.Text.StringBuilder.Append(string)", file="HelpVerbOptionAttribute.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m6_37 [cluster="System.Text.StringBuilder.ToString()", file="HelpVerbOptionAttribute.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m6_25 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.MapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.MapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49"];
m6_27 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.MapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.MapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49"];
m6_51 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", span="94-94"];
m6_53 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", span="94-94"];
m6_24 [cluster="System.Func<T, TResult>.Invoke(T)", file="HelpVerbOptionAttribute.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m6_55 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", span="101-101"];
m6_68 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", file="HelpVerbOptionAttribute.cs", label="return c;", span="113-113"];
m6_69 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", span="101-101"];
m6_54 [cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="HelpVerbOptionAttribute.cs", label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="85-85"];
m7_39 [cluster="Unk.EqualTo", file="InstanceChooserTests.cs", label="Entry Unk.EqualTo", span=""];
m7_17 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="InstanceChooserTests.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="353-353"];
m7_18 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", span="53-53"];
m7_19 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", color=green, community=0, file="InstanceChooserTests.cs", label="var expectedErrors = new[] { new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true) }", prediction=0, span="56-56"];
m7_20 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", color=green, community=0, file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'', ''commit'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", prediction=0, span="59-63"];
m7_22 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", color=green, community=0, file="InstanceChooserTests.cs", label="Assert.True(expectedErrors.SequenceEqual(result.Errors))", prediction=0, span="67-67"];
m7_21 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", color=green, community=0, file="InstanceChooserTests.cs", label="Assert.IsType<NullInstance>(result.Value)", prediction=3, span="66-66"];
m7_23 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", span="53-53"];
m7_6 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="InstanceChooserTests.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="391-391"];
m7_37 [cluster="Unk.ShouldHave", file="InstanceChooserTests.cs", label="Entry Unk.ShouldHave", span=""];
m7_7 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooserTests.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m7_38 [cluster="Unk.AllRuntimeProperties", file="InstanceChooserTests.cs", label="Entry Unk.AllRuntimeProperties", span=""];
m7_10 [cluster="Unk.True", file="InstanceChooserTests.cs", label="Entry Unk.True", span=""];
m7_30 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", span="91-91"];
m7_31 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs", label="var expected = new AddOptions { Patch = true, FileName = ''dummy.bin''}", prediction=4, span="94-94"];
m7_32 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''add'', ''--patch'', ''dummy.bin'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", prediction=4, span="97-101"];
m7_34 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs", label="expected.ShouldHave().AllRuntimeProperties().EqualTo(result.Value)", prediction=4, span="105-105"];
m7_33 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs", label="Assert.IsType<AddOptions>(result.Value)", prediction=7, span="104-104"];
m7_35 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", span="91-91"];
m7_36 [cluster="CommandLine.Tests.Fakes.AddOptions.AddOptions()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Fakes.AddOptions.AddOptions()", span="7-7"];
m7_0 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", span="15-15"];
m7_1 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", color=green, community=0, file="InstanceChooserTests.cs", label="var expectedErrors = new[] { new NoVerbSelectedError() }", prediction=8, span="18-18"];
m7_2 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", color=green, community=0, file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", prediction=8, span="21-25"];
m7_4 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", color=green, community=0, file="InstanceChooserTests.cs", label="Assert.True(expectedErrors.SequenceEqual(result.Errors))", prediction=8, span="29-29"];
m7_3 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", color=green, community=0, file="InstanceChooserTests.cs", label="Assert.IsType<NullInstance>(result.Value)", prediction=11, span="28-28"];
m7_5 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", span="15-15"];
m7_11 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", span="34-34"];
m7_12 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", color=green, community=0, file="InstanceChooserTests.cs", label="var expectedErrors = new[] { new HelpVerbRequestedError(null, null, false) }", prediction=12, span="37-37"];
m7_13 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", color=green, community=0, file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", prediction=12, span="40-44"];
m7_15 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", color=green, community=0, file="InstanceChooserTests.cs", label="Assert.True(expectedErrors.SequenceEqual(result.Errors))", prediction=12, span="48-48"];
m7_14 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", color=green, community=0, file="InstanceChooserTests.cs", label="Assert.IsType<NullInstance>(result.Value)", prediction=15, span="47-47"];
m7_16 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", span="34-34"];
m7_8 [cluster="Unk.>", file="InstanceChooserTests.cs", label="Entry Unk.>", span=""];
m7_24 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="72-72"];
m7_25 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", color=green, community=0, file="InstanceChooserTests.cs", label="var expectedErrors = new[] { new HelpVerbRequestedError(null, null, false) }", prediction=16, span="75-75"];
m7_26 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", color=green, community=0, file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'', ''earthunderalienattack'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", prediction=16, span="78-82"];
m7_28 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", color=green, community=0, file="InstanceChooserTests.cs", label="Assert.True(expectedErrors.SequenceEqual(result.Errors))", prediction=16, span="86-86"];
m7_27 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", color=green, community=0, file="InstanceChooserTests.cs", label="Assert.IsType<NullInstance>(result.Value)", prediction=19, span="85-85"];
m7_29 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="72-72"];
m7_9 [cluster="Unk.SequenceEqual", file="InstanceChooserTests.cs", label="Entry Unk.SequenceEqual", span=""];
m8_26 [cluster="CommandLine.NameInfo.GetHashCode()", file="NameInfo.cs", label="Entry CommandLine.NameInfo.GetHashCode()", span="98-98"];
m8_27 [cluster="CommandLine.NameInfo.GetHashCode()", color=green, community=0, file="NameInfo.cs", label="return this.ShortName.GetHashCode() ^ this.LongName.GetHashCode();", prediction=20, span="100-100"];
m8_28 [cluster="CommandLine.NameInfo.GetHashCode()", file="NameInfo.cs", label="Exit CommandLine.NameInfo.GetHashCode()", span="98-98"];
m8_0 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameInfo.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m8_1 [cluster="CommandLine.NameInfo.NameInfo(string, string)", color=green, community=0, file="NameInfo.cs", label="shortName == null", prediction=21, span="22-22"];
m8_2 [cluster="CommandLine.NameInfo.NameInfo(string, string)", color=green, community=0, file="NameInfo.cs", label="throw new ArgumentNullException(''shortName'');", prediction=22, span="22-22"];
m8_3 [cluster="CommandLine.NameInfo.NameInfo(string, string)", color=green, community=0, file="NameInfo.cs", label="longName == null", prediction=23, span="23-23"];
m8_4 [cluster="CommandLine.NameInfo.NameInfo(string, string)", color=green, community=0, file="NameInfo.cs", label="throw new ArgumentNullException(''longName'');", prediction=24, span="23-23"];
m8_5 [cluster="CommandLine.NameInfo.NameInfo(string, string)", color=green, community=0, file="NameInfo.cs", label="this.longName = longName", prediction=25, span="25-25"];
m8_6 [cluster="CommandLine.NameInfo.NameInfo(string, string)", color=green, community=0, file="NameInfo.cs", label="this.shortName = shortName", prediction=26, span="26-26"];
m8_7 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameInfo.cs", label="Exit CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m8_24 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="NameInfo.cs", label="Entry CommandLine.NameInfo.Equals(CommandLine.NameInfo)", span="108-108"];
m8_30 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", color=green, community=0, file="NameInfo.cs", label="other == null", prediction=27, span="110-110"];
m8_31 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", color=green, community=0, file="NameInfo.cs", label="return false;", prediction=28, span="112-112"];
m8_32 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", color=green, community=0, file="NameInfo.cs", label="return this.ShortName.Equals(other.ShortName) && this.LongName.Equals(other.LongName);", prediction=20, span="115-115"];
m8_33 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="NameInfo.cs", label="Exit CommandLine.NameInfo.Equals(CommandLine.NameInfo)", span="108-108"];
m8_29 [cluster="string.GetHashCode()", file="NameInfo.cs", label="Entry string.GetHashCode()", span="0-0"];
m8_12 [cluster="CommandLine.NameInfo.FromSpecification(CommandLine.Core.Specification)", file="NameInfo.cs", label="Entry CommandLine.NameInfo.FromSpecification(CommandLine.Core.Specification)", span="67-67"];
m8_13 [cluster="CommandLine.NameInfo.FromSpecification(CommandLine.Core.Specification)", color=green, community=0, file="NameInfo.cs", label="specification.Tag", prediction=30, span="69-69"];
m8_14 [cluster="CommandLine.NameInfo.FromSpecification(CommandLine.Core.Specification)", color=green, community=0, file="NameInfo.cs", label="SpecificationType.Option", prediction=31, span="71-71"];
m8_16 [cluster="CommandLine.NameInfo.FromSpecification(CommandLine.Core.Specification)", color=green, community=0, file="NameInfo.cs", label="return NameInfo.EmptyName;", prediction=32, span="74-74"];
m8_15 [cluster="CommandLine.NameInfo.FromSpecification(CommandLine.Core.Specification)", color=green, community=0, file="NameInfo.cs", label="return NameInfo.FromOptionSpecification((OptionSpecification)specification);", prediction=33, span="72-72"];
m8_17 [cluster="CommandLine.NameInfo.FromSpecification(CommandLine.Core.Specification)", file="NameInfo.cs", label="Exit CommandLine.NameInfo.FromSpecification(CommandLine.Core.Specification)", span="67-67"];
m8_25 [cluster="object.Equals(object)", file="NameInfo.cs", label="Entry object.Equals(object)", span="0-0"];
m8_9 [cluster="CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", file="NameInfo.cs", label="Entry CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", span="60-60"];
m8_10 [cluster="CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", color=green, community=0, file="NameInfo.cs", label="return new NameInfo(\r\n                specification.LongName,\r\n                specification.ShortName);", prediction=34, span="62-64"];
m8_11 [cluster="CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", file="NameInfo.cs", label="Exit CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", span="60-60"];
m8_34 [cluster="string.Equals(string)", file="NameInfo.cs", label="Entry string.Equals(string)", span="0-0"];
m8_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="NameInfo.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m8_18 [cluster="CommandLine.NameInfo.Equals(object)", file="NameInfo.cs", label="Entry CommandLine.NameInfo.Equals(object)", span="83-83"];
m8_19 [cluster="CommandLine.NameInfo.Equals(object)", color=green, community=0, file="NameInfo.cs", label="var other = obj as NameInfo", prediction=20, span="85-85"];
m8_20 [cluster="CommandLine.NameInfo.Equals(object)", color=green, community=0, file="NameInfo.cs", label="other != null", prediction=36, span="86-86"];
m8_21 [cluster="CommandLine.NameInfo.Equals(object)", color=green, community=0, file="NameInfo.cs", label="return this.Equals(other);", prediction=20, span="88-88"];
m8_22 [cluster="CommandLine.NameInfo.Equals(object)", color=green, community=0, file="NameInfo.cs", label="return base.Equals(obj);", prediction=20, span="91-91"];
m8_23 [cluster="CommandLine.NameInfo.Equals(object)", file="NameInfo.cs", label="Exit CommandLine.NameInfo.Equals(object)", span="83-83"];
m8_35 [file="NameInfo.cs", label="CommandLine.NameInfo", span=""];
m9_0 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookup.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="10-10"];
m9_1 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", color=green, community=0, file="NameLookup.cs", label="name == null", prediction=39, span="12-12"];
m9_2 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", color=green, community=0, file="NameLookup.cs", label="throw new ArgumentNullException(''name'');", prediction=40, span="12-12"];
m9_3 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", color=green, community=0, file="NameLookup.cs", label="return specifications.Any(a => name.MatchName(a.ShortName, a.LongName, comparer));", prediction=41, span="14-14"];
m9_4 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookup.cs", label="Exit CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="10-10"];
m9_10 [cluster="string.MatchName(string, string, System.StringComparer)", file="NameLookup.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m9_7 [cluster="lambda expression", file="NameLookup.cs", label="Entry lambda expression", span="14-14"];
m9_8 [cluster="lambda expression", color=green, community=0, file="NameLookup.cs", label="name.MatchName(a.ShortName, a.LongName, comparer)", prediction=41, span="14-14"];
m9_9 [cluster="lambda expression", file="NameLookup.cs", label="Exit lambda expression", span="14-14"];
m9_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="NameLookup.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m9_6 [cluster="Unk.Any", file="NameLookup.cs", label="Entry Unk.Any", span=""];
m9_11 [file="NameLookup.cs", label=string, span=""];
m9_12 [file="NameLookup.cs", label="System.StringComparer", span=""];
m10_12 [cluster="CommandLine.Tests.Fakes.NullableTypesOptions.NullableTypesOptions()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Fakes.NullableTypesOptions.NullableTypesOptions()", span="35-35"];
m10_17 [cluster="Unk.Be", file="NullableTypesParsingFixture.cs", label="Entry Unk.Be", span=""];
m10_16 [cluster="Unk.BeTrue", file="NullableTypesParsingFixture.cs", label="Entry Unk.BeTrue", span=""];
m10_0 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_integer_option()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_integer_option()", span="42-42"];
m10_11 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_integer_option()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_integer_option()", span="42-42"];
m10_81 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", span="156-156"];
m10_95 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", span="156-156"];
m10_14 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="140-140"];
m10_18 [cluster="Unk.NotHaveValue", file="NullableTypesParsingFixture.cs", label="Entry Unk.NotHaveValue", span=""];
m10_25 [cluster="Unk.BeFalse", file="NullableTypesParsingFixture.cs", label="Entry Unk.BeFalse", span=""];
m10_13 [cluster="CommandLine.Parser.Parser()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Parser.Parser()", span="54-54"];
m10_32 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", span="80-80"];
m10_43 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", span="80-80"];
m10_57 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_double_option()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_double_option()", span="118-118"];
m10_68 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_double_option()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_double_option()", span="118-118"];
m10_51 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", span="108-108"];
m10_56 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", span="108-108"];
m10_69 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_double_option_fails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_double_option_fails()", span="136-136"];
m10_74 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_double_option_fails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_double_option_fails()", span="136-136"];
m10_75 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", span="146-146"];
m10_80 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", span="146-146"];
m10_26 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", span="70-70"];
m10_31 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", span="70-70"];
m10_45 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_enumeration_option_fails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_enumeration_option_fails()", span="98-98"];
m10_50 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_enumeration_option_fails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_enumeration_option_fails()", span="98-98"];
m10_44 [cluster="Unk.BeNull", file="NullableTypesParsingFixture.cs", label="Entry Unk.BeNull", span=""];
m10_15 [cluster="Unk.Should", file="NullableTypesParsingFixture.cs", label="Entry Unk.Should", span=""];
m10_19 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", span="60-60"];
m10_24 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", span="60-60"];
m12_51 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", span="111-111"];
m12_60 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", span="111-111"];
m12_11 [cluster="Unk.BeTrue", file="OptionArrayAttributeParsingFixture.cs", label="Entry Unk.BeTrue", span=""];
m12_0 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name()", span="43-43"];
m12_6 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name()", span="43-43"];
m12_7 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithArray.SimpleOptionsWithArray()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithArray.SimpleOptionsWithArray()", span="35-35"];
m12_220 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array()", span="387-387"];
m12_229 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array()", span="387-387"];
m12_43 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", span="99-99"];
m12_50 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", span="99-99"];
m12_191 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", span="37-37"];
m12_204 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_integer_with_long_name()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_integer_with_long_name()", span="363-363"];
m12_206 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_integer_with_long_name()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_integer_with_long_name()", span="363-363"];
m12_198 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_integer_with_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_integer_with_short_name()", span="356-356"];
m12_200 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_integer_with_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_integer_with_short_name()", span="356-356"];
m12_187 [cluster="Unk.>", file="OptionArrayAttributeParsingFixture.cs", label="Entry Unk.>", span=""];
m12_219 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="OptionArrayAttributeParsingFixture.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m12_217 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="66-66"];
m12_91 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", span="170-170"];
m12_108 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", span="170-170"];
m12_61 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", span="126-126"];
m12_71 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", span="126-126"];
m12_12 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="38-38"];
m12_27 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", span="76-76"];
m12_33 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", span="76-76"];
m12_218 [cluster="CommandLine.ParserSettings.ParserSettings()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="49-49"];
m12_230 [cluster="CommandLine.Tests.Unit.OptionsWithUIntArray.OptionsWithUIntArray()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.OptionsWithUIntArray.OptionsWithUIntArray()", span="33-33"];
m12_125 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", span="229-229"];
m12_147 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", span="229-229"];
m12_9 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="140-140"];
m12_210 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_culture_specific_number()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_culture_specific_number()", span="370-370"];
m12_216 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_culture_specific_number()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_culture_specific_number()", span="370-370"];
m12_83 [cluster="Unk.BeFalse", file="OptionArrayAttributeParsingFixture.cs", label="Entry Unk.BeFalse", span=""];
m12_8 [cluster="CommandLine.Parser.Parser()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Parser.Parser()", span="54-54"];
m12_192 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_long_name()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_long_name()", span="349-349"];
m12_194 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_long_name()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_long_name()", span="349-349"];
m12_207 [cluster="lambda expression", file="OptionArrayAttributeParsingFixture.cs", label="Entry lambda expression", span="366-366"];
m12_188 [cluster="lambda expression", file="OptionArrayAttributeParsingFixture.cs", label="Entry lambda expression", span="345-345"];
m12_190 [cluster="lambda expression", file="OptionArrayAttributeParsingFixture.cs", label="Exit lambda expression", span="345-345"];
m12_195 [cluster="lambda expression", file="OptionArrayAttributeParsingFixture.cs", label="Entry lambda expression", span="352-352"];
m12_197 [cluster="lambda expression", file="OptionArrayAttributeParsingFixture.cs", label="Exit lambda expression", span="352-352"];
m12_201 [cluster="lambda expression", file="OptionArrayAttributeParsingFixture.cs", label="Entry lambda expression", span="359-359"];
m12_203 [cluster="lambda expression", file="OptionArrayAttributeParsingFixture.cs", label="Exit lambda expression", span="359-359"];
m12_209 [cluster="lambda expression", file="OptionArrayAttributeParsingFixture.cs", label="Exit lambda expression", span="366-366"];
m12_231 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array_using_short_names()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array_using_short_names()", span="406-406"];
m12_239 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array_using_short_names()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array_using_short_names()", span="406-406"];
m12_109 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", span="199-199"];
m12_117 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", span="199-199"];
m12_34 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_after()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_after()", span="87-87"];
m12_41 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_after()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_after()", span="87-87"];
m12_10 [cluster="Unk.Should", file="OptionArrayAttributeParsingFixture.cs", label="Entry Unk.Should", span=""];
m12_84 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_integer_array_option_using_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_integer_array_option_using_short_name()", span="159-159"];
m12_90 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_integer_array_option_using_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_integer_array_option_using_short_name()", span="159-159"];
m12_118 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_double_array_option_using_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_double_array_option_using_short_name()", span="216-216"];
m12_124 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_double_array_option_using_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_double_array_option_using_short_name()", span="216-216"];
m12_42 [cluster="Unk.Be", file="OptionArrayAttributeParsingFixture.cs", label="Entry Unk.Be", span=""];
m12_148 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", span="272-272"];
m12_183 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", span="272-272"];
m12_184 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_short_name()", span="342-342"];
m12_186 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_short_name()", span="342-342"];
m12_13 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", span="54-54"];
m12_19 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", span="54-54"];
m12_73 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="47-47"];
m12_72 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithArrayAndValueList.SimpleOptionsWithArrayAndValueList()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithArrayAndValueList.SimpleOptionsWithArrayAndValueList()", span="35-35"];
m12_74 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_a_string_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_a_string_array_option_fails()", span="142-142"];
m12_82 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_a_string_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_a_string_array_option_fails()", span="142-142"];
m12_20 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", span="65-65"];
m12_26 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", span="65-65"];
m12_240 [file="OptionArrayAttributeParsingFixture.cs", label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", span=""];
m13_82 [cluster="string.Split(params char[])", file="OptionInfo.cs", label="Entry string.Split(params char[])", span="0-0"];
m13_68 [cluster="CommandLine.Parsing.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.OptionInfo.SetDefault(object)", span="207-207"];
m13_73 [cluster="CommandLine.Parsing.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label="Exit CommandLine.Parsing.OptionInfo.SetDefault(object)", span="207-207"];
m13_47 [cluster="CommandLine.Parsing.PropertyWriter.WriteScalar(string, object)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.PropertyWriter.WriteScalar(string, object)", span="48-48"];
m13_45 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsNullableType(System.Type)", file="OptionInfo.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsNullableType(System.Type)", span="242-242"];
m13_64 [cluster="CommandLine.Parsing.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.OptionInfo.SetValue(bool, object)", span="201-201"];
m13_67 [cluster="CommandLine.Parsing.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs", label="Exit CommandLine.Parsing.OptionInfo.SetValue(bool, object)", span="201-201"];
m13_61 [cluster="System.Array.CreateInstance(System.Type, int)", file="OptionInfo.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m13_35 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="OptionInfo.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m13_63 [cluster="System.Array.SetValue(object, int)", file="OptionInfo.cs", label="Entry System.Array.SetValue(object, int)", span="0-0"];
m13_46 [cluster="CommandLine.Parsing.PropertyWriter.WriteNullable(string, object)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.PropertyWriter.WriteNullable(string, object)", span="85-85"];
m13_44 [cluster="CommandLine.Parsing.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.OptionInfo.SetValueList(string, object)", span="222-222"];
m13_80 [cluster="CommandLine.Parsing.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="Exit CommandLine.Parsing.OptionInfo.SetValueList(string, object)", span="222-222"];
m13_62 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="OptionInfo.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m13_48 [cluster="CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="180-180"];
m13_59 [cluster="CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="Exit CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="180-180"];
m13_37 [cluster="CommandLine.Parsing.OptionInfo.SetValue(string, object)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.OptionInfo.SetValue(string, object)", span="165-165"];
m13_43 [cluster="CommandLine.Parsing.OptionInfo.SetValue(string, object)", file="OptionInfo.cs", label="Exit CommandLine.Parsing.OptionInfo.SetValue(string, object)", span="165-165"];
m13_17 [cluster="CommandLine.Parsing.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", span="40-40"];
m13_36 [cluster="CommandLine.ParserException.ParserException(string, System.Exception)", file="OptionInfo.cs", label="Entry CommandLine.ParserException.ParserException(string, System.Exception)", span="60-60"];
m13_83 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="OptionInfo.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m13_34 [cluster="System.Activator.CreateInstance(System.Type)", file="OptionInfo.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m13_60 [cluster="System.Type.GetElementType()", file="OptionInfo.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m13_22 [cluster="CommandLine.Parsing.OptionInfo.GetValue(object)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.OptionInfo.GetValue(object)", span="142-142"];
m13_24 [cluster="CommandLine.Parsing.OptionInfo.GetValue(object)", file="OptionInfo.cs", label="Exit CommandLine.Parsing.OptionInfo.GetValue(object)", span="142-142"];
m13_16 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="OptionInfo.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m13_81 [cluster="System.Collections.Generic.List<T>.List()", file="OptionInfo.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m13_18 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(char?, string)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.OptionInfo.OptionInfo(char?, string)", span="78-78"];
m13_21 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(char?, string)", file="OptionInfo.cs", label="Exit CommandLine.Parsing.OptionInfo.OptionInfo(char?, string)", span="78-78"];
m13_26 [cluster="CommandLine.Parsing.OptionInfo.CreateInstance(object)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.OptionInfo.CreateInstance(object)", span="147-147"];
m13_33 [cluster="CommandLine.Parsing.OptionInfo.CreateInstance(object)", file="OptionInfo.cs", label="Exit CommandLine.Parsing.OptionInfo.CreateInstance(object)", span="147-147"];
m13_25 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="OptionInfo.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m13_0 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", span="49-49"];
m13_15 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", file="OptionInfo.cs", label="Exit CommandLine.Parsing.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", span="49-49"];
m13_84 [file="OptionInfo.cs", label="CommandLine.Parsing.OptionInfo", span=""];
m14_13 [cluster="Unk.Be", file="OptionListAttributeFixture.cs", label="Entry Unk.Be", span=""];
m14_11 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="OptionListAttributeFixture.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="140-140"];
m14_14 [cluster="Unk.HaveCount", file="OptionListAttributeFixture.cs", label="Entry Unk.HaveCount", span=""];
m14_10 [cluster="CommandLine.Parser.Parser()", file="OptionListAttributeFixture.cs", label="Entry CommandLine.Parser.Parser()", span="54-54"];
m14_9 [cluster="CommandLine.Tests.Fakes.OptionsWithImplicitLongName.OptionsWithImplicitLongName()", file="OptionListAttributeFixture.cs", label="Entry CommandLine.Tests.Fakes.OptionsWithImplicitLongName.OptionsWithImplicitLongName()", span="4-4"];
m14_16 [cluster="lambda expression", file="OptionListAttributeFixture.cs", label="Entry lambda expression", span="30-30"];
m14_18 [cluster="lambda expression", file="OptionListAttributeFixture.cs", label="Exit lambda expression", span="30-30"];
m14_0 [cluster="CommandLine.Tests.Unit.Attributes.OptionListAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", file="OptionListAttributeFixture.cs", label="Entry CommandLine.Tests.Unit.Attributes.OptionListAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", span="16-16"];
m14_8 [cluster="CommandLine.Tests.Unit.Attributes.OptionListAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", file="OptionListAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.Attributes.OptionListAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", span="16-16"];
m14_12 [cluster="Unk.Should", file="OptionListAttributeFixture.cs", label="Entry Unk.Should", span=""];
m14_15 [cluster="Unk.ContainInOrder", file="OptionListAttributeFixture.cs", label="Entry Unk.ContainInOrder", span=""];
m15_5 [cluster="CommandLine.Parsing.OptionMap.OptionMap(int, CommandLine.ParserSettings)", file="OptionMapFixture.cs", label="Entry CommandLine.Parsing.OptionMap.OptionMap(int, CommandLine.ParserSettings)", span="46-46"];
m15_16 [cluster="CommandLine.OptionAttribute.CreateOptionInfo()", file="OptionMapFixture.cs", label="Entry CommandLine.OptionAttribute.CreateOptionInfo()", span="77-77"];
m15_37 [cluster="Unk.BeSameAs", file="OptionMapFixture.cs", label="Entry Unk.BeSameAs", span=""];
m15_18 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", span="66-66"];
m15_24 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", span="66-66"];
m15_0 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", span="50-50"];
m15_4 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", span="50-50"];
m15_8 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(string)", span="57-57"];
m15_14 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(string)", span="57-57"];
m15_6 [cluster="CommandLine.ParserSettings.ParserSettings(bool)", file="OptionMapFixture.cs", label="Entry CommandLine.ParserSettings.ParserSettings(bool)", span="59-59"];
m15_38 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", span="121-121"];
m15_55 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", span="121-121"];
m15_25 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionMapFixture.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char, string)", span="68-68"];
m15_7 [cluster="System.Collections.Generic.List<T>.List(int)", file="OptionMapFixture.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m15_26 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.Manage_options()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.Manage_options()", span="93-93"];
m15_35 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.Manage_options()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.Manage_options()", span="93-93"];
m15_17 [cluster="System.Collections.Generic.List<T>.Add(T)", file="OptionMapFixture.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m15_36 [cluster="Unk.Should", file="OptionMapFixture.cs", label="Entry Unk.Should", span=""];
m15_15 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionMapFixture.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string)", span="58-58"];
m15_56 [file="OptionMapFixture.cs", label="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder", span=""];
m16_4 [cluster="lambda expression", file="Options.cs", label="Entry lambda expression", span="29-29"];
m16_6 [cluster="lambda expression", file="Options.cs", label="Exit lambda expression", span="29-29"];
m16_3 [cluster="CommandLine.Text.HelpText.AutoBuild(object, System.Action<CommandLine.Text.HelpText>, bool)", file="Options.cs", label="Entry CommandLine.Text.HelpText.AutoBuild(object, System.Action<CommandLine.Text.HelpText>, bool)", span="278-278"];
m16_7 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", file="Options.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", span="338-338"];
m16_0 [cluster="CSharpTemplate.Options.GetUsage()", file="Options.cs", label="Entry CSharpTemplate.Options.GetUsage()", span="27-27"];
m16_2 [cluster="CSharpTemplate.Options.GetUsage()", file="Options.cs", label="Exit CSharpTemplate.Options.GetUsage()", span="27-27"];
m16_8 [file="Options.cs", label="CSharpTemplate.Options", span=""];
m18_29 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", file="Parser.cs", label="Entry CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", span="101-101"];
m18_34 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", color=green, community=0, file="Parser.cs", label="factory == null", prediction=43, span="103-103"];
m18_35 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", color=green, community=0, file="Parser.cs", label="throw new ArgumentNullException(''factory'');", prediction=44, span="103-103"];
m18_36 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", color=green, community=0, file="Parser.cs", label="args == null", prediction=45, span="104-104"];
m18_37 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", color=green, community=0, file="Parser.cs", label="throw new ArgumentNullException(''args'');", prediction=46, span="104-104"];
m18_38 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", color=green, community=0, file="Parser.cs", label="return MakeParserResult(\r\n                () => InstanceBuilder.Build(factory, args, this.settings.NameComparer, this.settings.ParsingCulture),\r\n                settings);", prediction=45, span="106-108"];
m18_39 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", file="Parser.cs", label="Exit CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", span="101-101"];
m18_8 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="35-35"];
m18_9 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", color=green, community=0, file="Parser.cs", label="configuration == null", prediction=48, span="37-37"];
m18_10 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", color=green, community=0, file="Parser.cs", label="throw new ArgumentNullException(''configuration'');", prediction=49, span="37-37"];
m18_11 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", color=green, community=0, file="Parser.cs", label="this.settings = new ParserSettings()", prediction=50, span="39-39"];
m18_12 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", color=green, community=0, file="Parser.cs", label="configuration(this.settings)", prediction=45, span="40-40"];
m18_13 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", color=green, community=0, file="Parser.cs", label="this.settings.Consumed = true", prediction=52, span="41-41"];
m18_14 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="Exit CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="35-35"];
m18_20 [cluster="CommandLine.Parser.~Parser()", file="Parser.cs", label="Entry CommandLine.Parser.~Parser()", span="53-53"];
m18_21 [cluster="CommandLine.Parser.~Parser()", color=green, community=0, file="Parser.cs", label="Dispose(false)", prediction=45, span="55-55"];
m18_22 [cluster="CommandLine.Parser.~Parser()", file="Parser.cs", label="Exit CommandLine.Parser.~Parser()", span="53-53"];
m18_45 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", file="Parser.cs", label="Entry CommandLine.Parser.ParseArguments(string[], params System.Type[])", span="123-123"];
m18_46 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", color=green, community=0, file="Parser.cs", label="args == null", prediction=54, span="125-125"];
m18_47 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", color=green, community=0, file="Parser.cs", label="throw new ArgumentNullException(''args'');", prediction=55, span="125-125"];
m18_48 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", color=green, community=0, file="Parser.cs", label="types == null", prediction=45, span="126-126"];
m18_49 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", color=green, community=0, file="Parser.cs", label="throw new ArgumentNullException(''types'');", prediction=57, span="126-126"];
m18_50 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", color=green, community=0, file="Parser.cs", label="types.Length == 0", prediction=45, span="127-127"];
m18_51 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", color=green, community=0, file="Parser.cs", label="throw new ArgumentOutOfRangeException(''types'');", prediction=59, span="127-127"];
m18_52 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", color=green, community=0, file="Parser.cs", label="return MakeParserResult(\r\n                () => InstanceChooser.Choose(types, args, this.settings.NameComparer, this.settings.ParsingCulture),\r\n                settings);", prediction=45, span="129-131"];
m18_53 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", file="Parser.cs", label="Exit CommandLine.Parser.ParseArguments(string[], params System.Type[])", span="123-123"];
m18_33 [cluster="T.cstr", file="Parser.cs", label="Entry T.cstr", span=""];
m18_16 [cluster="System.Action<T>.Invoke(T)", file="Parser.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m18_3 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="44-44"];
m18_17 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", color=green, community=0, file="Parser.cs", label="this.settings = settings", prediction=61, span="46-46"];
m18_18 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", color=green, community=0, file="Parser.cs", label="this.settings.Consumed = true", prediction=62, span="47-47"];
m18_19 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="Exit CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="44-44"];
m18_54 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="Parser.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m18_75 [cluster="Unk.Where", file="Parser.cs", label="Entry Unk.Where", span=""];
m18_4 [cluster="CommandLine.ParserSettings.ParserSettings()", file="Parser.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="24-24"];
m18_5 [cluster="CommandLine.Parser.Parser()", file="Parser.cs", label="Entry CommandLine.Parser.Parser()", span="24-24"];
m18_6 [cluster="CommandLine.Parser.Parser()", color=green, community=0, file="Parser.cs", label="this.settings = new ParserSettings { Consumed = true }", prediction=63, span="26-26"];
m18_7 [cluster="CommandLine.Parser.Parser()", file="Parser.cs", label="Exit CommandLine.Parser.Parser()", span="24-24"];
m18_66 [cluster="System.Func<TResult>.Invoke()", file="Parser.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m18_68 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs", label="Entry CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="160-160"];
m18_79 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", color=green, community=0, file="Parser.cs", label="parserResult.Errors.Any()", prediction=64, span="162-162"];
m18_80 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", color=green, community=0, file="Parser.cs", label="helpWriter.ToMaybe().Do(writer => writer.Write(HelpText.AutoBuild(parserResult)))", prediction=65, span="164-164"];
m18_81 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", color=green, community=0, file="Parser.cs", label="return parserResult;", prediction=65, span="167-167"];
m18_82 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs", label="Exit CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="160-160"];
m18_83 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Parser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m18_86 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="164-164"];
m18_1 [cluster="lambda expression", color=green, community=0, file="Parser.cs", label="new Parser(new ParserSettings{ HelpWriter = Console.Error })", prediction=67, span="19-19"];
m18_0 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="19-19"];
m18_2 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="19-19"];
m18_30 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="88-88"];
m18_31 [cluster="lambda expression", color=green, community=0, file="Parser.cs", label="new T()", prediction=68, span="88-88"];
m18_32 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="88-88"];
m18_41 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="107-107"];
m18_42 [cluster="lambda expression", color=green, community=0, file="Parser.cs", label="InstanceBuilder.Build(factory, args, this.settings.NameComparer, this.settings.ParsingCulture)", prediction=45, span="107-107"];
m18_43 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="107-107"];
m18_55 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="130-130"];
m18_56 [cluster="lambda expression", color=green, community=0, file="Parser.cs", label="InstanceChooser.Choose(types, args, this.settings.NameComparer, this.settings.ParsingCulture)", prediction=45, span="130-130"];
m18_57 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="130-130"];
m18_72 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="156-156"];
m18_73 [cluster="lambda expression", color=green, community=0, file="Parser.cs", label="errs.Where(e => e.Tag != ErrorType.UnknownOptionError)", prediction=71, span="156-156"];
m18_74 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="156-156"];
m18_76 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="156-156"];
m18_77 [cluster="lambda expression", color=green, community=0, file="Parser.cs", label="e.Tag != ErrorType.UnknownOptionError", prediction=72, span="156-156"];
m18_78 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="156-156"];
m18_87 [cluster="lambda expression", color=green, community=0, file="Parser.cs", label="writer.Write(HelpText.AutoBuild(parserResult))", prediction=65, span="164-164"];
m18_88 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="164-164"];
m18_84 [cluster="T.ToMaybe<T>()", file="Parser.cs", label="Entry T.ToMaybe<T>()", span="82-82"];
m18_67 [cluster="CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", file="Parser.cs", label="Entry CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", span="153-153"];
m18_69 [cluster="CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", color=green, community=0, file="Parser.cs", label="return ignoreUnknownArguments\r\n                       ? parserResult.MapErrors(errs => errs.Where(e => e.Tag != ErrorType.UnknownOptionError))\r\n                       : parserResult;", prediction=74, span="155-157"];
m18_70 [cluster="CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", file="Parser.cs", label="Exit CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", span="153-153"];
m18_24 [cluster="CommandLine.Parser.ParseArguments<T>(string[])", file="Parser.cs", label="Entry CommandLine.Parser.ParseArguments<T>(string[])", span="83-83"];
m18_25 [cluster="CommandLine.Parser.ParseArguments<T>(string[])", color=green, community=0, file="Parser.cs", label="args == null", prediction=75, span="86-86"];
m18_26 [cluster="CommandLine.Parser.ParseArguments<T>(string[])", color=green, community=0, file="Parser.cs", label="throw new ArgumentNullException(''args'');", prediction=76, span="86-86"];
m18_27 [cluster="CommandLine.Parser.ParseArguments<T>(string[])", color=green, community=0, file="Parser.cs", label="return ParseArguments(() => new T(), args);", prediction=45, span="88-88"];
m18_28 [cluster="CommandLine.Parser.ParseArguments<T>(string[])", file="Parser.cs", label="Exit CommandLine.Parser.ParseArguments<T>(string[])", span="83-83"];
m18_71 [cluster="Unk.MapErrors", file="Parser.cs", label="Entry Unk.MapErrors", span=""];
m18_89 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Parser.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="242-242"];
m18_58 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Parser.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m18_85 [cluster="CommandLine.Infrastructure.Maybe<T>.Do<T>(System.Action<T>)", file="Parser.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.Do<T>(System.Action<T>)", span="111-111"];
m18_63 [cluster="System.GC.SuppressFinalize(object)", file="Parser.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m18_98 [cluster="CommandLine.ParserSettings.Dispose()", file="Parser.cs", label="Entry CommandLine.ParserSettings.Dispose()", span="106-106"];
m18_40 [cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs", label="Entry CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", span="144-144"];
m18_64 [cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", color=green, community=0, file="Parser.cs", label="return DisplayHelp(\r\n                HandleUnknownArguments(\r\n                    parseFunc(),\r\n                    settings.IgnoreUnknownArguments),\r\n                settings.HelpWriter);", prediction=78, span="146-150"];
m18_65 [cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs", label="Exit CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", span="144-144"];
m18_59 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="Entry CommandLine.Parser.Dispose()", span="137-137"];
m18_60 [cluster="CommandLine.Parser.Dispose()", color=green, community=0, file="Parser.cs", label="Dispose(true)", prediction=45, span="139-139"];
m18_61 [cluster="CommandLine.Parser.Dispose()", color=green, community=0, file="Parser.cs", label="GC.SuppressFinalize(this)", prediction=45, span="141-141"];
m18_62 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="Exit CommandLine.Parser.Dispose()", span="137-137"];
m18_23 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="Entry CommandLine.Parser.Dispose(bool)", span="170-170"];
m18_91 [cluster="CommandLine.Parser.Dispose(bool)", color=green, community=0, file="Parser.cs", label="this.disposed", prediction=45, span="172-172"];
m18_92 [cluster="CommandLine.Parser.Dispose(bool)", color=green, community=0, file="Parser.cs", label="return;", prediction=82, span="174-174"];
m18_93 [cluster="CommandLine.Parser.Dispose(bool)", color=green, community=0, file="Parser.cs", label=disposing, prediction=83, span="177-177"];
m18_94 [cluster="CommandLine.Parser.Dispose(bool)", color=green, community=0, file="Parser.cs", label="settings != null", prediction=45, span="179-179"];
m18_95 [cluster="CommandLine.Parser.Dispose(bool)", color=green, community=0, file="Parser.cs", label="settings.Dispose()", prediction=45, span="181-181"];
m18_96 [cluster="CommandLine.Parser.Dispose(bool)", color=green, community=0, file="Parser.cs", label="this.disposed = true", prediction=86, span="184-184"];
m18_97 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="Exit CommandLine.Parser.Dispose(bool)", span="170-170"];
m18_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Parser.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m18_90 [cluster="System.IO.TextWriter.Write(string)", file="Parser.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m18_44 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Parser.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m18_99 [file="Parser.cs", label="CommandLine.Parser", span=""];
m18_100 [file="Parser.cs", label="System.Func<T>", span=""];
m18_101 [file="Parser.cs", label="string[]", span=""];
m18_102 [file="Parser.cs", label="string[]", span=""];
m18_103 [file="Parser.cs", label="params System.Type[]", span=""];
m18_104 [file="Parser.cs", label="CommandLine.ParserResult<T>", span=""];
m19_12 [cluster="bool.ToString()", file="Program.cs", label="Entry bool.ToString()", span="0-0"];
m19_9 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="Program.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="140-140"];
m19_0 [cluster="CSharpTemplate.Program.Main(string[])", file="Program.cs", label="Entry CSharpTemplate.Program.Main(string[])", span="18-18"];
m19_7 [cluster="CSharpTemplate.Program.Main(string[])", file="Program.cs", label="Exit CSharpTemplate.Program.Main(string[])", span="18-18"];
m19_13 [cluster="string.ToLowerInvariant()", file="Program.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m19_8 [cluster="CSharpTemplate.Options.Options()", file="Program.cs", label="Entry CSharpTemplate.Options.Options()", span="15-15"];
m19_10 [cluster="System.Environment.Exit(int)", file="Program.cs", label="Entry System.Environment.Exit(int)", span="0-0"];
m19_11 [cluster="System.Console.WriteLine(string)", file="Program.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m20_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ReflectionCache.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m20_3 [cluster="CommandLine.Infrastructure.ReflectionCache.ReflectionCache()", file="ReflectionCache.cs", label="Entry CommandLine.Infrastructure.ReflectionCache.ReflectionCache()", span="42-42"];
m20_0 [cluster="CommandLine.Infrastructure.ReflectionCache.ReflectionCache()", file="ReflectionCache.cs", label="Entry CommandLine.Infrastructure.ReflectionCache.ReflectionCache()", span="37-37"];
m20_2 [cluster="CommandLine.Infrastructure.ReflectionCache.ReflectionCache()", file="ReflectionCache.cs", label="Exit CommandLine.Infrastructure.ReflectionCache.ReflectionCache()", span="37-37"];
m20_5 [cluster="CommandLine.Infrastructure.ReflectionCache.ReflectionCache()", file="ReflectionCache.cs", label="Exit CommandLine.Infrastructure.ReflectionCache.ReflectionCache()", span="42-42"];
m20_7 [file="ReflectionCache.cs", label="CommandLine.Infrastructure.ReflectionCache", span=""];
m21_8 [cluster="CommandLine.Core.ReflectionExtensions.ToDescriptor(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.ToDescriptor(System.Type)", span="22-22"];
m21_9 [cluster="CommandLine.Core.ReflectionExtensions.ToDescriptor(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="type == null", prediction=87, span="24-24"];
m21_10 [cluster="CommandLine.Core.ReflectionExtensions.ToDescriptor(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="throw new ArgumentNullException(''type'');", prediction=88, span="24-24"];
m21_11 [cluster="CommandLine.Core.ReflectionExtensions.ToDescriptor(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="return type == typeof(bool)\r\n                       ? DescriptorType.Boolean\r\n                       : type == typeof(string)\r\n                             ? DescriptorType.Scalar\r\n                             : type.IsArray || typeof(IEnumerable).IsAssignableFrom(type)\r\n                                   ? DescriptorType.Sequence\r\n                                   : DescriptorType.Scalar;", prediction=89, span="26-32"];
m21_12 [cluster="CommandLine.Core.ReflectionExtensions.ToDescriptor(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.ToDescriptor(System.Type)", span="22-22"];
m21_5 [cluster="Unk.>", file="ReflectionExtensions.cs", label="Entry Unk.>", span=""];
m21_43 [cluster="System.Action<T>.Invoke(T)", file="ReflectionExtensions.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m21_6 [cluster="Unk.Any", file="ReflectionExtensions.cs", label="Entry Unk.Any", span=""];
m21_23 [cluster="Unk.Where", file="ReflectionExtensions.cs", label="Entry Unk.Where", span=""];
m21_29 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", span="55-55"];
m21_30 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label="Action<Exception> fail = inner => { throw new ApplicationException(''Cannot set value to target instance.'', inner); }", prediction=90, span="57-57"];
m21_31 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label="property.SetValue(instance, value, null)", prediction=91, span="61-61"];
m21_33 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label="fail(e)", prediction=90, span="65-65"];
m21_35 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label="fail(e)", prediction=90, span="69-69"];
m21_37 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label="fail(e)", prediction=90, span="73-73"];
m21_39 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label="fail(e)", prediction=90, span="77-77"];
m21_32 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label=TargetException, prediction=96, span="63-63"];
m21_34 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label=TargetParameterCountException, prediction=97, span="67-67"];
m21_36 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label=MethodAccessException, prediction=98, span="71-71"];
m21_38 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label=TargetInvocationException, prediction=99, span="75-75"];
m21_40 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label="return instance;", prediction=91, span="80-80"];
m21_41 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", span="55-55"];
m21_47 [cluster="System.ApplicationException.ApplicationException(string, System.Exception)", file="ReflectionExtensions.cs", label="Entry System.ApplicationException.ApplicationException(string, System.Exception)", span="0-0"];
m21_53 [cluster="System.Array.CreateInstance(System.Type, int)", file="ReflectionExtensions.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m21_7 [cluster="Unk.selector", file="ReflectionExtensions.cs", label="Entry Unk.selector", span=""];
m21_44 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="57-57"];
m21_25 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="51-52"];
m21_26 [cluster="lambda expression", color=green, community=0, file="ReflectionExtensions.cs", label="specProp.Property.SetValue(current, selector(specProp))", prediction=101, span="52-52"];
m21_27 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="51-52"];
m21_45 [cluster="lambda expression", color=green, community=0, file="ReflectionExtensions.cs", label="throw new ApplicationException(''Cannot set value to target instance.'', inner);", prediction=90, span="57-57"];
m21_46 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="57-57"];
m21_42 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="ReflectionExtensions.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m21_14 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ReflectionExtensions.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m21_3 [cluster="System.Type.GetProperties()", file="ReflectionExtensions.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m21_0 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="12-12"];
m21_1 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", color=green, community=0, file="ReflectionExtensions.cs", label="return from pi in type.GetProperties()\r\n                   let attrs = pi.GetCustomAttributes(true)\r\n                   where\r\n                        attrs.OfType<OptionAttribute>().Any() ||\r\n                        attrs.OfType<ValueAttribute>().Any()\r\n                   select selector(pi);", prediction=103, span="14-19"];
m21_2 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="12-12"];
m21_4 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="ReflectionExtensions.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m21_24 [cluster="Unk.Aggregate", file="ReflectionExtensions.cs", label="Entry Unk.Aggregate", span=""];
m21_48 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", span="83-83"];
m21_49 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="type == null", prediction=104, span="85-85"];
m21_50 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="throw new ArgumentNullException(''type'');", prediction=105, span="85-85"];
m21_51 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="return Array.CreateInstance(type, 0);", prediction=106, span="87-87"];
m21_52 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", span="83-83"];
m21_20 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="42-42"];
m21_21 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", color=green, community=0, file="ReflectionExtensions.cs", label="return specProps.Where(predicate)\r\n                .Aggregate(\r\n                    instance,\r\n                    (current, specProp) =>\r\n                        specProp.Property.SetValue(current, selector(specProp)));", prediction=107, span="48-52"];
m21_22 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="42-42"];
m21_28 [cluster="Unk.SetValue", file="ReflectionExtensions.cs", label="Entry Unk.SetValue", span=""];
m21_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ReflectionExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m21_15 [cluster="CommandLine.Core.ReflectionExtensions.IsScalar(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.IsScalar(System.Type)", span="35-35"];
m21_16 [cluster="CommandLine.Core.ReflectionExtensions.IsScalar(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="type == null", prediction=108, span="37-37"];
m21_17 [cluster="CommandLine.Core.ReflectionExtensions.IsScalar(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="throw new ArgumentNullException(''type'');", prediction=109, span="37-37"];
m21_18 [cluster="CommandLine.Core.ReflectionExtensions.IsScalar(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="return type == typeof(string) || !type.IsArray && !typeof(IEnumerable).IsAssignableFrom(type);", prediction=110, span="39-39"];
m21_19 [cluster="CommandLine.Core.ReflectionExtensions.IsScalar(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.IsScalar(System.Type)", span="35-35"];
m21_54 [file="ReflectionExtensions.cs", label="System.Func<CommandLine.Core.SpecificationProperty, object>", span=""];
m22_9 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m22_0 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="9-9"];
m22_1 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", color=green, community=0, file="ReflectionHelper.cs", label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", prediction=111, span="12-12"];
m22_2 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", color=green, community=0, file="ReflectionHelper.cs", label="var attributes = assembly.GetCustomAttributes(typeof(TAttribute), false)", prediction=112, span="13-13"];
m22_3 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", color=green, community=0, file="ReflectionHelper.cs", label="return attributes.Length > 0\r\n                ? Maybe.Just((TAttribute)attributes[0])\r\n                : Maybe.Nothing<TAttribute>();", prediction=113, span="15-17"];
m22_4 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="9-9"];
m22_8 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m22_7 [cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0"];
m22_6 [cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0"];
m22_5 [cluster="System.Reflection.Assembly.GetEntryAssembly()", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetEntryAssembly()", span="0-0"];
m22_14 [cluster="System.Reflection.Assembly.GetName()", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetName()", span="0-0"];
m22_15 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", span="26-26"];
m22_16 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", color=green, community=0, file="ReflectionHelper.cs", label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", prediction=114, span="28-28"];
m22_17 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", color=green, community=0, file="ReflectionHelper.cs", label="return assembly.GetName().Version.ToStringInvariant();", prediction=115, span="29-29"];
m22_18 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", span="26-26"];
m22_19 [cluster="T.ToStringInvariant<T>()", file="ReflectionHelper.cs", label="Entry T.ToStringInvariant<T>()", span="14-14"];
m22_10 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="20-20"];
m22_11 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", color=green, community=0, file="ReflectionHelper.cs", label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", prediction=116, span="22-22"];
m22_12 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", color=green, community=0, file="ReflectionHelper.cs", label="return assembly.GetName().Name;", prediction=117, span="23-23"];
m22_13 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="20-20"];
m23_25 [cluster="Unk.Be", file="ReflectionHelperFixture.cs", label="Entry Unk.Be", span=""];
m23_39 [cluster="CommandLine.Infrastructure.ReflectionHelper.RetrieveMethod<TAttribute>(object)", file="ReflectionHelperFixture.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.RetrieveMethod<TAttribute>(object)", span="86-86"];
m23_41 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_attribute_list()", file="ReflectionHelperFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_attribute_list()", span="128-128"];
m23_48 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_attribute_list()", file="ReflectionHelperFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_attribute_list()", span="128-128"];
m23_10 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_by_attribute()", file="ReflectionHelperFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_by_attribute()", span="98-98"];
m23_21 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_by_attribute()", file="ReflectionHelperFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_by_attribute()", span="98-98"];
m23_24 [cluster="Unk.HaveCount", file="ReflectionHelperFixture.cs", label="Entry Unk.HaveCount", span=""];
m23_33 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_method_by_attribute()", file="ReflectionHelperFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_method_by_attribute()", span="118-118"];
m23_38 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_method_by_attribute()", file="ReflectionHelperFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_method_by_attribute()", span="118-118"];
m23_49 [cluster="CommandLine.Infrastructure.ReflectionHelper.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionHelperFixture.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.RetrievePropertyAttributeList<TAttribute>(object)", span="150-150"];
m23_57 [cluster="object.GetType()", file="ReflectionHelperFixture.cs", label="Entry object.GetType()", span="0-0"];
m23_0 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.MockObject.MockObject()", file="ReflectionHelperFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.MockObject.MockObject()", span="57-57"];
m23_2 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.MockObject.MockObject()", file="ReflectionHelperFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.MockObject.MockObject()", span="57-57"];
m23_5 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.AnotherMockObject.AnotherMockObject()", file="ReflectionHelperFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.AnotherMockObject.AnotherMockObject()", span="79-79"];
m23_9 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.AnotherMockObject.AnotherMockObject()", file="ReflectionHelperFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.AnotherMockObject.AnotherMockObject()", span="79-79"];
m23_50 [cluster="lambda expression", file="ReflectionHelperFixture.cs", label="Entry lambda expression", span="133-133"];
m23_27 [cluster="lambda expression", file="ReflectionHelperFixture.cs", label="Entry lambda expression", span="103-103"];
m23_30 [cluster="lambda expression", file="ReflectionHelperFixture.cs", label="Entry lambda expression", span="111-111"];
m23_29 [cluster="lambda expression", file="ReflectionHelperFixture.cs", label="Exit lambda expression", span="103-103"];
m23_32 [cluster="lambda expression", file="ReflectionHelperFixture.cs", label="Exit lambda expression", span="111-111"];
m23_52 [cluster="lambda expression", file="ReflectionHelperFixture.cs", label="Exit lambda expression", span="133-133"];
m23_22 [cluster="CommandLine.Infrastructure.ReflectionHelper.RetrievePropertyList<TAttribute>(object)", file="ReflectionHelperFixture.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.RetrievePropertyList<TAttribute>(object)", span="46-46"];
m23_26 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Infrastructure.Pair<System.Reflection.PropertyInfo, TAttribute>>)", file="ReflectionHelperFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Infrastructure.Pair<System.Reflection.PropertyInfo, TAttribute>>)", span="139-139"];
m23_56 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Infrastructure.Pair<System.Reflection.PropertyInfo, TAttribute>>)", file="ReflectionHelperFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Infrastructure.Pair<System.Reflection.PropertyInfo, TAttribute>>)", span="139-139"];
m23_58 [cluster="System.Console.WriteLine(string, object)", file="ReflectionHelperFixture.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m23_23 [cluster="Unk.Should", file="ReflectionHelperFixture.cs", label="Entry Unk.Should", span=""];
m23_40 [cluster="Unk.NotBeNull", file="ReflectionHelperFixture.cs", label="Entry Unk.NotBeNull", span=""];
m23_3 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.MockObject.DoNothing()", file="ReflectionHelperFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.MockObject.DoNothing()", span="72-72"];
m23_4 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.MockObject.DoNothing()", file="ReflectionHelperFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.MockObject.DoNothing()", span="72-72"];
m23_59 [file="ReflectionHelperFixture.cs", label="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.MockObject", span=""];
m23_60 [file="ReflectionHelperFixture.cs", label="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.AnotherMockObject", span=""];
m25_3 [cluster="CommandLine.Text.HelpText.AutoBuild(object)", file="SimpleOptionsForAutoBuid.cs", label="Entry CommandLine.Text.HelpText.AutoBuild(object)", span="264-264"];
m25_0 [cluster="CommandLine.Tests.Fakes.SimpleOptionsForAutoBuid.GetUsage()", file="SimpleOptionsForAutoBuid.cs", label="Entry CommandLine.Tests.Fakes.SimpleOptionsForAutoBuid.GetUsage()", span="12-12"];
m25_2 [cluster="CommandLine.Tests.Fakes.SimpleOptionsForAutoBuid.GetUsage()", file="SimpleOptionsForAutoBuid.cs", label="Exit CommandLine.Tests.Fakes.SimpleOptionsForAutoBuid.GetUsage()", span="12-12"];
m25_4 [file="SimpleOptionsForAutoBuid.cs", label="CommandLine.Tests.Fakes.SimpleOptionsForAutoBuid", span=""];
m26_0 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="SimpleOptionsWithBadOptionArray.cs", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", span="37-37"];
m26_2 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="SimpleOptionsWithBadOptionArray.cs", label="Exit CommandLine.Tests.Fakes.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", span="37-37"];
m26_3 [file="SimpleOptionsWithBadOptionArray.cs", label="CommandLine.Tests.Fakes.SimpleOptionsWithBadOptionArray", span=""];
m27_0 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="SimpleOptionsWithEnum.cs", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
m27_2 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="SimpleOptionsWithEnum.cs", label="Exit CommandLine.Tests.Fakes.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
m27_3 [file="SimpleOptionsWithEnum.cs", label="CommandLine.Tests.Fakes.SimpleOptionsWithEnum", span=""];
m30_13 [cluster="Unk.Be", file="SingletonFixture.cs", label="Entry Unk.Be", span=""];
m30_12 [cluster="Unk.BeTrue", file="SingletonFixture.cs", label="Entry Unk.BeTrue", span=""];
m30_14 [cluster="System.Console.WriteLine(object)", file="SingletonFixture.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m30_10 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="SingletonFixture.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="140-140"];
m30_20 [cluster="CommandLine.Tests.Fakes.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="SingletonFixture.cs", label="Entry CommandLine.Tests.Fakes.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="33-33"];
m30_9 [cluster="CommandLine.Tests.Fakes.SimpleOptions.SimpleOptions()", file="SingletonFixture.cs", label="Entry CommandLine.Tests.Fakes.SimpleOptions.SimpleOptions()", span="33-33"];
m30_15 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", file="SingletonFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", span="56-56"];
m30_19 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", file="SingletonFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", span="56-56"];
m30_0 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Parse_string_integer_bool_options()", file="SingletonFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.SingletonFixture.Parse_string_integer_bool_options()", span="42-42"];
m30_8 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Parse_string_integer_bool_options()", file="SingletonFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.SingletonFixture.Parse_string_integer_bool_options()", span="42-42"];
m30_21 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Default_parsing_culture_is_invariant()", file="SingletonFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.SingletonFixture.Default_parsing_culture_is_invariant()", span="66-66"];
m30_23 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Default_parsing_culture_is_invariant()", file="SingletonFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.SingletonFixture.Default_parsing_culture_is_invariant()", span="66-66"];
m30_11 [cluster="Unk.Should", file="SingletonFixture.cs", label="Entry Unk.Should", span=""];
m31_66 [cluster="Unk.SingleOrDefault", file="Specification.cs", label="Entry Unk.SingleOrDefault", span=""];
m31_28 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="Specification.cs", label="Entry CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="100-100"];
m31_77 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="Specification.cs", label="return new NotParsed<object>(TypeInfo.Create(typeof(NullInstance), types), errors);", span="102-102"];
m31_78 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="Specification.cs", label="Exit CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="100-100"];
m31_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
m31_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Specification.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="57-57"];
m31_45 [cluster="Unk.>", file="Specification.cs", label="Entry Unk.>", span=""];
m31_46 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="Specification.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="37-37"];
m31_49 [cluster="Unk.MakeNotParsed", file="Specification.cs", label="Entry Unk.MakeNotParsed", span=""];
m31_44 [cluster="Unk.Any", file="Specification.cs", label="Entry Unk.Any", span=""];
m31_18 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Specification.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="27-27"];
m31_31 [cluster="System.Func<T, TResult>.Invoke(T)", file="Specification.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m31_79 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="Specification.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m31_48 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="Specification.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="382-382"];
m31_68 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="Specification.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="408-408"];
m31_14 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Specification.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="18-18"];
m31_35 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="Specification.cs", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="457-457"];
m31_40 [cluster="System.StringComparer.Equals(string, string)", file="Specification.cs", label="Entry System.StringComparer.Equals(string, string)", span="0-0"];
m31_56 [cluster="Unk.Single", file="Specification.cs", label="Entry Unk.Single", span=""];
m31_67 [cluster="Unk.ToMaybe", file="Specification.cs", label="Entry Unk.ToMaybe", span=""];
m31_41 [cluster="string.Concat(string, string)", file="Specification.cs", label="Entry string.Concat(string, string)", span="0-0"];
m31_73 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="95-95"];
m31_4 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="22-27"];
m31_5 [cluster="lambda expression", color=green, community=0, file="Specification.cs", label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", prediction=118, span="24-24"];
m31_6 [cluster="lambda expression", color=green, community=0, file="Specification.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", prediction=119, span="25-25"];
m31_11 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="24-24"];
m31_12 [cluster="lambda expression", color=green, community=0, file="Specification.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer)", prediction=120, span="24-24"];
m31_13 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="24-24"];
m31_7 [cluster="lambda expression", color=green, community=0, file="Specification.cs", label="return explodedTokens;", prediction=121, span="26-26"];
m31_15 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="25-25"];
m31_16 [cluster="lambda expression", color=green, community=0, file="Specification.cs", label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", prediction=120, span="25-25"];
m31_17 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="25-25"];
m31_8 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="22-27"];
m31_38 [cluster="lambda expression", color=green, community=0, file="Specification.cs", label="nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", prediction=123, span="51-52"];
m31_37 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="50-52"];
m31_39 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="50-52"];
m31_50 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="73-73"];
m31_53 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="76-77"];
m31_61 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="83-83"];
m31_51 [cluster="lambda expression", color=green, community=0, file="Specification.cs", label="nameComparer.Equals(a.Item1.Name, arguments.First())", prediction=124, span="73-73"];
m31_52 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="73-73"];
m31_54 [cluster="lambda expression", color=green, community=0, file="Specification.cs", label="verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2.AutoDefault()", prediction=124, span="77-77"];
m31_55 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="76-77"];
m31_58 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="77-77"];
m31_59 [cluster="lambda expression", color=green, community=0, file="Specification.cs", label="nameComparer.Equals(v.Item1.Name, arguments.First())", prediction=124, span="77-77"];
m31_60 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="77-77"];
m31_62 [cluster="lambda expression", color=green, community=0, file="Specification.cs", label="v.Item2", prediction=127, span="83-83"];
m31_63 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="83-83"];
m31_71 [cluster="lambda expression", file="Specification.cs", label="nameComparer.Equals(v.Item1.Name, verb)", span="92-92"];
m31_70 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="92-92"];
m31_72 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="92-92"];
m31_74 [cluster="lambda expression", file="Specification.cs", label="new HelpVerbRequestedError(v.Item1.Name, v.Item2, true)", span="95-95"];
m31_75 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="95-95"];
m31_29 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m31_80 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="Specification.cs", label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m31_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m31_36 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="Specification.cs", label="Entry CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="65-65"];
m31_42 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", color=green, community=0, file="Specification.cs", label="return verbs.Any(a => nameComparer.Equals(a.Item1.Name, arguments.First()))\r\n                ? InstanceBuilder.Build(\r\n                    Maybe.Just<Func<object>>(\r\n                        () =>\r\n                            verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2.AutoDefault()),\r\n                    tokenizer,\r\n                    arguments.Skip(1),\r\n                    nameComparer,\r\n                    parsingCulture,\r\n                    nonFatalErrors)\r\n                : MakeNotParsed(verbs.Select(v => v.Item2), new BadVerbSelectedError(arguments.First()));", prediction=128, span="73-83"];
m31_43 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="Specification.cs", label="Exit CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="65-65"];
m31_34 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="Specification.cs", label="Entry CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="86-86"];
m31_64 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="Specification.cs", label="return verb.Length > 0\r\n                ? verbs.SingleOrDefault(v => nameComparer.Equals(v.Item1.Name, verb))\r\n                        .ToMaybe()\r\n                        .Return(\r\n                            v => new HelpVerbRequestedError(v.Item1.Name, v.Item2, true),\r\n                            new HelpVerbRequestedError(null, null, false))\r\n                : new HelpVerbRequestedError(null, null, false);", span="91-97"];
m31_65 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="Specification.cs", label="Exit CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="86-86"];
m31_47 [cluster="Unk.Select", file="Specification.cs", label="Entry Unk.Select", span=""];
m31_27 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="Specification.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="446-446"];
m31_69 [cluster="Unk.Return", file="Specification.cs", label="Entry Unk.Return", span=""];
m31_57 [cluster="Unk.AutoDefault", file="Specification.cs", label="Entry Unk.AutoDefault", span=""];
m31_3 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="Specification.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="35-35"];
m31_24 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", color=green, community=0, file="Specification.cs", label="return preprocCompare(''help'')\r\n                ? MakeNotParsed(types,\r\n                    MakeHelpVerbRequestedError(verbs,\r\n                        arguments.Skip(1).SingleOrDefault() ?? string.Empty, nameComparer))\r\n                : preprocCompare(''version'')\r\n                    ? MakeNotParsed(types, new VersionRequestedError())\r\n                    : MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture, nonFatalErrors);", prediction=123, span="56-62"];
m31_19 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", color=green, community=0, file="Specification.cs", label="arguments.Empty()", prediction=130, span="43-43"];
m31_20 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", color=green, community=0, file="Specification.cs", label="return MakeNotParsed(types, new NoVerbSelectedError());", prediction=123, span="45-45"];
m31_21 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", color=green, community=0, file="Specification.cs", label="var firstArg = arguments.First()", prediction=123, span="48-48"];
m31_22 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", color=green, community=0, file="Specification.cs", label="Func<string, bool> preprocCompare = command =>\r\n                    nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", prediction=123, span="50-52"];
m31_23 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", color=green, community=0, file="Specification.cs", label="var verbs = Verb.SelectFromTypes(types)", prediction=134, span="54-54"];
m31_25 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="Specification.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="35-35"];
m31_0 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="Specification.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14"];
m31_1 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", color=green, community=0, file="Specification.cs", label="return Choose(\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                types,\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture,\r\n                nonFatalErrors);", prediction=135, span="21-32"];
m31_2 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="Specification.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14"];
m31_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Specification.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", span="13-13"];
m31_30 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="Specification.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m31_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m31_76 [cluster="HelpVerbRequestedError.cstr", file="Specification.cs", label="Entry HelpVerbRequestedError.cstr", span=""];
m31_81 [file="Specification.cs", label="System.StringComparer", span=""];
m31_82 [file="Specification.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m31_83 [file="Specification.cs", label="System.StringComparer", span=""];
m31_84 [file="Specification.cs", label=firstArg, span=""];
m31_85 [file="Specification.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m31_86 [file="Specification.cs", label="System.StringComparer", span=""];
m31_87 [file="Specification.cs", label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span=""];
m31_88 [file="Specification.cs", label=string, span=""];
m31_89 [file="Specification.cs", label="System.StringComparer", span=""];
m32_14 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationProperty.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m32_0 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationProperty.cs", label="Entry CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="14-14"];
m32_1 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationProperty.cs", label="this.property = property", prediction=136, span="16-16"];
m32_2 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationProperty.cs", label="this.specification = specification", prediction=137, span="17-17"];
m32_3 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationProperty.cs", label="this.value = value", prediction=138, span="18-18"];
m32_4 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationProperty.cs", label="Exit CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="14-14"];
m32_5 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationProperty.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21"];
m32_6 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationProperty.cs", label="specification == null", prediction=139, span="23-23"];
m32_7 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationProperty.cs", label="throw new ArgumentNullException(''specification'');", prediction=140, span="23-23"];
m32_8 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationProperty.cs", label="property == null", prediction=141, span="24-24"];
m32_9 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationProperty.cs", label="throw new ArgumentNullException(''property'');", prediction=142, span="24-24"];
m32_10 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationProperty.cs", label="value == null", prediction=141, span="25-25"];
m32_11 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationProperty.cs", label="throw new ArgumentNullException(''value'');", prediction=144, span="25-25"];
m32_12 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationProperty.cs", label="return new SpecificationProperty(specification, property, value);", prediction=141, span="27-27"];
m32_13 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationProperty.cs", label="Exit CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21"];
m32_15 [file="SpecificationProperty.cs", label="CommandLine.Core.SpecificationProperty", span=""];
m33_30 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", span="44-44"];
m33_31 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="specProps == null", prediction=146, span="49-49"];
m33_32 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="throw new ArgumentNullException(''specProps'');", prediction=147, span="49-49"];
m33_33 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="return rules.SelectMany(rule => rule(specProps));", prediction=148, span="51-51"];
m33_34 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", span="44-44"];
m33_0 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", span="11-11"];
m33_1 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="specProp == null", prediction=149, span="13-13"];
m33_2 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="throw new ArgumentNullException(''specProp'');", prediction=150, span="13-13"];
m33_3 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="newSpecification == null", prediction=151, span="14-14"];
m33_4 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="throw new ArgumentNullException(''newSpecification'');", prediction=152, span="14-14"];
m33_5 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="return SpecificationProperty.Create(newSpecification, specProp.Property, specProp.Value);", prediction=151, span="16-16"];
m33_6 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", span="11-11"];
m33_16 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", span="27-27"];
m33_17 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="specProp == null", prediction=154, span="29-29"];
m33_18 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="throw new ArgumentNullException(''specProp'');", prediction=155, span="29-29"];
m33_19 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="specProp.Specification.ConversionType.ToDescriptor()", prediction=156, span="31-31"];
m33_20 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="DescriptorType.Sequence", prediction=157, span="33-33"];
m33_22 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="return specProp.Property.PropertyType;", prediction=156, span="40-40"];
m33_21 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="return specProp.Property.PropertyType.GetGenericArguments()\r\n                             .SingleOrDefault()\r\n                             .ToMaybe()\r\n                             .FromJust(\r\n                                 new InvalidOperationException(''Sequence properties should be of type IEnumerable<T>.''));", prediction=156, span="34-38"];
m33_23 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", span="27-27"];
m33_29 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="137-137"];
m33_8 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21"];
m33_9 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", span="19-19"];
m33_10 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="specProp == null", prediction=160, span="21-21"];
m33_11 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="throw new ArgumentNullException(''specProp'');", prediction=161, span="21-21"];
m33_12 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="newValue == null", prediction=162, span="22-22"];
m33_13 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="throw new ArgumentNullException(''newValue'');", prediction=163, span="22-22"];
m33_14 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="return SpecificationProperty.Create(specProp.Specification, specProp.Property, newValue);", prediction=162, span="24-24"];
m33_15 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", span="19-19"];
m33_25 [cluster="System.Type.GetGenericArguments()", file="SpecificationPropertyExtensions.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m33_27 [cluster="T.ToMaybe<T>()", file="SpecificationPropertyExtensions.cs", label="Entry T.ToMaybe<T>()", span="82-82"];
m33_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="SpecificationPropertyExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m33_36 [cluster="lambda expression", file="SpecificationPropertyExtensions.cs", label="Entry lambda expression", span="51-51"];
m33_37 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="rule(specProps)", prediction=148, span="51-51"];
m33_38 [cluster="lambda expression", file="SpecificationPropertyExtensions.cs", label="Exit lambda expression", span="51-51"];
m33_24 [cluster="System.Type.ToDescriptor()", file="SpecificationPropertyExtensions.cs", label="Entry System.Type.ToDescriptor()", span="22-22"];
m33_7 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationPropertyExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m33_28 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SpecificationPropertyExtensions.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m33_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="SpecificationPropertyExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m33_39 [cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationPropertyExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m33_40 [file="SpecificationPropertyExtensions.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", span=""];
m34_0 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="18-18"];
m34_1 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", color=green, community=0, file="SpecificationPropertyRules.cs", label="return specProps =>\r\n                {\r\n                    var options = specProps.Where(sp => sp.Specification.IsOption() && sp.Value.IsJust());\r\n                    var groups = options.GroupBy(g => ((OptionSpecification)g.Specification).SetName);\r\n                    if (groups.Count() > 1)\r\n                    {\r\n                        return options.Select(s => Maybe.Just<Error>(new MutuallyExclusiveSetError(NameInfo.FromOptionSpecification((OptionSpecification)s.Specification))));\r\n                    }\r\n                    return Enumerable.Empty<Nothing<Error>>();\r\n                };", prediction=166, span="20-29"];
m34_2 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="18-18"];
m34_19 [cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="152-152"];
m34_48 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="46-46"];
m34_49 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", color=green, community=0, file="SpecificationPropertyRules.cs", label="return specProps =>\r\n                {\r\n                    var options = specProps.Where(\r\n                        sp => sp.Specification.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min);\r\n                    if (options.Any())\r\n                    {\r\n                        return options.Select(s => Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification))));\r\n                    }\r\n                    return Enumerable.Empty<Nothing<Error>>();\r\n                };", prediction=167, span="48-60"];
m34_50 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="46-46"];
m34_46 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283"];
m34_38 [cluster="Unk.Any", file="SpecificationPropertyRules.cs", label="Entry Unk.Any", span=""];
m34_10 [cluster="Unk.Where", file="SpecificationPropertyRules.cs", label="Entry Unk.Where", span=""];
m34_14 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="SpecificationPropertyRules.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m34_47 [cluster="Unk.FromSpecification", file="SpecificationPropertyRules.cs", label="Entry Unk.FromSpecification", span=""];
m34_61 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="137-137"];
m34_42 [cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="147-147"];
m34_65 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m34_62 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="56-57"];
m34_4 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="var options = specProps.Where(sp => sp.Specification.IsOption() && sp.Value.IsJust())", prediction=168, span="22-22"];
m34_3 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="20-29"];
m34_5 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="var groups = options.GroupBy(g => ((OptionSpecification)g.Specification).SetName)", prediction=169, span="23-23"];
m34_15 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="22-22"];
m34_7 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="return options.Select(s => Maybe.Just<Error>(new MutuallyExclusiveSetError(NameInfo.FromOptionSpecification((OptionSpecification)s.Specification))));", prediction=168, span="26-26"];
m34_6 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="groups.Count() > 1", prediction=171, span="24-24"];
m34_20 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="23-23"];
m34_9 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="20-29"];
m34_23 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="26-26"];
m34_8 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="return Enumerable.Empty<Nothing<Error>>();", prediction=172, span="28-28"];
m34_16 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="sp.Specification.IsOption() && sp.Value.IsJust()", prediction=173, span="22-22"];
m34_17 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="22-22"];
m34_21 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="((OptionSpecification)g.Specification).SetName", prediction=174, span="23-23"];
m34_22 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="23-23"];
m34_24 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="Maybe.Just<Error>(new MutuallyExclusiveSetError(NameInfo.FromOptionSpecification((OptionSpecification)s.Specification)))", prediction=175, span="26-26"];
m34_25 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="26-26"];
m34_33 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="var options = specProps.Where(sp => sp.Value.IsNothing() && sp.Specification.Required)", prediction=176, span="36-36"];
m34_32 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="34-43"];
m34_34 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="options.Any()", prediction=177, span="37-37"];
m34_39 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="36-36"];
m34_35 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="return options.Select(s => Maybe.Just<Error>(new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification))));", prediction=176, span="39-40"];
m34_36 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="return Enumerable.Empty<Nothing<Error>>();", prediction=179, span="42-42"];
m34_37 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="34-43"];
m34_43 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="39-40"];
m34_40 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="sp.Value.IsNothing() && sp.Specification.Required", prediction=180, span="36-36"];
m34_41 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="36-36"];
m34_44 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="Maybe.Just<Error>(new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification)))", prediction=181, span="39-40"];
m34_45 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="39-40"];
m34_52 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="var options = specProps.Where(\r\n                        sp => sp.Specification.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min)", prediction=182, span="50-53"];
m34_51 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="48-60"];
m34_53 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="options.Any()", prediction=183, span="54-54"];
m34_57 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="51-53"];
m34_54 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="return options.Select(s => Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification))));", prediction=182, span="56-57"];
m34_55 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="return Enumerable.Empty<Nothing<Error>>();", prediction=185, span="59-59"];
m34_56 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="48-60"];
m34_58 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="sp.Specification.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min", prediction=186, span="51-53"];
m34_59 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="51-53"];
m34_63 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification)))", prediction=187, span="56-57"];
m34_64 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="56-57"];
m34_29 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="32-32"];
m34_30 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", color=green, community=0, file="SpecificationPropertyRules.cs", label="return specProps =>\r\n                {\r\n                    var options = specProps.Where(sp => sp.Value.IsNothing() && sp.Specification.Required);\r\n                    if (options.Any())\r\n                    {\r\n                        return options.Select(s => Maybe.Just<Error>(new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification))));\r\n                    }\r\n                    return Enumerable.Empty<Nothing<Error>>();\r\n                };", prediction=188, span="34-43"];
m34_31 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="32-32"];
m34_28 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m34_13 [cluster="Unk.Select", file="SpecificationPropertyRules.cs", label="Entry Unk.Select", span=""];
m34_60 [cluster="System.Type.ToDescriptor()", file="SpecificationPropertyRules.cs", label="Entry System.Type.ToDescriptor()", span="22-22"];
m34_26 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294"];
m34_18 [cluster="CommandLine.Core.Specification.IsOption()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
m34_27 [cluster="CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", span="60-60"];
m34_11 [cluster="Unk.GroupBy", file="SpecificationPropertyRules.cs", label="Entry Unk.GroupBy", span=""];
m34_12 [cluster="Unk.Count", file="SpecificationPropertyRules.cs", label="Entry Unk.Count", span=""];
m35_18 [cluster="CommandLine.Core.StatePair<T>.GetHashCode()", file="StatePair.cs", label="Entry CommandLine.Core.StatePair<T>.GetHashCode()", span="43-43"];
m35_19 [cluster="CommandLine.Core.StatePair<T>.GetHashCode()", color=green, community=0, file="StatePair.cs", label="return this.Value.GetHashCode() ^ this.Errors.GetHashCode();", prediction=189, span="45-45"];
m35_20 [cluster="CommandLine.Core.StatePair<T>.GetHashCode()", file="StatePair.cs", label="Exit CommandLine.Core.StatePair<T>.GetHashCode()", span="43-43"];
m35_17 [cluster="object.Equals(object)", file="StatePair.cs", label="Entry object.Equals(object)", span="0-0"];
m35_10 [cluster="CommandLine.Core.StatePair<T>.Equals(object)", file="StatePair.cs", label="Entry CommandLine.Core.StatePair<T>.Equals(object)", span="32-32"];
m35_11 [cluster="CommandLine.Core.StatePair<T>.Equals(object)", color=green, community=0, file="StatePair.cs", label="var other = obj as StatePair<T>", prediction=189, span="34-34"];
m35_12 [cluster="CommandLine.Core.StatePair<T>.Equals(object)", color=green, community=0, file="StatePair.cs", label="other != null", prediction=191, span="35-35"];
m35_13 [cluster="CommandLine.Core.StatePair<T>.Equals(object)", color=green, community=0, file="StatePair.cs", label="return this.Equals(other);", prediction=189, span="37-37"];
m35_14 [cluster="CommandLine.Core.StatePair<T>.Equals(object)", color=green, community=0, file="StatePair.cs", label="return base.Equals(obj);", prediction=189, span="40-40"];
m35_15 [cluster="CommandLine.Core.StatePair<T>.Equals(object)", file="StatePair.cs", label="Exit CommandLine.Core.StatePair<T>.Equals(object)", span="32-32"];
m35_0 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs", label="Entry CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="13-13"];
m35_1 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", color=green, community=0, file="StatePair.cs", label="object.Equals(value, default(T))", prediction=194, span="15-15"];
m35_2 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", color=green, community=0, file="StatePair.cs", label="throw new ArgumentNullException(''value'');", prediction=195, span="15-15"];
m35_3 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", color=green, community=0, file="StatePair.cs", label="errors == null", prediction=196, span="16-16"];
m35_4 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", color=green, community=0, file="StatePair.cs", label="throw new ArgumentNullException(''errors'');", prediction=197, span="16-16"];
m35_5 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", color=green, community=0, file="StatePair.cs", label="this.value = value", prediction=198, span="18-18"];
m35_6 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", color=green, community=0, file="StatePair.cs", label="this.errors = errors", prediction=199, span="19-19"];
m35_7 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs", label="Exit CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="13-13"];
m35_26 [cluster="Unk.SequenceEqual", file="StatePair.cs", label="Entry Unk.SequenceEqual", span=""];
m35_8 [cluster="object.Equals(object, object)", file="StatePair.cs", label="Entry object.Equals(object, object)", span="0-0"];
m35_16 [cluster="CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", file="StatePair.cs", label="Entry CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", span="48-48"];
m35_22 [cluster="CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", color=green, community=0, file="StatePair.cs", label="other == null", prediction=200, span="50-50"];
m35_23 [cluster="CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", color=green, community=0, file="StatePair.cs", label="return false;", prediction=201, span="52-52"];
m35_24 [cluster="CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", color=green, community=0, file="StatePair.cs", label="return this.Value.Equals(other.Value) && this.Errors.SequenceEqual(other.Errors);", prediction=189, span="55-55"];
m35_25 [cluster="CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", file="StatePair.cs", label="Exit CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", span="48-48"];
m35_9 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StatePair.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m35_21 [cluster="object.GetHashCode()", file="StatePair.cs", label="Entry object.GetHashCode()", span="0-0"];
m35_27 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs", label="Entry CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="61-61"];
m35_28 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", color=green, community=0, file="StatePair.cs", label="object.Equals(instance, default(T))", prediction=203, span="63-63"];
m35_29 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", color=green, community=0, file="StatePair.cs", label="throw new ArgumentNullException(''instance'');", prediction=204, span="63-63"];
m35_30 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", color=green, community=0, file="StatePair.cs", label="errors == null", prediction=205, span="64-64"];
m35_31 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", color=green, community=0, file="StatePair.cs", label="throw new ArgumentNullException(''errors'');", prediction=206, span="64-64"];
m35_32 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", color=green, community=0, file="StatePair.cs", label="return new StatePair<T>(instance, errors);", prediction=205, span="66-66"];
m35_33 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs", label="Exit CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="61-61"];
m35_34 [file="StatePair.cs", label="CommandLine.Core.StatePair<T>", span=""];
m36_21 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="TypeLookup.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m36_23 [cluster="Unk.Create", file="TypeLookup.cs", label="Entry Unk.Create", span=""];
m36_10 [cluster="Unk.SingleOrDefault", file="TypeLookup.cs", label="Entry Unk.SingleOrDefault", span=""];
m36_16 [cluster="string.MatchName(string, string, System.StringComparer)", file="TypeLookup.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m36_12 [cluster="Unk.Map", file="TypeLookup.cs", label="Entry Unk.Map", span=""];
m36_11 [cluster="Unk.ToMaybe", file="TypeLookup.cs", label="Entry Unk.ToMaybe", span=""];
m36_0 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs", label="Entry CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m36_1 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", color=green, community=0, file="TypeLookup.cs", label="name == null", prediction=208, span="16-16"];
m36_2 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", color=green, community=0, file="TypeLookup.cs", label="throw new ArgumentNullException(''name'');", prediction=209, span="16-16"];
m36_3 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", color=green, community=0, file="TypeLookup.cs", label="specifications == null", prediction=210, span="17-17"];
m36_4 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", color=green, community=0, file="TypeLookup.cs", label="throw new ArgumentNullException(''specifications'');", prediction=211, span="17-17"];
m36_5 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", color=green, community=0, file="TypeLookup.cs", label="comparer == null", prediction=210, span="18-18"];
m36_6 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", color=green, community=0, file="TypeLookup.cs", label="throw new ArgumentNullException(''comparer'');", prediction=213, span="18-18"];
m36_7 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", color=green, community=0, file="TypeLookup.cs", label="return specifications.SingleOrDefault(a => name.MatchName(a.ShortName, a.LongName, comparer))\r\n                .ToMaybe()\r\n                    .Map(\r\n                        s => Tuple.Create(\r\n                            s.ConversionType.ToDescriptor(), (s.Min < 0 && s.Max < 0) ? Maybe.Nothing<int>() : Maybe.Just(s.Max)));", prediction=210, span="20-24"];
m36_8 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs", label="Exit CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m36_22 [cluster="Unk.Just", file="TypeLookup.cs", label="Entry Unk.Just", span=""];
m36_20 [cluster="Unk.ToDescriptor", file="TypeLookup.cs", label="Entry Unk.ToDescriptor", span=""];
m36_17 [cluster="lambda expression", file="TypeLookup.cs", label="Entry lambda expression", span="23-24"];
m36_13 [cluster="lambda expression", file="TypeLookup.cs", label="Entry lambda expression", span="20-20"];
m36_14 [cluster="lambda expression", color=green, community=0, file="TypeLookup.cs", label="name.MatchName(a.ShortName, a.LongName, comparer)", prediction=210, span="20-20"];
m36_15 [cluster="lambda expression", file="TypeLookup.cs", label="Exit lambda expression", span="20-20"];
m36_18 [cluster="lambda expression", color=green, community=0, file="TypeLookup.cs", label="Tuple.Create(\r\n                            s.ConversionType.ToDescriptor(), (s.Min < 0 && s.Max < 0) ? Maybe.Nothing<int>() : Maybe.Just(s.Max))", prediction=216, span="23-24"];
m36_19 [cluster="lambda expression", file="TypeLookup.cs", label="Exit lambda expression", span="23-24"];
m36_9 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="TypeLookup.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m36_24 [file="TypeLookup.cs", label=string, span=""];
m36_25 [file="TypeLookup.cs", label="System.StringComparer", span=""];
m37_19 [cluster="Unk.Be", file="UnknownArgumentsFixture.cs", label="Entry Unk.Be", span=""];
m37_0 [cluster="CommandLine.Tests.Unit.Parser.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", span="41-41"];
m37_12 [cluster="CommandLine.Tests.Unit.Parser.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", file="UnknownArgumentsFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", span="41-41"];
m37_18 [cluster="Unk.BeTrue", file="UnknownArgumentsFixture.cs", label="Entry Unk.BeTrue", span=""];
m37_15 [cluster="CommandLine.ParserSettings.ParserSettings()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="49-49"];
m37_20 [cluster="CommandLine.Tests.Fakes.OptionsOfPlugInX.OptionsOfPlugInX()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.Fakes.OptionsOfPlugInX.OptionsOfPlugInX()", span="41-41"];
m37_16 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="140-140"];
m37_14 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="66-66"];
m37_17 [cluster="Unk.Should", file="UnknownArgumentsFixture.cs", label="Entry Unk.Should", span=""];
m37_13 [cluster="CommandLine.Tests.Fakes.OptionsForAppWithPlugIns.OptionsForAppWithPlugIns()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.Fakes.OptionsForAppWithPlugIns.OptionsForAppWithPlugIns()", span="35-35"];
m38_0 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="Entry CommandLine.ValueAttribute.ValueAttribute(int)", span="20-20"];
m38_1 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", color=green, community=0, file="ValueAttribute.cs", label="this.index = index", prediction=217, span="22-22"];
m38_2 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", color=green, community=0, file="ValueAttribute.cs", label="this.min = -1", prediction=218, span="23-23"];
m38_3 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", color=green, community=0, file="ValueAttribute.cs", label="this.max = -1", prediction=219, span="24-24"];
m38_4 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="Exit CommandLine.ValueAttribute.ValueAttribute(int)", span="20-20"];
m38_5 [file="ValueAttribute.cs", label="CommandLine.ValueAttribute", span=""];
m7_19 -> m7_22  [color=green, key=1, label=expectedErrors, style=dashed];
m7_20 -> m7_22  [color=green, key=1, label=result, style=dashed];
m7_31 -> m7_34  [color=green, key=1, label=expected, style=dashed];
m7_32 -> m7_34  [color=green, key=1, label=result, style=dashed];
m7_1 -> m7_4  [color=green, key=1, label=expectedErrors, style=dashed];
m7_2 -> m7_4  [color=green, key=1, label=result, style=dashed];
m7_12 -> m7_15  [color=green, key=1, label=expectedErrors, style=dashed];
m7_13 -> m7_15  [color=green, key=1, label=result, style=dashed];
m7_25 -> m7_28  [color=green, key=1, label=expectedErrors, style=dashed];
m7_26 -> m7_28  [color=green, key=1, label=result, style=dashed];
m8_0 -> m8_3  [color=green, key=1, label=string, style=dashed];
m8_24 -> m8_32  [color=green, key=1, label="CommandLine.NameInfo", style=dashed];
m8_12 -> m8_15  [color=green, key=1, label="CommandLine.Core.Specification", style=dashed];
m8_18 -> m8_22  [color=green, key=1, label=object, style=dashed];
m8_19 -> m8_21  [color=green, key=1, label=other, style=dashed];
m8_35 -> m8_22  [color=green, key=1, label="CommandLine.NameInfo", style=dashed];
m8_35 -> m8_21  [color=green, key=1, label="CommandLine.NameInfo", style=dashed];
m8_35 -> m8_27  [color=green, key=1, label="CommandLine.NameInfo", style=dashed];
m8_35 -> m8_32  [color=green, key=1, label="CommandLine.NameInfo", style=dashed];
m9_0 -> m9_3  [color=green, key=1, label=string, style=dashed];
m9_0 -> m9_8  [color=green, key=1, label=string, style=dashed];
m9_3 -> m9_7  [color=green, key=1, label="lambda expression", style=dashed];
m9_11 -> m9_8  [color=green, key=1, label=string, style=dashed];
m9_12 -> m9_8  [color=green, key=1, label="System.StringComparer", style=dashed];
m15_38 -> m15_55  [color=darkseagreen4, key=1, label="ref CommandLine.Parsing.OptionMap", style=dashed];
m18_29 -> m18_36  [color=green, key=1, label="string[]", style=dashed];
m18_29 -> m18_38  [color=green, key=1, label="System.Func<T>", style=dashed];
m18_29 -> m18_42  [color=green, key=1, label="System.Func<T>", style=dashed];
m18_38 -> m18_41  [color=green, key=1, label="lambda expression", style=dashed];
m18_8 -> m18_12  [color=green, key=1, label="System.Action<CommandLine.ParserSettings>", style=dashed];
m18_45 -> m18_48  [color=green, key=1, label="params System.Type[]", style=dashed];
m18_45 -> m18_50  [color=green, key=1, label="params System.Type[]", style=dashed];
m18_45 -> m18_52  [color=green, key=1, label="string[]", style=dashed];
m18_45 -> m18_56  [color=green, key=1, label="string[]", style=dashed];
m18_52 -> m18_55  [color=green, key=1, label="lambda expression", style=dashed];
m18_68 -> m18_80  [color=green, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m18_68 -> m18_87  [color=green, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m18_68 -> m18_81  [color=green, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m18_80 -> m18_86  [color=green, key=1, label="lambda expression", style=dashed];
m18_73 -> m18_76  [color=green, key=1, label="lambda expression", style=dashed];
m18_69 -> m18_72  [color=green, key=1, label="lambda expression", style=dashed];
m18_24 -> m18_27  [color=green, key=1, label="string[]", style=dashed];
m18_27 -> m18_30  [color=green, key=1, label="lambda expression", style=dashed];
m18_23 -> m18_93  [color=green, key=1, label=bool, style=dashed];
m18_99 -> m18_12  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_21  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_27  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_38  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_42  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_52  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_56  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_60  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_61  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_91  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_94  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_95  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_100 -> m18_42  [color=green, key=1, label="System.Func<T>", style=dashed];
m18_101 -> m18_42  [color=green, key=1, label="string[]", style=dashed];
m18_102 -> m18_56  [color=green, key=1, label="string[]", style=dashed];
m18_103 -> m18_56  [color=green, key=1, label="params System.Type[]", style=dashed];
m18_104 -> m18_87  [color=green, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m21_8 -> m21_11  [color=green, key=1, label="System.Type", style=dashed];
m21_29 -> m21_31  [color=green, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m21_29 -> m21_40  [color=green, key=1, label=T, style=dashed];
m21_30 -> m21_45  [color=green, key=1, label="System.Exception", style=dashed];
m21_30 -> m21_33  [color=green, key=1, label=fail, style=dashed];
m21_30 -> m21_35  [color=green, key=1, label=fail, style=dashed];
m21_30 -> m21_37  [color=green, key=1, label=fail, style=dashed];
m21_30 -> m21_39  [color=green, key=1, label=fail, style=dashed];
m21_48 -> m21_51  [color=green, key=1, label="System.Type", style=dashed];
m21_20 -> m21_26  [color=green, key=1, label="System.Func<CommandLine.Core.SpecificationProperty, object>", style=dashed];
m21_21 -> m21_25  [color=green, key=1, label="lambda expression", style=dashed];
m21_15 -> m21_18  [color=green, key=1, label="System.Type", style=dashed];
m21_54 -> m21_26  [color=green, key=1, label="System.Func<CommandLine.Core.SpecificationProperty, object>", style=dashed];
m31_4 -> m31_12  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m31_4 -> m31_16  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m31_5 -> m31_11  [color=green, key=1, label="lambda expression", style=dashed];
m31_6 -> m31_15  [color=green, key=1, label="lambda expression", style=dashed];
m31_54 -> m31_58  [color=green, key=1, label="lambda expression", style=dashed];
m31_36 -> m31_51  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m31_36 -> m31_54  [color=green, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m31_36 -> m31_59  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m31_42 -> m31_50  [color=green, key=1, label="lambda expression", style=dashed];
m31_42 -> m31_53  [color=green, key=1, label="lambda expression", style=dashed];
m31_42 -> m31_61  [color=green, key=1, label="lambda expression", style=dashed];
m31_34 -> m31_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_64 -> m31_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_64 -> m31_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_3 -> m31_20  [color=green, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m31_3 -> m31_38  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_3 -> m31_24  [color=green, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", style=dashed];
m31_21 -> m31_38  [color=green, key=1, label=firstArg, style=dashed];
m31_22 -> m31_38  [color=green, key=1, label=string, style=dashed];
m31_22 -> m31_24  [color=green, key=1, label=preprocCompare, style=dashed];
m31_0 -> m31_12  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_0 -> m31_16  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_1 -> m31_4  [color=green, key=1, label="lambda expression", style=dashed];
m31_81 -> m31_12  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_81 -> m31_16  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_82 -> m31_12  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m31_82 -> m31_16  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m31_83 -> m31_38  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_84 -> m31_38  [color=green, key=1, label=firstArg, style=dashed];
m31_85 -> m31_51  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m31_85 -> m31_54  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m31_85 -> m31_59  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m31_86 -> m31_51  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_86 -> m31_54  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_86 -> m31_59  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_87 -> m31_54  [color=green, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m31_88 -> m31_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_89 -> m31_71  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m32_5 -> m32_8  [color=green, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m32_5 -> m32_10  [color=green, key=1, label="CommandLine.Infrastructure.Maybe<object>", style=dashed];
m32_5 -> m32_12  [color=green, key=1, label="CommandLine.Core.Specification", style=dashed];
m33_30 -> m33_33  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m33_30 -> m33_37  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m33_33 -> m33_36  [color=green, key=1, label="lambda expression", style=dashed];
m33_0 -> m33_3  [color=green, key=1, label="CommandLine.Core.Specification", style=dashed];
m33_0 -> m33_5  [color=green, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m33_16 -> m33_19  [color=green, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m33_16 -> m33_21  [color=green, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m33_16 -> m33_22  [color=green, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m33_9 -> m33_12  [color=green, key=1, label="CommandLine.Infrastructure.Maybe<object>", style=dashed];
m33_9 -> m33_14  [color=green, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m33_40 -> m33_37  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m34_4 -> m34_15  [color=green, key=1, label="lambda expression", style=dashed];
m34_4 -> m34_7  [color=green, key=1, label=options, style=dashed];
m34_5 -> m34_20  [color=green, key=1, label="lambda expression", style=dashed];
m34_7 -> m34_23  [color=green, key=1, label="lambda expression", style=dashed];
m34_33 -> m34_39  [color=green, key=1, label="lambda expression", style=dashed];
m34_33 -> m34_35  [color=green, key=1, label=options, style=dashed];
m34_35 -> m34_43  [color=green, key=1, label="lambda expression", style=dashed];
m34_52 -> m34_57  [color=green, key=1, label="lambda expression", style=dashed];
m34_52 -> m34_54  [color=green, key=1, label=options, style=dashed];
m34_54 -> m34_62  [color=green, key=1, label="lambda expression", style=dashed];
m35_10 -> m35_14  [color=green, key=1, label=object, style=dashed];
m35_11 -> m35_13  [color=green, key=1, label=other, style=dashed];
m35_0 -> m35_3  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Error>", style=dashed];
m35_16 -> m35_24  [color=green, key=1, label="CommandLine.Core.StatePair<T>", style=dashed];
m35_27 -> m35_30  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Error>", style=dashed];
m35_27 -> m35_32  [color=green, key=1, label=T, style=dashed];
m35_34 -> m35_14  [color=green, key=1, label="CommandLine.Core.StatePair<T>", style=dashed];
m35_34 -> m35_13  [color=green, key=1, label="CommandLine.Core.StatePair<T>", style=dashed];
m35_34 -> m35_19  [color=green, key=1, label="CommandLine.Core.StatePair<T>", style=dashed];
m35_34 -> m35_24  [color=green, key=1, label="CommandLine.Core.StatePair<T>", style=dashed];
m36_0 -> m36_3  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m36_0 -> m36_5  [color=green, key=1, label="System.StringComparer", style=dashed];
m36_0 -> m36_7  [color=green, key=1, label=string, style=dashed];
m36_0 -> m36_14  [color=green, key=1, label=string, style=dashed];
m36_7 -> m36_13  [color=green, key=1, label="lambda expression", style=dashed];
m36_7 -> m36_17  [color=green, key=1, label="lambda expression", style=dashed];
m36_24 -> m36_14  [color=green, key=1, label=string, style=dashed];
m36_25 -> m36_14  [color=green, key=1, label="System.StringComparer", style=dashed];
}
