digraph  {
n0 [cluster="CommandLine.IParser.ParseArguments(string[], object)", label="Entry CommandLine.IParser.ParseArguments(string[], object)", span="49-49"];
n1 [cluster="CommandLine.IParser.ParseArguments(string[], object)", label="Exit CommandLine.IParser.ParseArguments(string[], object)", span="49-49"];
n2 [cluster="CommandLine.IParser.ParseArguments(string[], object, System.Action<string, object>)", label="Entry CommandLine.IParser.ParseArguments(string[], object, System.Action<string, object>)", span="64-64"];
n3 [cluster="CommandLine.IParser.ParseArguments(string[], object, System.Action<string, object>)", label="Exit CommandLine.IParser.ParseArguments(string[], object, System.Action<string, object>)", span="64-64"];
n4 [cluster="CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action)", label="Entry CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action)", span="78-78"];
n5 [cluster="CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action)", label="Exit CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action)", span="78-78"];
n6 [cluster="CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", label="Entry CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", span="95-95"];
n7 [cluster="CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", label="Exit CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", span="95-95"];
m1_100 [cluster="CommandLine.Infrastructure.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="OptionMap.cs", label="Entry CommandLine.Infrastructure.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="289-289"];
m1_103 [cluster="CommandLine.Infrastructure.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="OptionMap.cs", label="++count", span="291-291"];
m1_104 [cluster="CommandLine.Infrastructure.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="OptionMap.cs", label="Exit CommandLine.Infrastructure.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="289-289"];
m1_0 [cluster="CommandLine.Infrastructure.OptionMap.OptionMap(int, CommandLine.IParserSettings)", file="OptionMap.cs", label="Entry CommandLine.Infrastructure.OptionMap.OptionMap(int, CommandLine.IParserSettings)", span="47-47"];
m1_1 [cluster="CommandLine.Infrastructure.OptionMap.OptionMap(int, CommandLine.IParserSettings)", file="OptionMap.cs", label="_settings = settings", span="49-49"];
m1_3 [cluster="CommandLine.Infrastructure.OptionMap.OptionMap(int, CommandLine.IParserSettings)", file="OptionMap.cs", label="_names = new Dictionary<string, string>(capacity, comparer)", span="53-53"];
m1_4 [cluster="CommandLine.Infrastructure.OptionMap.OptionMap(int, CommandLine.IParserSettings)", file="OptionMap.cs", label="_map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="54-54"];
m1_6 [cluster="CommandLine.Infrastructure.OptionMap.OptionMap(int, CommandLine.IParserSettings)", file="OptionMap.cs", label="_mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="58-58"];
m1_2 [cluster="CommandLine.Infrastructure.OptionMap.OptionMap(int, CommandLine.IParserSettings)", file="OptionMap.cs", label="IEqualityComparer<string> comparer =\r\n                _settings.CaseSensitive ? StringComparer.Ordinal : StringComparer.OrdinalIgnoreCase", span="51-52"];
m1_5 [cluster="CommandLine.Infrastructure.OptionMap.OptionMap(int, CommandLine.IParserSettings)", file="OptionMap.cs", label="_settings.MutuallyExclusive", span="56-56"];
m1_7 [cluster="CommandLine.Infrastructure.OptionMap.OptionMap(int, CommandLine.IParserSettings)", file="OptionMap.cs", label="Exit CommandLine.Infrastructure.OptionMap.OptionMap(int, CommandLine.IParserSettings)", span="47-47"];
m1_46 [cluster="CommandLine.Infrastructure.OptionMap.EnforceRequiredRule()", file="OptionMap.cs", label="Entry CommandLine.Infrastructure.OptionMap.EnforceRequiredRule()", span="219-219"];
m1_73 [cluster="CommandLine.Infrastructure.OptionMap.EnforceRequiredRule()", file="OptionMap.cs", label="var requiredRulesAllMet = true", span="221-221"];
m1_74 [cluster="CommandLine.Infrastructure.OptionMap.EnforceRequiredRule()", file="OptionMap.cs", label="_map.Values", span="223-223"];
m1_78 [cluster="CommandLine.Infrastructure.OptionMap.EnforceRequiredRule()", file="OptionMap.cs", label="return requiredRulesAllMet;", span="232-232"];
m1_75 [cluster="CommandLine.Infrastructure.OptionMap.EnforceRequiredRule()", file="OptionMap.cs", label="option.Required && !(option.IsDefined && option.ReceivedValue)", span="225-225"];
m1_76 [cluster="CommandLine.Infrastructure.OptionMap.EnforceRequiredRule()", file="OptionMap.cs", label="SetParserStateIfNeeded(RawOptions, option, true, null)", span="227-227"];
m1_77 [cluster="CommandLine.Infrastructure.OptionMap.EnforceRequiredRule()", file="OptionMap.cs", label="requiredRulesAllMet = false", span="228-228"];
m1_79 [cluster="CommandLine.Infrastructure.OptionMap.EnforceRequiredRule()", file="OptionMap.cs", label="Exit CommandLine.Infrastructure.OptionMap.EnforceRequiredRule()", span="219-219"];
m1_28 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.IParserSettings)", file="OptionMap.cs", label="Entry CommandLine.Infrastructure.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.IParserSettings)", span="135-135"];
m1_29 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.IParserSettings)", file="OptionMap.cs", label="var map = new OptionMap(verbs.Count, settings)", span="140-140"];
m1_30 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.IParserSettings)", file="OptionMap.cs", label=verbs, span="142-142"];
m1_31 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.IParserSettings)", file="OptionMap.cs", label="var optionInfo = new OptionInfo(verb.Right, verb.Left, settings.ParsingCulture)\r\n                {\r\n                    HasParameterLessCtor = verb.Left.PropertyType.GetConstructor(Type.EmptyTypes) != null\r\n                }", span="144-147"];
m1_32 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.IParserSettings)", file="OptionMap.cs", label="!optionInfo.HasParameterLessCtor && verb.Left.GetValue(target, null) == null", span="149-149"];
m1_35 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.IParserSettings)", file="OptionMap.cs", label="map.RawOptions = target", span="158-158"];
m1_34 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.IParserSettings)", file="OptionMap.cs", label="map[verb.Right.UniqueName] = optionInfo", span="155-155"];
m1_36 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.IParserSettings)", file="OptionMap.cs", label="return map;", span="159-159"];
m1_33 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.IParserSettings)", file="OptionMap.cs", label="throw new ParserException(''Type {0} must have a parameterless constructor or'' +\r\n                        '' be already initialized to be used as a verb command.''.FormatInvariant(verb.Left.PropertyType));", span="151-152"];
m1_37 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.IParserSettings)", file="OptionMap.cs", label="Exit CommandLine.Infrastructure.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.IParserSettings)", span="135-135"];
m1_42 [cluster="CommandLine.Infrastructure.OptionMap.EnforceRules()", file="OptionMap.cs", label="Entry CommandLine.Infrastructure.OptionMap.EnforceRules()", span="162-162"];
m1_43 [cluster="CommandLine.Infrastructure.OptionMap.EnforceRules()", file="OptionMap.cs", label="return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="164-164"];
m1_44 [cluster="CommandLine.Infrastructure.OptionMap.EnforceRules()", file="OptionMap.cs", label="Exit CommandLine.Infrastructure.OptionMap.EnforceRules()", span="162-162"];
m1_99 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="OptionMap.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m1_70 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="OptionMap.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m1_98 [cluster="CommandLine.Infrastructure.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Infrastructure.OptionInfo)", file="OptionMap.cs", label="Entry CommandLine.Infrastructure.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Infrastructure.OptionInfo)", span="277-277"];
m1_101 [cluster="CommandLine.Infrastructure.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Infrastructure.OptionInfo)", file="OptionMap.cs", label="BadOption = option", span="279-279"];
m1_102 [cluster="CommandLine.Infrastructure.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Infrastructure.OptionInfo)", file="OptionMap.cs", label="Exit CommandLine.Infrastructure.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Infrastructure.OptionInfo)", span="277-277"];
m1_27 [cluster="CommandLine.Infrastructure.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", file="OptionMap.cs", label="Entry CommandLine.Infrastructure.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", span="48-48"];
m1_47 [cluster="CommandLine.Infrastructure.OptionMap.SetDefaults()", file="OptionMap.cs", label="Entry CommandLine.Infrastructure.OptionMap.SetDefaults()", span="167-167"];
m1_48 [cluster="CommandLine.Infrastructure.OptionMap.SetDefaults()", file="OptionMap.cs", label="_map.Values", span="169-169"];
m1_49 [cluster="CommandLine.Infrastructure.OptionMap.SetDefaults()", file="OptionMap.cs", label="option.SetDefault(RawOptions)", span="171-171"];
m1_50 [cluster="CommandLine.Infrastructure.OptionMap.SetDefaults()", file="OptionMap.cs", label="Exit CommandLine.Infrastructure.OptionMap.SetDefaults()", span="167-167"];
m1_97 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="OptionMap.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m1_40 [cluster="CommandLine.ParserException.ParserException(string)", file="OptionMap.cs", label="Entry CommandLine.ParserException.ParserException(string)", span="49-49"];
m1_72 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="OptionMap.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m1_38 [cluster="System.Type.GetConstructor(System.Type[])", file="OptionMap.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m1_26 [cluster="string.ToLowerInvariant()", file="OptionMap.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m1_51 [cluster="CommandLine.Infrastructure.OptionInfo.SetDefault(object)", file="OptionMap.cs", label="Entry CommandLine.Infrastructure.OptionInfo.SetDefault(object)", span="206-206"];
m1_52 [cluster="CommandLine.Infrastructure.OptionMap.SetParserStateIfNeeded(object, CommandLine.Infrastructure.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="Entry CommandLine.Infrastructure.OptionMap.SetParserStateIfNeeded(object, CommandLine.Infrastructure.OptionInfo, bool?, bool?)", span="175-175"];
m1_53 [cluster="CommandLine.Infrastructure.OptionMap.SetParserStateIfNeeded(object, CommandLine.Infrastructure.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="var list = ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(options)", span="177-177"];
m1_57 [cluster="CommandLine.Infrastructure.OptionMap.SetParserStateIfNeeded(object, CommandLine.Infrastructure.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="property.GetValue(options, null) == null", span="186-186"];
m1_58 [cluster="CommandLine.Infrastructure.OptionMap.SetParserStateIfNeeded(object, CommandLine.Infrastructure.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="property.SetValue(options, new CommandLine.ParserState(), null)", span="188-188"];
m1_59 [cluster="CommandLine.Infrastructure.OptionMap.SetParserStateIfNeeded(object, CommandLine.Infrastructure.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="var parserState = (IParserState)property.GetValue(options, null)", span="191-191"];
m1_62 [cluster="CommandLine.Infrastructure.OptionMap.SetParserStateIfNeeded(object, CommandLine.Infrastructure.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="var error = new ParsingError\r\n            {\r\n                BadOption =\r\n                {\r\n                    ShortName = option.ShortName,\r\n                    LongName = option.LongName\r\n                }\r\n            }", span="197-204"];
m1_63 [cluster="CommandLine.Infrastructure.OptionMap.SetParserStateIfNeeded(object, CommandLine.Infrastructure.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="required != null", span="206-206"];
m1_64 [cluster="CommandLine.Infrastructure.OptionMap.SetParserStateIfNeeded(object, CommandLine.Infrastructure.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="error.ViolatesRequired = required.Value", span="208-208"];
m1_65 [cluster="CommandLine.Infrastructure.OptionMap.SetParserStateIfNeeded(object, CommandLine.Infrastructure.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="mutualExclusiveness != null", span="211-211"];
m1_66 [cluster="CommandLine.Infrastructure.OptionMap.SetParserStateIfNeeded(object, CommandLine.Infrastructure.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="213-213"];
m1_54 [cluster="CommandLine.Infrastructure.OptionMap.SetParserStateIfNeeded(object, CommandLine.Infrastructure.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="list.Count == 0", span="178-178"];
m1_56 [cluster="CommandLine.Infrastructure.OptionMap.SetParserStateIfNeeded(object, CommandLine.Infrastructure.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="var property = list[0].Left", span="183-183"];
m1_55 [cluster="CommandLine.Infrastructure.OptionMap.SetParserStateIfNeeded(object, CommandLine.Infrastructure.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="return;", span="180-180"];
m1_60 [cluster="CommandLine.Infrastructure.OptionMap.SetParserStateIfNeeded(object, CommandLine.Infrastructure.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="parserState == null", span="192-192"];
m1_67 [cluster="CommandLine.Infrastructure.OptionMap.SetParserStateIfNeeded(object, CommandLine.Infrastructure.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="parserState.Errors.Add(error)", span="216-216"];
m1_61 [cluster="CommandLine.Infrastructure.OptionMap.SetParserStateIfNeeded(object, CommandLine.Infrastructure.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="return;", span="194-194"];
m1_68 [cluster="CommandLine.Infrastructure.OptionMap.SetParserStateIfNeeded(object, CommandLine.Infrastructure.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="Exit CommandLine.Infrastructure.OptionMap.SetParserStateIfNeeded(object, CommandLine.Infrastructure.OptionInfo, bool?, bool?)", span="175-175"];
m1_69 [cluster="CommandLine.ParserState.ParserState()", file="OptionMap.cs", label="Entry CommandLine.ParserState.ParserState()", span="34-34"];
m1_45 [cluster="CommandLine.Infrastructure.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="Entry CommandLine.Infrastructure.OptionMap.EnforceMutuallyExclusiveMap()", span="235-235"];
m1_80 [cluster="CommandLine.Infrastructure.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="!_settings.MutuallyExclusive", span="237-237"];
m1_81 [cluster="CommandLine.Infrastructure.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="return true;", span="239-239"];
m1_82 [cluster="CommandLine.Infrastructure.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="_map.Values", span="242-242"];
m1_83 [cluster="CommandLine.Infrastructure.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="option.IsDefined && option.MutuallyExclusiveSet != null", span="244-244"];
m1_85 [cluster="CommandLine.Infrastructure.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="_mutuallyExclusiveSetMap.Values", span="250-250"];
m1_84 [cluster="CommandLine.Infrastructure.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="BuildMutuallyExclusiveMap(option)", span="246-246"];
m1_86 [cluster="CommandLine.Infrastructure.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="info.Occurrence > 1", span="252-252"];
m1_89 [cluster="CommandLine.Infrastructure.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="return true;", span="259-259"];
m1_87 [cluster="CommandLine.Infrastructure.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="SetParserStateIfNeeded(RawOptions, info.BadOption, null, true)", span="254-254"];
m1_88 [cluster="CommandLine.Infrastructure.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="return false;", span="255-255"];
m1_90 [cluster="CommandLine.Infrastructure.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="Exit CommandLine.Infrastructure.OptionMap.EnforceMutuallyExclusiveMap()", span="235-235"];
m1_91 [cluster="CommandLine.Infrastructure.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Infrastructure.OptionInfo)", file="OptionMap.cs", label="Entry CommandLine.Infrastructure.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Infrastructure.OptionInfo)", span="262-262"];
m1_92 [cluster="CommandLine.Infrastructure.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Infrastructure.OptionInfo)", file="OptionMap.cs", label="var setName = option.MutuallyExclusiveSet", span="264-264"];
m1_94 [cluster="CommandLine.Infrastructure.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Infrastructure.OptionInfo)", file="OptionMap.cs", label="_mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="267-267"];
m1_93 [cluster="CommandLine.Infrastructure.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Infrastructure.OptionInfo)", file="OptionMap.cs", label="!_mutuallyExclusiveSetMap.ContainsKey(setName)", span="265-265"];
m1_95 [cluster="CommandLine.Infrastructure.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Infrastructure.OptionInfo)", file="OptionMap.cs", label="_mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="270-270"];
m1_96 [cluster="CommandLine.Infrastructure.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Infrastructure.OptionInfo)", file="OptionMap.cs", label="Exit CommandLine.Infrastructure.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Infrastructure.OptionInfo)", span="262-262"];
m1_71 [cluster="CommandLine.ParsingError.ParsingError()", file="OptionMap.cs", label="Entry CommandLine.ParsingError.ParsingError()", span="31-31"];
m1_9 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.IParserSettings)", file="OptionMap.cs", label="Entry CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.IParserSettings)", span="102-102"];
m1_10 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.IParserSettings)", file="OptionMap.cs", label="var list = ReflectionUtil.RetrievePropertyList<BaseOptionAttribute>(target)", span="104-104"];
m1_13 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.IParserSettings)", file="OptionMap.cs", label="var map = new OptionMap(list.Count, settings)", span="110-110"];
m1_21 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.IParserSettings)", file="OptionMap.cs", label="map[uniqueName] = new OptionInfo(pair.Right, pair.Left, settings.ParsingCulture)", span="127-127"];
m1_22 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.IParserSettings)", file="OptionMap.cs", label="map.RawOptions = target", span="131-131"];
m1_11 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.IParserSettings)", file="OptionMap.cs", label="list == null", span="105-105"];
m1_14 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.IParserSettings)", file="OptionMap.cs", label=list, span="112-112"];
m1_12 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.IParserSettings)", file="OptionMap.cs", label="return null;", span="107-107"];
m1_23 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.IParserSettings)", file="OptionMap.cs", label="return map;", span="132-132"];
m1_15 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.IParserSettings)", file="OptionMap.cs", label="pair.Left != null && pair.Right != null", span="114-114"];
m1_17 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.IParserSettings)", file="OptionMap.cs", label="pair.Right.AutoLongName", span="117-117"];
m1_18 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.IParserSettings)", file="OptionMap.cs", label="uniqueName = pair.Left.Name.ToLowerInvariant()", span="119-119"];
m1_19 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.IParserSettings)", file="OptionMap.cs", label="pair.Right.LongName = uniqueName", span="120-120"];
m1_20 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.IParserSettings)", file="OptionMap.cs", label="uniqueName = pair.Right.UniqueName", span="124-124"];
m1_16 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.IParserSettings)", file="OptionMap.cs", label="string uniqueName", span="116-116"];
m1_24 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.IParserSettings)", file="OptionMap.cs", label="Exit CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.IParserSettings)", span="102-102"];
m1_41 [cluster="string.FormatInvariant(params object[])", file="OptionMap.cs", label="Entry string.FormatInvariant(params object[])", span="46-46"];
m1_39 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="OptionMap.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m1_25 [cluster="CommandLine.Helpers.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="OptionMap.cs", label="Entry CommandLine.Helpers.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="46-46"];
m1_8 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", file="OptionMap.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m1_105 [file="OptionMap.cs", label="CommandLine.Infrastructure.OptionMap", span=""];
m1_106 [file="OptionMap.cs", label="CommandLine.Infrastructure.OptionMap.MutuallyExclusiveInfo", span=""];
m2_173 [cluster="CommandLine.ParserContext.HasNoArguments()", file="Parser.cs", label="Entry CommandLine.ParserContext.HasNoArguments()", span="61-61"];
m2_116 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="Parser.cs", label="Entry CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="417-417"];
m2_181 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="Parser.cs", label=args, span="420-420"];
m2_182 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="Parser.cs", label="helpOption.ShortName != null", span="422-422"];
m2_183 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="Parser.cs", label="ArgumentParser.CompareShort(arg, helpOption.ShortName, caseSensitive)", span="424-424"];
m2_185 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="Parser.cs", label="string.IsNullOrEmpty(helpOption.LongName)", span="430-430"];
m2_186 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="Parser.cs", label="ArgumentParser.CompareLong(arg, helpOption.LongName, caseSensitive)", span="435-435"];
m2_188 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="Parser.cs", label="return false;", span="441-441"];
m2_184 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="Parser.cs", label="return true;", span="426-426"];
m2_187 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="Parser.cs", label="return true;", span="437-437"];
m2_189 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="Parser.cs", label="Exit CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="417-417"];
m2_56 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="Entry CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", span="214-214"];
m2_57 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="216-216"];
m2_58 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="217-217"];
m2_59 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="Assumes.NotNull(options, ''onVerbCommand'', SR.ArgumentNullException_OnVerbDelegateCannotBeNull)", span="218-218"];
m2_64 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="InvokeAutoBuildIfNeeded(options)", span="228-228"];
m2_65 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="onFail == null", span="230-230"];
m2_67 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="onFail()", span="236-236"];
m2_60 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="object verbInstance = null", span="220-220"];
m2_66 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="Environment.Exit(DefaultExitCodeFail)", span="232-232"];
m2_68 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="return false;", span="239-239"];
m2_70 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="return true;", span="243-243"];
m2_71 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="Exit CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", span="214-214"];
m2_220 [cluster="object.HasVerbHelp()", file="Parser.cs", label="Entry object.HasVerbHelp()", span="44-44"];
m2_19 [cluster="CommandLine.Parser.~Parser()", file="Parser.cs", label="Entry CommandLine.Parser.~Parser()", span="94-94"];
m2_20 [cluster="CommandLine.Parser.~Parser()", file="Parser.cs", label="Dispose(false)", span="96-96"];
m2_21 [cluster="CommandLine.Parser.~Parser()", file="Parser.cs", label="Exit CommandLine.Parser.~Parser()", span="94-94"];
m2_77 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="Parser.cs", label="Entry CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", span="257-257"];
m2_78 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="Parser.cs", label="found = false", span="259-259"];
m2_79 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="Parser.cs", label="string.IsNullOrEmpty(verb)", span="260-260"];
m2_80 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="Parser.cs", label="return target;", span="262-262"];
m2_81 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="Parser.cs", label="var pair = ReflectionUtil.RetrieveOptionProperty<VerbOptionAttribute>(target, verb)", span="265-265"];
m2_83 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="Parser.cs", label="return found ? pair.Left.GetValue(target, null) : target;", span="267-267"];
m2_82 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="Parser.cs", label="found = pair != null", span="266-266"];
m2_84 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="Parser.cs", label="Exit CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", span="257-257"];
m2_119 [cluster="System.IO.TextWriter.Write(string)", file="Parser.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m2_147 [cluster="CommandLine.Infrastructure.ArgumentParser.Create(string, bool)", file="Parser.cs", label="Entry CommandLine.Infrastructure.ArgumentParser.Create(string, bool)", span="59-59"];
m2_179 [cluster="CommandLine.ParserContext.ToCoreInstance(CommandLine.Infrastructure.OptionInfo)", file="Parser.cs", label="Entry CommandLine.ParserContext.ToCoreInstance(CommandLine.Infrastructure.OptionInfo)", span="50-50"];
m2_214 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="Parser.cs", label="Entry CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", span="85-85"];
m2_9 [cluster="System.Action<T>.Invoke(T)", file="Parser.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m2_175 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.IParserSettings)", file="Parser.cs", label="Entry CommandLine.Infrastructure.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.IParserSettings)", span="135-135"];
m2_222 [cluster="CommandLine.Text.HelpText.AutoBuild(object, System.Action<CommandLine.Text.HelpText>, bool)", file="Parser.cs", label="Entry CommandLine.Text.HelpText.AutoBuild(object, System.Action<CommandLine.Text.HelpText>, bool)", span="277-277"];
m2_28 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="Parser.cs", label="Entry CommandLine.Parser.DoParseArguments(string[], object)", span="294-294"];
m2_103 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="Parser.cs", label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="296-296"];
m2_109 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="Parser.cs", label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="307-307"];
m2_106 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="Parser.cs", label="pair != null && helpWriter != null", span="301-301"];
m2_110 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="Parser.cs", label="helpWriter.Write(helpText)", span="308-308"];
m2_108 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="Parser.cs", label="string helpText", span="306-306"];
m2_112 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="Parser.cs", label="return true;", span="312-312"];
m2_111 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="Parser.cs", label="return false;", span="309-309"];
m2_114 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="Parser.cs", label="Exit CommandLine.Parser.DoParseArguments(string[], object)", span="294-294"];
m2_10 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="75-75"];
m2_11 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="Assumes.NotNull(settings, ''settings'', SR.ArgumentNullException_CommandLineParserSettingsInstanceCannotBeNull)", span="77-77"];
m2_12 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="Settings = settings", span="79-79"];
m2_13 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="Exit CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="75-75"];
m2_18 [cluster="CommandLine.ParserSettings.ParserSettings(bool, bool, System.IO.TextWriter)", file="Parser.cs", label="Entry CommandLine.ParserSettings.ParserSettings(bool, bool, System.IO.TextWriter)", span="101-101"];
m2_54 [cluster="System.Environment.Exit(int)", file="Parser.cs", label="Entry System.Environment.Exit(int)", span="0-0"];
m2_191 [cluster="CommandLine.Infrastructure.ArgumentParser.CompareLong(string, string, bool)", file="Parser.cs", label="Entry CommandLine.Infrastructure.ArgumentParser.CompareLong(string, string, bool)", span="51-51"];
m2_226 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", file="Parser.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", span="337-337"];
m2_8 [cluster="CommandLine.Parser.ParserConfigurator.ParserConfigurator(CommandLine.IParser)", file="Parser.cs", label="Entry CommandLine.Parser.ParserConfigurator.ParserConfigurator(CommandLine.IParser)", span="48-48"];
m2_3 [cluster="CommandLine.ParserSettings.ParserSettings()", file="Parser.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="44-44"];
m2_117 [cluster="CommandLine.Parser.DoParseArgumentsCore(CommandLine.ParserContext)", file="Parser.cs", label="Entry CommandLine.Parser.DoParseArgumentsCore(CommandLine.ParserContext)", span="318-318"];
m2_120 [cluster="CommandLine.Parser.DoParseArgumentsCore(CommandLine.ParserContext)", file="Parser.cs", label="var hadError = false", span="320-320"];
m2_139 [cluster="CommandLine.Parser.DoParseArgumentsCore(CommandLine.ParserContext)", file="Parser.cs", label="hadError |= !optionMap.EnforceRules()", span="359-359"];
m2_122 [cluster="CommandLine.Parser.DoParseArgumentsCore(CommandLine.ParserContext)", file="Parser.cs", label="optionMap.SetDefaults()", span="322-322"];
m2_136 [cluster="CommandLine.Parser.DoParseArgumentsCore(CommandLine.ParserContext)", file="Parser.cs", label="valueMapper.CanReceiveValues", span="350-350"];
m2_137 [cluster="CommandLine.Parser.DoParseArgumentsCore(CommandLine.ParserContext)", file="Parser.cs", label="!valueMapper.MapValueItem(argument)", span="352-352"];
m2_125 [cluster="CommandLine.Parser.DoParseArgumentsCore(CommandLine.ParserContext)", file="Parser.cs", label="arguments.MoveNext()", span="326-326"];
m2_126 [cluster="CommandLine.Parser.DoParseArgumentsCore(CommandLine.ParserContext)", file="Parser.cs", label="var argument = arguments.Current", span="328-328"];
m2_135 [cluster="CommandLine.Parser.DoParseArgumentsCore(CommandLine.ParserContext)", file="Parser.cs", label="arguments.MoveNext()", span="347-347"];
m2_127 [cluster="CommandLine.Parser.DoParseArgumentsCore(CommandLine.ParserContext)", file="Parser.cs", label="string.IsNullOrEmpty(argument)", span="329-329"];
m2_129 [cluster="CommandLine.Parser.DoParseArgumentsCore(CommandLine.ParserContext)", file="Parser.cs", label="parser != null", span="335-335"];
m2_131 [cluster="CommandLine.Parser.DoParseArgumentsCore(CommandLine.ParserContext)", file="Parser.cs", label="(result & PresentParserState.Failure) == PresentParserState.Failure", span="338-338"];
m2_134 [cluster="CommandLine.Parser.DoParseArgumentsCore(CommandLine.ParserContext)", file="Parser.cs", label="(result & PresentParserState.MoveOnNextElement) == PresentParserState.MoveOnNextElement", span="345-345"];
m2_133 [cluster="CommandLine.Parser.DoParseArgumentsCore(CommandLine.ParserContext)", file="Parser.cs", label="hadError = true", span="341-341"];
m2_138 [cluster="CommandLine.Parser.DoParseArgumentsCore(CommandLine.ParserContext)", file="Parser.cs", label="hadError = true", span="354-354"];
m2_140 [cluster="CommandLine.Parser.DoParseArgumentsCore(CommandLine.ParserContext)", file="Parser.cs", label="return !hadError;", span="361-361"];
m2_141 [cluster="CommandLine.Parser.DoParseArgumentsCore(CommandLine.ParserContext)", file="Parser.cs", label="Exit CommandLine.Parser.DoParseArgumentsCore(CommandLine.ParserContext)", span="318-318"];
m2_149 [cluster="CommandLine.Infrastructure.ValueMapper.MapValueItem(string)", file="Parser.cs", label="Entry CommandLine.Infrastructure.ValueMapper.MapValueItem(string)", span="68-68"];
m2_150 [cluster="CommandLine.Infrastructure.OptionMap.EnforceRules()", file="Parser.cs", label="Entry CommandLine.Infrastructure.OptionMap.EnforceRules()", span="162-162"];
m2_145 [cluster="CommandLine.Infrastructure.StringArrayEnumerator.StringArrayEnumerator(string[])", file="Parser.cs", label="Entry CommandLine.Infrastructure.StringArrayEnumerator.StringArrayEnumerator(string[])", span="36-36"];
m2_23 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="Parser.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="126-126"];
m2_24 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="Parser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="128-128"];
m2_25 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="Parser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="129-129"];
m2_26 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="Parser.cs", label="return DoParseArguments(args, options);", span="131-131"];
m2_27 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="Parser.cs", label="Exit CommandLine.Parser.ParseArguments(string[], object)", span="126-126"];
m2_176 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="Entry CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", span="444-444"];
m2_193 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="helpInfo != null && helpWriter != null", span="447-447"];
m2_197 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="var verbOption = optionMap[verb]", span="455-455"];
m2_199 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="verbOption.GetValue(options) == null", span="458-458"];
m2_200 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="verbOption.CreateInstance(options)", span="461-461"];
m2_201 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="DisplayHelpVerbText(options, helpInfo, verb)", span="466-466"];
m2_203 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="return false;", span="471-471"];
m2_196 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="verb != null", span="453-453"];
m2_198 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="verbOption != null", span="456-456"];
m2_202 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="return true;", span="467-467"];
m2_204 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="Exit CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", span="444-444"];
m2_41 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="Parser.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m2_115 [cluster="CommandLine.Helpers.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="Parser.cs", label="Entry CommandLine.Helpers.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="86-86"];
m2_42 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="Parser.cs", label="Entry CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", span="175-175"];
m2_43 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="Parser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="177-177"];
m2_44 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="Parser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="178-178"];
m2_45 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="Parser.cs", label="!DoParseArguments(args, options)", span="180-180"];
m2_46 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="Parser.cs", label="InvokeAutoBuildIfNeeded(options)", span="182-182"];
m2_47 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="Parser.cs", label="onFail == null", span="184-184"];
m2_49 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="Parser.cs", label="onFail()", span="190-190"];
m2_51 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="Parser.cs", label="return true;", span="196-196"];
m2_48 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="Parser.cs", label="Environment.Exit(DefaultExitCodeFail)", span="186-186"];
m2_50 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="Parser.cs", label="return false;", span="193-193"];
m2_52 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="Parser.cs", label="Exit CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", span="175-175"];
m2_0 [cluster="CommandLine.Parser.Parser()", file="Parser.cs", label="Entry CommandLine.Parser.Parser()", span="53-53"];
m2_2 [cluster="CommandLine.Parser.Parser()", file="Parser.cs", label="Exit CommandLine.Parser.Parser()", span="53-53"];
m2_144 [cluster="CommandLine.Infrastructure.ValueMapper.ValueMapper(object, System.Globalization.CultureInfo)", file="Parser.cs", label="Entry CommandLine.Infrastructure.ValueMapper.ValueMapper(object, System.Globalization.CultureInfo)", span="45-45"];
m2_146 [cluster="CommandLine.Infrastructure.StringArrayEnumerator.MoveNext()", file="Parser.cs", label="Entry CommandLine.Infrastructure.StringArrayEnumerator.MoveNext()", span="91-91"];
m2_101 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="Parser.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m2_223 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="504-504"];
m2_225 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="504-504"];
m2_143 [cluster="CommandLine.Infrastructure.OptionMap.SetDefaults()", file="Parser.cs", label="Entry CommandLine.Infrastructure.OptionMap.SetDefaults()", span="167-167"];
m2_234 [cluster="System.IDisposable.Dispose()", file="Parser.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m2_148 [cluster="CommandLine.Infrastructure.ArgumentParser.Parse(CommandLine.Infrastructure.IArgumentEnumerator, CommandLine.Infrastructure.OptionMap, object)", file="Parser.cs", label="Entry CommandLine.Infrastructure.ArgumentParser.Parse(CommandLine.Infrastructure.IArgumentEnumerator, CommandLine.Infrastructure.OptionMap, object)", span="99-99"];
m2_39 [cluster="CommandLine.ParserContext.ParserContext(string[], object)", file="Parser.cs", label="Entry CommandLine.ParserContext.ParserContext(string[], object)", span="35-35"];
m2_177 [cluster="CommandLine.Infrastructure.OptionInfo.GetValue(object)", file="Parser.cs", label="Entry CommandLine.Infrastructure.OptionInfo.GetValue(object)", span="141-141"];
m2_219 [cluster="object.HasHelp()", file="Parser.cs", label="Entry object.HasHelp()", span="39-39"];
m2_88 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="Parser.cs", label="Entry CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="270-270"];
m2_89 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="Parser.cs", label="!options.CanReceiveParserState()", span="272-272"];
m2_91 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="Parser.cs", label="var property = ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(options)[0].Left", span="277-277"];
m2_92 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="Parser.cs", label="property.GetValue(options, null) == null", span="280-280"];
m2_93 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="Parser.cs", label="property.SetValue(options, new ParserState(), null)", span="283-283"];
m2_94 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="Parser.cs", label="var parserState = (IParserState)property.GetValue(options, null)", span="286-286"];
m2_95 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="Parser.cs", label=errors, span="288-288"];
m2_90 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="Parser.cs", label="return;", span="274-274"];
m2_96 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="Parser.cs", label="parserState.Errors.Add(error)", span="290-290"];
m2_97 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="Parser.cs", label="Exit CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="270-270"];
m2_86 [cluster="CommandLine.Helpers.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="Parser.cs", label="Entry CommandLine.Helpers.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="199-199"];
m2_118 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="Parser.cs", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="106-106"];
m2_4 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.Parser.ParserConfigurator>)", file="Parser.cs", label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.Parser.ParserConfigurator>)", span="62-62"];
m2_5 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.Parser.ParserConfigurator>)", file="Parser.cs", label="var configurator = new ParserConfigurator(this)", span="65-65"];
m2_6 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.Parser.ParserConfigurator>)", file="Parser.cs", label="configuration.Invoke(configurator)", span="66-66"];
m2_7 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.Parser.ParserConfigurator>)", file="Parser.cs", label="Exit CommandLine.Parser.Parser(System.Action<CommandLine.Parser.ParserConfigurator>)", span="62-62"];
m2_40 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(CommandLine.ParserContext, ref object)", file="Parser.cs", label="Entry CommandLine.Parser.DoParseArgumentsVerbs(CommandLine.ParserContext, ref object)", span="364-364"];
m2_162 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(CommandLine.ParserContext, ref object)", file="Parser.cs", label="helpInfo != null", span="392-392"];
m2_169 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(CommandLine.ParserContext, ref object)", file="Parser.cs", label="!verbResult && helpInfo != null", span="408-408"];
m2_156 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(CommandLine.ParserContext, ref object)", file="Parser.cs", label="return false;", span="375-375"];
m2_159 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(CommandLine.ParserContext, ref object)", file="Parser.cs", label="return false;", span="384-384"];
m2_161 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(CommandLine.ParserContext, ref object)", file="Parser.cs", label="verbOption == null", span="390-390"];
m2_164 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(CommandLine.ParserContext, ref object)", file="Parser.cs", label="return false;", span="397-397"];
m2_166 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(CommandLine.ParserContext, ref object)", file="Parser.cs", label="verbInstance == null", span="401-401"];
m2_171 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(CommandLine.ParserContext, ref object)", file="Parser.cs", label="return verbResult;", span="414-414"];
m2_172 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(CommandLine.ParserContext, ref object)", file="Parser.cs", label="Exit CommandLine.Parser.DoParseArgumentsVerbs(CommandLine.ParserContext, ref object)", span="364-364"];
m2_15 [cluster="CommandLine.Parser.Parser(bool)", file="Parser.cs", label="Entry CommandLine.Parser.Parser(bool)", span="83-83"];
m2_16 [cluster="CommandLine.Parser.Parser(bool)", file="Parser.cs", label="Settings = new ParserSettings(false, false, Console.Error)\r\n                {\r\n                    ParsingCulture = CultureInfo.InvariantCulture\r\n                }", span="85-88"];
m2_17 [cluster="CommandLine.Parser.Parser(bool)", file="Parser.cs", label="Exit CommandLine.Parser.Parser(bool)", span="83-83"];
m2_102 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="Parser.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m2_190 [cluster="CommandLine.Infrastructure.ArgumentParser.CompareShort(string, char?, bool)", file="Parser.cs", label="Entry CommandLine.Infrastructure.ArgumentParser.CompareShort(string, char?, bool)", span="43-43"];
m2_76 [cluster="System.GC.SuppressFinalize(object)", file="Parser.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m2_221 [cluster="object.HasVerbs()", file="Parser.cs", label="Entry object.HasVerbs()", span="34-34"];
m2_29 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="Parser.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", span="147-147"];
m2_30 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="Parser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="149-149"];
m2_31 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="Parser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="150-150"];
m2_32 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="Parser.cs", label="Assumes.NotNull(options, ''onVerbCommand'', SR.ArgumentNullException_OnVerbDelegateCannotBeNull)", span="151-151"];
m2_33 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="Parser.cs", label="object verbInstance = null", span="153-153"];
m2_37 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="Parser.cs", label="return result;", span="160-160"];
m2_38 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="Parser.cs", label="Exit CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", span="147-147"];
m2_85 [cluster="string.IsNullOrEmpty(string)", file="Parser.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m2_98 [cluster="object.CanReceiveParserState()", file="Parser.cs", label="Entry object.CanReceiveParserState()", span="49-49"];
m2_178 [cluster="CommandLine.Infrastructure.OptionInfo.CreateInstance(object)", file="Parser.cs", label="Entry CommandLine.Infrastructure.OptionInfo.CreateInstance(object)", span="146-146"];
m2_72 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="Entry CommandLine.Parser.Dispose()", span="249-249"];
m2_73 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="Dispose(true)", span="251-251"];
m2_74 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="GC.SuppressFinalize(this)", span="253-253"];
m2_75 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="Exit CommandLine.Parser.Dispose()", span="249-249"];
m2_174 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="Parser.cs", label="Entry CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="474-474"];
m2_207 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="Parser.cs", label="string helpText", span="476-476"];
m2_208 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="Parser.cs", label="verb == null", span="477-477"];
m2_209 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="Parser.cs", label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, null, out helpText)", span="479-479"];
m2_210 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="Parser.cs", label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, verb, out helpText)", span="483-483"];
m2_213 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="Parser.cs", label="Exit CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="474-474"];
m2_14 [cluster="CommandLine.Helpers.Assumes.NotNull<T>(T, string, string)", file="Parser.cs", label="Entry CommandLine.Helpers.Assumes.NotNull<T>(T, string, string)", span="40-40"];
m2_100 [cluster="CommandLine.ParserState.ParserState()", file="Parser.cs", label="Entry CommandLine.ParserState.ParserState()", span="34-34"];
m2_206 [cluster="string.Compare(string, string, System.StringComparison)", file="Parser.cs", label="Entry string.Compare(string, string, System.StringComparison)", span="0-0"];
m2_205 [cluster="CommandLine.IParserSettings.GetStringComparison()", file="Parser.cs", label="Entry CommandLine.IParserSettings.GetStringComparison()", span="81-81"];
m2_22 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="Entry CommandLine.Parser.Dispose(bool)", span="508-508"];
m2_227 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label=_disposed, span="510-510"];
m2_229 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label=disposing, span="515-515"];
m2_228 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="return;", span="512-512"];
m2_232 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="_disposed = true", span="522-522"];
m2_233 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="Exit CommandLine.Parser.Dispose(bool)", span="508-508"];
m2_55 [cluster="System.Action.Invoke()", file="Parser.cs", label="Entry System.Action.Invoke()", span="0-0"];
m2_53 [cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="Parser.cs", label="Entry CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", span="492-492"];
m2_216 [cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="Parser.cs", label="return;", span="498-498"];
m2_218 [cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="Parser.cs", label="Exit CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", span="492-492"];
m2_142 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.IParserSettings)", file="Parser.cs", label="Entry CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.IParserSettings)", span="102-102"];
m2_87 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="Parser.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m2_99 [cluster="CommandLine.Helpers.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="Parser.cs", label="Entry CommandLine.Helpers.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="46-46"];
m2_235 [file="Parser.cs", label="CommandLine.Parser", span=""];
m2_236 [file="Parser.cs", label=object, span=""];
m3_75 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string)", file="ParserContext.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string)", span="0-0"];
m3_141 [cluster="Humanizer.InflectorExtensions.Underscore(string)", file="ParserContext.cs", label="Entry Humanizer.InflectorExtensions.Underscore(string)", span="247-247"];
m3_142 [cluster="Humanizer.InflectorExtensions.Underscore(string)", file="ParserContext.cs", label="return Regex.Replace(\r\n                Regex.Replace(\r\n                    Regex.Replace(input, @''([A-Z]+)([A-Z][a-z])'', ''$1_$2''), @''([a-z\d])([A-Z])'', ''$1_$2''), @''[-\s]'', ''_'').ToLower();", span="249-251"];
m3_143 [cluster="Humanizer.InflectorExtensions.Underscore(string)", file="ParserContext.cs", label="Exit Humanizer.InflectorExtensions.Underscore(string)", span="247-247"];
m3_123 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="ParserContext.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m3_131 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", file="ParserContext.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", span="0-0"];
m3_69 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="ParserContext.cs", label="Entry Humanizer.InflectorExtensions.Rule.Apply(string)", span="105-105"];
m3_70 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="ParserContext.cs", label="!_regex.IsMatch(word)", span="107-107"];
m3_72 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="ParserContext.cs", label="return _regex.Replace(word, _replacement);", span="112-112"];
m3_71 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="ParserContext.cs", label="return null;", span="109-109"];
m3_73 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="ParserContext.cs", label="Exit Humanizer.InflectorExtensions.Rule.Apply(string)", span="105-105"];
m3_0 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="ParserContext.cs", label="Entry Humanizer.InflectorExtensions.InflectorExtensions()", span="29-29"];
m3_41 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="ParserContext.cs", label="AddSingular(''(quiz)zes$'', ''$1'')", span="72-72"];
m3_42 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="ParserContext.cs", label="AddIrregular(''person'', ''people'')", span="74-74"];
m3_43 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="ParserContext.cs", label="AddIrregular(''man'', ''men'')", span="75-75"];
m3_44 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="ParserContext.cs", label="AddIrregular(''child'', ''children'')", span="76-76"];
m3_45 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="ParserContext.cs", label="AddIrregular(''sex'', ''sexes'')", span="77-77"];
m3_46 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="ParserContext.cs", label="AddIrregular(''move'', ''moves'')", span="78-78"];
m3_47 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="ParserContext.cs", label="AddIrregular(''goose'', ''geese'')", span="79-79"];
m3_48 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="ParserContext.cs", label="AddIrregular(''alumna'', ''alumnae'')", span="80-80"];
m3_49 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="ParserContext.cs", label="AddUncountable(''equipment'')", span="82-82"];
m3_50 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="ParserContext.cs", label="AddUncountable(''information'')", span="83-83"];
m3_51 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="ParserContext.cs", label="AddUncountable(''rice'')", span="84-84"];
m3_52 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="ParserContext.cs", label="AddUncountable(''money'')", span="85-85"];
m3_53 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="ParserContext.cs", label="AddUncountable(''species'')", span="86-86"];
m3_54 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="ParserContext.cs", label="AddUncountable(''series'')", span="87-87"];
m3_55 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="ParserContext.cs", label="AddUncountable(''fish'')", span="88-88"];
m3_56 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="ParserContext.cs", label="AddUncountable(''sheep'')", span="89-89"];
m3_57 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="ParserContext.cs", label="AddUncountable(''deer'')", span="90-90"];
m3_58 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="ParserContext.cs", label="AddUncountable(''aircraft'')", span="91-91"];
m3_59 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="ParserContext.cs", label="Exit Humanizer.InflectorExtensions.InflectorExtensions()", span="29-29"];
m3_140 [cluster="string.Substring(int, int)", file="ParserContext.cs", label="Entry string.Substring(int, int)", span="0-0"];
m3_64 [cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", file="ParserContext.cs", label="Entry Humanizer.InflectorExtensions.Rule.Rule(string, string)", span="99-99"];
m3_65 [cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", file="ParserContext.cs", label="_regex = new Regex(pattern, RegexOptions.IgnoreCase)", span="101-101"];
m3_66 [cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", file="ParserContext.cs", label="_replacement = replacement", span="102-102"];
m3_67 [cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", file="ParserContext.cs", label="Exit Humanizer.InflectorExtensions.Rule.Rule(string, string)", span="99-99"];
m3_149 [cluster="Humanizer.InflectorExtensions.Hyphenate(string)", file="ParserContext.cs", label="Entry Humanizer.InflectorExtensions.Hyphenate(string)", span="269-269"];
m3_150 [cluster="Humanizer.InflectorExtensions.Hyphenate(string)", file="ParserContext.cs", label="return Dasherize(underscoredWord);", span="271-271"];
m3_151 [cluster="Humanizer.InflectorExtensions.Hyphenate(string)", file="ParserContext.cs", label="Exit Humanizer.InflectorExtensions.Hyphenate(string)", span="269-269"];
m3_74 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", file="ParserContext.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
m3_60 [cluster="Humanizer.InflectorExtensions.AddPlural(string, string)", file="ParserContext.cs", label="Entry Humanizer.InflectorExtensions.AddPlural(string, string)", span="127-127"];
m3_84 [cluster="Humanizer.InflectorExtensions.AddPlural(string, string)", file="ParserContext.cs", label="Plurals.Add(new Rule(rule, replacement))", span="129-129"];
m3_85 [cluster="Humanizer.InflectorExtensions.AddPlural(string, string)", file="ParserContext.cs", label="Exit Humanizer.InflectorExtensions.AddPlural(string, string)", span="127-127"];
m3_61 [cluster="Humanizer.InflectorExtensions.AddSingular(string, string)", file="ParserContext.cs", label="Entry Humanizer.InflectorExtensions.AddSingular(string, string)", span="132-132"];
m3_86 [cluster="Humanizer.InflectorExtensions.AddSingular(string, string)", file="ParserContext.cs", label="Singulars.Add(new Rule(rule, replacement))", span="134-134"];
m3_87 [cluster="Humanizer.InflectorExtensions.AddSingular(string, string)", file="ParserContext.cs", label="Exit Humanizer.InflectorExtensions.AddSingular(string, string)", span="132-132"];
m3_132 [cluster="lambda expression", file="ParserContext.cs", label="Entry lambda expression", span="228-228"];
m3_133 [cluster="lambda expression", file="ParserContext.cs", label="match.Groups[1].Value.ToUpper()", span="228-228"];
m3_134 [cluster="lambda expression", file="ParserContext.cs", label="Exit lambda expression", span="228-228"];
m3_124 [cluster="Humanizer.InflectorExtensions.Titleize(string)", file="ParserContext.cs", label="Entry Humanizer.InflectorExtensions.Titleize(string)", span="216-216"];
m3_125 [cluster="Humanizer.InflectorExtensions.Titleize(string)", file="ParserContext.cs", label="return input.Humanize(LetterCasing.Title);", span="218-218"];
m3_126 [cluster="Humanizer.InflectorExtensions.Titleize(string)", file="ParserContext.cs", label="Exit Humanizer.InflectorExtensions.Titleize(string)", span="216-216"];
m3_145 [cluster="Humanizer.InflectorExtensions.Dasherize(string)", file="ParserContext.cs", label="Entry Humanizer.InflectorExtensions.Dasherize(string)", span="259-259"];
m3_146 [cluster="Humanizer.InflectorExtensions.Dasherize(string)", file="ParserContext.cs", label="return underscoredWord.Replace('_', '-');", span="261-261"];
m3_147 [cluster="Humanizer.InflectorExtensions.Dasherize(string)", file="ParserContext.cs", label="Exit Humanizer.InflectorExtensions.Dasherize(string)", span="259-259"];
m3_136 [cluster="Humanizer.InflectorExtensions.Camelize(string)", file="ParserContext.cs", label="Entry Humanizer.InflectorExtensions.Camelize(string)", span="236-236"];
m3_137 [cluster="Humanizer.InflectorExtensions.Camelize(string)", file="ParserContext.cs", label="string word = Pascalize(input)", span="238-238"];
m3_138 [cluster="Humanizer.InflectorExtensions.Camelize(string)", file="ParserContext.cs", label="return word.Substring(0, 1).ToLower() + word.Substring(1);", span="239-239"];
m3_139 [cluster="Humanizer.InflectorExtensions.Camelize(string)", file="ParserContext.cs", label="Exit Humanizer.InflectorExtensions.Camelize(string)", span="236-236"];
m3_144 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, string)", file="ParserContext.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, string)", span="0-0"];
m3_62 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="ParserContext.cs", label="Entry Humanizer.InflectorExtensions.AddIrregular(string, string)", span="116-116"];
m3_76 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="ParserContext.cs", label="AddPlural(''('' + singular[0] + '')'' + singular.Substring(1) + ''$'', ''$1'' + plural.Substring(1))", span="118-118"];
m3_77 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="ParserContext.cs", label="AddSingular(''('' + plural[0] + '')'' + plural.Substring(1) + ''$'', ''$1'' + singular.Substring(1))", span="119-119"];
m3_78 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="ParserContext.cs", label="Exit Humanizer.InflectorExtensions.AddIrregular(string, string)", span="116-116"];
m3_128 [cluster="Humanizer.InflectorExtensions.Pascalize(string)", file="ParserContext.cs", label="Entry Humanizer.InflectorExtensions.Pascalize(string)", span="226-226"];
m3_129 [cluster="Humanizer.InflectorExtensions.Pascalize(string)", file="ParserContext.cs", label="return Regex.Replace(input, ''(?:^|_)(.)'', match => match.Groups[1].Value.ToUpper());", span="228-228"];
m3_130 [cluster="Humanizer.InflectorExtensions.Pascalize(string)", file="ParserContext.cs", label="Exit Humanizer.InflectorExtensions.Pascalize(string)", span="226-226"];
m3_148 [cluster="string.Replace(char, char)", file="ParserContext.cs", label="Entry string.Replace(char, char)", span="0-0"];
m3_63 [cluster="Humanizer.InflectorExtensions.AddUncountable(string)", file="ParserContext.cs", label="Entry Humanizer.InflectorExtensions.AddUncountable(string)", span="122-122"];
m3_80 [cluster="Humanizer.InflectorExtensions.AddUncountable(string)", file="ParserContext.cs", label="Uncountables.Add(word.ToLower())", span="124-124"];
m3_81 [cluster="Humanizer.InflectorExtensions.AddUncountable(string)", file="ParserContext.cs", label="Exit Humanizer.InflectorExtensions.AddUncountable(string)", span="122-122"];
m3_101 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="ParserContext.cs", label="Entry Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", span="171-171"];
m3_102 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="ParserContext.cs", label="plurality == Plurality.Singular", span="173-173"];
m3_103 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="ParserContext.cs", label="return word;", span="174-174"];
m3_104 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="ParserContext.cs", label="var result = ApplyRules(Singulars, word)", span="176-176"];
m3_105 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="ParserContext.cs", label="plurality == Plurality.Plural", span="178-178"];
m3_107 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="ParserContext.cs", label="var asPlural = ApplyRules(Plurals, word)", span="182-182"];
m3_109 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="ParserContext.cs", label="asPlural != word && word+''s'' != asPlural && asPluralAsSingular == word && result != word", span="184-184"];
m3_110 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="ParserContext.cs", label="return word;", span="185-185"];
m3_111 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="ParserContext.cs", label="return result ?? word;", span="187-187"];
m3_106 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="ParserContext.cs", label="return result;", span="179-179"];
m3_108 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="ParserContext.cs", label="var asPluralAsSingular = ApplyRules(Singulars, asPlural)", span="183-183"];
m3_112 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="ParserContext.cs", label="Exit Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", span="171-171"];
m3_82 [cluster="string.ToLower()", file="ParserContext.cs", label="Entry string.ToLower()", span="0-0"];
m3_88 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="ParserContext.cs", label="Entry Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", span="147-147"];
m3_89 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="ParserContext.cs", label="plurality == Plurality.Plural", span="149-149"];
m3_90 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="ParserContext.cs", label="return word;", span="150-150"];
m3_91 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="ParserContext.cs", label="var result = ApplyRules(Plurals, word)", span="152-152"];
m3_92 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="ParserContext.cs", label="plurality == Plurality.Singular", span="154-154"];
m3_94 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="ParserContext.cs", label="var asSingular = ApplyRules(Singulars, word)", span="157-157"];
m3_96 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="ParserContext.cs", label="asSingular != null && asSingular != word && asSingular + ''s'' != word && asSingularAsPlural == word && result != word", span="159-159"];
m3_97 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="ParserContext.cs", label="return word;", span="160-160"];
m3_93 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="ParserContext.cs", label="return result;", span="155-155"];
m3_98 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="ParserContext.cs", label="return result;", span="162-162"];
m3_95 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="ParserContext.cs", label="var asSingularAsPlural = ApplyRules(Plurals, asSingular)", span="158-158"];
m3_99 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="ParserContext.cs", label="Exit Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", span="147-147"];
m3_83 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ParserContext.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m3_135 [cluster="string.ToUpper()", file="ParserContext.cs", label="Entry string.ToUpper()", span="0-0"];
m3_68 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="ParserContext.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m3_127 [cluster="string.Humanize(Humanizer.LetterCasing)", file="ParserContext.cs", label="Entry string.Humanize(Humanizer.LetterCasing)", span="62-62"];
m3_79 [cluster="string.Substring(int)", file="ParserContext.cs", label="Entry string.Substring(int)", span="0-0"];
m3_100 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="ParserContext.cs", label="Entry Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", span="190-190"];
m3_113 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="ParserContext.cs", label="word == null", span="192-192"];
m3_115 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="ParserContext.cs", label="var result = word", span="195-195"];
m3_116 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="ParserContext.cs", label="!Uncountables.Contains(word.ToLower())", span="197-197"];
m3_117 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="ParserContext.cs", label="int i = rules.Count - 1", span="199-199"];
m3_119 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="ParserContext.cs", label="(result = rules[i].Apply(word)) != null", span="201-201"];
m3_114 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="ParserContext.cs", label="return null;", span="193-193"];
m3_121 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="ParserContext.cs", label="return result;", span="208-208"];
m3_118 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="ParserContext.cs", label="i >= 0", span="199-199"];
m3_120 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="ParserContext.cs", label="i--", span="199-199"];
m3_122 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="ParserContext.cs", label="Exit Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", span="190-190"];
m3_152 [file="ParserContext.cs", label="Humanizer.InflectorExtensions.Rule", span=""];
m8_0 [cluster="Humanizer.Localisation.RussianFormatter.GetResourceKey(string, int)", file="VerbsHelpTextFixture.cs", label="Entry Humanizer.Localisation.RussianFormatter.GetResourceKey(string, int)", span="7-7"];
m8_1 [cluster="Humanizer.Localisation.RussianFormatter.GetResourceKey(string, int)", file="VerbsHelpTextFixture.cs", label="var mod100 = number%100", span="9-9"];
m8_3 [cluster="Humanizer.Localisation.RussianFormatter.GetResourceKey(string, int)", file="VerbsHelpTextFixture.cs", label="var mod10 = number%10", span="12-12"];
m8_5 [cluster="Humanizer.Localisation.RussianFormatter.GetResourceKey(string, int)", file="VerbsHelpTextFixture.cs", label="return resourceKey + SingularPostfix;", span="15-15"];
m8_7 [cluster="Humanizer.Localisation.RussianFormatter.GetResourceKey(string, int)", file="VerbsHelpTextFixture.cs", label="return resourceKey + PaucalPostfix;", span="18-18"];
m8_8 [cluster="Humanizer.Localisation.RussianFormatter.GetResourceKey(string, int)", file="VerbsHelpTextFixture.cs", label="return resourceKey;", span="21-21"];
m8_2 [cluster="Humanizer.Localisation.RussianFormatter.GetResourceKey(string, int)", file="VerbsHelpTextFixture.cs", label="mod100/10 != 1", span="10-10"];
m8_4 [cluster="Humanizer.Localisation.RussianFormatter.GetResourceKey(string, int)", file="VerbsHelpTextFixture.cs", label="mod10 == 1", span="14-14"];
m8_6 [cluster="Humanizer.Localisation.RussianFormatter.GetResourceKey(string, int)", file="VerbsHelpTextFixture.cs", label="mod10 > 1 && mod10 < 5", span="17-17"];
m8_9 [cluster="Humanizer.Localisation.RussianFormatter.GetResourceKey(string, int)", file="VerbsHelpTextFixture.cs", label="Exit Humanizer.Localisation.RussianFormatter.GetResourceKey(string, int)", span="7-7"];
m1_73 -> m1_78  [color=darkseagreen4, key=1, label=requiredRulesAllMet, style=dashed];
m1_74 -> m1_76  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_77 -> m1_78  [color=darkseagreen4, key=1, label=requiredRulesAllMet, style=dashed];
m1_28 -> m1_30  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>", style=dashed];
m1_28 -> m1_32  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_29 -> m1_36  [color=darkseagreen4, key=1, label=map, style=dashed];
m1_30 -> m1_32  [color=darkseagreen4, key=1, label=verb, style=dashed];
m1_30 -> m1_33  [color=darkseagreen4, key=1, label=verb, style=dashed];
m1_52 -> m1_57  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_52 -> m1_58  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_52 -> m1_63  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m1_52 -> m1_65  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m1_59 -> m1_67  [color=darkseagreen4, key=1, label=parserState, style=dashed];
m1_62 -> m1_67  [color=darkseagreen4, key=1, label=error, style=dashed];
m1_56 -> m1_58  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_82 -> m1_84  [color=darkseagreen4, key=1, label=option, style=dashed];
m1_85 -> m1_87  [color=darkseagreen4, key=1, label=info, style=dashed];
m1_91 -> m1_94  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OptionInfo", style=dashed];
m1_92 -> m1_94  [color=darkseagreen4, key=1, label=setName, style=dashed];
m1_92 -> m1_95  [color=darkseagreen4, key=1, label=setName, style=dashed];
m1_10 -> m1_14  [color=darkseagreen4, key=1, label=list, style=dashed];
m1_13 -> m1_23  [color=darkseagreen4, key=1, label=map, style=dashed];
m1_14 -> m1_17  [color=darkseagreen4, key=1, label=pair, style=dashed];
m1_105 -> m1_2  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OptionMap", style=dashed];
m1_105 -> m1_5  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OptionMap", style=dashed];
m1_105 -> m1_43  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OptionMap", style=dashed];
m1_105 -> m1_48  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OptionMap", style=dashed];
m1_105 -> m1_49  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OptionMap", style=dashed];
m1_105 -> m1_74  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OptionMap", style=dashed];
m1_105 -> m1_76  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OptionMap", style=dashed];
m1_105 -> m1_80  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OptionMap", style=dashed];
m1_105 -> m1_82  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OptionMap", style=dashed];
m1_105 -> m1_84  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OptionMap", style=dashed];
m1_105 -> m1_85  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OptionMap", style=dashed];
m1_105 -> m1_87  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OptionMap", style=dashed];
m1_105 -> m1_93  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OptionMap", style=dashed];
m1_105 -> m1_94  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OptionMap", style=dashed];
m1_105 -> m1_95  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OptionMap", style=dashed];
m1_106 -> m1_103  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OptionMap.MutuallyExclusiveInfo", style=dashed];
m2_116 -> m2_181  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_116 -> m2_182  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m2_116 -> m2_183  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m2_116 -> m2_185  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m2_116 -> m2_186  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m2_181 -> m2_183  [color=darkseagreen4, key=1, label=arg, style=dashed];
m2_181 -> m2_186  [color=darkseagreen4, key=1, label=arg, style=dashed];
m2_56 -> m2_58  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_56 -> m2_59  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_56 -> m2_64  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_56 -> m2_65  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m2_56 -> m2_67  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m2_77 -> m2_79  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_77 -> m2_80  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_77 -> m2_83  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_81 -> m2_83  [color=darkseagreen4, key=1, label=pair, style=dashed];
m2_82 -> m2_84  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m2_28 -> m2_109  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_103 -> m2_106  [color=darkseagreen4, key=1, label=pair, style=dashed];
m2_103 -> m2_109  [color=darkseagreen4, key=1, label=pair, style=dashed];
m2_126 -> m2_137  [color=darkseagreen4, key=1, label=argument, style=dashed];
m2_23 -> m2_25  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_23 -> m2_26  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_176 -> m2_193  [color=darkseagreen4, key=1, label="CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>", style=dashed];
m2_176 -> m2_199  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_176 -> m2_200  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_176 -> m2_201  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_197 -> m2_199  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m2_197 -> m2_200  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m2_42 -> m2_44  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_42 -> m2_45  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_42 -> m2_46  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_42 -> m2_47  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m2_42 -> m2_49  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m2_88 -> m2_92  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_88 -> m2_93  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_88 -> m2_95  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.ParsingError>", style=dashed];
m2_91 -> m2_93  [color=darkseagreen4, key=1, label=property, style=dashed];
m2_94 -> m2_96  [color=darkseagreen4, key=1, label=parserState, style=dashed];
m2_4 -> m2_6  [color=darkseagreen4, key=1, label="System.Action<CommandLine.Parser.ParserConfigurator>", style=dashed];
m2_29 -> m2_31  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_29 -> m2_32  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_174 -> m2_208  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_174 -> m2_209  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_174 -> m2_210  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_22 -> m2_229  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_235 -> m2_20  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m2_235 -> m2_26  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m2_235 -> m2_45  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m2_235 -> m2_46  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m2_235 -> m2_64  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m2_235 -> m2_73  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m2_235 -> m2_74  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m2_235 -> m2_201  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m2_235 -> m2_227  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m3_69 -> m3_72  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_62 -> m3_77  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_129 -> m3_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_101 -> m3_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_101 -> m3_105  [color=darkseagreen4, key=1, label="Humanizer.Plurality", style=dashed];
m3_101 -> m3_109  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_101 -> m3_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_101 -> m3_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_104 -> m3_106  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_104 -> m3_109  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_104 -> m3_111  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_107 -> m3_109  [color=darkseagreen4, key=1, label=asPlural, style=dashed];
m3_88 -> m3_90  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_88 -> m3_92  [color=darkseagreen4, key=1, label="Humanizer.Plurality", style=dashed];
m3_88 -> m3_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_88 -> m3_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_91 -> m3_93  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_91 -> m3_96  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_91 -> m3_98  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_94 -> m3_96  [color=darkseagreen4, key=1, label=asSingular, style=dashed];
m3_100 -> m3_116  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_115 -> m3_121  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_117 -> m3_120  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_120 -> m3_120  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_152 -> m3_70  [color=darkseagreen4, key=1, label="Humanizer.InflectorExtensions.Rule", style=dashed];
m3_152 -> m3_72  [color=darkseagreen4, key=1, label="Humanizer.InflectorExtensions.Rule", style=dashed];
m8_0 -> m8_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_0 -> m8_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_0 -> m8_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_3 -> m8_6  [color=darkseagreen4, key=1, label=mod10, style=dashed];
}
