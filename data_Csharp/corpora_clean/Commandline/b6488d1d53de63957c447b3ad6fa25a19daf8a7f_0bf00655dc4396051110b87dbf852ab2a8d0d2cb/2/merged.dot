digraph  {
n0 [label="Entry CommandLine.Core.ArgumentsExtension.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11", cluster="CommandLine.Core.ArgumentsExtension.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)"];
n1 [label="preprocessorLookup.Empty()", span="17-17", cluster="CommandLine.Core.ArgumentsExtension.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", color=red, community=0];
n3 [label="var errors = preprocessorLookup.First()(arguments)", span="21-21", cluster="CommandLine.Core.ArgumentsExtension.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", color=red, community=0];
n4 [label="return errors.Any()\r\n                ? errors\r\n                : arguments.Preprocess(preprocessorLookup.Skip(1));", span="22-24", cluster="CommandLine.Core.ArgumentsExtension.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", color=red, community=1];
n2 [label="return Enumerable.Empty<Error>();", span="19-19", cluster="CommandLine.Core.ArgumentsExtension.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", color=red, community=0];
n6 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31", cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()"];
n8 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()"];
n9 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)"];
n5 [label="Exit CommandLine.Core.ArgumentsExtension.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11", cluster="CommandLine.Core.ArgumentsExtension.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)"];
n7 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()"];
n10 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()"];
n11 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)"];
n12 [label="Entry System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11", cluster="System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)"];
m0_2 [label="Exit CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", span="11-11", cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="EnumerableExtensions.cs"];
m0_3 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="EnumerableExtensions.cs"];
m0_0 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", span="11-11", cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="EnumerableExtensions.cs"];
m0_1 [label="return type\r\n#if NETSTANDARD1_5\r\n                .GetTypeInfo()\r\n#endif\r\n                .GetGenericArguments()[0];", span="13-17", cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="EnumerableExtensions.cs", color=green, community=0];
m0_17 [label="Entry System.Type.InstanceProperty(string, object)", span="213-213", cluster="System.Type.InstanceProperty(string, object)", file="EnumerableExtensions.cs"];
m0_13 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="36-36", cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="EnumerableExtensions.cs"];
m0_14 [label="return typeof(FSharpOption<>)\r\n                .MakeGenericType(GetUnderlyingType(value.GetType()))\r\n                .InstanceProperty(\r\n                    ''Value'', value);", span="38-41", cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="EnumerableExtensions.cs"];
m0_15 [label="Exit CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="36-36", cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="EnumerableExtensions.cs"];
m0_18 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="44-44", cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="EnumerableExtensions.cs"];
m0_19 [label="return (bool)typeof(FSharpOption<>)\r\n                .MakeGenericType(GetUnderlyingType(value.GetType()))\r\n                .StaticMethod(\r\n                    ''get_IsSome'', value);", span="46-49", cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="EnumerableExtensions.cs"];
m0_20 [label="Exit CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="44-44", cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="EnumerableExtensions.cs"];
m0_16 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="EnumerableExtensions.cs"];
m0_4 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="20-20", cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="EnumerableExtensions.cs"];
m0_5 [label="return typeof(FSharpOption<>)\r\n                    .MakeGenericType(type)\r\n                    .StaticMethod(\r\n                        ''Some'', value);", span="22-25", cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="EnumerableExtensions.cs"];
m0_12 [label="Entry System.Type.StaticProperty(string)", span="198-198", cluster="System.Type.StaticProperty(string)", file="EnumerableExtensions.cs"];
m0_6 [label="Exit CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="20-20", cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="EnumerableExtensions.cs"];
m0_9 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="28-28", cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="EnumerableExtensions.cs"];
m0_10 [label="return typeof(FSharpOption<>)\r\n                    .MakeGenericType(type)\r\n                    .StaticProperty(\r\n                        ''None'');", span="30-33", cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="EnumerableExtensions.cs"];
m0_11 [label="Exit CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="28-28", cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="EnumerableExtensions.cs"];
m0_7 [label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])", file="EnumerableExtensions.cs"];
m0_8 [label="Entry System.Type.StaticMethod(string, params object[])", span="183-183", cluster="System.Type.StaticMethod(string, params object[])", file="EnumerableExtensions.cs"];
n0 -> n1  [key=0, style=solid, color=red];
n0 -> n3  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<string>"];
n0 -> n4  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<string>"];
n1 -> n2  [key=0, style=solid, color=red];
n1 -> n3  [key=0, style=solid, color=red];
n1 -> n6  [key=2, style=dotted, color=red];
n3 -> n4  [key=0, style=solid, color=red];
n3 -> n8  [key=2, style=dotted, color=red];
n3 -> n9  [key=2, style=dotted, color=red];
n4 -> n5  [key=0, style=solid, color=red];
n4 -> n10  [key=2, style=dotted, color=red];
n4 -> n11  [key=2, style=dotted, color=red];
n4 -> n12  [key=2, style=dotted, color=red];
n2 -> n5  [key=0, style=solid, color=red];
n2 -> n7  [key=2, style=dotted, color=red];
n5 -> n0  [key=0, style=bold, color=blue];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_3 -> m0_2  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_3  [key=2, style=dotted, color=green];
m0_13 -> m0_14  [key=0, style=solid];
m0_14 -> m0_1  [key=3, color=green, style=bold, label="Parameter variable System.StringComparer nameComparer"];
m0_14 -> m0_0  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_16  [key=2, style=dotted];
m0_14 -> m0_7  [key=2, style=dotted];
m0_14 -> m0_17  [key=2, style=dotted];
m0_14 -> m0_5  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>> tokenizer"];
m0_15 -> m0_13  [key=0, style=bold, color=blue];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_10  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<TSource> source"];
m0_19 -> m0_0  [key=2, style=dotted];
m0_19 -> m0_19  [key=3, color=darkorchid, style=bold, label="Local variable int iterations"];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_16  [key=2, style=dotted];
m0_19 -> m0_7  [key=2, style=dotted];
m0_19 -> m0_8  [key=2, style=dotted];
m0_20 -> m0_18  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_4  [key=0, style=bold, color=blue];
m0_5 -> m0_7  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_8  [key=2, style=dotted];
m0_6 -> m0_4  [key=0, style=bold, color=blue];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_7  [key=2, style=dotted];
m0_10 -> m0_18  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<TSource> AssertCountImpl"];
m0_10 -> m0_10  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<TSource> AssertCountImpl"];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [key=2, style=dotted];
m0_11 -> m0_9  [key=0, style=bold, color=blue];
}
