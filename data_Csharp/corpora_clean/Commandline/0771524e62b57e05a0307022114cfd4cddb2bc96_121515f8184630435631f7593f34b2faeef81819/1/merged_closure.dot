digraph  {
n13 [label="CommandLine.Tests.ArgumentParserFixture", span=""];
n0 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", label="Entry CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", span="40-40"];
n1 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", label="var ae = new StringArrayEnumerator(new string[] { ''--optarr'', ''one'', ''two'', ''--plain'', ''3'' })", span="42-42"];
n2 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", label="ae.MoveNext()", span="44-44"];
n7 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1335-1335"];
n3 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", label="var items = ArgumentParser.PublicWrapperOfGetNextInputValues(ae)", span="46-46"];
n5 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", label="ae.Current.Should().Equal(''two'')", span="49-49"];
n8 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", label="Entry CommandLine.StringArrayEnumerator.MoveNext()", span="1390-1390"];
n4 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'' }, items)", span="48-48"];
n9 [cluster="Unk.PublicWrapperOfGetNextInputValues", label="Entry Unk.PublicWrapperOfGetNextInputValues", span=""];
n10 [cluster="Unk.ElementsShouldBeEqual", label="Entry Unk.ElementsShouldBeEqual", span=""];
n6 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", label="Exit CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", span="40-40"];
n11 [cluster="Unk.Should", label="Entry Unk.Should", span=""];
n12 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
m1_8 [cluster="CommandLine.Tests.AttributesFixture.OptionListShortNameCanNotExceedOneCharacter()", file="AttributesFixture.cs", label="Entry CommandLine.Tests.AttributesFixture.OptionListShortNameCanNotExceedOneCharacter()", span="57-57"];
m1_10 [cluster="CommandLine.Tests.AttributesFixture.OptionListShortNameCanNotExceedOneCharacter()", file="AttributesFixture.cs", label="Exit CommandLine.Tests.AttributesFixture.OptionListShortNameCanNotExceedOneCharacter()", span="57-57"];
m1_15 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="AttributesFixture.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="136-136"];
m1_16 [cluster="CommandLine.Tests.AttributesFixture.ShortNameOfBaseOptionDerivedTypeCanNotExceedOneCharacter()", color=green, community=0, file="AttributesFixture.cs", label="Entry CommandLine.Tests.AttributesFixture.ShortNameOfBaseOptionDerivedTypeCanNotExceedOneCharacter()", prediction=0, span="71-71"];
m1_7 [cluster="CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(char, string)", file="AttributesFixture.cs", label="Exit CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(char, string)", span="46-46"];
m1_18 [cluster="CommandLine.Tests.AttributesFixture.ShortNameOfBaseOptionDerivedTypeCanNotExceedOneCharacter()", file="AttributesFixture.cs", label="Exit CommandLine.Tests.AttributesFixture.ShortNameOfBaseOptionDerivedTypeCanNotExceedOneCharacter()", span="71-71"];
m1_19 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName()", color=green, community=0, file="AttributesFixture.cs", label="Entry CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName()", prediction=1, span="78-78"];
m1_38 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)", file="AttributesFixture.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)", span="1525-1525"];
m1_36 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="AttributesFixture.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string)", span="1281-1281"];
m1_12 [cluster="CommandLine.Tests.AttributesFixture.ShortNameWithLineTerminatorThrowsException_2()", file="AttributesFixture.cs", label="Entry CommandLine.Tests.AttributesFixture.ShortNameWithLineTerminatorThrowsException_2()", span="91-91"];
m1_13 [cluster="CommandLine.Tests.AttributesFixture.ShortNameWithLineTerminatorThrowsException_2()", color=green, community=0, file="AttributesFixture.cs", label="new OptionAttribute('\r')", prediction=2, span="93-93"];
m1_14 [cluster="CommandLine.Tests.AttributesFixture.ShortNameWithLineTerminatorThrowsException_2()", file="AttributesFixture.cs", label="Exit CommandLine.Tests.AttributesFixture.ShortNameWithLineTerminatorThrowsException_2()", span="91-91"];
m1_11 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="AttributesFixture.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char)", span="1270-1270"];
m1_22 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName()", color=green, community=0, file="AttributesFixture.cs", label="new OptionAttribute('o', null)", prediction=3, span="114-114"];
m1_23 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName()", color=green, community=0, file="AttributesFixture.cs", label="new OptionListAttribute('l', null)", prediction=4, span="115-115"];
m1_24 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName()", color=green, community=0, file="AttributesFixture.cs", label="Exit CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName()", prediction=5, span="78-78"];
m1_25 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", color=green, community=0, file="AttributesFixture.cs", label="Entry CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", prediction=6, span="87-87"];
m1_37 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string)", file="AttributesFixture.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string)", span="1388-1388"];
m1_4 [cluster="CommandLine.Tests.AttributesFixture.OptionShortNameCanNotExceedOneCharacter()", file="AttributesFixture.cs", label="Entry CommandLine.Tests.AttributesFixture.OptionShortNameCanNotExceedOneCharacter()", span="50-50"];
m1_6 [cluster="CommandLine.Tests.AttributesFixture.OptionShortNameCanNotExceedOneCharacter()", color=green, community=0, file="AttributesFixture.cs", label="Exit CommandLine.Tests.AttributesFixture.OptionShortNameCanNotExceedOneCharacter()", prediction=7, span="50-50"];
m1_31 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", color=green, community=0, file="AttributesFixture.cs", label="CommandLine.Tests.AttributesFixture.CustomOptionAttribute", prediction=7, span=""];
m1_32 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", color=green, community=0, file="AttributesFixture.cs", label="new OptionListAttribute(''option-list-attr'')", prediction=9, span="124-124"];
m1_33 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", color=green, community=0, file="AttributesFixture.cs", label="new HelpOptionAttribute(''help-attr'')", prediction=10, span="125-125"];
m1_34 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", color=green, community=0, file="AttributesFixture.cs", label="new CustomOptionAttribute(''custom-attr'')", prediction=11, span="126-126"];
m1_30 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", file="AttributesFixture.cs", label="Exit CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", span="87-87"];
m1_0 [cluster="CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(string)", file="AttributesFixture.cs", label="Entry CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(string)", span="40-40"];
m1_1 [cluster="CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(string)", color=green, community=0, file="AttributesFixture.cs", label="ShortName = null", prediction=12, span="42-42"];
m1_2 [cluster="CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(string)", color=green, community=0, file="AttributesFixture.cs", label="LongName = longName", prediction=13, span="43-43"];
m1_3 [cluster="CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(string)", file="AttributesFixture.cs", label="Exit CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(string)", span="40-40"];
m2_7 [cluster="Unk.Should", file="BaseFixture.cs", label="Entry Unk.Should", span=""];
m2_9 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48"];
m2_10 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="expected.Length.Should().Equal(actual.Count)", span="50-50"];
m2_12 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="i < expected.Length", span="51-51"];
m2_13 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="expected[i].Should().Equal(actual[i])", span="53-53"];
m2_11 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="int i = 0", span="51-51"];
m2_14 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="i++", span="51-51"];
m2_15 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="Exit CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48"];
m2_0 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="39-39"];
m2_1 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="expected.Length.Should().Equal(actual.Length)", span="41-41"];
m2_3 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="i < expected.Length", span="42-42"];
m2_4 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="expected[i].Should().Equal(actual[i])", span="44-44"];
m2_2 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="int i = 0", span="42-42"];
m2_5 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="i++", span="42-42"];
m2_6 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="Exit CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="39-39"];
m3_0 [cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="BooleanSetOptions.cs", label="Entry CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", span="35-35"];
m3_1 [cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="BooleanSetOptions.cs", label="NonBooleanValue = 0", span="37-37"];
m3_2 [cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="BooleanSetOptions.cs", label="Exit CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", span="35-35"];
m3_3 [file="BooleanSetOptions.cs", label="CommandLine.Tests.Mocks.BooleanSetOptions", span=""];
m4_637 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="CommandLine.cs", label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="1565-1565"];
m4_640 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="CommandLine.cs", label="return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", span="1567-1567"];
m4_641 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="CommandLine.cs", label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="1565-1565"];
m4_659 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1709-1709"];
m4_660 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1709-1709"];
m4_504 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="CommandLine.cs", label="Entry CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="1124-1124"];
m4_505 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=green, community=0, file="CommandLine.cs", label="Pair<PropertyInfo, TAttribute> found = null", prediction=14, span="1127-1127"];
m4_506 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=green, community=0, file="CommandLine.cs", label="target == null", prediction=15, span="1128-1128"];
m4_518 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=green, community=0, file="CommandLine.cs", label="return found;", prediction=14, span="1148-1148"];
m4_507 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=green, community=0, file="CommandLine.cs", label="return null;", prediction=17, span="1128-1128"];
m4_508 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="CommandLine.cs", label="var propertiesInfo = target.GetType().GetProperties()", span="1129-1129"];
m4_515 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=green, community=0, file="CommandLine.cs", label="optionAttr != null && string.CompareOrdinal(uniqueName, optionAttr.UniqueName) == 0", prediction=15, span="1140-1140"];
m4_514 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=green, community=0, file="CommandLine.cs", label="var optionAttr = (TAttribute) attribute", prediction=19, span="1139-1139"];
m4_516 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=green, community=0, file="CommandLine.cs", label="found = new Pair<PropertyInfo, TAttribute>(property, (TAttribute) attribute)", prediction=14, span="1142-1142"];
m4_509 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=green, community=0, file="CommandLine.cs", label=propertiesInfo, prediction=21, span="1131-1131"];
m4_510 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=green, community=0, file="CommandLine.cs", label="property != null && (property.CanRead && property.CanWrite)", prediction=22, span="1133-1133"];
m4_512 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=green, community=0, file="CommandLine.cs", label="setMethod != null && !setMethod.IsStatic", prediction=23, span="1136-1136"];
m4_511 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=green, community=0, file="CommandLine.cs", label="var setMethod = property.GetSetMethod()", prediction=24, span="1135-1135"];
m4_513 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=green, community=0, file="CommandLine.cs", label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", prediction=25, span="1138-1138"];
m4_517 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=green, community=0, file="CommandLine.cs", label="return found;", prediction=26, span="1143-1143"];
m4_519 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="CommandLine.cs", label="Exit CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="1124-1124"];
m4_716 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1971-1971"];
m4_720 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="return DoParseArguments(args, options);", span="1977-1977"];
m4_717 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Assumes.NotNull(args, ''args'')", span="1973-1973"];
m4_718 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Assumes.NotNull(options, ''options'')", span="1974-1974"];
m4_719 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="_settings.HelpWriter = helpWriter", span="1976-1976"];
m4_721 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1971-1971"];
m4_69 [cluster="CommandLine.Internal.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Internal.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.Internal.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Internal.OptionInfo)", span="162-162"];
m4_70 [cluster="CommandLine.Internal.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Internal.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="!option.IsAttributeArrayCompatible", prediction=27, span="164-164"];
m4_71 [cluster="CommandLine.Internal.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Internal.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="throw new CommandLineParserException();", prediction=28, span="166-166"];
m4_72 [cluster="CommandLine.Internal.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Internal.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.Internal.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Internal.OptionInfo)", span="162-162"];
m4_584 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1746-1746"];
m4_665 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1746-1746"];
m4_530 [cluster="decimal.TryParse(string, out decimal)", file="CommandLine.cs", label="Entry decimal.TryParse(string, out decimal)", span="0-0"];
m4_472 [cluster="System.Type.GetMethods()", file="CommandLine.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m4_531 [cluster="CommandLine.Internal.StringUtil.IsWhiteSpace(int)", file="CommandLine.cs", label="Entry CommandLine.Internal.StringUtil.IsWhiteSpace(int)", span="1170-1170"];
m4_532 [cluster="CommandLine.Internal.StringUtil.IsWhiteSpace(int)", color=green, community=0, file="CommandLine.cs", label="return @char == 0x09 || @char == 0x0B || @char == 0x0C || @char == 0x20 || @char == 0xA0 ||\r\n                    @char == 0x1680 || @char == 0x180E || (@char >= 8192 && @char <= 8202) || @char == 0x202F ||\r\n                    @char == 0x205F || @char == 0x3000 || @char == 0xFEFF;", prediction=29, span="1172-1174"];
m4_533 [cluster="CommandLine.Internal.StringUtil.IsWhiteSpace(int)", file="CommandLine.cs", label="Exit CommandLine.Internal.StringUtil.IsWhiteSpace(int)", span="1170-1170"];
m4_583 [cluster="System.Type.IsAssignableFrom(System.Type)", file="CommandLine.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m4_382 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", span="883-883"];
m4_383 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="var setName = option.MutuallyExclusiveSet", prediction=30, span="885-885"];
m4_384 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="!_mutuallyExclusiveSetMap.ContainsKey(setName)", prediction=30, span="886-886"];
m4_385 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="_mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", prediction=30, span="888-888"];
m4_386 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="_mutuallyExclusiveSetMap[setName].IncrementOccurrence()", prediction=30, span="890-890"];
m4_387 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", span="883-883"];
m4_2 [cluster="CommandLine.Internal.IArgumentEnumerator.MoveNext()", file="CommandLine.cs", label="Entry CommandLine.Internal.IArgumentEnumerator.MoveNext()", span="72-72"];
m4_3 [cluster="CommandLine.Internal.IArgumentEnumerator.MoveNext()", file="CommandLine.cs", label="Exit CommandLine.Internal.IArgumentEnumerator.MoveNext()", span="72-72"];
m4_266 [cluster="CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", file="CommandLine.cs", label="Entry CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", span="1151-1151"];
m4_521 [cluster="CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", color=green, community=0, file="CommandLine.cs", label="return type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>);", prediction=34, span="1153-1153"];
m4_522 [cluster="CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", file="CommandLine.cs", label="Exit CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", span="1151-1151"];
m4_440 [cluster="string.IsNullOrEmpty(string)", file="CommandLine.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m4_681 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1818-1818"];
m4_682 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLine.cs", label="CaseSensitive = caseSensitive", span="1820-1820"];
m4_683 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLine.cs", label="MutuallyExclusive = mutuallyExclusive", span="1821-1821"];
m4_684 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1818-1818"];
m4_615 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char)", file="CommandLine.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(char)", span="1513-1513"];
m4_616 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char)", color=green, community=0, file="CommandLine.cs", label="ShortName = shortName", prediction=35, span="1515-1515"];
m4_617 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char)", color=green, community=0, file="CommandLine.cs", label="LongName = null", prediction=36, span="1516-1516"];
m4_618 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char)", file="CommandLine.cs", label="HelpText = DefaultHelpText", span="1517-1517"];
m4_619 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char)", file="CommandLine.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(char)", span="1513-1513"];
m4_418 [cluster="CommandLine.Internal.TargetWrapper.TargetWrapper(object)", file="CommandLine.cs", label="Entry CommandLine.Internal.TargetWrapper.TargetWrapper(object)", span="964-964"];
m4_419 [cluster="CommandLine.Internal.TargetWrapper.TargetWrapper(object)", color=green, community=0, file="CommandLine.cs", label="_target = target", prediction=37, span="966-966"];
m4_420 [cluster="CommandLine.Internal.TargetWrapper.TargetWrapper(object)", color=green, community=0, file="CommandLine.cs", label="_vla = ValueListAttribute.GetAttribute(_target)", prediction=38, span="967-967"];
m4_421 [cluster="CommandLine.Internal.TargetWrapper.TargetWrapper(object)", color=green, community=0, file="CommandLine.cs", label=IsValueListDefined, prediction=39, span="968-968"];
m4_422 [cluster="CommandLine.Internal.TargetWrapper.TargetWrapper(object)", color=green, community=0, file="CommandLine.cs", label="_valueList = ValueListAttribute.GetReference(_target)", prediction=40, span="970-970"];
m4_423 [cluster="CommandLine.Internal.TargetWrapper.TargetWrapper(object)", file="CommandLine.cs", label="Exit CommandLine.Internal.TargetWrapper.TargetWrapper(object)", span="964-964"];
m4_625 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char, string)", file="CommandLine.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(char, string)", span="1538-1538"];
m4_626 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char, string)", color=green, community=0, file="CommandLine.cs", label="ShortName = shortName", prediction=41, span="1540-1540"];
m4_627 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char, string)", color=green, community=0, file="CommandLine.cs", label="LongName = longName", prediction=42, span="1541-1541"];
m4_628 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char, string)", color=green, community=0, file="CommandLine.cs", label="HelpText = DefaultHelpText", prediction=43, span="1542-1542"];
m4_629 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char, string)", file="CommandLine.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(char, string)", span="1538-1538"];
m4_690 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", span="1848-1848"];
m4_691 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="CaseSensitive = caseSensitive", span="1850-1850"];
m4_692 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="MutuallyExclusive = mutuallyExclusive", span="1851-1851"];
m4_693 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="HelpWriter = helpWriter", span="1852-1852"];
m4_694 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="IgnoreUnknownArguments = ignoreUnknownArguments", span="1853-1853"];
m4_695 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", span="1848-1848"];
m4_86 [cluster="CommandLine.Internal.OneCharStringEnumerator.MoveNext()", file="CommandLine.cs", label="Entry CommandLine.Internal.OneCharStringEnumerator.MoveNext()", span="219-219"];
m4_87 [cluster="CommandLine.Internal.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="_index < (_data.Length - 1)", prediction=44, span="221-221"];
m4_88 [cluster="CommandLine.Internal.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="_index++", prediction=44, span="223-223"];
m4_91 [cluster="CommandLine.Internal.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="_index = _data.Length", prediction=46, span="227-227"];
m4_89 [cluster="CommandLine.Internal.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="_currentElement = _data.Substring(_index, 1)", prediction=47, span="224-224"];
m4_92 [cluster="CommandLine.Internal.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=48, span="228-228"];
m4_90 [cluster="CommandLine.Internal.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=49, span="225-225"];
m4_93 [cluster="CommandLine.Internal.OneCharStringEnumerator.MoveNext()", file="CommandLine.cs", label="Exit CommandLine.Internal.OneCharStringEnumerator.MoveNext()", span="219-219"];
m4_537 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="CommandLine.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char)", span="1270-1270"];
m4_538 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", color=green, community=0, file="CommandLine.cs", label="_uniqueName = new string(shortName, 1)", prediction=50, span="1272-1272"];
m4_539 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", color=green, community=0, file="CommandLine.cs", label="ShortName = shortName", prediction=51, span="1273-1273"];
m4_540 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="CommandLine.cs", label="LongName = null", span="1274-1274"];
m4_541 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="CommandLine.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(char)", span="1270-1270"];
m4_124 [cluster="CommandLine.Internal.StringArrayEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Entry CommandLine.Internal.StringArrayEnumerator.GetRemainingFromNext()", span="301-301"];
m4_125 [cluster="CommandLine.Internal.StringArrayEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs", label="throw new NotSupportedException();", prediction=52, span="303-303"];
m4_126 [cluster="CommandLine.Internal.StringArrayEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Exit CommandLine.Internal.StringArrayEnumerator.GetRemainingFromNext()", span="301-301"];
m4_405 [cluster="CommandLine.Internal.Pair<TLeft, TRight>.GetHashCode()", file="CommandLine.cs", label="Entry CommandLine.Internal.Pair<TLeft, TRight>.GetHashCode()", span="939-939"];
m4_406 [cluster="CommandLine.Internal.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, file="CommandLine.cs", label="int leftHash = (_left == null ? 0 : _left.GetHashCode())", prediction=53, span="941-941"];
m4_407 [cluster="CommandLine.Internal.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, file="CommandLine.cs", label="int rightHash = (_right == null ? 0 : _right.GetHashCode())", prediction=54, span="942-942"];
m4_408 [cluster="CommandLine.Internal.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, file="CommandLine.cs", label="return leftHash ^ rightHash;", prediction=53, span="944-944"];
m4_409 [cluster="CommandLine.Internal.Pair<TLeft, TRight>.GetHashCode()", file="CommandLine.cs", label="Exit CommandLine.Internal.Pair<TLeft, TRight>.GetHashCode()", span="939-939"];
m4_107 [cluster="System.NotSupportedException.NotSupportedException()", file="CommandLine.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m4_685 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1832-1832"];
m4_686 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="CaseSensitive = caseSensitive", span="1834-1834"];
m4_687 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="MutuallyExclusive = mutuallyExclusive", span="1835-1835"];
m4_688 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="HelpWriter = helpWriter", span="1836-1836"];
m4_689 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1832-1832"];
m4_30 [cluster="CommandLine.Internal.LongOptionParser.LongOptionParser(bool)", file="CommandLine.cs", label="Entry CommandLine.Internal.LongOptionParser.LongOptionParser(bool)", span="323-323"];
m4_135 [cluster="CommandLine.Internal.LongOptionParser.LongOptionParser(bool)", color=green, community=0, file="CommandLine.cs", label="_ignoreUnkwnownArguments = ignoreUnkwnownArguments", prediction=56, span="325-325"];
m4_136 [cluster="CommandLine.Internal.LongOptionParser.LongOptionParser(bool)", file="CommandLine.cs", label="Exit CommandLine.Internal.LongOptionParser.LongOptionParser(bool)", span="323-323"];
m4_182 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs", label="Entry CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="577-577"];
m4_269 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="Type elementType = _property.PropertyType.GetElementType()", prediction=57, span="579-579"];
m4_270 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="Array array = Array.CreateInstance(elementType, values.Count)", prediction=57, span="580-580"];
m4_274 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="array.SetValue(Convert.ChangeType(values[i], elementType, Thread.CurrentThread.CurrentCulture), i)", prediction=57, span="588-588"];
m4_271 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="int i = 0", prediction=57, span="582-582"];
m4_272 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="i < array.Length", prediction=57, span="582-582"];
m4_275 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="_property.SetValue(options, array, null)", prediction=57, span="589-589"];
m4_273 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label=_setValueLock, prediction=57, span="586-586"];
m4_276 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label=FormatException, prediction=64, span="592-592"];
m4_278 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="i++", prediction=57, span="582-582"];
m4_279 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=66, span="597-597"];
m4_277 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=67, span="594-594"];
m4_280 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs", label="Exit CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="577-577"];
m4_265 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="CommandLine.cs", label="Entry CommandLine.Internal.OptionInfo.SetValueList(string, object)", span="654-654"];
m4_319 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="int i = 0", prediction=68, span="661-661"];
m4_315 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label=_setValueLock, prediction=57, span="656-656"];
m4_316 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="_property.SetValue(options, new List<string>(), null)", prediction=57, span="658-658"];
m4_317 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="var fieldRef = (IList<string>)_property.GetValue(options, null)", prediction=68, span="659-659"];
m4_318 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="var values = value.Split(((OptionListAttribute)_attribute).Separator)", prediction=68, span="660-660"];
m4_321 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="fieldRef.Add(values[i])", prediction=68, span="663-663"];
m4_320 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="i < values.Length", prediction=68, span="661-661"];
m4_322 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="i++", prediction=68, span="661-661"];
m4_323 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=76, span="665-665"];
m4_324 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="CommandLine.cs", label="Exit CommandLine.Internal.OptionInfo.SetValueList(string, object)", span="654-654"];
m4_0 [cluster="CommandLine.Internal.IArgumentEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Entry CommandLine.Internal.IArgumentEnumerator.GetRemainingFromNext()", span="67-67"];
m4_1 [cluster="CommandLine.Internal.IArgumentEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Exit CommandLine.Internal.IArgumentEnumerator.GetRemainingFromNext()", span="67-67"];
m4_436 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="CommandLine.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m4_389 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="CommandLine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m4_710 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1950-1950"];
m4_713 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="return DoParseArguments(args, options);", prediction=77, span="1955-1955"];
m4_712 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="Assumes.NotNull(options, ''options'')", span="1953-1953"];
m4_711 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="Assumes.NotNull(args, ''args'')", span="1952-1952"];
m4_714 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1950-1950"];
m4_103 [cluster="string.Substring(int)", file="CommandLine.cs", label="Entry string.Substring(int)", span="0-0"];
m4_353 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", file="CommandLine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m4_424 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="1468-1468"];
m4_595 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs", label="list == null || list.Count == 0", prediction=78, span="1471-1471"];
m4_594 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs", label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="1470-1470"];
m4_596 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs", label="return null;", prediction=79, span="1471-1471"];
m4_597 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs", label="list.Count > 1", span="1472-1472"];
m4_599 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs", label="var pairZero = list[0]", prediction=80, span="1473-1473"];
m4_600 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs", label="return pairZero.Right;", prediction=81, span="1474-1474"];
m4_598 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs", label="throw new InvalidOperationException();", span="1472-1472"];
m4_601 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.GetAttribute(object)", span="1468-1468"];
m4_761 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="2078-2078"];
m4_774 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLine.cs", label="var commandLineOptionsBase = options as CommandLineOptionsBase", span="2080-2080"];
m4_776 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLine.cs", label="(commandLineOptionsBase).InternalLastPostParsingState.Errors.AddRange(state)", span="2083-2083"];
m4_775 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLine.cs", label="commandLineOptionsBase != null", span="2081-2081"];
m4_777 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="2078-2078"];
m4_639 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="CommandLine.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m4_186 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="CommandLine.cs", label="Entry CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", span="418-418"];
m4_187 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="IArgumentEnumerator group = new OneCharStringEnumerator(argumentEnumerator.Current.Substring(1))", prediction=82, span="420-420"];
m4_188 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="group.MoveNext()", prediction=83, span="421-421"];
m4_189 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="var option = map[group.Current]", prediction=82, span="423-423"];
m4_195 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="argumentEnumerator.IsLast && group.IsLast", prediction=82, span="434-434"];
m4_198 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!group.IsLast", prediction=82, span="439-439"];
m4_200 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="valueSetting = option.SetValue(group.GetRemainingFromNext(), options)", prediction=87, span="443-443"];
m4_206 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="items.Insert(0, @group.GetRemainingFromNext())", prediction=82, span="454-454"];
m4_224 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!@group.IsLast && map[@group.Next] == null", prediction=82, span="493-493"];
m4_190 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="option == null", prediction=90, span="424-424"];
m4_192 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="option.IsDefined = true", prediction=91, span="428-428"];
m4_193 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", prediction=82, span="430-430"];
m4_194 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!option.IsBoolean", prediction=82, span="432-432"];
m4_199 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!option.IsArray", prediction=82, span="441-441"];
m4_202 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="DefineOptionThatViolatesFormat(option)", prediction=82, span="446-446"];
m4_204 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", prediction=82, span="451-451"];
m4_207 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="valueSetting = option.SetValue(items, options)", prediction=97, span="456-456"];
m4_209 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="DefineOptionThatViolatesFormat(option)", prediction=82, span="459-459"];
m4_213 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!option.IsArray", prediction=82, span="470-470"];
m4_214 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", prediction=100, span="472-472"];
m4_216 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="this.DefineOptionThatViolatesFormat(option)", prediction=82, span="475-475"];
m4_218 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", prediction=82, span="480-480"];
m4_220 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="valueSetting = option.SetValue(items, options)", prediction=103, span="484-484"];
m4_222 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="DefineOptionThatViolatesFormat(option)", prediction=82, span="487-487"];
m4_226 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!option.SetValue(true, options)", prediction=82, span="497-497"];
m4_196 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ParserState.Failure;", prediction=106, span="436-436"];
m4_197 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="bool valueSetting", prediction=107, span="438-438"];
m4_201 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!valueSetting", prediction=108, span="444-444"];
m4_203 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting);", prediction=87, span="448-448"];
m4_205 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", prediction=110, span="453-453"];
m4_208 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!valueSetting", prediction=111, span="457-457"];
m4_210 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting, true);", prediction=97, span="461-461"];
m4_211 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!argumentEnumerator.IsLast && !ArgumentParser.IsInputValue(argumentEnumerator.Next)", prediction=82, span="464-464"];
m4_212 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ParserState.Failure;", prediction=114, span="466-466"];
m4_215 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!valueSetting", prediction=115, span="473-473"];
m4_217 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting, true);", prediction=100, span="477-477"];
m4_219 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", prediction=117, span="482-482"];
m4_221 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!valueSetting", prediction=118, span="485-485"];
m4_223 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting);", prediction=103, span="489-489"];
m4_225 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ParserState.Failure;", prediction=120, span="495-495"];
m4_227 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ParserState.Failure;", prediction=121, span="499-499"];
m4_228 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ParserState.Success;", prediction=122, span="503-503"];
m4_191 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return _ignoreUnkwnownArguments ? ParserState.MoveOnNextElement : ParserState.Failure;", prediction=82, span="426-426"];
m4_229 [cluster="CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="CommandLine.cs", label="Exit CommandLine.Internal.OptionGroupParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", span="418-418"];
m4_669 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1772-1772"];
m4_670 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1772-1772"];
m4_643 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", file="CommandLine.cs", label="Entry CommandLine.BadOptionInfo.BadOptionInfo()", span="1580-1580"];
m4_644 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", file="CommandLine.cs", label="Exit CommandLine.BadOptionInfo.BadOptionInfo()", span="1580-1580"];
m4_268 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs", label="Entry CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", span="600-600"];
m4_286 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="_property.PropertyType.IsEnum", prediction=57, span="604-604"];
m4_287 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label=_setValueLock, prediction=57, span="606-606"];
m4_289 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label=_setValueLock, prediction=57, span="613-613"];
m4_288 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="_property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", prediction=57, span="608-608"];
m4_291 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label=InvalidCastException, prediction=128, span="619-619"];
m4_293 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label=FormatException, prediction=129, span="620-620"];
m4_295 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label=ArgumentException, prediction=130, span="621-621"];
m4_297 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label=OverflowException, prediction=131, span="622-622"];
m4_299 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=132, span="623-623"];
m4_290 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="_property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, Thread.CurrentThread.CurrentCulture), null)", prediction=57, span="615-615"];
m4_292 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=134, span="619-619"];
m4_294 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=135, span="620-620"];
m4_296 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=136, span="621-621"];
m4_298 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=137, span="622-622"];
m4_300 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs", label="Exit CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", span="600-600"];
m4_6 [cluster="CommandLine.Internal.ArgumentParser.ArgumentParser()", file="CommandLine.cs", label="Entry CommandLine.Internal.ArgumentParser.ArgumentParser()", span="81-81"];
m4_7 [cluster="CommandLine.Internal.ArgumentParser.ArgumentParser()", color=green, community=0, file="CommandLine.cs", label="PostParsingState = new List<ParsingError>()", prediction=138, span="83-83"];
m4_8 [cluster="CommandLine.Internal.ArgumentParser.ArgumentParser()", file="CommandLine.cs", label="Exit CommandLine.Internal.ArgumentParser.ArgumentParser()", span="81-81"];
m4_630 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLine.cs", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="1556-1556"];
m4_631 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, file="CommandLine.cs", label="text = null", prediction=139, span="1559-1559"];
m4_632 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, file="CommandLine.cs", label="var method = pair.Left", prediction=140, span="1560-1560"];
m4_633 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLine.cs", label="!CheckMethodSignature(method)", span="1561-1561"];
m4_635 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, file="CommandLine.cs", label="text = (string)method.Invoke(target, null)", prediction=141, span="1562-1562"];
m4_634 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLine.cs", label="throw new MemberAccessException();", span="1561-1561"];
m4_636 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLine.cs", label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="1556-1556"];
m4_736 [cluster="CommandLine.CommandLineParser.DoParseArgumentsDelegate.Invoke(string[], object)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.DoParseArgumentsDelegate.Invoke(string[], object)", span="2089-2089"];
m4_54 [cluster="string.Concat(string, string)", file="CommandLine.cs", label="Entry string.Concat(string, string)", span="0-0"];
m4_282 [cluster="System.Array.CreateInstance(System.Type, int)", file="CommandLine.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m4_59 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool)", file="CommandLine.cs", label="Entry CommandLine.Internal.ArgumentParser.BooleanToParserState(bool)", span="147-147"];
m4_60 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool)", color=green, community=0, file="CommandLine.cs", label="return BooleanToParserState(value, false);", prediction=142, span="149-149"];
m4_61 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool)", file="CommandLine.cs", label="Exit CommandLine.Internal.ArgumentParser.BooleanToParserState(bool)", span="147-147"];
m4_284 [cluster="System.Array.SetValue(object, int)", file="CommandLine.cs", label="Entry System.Array.SetValue(object, int)", span="0-0"];
m4_388 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="CommandLine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m4_82 [cluster="CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", file="CommandLine.cs", label="Entry CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", span="1004-1004"];
m4_437 [cluster="CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", color=green, community=0, file="CommandLine.cs", label="string.IsNullOrEmpty(value)", prediction=143, span="1006-1006"];
m4_438 [cluster="CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", color=green, community=0, file="CommandLine.cs", label="throw new ArgumentException(paramName);", prediction=144, span="1007-1007"];
m4_439 [cluster="CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", file="CommandLine.cs", label="Exit CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", span="1004-1004"];
m4_283 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="CommandLine.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m4_661 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", file="CommandLine.cs", label="Entry CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1720-1720"];
m4_662 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", color=green, community=0, file="CommandLine.cs", label="LastPostParsingState = new PostParsingState()", prediction=145, span="1722-1722"];
m4_663 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", file="CommandLine.cs", label="Exit CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1720-1720"];
m4_180 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="CommandLine.cs", label="Entry CommandLine.Internal.OptionInfo.SetValue(string, object)", span="564-564"];
m4_259 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", color=green, community=0, file="CommandLine.cs", label="_attribute is OptionListAttribute", prediction=57, span="566-566"];
m4_260 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", color=green, community=0, file="CommandLine.cs", label="return SetValueList(value, options);", prediction=57, span="568-568"];
m4_261 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", color=green, community=0, file="CommandLine.cs", label="ReflectionUtil.IsNullableType(_property.PropertyType)", prediction=57, span="570-570"];
m4_262 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", color=green, community=0, file="CommandLine.cs", label="return SetNullableValue(value, options);", prediction=57, span="572-572"];
m4_263 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", color=green, community=0, file="CommandLine.cs", label="return SetValueScalar(value, options);", prediction=57, span="574-574"];
m4_264 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="CommandLine.cs", label="Exit CommandLine.Internal.OptionInfo.SetValue(string, object)", span="564-564"];
m4_542 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="CommandLine.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string)", span="1281-1281"];
m4_543 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", color=green, community=0, file="CommandLine.cs", label="_uniqueName = longName", prediction=151, span="1283-1283"];
m4_544 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", color=green, community=0, file="CommandLine.cs", label="ShortName = null", prediction=152, span="1284-1284"];
m4_545 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="CommandLine.cs", label="LongName = longName", span="1285-1285"];
m4_546 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="CommandLine.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(string)", span="1281-1281"];
m4_567 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string)", file="CommandLine.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(char, string)", span="1395-1395"];
m4_568 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string)", color=green, community=0, file="CommandLine.cs", label="Separator = ':'", prediction=153, span="1398-1398"];
m4_569 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string)", file="CommandLine.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(char, string)", span="1395-1395"];
m4_638 [cluster="System.MemberAccessException.MemberAccessException()", file="CommandLine.cs", label="Entry System.MemberAccessException.MemberAccessException()", span="0-0"];
m4_183 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="CommandLine.cs", label="Entry CommandLine.Internal.OptionInfo.SetValue(bool, object)", span="645-645"];
m4_311 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", color=green, community=0, file="CommandLine.cs", label=_setValueLock, prediction=57, span="647-647"];
m4_312 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", color=green, community=0, file="CommandLine.cs", label="_property.SetValue(options, value, null)", prediction=57, span="649-649"];
m4_313 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=156, span="650-650"];
m4_314 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="CommandLine.cs", label="Exit CommandLine.Internal.OptionInfo.SetValue(bool, object)", span="645-645"];
m4_502 [cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="CommandLine.cs", label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0"];
m4_49 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException()", span="1742-1742"];
m4_664 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException()", span="1742-1742"];
m4_592 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="1477-1477"];
m4_603 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", prediction=157, span="1480-1480"];
m4_602 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs", label="concreteType = null", span="1479-1479"];
m4_604 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs", label="list == null || list.Count == 0", span="1481-1481"];
m4_606 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="list.Count > 1", prediction=157, span="1482-1482"];
m4_608 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="var pairZero = list[0]", prediction=159, span="1483-1483"];
m4_607 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="throw new InvalidOperationException();", prediction=160, span="1482-1482"];
m4_609 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="concreteType = pairZero.Right.ConcreteType", prediction=161, span="1484-1484"];
m4_610 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="return pairZero.Left;", prediction=159, span="1485-1485"];
m4_605 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs", label="return null;", span="1481-1481"];
m4_611 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="1477-1477"];
m4_593 [cluster="System.Activator.CreateInstance(System.Type)", file="CommandLine.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m4_738 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", span="2010-2010"];
m4_739 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLine.cs", label="bool hadError = false", span="2012-2012"];
m4_740 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", color=green, community=0, file="CommandLine.cs", label="var optionMap = OptionInfo.CreateMap(options, _settings)", prediction=163, span="2013-2013"];
m4_741 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLine.cs", label="optionMap.SetDefaults()", span="2014-2014"];
m4_749 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLine.cs", label="ParserState result = parser.Parse(arguments, optionMap, options)", span="2026-2026"];
m4_758 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLine.cs", label="hadError |= !optionMap.EnforceRules()", span="2047-2047"];
m4_747 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLine.cs", label="ArgumentParser parser = ArgumentParser.Create(argument, _settings.IgnoreUnknownArguments)", span="2023-2023"];
m4_745 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLine.cs", label="string argument = arguments.Current", span="2020-2020"];
m4_756 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLine.cs", label="!target.AddValueItemIfAllowed(argument)", span="2039-2039"];
m4_744 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLine.cs", label="arguments.MoveNext()", span="2018-2018"];
m4_754 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLine.cs", label="arguments.MoveNext()", span="2035-2035"];
m4_743 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLine.cs", label="IArgumentEnumerator arguments = new StringArrayEnumerator(args)", span="2017-2017"];
m4_742 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLine.cs", label="var target = new TargetWrapper(options)", span="2015-2015"];
m4_746 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLine.cs", label="!string.IsNullOrEmpty(argument)", span="2021-2021"];
m4_751 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLine.cs", label="SetPostParsingStateIfNeeded(options, parser.PostParsingState)", span="2029-2029"];
m4_748 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLine.cs", label="parser != null", span="2024-2024"];
m4_750 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLine.cs", label="(result & ParserState.Failure) == ParserState.Failure", span="2027-2027"];
m4_753 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLine.cs", label="(result & ParserState.MoveOnNextElement) == ParserState.MoveOnNextElement", span="2034-2034"];
m4_752 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLine.cs", label="hadError = true", span="2030-2030"];
m4_757 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLine.cs", label="hadError = true", span="2041-2041"];
m4_759 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLine.cs", label="return !hadError;", span="2049-2049"];
m4_755 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLine.cs", label="target.IsValueListDefined", span="2037-2037"];
m4_760 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", span="2010-2010"];
m4_179 [cluster="string.Split(char[], int)", file="CommandLine.cs", label="Entry string.Split(char[], int)", span="0-0"];
m4_426 [cluster="CommandLine.Internal.TargetWrapper.AddValueItemIfAllowed(string)", file="CommandLine.cs", label="Entry CommandLine.Internal.TargetWrapper.AddValueItemIfAllowed(string)", span="976-976"];
m4_427 [cluster="CommandLine.Internal.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, file="CommandLine.cs", label="_vla.MaximumElements == 0 || _valueList.Count == _vla.MaximumElements", prediction=39, span="978-978"];
m4_428 [cluster="CommandLine.Internal.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=165, span="980-980"];
m4_429 [cluster="CommandLine.Internal.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, file="CommandLine.cs", label=this, prediction=39, span="982-982"];
m4_430 [cluster="CommandLine.Internal.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, file="CommandLine.cs", label="_valueList.Add(item)", prediction=39, span="984-984"];
m4_431 [cluster="CommandLine.Internal.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=168, span="986-986"];
m4_432 [cluster="CommandLine.Internal.TargetWrapper.AddValueItemIfAllowed(string)", file="CommandLine.cs", label="Exit CommandLine.Internal.TargetWrapper.AddValueItemIfAllowed(string)", span="976-976"];
m4_62 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", file="CommandLine.cs", label="Entry CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", span="152-152"];
m4_63 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, file="CommandLine.cs", label="value && !addMoveNextIfTrue", prediction=169, span="154-154"];
m4_64 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, file="CommandLine.cs", label="return ParserState.Success;", prediction=170, span="154-154"];
m4_65 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, file="CommandLine.cs", label=value, prediction=171, span="155-155"];
m4_66 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, file="CommandLine.cs", label="return ParserState.Success | ParserState.MoveOnNextElement;", prediction=172, span="157-157"];
m4_67 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, file="CommandLine.cs", label="return ParserState.Failure;", prediction=173, span="159-159"];
m4_68 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", file="CommandLine.cs", label="Exit CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", span="152-152"];
m4_73 [cluster="CommandLine.Internal.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Internal.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.Internal.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Internal.OptionInfo)", span="170-170"];
m4_74 [cluster="CommandLine.Internal.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Internal.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="!option.IsArray && option.IsAttributeArrayCompatible", prediction=174, span="172-172"];
m4_75 [cluster="CommandLine.Internal.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Internal.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="throw new CommandLineParserException();", prediction=175, span="174-174"];
m4_76 [cluster="CommandLine.Internal.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Internal.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.Internal.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Internal.OptionInfo)", span="170-170"];
m4_357 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs", label="Entry CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", span="859-859"];
m4_371 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="!_settings.MutuallyExclusive", prediction=30, span="861-861"];
m4_372 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=177, span="863-863"];
m4_373 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="_map.Values", prediction=30, span="865-865"];
m4_374 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="option.IsDefined && option.MutuallyExclusiveSet != null", prediction=179, span="867-867"];
m4_375 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="BuildMutuallyExclusiveMap(option)", prediction=30, span="869-869"];
m4_376 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="_mutuallyExclusiveSetMap.Values", prediction=30, span="872-872"];
m4_377 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="info.Occurrence > 1", prediction=182, span="874-874"];
m4_380 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=183, span="880-880"];
m4_378 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="BuildAndSetPostParsingStateIfNeeded(RawOptions, info.BadOption, null, true)", prediction=30, span="876-876"];
m4_379 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=185, span="877-877"];
m4_381 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs", label="Exit CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", span="859-859"];
m4_56 [cluster="CommandLine.Internal.ArgumentParser.CompareLong(string, string, bool)", file="CommandLine.cs", label="Entry CommandLine.Internal.ArgumentParser.CompareLong(string, string, bool)", span="142-142"];
m4_57 [cluster="CommandLine.Internal.ArgumentParser.CompareLong(string, string, bool)", color=green, community=0, file="CommandLine.cs", label="return string.Compare(argument, ''--'' + option, !caseSensitive) == 0;", prediction=186, span="144-144"];
m4_58 [cluster="CommandLine.Internal.ArgumentParser.CompareLong(string, string, bool)", file="CommandLine.cs", label="Exit CommandLine.Internal.ArgumentParser.CompareLong(string, string, bool)", span="142-142"];
m4_9 [cluster="System.Collections.Generic.List<T>.List()", file="CommandLine.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_462 [cluster="System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", file="CommandLine.cs", label="Entry System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", span="0-0"];
m4_425 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="1459-1459"];
m4_586 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="CommandLine.cs", label="var property = GetProperty(target, out concreteType)", prediction=187, span="1462-1462"];
m4_585 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs", label="Type concreteType", span="1461-1461"];
m4_587 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs", label="property == null || concreteType == null", span="1463-1463"];
m4_589 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="CommandLine.cs", label="property.SetValue(target, Activator.CreateInstance(concreteType), null)", prediction=187, span="1464-1464"];
m4_590 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="CommandLine.cs", label="return (IList<string>)property.GetValue(target, null);", prediction=187, span="1465-1465"];
m4_588 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs", label="return null;", span="1463-1463"];
m4_591 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.GetReference(object)", span="1459-1459"];
m4_127 [cluster="CommandLine.Internal.StringArrayEnumerator.MovePrevious()", file="CommandLine.cs", label="Entry CommandLine.Internal.StringArrayEnumerator.MovePrevious()", span="306-306"];
m4_128 [cluster="CommandLine.Internal.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs", label="_index <= 0", prediction=190, span="308-308"];
m4_129 [cluster="CommandLine.Internal.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs", label="throw new InvalidOperationException();", prediction=191, span="310-310"];
m4_130 [cluster="CommandLine.Internal.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs", label="_index <= _endIndex", prediction=190, span="312-312"];
m4_131 [cluster="CommandLine.Internal.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs", label="_index--", prediction=190, span="314-314"];
m4_133 [cluster="CommandLine.Internal.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=194, span="317-317"];
m4_132 [cluster="CommandLine.Internal.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs", label="return _index <= _endIndex;", prediction=190, span="315-315"];
m4_134 [cluster="CommandLine.Internal.StringArrayEnumerator.MovePrevious()", file="CommandLine.cs", label="Exit CommandLine.Internal.StringArrayEnumerator.MovePrevious()", span="306-306"];
m4_715 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1989-1989"];
m4_724 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", prediction=196, span="1991-1991"];
m4_725 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="var helpWriter = _settings.HelpWriter", prediction=197, span="1992-1992"];
m4_726 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="pair != null && helpWriter != null", span="1994-1994"];
m4_727 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="ParseHelp(args, pair.Right) || !_doParseArguments(args, options)", span="1997-1997"];
m4_729 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", prediction=196, span="2000-2000"];
m4_728 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="string helpText", prediction=199, span="1999-1999"];
m4_730 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="helpWriter.Write(helpText)", span="2001-2001"];
m4_733 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="return _doParseArguments(args, options);", span="2007-2007"];
m4_732 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="return true;", span="2004-2004"];
m4_731 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="return false;", span="2002-2002"];
m4_734 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1989-1989"];
m4_612 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="CommandLine.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="1502-1502"];
m4_613 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", color=green, community=0, file="CommandLine.cs", label="HelpText = DefaultHelpText", prediction=200, span="1505-1505"];
m4_614 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="CommandLine.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="1502-1502"];
m4_737 [cluster="System.IO.TextWriter.Write(string)", file="CommandLine.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m4_473 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="CommandLine.cs", label="Entry CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1067-1067"];
m4_474 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="var info = target.GetType().GetMethods()", prediction=201, span="1070-1070"];
m4_475 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label=info, prediction=202, span="1072-1072"];
m4_476 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="!method.IsStatic", prediction=203, span="1074-1074"];
m4_478 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="attribute != null", prediction=204, span="1078-1078"];
m4_480 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="return null;", prediction=205, span="1085-1085"];
m4_477 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="Attribute attribute =\r\n                            Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", prediction=202, span="1076-1077"];
m4_479 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="return (TAttribute) attribute;", prediction=202, span="1080-1080"];
m4_481 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="CommandLine.cs", label="Exit CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1067-1067"];
m4_114 [cluster="CommandLine.Internal.Assumes.NotNull<T>(T, string)", file="CommandLine.cs", label="Entry CommandLine.Internal.Assumes.NotNull<T>(T, string)", span="997-997"];
m4_433 [cluster="CommandLine.Internal.Assumes.NotNull<T>(T, string)", color=green, community=0, file="CommandLine.cs", label="value == null", prediction=208, span="1000-1000"];
m4_434 [cluster="CommandLine.Internal.Assumes.NotNull<T>(T, string)", color=green, community=0, file="CommandLine.cs", label="throw new ArgumentNullException(paramName);", prediction=209, span="1001-1001"];
m4_435 [cluster="CommandLine.Internal.Assumes.NotNull<T>(T, string)", file="CommandLine.cs", label="Exit CommandLine.Internal.Assumes.NotNull<T>(T, string)", span="997-997"];
m4_334 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1751-1751"];
m4_666 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1751-1751"];
m4_15 [cluster="CommandLine.ParsingError.ParsingError(char?, string, bool)", file="CommandLine.cs", label="Entry CommandLine.ParsingError.ParsingError(char?, string, bool)", span="1620-1620"];
m4_652 [cluster="CommandLine.ParsingError.ParsingError(char?, string, bool)", color=green, community=0, file="CommandLine.cs", label="ViolatesFormat = format", prediction=210, span="1623-1623"];
m4_651 [cluster="CommandLine.ParsingError.ParsingError(char?, string, bool)", file="CommandLine.cs", label="BadOption = new BadOptionInfo(shortName, longName)", span="1622-1622"];
m4_653 [cluster="CommandLine.ParsingError.ParsingError(char?, string, bool)", file="CommandLine.cs", label="Exit CommandLine.ParsingError.ParsingError(char?, string, bool)", span="1620-1620"];
m4_463 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLine.cs", label="Entry CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1046-1046"];
m4_464 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="var info = target.GetType().GetMethods()", prediction=211, span="1049-1049"];
m4_465 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label=info, prediction=212, span="1051-1051"];
m4_466 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="!method.IsStatic", prediction=213, span="1053-1053"];
m4_468 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="attribute != null", prediction=214, span="1057-1057"];
m4_470 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="return null;", prediction=215, span="1064-1064"];
m4_467 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="Attribute attribute =\r\n                            Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", prediction=212, span="1055-1056"];
m4_469 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="return new Pair<MethodInfo, TAttribute>(method, (TAttribute) attribute);", prediction=212, span="1059-1059"];
m4_471 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLine.cs", label="Exit CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1046-1046"];
m4_326 [cluster="string.Split(params char[])", file="CommandLine.cs", label="Entry string.Split(params char[])", span="0-0"];
m4_442 [cluster="CommandLine.Internal.Assumes.NotZeroLength<T>(T[], string)", file="CommandLine.cs", label="Entry CommandLine.Internal.Assumes.NotZeroLength<T>(T[], string)", span="1010-1010"];
m4_443 [cluster="CommandLine.Internal.Assumes.NotZeroLength<T>(T[], string)", color=green, community=0, file="CommandLine.cs", label="array.Length == 0", prediction=218, span="1012-1012"];
m4_444 [cluster="CommandLine.Internal.Assumes.NotZeroLength<T>(T[], string)", color=green, community=0, file="CommandLine.cs", label="throw new ArgumentOutOfRangeException(paramName);", prediction=219, span="1013-1013"];
m4_445 [cluster="CommandLine.Internal.Assumes.NotZeroLength<T>(T[], string)", file="CommandLine.cs", label="Exit CommandLine.Internal.Assumes.NotZeroLength<T>(T[], string)", span="1010-1010"];
m4_700 [cluster="CommandLine.CommandLineParser.InitializeDelagate()", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.InitializeDelagate()", span="1980-1980"];
m4_722 [cluster="CommandLine.CommandLineParser.InitializeDelagate()", color=green, community=0, file="CommandLine.cs", label="_doParseArguments = DoParseArgumentsUsingVerbs", prediction=220, span="1985-1985"];
m4_723 [cluster="CommandLine.CommandLineParser.InitializeDelagate()", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.InitializeDelagate()", span="1980-1980"];
m4_257 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs", label="Entry CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1019-1019"];
m4_447 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="IList<Pair<PropertyInfo, TAttribute>> list = new List<Pair<PropertyInfo, TAttribute>>()", prediction=221, span="1022-1022"];
m4_448 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="target != null", prediction=222, span="1023-1023"];
m4_456 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="list.Add(new Pair<PropertyInfo, TAttribute>(property, (TAttribute) attribute))", prediction=221, span="1037-1037"];
m4_457 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="return list;", prediction=221, span="1043-1043"];
m4_449 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="var propertiesInfo = target.GetType().GetProperties()", prediction=225, span="1025-1025"];
m4_450 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label=propertiesInfo, prediction=221, span="1027-1027"];
m4_454 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", prediction=221, span="1034-1034"];
m4_455 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="attribute != null", prediction=228, span="1035-1035"];
m4_451 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="property != null && (property.CanRead && property.CanWrite)", prediction=229, span="1029-1029"];
m4_453 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="setMethod != null && !setMethod.IsStatic", prediction=230, span="1032-1032"];
m4_452 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="var setMethod = property.GetSetMethod()", prediction=231, span="1031-1031"];
m4_458 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs", label="Exit CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1019-1019"];
m4_246 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Entry CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="545-545"];
m4_247 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", prediction=232, span="547-547"];
m4_248 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="list == null", prediction=233, span="548-548"];
m4_250 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="var map = new OptionMap(list.Count, settings)", prediction=234, span="552-552"];
m4_251 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label=list, prediction=232, span="553-553"];
m4_253 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", prediction=236, span="557-557"];
m4_254 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="map.RawOptions = target", prediction=237, span="560-560"];
m4_255 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="return map;", prediction=234, span="561-561"];
m4_249 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="return null;", prediction=239, span="550-550"];
m4_252 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="pair.Left != null && pair.Right != null", prediction=240, span="555-555"];
m4_256 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Exit CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="545-545"];
m4_441 [cluster="System.ArgumentException.ArgumentException(string)", file="CommandLine.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m4_358 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="CommandLine.cs", label="Entry CommandLine.Internal.OptionMap.EnforceRequiredRule()", span="845-845"];
m4_363 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", color=green, community=0, file="CommandLine.cs", label="bool requiredRulesAllMet = true", prediction=241, span="847-847"];
m4_364 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", color=green, community=0, file="CommandLine.cs", label="_map.Values", prediction=30, span="848-848"];
m4_368 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", color=green, community=0, file="CommandLine.cs", label="return requiredRulesAllMet;", prediction=241, span="856-856"];
m4_365 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", color=green, community=0, file="CommandLine.cs", label="option.Required && !option.IsDefined", prediction=244, span="850-850"];
m4_367 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", color=green, community=0, file="CommandLine.cs", label="requiredRulesAllMet = false", prediction=241, span="853-853"];
m4_366 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", color=green, community=0, file="CommandLine.cs", label="BuildAndSetPostParsingStateIfNeeded(RawOptions, option, true, null)", prediction=30, span="852-852"];
m4_369 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="CommandLine.cs", label="Exit CommandLine.Internal.OptionMap.EnforceRequiredRule()", span="845-845"];
m4_576 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="1439-1439"];
m4_577 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="CommandLine.cs", label="concreteType == null", prediction=247, span="1442-1442"];
m4_578 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="CommandLine.cs", label="throw new ArgumentNullException(''concreteType'');", prediction=248, span="1442-1442"];
m4_579 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="CommandLine.cs", label="!typeof(IList<string>).IsAssignableFrom(concreteType)", prediction=249, span="1443-1443"];
m4_580 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="CommandLine.cs", label="throw new CommandLineParserException(''The types are incompatible.'');", prediction=250, span="1445-1445"];
m4_581 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="CommandLine.cs", label="_concreteType = concreteType", span="1447-1447"];
m4_582 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="1439-1439"];
m4_495 [cluster="CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", color=green, community=0, file="CommandLine.cs", label="var assemblyFromWhichToPullInformation = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", prediction=251, span="1116-1116"];
m4_494 [cluster="CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", file="CommandLine.cs", label="Entry CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", span="1113-1113"];
m4_496 [cluster="CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", color=green, community=0, file="CommandLine.cs", label="object[] a = assemblyFromWhichToPullInformation.GetCustomAttributes(typeof(TAttribute), false)", prediction=252, span="1118-1118"];
m4_497 [cluster="CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", color=green, community=0, file="CommandLine.cs", label="a.Length <= 0", prediction=253, span="1119-1119"];
m4_499 [cluster="CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", color=green, community=0, file="CommandLine.cs", label="return (TAttribute) a[0];", prediction=252, span="1121-1121"];
m4_498 [cluster="CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", color=green, community=0, file="CommandLine.cs", label="return null;", prediction=255, span="1119-1119"];
m4_500 [cluster="CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", file="CommandLine.cs", label="Exit CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", span="1113-1113"];
m4_77 [cluster="CommandLine.Internal.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="CommandLine.cs", label="Entry CommandLine.Internal.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="181-181"];
m4_78 [cluster="CommandLine.Internal.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, file="CommandLine.cs", label="Assumes.NotNullOrEmpty(value, ''value'')", prediction=256, span="183-183"];
m4_79 [cluster="CommandLine.Internal.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, file="CommandLine.cs", label="_data = value", prediction=257, span="184-184"];
m4_80 [cluster="CommandLine.Internal.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, file="CommandLine.cs", label="_index = -1", prediction=258, span="185-185"];
m4_81 [cluster="CommandLine.Internal.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="CommandLine.cs", label="Exit CommandLine.Internal.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="181-181"];
m4_53 [cluster="string.String(char, int)", file="CommandLine.cs", label="Entry string.String(char, int)", span="0-0"];
m4_401 [cluster="CommandLine.Internal.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="CommandLine.cs", label="Entry CommandLine.Internal.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="923-923"];
m4_402 [cluster="CommandLine.Internal.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=green, community=0, file="CommandLine.cs", label="_left = left", prediction=259, span="925-925"];
m4_403 [cluster="CommandLine.Internal.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=green, community=0, file="CommandLine.cs", label="_right = right", prediction=260, span="926-926"];
m4_404 [cluster="CommandLine.Internal.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="CommandLine.cs", label="Exit CommandLine.Internal.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="923-923"];
m4_778 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="CommandLine.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m4_370 [cluster="CommandLine.Internal.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="CommandLine.cs", label="Entry CommandLine.Internal.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", span="893-893"];
m4_390 [cluster="CommandLine.Internal.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="var commandLineOptionsBase = options as CommandLineOptionsBase", prediction=261, span="895-895"];
m4_391 [cluster="CommandLine.Internal.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="commandLineOptionsBase == null", prediction=262, span="896-896"];
m4_398 [cluster="CommandLine.Internal.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="(commandLineOptionsBase).InternalLastPostParsingState.Errors.Add(error)", prediction=261, span="910-910"];
m4_393 [cluster="CommandLine.Internal.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="var error = new ParsingError\r\n                {\r\n                    BadOption =\r\n                    {\r\n                        ShortName = option.ShortName,\r\n                        LongName = option.LongName\r\n                    }\r\n                }", prediction=261, span="900-907"];
m4_394 [cluster="CommandLine.Internal.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="required != null", prediction=265, span="908-908"];
m4_395 [cluster="CommandLine.Internal.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="error.ViolatesRequired = required.Value", prediction=266, span="908-908"];
m4_397 [cluster="CommandLine.Internal.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", prediction=267, span="909-909"];
m4_396 [cluster="CommandLine.Internal.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="mutualExclusiveness != null", prediction=265, span="909-909"];
m4_392 [cluster="CommandLine.Internal.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="return;", prediction=269, span="898-898"];
m4_399 [cluster="CommandLine.Internal.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="CommandLine.cs", label="Exit CommandLine.Internal.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", span="893-893"];
m4_95 [cluster="CommandLine.Internal.OneCharStringEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Entry CommandLine.Internal.OneCharStringEnumerator.GetRemainingFromNext()", span="231-231"];
m4_96 [cluster="CommandLine.Internal.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs", label="_index == -1", prediction=44, span="233-233"];
m4_97 [cluster="CommandLine.Internal.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs", label="throw new InvalidOperationException();", prediction=271, span="233-233"];
m4_98 [cluster="CommandLine.Internal.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs", label="_index > _data.Length", prediction=44, span="234-234"];
m4_99 [cluster="CommandLine.Internal.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs", label="throw new InvalidOperationException();", prediction=273, span="234-234"];
m4_100 [cluster="CommandLine.Internal.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs", label="return _data.Substring(_index + 1);", prediction=44, span="235-235"];
m4_101 [cluster="CommandLine.Internal.OneCharStringEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Exit CommandLine.Internal.OneCharStringEnumerator.GetRemainingFromNext()", span="231-231"];
m4_17 [cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", file="CommandLine.cs", label="Entry CommandLine.Internal.ArgumentParser.Create(string, bool)", span="95-95"];
m4_18 [cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", color=green, community=0, file="CommandLine.cs", label="StringUtil.IsNumeric(argument)", prediction=275, span="97-97"];
m4_19 [cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", color=green, community=0, file="CommandLine.cs", label="return null;", prediction=276, span="97-97"];
m4_20 [cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", color=green, community=0, file="CommandLine.cs", label="argument.Equals(''-'', StringComparison.InvariantCulture)", prediction=277, span="98-98"];
m4_21 [cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", color=green, community=0, file="CommandLine.cs", label="return null;", prediction=278, span="98-98"];
m4_22 [cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", color=green, community=0, file="CommandLine.cs", label="argument[0] == '-' && argument[1] == '-'", prediction=277, span="99-99"];
m4_23 [cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", color=green, community=0, file="CommandLine.cs", label="return new LongOptionParser(ignoreUnknownArguments);", prediction=277, span="101-101"];
m4_24 [cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", color=green, community=0, file="CommandLine.cs", label="argument[0] == '-'", prediction=277, span="103-103"];
m4_25 [cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", color=green, community=0, file="CommandLine.cs", label="return new OptionGroupParser(ignoreUnknownArguments);", prediction=277, span="105-105"];
m4_26 [cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", file="CommandLine.cs", label="return null;", span="107-107"];
m4_27 [cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", file="CommandLine.cs", label="Exit CommandLine.Internal.ArgumentParser.Create(string, bool)", span="95-95"];
m4_181 [cluster="System.Collections.Generic.IList<T>.Insert(int, T)", file="CommandLine.cs", label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0"];
m4_258 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Entry CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="778-778"];
m4_343 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="_settings = settings", prediction=283, span="780-780"];
m4_344 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="IEqualityComparer<string> comparer", prediction=284, span="782-782"];
m4_348 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="_names = new Dictionary<string, string>(capacity, comparer)", prediction=285, span="791-791"];
m4_346 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="comparer = StringComparer.Ordinal", prediction=286, span="785-785"];
m4_347 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="comparer = StringComparer.OrdinalIgnoreCase", prediction=287, span="789-789"];
m4_349 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="_map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", prediction=288, span="792-792"];
m4_350 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="_settings.MutuallyExclusive", prediction=30, span="793-793"];
m4_351 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="_mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", prediction=290, span="795-795"];
m4_345 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="_settings.CaseSensitive", prediction=30, span="783-783"];
m4_352 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Exit CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="778-778"];
m4_620 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)", file="CommandLine.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)", span="1525-1525"];
m4_621 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)", color=green, community=0, file="CommandLine.cs", label="ShortName = null", prediction=292, span="1527-1527"];
m4_622 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)", color=green, community=0, file="CommandLine.cs", label="LongName = longName", prediction=293, span="1528-1528"];
m4_623 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)", color=green, community=0, file="CommandLine.cs", label="HelpText = DefaultHelpText", prediction=294, span="1529-1529"];
m4_624 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)", file="CommandLine.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)", span="1525-1525"];
m4_677 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1806-1806"];
m4_678 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLine.cs", label="CaseSensitive = caseSensitive", span="1808-1808"];
m4_679 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLine.cs", label="HelpWriter = helpWriter", span="1809-1809"];
m4_680 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1806-1806"];
m4_104 [cluster="CommandLine.Internal.OneCharStringEnumerator.MovePrevious()", file="CommandLine.cs", label="Entry CommandLine.Internal.OneCharStringEnumerator.MovePrevious()", span="238-238"];
m4_105 [cluster="CommandLine.Internal.OneCharStringEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs", label="throw new NotSupportedException();", prediction=295, span="238-238"];
m4_106 [cluster="CommandLine.Internal.OneCharStringEnumerator.MovePrevious()", file="CommandLine.cs", label="Exit CommandLine.Internal.OneCharStringEnumerator.MovePrevious()", span="238-238"];
m4_115 [cluster="CommandLine.Internal.StringArrayEnumerator.Reset()", file="CommandLine.cs", label="Entry CommandLine.Internal.StringArrayEnumerator.Reset()", span="286-286"];
m4_116 [cluster="CommandLine.Internal.StringArrayEnumerator.Reset()", color=green, community=0, file="CommandLine.cs", label="_index = -1", prediction=296, span="288-288"];
m4_117 [cluster="CommandLine.Internal.StringArrayEnumerator.Reset()", file="CommandLine.cs", label="Exit CommandLine.Internal.StringArrayEnumerator.Reset()", span="286-286"];
m4_337 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", span="764-764"];
m4_338 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="BadOption = option", prediction=297, span="766-766"];
m4_339 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", span="764-764"];
m4_410 [cluster="object.GetHashCode()", file="CommandLine.cs", label="Entry object.GetHashCode()", span="0-0"];
m4_460 [cluster="System.Type.GetProperties()", file="CommandLine.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m4_267 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="CommandLine.cs", label="Entry CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", span="626-626"];
m4_302 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", color=green, community=0, file="CommandLine.cs", label="var nc = new NullableConverter(_property.PropertyType)", prediction=57, span="628-628"];
m4_303 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", color=green, community=0, file="CommandLine.cs", label=_setValueLock, prediction=57, span="631-631"];
m4_304 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", color=green, community=0, file="CommandLine.cs", label="_property.SetValue(options, nc.ConvertFromString(null, Thread.CurrentThread.CurrentCulture, value), null)", prediction=57, span="633-633"];
m4_305 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", color=green, community=0, file="CommandLine.cs", label=Exception, prediction=301, span="638-638"];
m4_307 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=302, span="642-642"];
m4_306 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=303, span="640-640"];
m4_308 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="CommandLine.cs", label="Exit CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", span="626-626"];
m4_83 [cluster="CommandLine.Internal.OneCharStringEnumerator.Reset()", file="CommandLine.cs", label="Entry CommandLine.Internal.OneCharStringEnumerator.Reset()", span="214-214"];
m4_84 [cluster="CommandLine.Internal.OneCharStringEnumerator.Reset()", color=green, community=0, file="CommandLine.cs", label="_index = -1", prediction=304, span="216-216"];
m4_85 [cluster="CommandLine.Internal.OneCharStringEnumerator.Reset()", file="CommandLine.cs", label="Exit CommandLine.Internal.OneCharStringEnumerator.Reset()", span="214-214"];
m4_482 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs", label="Entry CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1088-1088"];
m4_483 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="IList<TAttribute> list = new List<TAttribute>()", prediction=305, span="1091-1091"];
m4_484 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="var info = target.GetType().GetProperties()", prediction=306, span="1092-1092"];
m4_491 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="list.Add((TAttribute) attribute)", prediction=305, span="1104-1104"];
m4_492 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="return list;", prediction=305, span="1110-1110"];
m4_485 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label=info, prediction=309, span="1094-1094"];
m4_489 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", prediction=305, span="1101-1101"];
m4_490 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="attribute != null", prediction=311, span="1102-1102"];
m4_486 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="property != null && (property.CanRead && property.CanWrite)", prediction=312, span="1096-1096"];
m4_488 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="setMethod != null && !setMethod.IsStatic", prediction=313, span="1099-1099"];
m4_487 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="var setMethod = property.GetSetMethod()", prediction=314, span="1098-1098"];
m4_493 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs", label="Exit CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1088-1088"];
m4_50 [cluster="CommandLine.Internal.ArgumentParser.CompareShort(string, char?, bool)", file="CommandLine.cs", label="Entry CommandLine.Internal.ArgumentParser.CompareShort(string, char?, bool)", span="137-137"];
m4_51 [cluster="CommandLine.Internal.ArgumentParser.CompareShort(string, char?, bool)", color=green, community=0, file="CommandLine.cs", label="return string.Compare(argument, string.Concat(''-'', new string(option.Value, 1)), !caseSensitive) == 0;", prediction=315, span="139-139"];
m4_52 [cluster="CommandLine.Internal.ArgumentParser.CompareShort(string, char?, bool)", file="CommandLine.cs", label="Exit CommandLine.Internal.ArgumentParser.CompareShort(string, char?, bool)", span="137-137"];
m4_503 [cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="CommandLine.cs", label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0"];
m4_501 [cluster="System.Reflection.Assembly.GetEntryAssembly()", file="CommandLine.cs", label="Entry System.Reflection.Assembly.GetEntryAssembly()", span="0-0"];
m4_354 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="CommandLine.cs", label="Entry CommandLine.Internal.OptionMap.EnforceRules()", span="832-832"];
m4_355 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", color=green, community=0, file="CommandLine.cs", label="return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", prediction=30, span="834-834"];
m4_356 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="CommandLine.cs", label="Exit CommandLine.Internal.OptionMap.EnforceRules()", span="832-832"];
m4_411 [cluster="CommandLine.Internal.Pair<TLeft, TRight>.Equals(object)", file="CommandLine.cs", label="Entry CommandLine.Internal.Pair<TLeft, TRight>.Equals(object)", span="947-947"];
m4_412 [cluster="CommandLine.Internal.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, file="CommandLine.cs", label="var other = obj as Pair<TLeft, TRight>", prediction=317, span="949-949"];
m4_413 [cluster="CommandLine.Internal.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, file="CommandLine.cs", label="other == null", prediction=318, span="951-951"];
m4_415 [cluster="CommandLine.Internal.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, file="CommandLine.cs", label="return Equals(_left, other._left) && Equals(_right, other._right);", prediction=317, span="955-955"];
m4_414 [cluster="CommandLine.Internal.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=320, span="953-953"];
m4_416 [cluster="CommandLine.Internal.Pair<TLeft, TRight>.Equals(object)", file="CommandLine.cs", label="Exit CommandLine.Internal.Pair<TLeft, TRight>.Equals(object)", span="947-947"];
m4_696 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1906-1906"];
m4_697 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLine.cs", label="_settings = new CommandLineParserSettings()", span="1908-1908"];
m4_698 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLine.cs", label="InitializeDelagate()", span="1909-1909"];
m4_699 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser()", span="1906-1906"];
m4_230 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs", label="Entry CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="516-516"];
m4_231 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="attribute == null", prediction=321, span="518-518"];
m4_232 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", prediction=322, span="520-520"];
m4_233 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="property == null", prediction=323, span="522-522"];
m4_234 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="throw new ArgumentNullException(''property'', ''The property is mandatory'');", prediction=324, span="524-524"];
m4_235 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="_required = attribute.Required", prediction=325, span="526-526"];
m4_236 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="_helpText = attribute.HelpText", prediction=326, span="527-527"];
m4_237 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="_shortName = attribute.ShortName", prediction=327, span="528-528"];
m4_238 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="_longName = attribute.LongName", prediction=328, span="529-529"];
m4_239 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="_mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", prediction=329, span="530-530"];
m4_240 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="_defaultValue = attribute.DefaultValue", prediction=330, span="531-531"];
m4_241 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="_hasDefaultValue = attribute.HasDefaultValue", prediction=331, span="532-532"];
m4_242 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="_attribute = attribute", prediction=332, span="533-533"];
m4_243 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="_property = property", prediction=333, span="534-534"];
m4_244 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs", label="Exit CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="516-516"];
m4_573 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute()", span="1429-1429"];
m4_574 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="CommandLine.cs", label="MaximumElements = -1", span="1431-1431"];
m4_575 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.ValueListAttribute()", span="1429-1429"];
m4_12 [cluster="CommandLine.Internal.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Internal.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.Internal.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Internal.OptionInfo)", span="90-90"];
m4_13 [cluster="CommandLine.Internal.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Internal.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", prediction=334, span="92-92"];
m4_14 [cluster="CommandLine.Internal.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Internal.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.Internal.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Internal.OptionInfo)", span="90-90"];
m4_301 [cluster="System.Enum.Parse(System.Type, string, bool)", file="CommandLine.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m4_547 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="CommandLine.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char, string)", span="1293-1293"];
m4_548 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", color=green, community=0, file="CommandLine.cs", label="ShortName = shortName", prediction=335, span="1295-1295"];
m4_549 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", color=green, community=0, file="CommandLine.cs", label="LongName = longName", prediction=336, span="1296-1296"];
m4_550 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="CommandLine.cs", label="ShortName != null", span="1297-1297"];
m4_551 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", color=green, community=0, file="CommandLine.cs", label="_uniqueName = new string(shortName, 1)", prediction=337, span="1299-1299"];
m4_554 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", color=green, community=0, file="CommandLine.cs", label="_uniqueName == null", prediction=338, span="1305-1305"];
m4_552 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", color=green, community=0, file="CommandLine.cs", label="!string.IsNullOrEmpty(longName)", prediction=339, span="1301-1301"];
m4_553 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", color=green, community=0, file="CommandLine.cs", label="_uniqueName = longName", prediction=340, span="1303-1303"];
m4_555 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", color=green, community=0, file="CommandLine.cs", label="throw new InvalidOperationException();", prediction=341, span="1307-1307"];
m4_556 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="CommandLine.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(char, string)", span="1293-1293"];
m4_417 [cluster="object.Equals(object, object)", file="CommandLine.cs", label="Entry object.Equals(object, object)", span="0-0"];
m4_10 [cluster="CommandLine.Internal.ArgumentParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="CommandLine.cs", label="Entry CommandLine.Internal.ArgumentParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", span="86-86"];
m4_11 [cluster="CommandLine.Internal.ArgumentParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="CommandLine.cs", label="Exit CommandLine.Internal.ArgumentParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", span="86-86"];
m4_309 [cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", file="CommandLine.cs", label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0"];
m4_310 [cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", file="CommandLine.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0"];
m4_327 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="CommandLine.cs", label="Entry CommandLine.Internal.OptionInfo.SetDefault(object)", span="669-669"];
m4_328 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", color=green, community=0, file="CommandLine.cs", label=_hasDefaultValue, prediction=57, span="671-671"];
m4_329 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", color=green, community=0, file="CommandLine.cs", label=_setValueLock, prediction=57, span="673-673"];
m4_330 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", color=green, community=0, file="CommandLine.cs", label="_property.SetValue(options, _defaultValue, null)", prediction=57, span="677-677"];
m4_331 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", color=green, community=0, file="CommandLine.cs", label=Exception, prediction=345, span="679-679"];
m4_332 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", color=green, community=0, file="CommandLine.cs", label="throw new CommandLineParserException(''Bad default value.'', e);", prediction=346, span="681-681"];
m4_333 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="CommandLine.cs", label="Exit CommandLine.Internal.OptionInfo.SetDefault(object)", span="669-669"];
m4_4 [cluster="CommandLine.Internal.IArgumentEnumerator.MovePrevious()", file="CommandLine.cs", label="Entry CommandLine.Internal.IArgumentEnumerator.MovePrevious()", span="74-74"];
m4_5 [cluster="CommandLine.Internal.IArgumentEnumerator.MovePrevious()", file="CommandLine.cs", label="Exit CommandLine.Internal.IArgumentEnumerator.MovePrevious()", span="74-74"];
m4_400 [cluster="CommandLine.ParsingError.ParsingError()", file="CommandLine.cs", label="Entry CommandLine.ParsingError.ParsingError()", span="1615-1615"];
m4_649 [cluster="CommandLine.ParsingError.ParsingError()", file="CommandLine.cs", label="BadOption = new BadOptionInfo()", span="1617-1617"];
m4_650 [cluster="CommandLine.ParsingError.ParsingError()", file="CommandLine.cs", label="Exit CommandLine.ParsingError.ParsingError()", span="1615-1615"];
m4_325 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="CommandLine.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m4_39 [cluster="CommandLine.Internal.ArgumentParser.GetNextInputValues(CommandLine.Internal.IArgumentEnumerator)", file="CommandLine.cs", label="Entry CommandLine.Internal.ArgumentParser.GetNextInputValues(CommandLine.Internal.IArgumentEnumerator)", span="125-125"];
m4_40 [cluster="CommandLine.Internal.ArgumentParser.GetNextInputValues(CommandLine.Internal.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs", label="IList<string> list = new List<string>()", prediction=347, span="127-127"];
m4_41 [cluster="CommandLine.Internal.ArgumentParser.GetNextInputValues(CommandLine.Internal.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs", label="ae.MoveNext()", prediction=347, span="128-128"];
m4_43 [cluster="CommandLine.Internal.ArgumentParser.GetNextInputValues(CommandLine.Internal.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs", label="list.Add(ae.Current)", prediction=347, span="130-130"];
m4_46 [cluster="CommandLine.Internal.ArgumentParser.GetNextInputValues(CommandLine.Internal.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs", label="return list;", prediction=347, span="134-134"];
m4_42 [cluster="CommandLine.Internal.ArgumentParser.GetNextInputValues(CommandLine.Internal.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs", label="IsInputValue(ae.Current)", prediction=347, span="130-130"];
m4_44 [cluster="CommandLine.Internal.ArgumentParser.GetNextInputValues(CommandLine.Internal.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs", label="!ae.MovePrevious()", prediction=347, span="133-133"];
m4_45 [cluster="CommandLine.Internal.ArgumentParser.GetNextInputValues(CommandLine.Internal.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs", label="throw new CommandLineParserException();", prediction=353, span="133-133"];
m4_47 [cluster="CommandLine.Internal.ArgumentParser.GetNextInputValues(CommandLine.Internal.IArgumentEnumerator)", file="CommandLine.cs", label="Exit CommandLine.Internal.ArgumentParser.GetNextInputValues(CommandLine.Internal.IArgumentEnumerator)", span="125-125"];
m4_701 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(bool)", span="1913-1913"];
m4_702 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", color=green, community=0, file="CommandLine.cs", label="_settings = new CommandLineParserSettings(false, false, Console.Error)", prediction=354, span="1915-1915"];
m4_703 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", color=green, community=0, file="CommandLine.cs", label="InitializeDelagate()", prediction=77, span="1916-1916"];
m4_704 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser(bool)", span="1913-1913"];
m4_359 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="CommandLine.cs", label="Entry CommandLine.Internal.OptionMap.SetDefaults()", span="837-837"];
m4_360 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", color=green, community=0, file="CommandLine.cs", label="_map.Values", prediction=30, span="839-839"];
m4_361 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", color=green, community=0, file="CommandLine.cs", label="option.SetDefault(RawOptions)", prediction=30, span="841-841"];
m4_362 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="CommandLine.cs", label="Exit CommandLine.Internal.OptionMap.SetDefaults()", span="837-837"];
m4_524 [cluster="CommandLine.Internal.StringUtil.Spaces(int)", file="CommandLine.cs", label="Entry CommandLine.Internal.StringUtil.Spaces(int)", span="1159-1159"];
m4_525 [cluster="CommandLine.Internal.StringUtil.Spaces(int)", file="CommandLine.cs", label="return new string(' ', count);", span="1161-1161"];
m4_526 [cluster="CommandLine.Internal.StringUtil.Spaces(int)", file="CommandLine.cs", label="Exit CommandLine.Internal.StringUtil.Spaces(int)", span="1159-1159"];
m4_446 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="CommandLine.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m4_102 [cluster="System.InvalidOperationException.InvalidOperationException()", file="CommandLine.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m4_642 [cluster="System.Reflection.MethodBase.GetParameters()", file="CommandLine.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m4_32 [cluster="CommandLine.Internal.ArgumentParser.IsInputValue(string)", file="CommandLine.cs", label="Entry CommandLine.Internal.ArgumentParser.IsInputValue(string)", span="110-110"];
m4_33 [cluster="CommandLine.Internal.ArgumentParser.IsInputValue(string)", color=green, community=0, file="CommandLine.cs", label="StringUtil.IsNumeric(argument)", prediction=358, span="112-112"];
m4_34 [cluster="CommandLine.Internal.ArgumentParser.IsInputValue(string)", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=359, span="112-112"];
m4_35 [cluster="CommandLine.Internal.ArgumentParser.IsInputValue(string)", color=green, community=0, file="CommandLine.cs", label="argument.Length > 0", prediction=360, span="113-113"];
m4_36 [cluster="CommandLine.Internal.ArgumentParser.IsInputValue(string)", color=green, community=0, file="CommandLine.cs", label="return argument.Equals(''-'', StringComparison.InvariantCulture) || argument[0] != '-';", prediction=360, span="115-115"];
m4_37 [cluster="CommandLine.Internal.ArgumentParser.IsInputValue(string)", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=362, span="117-117"];
m4_38 [cluster="CommandLine.Internal.ArgumentParser.IsInputValue(string)", file="CommandLine.cs", label="Exit CommandLine.Internal.ArgumentParser.IsInputValue(string)", span="110-110"];
m4_94 [cluster="string.Substring(int, int)", file="CommandLine.cs", label="Entry string.Substring(int, int)", span="0-0"];
m4_735 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="2052-2052"];
m4_764 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="i < args.Length", span="2056-2056"];
m4_768 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="!string.IsNullOrEmpty(helpOption.LongName)", prediction=363, span="2066-2066"];
m4_765 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="helpOption.ShortName != null", span="2058-2058"];
m4_766 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="ArgumentParser.CompareShort(args[i], helpOption.ShortName, caseSensitive)", span="2060-2060"];
m4_769 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="ArgumentParser.CompareLong(args[i], helpOption.LongName, caseSensitive)", span="2068-2068"];
m4_771 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="i++", span="2056-2056"];
m4_762 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="bool caseSensitive = _settings.CaseSensitive", span="2054-2054"];
m4_763 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="int i = 0", span="2056-2056"];
m4_772 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="return false;", span="2075-2075"];
m4_767 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="return true;", span="2062-2062"];
m4_770 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="return true;", span="2070-2070"];
m4_773 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="2052-2052"];
m4_28 [cluster="CommandLine.Internal.StringUtil.IsNumeric(string)", file="CommandLine.cs", label="Entry CommandLine.Internal.StringUtil.IsNumeric(string)", span="1164-1164"];
m4_527 [cluster="CommandLine.Internal.StringUtil.IsNumeric(string)", color=green, community=0, file="CommandLine.cs", label="decimal temporary", prediction=364, span="1166-1166"];
m4_528 [cluster="CommandLine.Internal.StringUtil.IsNumeric(string)", color=green, community=0, file="CommandLine.cs", label="return decimal.TryParse(value, out temporary);", prediction=365, span="1167-1167"];
m4_529 [cluster="CommandLine.Internal.StringUtil.IsNumeric(string)", file="CommandLine.cs", label="Exit CommandLine.Internal.StringUtil.IsNumeric(string)", span="1164-1164"];
m4_31 [cluster="CommandLine.Internal.OptionGroupParser.OptionGroupParser(bool)", file="CommandLine.cs", label="Entry CommandLine.Internal.OptionGroupParser.OptionGroupParser(bool)", span="413-413"];
m4_184 [cluster="CommandLine.Internal.OptionGroupParser.OptionGroupParser(bool)", color=green, community=0, file="CommandLine.cs", label="_ignoreUnkwnownArguments = ignoreUnkwnownArguments", prediction=366, span="415-415"];
m4_185 [cluster="CommandLine.Internal.OptionGroupParser.OptionGroupParser(bool)", file="CommandLine.cs", label="Exit CommandLine.Internal.OptionGroupParser.OptionGroupParser(bool)", span="413-413"];
m4_671 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1782-1782"];
m4_672 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLine.cs", label="CaseSensitive = caseSensitive", span="1784-1784"];
m4_673 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1782-1782"];
m4_520 [cluster="string.CompareOrdinal(string, string)", file="CommandLine.cs", label="Entry string.CompareOrdinal(string, string)", span="0-0"];
m4_108 [cluster="CommandLine.Internal.StringArrayEnumerator.StringArrayEnumerator(string[])", file="CommandLine.cs", label="Entry CommandLine.Internal.StringArrayEnumerator.StringArrayEnumerator(string[])", span="251-251"];
m4_109 [cluster="CommandLine.Internal.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, file="CommandLine.cs", label="Assumes.NotNull(value, ''value'')", prediction=367, span="253-253"];
m4_110 [cluster="CommandLine.Internal.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, file="CommandLine.cs", label="_data = value", prediction=368, span="255-255"];
m4_111 [cluster="CommandLine.Internal.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, file="CommandLine.cs", label="_index = -1", prediction=369, span="256-256"];
m4_112 [cluster="CommandLine.Internal.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, file="CommandLine.cs", label="_endIndex = value.Length", prediction=370, span="257-257"];
m4_113 [cluster="CommandLine.Internal.StringArrayEnumerator.StringArrayEnumerator(string[])", file="CommandLine.cs", label="Exit CommandLine.Internal.StringArrayEnumerator.StringArrayEnumerator(string[])", span="251-251"];
m4_459 [cluster="object.GetType()", file="CommandLine.cs", label="Entry object.GetType()", span="0-0"];
m4_285 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="CommandLine.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m4_29 [cluster="string.Equals(string, System.StringComparison)", file="CommandLine.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m4_137 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="CommandLine.cs", label="Entry CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", span="328-328"];
m4_138 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="var parts = argumentEnumerator.Current.Substring(2).Split(new[] { '=' }, 2)", prediction=371, span="330-330"];
m4_139 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="var option = map[parts[0]]", prediction=372, span="331-331"];
m4_146 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="parts.Length == 1 && (argumentEnumerator.IsLast || !ArgumentParser.IsInputValue(argumentEnumerator.Next))", prediction=371, span="343-343"];
m4_148 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="parts.Length == 2", prediction=371, span="347-347"];
m4_150 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="valueSetting = option.SetValue(parts[1], options)", prediction=375, span="351-351"];
m4_156 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="items.Insert(0, parts[1])", prediction=371, span="362-362"];
m4_172 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="parts.Length == 2", prediction=371, span="396-396"];
m4_140 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="bool valueSetting", prediction=378, span="332-332"];
m4_141 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="option == null", prediction=372, span="333-333"];
m4_143 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="option.IsDefined = true", prediction=380, span="337-337"];
m4_144 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", prediction=372, span="339-339"];
m4_145 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!option.IsBoolean", prediction=372, span="341-341"];
m4_149 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!option.IsArray", prediction=372, span="349-349"];
m4_152 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="DefineOptionThatViolatesFormat(option)", prediction=372, span="354-354"];
m4_154 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", prediction=372, span="359-359"];
m4_157 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="valueSetting = option.SetValue(items, options)", prediction=386, span="364-364"];
m4_159 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="DefineOptionThatViolatesFormat(option)", prediction=372, span="367-367"];
m4_161 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!option.IsArray", prediction=372, span="373-373"];
m4_162 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", prediction=389, span="375-375"];
m4_164 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="DefineOptionThatViolatesFormat(option)", prediction=372, span="378-378"];
m4_166 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", prediction=372, span="383-383"];
m4_168 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="valueSetting = option.SetValue(items, options)", prediction=392, span="387-387"];
m4_170 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="DefineOptionThatViolatesFormat(option)", prediction=372, span="390-390"];
m4_174 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="valueSetting = option.SetValue(true, options)", prediction=394, span="400-400"];
m4_176 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="DefineOptionThatViolatesFormat(option)", prediction=372, span="403-403"];
m4_147 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ParserState.Failure;", prediction=396, span="345-345"];
m4_151 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!valueSetting", prediction=397, span="352-352"];
m4_153 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting);", prediction=375, span="356-356"];
m4_155 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", prediction=399, span="361-361"];
m4_158 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!valueSetting", prediction=400, span="365-365"];
m4_160 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting);", span="369-369"];
m4_163 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!valueSetting", prediction=401, span="376-376"];
m4_165 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting, true);", prediction=389, span="380-380"];
m4_167 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", prediction=403, span="385-385"];
m4_169 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!valueSetting", prediction=404, span="388-388"];
m4_171 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting);", prediction=392, span="392-392"];
m4_175 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!valueSetting", prediction=406, span="401-401"];
m4_177 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting);", prediction=394, span="405-405"];
m4_173 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ParserState.Failure;", prediction=408, span="398-398"];
m4_142 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return _ignoreUnkwnownArguments ? ParserState.MoveOnNextElement : ParserState.Failure;", prediction=372, span="335-335"];
m4_178 [cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="CommandLine.cs", label="Exit CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", span="328-328"];
m4_657 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1694-1694"];
m4_658 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1694-1694"];
m4_523 [cluster="System.Type.GetGenericTypeDefinition()", file="CommandLine.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m4_48 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="CommandLine.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m4_461 [cluster="System.Reflection.PropertyInfo.GetSetMethod()", file="CommandLine.cs", label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0"];
m4_705 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1925-1925"];
m4_706 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Assumes.NotNull(settings, ''settings'')", span="1927-1927"];
m4_707 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="InitializeDelagate()", span="1928-1928"];
m4_708 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="_settings = settings", span="1929-1929"];
m4_709 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1925-1925"];
m4_118 [cluster="CommandLine.Internal.StringArrayEnumerator.MoveNext()", file="CommandLine.cs", label="Entry CommandLine.Internal.StringArrayEnumerator.MoveNext()", span="291-291"];
m4_119 [cluster="CommandLine.Internal.StringArrayEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="_index < _endIndex", prediction=190, span="293-293"];
m4_120 [cluster="CommandLine.Internal.StringArrayEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="_index++", prediction=190, span="295-295"];
m4_122 [cluster="CommandLine.Internal.StringArrayEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=412, span="298-298"];
m4_121 [cluster="CommandLine.Internal.StringArrayEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="return _index < _endIndex;", prediction=190, span="296-296"];
m4_123 [cluster="CommandLine.Internal.StringArrayEnumerator.MoveNext()", file="CommandLine.cs", label="Exit CommandLine.Internal.StringArrayEnumerator.MoveNext()", span="291-291"];
m4_16 [cluster="System.Collections.Generic.List<T>.Add(T)", file="CommandLine.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_281 [cluster="System.Type.GetElementType()", file="CommandLine.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m4_674 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1793-1793"];
m4_675 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLine.cs", label="HelpWriter = helpWriter", span="1796-1796"];
m4_676 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1793-1793"];
m4_245 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="CommandLine.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m4_645 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(char?, string)", file="CommandLine.cs", label="Entry CommandLine.BadOptionInfo.BadOptionInfo(char?, string)", span="1584-1584"];
m4_646 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(char?, string)", color=green, community=0, file="CommandLine.cs", label="ShortName = shortName", prediction=414, span="1586-1586"];
m4_647 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(char?, string)", color=green, community=0, file="CommandLine.cs", label="LongName = longName", prediction=415, span="1587-1587"];
m4_648 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(char?, string)", file="CommandLine.cs", label="Exit CommandLine.BadOptionInfo.BadOptionInfo(char?, string)", span="1584-1584"];
m4_654 [cluster="CommandLine.PostParsingState.PostParsingState()", file="CommandLine.cs", label="Entry CommandLine.PostParsingState.PostParsingState()", span="1665-1665"];
m4_655 [cluster="CommandLine.PostParsingState.PostParsingState()", file="CommandLine.cs", label="Errors = new List<ParsingError>()", span="1667-1667"];
m4_656 [cluster="CommandLine.PostParsingState.PostParsingState()", file="CommandLine.cs", label="Exit CommandLine.PostParsingState.PostParsingState()", span="1665-1665"];
m4_570 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", file="CommandLine.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", span="1407-1407"];
m4_571 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", color=green, community=0, file="CommandLine.cs", label="Separator = separator", prediction=416, span="1410-1410"];
m4_572 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", file="CommandLine.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", span="1407-1407"];
m4_55 [cluster="string.Compare(string, string, bool)", file="CommandLine.cs", label="Entry string.Compare(string, string, bool)", span="0-0"];
m4_340 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="CommandLine.cs", label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="771-771"];
m4_341 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", color=green, community=0, file="CommandLine.cs", label="++_count", prediction=417, span="771-771"];
m4_342 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="CommandLine.cs", label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="771-771"];
m4_779 [file="CommandLine.cs", label="CommandLine.Internal.ArgumentParser", span=""];
m4_780 [file="CommandLine.cs", label="CommandLine.Internal.OneCharStringEnumerator", span=""];
m4_781 [file="CommandLine.cs", label="CommandLine.Internal.StringArrayEnumerator", span=""];
m4_782 [file="CommandLine.cs", label="CommandLine.Internal.LongOptionParser", span=""];
m4_783 [file="CommandLine.cs", label="CommandLine.Internal.OptionGroupParser", span=""];
m4_784 [file="CommandLine.cs", label="CommandLine.Internal.OptionInfo", span=""];
m4_785 [file="CommandLine.cs", label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo", span=""];
m4_786 [file="CommandLine.cs", label="CommandLine.Internal.OptionMap", span=""];
m4_787 [file="CommandLine.cs", label="CommandLine.Internal.Pair<TLeft, TRight>", span=""];
m4_788 [file="CommandLine.cs", label="CommandLine.Internal.TargetWrapper", span=""];
m4_789 [file="CommandLine.cs", label="CommandLine.OptionAttribute", span=""];
m4_790 [file="CommandLine.cs", label="CommandLine.OptionListAttribute", span=""];
m4_792 [file="CommandLine.cs", label="CommandLine.HelpOptionAttribute", span=""];
m4_793 [file="CommandLine.cs", label="CommandLine.BadOptionInfo", span=""];
m4_794 [file="CommandLine.cs", label="CommandLine.ParsingError", span=""];
m4_796 [file="CommandLine.cs", label="CommandLine.CommandLineOptionsBase", span=""];
m4_798 [file="CommandLine.cs", label="CommandLine.CommandLineParser", span=""];
m4_791 [file="CommandLine.cs", label="CommandLine.ValueListAttribute", span=""];
m4_795 [file="CommandLine.cs", label="CommandLine.PostParsingState", span=""];
m4_797 [file="CommandLine.cs", label="CommandLine.CommandLineParserSettings", span=""];
m5_14 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m5_15 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserBaseFixture.cs", label="Result.Should().Be.False()", span="66-66"];
m5_16 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserBaseFixture.cs", label="Result = null", span="67-67"];
m5_17 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserBaseFixture.cs", label="Exit CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m5_18 [cluster="Unk.False", file="CommandLineParserBaseFixture.cs", label="Entry Unk.False", span=""];
m5_4 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", span="53-53"];
m5_5 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", file="CommandLineParserBaseFixture.cs", label="Parser = new CommandLineParser()", span="55-55"];
m5_6 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", file="CommandLineParserBaseFixture.cs", label="Exit CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", span="53-53"];
m5_0 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", span="41-41"];
m5_1 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", file="CommandLineParserBaseFixture.cs", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''en-US'')", span="47-47"];
m5_2 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", file="CommandLineParserBaseFixture.cs", label="Exit CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", span="41-41"];
m5_7 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1681-1681"];
m5_13 [cluster="Unk.True", file="CommandLineParserBaseFixture.cs", label="Entry Unk.True", span=""];
m5_3 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="CommandLineParserBaseFixture.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m5_8 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m5_9 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserBaseFixture.cs", label="Result.Should().Be.True()", span="60-60"];
m5_10 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserBaseFixture.cs", label="Result = null", span="61-61"];
m5_11 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserBaseFixture.cs", label="Exit CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m5_19 [file="CommandLineParserBaseFixture.cs", label="CommandLine.Tests.CommandLineParserBaseFixture", span=""];
m6_10 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="62-62"];
m6_11 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="64-64"];
m6_12 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-s'', ''something'' }, options)", span="65-65"];
m6_14 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="options.StringValue.Should().Equal(''something'')", span="68-68"];
m6_15 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="69-69"];
m6_13 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="67-67"];
m6_16 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="62-62"];
m6_178 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="302-302"];
m6_179 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="304-304"];
m6_180 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--int'' }, options)", span="305-305"];
m6_181 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="307-307"];
m6_182 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="302-302"];
m6_262 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", span="445-445"];
m6_263 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="447-447"];
m6_264 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-b'', short.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="448-448"];
m6_265 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="450-450"];
m6_266 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", span="445-445"];
m6_244 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", span="413-413"];
m6_245 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="415-415"];
m6_246 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-d-4096.1024'' }, options)", span="416-416"];
m6_248 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs", label="options.DoubleValue.Should().Equal(-4096.1024D)", span="419-419"];
m6_247 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="418-418"];
m6_249 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", span="413-413"];
m6_286 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", span="481-481"];
m6_287 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="483-483"];
m6_288 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-f'', double.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="484-484"];
m6_289 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="486-486"];
m6_290 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", span="481-481"];
m6_0 [cluster="CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", span="43-43"];
m6_1 [cluster="CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", span="43-43"];
m6_126 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", span="33-33"];
m6_30 [cluster="Unk.True", file="CommandLineParserFixture.cs", label="Entry Unk.True", span=""];
m6_83 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
m6_121 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", span="35-35"];
m6_256 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", span="433-433"];
m6_257 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="435-435"];
m6_258 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--double=-4096.1024'' }, options)", span="436-436"];
m6_260 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs", label="options.DoubleValue.Should().Equal(-4096.1024D)", span="439-439"];
m6_259 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="438-438"];
m6_261 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", span="433-433"];
m6_93 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="CommandLineParserFixture.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m6_285 [cluster="float.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry float.ToString(System.IFormatProvider)", span="0-0"];
m6_250 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", span="423-423"];
m6_251 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="425-425"];
m6_252 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--double'', ''-4096.1024'' }, options)", span="426-426"];
m6_254 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs", label="options.DoubleValue.Should().Equal(-4096.1024D)", span="429-429"];
m6_253 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="428-428"];
m6_255 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", span="423-423"];
m6_94 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", span="35-35"];
m6_7 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="56-56"];
m6_8 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="base.Parser.ParseArguments(new string[] { }, null)", span="58-58"];
m6_9 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="56-56"];
m6_17 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m6_75 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="145-145"];
m6_76 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithEnum()", span="147-147"];
m6_77 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-s'', ''data.bin'', ''-a'', ''ReadWrite'' }, options)", span="149-149"];
m6_79 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="options.StringValue.Should().Equal(''data.bin'')", span="152-152"];
m6_80 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="options.FileAccess.Should().Equal(FileAccess.ReadWrite)", span="153-153"];
m6_81 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="154-154"];
m6_78 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="151-151"];
m6_82 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="145-145"];
m6_74 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m6_162 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLineParserFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1553-1553"];
m6_226 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="383-383"];
m6_227 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="385-385"];
m6_228 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--int'', ''-4096'' }, options)", span="386-386"];
m6_230 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs", label="options.IntegerValue.Should().Equal(-4096)", span="389-389"];
m6_229 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="388-388"];
m6_231 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="383-383"];
m6_163 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="275-275"];
m6_164 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="277-277"];
m6_165 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--string'' }, options)", span="278-278"];
m6_166 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="280-280"];
m6_167 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="275-275"];
m6_31 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="87-87"];
m6_32 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="var options = new BooleanSetOptions()", span="89-89"];
m6_33 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-ca'', ''-d65'' }, options)", span="90-90"];
m6_35 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="options.BooleanThree.Should().Be.True()", span="93-93"];
m6_36 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="options.BooleanOne.Should().Be.True()", span="94-94"];
m6_37 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="options.BooleanTwo.Should().Be.False()", span="95-95"];
m6_38 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="options.NonBooleanValue.Should().Equal(65D)", span="96-96"];
m6_39 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="97-97"];
m6_34 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="92-92"];
m6_40 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="87-87"];
m6_68 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="134-134"];
m6_69 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="136-136"];
m6_70 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i=10'' }, options)", span="138-138"];
m6_72 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="140-140"];
m6_71 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="139-139"];
m6_73 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="134-134"];
m6_280 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", span="472-472"];
m6_281 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="474-474"];
m6_282 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-l'', float.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="475-475"];
m6_283 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="477-477"];
m6_284 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", span="472-472"];
m6_53 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="115-115"];
m6_54 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithOptionList()", span="117-117"];
m6_55 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                                ''-k'', ''string1:stringTwo:stringIII'', ''-s'', ''test-file.txt'' }, options)", span="118-119"];
m6_57 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="options.SearchKeywords[0].Should().Equal(''string1'')", span="122-122"];
m6_58 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.SearchKeywords[0])", span="123-123"];
m6_59 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="options.SearchKeywords[1].Should().Equal(''stringTwo'')", span="124-124"];
m6_60 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.SearchKeywords[1])", span="125-125"];
m6_61 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="options.SearchKeywords[2].Should().Equal(''stringIII'')", span="126-126"];
m6_62 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.SearchKeywords[2])", span="127-127"];
m6_63 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="options.StringValue.Should().Equal(''test-file.txt'')", span="128-128"];
m6_64 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.StringValue)", span="129-129"];
m6_56 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="121-121"];
m6_65 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="115-115"];
m6_193 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="329-329"];
m6_194 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="331-331"];
m6_195 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--double'' }, options)", span="332-332"];
m6_196 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="334-334"];
m6_197 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="329-329"];
m6_6 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLineParserFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471"];
m6_153 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="261-261"];
m6_154 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="ICommandLineParser local = new CommandLineParser(new CommandLineParserSettings(false))", span="263-263"];
m6_155 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="var options = new MixedCaseOptions()", span="264-264"];
m6_156 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="265-265"];
m6_158 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="options.AlfaValue.Should().Equal(''alfa'')", span="268-268"];
m6_159 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="options.BetaValue.Should().Equal(''beta'')", span="269-269"];
m6_157 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="267-267"];
m6_160 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="261-261"];
m6_220 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="374-374"];
m6_221 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="376-376"];
m6_222 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i-4096'' }, options)", span="377-377"];
m6_224 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs", label="options.IntegerValue.Should().Equal(-4096)", span="380-380"];
m6_223 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="379-379"];
m6_225 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="374-374"];
m6_20 [cluster="System.Console.WriteLine(object)", file="CommandLineParserFixture.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m6_42 [cluster="Unk.False", file="CommandLineParserFixture.cs", label="Entry Unk.False", span=""];
m6_41 [cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", span="35-35"];
m6_66 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", span="35-35"];
m6_137 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", span="239-239"];
m6_138 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="ICommandLineParser local = new CommandLineParser()", span="241-241"];
m6_139 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="var options = new MixedCaseOptions()", span="242-242"];
m6_140 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Result = local.ParseArguments(new string[] { ''-a'', ''alfa'', ''--beta-OPTION'', ''beta'' }, options)", span="243-243"];
m6_142 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="options.AlfaValue.Should().Equal(''alfa'')", span="246-246"];
m6_143 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="options.BetaValue.Should().Equal(''beta'')", span="247-247"];
m6_141 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="245-245"];
m6_144 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", span="239-239"];
m6_84 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", span="158-158"];
m6_85 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="160-160"];
m6_86 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="161-161"];
m6_91 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="168-168"];
m6_87 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="162-162"];
m6_88 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-d'', ''10,986'' }, options)", span="163-163"];
m6_90 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="options.DoubleValue.Should().Equal(10.986D)", span="166-166"];
m6_89 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="165-165"];
m6_92 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", span="158-158"];
m6_132 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", span="228-228"];
m6_133 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="230-230"];
m6_134 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--extend'' }, options)", span="231-231"];
m6_135 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="233-233"];
m6_136 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", span="228-228"];
m6_21 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="73-73"];
m6_22 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="75-75"];
m6_23 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="76-77"];
m6_25 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="options.StringValue.Should().Equal(''another string'')", span="80-80"];
m6_26 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="options.IntegerValue.Should().Equal(100)", span="81-81"];
m6_27 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="options.BooleanValue.Should().Be.True()", span="82-82"];
m6_28 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="83-83"];
m6_24 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="79-79"];
m6_29 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="73-73"];
m6_204 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="350-350"];
m6_205 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithValueList()", span="352-352"];
m6_206 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-sparser.xml'', ''-'', ''--switch'' }, options)", span="353-353"];
m6_208 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="options.StringValue.Should().Equal(''parser.xml'')", span="356-356"];
m6_209 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="options.BooleanValue.Should().Be.True()", span="357-357"];
m6_210 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="options.Items.Count.Should().Equal(1)", span="358-358"];
m6_211 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="options.Items[0].Should().Equal(''-'')", span="359-359"];
m6_207 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="355-355"];
m6_212 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="350-350"];
m6_145 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParserFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1681-1681"];
m6_161 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParserFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1692-1692"];
m6_147 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="251-251"];
m6_148 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="ICommandLineParser local = new CommandLineParser()", span="253-253"];
m6_149 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="var options = new MixedCaseOptions()", span="254-254"];
m6_150 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="Result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="255-255"];
m6_151 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="257-257"];
m6_152 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="251-251"];
m6_214 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", span="365-365"];
m6_215 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="367-367"];
m6_216 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i'', ''-4096'' }, options)", span="368-368"];
m6_218 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs", label="options.IntegerValue.Should().Equal(-4096)", span="371-371"];
m6_217 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="370-370"];
m6_219 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", span="365-365"];
m6_2 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="49-49"];
m6_3 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="base.Parser.ParseArguments(null, new SimpleOptions())", span="51-51"];
m6_4 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="49-49"];
m6_122 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", span="211-211"];
m6_123 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithBadDefaults()", span="213-213"];
m6_124 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="base.Parser.ParseArguments(new string[] {}, options)", span="214-214"];
m6_125 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", span="211-211"];
m6_213 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35"];
m6_112 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", span="33-33"];
m6_198 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="340-340"];
m6_199 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="342-342"];
m6_200 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--string'', ''-'' }, options)", span="343-343"];
m6_202 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="options.StringValue.Should().Equal(''-'')", span="346-346"];
m6_201 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="345-345"];
m6_203 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="340-340"];
m6_5 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33"];
m6_268 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", span="454-454"];
m6_269 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="456-456"];
m6_270 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-s'', int.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="457-457"];
m6_271 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="459-459"];
m6_272 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", span="454-454"];
m6_232 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="392-392"];
m6_233 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="394-394"];
m6_234 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--int=-4096'' }, options)", span="395-395"];
m6_236 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs", label="options.IntegerValue.Should().Equal(-4096)", span="398-398"];
m6_235 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="397-397"];
m6_237 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="392-392"];
m6_67 [cluster="System.Console.WriteLine(string)", file="CommandLineParserFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m6_43 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="101-101"];
m6_44 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="var options = new BooleanSetOptions()", span="103-103"];
m6_45 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-b'', ''--double=9'' }, options)", span="104-104"];
m6_47 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="options.BooleanTwo.Should().Be.True()", span="107-107"];
m6_48 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="options.BooleanOne.Should().Be.False()", span="108-108"];
m6_49 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="options.BooleanThree.Should().Be.False()", span="109-109"];
m6_50 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="options.NonBooleanValue.Should().Equal(9D)", span="110-110"];
m6_51 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="111-111"];
m6_46 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="106-106"];
m6_52 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="101-101"];
m6_168 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="284-284"];
m6_169 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="286-286"];
m6_170 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--byte'' }, options)", span="287-287"];
m6_171 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="289-289"];
m6_172 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="284-284"];
m6_183 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="311-311"];
m6_184 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="313-313"];
m6_185 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--long'' }, options)", span="314-314"];
m6_186 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="316-316"];
m6_187 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="311-311"];
m6_146 [cluster="CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", span="33-33"];
m6_238 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", span="403-403"];
m6_239 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="405-405"];
m6_240 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-d'', ''-4096.1024'' }, options)", span="406-406"];
m6_242 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs", label="options.DoubleValue.Should().Equal(-4096.1024D)", span="409-409"];
m6_241 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="408-408"];
m6_243 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", span="403-403"];
m6_291 [cluster="double.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m6_113 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", span="198-198"];
m6_114 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithDefaultArray()", span="200-200"];
m6_115 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-y'', ''4'', ''5'', ''6'' }, options)", span="201-201"];
m6_117 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="options.StringArrayValue.Should().Equal(new string[] { ''a'', ''b'', ''c'' })", span="204-204"];
m6_118 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="options.IntegerArrayValue.Should().Equal(new int[] { 4, 5, 6 })", span="205-205"];
m6_119 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="options.DoubleArrayValue.Should().Equal(new double[] { 1.1, 2.2, 3.3 })", span="206-206"];
m6_116 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="203-203"];
m6_120 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", span="198-198"];
m6_274 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", span="463-463"];
m6_275 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="465-465"];
m6_276 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i'', long.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="466-466"];
m6_277 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="468-468"];
m6_278 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", span="463-463"];
m6_267 [cluster="short.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry short.ToString(System.IFormatProvider)", span="0-0"];
m6_95 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", span="172-172"];
m6_96 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="174-174"];
m6_97 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="175-175"];
m6_102 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="182-182"];
m6_98 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="176-176"];
m6_99 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--n-double'', ''12,32982'' }, options)", span="177-177"];
m6_101 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="options.NullableDoubleValue.Should().Equal(12.32982D)", span="180-180"];
m6_100 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="179-179"];
m6_103 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", span="172-172"];
m6_273 [cluster="int.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m6_188 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="320-320"];
m6_189 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="322-322"];
m6_190 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--float'' }, options)", span="323-323"];
m6_191 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="325-325"];
m6_192 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="320-320"];
m6_104 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", span="186-186"];
m6_105 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithDefaults()", span="188-188"];
m6_106 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {}, options)", span="189-189"];
m6_108 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="options.StringValue.Should().Equal(''str'')", span="192-192"];
m6_109 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="options.IntegerValue.Should().Equal(9)", span="193-193"];
m6_110 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="options.BooleanValue.Should().Be.True()", span="194-194"];
m6_107 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="191-191"];
m6_111 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", span="186-186"];
m6_279 [cluster="long.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
m6_19 [cluster="Unk.Equal", file="CommandLineParserFixture.cs", label="Entry Unk.Equal", span=""];
m6_127 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", span="219-219"];
m6_128 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="221-221"];
m6_129 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-x'' }, options)", span="222-222"];
m6_130 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="224-224"];
m6_131 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", span="219-219"];
m6_173 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="293-293"];
m6_174 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="295-295"];
m6_175 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--short'' }, options)", span="296-296"];
m6_176 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="298-298"];
m6_177 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="293-293"];
m6_292 [file="CommandLineParserFixture.cs", label="CommandLine.Tests.CommandLineParserFixture", span=""];
m7_12 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471"];
m7_0 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", span="41-41"];
m7_1 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="var writer = new StringWriter()", span="43-43"];
m7_2 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="ICommandLineParser parser = new CommandLineParser(new CommandLineParserSettings(writer))", span="44-44"];
m7_6 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="writer.ToString().Should().Equal(''MockOptions::GetUsage()'')", span="50-50"];
m7_3 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="var options = new SimpleOptionsWithHelpOption()", span="45-45"];
m7_4 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="bool success = parser.ParseArguments(new string[] {''--help''}, options)", span="47-47"];
m7_5 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="success.Should().Be.False()", span="49-49"];
m7_7 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", span="41-41"];
m7_11 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.SimpleOptionsWithHelpOption()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.SimpleOptionsWithHelpOption()", span="33-33"];
m7_14 [cluster="Unk.False", file="CommandLineParserSettingsFixture.cs", label="Entry Unk.False", span=""];
m7_8 [cluster="System.IO.StringWriter.StringWriter()", file="CommandLineParserSettingsFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m7_15 [cluster="System.IO.StringWriter.ToString()", file="CommandLineParserSettingsFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m7_36 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1486-1486"];
m7_9 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1692-1692"];
m7_27 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1543-1543"];
m7_28 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", span="69-69"];
m7_29 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="var writer = new StringWriter()", span="71-71"];
m7_30 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="ICommandLineParser parser = new CommandLineParser(new CommandLineParserSettings())", span="72-72"];
m7_32 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="bool success = parser.ParseArguments(new string[] { ''--help'' }, options, writer)", span="75-75"];
m7_34 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="writer.ToString().Should().Equal(''MockOptions::GetUsage()'')", span="78-78"];
m7_31 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="var options = new SimpleOptionsWithHelpOption()", span="73-73"];
m7_33 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="success.Should().Be.False()", span="77-77"];
m7_35 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", span="69-69"];
m7_10 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1564-1564"];
m7_13 [cluster="Unk.Should", file="CommandLineParserSettingsFixture.cs", label="Entry Unk.Should", span=""];
m7_17 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", span="54-54"];
m7_18 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="var writer = new StringWriter()", span="56-56"];
m7_19 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="var settings = new CommandLineParserSettings()", span="57-57"];
m7_20 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="settings.HelpWriter = writer", span="58-58"];
m7_25 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="writer.ToString().Should().Equal(''MockOptions::GetUsage()'')", span="65-65"];
m7_21 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="ICommandLineParser parser = new CommandLineParser(settings)", span="59-59"];
m7_22 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="var options = new SimpleOptionsWithHelpOption()", span="60-60"];
m7_23 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="bool success = parser.ParseArguments(new string[] { ''--help'' }, options)", span="62-62"];
m7_24 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="success.Should().Be.False()", span="64-64"];
m7_26 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", span="54-54"];
m9_13 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="CommandLineVerbs.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1751-1751"];
m9_91 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="CommandLineVerbs.cs", label="Entry CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="306-306"];
m9_103 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", color=green, community=0, file="CommandLineVerbs.cs", label="string helpText", prediction=418, span="308-308"];
m9_104 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", color=green, community=0, file="CommandLineVerbs.cs", label="verb == null", prediction=419, span="309-309"];
m9_105 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", color=green, community=0, file="CommandLineVerbs.cs", label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, null, out helpText)", prediction=419, span="311-311"];
m9_106 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", color=green, community=0, file="CommandLineVerbs.cs", label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, verb, out helpText)", prediction=419, span="315-315"];
m9_107 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", color=green, community=0, file="CommandLineVerbs.cs", label="_settings.HelpWriter.Write(helpText)", prediction=422, span="317-317"];
m9_108 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="CommandLineVerbs.cs", label="Exit CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="306-306"];
m9_5 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", file="CommandLineVerbs.cs", label="Entry CommandLine.Internal.OptionInfo.CreateInstance(object)", span="71-71"];
m9_6 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", color=green, community=0, file="CommandLineVerbs.cs", label=_setValueLock, prediction=423, span="73-73"];
m9_7 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", color=green, community=0, file="CommandLineVerbs.cs", label="_property.SetValue(target, Activator.CreateInstance(_property.PropertyType), null)", prediction=423, span="77-77"];
m9_8 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", color=green, community=0, file="CommandLineVerbs.cs", label=Exception, prediction=425, span="79-79"];
m9_9 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", color=green, community=0, file="CommandLineVerbs.cs", label="throw new CommandLineParserException(''Instance defined for verb command could not be created.'', e);", prediction=426, span="81-81"];
m9_10 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", file="CommandLineVerbs.cs", label="Exit CommandLine.Internal.OptionInfo.CreateInstance(object)", span="71-71"];
m9_90 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLineVerbs.cs", label="Entry CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1046-1046"];
m9_49 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="CommandLineVerbs.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m9_64 [cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="CommandLineVerbs.cs", label="Entry CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="1124-1124"];
m9_88 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLineVerbs.cs", label="Entry CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1019-1019"];
m9_29 [cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", file="CommandLineVerbs.cs", label="Entry CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", span="124-124"];
m9_30 [cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", color=green, community=0, file="CommandLineVerbs.cs", label="Assumes.NotNullOrEmpty(longName, ''longName'')", prediction=427, span="127-127"];
m9_31 [cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", file="CommandLineVerbs.cs", label="Exit CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", span="124-124"];
m9_27 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLineVerbs.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1746-1746"];
m9_0 [cluster="CommandLine.Internal.OptionInfo.GetValue(object)", file="CommandLineVerbs.cs", label="Entry CommandLine.Internal.OptionInfo.GetValue(object)", span="63-63"];
m9_1 [cluster="CommandLine.Internal.OptionInfo.GetValue(object)", color=green, community=0, file="CommandLineVerbs.cs", label=_setValueLock, prediction=423, span="65-65"];
m9_2 [cluster="CommandLine.Internal.OptionInfo.GetValue(object)", color=green, community=0, file="CommandLineVerbs.cs", label="return _property.GetValue(target, null);", prediction=423, span="67-67"];
m9_3 [cluster="CommandLine.Internal.OptionInfo.GetValue(object)", file="CommandLineVerbs.cs", label="Exit CommandLine.Internal.OptionInfo.GetValue(object)", span="63-63"];
m9_54 [cluster="System.Reflection.MethodBase.GetParameters()", file="CommandLineVerbs.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m9_65 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", file="CommandLineVerbs.cs", label="Entry CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", span="246-246"];
m9_66 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=green, community=0, file="CommandLineVerbs.cs", label="var verbs = ReflectionUtil.RetrievePropertyList<VerbOptionAttribute>(options)", prediction=430, span="248-248"];
m9_67 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=green, community=0, file="CommandLineVerbs.cs", label="verbs.Count == 0", prediction=431, span="249-249"];
m9_74 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=green, community=0, file="CommandLineVerbs.cs", label="var optionMap = OptionInfo.CreateMap(options, verbs, _settings)", prediction=432, span="263-263"];
m9_68 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=green, community=0, file="CommandLineVerbs.cs", label="return DoParseArgumentsCore(args, options);", prediction=422, span="252-252"];
m9_69 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=green, community=0, file="CommandLineVerbs.cs", label="var helpInfo = ReflectionUtil.RetrieveMethod<HelpVerbOptionAttribute>(options)", prediction=422, span="254-254"];
m9_70 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=green, community=0, file="CommandLineVerbs.cs", label="args.Length == 0", prediction=422, span="255-255"];
m9_71 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=green, community=0, file="CommandLineVerbs.cs", label="helpInfo != null || _settings.HelpWriter != null", prediction=422, span="257-257"];
m9_72 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=green, community=0, file="CommandLineVerbs.cs", label="DisplayHelpVerbText(options, helpInfo, null)", prediction=422, span="259-259"];
m9_75 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=green, community=0, file="CommandLineVerbs.cs", label="TryParseHelpVerb(args, options, helpInfo)", prediction=422, span="265-265"];
m9_85 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=green, community=0, file="CommandLineVerbs.cs", label="DisplayHelpVerbText(options, helpInfo, args[0])", prediction=422, span="285-285"];
m9_73 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=green, community=0, file="CommandLineVerbs.cs", label="return false;", prediction=440, span="261-261"];
m9_77 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=green, community=0, file="CommandLineVerbs.cs", label="var verbOption = optionMap[args[0]]", prediction=422, span="270-270"];
m9_76 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=green, community=0, file="CommandLineVerbs.cs", label="return false;", prediction=442, span="268-268"];
m9_78 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=green, community=0, file="CommandLineVerbs.cs", label="verbOption.GetValue(options) == null", prediction=422, span="271-271"];
m9_79 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=green, community=0, file="CommandLineVerbs.cs", label="verbOption.CreateInstance(options)", prediction=422, span="274-274"];
m9_83 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=green, community=0, file="CommandLineVerbs.cs", label="var verbResult = DoParseArgumentsCore(verbArgs, verbOption.GetValue(options))", prediction=445, span="281-281"];
m9_80 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=green, community=0, file="CommandLineVerbs.cs", label="var verbArgs = new string[args.Length - 1]", prediction=422, span="276-276"];
m9_81 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=green, community=0, file="CommandLineVerbs.cs", label="args.Length > 1", prediction=422, span="277-277"];
m9_82 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=green, community=0, file="CommandLineVerbs.cs", label="Array.Copy(args, 1, verbArgs, 0, args.Length - 1)", prediction=422, span="279-279"];
m9_84 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=green, community=0, file="CommandLineVerbs.cs", label="!verbResult", prediction=449, span="282-282"];
m9_86 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", color=green, community=0, file="CommandLineVerbs.cs", label="return verbResult;", prediction=445, span="287-287"];
m9_87 [cluster="CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", file="CommandLineVerbs.cs", label="Exit CommandLine.CommandLineParser.DoParseArgumentsUsingVerbs(string[], object)", span="246-246"];
m9_12 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="CommandLineVerbs.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m9_24 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLineVerbs.cs", label="Entry CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="778-778"];
m9_55 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", file="CommandLineVerbs.cs", label="Entry CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", span="234-234"];
m9_56 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", color=green, community=0, file="CommandLineVerbs.cs", label="found = false", prediction=451, span="236-236"];
m9_57 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", color=green, community=0, file="CommandLineVerbs.cs", label="string.IsNullOrEmpty(verb)", prediction=452, span="237-237"];
m9_58 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", color=green, community=0, file="CommandLineVerbs.cs", label="return target;", prediction=452, span="239-239"];
m9_59 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", color=green, community=0, file="CommandLineVerbs.cs", label="var pair = ReflectionUtil.RetrieveOptionProperty<VerbOptionAttribute>(target, verb)", prediction=452, span="241-241"];
m9_60 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", color=green, community=0, file="CommandLineVerbs.cs", label="found = pair != null", prediction=455, span="242-242"];
m9_61 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", color=green, community=0, file="CommandLineVerbs.cs", label="return found ? pair.Left.GetValue(target, null) : target;", prediction=452, span="243-243"];
m9_62 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", file="CommandLineVerbs.cs", label="Exit CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", span="234-234"];
m9_40 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="CommandLineVerbs.cs", label="Entry CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", span="196-196"];
m9_41 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", color=green, community=0, file="CommandLineVerbs.cs", label="text = null", prediction=457, span="199-199"];
m9_42 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", color=green, community=0, file="CommandLineVerbs.cs", label="var method = helpInfo.Left", prediction=458, span="200-200"];
m9_43 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", color=green, community=0, file="CommandLineVerbs.cs", label="!CheckMethodSignature(method)", prediction=459, span="201-201"];
m9_44 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", color=green, community=0, file="CommandLineVerbs.cs", label="throw new MemberAccessException(string.Format(\r\n                    ''{0} has an incorrect signature. '' +\r\n                    ''Help verb command requires a method that accepts and returns a string.'', method.Name));", prediction=458, span="203-205"];
m9_45 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", color=green, community=0, file="CommandLineVerbs.cs", label="text = (string) method.Invoke(target, new object[] {verb})", prediction=461, span="207-207"];
m9_46 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="CommandLineVerbs.cs", label="Exit CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", span="196-196"];
m9_32 [cluster="CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", file="CommandLineVerbs.cs", label="Entry CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", span="1004-1004"];
m9_33 [cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute()", file="CommandLineVerbs.cs", label="Entry CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute()", span="161-161"];
m9_34 [cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute()", color=green, community=0, file="CommandLineVerbs.cs", label="HelpText = DefaultHelpText", prediction=462, span="164-164"];
m9_35 [cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute()", file="CommandLineVerbs.cs", label="Exit CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute()", span="161-161"];
m9_11 [cluster="System.Activator.CreateInstance(System.Type)", file="CommandLineVerbs.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m9_25 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLineVerbs.cs", label="Entry CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="516-516"];
m9_26 [cluster="System.Type.GetConstructor(System.Type[])", file="CommandLineVerbs.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m9_48 [cluster="System.MemberAccessException.MemberAccessException(string)", file="CommandLineVerbs.cs", label="Entry System.MemberAccessException.MemberAccessException(string)", span="0-0"];
m9_63 [cluster="string.IsNullOrEmpty(string)", file="CommandLineVerbs.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m9_28 [cluster="string.Format(string, object)", file="CommandLineVerbs.cs", label="Entry string.Format(string, object)", span="0-0"];
m9_89 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLineVerbs.cs", label="Entry CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", span="2010-2010"];
m9_36 [cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", file="CommandLineVerbs.cs", label="Entry CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", span="172-172"];
m9_37 [cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", color=green, community=0, file="CommandLineVerbs.cs", label="LongName = longName", prediction=463, span="174-174"];
m9_38 [cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", color=green, community=0, file="CommandLineVerbs.cs", label="HelpText = DefaultHelpText", prediction=464, span="175-175"];
m9_39 [cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", file="CommandLineVerbs.cs", label="Exit CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", span="172-172"];
m9_47 [cluster="CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="CommandLineVerbs.cs", label="Entry CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="210-210"];
m9_50 [cluster="CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", color=green, community=0, file="CommandLineVerbs.cs", label="value.ReturnType == typeof(string) && value.GetParameters().Length == 1", prediction=465, span="212-212"];
m9_51 [cluster="CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", color=green, community=0, file="CommandLineVerbs.cs", label="return value.GetParameters()[0].ParameterType == typeof(string);", prediction=466, span="214-214"];
m9_52 [cluster="CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", color=green, community=0, file="CommandLineVerbs.cs", label="return false;", prediction=467, span="216-216"];
m9_53 [cluster="CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="CommandLineVerbs.cs", label="Exit CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="210-210"];
m9_102 [cluster="string.Compare(string, string, System.StringComparison)", file="CommandLineVerbs.cs", label="Entry string.Compare(string, string, System.StringComparison)", span="0-0"];
m9_14 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="CommandLineVerbs.cs", label="Entry CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", span="86-86"];
m9_15 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLineVerbs.cs", label="var map = new OptionMap(verbs.Count, settings)", prediction=468, span="89-89"];
m9_16 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLineVerbs.cs", label=verbs, prediction=469, span="90-90"];
m9_20 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLineVerbs.cs", label="map[verb.Right.UniqueName] = optionInfo", prediction=470, span="102-102"];
m9_21 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLineVerbs.cs", label="map.RawOptions = target", prediction=471, span="104-104"];
m9_22 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLineVerbs.cs", label="return map;", prediction=468, span="105-105"];
m9_17 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLineVerbs.cs", label="var optionInfo = new OptionInfo(verb.Right, verb.Left)\r\n                        {\r\n                            HasParameterLessCtor = verb.Left.PropertyType.GetConstructor(Type.EmptyTypes) != null\r\n\r\n                        }", prediction=473, span="92-96"];
m9_18 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLineVerbs.cs", label="!optionInfo.HasParameterLessCtor && verb.Left.GetValue(target, null) == null", prediction=469, span="97-97"];
m9_19 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLineVerbs.cs", label="throw new CommandLineParserException(string.Format(''Type {0} must have a parameterless constructor or'' +\r\n                            '' be already initialized to be used as a verb command.'', verb.Left.PropertyType));", prediction=469, span="99-100"];
m9_23 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="CommandLineVerbs.cs", label="Exit CommandLine.Internal.OptionInfo.CreateMap(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", span="86-86"];
m9_92 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>)", file="CommandLineVerbs.cs", label="Entry CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>)", span="290-290"];
m9_94 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>)", color=green, community=0, file="CommandLineVerbs.cs", label="var helpWriter = _settings.HelpWriter", prediction=476, span="292-292"];
m9_95 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>)", color=green, community=0, file="CommandLineVerbs.cs", label="helpInfo != null && helpWriter != null", prediction=422, span="293-293"];
m9_96 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>)", color=green, community=0, file="CommandLineVerbs.cs", label="string.Compare(args[0], helpInfo.Right.LongName, _settings.StringComparison) == 0", prediction=422, span="295-295"];
m9_100 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>)", color=green, community=0, file="CommandLineVerbs.cs", label="return false;", prediction=479, span="303-303"];
m9_97 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>)", color=green, community=0, file="CommandLineVerbs.cs", label="var verb = args.Length > 1 ? args[1] : null", prediction=480, span="298-298"];
m9_98 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>)", color=green, community=0, file="CommandLineVerbs.cs", label="DisplayHelpVerbText(options, helpInfo, verb)", prediction=422, span="299-299"];
m9_99 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>)", color=green, community=0, file="CommandLineVerbs.cs", label="return true;", prediction=482, span="300-300"];
m9_101 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>)", file="CommandLineVerbs.cs", label="Exit CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>)", span="290-290"];
m9_93 [cluster="System.Array.Copy(System.Array, int, System.Array, int, int)", file="CommandLineVerbs.cs", label="Entry System.Array.Copy(System.Array, int, System.Array, int, int)", span="0-0"];
m9_4 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="CommandLineVerbs.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m9_109 [cluster="System.IO.TextWriter.Write(string)", file="CommandLineVerbs.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m9_110 [file="CommandLineVerbs.cs", label="CommandLine.Internal.OptionInfo", span=""];
m9_111 [file="CommandLineVerbs.cs", label="CommandLine.HelpVerbOptionAttribute", span=""];
m9_112 [file="CommandLineVerbs.cs", label="CommandLine.CommandLineParser", span=""];
m10_4 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ToString()", file="ComplexOptions.cs", label="Entry CommandLine.Tests.Mocks.ComplexOptions.ToString()", span="53-53"];
m10_5 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ToString()", file="ComplexOptions.cs", label="return DebugStringUtil.ConvertOptionsToString(this);", span="55-55"];
m10_6 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ToString()", file="ComplexOptions.cs", label="Exit CommandLine.Tests.Mocks.ComplexOptions.ToString()", span="53-53"];
m10_0 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="ComplexOptions.cs", label="Entry CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", span="35-35"];
m10_1 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="ComplexOptions.cs", label="StartOffset = 0", span="37-37"];
m10_2 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="ComplexOptions.cs", label="Bytes = 0", span="38-38"];
m10_3 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="ComplexOptions.cs", label="Exit CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", span="35-35"];
m10_7 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="ComplexOptions.cs", label="Entry CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", span="39-39"];
m10_8 [file="ComplexOptions.cs", label="CommandLine.Tests.Mocks.ComplexOptions", span=""];
m11_13 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m11_2 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", span="54-54"];
m11_3 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="var yearsPart = new StringBuilder(years.Length * 4)", span="56-56"];
m11_4 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label=years, span="58-58"];
m11_7 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="yearsPart.Append(string.Concat(''''', y))", span="62-62"];
m11_8 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="yearsPart.Append(y)", span="64-64"];
m11_9 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="yearsPart.Append('', '')", span="65-65"];
m11_10 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="yearsPart.Remove(yearsPart.Length - 2, 2)", span="67-67"];
m11_11 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="return yearsPart.ToString();", span="69-69"];
m11_5 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="string y = year.ToString(CultureInfo.InvariantCulture)", span="60-60"];
m11_6 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="y.Length == 2", span="61-61"];
m11_12 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", span="54-54"];
m11_44 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", span="115-115"];
m11_45 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", file="CopyrightInfoFixture.cs", label="new CopyrightInfo(''Authors, Inc.'')", span="117-117"];
m11_46 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", span="115-115"];
m11_27 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", span="83-83"];
m11_28 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(true, ''X & Y Group'', 2006, 2007)", span="85-85"];
m11_29 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", file="CopyrightInfoFixture.cs", label="copyright.ToString().Should().Equal(''Copyright (C) 2006, 2007 X & Y Group'')", span="87-87"];
m11_30 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", span="83-83"];
m11_0 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", span="44-44"];
m11_1 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", span="44-44"];
m11_15 [cluster="string.Concat(string, string)", file="CopyrightInfoFixture.cs", label="Entry string.Concat(string, string)", span="0-0"];
m11_47 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", span="121-121"];
m11_48 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", file="CopyrightInfoFixture.cs", label="var info = new CopyleftInfo(true, ''Free Company, Inc.'', 96, 97, 98, 2005)", span="123-123"];
m11_49 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", file="CopyrightInfoFixture.cs", label="info.ToString().Should().Equal(''Copyleft (C) '96, '97, '98, 2005 Free Company, Inc.'')", span="125-125"];
m11_50 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", span="121-121"];
m11_35 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="179-179"];
m11_51 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", span="130-130"];
m11_52 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs", label="var info = new CopyrightInfo (''ManOnTheMoon, Inc.'', 2019)", span="132-132"];
m11_53 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs", label="int i=0", span="134-134"];
m11_55 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs", label="info.ToString().Length.Should().Equal(37)", span="136-136"];
m11_54 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs", label="i<10", span="134-134"];
m11_56 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs", label="i++", span="134-134"];
m11_57 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", span="130-130"];
m11_31 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", span="91-91"];
m11_32 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(''W & Z, Inc.'', 2005, 2007)", span="93-93"];
m11_33 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", file="CopyrightInfoFixture.cs", label="copyright.ToString().Should().Equal(''Copyright (C) 2005 - 2007 W & Z, Inc.'')", span="95-95"];
m11_34 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", span="91-91"];
m11_17 [cluster="System.Text.StringBuilder.Remove(int, int)", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m11_23 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="193-193"];
m11_43 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="166-166"];
m11_36 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", span="99-99"];
m11_37 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(''CommandLine, Ltd'', 1999, 2003, 2004, 2007)", span="101-101"];
m11_38 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs", label="copyright.ToString().Should().Equal(''Copyright (C) 1999 - 2003, 2004 - 2007 CommandLine, Ltd'')", span="103-103"];
m11_39 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", span="99-99"];
m11_24 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.ToString()", span="209-209"];
m11_18 [cluster="System.Text.StringBuilder.ToString()", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m11_16 [cluster="System.Text.StringBuilder.Append(string)", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m11_14 [cluster="int.ToString(System.IFormatProvider)", file="CopyrightInfoFixture.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m11_26 [cluster="Unk.Equal", file="CopyrightInfoFixture.cs", label="Entry Unk.Equal", span=""];
m11_19 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", span="75-75"];
m11_20 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(false, ''Authors, Inc.'', 2007)", span="77-77"];
m11_21 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs", label="copyright.ToString().Should().Equal(''Copyright (c) 2007 Authors, Inc.'')", span="79-79"];
m11_22 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", span="75-75"];
m11_40 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", span="108-108"];
m11_41 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", file="CopyrightInfoFixture.cs", label="new CopyrightInfo(null, 2000)", span="110-110"];
m11_42 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", span="108-108"];
m12_33 [cluster="System.Text.StringBuilder.Append(object)", file="DebugStringUtil.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m12_16 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="Entry CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", span="59-59"];
m12_19 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="var baseOA = attr as BaseOptionAttribute", span="61-61"];
m12_22 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="builder.Append(baseOA.ShortName)", span="67-67"];
m12_24 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="builder.Append(''/'')", span="70-70"];
m12_26 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="builder.Append(baseOA.LongName)", span="75-75"];
m12_27 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="builder.Append('': '')", span="77-77"];
m12_28 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="builder.Append(field.GetValue(instance))", span="78-78"];
m12_29 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="builder.Append(Environment.NewLine)", span="79-79"];
m12_20 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="baseOA != null", span="63-63"];
m12_21 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="baseOA.HasShortName", span="65-65"];
m12_23 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="baseOA.HasLongName", span="68-68"];
m12_25 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="baseOA.HasLongName", span="73-73"];
m12_30 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="Exit CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", span="59-59"];
m12_31 [cluster="System.Text.StringBuilder.Append(string)", file="DebugStringUtil.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m12_12 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="DebugStringUtil.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m12_0 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="Entry CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", span="39-39"];
m12_1 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="var builder = new StringBuilder(256)", span="41-41"];
m12_2 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="var type = instance.GetType()", span="42-42"];
m12_8 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="AppendBaseOptionAttribute(builder, instance, field, attr)", span="51-51"];
m12_9 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="AppendValueListAttribute(builder, instance, field, attr)", span="52-52"];
m12_10 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="return builder.ToString();", span="56-56"];
m12_3 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="var fields = type.GetFields()", span="43-43"];
m12_4 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label=fields, span="45-45"];
m12_5 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="object[] attrs = field.GetCustomAttributes(false)", span="47-47"];
m12_6 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="attrs.Length > 0", span="48-48"];
m12_7 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="object attr = attrs[0]", span="50-50"];
m12_11 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="Exit CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", span="39-39"];
m12_13 [cluster="object.GetType()", file="DebugStringUtil.cs", label="Entry object.GetType()", span="0-0"];
m12_32 [cluster="System.Reflection.FieldInfo.GetValue(object)", file="DebugStringUtil.cs", label="Entry System.Reflection.FieldInfo.GetValue(object)", span="0-0"];
m12_18 [cluster="System.Text.StringBuilder.ToString()", file="DebugStringUtil.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m12_14 [cluster="System.Type.GetFields()", file="DebugStringUtil.cs", label="Entry System.Type.GetFields()", span="0-0"];
m12_15 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="DebugStringUtil.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m12_17 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="Entry CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", span="83-83"];
m12_34 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="var valueList = attr as ValueListAttribute", span="85-85"];
m12_36 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="IList<string> values = (IList<string>)field.GetValue(instance)", span="89-89"];
m12_38 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="builder.Append(''non-option value: '')", span="92-92"];
m12_39 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="builder.Append(value)", span="93-93"];
m12_40 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="builder.Append(Environment.NewLine)", span="94-94"];
m12_35 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="valueList != null", span="87-87"];
m12_37 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label=values, span="90-90"];
m12_41 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="Exit CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", span="83-83"];
m13_20 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="EnumeratorsFixture.cs", label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="532-532"];
m13_23 [cluster="Unk.False", file="EnumeratorsFixture.cs", label="Entry Unk.False", span=""];
m13_47 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="EnumeratorsFixture.cs", label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="628-628"];
m13_25 [cluster="Unk.True", file="EnumeratorsFixture.cs", label="Entry Unk.True", span=""];
m13_24 [cluster="Unk.Null", file="EnumeratorsFixture.cs", label="Entry Unk.Null", span=""];
m13_0 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Tests.EnumeratorsFixture.StringIteration()", span="39-39"];
m13_1 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="string valueOne = ''one''", span="41-41"];
m13_2 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="string valueTwo = ''two''", span="42-42"];
m13_4 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="string[] values = { valueOne, valueTwo, valueThree }", span="45-45"];
m13_7 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.Current.Should().Equal(valueOne)", span="49-49"];
m13_3 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="string valueThree = ''three''", span="43-43"];
m13_8 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.Next.Should().Equal(valueTwo)", span="50-50"];
m13_11 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.Current.Should().Equal(valueTwo)", span="55-55"];
m13_12 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.Next.Should().Equal(valueThree)", span="56-56"];
m13_15 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.Current.Should().Equal(valueThree)", span="61-61"];
m13_5 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="IArgumentEnumerator e = new StringArrayEnumerator(values)", span="46-46"];
m13_6 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="47-47"];
m13_9 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.IsLast.Should().Be.False()", span="51-51"];
m13_10 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="53-53"];
m13_13 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.IsLast.Should().Be.False()", span="57-57"];
m13_14 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="59-59"];
m13_16 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.Next.Should().Be.Null()", span="62-62"];
m13_17 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.IsLast.Should().Be.True()", span="63-63"];
m13_18 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="Exit CommandLine.Tests.EnumeratorsFixture.StringIteration()", span="39-39"];
m13_22 [cluster="Unk.Equal", file="EnumeratorsFixture.cs", label="Entry Unk.Equal", span=""];
m13_21 [cluster="Unk.Should", file="EnumeratorsFixture.cs", label="Entry Unk.Should", span=""];
m13_48 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="EnumeratorsFixture.cs", label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="527-527"];
m13_26 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Tests.EnumeratorsFixture.CharIteration()", span="67-67"];
m13_27 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="IArgumentEnumerator e = new OneCharStringEnumerator(''abcd'')", span="69-69"];
m13_28 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="70-70"];
m13_29 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.Current.Should().Equal(''a'')", span="72-72"];
m13_30 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.Next.Should().Equal(''b'')", span="73-73"];
m13_31 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.GetRemainingFromNext().Should().Equal(''bcd'')", span="74-74"];
m13_32 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.IsLast.Should().Be.False()", span="75-75"];
m13_33 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="77-77"];
m13_34 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.Current.Should().Equal(''b'')", span="79-79"];
m13_35 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.Next.Should().Equal(''c'')", span="80-80"];
m13_36 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.GetRemainingFromNext().Should().Equal(''cd'')", span="81-81"];
m13_37 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.IsLast.Should().Be.False()", span="82-82"];
m13_38 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="84-84"];
m13_39 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.Current.Should().Equal(''c'')", span="86-86"];
m13_40 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.Next.Should().Equal(''d'')", span="87-87"];
m13_41 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.GetRemainingFromNext().Should().Equal(''d'')", span="88-88"];
m13_42 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.IsLast.Should().Be.False()", span="89-89"];
m13_43 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="91-91"];
m13_44 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.Current.Should().Equal(''d'')", span="93-93"];
m13_45 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.IsLast.Should().Be.True()", span="94-94"];
m13_46 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="Exit CommandLine.Tests.EnumeratorsFixture.CharIteration()", span="67-67"];
m14_0 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", span="41-41"];
m14_1 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="var hi = new HeadingInfo(''myprog'')", span="43-43"];
m14_2 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="string s = hi", span="44-44"];
m14_5 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="hi.WriteMessage(''a message'', sw)", span="49-49"];
m14_3 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="s.Should().Equal(''myprog'')", span="46-46"];
m14_4 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="var sw = new StringWriter()", span="48-48"];
m14_6 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="sw.ToString().Should().Equal(''myprog: a message'' + Environment.NewLine)", span="51-51"];
m14_7 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="Exit CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", span="41-41"];
m14_11 [cluster="System.IO.StringWriter.StringWriter()", file="HeadingInfoFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m14_13 [cluster="System.IO.StringWriter.ToString()", file="HeadingInfoFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m14_22 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="298-298"];
m14_8 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="286-286"];
m14_12 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="343-343"];
m14_9 [cluster="Unk.Should", file="HeadingInfoFixture.cs", label="Entry Unk.Should", span=""];
m14_14 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", span="55-55"];
m14_15 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="var hi = new HeadingInfo(''myecho'', ''2.5'')", span="57-57"];
m14_16 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="string s = hi", span="58-58"];
m14_19 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="hi.WriteMessage(''hello unit-test'', sw)", span="63-63"];
m14_17 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="s.Should().Equal(''myecho 2.5'')", span="60-60"];
m14_18 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="var sw = new StringWriter()", span="62-62"];
m14_20 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="sw.ToString().Should().Equal(''myecho: hello unit-test'' + Environment.NewLine)", span="65-65"];
m14_21 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="Exit CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", span="55-55"];
m15_39 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m15_15 [cluster="CommandLine.Text.HelpText.AddOptions(object)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="946-946"];
m15_27 [cluster="System.IO.StringWriter.ToString()", file="HelpOptionAttributeFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m15_24 [cluster="System.IO.StringWriter.StringWriter()", file="HelpOptionAttributeFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m15_14 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="921-921"];
m15_30 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", span="87-87"];
m15_31 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="var options = new MockOptions()", span="89-89"];
m15_32 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="var writer = new StringWriter()", span="90-90"];
m15_33 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                    new string[] { ''math.xml'', ''-oresult.xml'' }, options, writer)", span="92-93"];
m15_35 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="string helpText = writer.ToString()", span="97-97"];
m15_34 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="ResultShouldBeFalse()", span="95-95"];
m15_36 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="(helpText.Length > 0).Should().Be.True()", span="98-98"];
m15_37 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Console.Write(helpText)", span="100-100"];
m15_38 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", span="87-87"];
m15_41 [cluster="System.Console.Write(string)", file="HelpOptionAttributeFixture.cs", label="Entry System.Console.Write(string)", span="0-0"];
m15_12 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="298-298"];
m15_13 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="166-166"];
m15_25 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1486-1486"];
m15_40 [cluster="Unk.True", file="HelpOptionAttributeFixture.cs", label="Entry Unk.True", span=""];
m15_16 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", span="74-74"];
m15_17 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="var options = new MockOptions()", span="76-76"];
m15_18 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="var writer = new StringWriter()", span="77-77"];
m15_19 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                    new string[] { ''-imath.xml'', ''-oresult.xml'' }, options, writer)", span="79-80"];
m15_21 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="writer.ToString().Length.Should().Equal(0)", span="83-83"];
m15_20 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="ResultShouldBeTrue()", span="82-82"];
m15_22 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", span="74-74"];
m15_42 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", span="104-104"];
m15_43 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs", label="var options = new MockOptions()", span="106-106"];
m15_44 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs", label="var writer = new StringWriter()", span="107-107"];
m15_45 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                    new string[] { ''--help'' }, options, writer)", span="109-110"];
m15_47 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs", label="string helpText = writer.ToString()", span="114-114"];
m15_46 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs", label="ResultShouldBeFalse()", span="112-112"];
m15_48 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs", label="(helpText.Length > 0).Should().Be.True()", span="115-115"];
m15_49 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", span="104-104"];
m15_0 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", span="58-58"];
m15_1 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="var help = new HelpText(new HeadingInfo(''MyProgram'', ''1.0''))", span="60-60"];
m15_2 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.Copyright = new CopyrightInfo(''Authors, Inc.'', 2007)", span="61-61"];
m15_3 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddPreOptionsLine(''This software is under the terms of the XYZ License'')", span="62-62"];
m15_4 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddPreOptionsLine(''(http://license-text.org/show.cgi?xyz).'')", span="63-63"];
m15_5 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddPreOptionsLine(''Usage: myprog --input equations-file.xml -o result-file.xml'')", span="64-64"];
m15_6 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddPreOptionsLine(''       myprog -i equations-file.xml --paralell'')", span="65-65"];
m15_7 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddPreOptionsLine(''       myprog -i equations-file.xml -vo result-file.xml'')", span="66-66"];
m15_8 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddOptions(this)", span="67-67"];
m15_9 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="return help;", span="68-68"];
m15_10 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", span="58-58"];
m15_11 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="681-681"];
m15_28 [cluster="Unk.Should", file="HelpOptionAttributeFixture.cs", label="Entry Unk.Should", span=""];
m15_23 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.MockOptions()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.MockOptions()", span="43-43"];
m15_26 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m15_50 [file="HelpOptionAttributeFixture.cs", label="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions", span=""];
m15_51 [file="HelpOptionAttributeFixture.cs", label="CommandLine.Tests.HelpOptionAttributeFixture", span=""];
m16_125 [cluster="string.Format(System.IFormatProvider, string, object)", file="HelpTextFixture.cs", label="Entry string.Format(System.IFormatProvider, string, object)", span="0-0"];
m16_175 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", span="398-398"];
m16_178 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="result.Should().Be.False()", span="405-405"];
m16_177 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''0'', ''-ap'' }, options)", span="402-403"];
m16_176 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="400-400"];
m16_179 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", span="398-398"];
m16_154 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1772-1772"];
m16_195 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", span="433-433"];
m16_197 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", color=green, community=0, file="HelpTextFixture.cs", label="e.Option.ShortName.Value", prediction=483, span="438-438"];
m16_196 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="string optionHelp = null", span="436-436"];
m16_198 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", color=green, community=0, file="HelpTextFixture.cs", label="'v'", prediction=484, span="440-440"];
m16_200 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", color=green, community=0, file="HelpTextFixture.cs", label="'i'", prediction=485, span="444-444"];
m16_199 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Kommentar umfassend Operationen.''", span="441-441"];
m16_201 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Gibt den Eingang an zu bearbeitenden Datei.''", span="445-445"];
m16_202 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="e.Option.Required", span="449-449"];
m16_204 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="e.Option.HelpText = optionHelp", span="454-454"];
m16_203 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Erforderlich. '' + optionHelp", span="451-451"];
m16_205 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", span="433-433"];
m16_152 [cluster="CommandLine.Tests.Mocks.RPEOptions.RPEOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Mocks.RPEOptions.RPEOptions()", span="6-6"];
m16_193 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1971-1971"];
m16_138 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", span="279-279"];
m16_145 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="Console.WriteLine(outsw)", span="291-291"];
m16_143 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="result.Should().Be.False()", span="287-287"];
m16_147 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="lines[0].Should().Equal(''--option-b option violates format.'')", span="295-295"];
m16_148 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="lines[1].Should().Equal(''-c/--option-c option violates format.'')", span="296-296"];
m16_149 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="lines[2].Should().Equal(''-a required option is missing.'')", span="297-297"];
m16_146 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var lines = outsw.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="293-293"];
m16_144 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var outsw = sw.ToString()", span="289-289"];
m16_142 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var result = parser.ParseArguments(new string[] {''--option-b'', ''hello'', ''-cWORLD''}, options)", span="285-285"];
m16_139 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var sw = new StringWriter()", span="281-281"];
m16_140 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var options = new RPEOptions()", span="282-282"];
m16_141 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var parser = new CommandLineParser(new CommandLineParserSettings {\r\n                MutuallyExclusive = true, CaseSensitive = true, HelpWriter = sw})", span="283-284"];
m16_150 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", span="279-279"];
m16_181 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", span="409-409"];
m16_184 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="result.Should().Be.False()", span="416-416"];
m16_183 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''zero'', ''-pa'' }, options)", span="413-414"];
m16_182 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="411-411"];
m16_185 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", span="409-409"];
m16_58 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="173-173"];
m16_60 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="_helpText.AddOptions(new MockOptionsWithLongDescriptionAndNoSpaces())", span="176-176"];
m16_61 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="string help = _helpText.ToString()", span="177-177"];
m16_63 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="lines[2].Should().Equal(''  v, verbose    Before '')", span="180-180"];
m16_64 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="lines[3].Should().Equal(''                012345678901234567890123'')", span="181-181"];
m16_65 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="lines[4].Should().Equal(''                After'')", span="182-182"];
m16_66 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="lines[5].Should().Equal(''  input-file    Before '')", span="183-183"];
m16_67 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="lines[6].Should().Equal(''                012345678901234567890123'')", span="184-184"];
m16_68 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="lines[7].Should().Equal(''                456789 After'')", span="185-185"];
m16_59 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="_helpText.MaximumDisplayWidth = 40", span="175-175"];
m16_62 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="179-179"];
m16_69 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="173-173"];
m16_21 [cluster="CommandLine.Text.HelpText.AddOptions(object)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="974-974"];
m16_121 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="683-683"];
m16_134 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", span="271-271"];
m16_135 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="var local = new HelpText()", span="273-273"];
m16_136 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="local.ToString().Should().Equal('''')", span="275-275"];
m16_137 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", span="271-271"];
m16_20 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="949-949"];
m16_151 [cluster="System.IO.StringWriter.StringWriter()", file="HelpTextFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m16_163 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", span="89-89"];
m16_19 [cluster="string.Concat(string, string)", file="HelpTextFixture.cs", label="Entry string.Concat(string, string)", span="0-0"];
m16_86 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", span="209-209"];
m16_89 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="213-213"];
m16_90 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsWithDescription())", span="214-214"];
m16_92 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="217-217"];
m16_93 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="219-219"];
m16_95 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="lines[0].Should().Equal(''Customizing Test.'')", span="222-222"];
m16_96 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="lines[1].Should().Equal(''Pre-Options.'')", span="223-223"];
m16_97 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="lines[3].Should().Equal(''  v, verbose       Kommentar umfassend Operationen.'')", span="224-224"];
m16_98 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="lines[4].Should().Equal(''  i, input-file    Erforderlich. Gibt den Eingang an zu bearbeitenden Datei.'')", span="225-225"];
m16_99 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="lines[6].Should().Equal(''Post-Options.'')", span="226-226"];
m16_87 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="var local = new HelpText(''Customizing Test.'')", span="211-211"];
m16_88 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.FormatOptionHelpText += new EventHandler<FormatOptionHelpTextEventArgs>(CustomizeOptionsFormat_FormatOptionHelpText)", span="212-212"];
m16_91 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="215-215"];
m16_94 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="221-221"];
m16_100 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", span="209-209"];
m16_170 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="387-387"];
m16_173 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="result.Should().Be.False()", span="394-394"];
m16_172 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-i0'' }, options)", span="391-392"];
m16_171 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="389-389"];
m16_174 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="387-387"];
m16_14 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="713-713"];
m16_16 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="HelpTextFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="172-172"];
m16_57 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescription.MockOptionsWithLongDescription()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescription.MockOptionsWithLongDescription()", span="65-65"];
m16_158 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="365-365"];
m16_161 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="result.Should().Be.False()", span="372-372"];
m16_160 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''abc'' }, options)", span="369-370"];
m16_159 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="367-367"];
m16_162 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="365-365"];
m16_102 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", span="56-56"];
m16_42 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="1183-1183"];
m16_156 [cluster="Unk.False", file="HelpTextFixture.cs", label="Entry Unk.False", span=""];
m16_157 [cluster="System.IO.StringWriter.ToString()", file="HelpTextFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m16_25 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", span="131-131"];
m16_26 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="_helpText.AddPreOptionsLine(string.Empty)", span="133-133"];
m16_27 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", span="131-131"];
m16_15 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="305-305"];
m16_46 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", span="157-157"];
m16_48 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="_helpText.AddOptions(new MockOptionsWithLongDescription())", span="160-160"];
m16_49 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="string help = _helpText.ToString()", span="161-161"];
m16_51 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="lines[2].Should().Equal(''  v, verbose    This is the description'')", span="164-164"];
m16_52 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="lines[3].Should().Equal(''                of the verbosity to '')", span="166-166"];
m16_53 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="lines[4].Should().Equal(''                test out the wrapping '')", span="167-167"];
m16_54 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="lines[5].Should().Equal(''                capabilities of the '')", span="168-168"];
m16_55 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="lines[6].Should().Equal(''                Help Text.'')", span="169-169"];
m16_47 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="_helpText.MaximumDisplayWidth = 40", span="159-159"];
m16_50 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new[] {Environment.NewLine}, StringSplitOptions.None)", span="163-163"];
m16_56 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", span="157-157"];
m16_123 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="159-159"];
m16_122 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="293-293"];
m16_194 [cluster="Unk.Exactly", file="HelpTextFixture.cs", label="Entry Unk.Exactly", span=""];
m16_41 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="964-964"];
m16_153 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1925-1925"];
m16_18 [cluster="string.IsNullOrEmpty(string)", file="HelpTextFixture.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m16_126 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="253-253"];
m16_127 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", color=green, community=0, file="HelpTextFixture.cs", label="var local = new HelpText {\r\n                AddDashesToOption = true,\r\n                Heading = new HeadingInfo(''AddOptionsWithDashes''),\r\n                Copyright = new CopyrightInfo(''Author'', DateTime.Now.Year)\r\n            }", prediction=486, span="255-259"];
m16_128 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", color=green, community=0, file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsSimple())", prediction=487, span="260-260"];
m16_129 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", color=green, community=0, file="HelpTextFixture.cs", label="string help = local.ToString()", prediction=488, span="262-262"];
m16_130 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", color=green, community=0, file="HelpTextFixture.cs", label="Console.WriteLine(help)", prediction=489, span="264-264"];
m16_131 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="266-266"];
m16_132 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", color=green, community=0, file="HelpTextFixture.cs", label="lines[3].Should().Equal(''  -s, --something    Input something here.'')", prediction=490, span="267-267"];
m16_133 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="253-253"];
m16_164 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1793-1793"];
m16_17 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", span="1035-1035"];
m16_165 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="376-376"];
m16_168 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="result.Should().Be.False()", span="383-383"];
m16_167 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-j0'' }, options)", span="380-381"];
m16_166 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="378-378"];
m16_169 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="376-376"];
m16_101 [cluster="EventHandler<FormatOptionHelpTextEventArgs>.cstr", file="HelpTextFixture.cs", label="Entry EventHandler<FormatOptionHelpTextEventArgs>.cstr", span=""];
m16_71 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="189-189"];
m16_74 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')", span="193-193"];
m16_75 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptions())", span="194-194"];
m16_77 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="197-197"];
m16_79 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="lines[1].Should().Equal(''Before '')", span="200-200"];
m16_80 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="lines[2].Should().Equal(''0123456789012345678901234567890123456789'')", span="201-201"];
m16_81 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="lines[3].Should().Equal(''012 After'')", span="202-202"];
m16_82 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="lines[lines.Length - 3].Should().Equal(''Before '')", span="203-203"];
m16_83 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="lines[lines.Length - 2].Should().Equal(''0123456789012345678901234567890123456789'')", span="204-204"];
m16_84 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="lines[lines.Length - 1].Should().Equal('' After'')", span="205-205"];
m16_72 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="var local = new HelpText(''Heading Info.'')", span="191-191"];
m16_73 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.MaximumDisplayWidth = 40", span="192-192"];
m16_76 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="195-195"];
m16_78 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="199-199"];
m16_85 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="189-189"];
m16_186 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", span="421-421"];
m16_190 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="options.InternalLastPostParsingState.Errors.Should().Count.Exactly(2)", span="428-428"];
m16_187 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="var options = new ComplexOptions()", span="423-423"];
m16_189 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="new CommandLineParser(new CommandLineParserSettings(false,  false, writer)).ParseArguments(new string[0], options, writer)", span="426-426"];
m16_188 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="var writer = new StringWriter()", span="424-424"];
m16_191 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", span="421-421"];
m16_103 [cluster="System.Console.WriteLine(string)", file="HelpTextFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m16_0 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="98-98"];
m16_6 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", color=green, community=0, file="HelpTextFixture.cs", label="help.AddPreOptionsLine(string.Concat(Environment.NewLine, ''ERROR(S):''))", prediction=491, span="108-108"];
m16_1 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="var help = new HelpText(new HeadingInfo(''unittest'', ''1.9''))", span="100-100"];
m16_5 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="!string.IsNullOrEmpty(errors)", span="106-106"];
m16_7 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", color=green, community=0, file="HelpTextFixture.cs", label="help.AddPreOptionsLine(errors)", prediction=491, span="109-109"];
m16_4 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="string errors = help.RenderParsingErrorsText(this, 2)", span="105-105"];
m16_8 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''This is free software. You may redistribute copies of it under the terms of'')", span="112-112"];
m16_2 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AdditionalNewLineAfterOption = true", span="101-101"];
m16_3 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.Copyright = new CopyrightInfo(''CommandLine.dll Author'', 2005, 2011)", span="102-102"];
m16_9 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''the MIT License <http://www.opensource.org/licenses/mit-license.php>.'')", span="113-113"];
m16_10 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''Usage: Please run the unit...'')", span="114-114"];
m16_11 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddOptions(this)", span="115-115"];
m16_12 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="return help;", span="117-117"];
m16_13 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="98-98"];
m16_192 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", span="35-35"];
m16_40 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", span="47-47"];
m16_70 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", span="74-74"];
m16_28 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="140-140"];
m16_30 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''This is a first pre-options line.'')", span="143-143"];
m16_31 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''This is a second pre-options line.'')", span="144-144"];
m16_32 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptions())", span="145-145"];
m16_35 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="149-149"];
m16_37 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="lines[lines.Length - 2].Should().Equal(''This is a first post-options line.'')", span="152-152"];
m16_38 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="lines[lines.Length - 1].Should().Equal(''This is a second post-options line.'')", span="153-153"];
m16_29 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="var local = new HelpText(''Heading Info.'')", span="142-142"];
m16_33 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''This is a first post-options line.'')", span="146-146"];
m16_34 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''This is a second post-options line.'')", span="147-147"];
m16_36 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="151-151"];
m16_39 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="140-140"];
m16_22 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="125-125"];
m16_23 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="_helpText = new HelpText(new HeadingInfo(_ThisAssembly.Title, _ThisAssembly.Version))", span="127-127"];
m16_24 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="125-125"];
m16_124 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", span="83-83"];
m16_180 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1832-1832"];
m16_45 [cluster="Unk.Equal", file="HelpTextFixture.cs", label="Entry Unk.Equal", span=""];
m16_43 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m16_155 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1950-1950"];
m16_104 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="230-230"];
m16_109 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="236-236"];
m16_106 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="var local = new HelpText()", span="233-233"];
m16_107 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.Heading = new HeadingInfo(''Parameterless Constructor Test.'')", span="234-234"];
m16_108 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.Copyright = new CopyrightInfo(''Author'', year)", span="235-235"];
m16_110 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsSimple())", span="237-237"];
m16_112 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="240-240"];
m16_113 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="242-242"];
m16_116 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="lines[1].Should().Equal(string.Format(CultureInfo.InvariantCulture, ''Copyright (C) {0} Author'', year))", span="246-246"];
m16_115 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="lines[0].Should().Equal(''Parameterless Constructor Test.'')", span="245-245"];
m16_117 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="lines[2].Should().Equal(''Pre-Options.'')", span="247-247"];
m16_118 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="lines[4].Should().Equal(''  s, something    Input something here.'')", span="248-248"];
m16_119 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="lines[6].Should().Equal(''Post-Options.'')", span="249-249"];
m16_105 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="var year = DateTime.Now.Year", span="232-232"];
m16_111 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="238-238"];
m16_114 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="244-244"];
m16_120 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="230-230"];
m16_206 [file="HelpTextFixture.cs", label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", span=""];
m16_207 [file="HelpTextFixture.cs", label="CommandLine.Text.Tests.HelpTextFixture", span=""];
m18_44 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", span="96-96"];
m18_45 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithMultipleSetAndOneOption()", span="98-98"];
m18_46 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'' }, options)", span="99-99"];
m18_47 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeFalse()", span="101-101"];
m18_48 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", span="96-96"];
m18_14 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471"];
m18_23 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m18_18 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", span="56-56"];
m18_19 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithDefaultSet()", span="58-58"];
m18_20 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", file="MutuallyExclusiveParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i'', ''1'', ''--file=mystuff.xml'' }, options)", span="59-59"];
m18_21 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeFalse()", span="61-61"];
m18_22 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", span="56-56"];
m18_49 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSetAndOneOption.OptionsWithMultipleSetAndOneOption()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithMultipleSetAndOneOption.OptionsWithMultipleSetAndOneOption()", span="35-35"];
m18_2 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateInstance()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateInstance()", span="40-40"];
m18_3 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateInstance()", file="MutuallyExclusiveParsingFixture.cs", label="Parser = new CommandLineParser(new CommandLineParserSettings {MutuallyExclusive = true})", span="42-42"];
m18_4 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateInstance()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateInstance()", span="40-40"];
m18_38 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="35-35"];
m18_31 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", span="76-76"];
m18_32 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithMultipleSet()", span="78-78"];
m18_33 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'' }, options)", span="79-79"];
m18_35 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.Green.Should().Equal((byte) 167)", span="82-82"];
m18_36 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.Hue.Should().Equal((short) 205)", span="83-83"];
m18_34 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeTrue()", span="81-81"];
m18_37 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", span="76-76"];
m18_6 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1543-1543"];
m18_5 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1692-1692"];
m18_13 [cluster="CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", span="35-35"];
m18_24 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", span="65-65"];
m18_25 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithDefaultSet()", span="67-67"];
m18_26 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--file=mystuff.xml'', ''-v'' }, options)", span="68-68"];
m18_28 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.FileName.Should().Equal(''mystuff.xml'')", span="71-71"];
m18_29 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.Verbose.Should().Equal(true)", span="72-72"];
m18_27 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeTrue()", span="70-70"];
m18_30 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", span="65-65"];
m18_50 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", span="105-105"];
m18_51 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithMultipleSetAndOneOption()", span="107-107"];
m18_52 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-g100'', ''-h200'', ''-cRgbColorSet'' }, options)", span="108-108"];
m18_54 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.Green.Should().Equal((byte) 100)", span="111-111"];
m18_55 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.Hue.Should().Equal((short) 200)", span="112-112"];
m18_56 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.DefaultColorSet.Should().Equal(ColorSet.RgbColorSet)", span="113-113"];
m18_53 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeTrue()", span="110-110"];
m18_57 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", span="105-105"];
m18_39 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", span="87-87"];
m18_40 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithMultipleSet()", span="89-89"];
m18_41 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'', ''--saturation=37'' }, options)", span="90-90"];
m18_42 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeFalse()", span="92-92"];
m18_43 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", span="87-87"];
m18_0 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", span="38-38"];
m18_1 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", span="38-38"];
m18_16 [cluster="Unk.Should", file="MutuallyExclusiveParsingFixture.cs", label="Entry Unk.Should", span=""];
m18_7 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", span="46-46"];
m18_8 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithDefaultSet()", span="48-48"];
m18_9 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--file=mystuff.xml'' }, options)", span="49-49"];
m18_11 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.FileName.Should().Equal(''mystuff.xml'')", span="52-52"];
m18_10 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeTrue()", span="51-51"];
m18_12 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", span="46-46"];
m18_15 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m18_58 [file="MutuallyExclusiveParsingFixture.cs", label="CommandLine.Tests.MutuallyExclusiveParsingFixture", span=""];
m20_24 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", span="71-71"];
m20_25 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="73-73"];
m20_26 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-int'' }, options)", span="74-74"];
m20_27 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeFalse()", span="76-76"];
m20_28 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", span="71-71"];
m20_13 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471"];
m20_23 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m20_29 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", span="80-80"];
m20_30 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="82-82"];
m20_31 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--enum=ReadWrite'' }, options)", span="83-83"];
m20_33 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="NullableTypesParsingFixture.cs", label="options.EnumValue.Should().Equal(FileAccess.ReadWrite)", span="86-86"];
m20_32 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeTrue()", span="85-85"];
m20_34 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="NullableTypesParsingFixture.cs", label="options = new NullableTypesOptions()", span="88-88"];
m20_35 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { }, options)", span="89-89"];
m20_37 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="NullableTypesParsingFixture.cs", label="options.EnumValue.Should().Be.Null()", span="92-92"];
m20_36 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeTrue()", span="91-91"];
m20_38 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", span="80-80"];
m20_39 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", span="96-96"];
m20_40 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="98-98"];
m20_41 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-e'', ''Overwrite'' }, options)", span="99-99"];
m20_42 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeFalse()", span="101-101"];
m20_43 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", span="96-96"];
m20_49 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", span="114-114"];
m20_50 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="116-116"];
m20_51 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-d9.999'' }, options)", span="117-117"];
m20_53 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="options.DoubleValue.Should().Equal(9.999)", span="120-120"];
m20_52 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeTrue()", span="119-119"];
m20_54 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="options = new NullableTypesOptions()", span="122-122"];
m20_55 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { }, options)", span="123-123"];
m20_57 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="options.DoubleValue.Should().Be.Null()", span="126-126"];
m20_56 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeTrue()", span="125-125"];
m20_58 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", span="114-114"];
m20_64 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", span="139-139"];
m20_65 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="141-141"];
m20_66 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-d'' }, options)", span="142-142"];
m20_67 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeFalse()", span="144-144"];
m20_68 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", span="139-139"];
m20_2 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", span="46-46"];
m20_3 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="48-48"];
m20_4 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i'', ''99'' }, options)", span="49-49"];
m20_6 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="options.IntegerValue.Should().Equal(99)", span="52-52"];
m20_5 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeTrue()", span="51-51"];
m20_7 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="options = new NullableTypesOptions()", span="54-54"];
m20_8 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { }, options)", span="55-55"];
m20_10 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="options.IntegerValue.Should().Be.Null()", span="58-58"];
m20_9 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeTrue()", span="57-57"];
m20_11 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", span="46-46"];
m20_12 [cluster="CommandLine.Tests.Mocks.NullableTypesOptions.NullableTypesOptions()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.NullableTypesOptions.NullableTypesOptions()", span="35-35"];
m20_18 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", span="62-62"];
m20_19 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="64-64"];
m20_20 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i'', ''string-value'' }, options)", span="65-65"];
m20_21 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeFalse()", span="67-67"];
m20_22 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", span="62-62"];
m20_0 [cluster="CommandLine.Tests.NullableTypesParsingFixture.NullableTypesParsingFixture()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.NullableTypesParsingFixture()", span="41-41"];
m20_1 [cluster="CommandLine.Tests.NullableTypesParsingFixture.NullableTypesParsingFixture()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.NullableTypesParsingFixture()", span="41-41"];
m20_44 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", span="105-105"];
m20_45 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="107-107"];
m20_46 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--enum'' }, options)", span="108-108"];
m20_47 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeFalse()", span="110-110"];
m20_48 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", span="105-105"];
m20_17 [cluster="Unk.Null", file="NullableTypesParsingFixture.cs", label="Entry Unk.Null", span=""];
m20_15 [cluster="Unk.Should", file="NullableTypesParsingFixture.cs", label="Entry Unk.Should", span=""];
m20_69 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", span="148-148"];
m20_70 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="150-150"];
m20_71 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--string'', ''alone'' }, options)", span="151-151"];
m20_73 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="options.StringValue.Should().Equal(''alone'')", span="154-154"];
m20_72 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeTrue()", span="153-153"];
m20_74 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="options = new NullableTypesOptions()", span="156-156"];
m20_75 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                new string[] { ''-d1.789'', ''--int'', ''10099'', ''-stogether'', ''--enum'', ''Read'' }, options)", span="157-158"];
m20_77 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="options.DoubleValue.Should().Equal(1.789D)", span="161-161"];
m20_78 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="options.IntegerValue.Should().Equal(10099)", span="162-162"];
m20_79 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="options.StringValue.Should().Equal(''together'')", span="163-163"];
m20_80 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="options.EnumValue.Should().Equal(FileAccess.Read)", span="164-164"];
m20_76 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeTrue()", span="160-160"];
m20_81 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", span="148-148"];
m20_59 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", span="130-130"];
m20_60 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="132-132"];
m20_61 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--double'', ''9,999'' }, options)", span="133-133"];
m20_62 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeFalse()", span="135-135"];
m20_63 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", span="130-130"];
m20_14 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m20_82 [file="NullableTypesParsingFixture.cs", label="CommandLine.Tests.NullableTypesParsingFixture", span=""];
m21_0 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs", label="Entry CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", span="35-35"];
m21_1 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs", label="ByteValue = 0", span="37-37"];
m21_2 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs", label="ShortValue = 0", span="38-38"];
m21_3 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs", label="IntegerValue = 0", span="39-39"];
m21_4 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs", label="LongValue = 0", span="40-40"];
m21_5 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs", label="FloatValue = 0", span="41-41"];
m21_6 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs", label="DoubleValue = 0", span="42-42"];
m21_7 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs", label="Exit CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", span="35-35"];
m21_8 [file="NumberSetOptions.cs", label="CommandLine.Tests.Mocks.NumberSetOptions", span=""];
m22_37 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_enumeration_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_enumeration_option_fails()", span="92-92"];
m22_38 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_enumeration_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new NullableTypesOptions()", span="94-94"];
m22_39 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_enumeration_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-e'', ''Overwrite'' }, options)", span="95-95"];
m22_40 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_enumeration_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="97-97"];
m22_41 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_enumeration_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_enumeration_option_fails()", span="92-92"];
m22_11 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m22_21 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m22_0 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_integer_option()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_integer_option()", span="42-42"];
m22_1 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_integer_option()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new NullableTypesOptions()", span="44-44"];
m22_2 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_integer_option()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i'', ''99'' }, options)", span="45-45"];
m22_4 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_integer_option()", file="OptionArrayAttributeParsingFixture.cs", label="options.IntegerValue.Should().Equal(99)", span="48-48"];
m22_3 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_integer_option()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="47-47"];
m22_5 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_integer_option()", file="OptionArrayAttributeParsingFixture.cs", label="options = new NullableTypesOptions()", span="50-50"];
m22_6 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_integer_option()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { }, options)", span="51-51"];
m22_8 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_integer_option()", file="OptionArrayAttributeParsingFixture.cs", label="options.IntegerValue.Should().Be.Null()", span="54-54"];
m22_7 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_integer_option()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="53-53"];
m22_9 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_integer_option()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_integer_option()", span="42-42"];
m22_10 [cluster="CommandLine.Tests.Mocks.NullableTypesOptions.NullableTypesOptions()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.NullableTypesOptions.NullableTypesOptions()", span="35-35"];
m22_47 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_double_option()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_double_option()", span="110-110"];
m22_48 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_double_option()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new NullableTypesOptions()", span="112-112"];
m22_49 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_double_option()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-d9.999'' }, options)", span="113-113"];
m22_51 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_double_option()", file="OptionArrayAttributeParsingFixture.cs", label="options.DoubleValue.Should().Equal(9.999)", span="116-116"];
m22_50 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_double_option()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="115-115"];
m22_52 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_double_option()", file="OptionArrayAttributeParsingFixture.cs", label="options = new NullableTypesOptions()", span="118-118"];
m22_53 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_double_option()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { }, options)", span="119-119"];
m22_55 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_double_option()", file="OptionArrayAttributeParsingFixture.cs", label="options.DoubleValue.Should().Be.Null()", span="122-122"];
m22_54 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_double_option()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="121-121"];
m22_56 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_double_option()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_double_option()", span="110-110"];
m22_62 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", span="135-135"];
m22_63 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new NullableTypesOptions()", span="137-137"];
m22_64 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-d'' }, options)", span="138-138"];
m22_65 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="140-140"];
m22_66 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", span="135-135"];
m22_22 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", span="67-67"];
m22_23 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new NullableTypesOptions()", span="69-69"];
m22_24 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-int'' }, options)", span="70-70"];
m22_25 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="72-72"];
m22_26 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", span="67-67"];
m22_57 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_double_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_double_option_fails()", span="126-126"];
m22_58 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_double_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new NullableTypesOptions()", span="128-128"];
m22_59 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_double_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--double'', ''9,999'' }, options)", span="129-129"];
m22_60 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_double_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="131-131"];
m22_61 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_double_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_double_option_fails()", span="126-126"];
m22_15 [cluster="Unk.Null", file="OptionArrayAttributeParsingFixture.cs", label="Entry Unk.Null", span=""];
m22_16 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", span="58-58"];
m22_17 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new NullableTypesOptions()", span="60-60"];
m22_18 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i'', ''string-value'' }, options)", span="61-61"];
m22_19 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="63-63"];
m22_20 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", span="58-58"];
m22_27 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", span="76-76"];
m22_28 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new NullableTypesOptions()", span="78-78"];
m22_29 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--enum=ReadWrite'' }, options)", span="79-79"];
m22_31 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", file="OptionArrayAttributeParsingFixture.cs", label="options.EnumValue.Should().Equal(FileAccess.ReadWrite)", span="82-82"];
m22_30 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="81-81"];
m22_32 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", file="OptionArrayAttributeParsingFixture.cs", label="options = new NullableTypesOptions()", span="84-84"];
m22_33 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { }, options)", span="85-85"];
m22_35 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", file="OptionArrayAttributeParsingFixture.cs", label="options.EnumValue.Should().Be.Null()", span="88-88"];
m22_34 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="87-87"];
m22_36 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", span="76-76"];
m22_67 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", span="144-144"];
m22_68 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new NullableTypesOptions()", span="146-146"];
m22_69 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--string'', ''alone'' }, options)", span="147-147"];
m22_71 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", file="OptionArrayAttributeParsingFixture.cs", label="options.StringValue.Should().Equal(''alone'')", span="150-150"];
m22_70 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="149-149"];
m22_72 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", file="OptionArrayAttributeParsingFixture.cs", label="options = new NullableTypesOptions()", span="152-152"];
m22_73 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                new string[] { ''-d1.789'', ''--int'', ''10099'', ''-stogether'', ''--enum'', ''Read'' }, options)", span="153-154"];
m22_75 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", file="OptionArrayAttributeParsingFixture.cs", label="options.DoubleValue.Should().Equal(1.789D)", span="157-157"];
m22_76 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", file="OptionArrayAttributeParsingFixture.cs", label="options.IntegerValue.Should().Equal(10099)", span="158-158"];
m22_77 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", file="OptionArrayAttributeParsingFixture.cs", label="options.StringValue.Should().Equal(''together'')", span="159-159"];
m22_78 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", file="OptionArrayAttributeParsingFixture.cs", label="options.EnumValue.Should().Equal(FileAccess.Read)", span="160-160"];
m22_74 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="156-156"];
m22_79 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", span="144-144"];
m22_13 [cluster="Unk.Should", file="OptionArrayAttributeParsingFixture.cs", label="Entry Unk.Should", span=""];
m22_42 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", span="101-101"];
m22_43 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new NullableTypesOptions()", span="103-103"];
m22_44 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--enum'' }, options)", span="104-104"];
m22_45 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="106-106"];
m22_46 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", span="101-101"];
m22_12 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m22_80 [file="OptionArrayAttributeParsingFixture.cs", label="CommandLine.Tests.NullableTypesParsingFixture", span=""];
m23_19 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.CreateInstance()", span="83-83"];
m23_20 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs", label="_omBuilder = new OptionMapBuilder(3)", span="85-85"];
m23_24 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs", label="_optionMap = _omBuilder.OptionMap", span="90-90"];
m23_25 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.CreateInstance()", span="83-83"];
m23_29 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", color=green, community=0, file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.ManageOptions()", prediction=493, span="100-100"];
m23_30 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", color=green, community=0, file="OptionMapFixture.cs", label="_omBuilder.Options[0].Should().Be.SameAs(_optionMap[_omBuilder.Names[0]])", prediction=494, span="102-102"];
m23_31 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", color=green, community=0, file="OptionMapFixture.cs", label="_omBuilder.Options[1].Should().Be.SameAs(_optionMap[_omBuilder.Names[1]])", prediction=495, span="103-103"];
m23_36 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", span="108-108"];
m23_37 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", file="OptionMapFixture.cs", label="var shortOi = _optionMap[''y'']", span="110-110"];
m23_38 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", file="OptionMapFixture.cs", label="shortOi.Should().Be.Null()", span="111-111"];
m23_39 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", span="108-108"];
m23_6 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="OptionMapFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1553-1553"];
m23_8 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", span="54-54"];
m23_9 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", color=green, community=0, file="OptionMapFixture.cs", label="var oa = new OptionAttribute(shortName, longName)", prediction=496, span="56-56"];
m23_10 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", color=green, community=0, file="OptionMapFixture.cs", label="var oi = oa.CreateOptionInfo()", prediction=496, span="57-57"];
m23_11 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", color=green, community=0, file="OptionMapFixture.cs", label="_optionMap[oa.UniqueName] = oi", prediction=498, span="58-58"];
m23_13 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", color=green, community=0, file="OptionMapFixture.cs", label="_names.Add(oa.UniqueName)", prediction=496, span="60-60"];
m23_12 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", color=green, community=0, file="OptionMapFixture.cs", label="_options.Add(oi)", prediction=496, span="59-59"];
m23_14 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", span="54-54"];
m23_5 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMapFixture.cs", label="Entry CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1086-1086"];
m23_26 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionMapFixture.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char, string)", span="1293-1293"];
m23_27 [cluster="CommandLine.Tests.OptionMapFixture.ShutdownInstance()", file="OptionMapFixture.cs", label="_optionMap = null", span="96-96"];
m23_28 [cluster="CommandLine.Tests.OptionMapFixture.ShutdownInstance()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.ShutdownInstance()", span="94-94"];
m23_40 [cluster="Unk.Null", file="OptionMapFixture.cs", label="Entry Unk.Null", span=""];
m23_0 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", span="47-47"];
m23_1 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="_optionMap = new OptionMap(capacity, new CommandLineParserSettings(true))", span="50-50"];
m23_2 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="_options = new List<OptionInfo>(capacity)", span="50-50"];
m23_3 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="_names = new List<string>(capacity)", span="51-51"];
m23_4 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", span="47-47"];
m23_53 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="var option3 = attribute3.CreateOptionInfo()", span="134-134"];
m23_56 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs", label="map[attribute3.UniqueName] = option3", prediction=501, span="138-138"];
m23_54 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="map[attribute1.UniqueName] = option1", span="136-136"];
m23_55 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="map[attribute2.UniqueName] = option2", span="137-137"];
m23_57 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs", label="optionCache != null", prediction=502, span="140-140"];
m23_59 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache[attribute1.UniqueName] = option2", span="143-143"];
m23_62 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", span="121-121"];
m23_66 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache[attribute1.UniqueName] = option1", span="152-152"];
m23_67 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache[attribute1.UniqueName] = option2", span="153-153"];
m23_58 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs", label="optionCache[attribute1.UniqueName] = option1", prediction=503, span="142-142"];
m23_60 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache[attribute2.UniqueName]= option3", span="144-144"];
m23_63 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", span=""];
m23_68 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache[attribute2.UniqueName]= option3", span="154-154"];
m23_61 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="return map;", span="147-147"];
m23_64 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="map[attribute3.UniqueName] = option3", span="148-148"];
m23_69 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="return map;", span="157-157"];
m23_65 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache != null", span="150-150"];
m23_70 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", span="131-131"];
m23_15 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionMapFixture.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="204-204"];
m23_16 [cluster="Unk.CreateOptionInfo", file="OptionMapFixture.cs", label="Entry Unk.CreateOptionInfo", span=""];
m23_35 [cluster="Unk.SameAs", file="OptionMapFixture.cs", label="Entry Unk.SameAs", span=""];
m23_45 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", span="121-121"];
m23_46 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="map == null", span="123-123"];
m23_47 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="map = new OptionMap (3, new CommandLineParserSettings (true))", span="125-125"];
m23_51 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="var option1 = attribute1.CreateOptionInfo()", span="132-132"];
m23_52 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="var option2 = attribute2.CreateOptionInfo()", span="133-133"];
m23_17 [cluster="Unk.Add", file="OptionMapFixture.cs", label="Entry Unk.Add", span=""];
m23_18 [cluster="System.Collections.Generic.List<T>.Add(T)", file="OptionMapFixture.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m23_41 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", span="115-115"];
m23_42 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", file="OptionMapFixture.cs", label="var longOi = _optionMap[''nomorebugshere'']", span="117-117"];
m23_43 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", file="OptionMapFixture.cs", label="longOi.Should().Be.Null()", span="118-118"];
m23_44 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", span="115-115"];
m23_7 [cluster="System.Collections.Generic.List<T>.List(int)", file="OptionMapFixture.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m23_32 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", file="OptionMapFixture.cs", label="_omBuilder.Options[2].Should().Be.SameAs(_optionMap[_omBuilder.Names[2]])", span="104-104"];
m23_33 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.ManageOptions()", span="100-100"];
m24_0 [cluster="CommandLine.Tests.Mocks.OptionsBase.ToString()", file="OptionsBase.cs", label="Entry CommandLine.Tests.Mocks.OptionsBase.ToString()", span="33-33"];
m24_1 [cluster="CommandLine.Tests.Mocks.OptionsBase.ToString()", file="OptionsBase.cs", label="return DebugStringUtil.ConvertOptionsToString(this);", span="35-35"];
m24_2 [cluster="CommandLine.Tests.Mocks.OptionsBase.ToString()", file="OptionsBase.cs", label="Exit CommandLine.Tests.Mocks.OptionsBase.ToString()", span="33-33"];
m24_3 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="OptionsBase.cs", label="Entry CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", span="39-39"];
m24_4 [file="OptionsBase.cs", label="CommandLine.Tests.Mocks.OptionsBase", span=""];
m26_0 [cluster="CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", file="OptionsWithDefaultSet.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", span="35-35"];
m26_1 [cluster="CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", file="OptionsWithDefaultSet.cs", label="FileId = int.MinValue", span="37-37"];
m26_2 [cluster="CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", file="OptionsWithDefaultSet.cs", label="Exit CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", span="35-35"];
m26_3 [file="OptionsWithDefaultSet.cs", label="CommandLine.Tests.Mocks.OptionsWithDefaultSet", span=""];
m27_0 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="35-35"];
m27_1 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs", label="Red = 0", span="37-37"];
m27_2 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs", label="Green = 0", span="38-38"];
m27_3 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs", label="Blue = 0", span="39-39"];
m27_4 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs", label="Hue = 0", span="40-40"];
m27_5 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs", label="Saturation = 0", span="41-41"];
m27_6 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs", label="Value = 0", span="42-42"];
m27_7 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs", label="Exit CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="35-35"];
m27_8 [file="OptionsWithMultipleSet.cs", label="CommandLine.Tests.Mocks.OptionsWithMultipleSet", span=""];
m34_47 [cluster="System.Nullable<T>.ToString()", file="Program.cs", label="Entry System.Nullable<T>.ToString()", span="0-0"];
m34_49 [cluster="System.Console.WriteLine()", file="Program.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m34_48 [cluster="System.Console.WriteLine(string, object)", file="Program.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m34_20 [cluster="System.Environment.Exit(int)", file="Program.cs", label="Entry System.Environment.Exit(int)", span="0-0"];
m34_59 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="Program.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string)", span="361-361"];
m34_4 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="95-95"];
m34_5 [cluster="lambda expression", file="Program.cs", label="HelpText.DefaultParsingErrorsHandler(this, current)", span="95-95"];
m34_6 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="95-95"];
m34_52 [cluster="System.Enum.ToString()", file="Program.cs", label="Entry System.Enum.ToString()", span="0-0"];
m34_7 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(CommandLine.CommandLineOptionsBase, CommandLine.Text.HelpText)", file="Program.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(CommandLine.CommandLineOptionsBase, CommandLine.Text.HelpText)", span="840-840"];
m34_55 [cluster="System.Text.StringBuilder.Remove(int, int)", file="Program.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m34_17 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="Program.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1692-1692"];
m34_57 [cluster="string.IsNullOrEmpty(string)", file="Program.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m34_51 [cluster="string.ToLowerInvariant()", file="Program.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m34_58 [cluster="string.Format(string, object)", file="Program.cs", label="Entry string.Format(string, object)", span="0-0"];
m34_18 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="Program.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1564-1564"];
m34_56 [cluster="System.Text.StringBuilder.ToString()", file="Program.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m34_54 [cluster="System.Text.StringBuilder.Append(string)", file="Program.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m34_0 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="Entry SampleApp.Program.Options.GetUsage()", span="93-93"];
m34_1 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="return HelpText.AutoBuild(this, (HelpText current) => HelpText.DefaultParsingErrorsHandler(this, current));", span="95-95"];
m34_2 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="Exit SampleApp.Program.Options.GetUsage()", span="93-93"];
m34_46 [cluster="System.Console.WriteLine(string)", file="Program.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m34_50 [cluster="bool.ToString()", file="Program.cs", label="Entry bool.ToString()", span="0-0"];
m34_16 [cluster="SampleApp.Program.Options.Options()", file="Program.cs", label="Entry SampleApp.Program.Options.Options()", span="55-55"];
m34_21 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Entry SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", span="171-171"];
m34_22 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.VerboseLevel == null", span="173-173"];
m34_24 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''verbose [on]: {0}'', (options.VerboseLevel < 0 || options.VerboseLevel > 2) ? ''#invalid value#'' : options.VerboseLevel.ToString())", span="176-176"];
m34_26 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''input file: {0} ...'', options.InputFile)", span="178-178"];
m34_27 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.DefinitionFiles", span="179-179"];
m34_29 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  start offset: {0}'', options.StartOffset)", span="183-183"];
m34_30 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  tabular data computation: {0}'', options.Calculate.ToString().ToLowerInvariant())", span="184-184"];
m34_31 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  on errors: {0}'', options.IgnoreErrors ? ''continue'' : ''stop processing'')", span="185-185"];
m34_32 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  optimize for: {0}'', options.Optimization.ToString().ToLowerInvariant())", span="186-186"];
m34_33 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.AllowedOperators != null", span="187-187"];
m34_36 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.AllowedOperators", span="191-191"];
m34_41 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="!string.IsNullOrEmpty(options.OutputFile)", span="199-199"];
m34_42 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="_headingInfo.WriteMessage(string.Format(''writing elaborated data: {0} ...'', options.OutputFile))", span="200-200"];
m34_23 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''verbose [off]'')", span="174-174"];
m34_25 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine()", span="177-177"];
m34_28 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  using definition file: {0}'', defFile)", span="181-181"];
m34_34 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="var builder = new StringBuilder()", span="189-189"];
m34_40 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine()", span="198-198"];
m34_35 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="builder.Append(''  allowed operators: '')", span="190-190"];
m34_37 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="builder.Append(op)", span="193-193"];
m34_38 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="builder.Append('', '')", span="194-194"];
m34_39 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(builder.Remove(builder.Length - 2, 2).ToString())", span="196-196"];
m34_43 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="_headingInfo.WriteMessage(''elaborated data:'')", span="203-203"];
m34_44 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''[...]'')", span="204-204"];
m34_45 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Exit SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", span="171-171"];
m34_53 [cluster="System.Text.StringBuilder.StringBuilder()", file="Program.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m34_3 [cluster="CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.HandleParsingErrorsDelegate)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.HandleParsingErrorsDelegate)", span="793-793"];
m34_19 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="Program.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1717-1717"];
m34_8 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Entry SampleApp.Program.Main(string[])", span="156-156"];
m34_9 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="var options = new Options()", span="161-161"];
m34_11 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="!parser.ParseArguments(args, options)", span="163-163"];
m34_10 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="var parser = new CommandLineParser(new CommandLineParserSettings(Console.Error))", span="162-162"];
m34_13 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="DoCoreTask(options)", span="166-166"];
m34_12 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Environment.Exit(1)", span="164-164"];
m34_14 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Environment.Exit(0)", span="168-168"];
m34_15 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Exit SampleApp.Program.Main(string[])", span="156-156"];
m34_60 [file="Program.cs", label="SampleApp.Program.Options", span=""];
m35_10 [cluster="CommandLine.Tests.ReflectionUtilFixture.CreateInstance()", file="ReflectionUtilFixture.cs", label="Entry CommandLine.Tests.ReflectionUtilFixture.CreateInstance()", span="102-102"];
m35_11 [cluster="CommandLine.Tests.ReflectionUtilFixture.CreateInstance()", file="ReflectionUtilFixture.cs", label="_target = new MockObject()", span="104-104"];
m35_12 [cluster="CommandLine.Tests.ReflectionUtilFixture.CreateInstance()", file="ReflectionUtilFixture.cs", label="Exit CommandLine.Tests.ReflectionUtilFixture.CreateInstance()", span="102-102"];
m35_32 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute()", file="ReflectionUtilFixture.cs", label="Entry CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute()", span="133-133"];
m35_33 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute()", file="ReflectionUtilFixture.cs", label="var pair = ReflectionUtil.RetrieveMethod<MockAttribute>(_target)", span="135-135"];
m35_34 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute()", file="ReflectionUtilFixture.cs", label="pair.Should().Not.Be.Null()", span="137-137"];
m35_35 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute()", file="ReflectionUtilFixture.cs", label="pair.Left.Name.Should().Equal(''DoNothing'')", span="138-138"];
m35_36 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute()", file="ReflectionUtilFixture.cs", label="Exit CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute()", span="133-133"];
m35_16 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs", label="Entry CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", span="114-114"];
m35_17 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs", label="var list = ReflectionUtil.RetrievePropertyList<MockAttribute>(_target)", span="116-116"];
m35_18 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs", label="list.Should().Count.Exactly(2)", span="118-118"];
m35_19 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs", label="list[0].Left.Name.Should().Equal(''StringField'')", span="119-119"];
m35_20 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs", label="list[1].Left.Name.Should().Equal(''BooleanField'')", span="120-120"];
m35_21 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs", label="PrintFieldList<MockAttribute>(list)", span="122-122"];
m35_22 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs", label="var anotherList = ReflectionUtil.RetrievePropertyList<AnotherMockAttribute>(_target)", span="124-124"];
m35_23 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs", label="anotherList.Should().Count.Exactly(1)", span="126-126"];
m35_24 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs", label="anotherList[0].Left.Name.Should().Equal(''IntField'')", span="127-127"];
m35_25 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs", label="PrintFieldList<AnotherMockAttribute>(anotherList)", span="129-129"];
m35_26 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs", label="Exit CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", span="114-114"];
m35_31 [cluster="CommandLine.Tests.ReflectionUtilFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>)", file="ReflectionUtilFixture.cs", label="Entry CommandLine.Tests.ReflectionUtilFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>)", span="182-182"];
m35_48 [cluster="CommandLine.Tests.ReflectionUtilFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>)", file="ReflectionUtilFixture.cs", label="Console.WriteLine(''Attribute: {0}'', list[0].Right.GetType())", span="185-185"];
m35_49 [cluster="CommandLine.Tests.ReflectionUtilFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>)", file="ReflectionUtilFixture.cs", label=list, span="186-186"];
m35_50 [cluster="CommandLine.Tests.ReflectionUtilFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>)", file="ReflectionUtilFixture.cs", label="Console.WriteLine(''\tField: {0}'', pair.Left.Name)", span="188-188"];
m35_51 [cluster="CommandLine.Tests.ReflectionUtilFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>)", file="ReflectionUtilFixture.cs", label="Exit CommandLine.Tests.ReflectionUtilFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>)", span="182-182"];
m35_0 [cluster="CommandLine.Tests.ReflectionUtilFixture.MockObject.MockObject()", file="ReflectionUtilFixture.cs", label="Entry CommandLine.Tests.ReflectionUtilFixture.MockObject.MockObject()", span="59-59"];
m35_1 [cluster="CommandLine.Tests.ReflectionUtilFixture.MockObject.MockObject()", file="ReflectionUtilFixture.cs", label="IntField = 0", span="61-61"];
m35_2 [cluster="CommandLine.Tests.ReflectionUtilFixture.MockObject.MockObject()", file="ReflectionUtilFixture.cs", label="Exit CommandLine.Tests.ReflectionUtilFixture.MockObject.MockObject()", span="59-59"];
m35_39 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs", label="Entry CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", span="142-142"];
m35_40 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs", label="var list = ReflectionUtil.RetrievePropertyAttributeList<MockWithValueAttribute>(new AnotherMockObject())", span="144-144"];
m35_41 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs", label="list.Should().Not.Be.Null()", span="146-146"];
m35_42 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs", label="list.Should().Count.Exactly(3)", span="147-147"];
m35_43 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs", label="list[0].StringValue.Should().Equal(''applied to X'')", span="148-148"];
m35_44 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs", label="list[1].StringValue.Should().Equal(''applied to Y'')", span="149-149"];
m35_45 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs", label="list[2].StringValue.Should().Equal(''applied to Z'')", span="150-150"];
m35_46 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs", label="Exit CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", span="142-142"];
m35_47 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtilFixture.cs", label="Entry CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1920-1920"];
m35_37 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtilFixture.cs", label="Entry CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1882-1882"];
m35_29 [cluster="Unk.Exactly", file="ReflectionUtilFixture.cs", label="Entry Unk.Exactly", span=""];
m35_52 [cluster="object.GetType()", file="ReflectionUtilFixture.cs", label="Entry object.GetType()", span="0-0"];
m35_5 [cluster="CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject.AnotherMockObject()", file="ReflectionUtilFixture.cs", label="Entry CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject.AnotherMockObject()", span="81-81"];
m35_6 [cluster="CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject.AnotherMockObject()", file="ReflectionUtilFixture.cs", label="X = 0", span="83-83"];
m35_7 [cluster="CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject.AnotherMockObject()", file="ReflectionUtilFixture.cs", label="Y = 0", span="84-84"];
m35_8 [cluster="CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject.AnotherMockObject()", file="ReflectionUtilFixture.cs", label="Z = 0", span="85-85"];
m35_9 [cluster="CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject.AnotherMockObject()", file="ReflectionUtilFixture.cs", label="Exit CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject.AnotherMockObject()", span="81-81"];
m35_27 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtilFixture.cs", label="Entry CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1856-1856"];
m35_38 [cluster="Unk.Null", file="ReflectionUtilFixture.cs", label="Entry Unk.Null", span=""];
m35_53 [cluster="System.Console.WriteLine(string, object)", file="ReflectionUtilFixture.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m35_13 [cluster="CommandLine.Tests.ReflectionUtilFixture.ShutdownInstance()", file="ReflectionUtilFixture.cs", label="Entry CommandLine.Tests.ReflectionUtilFixture.ShutdownInstance()", span="108-108"];
m35_14 [cluster="CommandLine.Tests.ReflectionUtilFixture.ShutdownInstance()", file="ReflectionUtilFixture.cs", label="_target = null", span="110-110"];
m35_15 [cluster="CommandLine.Tests.ReflectionUtilFixture.ShutdownInstance()", file="ReflectionUtilFixture.cs", label="Exit CommandLine.Tests.ReflectionUtilFixture.ShutdownInstance()", span="108-108"];
m35_28 [cluster="Unk.Should", file="ReflectionUtilFixture.cs", label="Entry Unk.Should", span=""];
m35_3 [cluster="CommandLine.Tests.ReflectionUtilFixture.MockObject.DoNothing()", file="ReflectionUtilFixture.cs", label="Entry CommandLine.Tests.ReflectionUtilFixture.MockObject.DoNothing()", span="74-74"];
m35_4 [cluster="CommandLine.Tests.ReflectionUtilFixture.MockObject.DoNothing()", file="ReflectionUtilFixture.cs", label="Exit CommandLine.Tests.ReflectionUtilFixture.MockObject.DoNothing()", span="74-74"];
m35_54 [file="ReflectionUtilFixture.cs", label="CommandLine.Tests.ReflectionUtilFixture.MockObject", span=""];
m35_55 [file="ReflectionUtilFixture.cs", label="CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject", span=""];
m36_14 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(CommandLine.CommandLineOptionsBase, CommandLine.Text.HelpText)", file="RPEOptions.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(CommandLine.CommandLineOptionsBase, CommandLine.Text.HelpText)", span="840-840"];
m36_5 [cluster="CommandLine.Text.HelpText.HelpText()", file="RPEOptions.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="651-651"];
m36_10 [cluster="CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.HandleParsingErrorsDelegate)", file="RPEOptions.cs", label="Entry CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.HandleParsingErrorsDelegate)", span="793-793"];
m36_11 [cluster="lambda expression", file="RPEOptions.cs", label="Entry lambda expression", span="33-34"];
m36_12 [cluster="lambda expression", file="RPEOptions.cs", label="HelpText.DefaultParsingErrorsHandler(this, current)", span="34-34"];
m36_13 [cluster="lambda expression", file="RPEOptions.cs", label="Exit lambda expression", span="33-34"];
m36_7 [cluster="CommandLine.Tests.Mocks.RPEOptionsForAutoBuild.GetUsage()", file="RPEOptions.cs", label="Entry CommandLine.Tests.Mocks.RPEOptionsForAutoBuild.GetUsage()", span="31-31"];
m36_8 [cluster="CommandLine.Tests.Mocks.RPEOptionsForAutoBuild.GetUsage()", file="RPEOptions.cs", label="return HelpText.AutoBuild(this, delegate(HelpText current) {\r\n                HelpText.DefaultParsingErrorsHandler(this, current); });", span="33-34"];
m36_9 [cluster="CommandLine.Tests.Mocks.RPEOptionsForAutoBuild.GetUsage()", file="RPEOptions.cs", label="Exit CommandLine.Tests.Mocks.RPEOptionsForAutoBuild.GetUsage()", span="31-31"];
m36_6 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", file="RPEOptions.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", span="1004-1004"];
m36_0 [cluster="CommandLine.Tests.Mocks.RPEOptions.GetUsage()", file="RPEOptions.cs", label="Entry CommandLine.Tests.Mocks.RPEOptions.GetUsage()", span="18-18"];
m36_1 [cluster="CommandLine.Tests.Mocks.RPEOptions.GetUsage()", file="RPEOptions.cs", label="LastPostParsingState.Errors.Count > 0", span="20-20"];
m36_2 [cluster="CommandLine.Tests.Mocks.RPEOptions.GetUsage()", file="RPEOptions.cs", label="return new HelpText().RenderParsingErrorsText(this, 0);", span="22-22"];
m36_3 [cluster="CommandLine.Tests.Mocks.RPEOptions.GetUsage()", file="RPEOptions.cs", label="return '''';", span="24-24"];
m36_4 [cluster="CommandLine.Tests.Mocks.RPEOptions.GetUsage()", file="RPEOptions.cs", label="Exit CommandLine.Tests.Mocks.RPEOptions.GetUsage()", span="18-18"];
m36_15 [file="RPEOptions.cs", label="CommandLine.Tests.Mocks.RPEOptions", span=""];
m36_16 [file="RPEOptions.cs", label="CommandLine.Tests.Mocks.RPEOptionsForAutoBuild", span=""];
m37_0 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="SimpleOptions.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33"];
m37_1 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="SimpleOptions.cs", label="IntegerValue = 0", span="35-35"];
m37_2 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="SimpleOptions.cs", label="Exit CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33"];
m37_3 [file="SimpleOptions.cs", label="CommandLine.Tests.Mocks.SimpleOptions", span=""];
m38_3 [cluster="CommandLine.Text.HelpText.AutoBuild(object)", file="SimpleOptionsForAutoBuid.cs", label="Entry CommandLine.Text.HelpText.AutoBuild(object)", span="780-780"];
m38_0 [cluster="CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid.GetUsage()", file="SimpleOptionsForAutoBuid.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid.GetUsage()", span="12-12"];
m38_1 [cluster="CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid.GetUsage()", file="SimpleOptionsForAutoBuid.cs", label="return HelpText.AutoBuild(this);", span="14-14"];
m38_2 [cluster="CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid.GetUsage()", file="SimpleOptionsForAutoBuid.cs", label="Exit CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid.GetUsage()", span="12-12"];
m38_4 [file="SimpleOptionsForAutoBuid.cs", label="CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid", span=""];
m42_0 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="SimpleOptionsWithBadOptionArray.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", span="37-37"];
m42_1 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="SimpleOptionsWithBadOptionArray.cs", label="BadIntegerValue = 0", span="39-39"];
m42_2 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="SimpleOptionsWithBadOptionArray.cs", label="Exit CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", span="37-37"];
m42_3 [file="SimpleOptionsWithBadOptionArray.cs", label="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray", span=""];
m45_0 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="SimpleOptionsWithEnum.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
m45_1 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="SimpleOptionsWithEnum.cs", label="FileAccess = FileAccess.Read", span="40-40"];
m45_2 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="SimpleOptionsWithEnum.cs", label="Exit CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
m45_3 [file="SimpleOptionsWithEnum.cs", label="CommandLine.Tests.Mocks.SimpleOptionsWithEnum", span=""];
m46_0 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.GetUsage()", file="SimpleOptionsWithHelpOption.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.GetUsage()", span="42-42"];
m46_1 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.GetUsage()", file="SimpleOptionsWithHelpOption.cs", label="return ''MockOptions::GetUsage()'';", span="44-44"];
m46_2 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.GetUsage()", file="SimpleOptionsWithHelpOption.cs", label="Exit CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.GetUsage()", span="42-42"];
m49_10 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="Singleton.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471"];
m49_14 [cluster="System.Console.WriteLine(object)", file="Singleton.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m49_20 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="Singleton.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="35-35"];
m49_0 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="Entry CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", span="41-41"];
m49_1 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="var options = new SimpleOptions()", span="43-43"];
m49_2 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="bool result = CommandLineParser.Default.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="44-45"];
m49_4 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="options.StringValue.Should().Equal(''another string'')", span="48-48"];
m49_5 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="options.IntegerValue.Should().Equal(100)", span="49-49"];
m49_6 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="options.BooleanValue.Should().Be.True()", span="50-50"];
m49_7 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="Console.WriteLine(options)", span="51-51"];
m49_3 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="result.Should().Be.True()", span="47-47"];
m49_8 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="Exit CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", span="41-41"];
m49_12 [cluster="Unk.True", file="Singleton.cs", label="Entry Unk.True", span=""];
m49_9 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="Singleton.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33"];
m49_11 [cluster="Unk.Should", file="Singleton.cs", label="Entry Unk.Should", span=""];
m49_15 [cluster="CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", file="Singleton.cs", label="Entry CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", span="55-55"];
m49_16 [cluster="CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", file="Singleton.cs", label="var options = new OptionsWithMultipleSet()", span="57-57"];
m49_17 [cluster="CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", file="Singleton.cs", label="bool result = CommandLineParser.Default.ParseArguments(\r\n                new string[] { ''-r1'', ''-g2'', ''-b3'', ''-h4'', ''-s5'', ''-v6'' }, options)", span="58-59"];
m49_18 [cluster="CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", file="Singleton.cs", label="result.Should().Be.True()", span="61-61"];
m49_19 [cluster="CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", file="Singleton.cs", label="Exit CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", span="55-55"];
m51_20 [cluster="CommandLine.Tests.Mocks.OptionsOfPlugInX.OptionsOfPlugInX()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsOfPlugInX.OptionsOfPlugInX()", span="41-41"];
m51_18 [cluster="Unk.True", file="UnknownArgumentsFixture.cs", label="Entry Unk.True", span=""];
m51_15 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1543-1543"];
m51_14 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1692-1692"];
m51_0 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", span="42-42"];
m51_1 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="string[] args = { ''--plugin'', ''addonX'', ''--filename'', ''input.dat'' }", span="44-44"];
m51_2 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var appOptions = new OptionsForAppWithPlugIns()", span="45-45"];
m51_4 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var result1 = parser.ParseArguments(args, appOptions)", span="48-48"];
m51_8 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var result2 = parser.ParseArguments(args, plugInXOptions)", span="54-54"];
m51_3 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var parser = new CommandLineParser(new CommandLineParserSettings {\r\n                IgnoreUnknownArguments = true, CaseSensitive = true })", span="46-47"];
m51_6 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="appOptions.PlugInName.Should().Equal(''addonX'')", span="51-51"];
m51_5 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="result1.Should().Be.True()", span="50-50"];
m51_7 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var plugInXOptions = new OptionsOfPlugInX()", span="53-53"];
m51_10 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="plugInXOptions.InputFileName.Should().Equal(''input.dat'')", span="57-57"];
m51_11 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="plugInXOptions.ReadOffset.Should().Equal(10L)", span="58-58"];
m51_9 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="result2.Should().Be.True()", span="56-56"];
m51_12 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="Exit CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", span="42-42"];
m51_17 [cluster="Unk.Should", file="UnknownArgumentsFixture.cs", label="Entry Unk.Should", span=""];
m51_13 [cluster="CommandLine.Tests.Mocks.OptionsForAppWithPlugIns.OptionsForAppWithPlugIns()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsForAppWithPlugIns.OptionsForAppWithPlugIns()", span="35-35"];
m51_16 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1717-1717"];
m52_15 [cluster="CommandLine.Tests.ValueListAttributeFixture.MockSpecializedList.MockSpecializedList()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.MockSpecializedList.MockSpecializedList()", span="41-41"];
m52_3 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttributeFixture.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="304-304"];
m52_12 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", span="73-73"];
m52_13 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="ValueListAttributeFixture.cs", label="new ValueListAttribute(new MockSpecializedList().GetType())", span="75-75"];
m52_14 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", span="73-73"];
m52_22 [cluster="CommandLine.Tests.ValueListAttributeFixture.MockOptions.MockOptions()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.MockOptions.MockOptions()", span="45-45"];
m52_27 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", span="89-89"];
m52_28 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="var options = new MockOptions()", span="91-91"];
m52_29 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="var values = ValueListAttribute.GetReference(options)", span="93-93"];
m52_33 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''value0'', ''value1'', ''value2'' }, options.Values)", span="98-98"];
m52_30 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="values.Add(''value0'')", span="94-94"];
m52_31 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="values.Add(''value1'')", span="95-95"];
m52_32 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="values.Add(''value2'')", span="96-96"];
m52_34 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", span="89-89"];
m52_16 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", span="79-79"];
m52_17 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="var options = new MockOptions()", span="81-81"];
m52_18 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="IList<string> values = ValueListAttribute.GetReference(options)", span="83-83"];
m52_19 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="values.Should().Not.Be.Null()", span="84-84"];
m52_20 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="values.GetType().Should().Equal(typeof(List<string>))", span="85-85"];
m52_21 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", span="79-79"];
m52_4 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", span="61-61"];
m52_5 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", file="ValueListAttributeFixture.cs", label="new ValueListAttribute(new List<object>().GetType())", span="63-63"];
m52_6 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", span="61-61"];
m52_35 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ValueListAttributeFixture.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m52_23 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttributeFixture.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="328-328"];
m52_8 [cluster="object.GetType()", file="ValueListAttributeFixture.cs", label="Entry object.GetType()", span="0-0"];
m52_25 [cluster="Unk.Null", file="ValueListAttributeFixture.cs", label="Entry Unk.Null", span=""];
m52_36 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48"];
m52_0 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", span="54-54"];
m52_1 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", file="ValueListAttributeFixture.cs", label="new ValueListAttribute(null)", span="56-56"];
m52_2 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", span="54-54"];
m52_24 [cluster="Unk.Should", file="ValueListAttributeFixture.cs", label="Entry Unk.Should", span=""];
m52_9 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", span="67-67"];
m52_10 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", file="ValueListAttributeFixture.cs", label="new ValueListAttribute(new List<string>().GetType())", span="69-69"];
m52_11 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", span="67-67"];
m52_7 [cluster="System.Collections.Generic.List<T>.List()", file="ValueListAttributeFixture.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m52_37 [file="ValueListAttributeFixture.cs", label="CommandLine.Tests.ValueListAttributeFixture", span=""];
m53_14 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471"];
m53_20 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", span="61-61"];
m53_21 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="var options = new OptionsWithValueListMaximumThree()", span="63-63"];
m53_22 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''file.a'', ''file.b'', ''file.c'' }, options)", span="64-64"];
m53_24 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="options.InputFilenames[0].Should().Equal(''file.a'')", span="67-67"];
m53_25 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="options.InputFilenames[1].Should().Equal(''file.b'')", span="68-68"];
m53_26 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="options.InputFilenames[2].Should().Equal(''file.c'')", span="69-69"];
m53_27 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="options.OutputFile.Should().Be.Null()", span="70-70"];
m53_28 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="options.Overwrite.Should().Be.False()", span="71-71"];
m53_29 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Console.WriteLine(options)", span="72-72"];
m53_23 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="66-66"];
m53_30 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", span="61-61"];
m53_39 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m53_19 [cluster="System.Console.WriteLine(object)", file="ValueListAttributeParsingFixture.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m53_33 [cluster="Unk.False", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.False", span=""];
m53_34 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", span="76-76"];
m53_35 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs", label="var options = new OptionsWithValueListMaximumThree()", span="78-78"];
m53_36 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                    new string[] { ''file.a'', ''file.b'', ''file.c'', ''file.d'' }, options)", span="79-80"];
m53_37 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="82-82"];
m53_38 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", span="76-76"];
m53_31 [cluster="CommandLine.Tests.Mocks.OptionsWithValueListMaximumThree.OptionsWithValueListMaximumThree()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithValueListMaximumThree.OptionsWithValueListMaximumThree()", span="35-35"];
m53_18 [cluster="Unk.True", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.True", span=""];
m53_48 [cluster="Unk.Zero", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.Zero", span=""];
m53_13 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35"];
m53_0 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeParsingFixture()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeParsingFixture()", span="40-40"];
m53_1 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeParsingFixture()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeParsingFixture()", span="40-40"];
m53_32 [cluster="Unk.Null", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.Null", span=""];
m53_47 [cluster="CommandLine.Tests.Mocks.OptionsWithValueListMaximumZero.OptionsWithValueListMaximumZero()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithValueListMaximumZero.OptionsWithValueListMaximumZero()", span="36-36"];
m53_2 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", span="45-45"];
m53_3 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithValueList()", span="47-47"];
m53_4 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                new string[] { ''--switch'', ''file1.ext'', ''file2.ext'', ''file3.ext'', ''-s'', ''out.ext'' }, options)", span="48-49"];
m53_6 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="options.Items[0].Should().Equal(''file1.ext'')", span="52-52"];
m53_7 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="options.Items[1].Should().Equal(''file2.ext'')", span="53-53"];
m53_8 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="options.Items[2].Should().Equal(''file3.ext'')", span="54-54"];
m53_9 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="options.StringValue.Should().Equal(''out.ext'')", span="55-55"];
m53_10 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="options.BooleanValue.Should().Be.True()", span="56-56"];
m53_11 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="Console.WriteLine(options)", span="57-57"];
m53_5 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="51-51"];
m53_12 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", span="45-45"];
m53_16 [cluster="Unk.Should", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.Should", span=""];
m53_49 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", span="97-97"];
m53_50 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs", label="var options = new OptionsWithValueListMaximumZero()", span="99-99"];
m53_51 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''some'', ''value'' }, options)", span="101-101"];
m53_52 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="102-102"];
m53_53 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", span="97-97"];
m53_40 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", span="86-86"];
m53_41 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="var options = new OptionsWithValueListMaximumZero()", span="88-88"];
m53_42 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { }, options)", span="89-89"];
m53_44 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="options.Junk.Should().Count.Zero()", span="92-92"];
m53_45 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="Console.WriteLine(options)", span="93-93"];
m53_43 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="91-91"];
m53_46 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", span="86-86"];
m53_15 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m53_54 [file="ValueListAttributeParsingFixture.cs", label="CommandLine.Tests.ValueListAttributeParsingFixture", span=""];
n13 -> n4  [color=darkseagreen4, key=1, label="CommandLine.Tests.ArgumentParserFixture", style=dashed];
n1 -> n5  [color=darkseagreen4, key=1, label=ae, style=dashed];
m1_4 -> m1_6  [color=green, key=1, label=string, style=dashed];
m1_31 -> m1_6  [color=green, key=1, label="CommandLine.Tests.AttributesFixture.CustomOptionAttribute", style=dashed];
m2_9 -> m2_12  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_9 -> m2_13  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_11 -> m2_13  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_11 -> m2_14  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_14 -> m2_14  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label="T[]", style=dashed];
m2_0 -> m2_4  [color=darkseagreen4, key=1, label="T[]", style=dashed];
m2_2 -> m2_4  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_2 -> m2_5  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_5 -> m2_5  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_504 -> m4_506  [color=green, key=1, label=object, style=dashed];
m4_504 -> m4_515  [color=green, key=1, label=string, style=dashed];
m4_505 -> m4_518  [color=green, key=1, label=found, style=dashed];
m4_516 -> m4_518  [color=green, key=1, label=found, style=dashed];
m4_716 -> m4_718  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_716 -> m4_720  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m4_382 -> m4_385  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_383 -> m4_385  [color=green, key=1, label=setName, style=dashed];
m4_383 -> m4_386  [color=green, key=1, label=setName, style=dashed];
m4_406 -> m4_408  [color=green, key=1, label=leftHash, style=dashed];
m4_182 -> m4_274  [color=green, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m4_182 -> m4_275  [color=green, key=1, label=object, style=dashed];
m4_269 -> m4_274  [color=green, key=1, label=elementType, style=dashed];
m4_270 -> m4_272  [color=green, key=1, label=array, style=dashed];
m4_270 -> m4_274  [color=green, key=1, label=array, style=dashed];
m4_270 -> m4_275  [color=green, key=1, label=array, style=dashed];
m4_271 -> m4_274  [color=green, key=1, label=i, style=dashed];
m4_271 -> m4_278  [color=green, key=1, label=i, style=dashed];
m4_278 -> m4_278  [color=green, key=1, label=i, style=dashed];
m4_265 -> m4_316  [color=green, key=1, label=object, style=dashed];
m4_319 -> m4_321  [color=green, key=1, label=i, style=dashed];
m4_319 -> m4_322  [color=green, key=1, label=i, style=dashed];
m4_317 -> m4_321  [color=green, key=1, label=fieldRef, style=dashed];
m4_318 -> m4_320  [color=green, key=1, label=values, style=dashed];
m4_318 -> m4_321  [color=green, key=1, label=values, style=dashed];
m4_322 -> m4_322  [color=green, key=1, label=i, style=dashed];
m4_710 -> m4_713  [color=green, key=1, label="string[]", style=dashed];
m4_710 -> m4_712  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_594 -> m4_597  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_761 -> m4_776  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.ParsingError>", style=dashed];
m4_774 -> m4_776  [color=darkseagreen4, key=1, label=commandLineOptionsBase, style=dashed];
m4_186 -> m4_195  [color=green, key=1, label="CommandLine.Internal.IArgumentEnumerator", style=dashed];
m4_186 -> m4_211  [color=green, key=1, label="CommandLine.Internal.IArgumentEnumerator", style=dashed];
m4_186 -> m4_224  [color=green, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_186 -> m4_226  [color=green, key=1, label=object, style=dashed];
m4_187 -> m4_195  [color=green, key=1, label=group, style=dashed];
m4_187 -> m4_198  [color=green, key=1, label=group, style=dashed];
m4_187 -> m4_206  [color=green, key=1, label=group, style=dashed];
m4_187 -> m4_224  [color=green, key=1, label=group, style=dashed];
m4_189 -> m4_193  [color=green, key=1, label=option, style=dashed];
m4_189 -> m4_194  [color=green, key=1, label=option, style=dashed];
m4_189 -> m4_199  [color=green, key=1, label=option, style=dashed];
m4_189 -> m4_202  [color=green, key=1, label=option, style=dashed];
m4_189 -> m4_204  [color=green, key=1, label=option, style=dashed];
m4_189 -> m4_209  [color=green, key=1, label=option, style=dashed];
m4_189 -> m4_213  [color=green, key=1, label=option, style=dashed];
m4_189 -> m4_216  [color=green, key=1, label=option, style=dashed];
m4_189 -> m4_218  [color=green, key=1, label=option, style=dashed];
m4_189 -> m4_222  [color=green, key=1, label=option, style=dashed];
m4_189 -> m4_226  [color=green, key=1, label=option, style=dashed];
m4_200 -> m4_203  [color=green, key=1, label=valueSetting, style=dashed];
m4_207 -> m4_210  [color=green, key=1, label=valueSetting, style=dashed];
m4_214 -> m4_217  [color=green, key=1, label=valueSetting, style=dashed];
m4_220 -> m4_223  [color=green, key=1, label=valueSetting, style=dashed];
m4_268 -> m4_288  [color=green, key=1, label=string, style=dashed];
m4_268 -> m4_290  [color=green, key=1, label=string, style=dashed];
m4_82 -> m4_438  [color=green, key=1, label=string, style=dashed];
m4_180 -> m4_260  [color=green, key=1, label=string, style=dashed];
m4_180 -> m4_262  [color=green, key=1, label=string, style=dashed];
m4_180 -> m4_263  [color=green, key=1, label=string, style=dashed];
m4_183 -> m4_312  [color=green, key=1, label=bool, style=dashed];
m4_603 -> m4_606  [color=green, key=1, label=list, style=dashed];
m4_608 -> m4_610  [color=green, key=1, label=pairZero, style=dashed];
m4_609 -> m4_611  [color=green, key=1, label="out System.Type", style=dashed];
m4_738 -> m4_751  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_749 -> m4_753  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_747 -> m4_751  [color=darkseagreen4, key=1, label=parser, style=dashed];
m4_745 -> m4_756  [color=darkseagreen4, key=1, label=argument, style=dashed];
m4_743 -> m4_754  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m4_742 -> m4_756  [color=darkseagreen4, key=1, label=target, style=dashed];
m4_742 -> m4_755  [color=darkseagreen4, key=1, label=target, style=dashed];
m4_426 -> m4_430  [color=green, key=1, label=string, style=dashed];
m4_62 -> m4_65  [color=green, key=1, label=bool, style=dashed];
m4_373 -> m4_375  [color=green, key=1, label=option, style=dashed];
m4_376 -> m4_378  [color=green, key=1, label=info, style=dashed];
m4_425 -> m4_589  [color=green, key=1, label=object, style=dashed];
m4_425 -> m4_590  [color=green, key=1, label=object, style=dashed];
m4_586 -> m4_589  [color=green, key=1, label=concreteType, style=dashed];
m4_586 -> m4_590  [color=green, key=1, label=property, style=dashed];
m4_715 -> m4_729  [color=green, key=1, label=object, style=dashed];
m4_715 -> m4_727  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m4_715 -> m4_733  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m4_724 -> m4_726  [color=green, key=1, label=pair, style=dashed];
m4_724 -> m4_727  [color=green, key=1, label=pair, style=dashed];
m4_724 -> m4_729  [color=green, key=1, label=pair, style=dashed];
m4_725 -> m4_730  [color=green, key=1, label=helpWriter, style=dashed];
m4_475 -> m4_477  [color=green, key=1, label=method, style=dashed];
m4_477 -> m4_479  [color=green, key=1, label=attribute, style=dashed];
m4_114 -> m4_434  [color=green, key=1, label=string, style=dashed];
m4_465 -> m4_467  [color=green, key=1, label=method, style=dashed];
m4_465 -> m4_469  [color=green, key=1, label=method, style=dashed];
m4_467 -> m4_469  [color=green, key=1, label=attribute, style=dashed];
m4_442 -> m4_444  [color=green, key=1, label=string, style=dashed];
m4_257 -> m4_448  [color=green, key=1, label=object, style=dashed];
m4_447 -> m4_456  [color=green, key=1, label=list, style=dashed];
m4_447 -> m4_457  [color=green, key=1, label=list, style=dashed];
m4_450 -> m4_456  [color=green, key=1, label=property, style=dashed];
m4_454 -> m4_456  [color=green, key=1, label=attribute, style=dashed];
m4_247 -> m4_251  [color=green, key=1, label=list, style=dashed];
m4_250 -> m4_255  [color=green, key=1, label=map, style=dashed];
m4_363 -> m4_368  [color=green, key=1, label=requiredRulesAllMet, style=dashed];
m4_364 -> m4_366  [color=green, key=1, label=option, style=dashed];
m4_367 -> m4_368  [color=green, key=1, label=requiredRulesAllMet, style=dashed];
m4_576 -> m4_579  [color=green, key=1, label="System.Type", style=dashed];
m4_496 -> m4_499  [color=green, key=1, label=a, style=dashed];
m4_370 -> m4_394  [color=green, key=1, label="bool?", style=dashed];
m4_370 -> m4_396  [color=green, key=1, label="bool?", style=dashed];
m4_390 -> m4_398  [color=green, key=1, label=commandLineOptionsBase, style=dashed];
m4_393 -> m4_398  [color=green, key=1, label=error, style=dashed];
m4_17 -> m4_20  [color=green, key=1, label=string, style=dashed];
m4_17 -> m4_22  [color=green, key=1, label=string, style=dashed];
m4_17 -> m4_23  [color=green, key=1, label=bool, style=dashed];
m4_17 -> m4_24  [color=green, key=1, label=string, style=dashed];
m4_17 -> m4_25  [color=green, key=1, label=bool, style=dashed];
m4_267 -> m4_304  [color=green, key=1, label=string, style=dashed];
m4_302 -> m4_304  [color=green, key=1, label=nc, style=dashed];
m4_483 -> m4_491  [color=green, key=1, label=list, style=dashed];
m4_483 -> m4_492  [color=green, key=1, label=list, style=dashed];
m4_489 -> m4_491  [color=green, key=1, label=attribute, style=dashed];
m4_412 -> m4_415  [color=green, key=1, label=other, style=dashed];
m4_230 -> m4_233  [color=green, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m4_547 -> m4_552  [color=green, key=1, label=string, style=dashed];
m4_327 -> m4_330  [color=green, key=1, label=object, style=dashed];
m4_39 -> m4_41  [color=green, key=1, label="CommandLine.Internal.IArgumentEnumerator", style=dashed];
m4_39 -> m4_42  [color=green, key=1, label="CommandLine.Internal.IArgumentEnumerator", style=dashed];
m4_39 -> m4_43  [color=green, key=1, label="CommandLine.Internal.IArgumentEnumerator", style=dashed];
m4_39 -> m4_44  [color=green, key=1, label="CommandLine.Internal.IArgumentEnumerator", style=dashed];
m4_40 -> m4_43  [color=green, key=1, label=list, style=dashed];
m4_40 -> m4_46  [color=green, key=1, label=list, style=dashed];
m4_32 -> m4_35  [color=green, key=1, label=string, style=dashed];
m4_32 -> m4_36  [color=green, key=1, label=string, style=dashed];
m4_735 -> m4_768  [color=green, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m4_735 -> m4_764  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m4_735 -> m4_765  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m4_735 -> m4_766  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m4_735 -> m4_769  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m4_771 -> m4_771  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_762 -> m4_766  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
m4_762 -> m4_769  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
m4_763 -> m4_766  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_763 -> m4_769  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_763 -> m4_771  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_28 -> m4_528  [color=green, key=1, label=string, style=dashed];
m4_137 -> m4_146  [color=green, key=1, label="CommandLine.Internal.IArgumentEnumerator", style=dashed];
m4_138 -> m4_146  [color=green, key=1, label=parts, style=dashed];
m4_138 -> m4_148  [color=green, key=1, label=parts, style=dashed];
m4_138 -> m4_156  [color=green, key=1, label=parts, style=dashed];
m4_138 -> m4_172  [color=green, key=1, label=parts, style=dashed];
m4_139 -> m4_141  [color=green, key=1, label=option, style=dashed];
m4_139 -> m4_144  [color=green, key=1, label=option, style=dashed];
m4_139 -> m4_145  [color=green, key=1, label=option, style=dashed];
m4_139 -> m4_149  [color=green, key=1, label=option, style=dashed];
m4_139 -> m4_152  [color=green, key=1, label=option, style=dashed];
m4_139 -> m4_154  [color=green, key=1, label=option, style=dashed];
m4_139 -> m4_159  [color=green, key=1, label=option, style=dashed];
m4_139 -> m4_161  [color=green, key=1, label=option, style=dashed];
m4_139 -> m4_164  [color=green, key=1, label=option, style=dashed];
m4_139 -> m4_166  [color=green, key=1, label=option, style=dashed];
m4_139 -> m4_170  [color=green, key=1, label=option, style=dashed];
m4_139 -> m4_176  [color=green, key=1, label=option, style=dashed];
m4_150 -> m4_153  [color=green, key=1, label=valueSetting, style=dashed];
m4_157 -> m4_160  [color=green, key=1, label=valueSetting, style=dashed];
m4_162 -> m4_165  [color=green, key=1, label=valueSetting, style=dashed];
m4_168 -> m4_171  [color=green, key=1, label=valueSetting, style=dashed];
m4_174 -> m4_177  [color=green, key=1, label=valueSetting, style=dashed];
m4_779 -> m4_13  [color=green, key=1, label="CommandLine.Internal.ArgumentParser", style=dashed];
m4_780 -> m4_87  [color=green, key=1, label="CommandLine.Internal.OneCharStringEnumerator", style=dashed];
m4_780 -> m4_88  [color=green, key=1, label="CommandLine.Internal.OneCharStringEnumerator", style=dashed];
m4_780 -> m4_96  [color=green, key=1, label="CommandLine.Internal.OneCharStringEnumerator", style=dashed];
m4_780 -> m4_98  [color=green, key=1, label="CommandLine.Internal.OneCharStringEnumerator", style=dashed];
m4_780 -> m4_100  [color=green, key=1, label="CommandLine.Internal.OneCharStringEnumerator", style=dashed];
m4_781 -> m4_119  [color=green, key=1, label="CommandLine.Internal.StringArrayEnumerator", style=dashed];
m4_781 -> m4_120  [color=green, key=1, label="CommandLine.Internal.StringArrayEnumerator", style=dashed];
m4_781 -> m4_121  [color=green, key=1, label="CommandLine.Internal.StringArrayEnumerator", style=dashed];
m4_781 -> m4_128  [color=green, key=1, label="CommandLine.Internal.StringArrayEnumerator", style=dashed];
m4_781 -> m4_130  [color=green, key=1, label="CommandLine.Internal.StringArrayEnumerator", style=dashed];
m4_781 -> m4_131  [color=green, key=1, label="CommandLine.Internal.StringArrayEnumerator", style=dashed];
m4_781 -> m4_132  [color=green, key=1, label="CommandLine.Internal.StringArrayEnumerator", style=dashed];
m4_782 -> m4_152  [color=green, key=1, label="CommandLine.Internal.LongOptionParser", style=dashed];
m4_782 -> m4_159  [color=green, key=1, label="CommandLine.Internal.LongOptionParser", style=dashed];
m4_782 -> m4_164  [color=green, key=1, label="CommandLine.Internal.LongOptionParser", style=dashed];
m4_782 -> m4_170  [color=green, key=1, label="CommandLine.Internal.LongOptionParser", style=dashed];
m4_782 -> m4_176  [color=green, key=1, label="CommandLine.Internal.LongOptionParser", style=dashed];
m4_782 -> m4_142  [color=green, key=1, label="CommandLine.Internal.LongOptionParser", style=dashed];
m4_783 -> m4_202  [color=green, key=1, label="CommandLine.Internal.OptionGroupParser", style=dashed];
m4_783 -> m4_209  [color=green, key=1, label="CommandLine.Internal.OptionGroupParser", style=dashed];
m4_783 -> m4_216  [color=green, key=1, label="CommandLine.Internal.OptionGroupParser", style=dashed];
m4_783 -> m4_222  [color=green, key=1, label="CommandLine.Internal.OptionGroupParser", style=dashed];
m4_783 -> m4_191  [color=green, key=1, label="CommandLine.Internal.OptionGroupParser", style=dashed];
m4_784 -> m4_259  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_784 -> m4_260  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_784 -> m4_262  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_784 -> m4_263  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_784 -> m4_261  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_784 -> m4_275  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_784 -> m4_273  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_784 -> m4_286  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_784 -> m4_288  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_784 -> m4_290  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_784 -> m4_287  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_784 -> m4_289  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_784 -> m4_304  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_784 -> m4_303  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_784 -> m4_311  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_784 -> m4_312  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_784 -> m4_315  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_784 -> m4_316  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_784 -> m4_328  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_784 -> m4_330  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_784 -> m4_329  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_785 -> m4_341  [color=green, key=1, label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo", style=dashed];
m4_786 -> m4_345  [color=green, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_786 -> m4_350  [color=green, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_786 -> m4_355  [color=green, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_786 -> m4_360  [color=green, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_786 -> m4_361  [color=green, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_786 -> m4_364  [color=green, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_786 -> m4_366  [color=green, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_786 -> m4_371  [color=green, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_786 -> m4_373  [color=green, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_786 -> m4_376  [color=green, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_786 -> m4_375  [color=green, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_786 -> m4_378  [color=green, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_786 -> m4_385  [color=green, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_786 -> m4_384  [color=green, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_786 -> m4_386  [color=green, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_787 -> m4_415  [color=green, key=1, label="CommandLine.Internal.Pair<TLeft, TRight>", style=dashed];
m4_788 -> m4_421  [color=green, key=1, label="CommandLine.Internal.TargetWrapper", style=dashed];
m4_788 -> m4_427  [color=green, key=1, label="CommandLine.Internal.TargetWrapper", style=dashed];
m4_788 -> m4_430  [color=green, key=1, label="CommandLine.Internal.TargetWrapper", style=dashed];
m4_788 -> m4_429  [color=green, key=1, label="CommandLine.Internal.TargetWrapper", style=dashed];
m4_789 -> m4_554  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
m4_789 -> m4_550  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m4_798 -> m4_703  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_798 -> m4_713  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_798 -> m4_698  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_798 -> m4_707  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_798 -> m4_720  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_798 -> m4_727  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_798 -> m4_733  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m5_19 -> m5_9  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserBaseFixture", style=dashed];
m5_19 -> m5_15  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserBaseFixture", style=dashed];
m6_11 -> m6_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_11 -> m6_15  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_245 -> m6_248  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_257 -> m6_260  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_251 -> m6_254  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_76 -> m6_79  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_76 -> m6_80  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_76 -> m6_81  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_227 -> m6_230  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_32 -> m6_35  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_32 -> m6_36  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_32 -> m6_37  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_32 -> m6_38  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_32 -> m6_39  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_69 -> m6_72  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_54 -> m6_57  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_54 -> m6_58  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_54 -> m6_59  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_54 -> m6_60  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_54 -> m6_61  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_54 -> m6_62  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_54 -> m6_63  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_54 -> m6_64  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_155 -> m6_158  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_155 -> m6_159  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_221 -> m6_224  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_139 -> m6_142  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_139 -> m6_143  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_87 -> m6_90  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_22 -> m6_25  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_22 -> m6_26  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_22 -> m6_27  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_22 -> m6_28  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_205 -> m6_208  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_205 -> m6_209  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_205 -> m6_210  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_205 -> m6_211  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_215 -> m6_218  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_199 -> m6_202  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_233 -> m6_236  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_44 -> m6_47  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_44 -> m6_48  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_44 -> m6_49  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_44 -> m6_50  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_44 -> m6_51  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_239 -> m6_242  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_114 -> m6_117  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_114 -> m6_118  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_114 -> m6_119  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_98 -> m6_101  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_105 -> m6_108  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_105 -> m6_109  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_105 -> m6_110  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_292 -> m6_3  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_8  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_13  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_24  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_34  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_46  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_56  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_71  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_78  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_89  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_100  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_107  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_116  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_124  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_130  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_135  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_141  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_151  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_157  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_166  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_171  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_176  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_181  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_186  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_191  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_196  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_201  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_207  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_217  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_223  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_229  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_235  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_241  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_247  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_253  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_259  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_265  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_271  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_277  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_283  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m6_292 -> m6_289  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m7_1 -> m7_6  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_29 -> m7_34  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_18 -> m7_25  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_91 -> m9_104  [color=green, key=1, label=string, style=dashed];
m9_91 -> m9_105  [color=green, key=1, label=object, style=dashed];
m9_91 -> m9_106  [color=green, key=1, label=object, style=dashed];
m9_5 -> m9_7  [color=green, key=1, label=object, style=dashed];
m9_0 -> m9_2  [color=green, key=1, label=object, style=dashed];
m9_65 -> m9_68  [color=green, key=1, label="string[]", style=dashed];
m9_65 -> m9_70  [color=green, key=1, label="string[]", style=dashed];
m9_65 -> m9_72  [color=green, key=1, label=object, style=dashed];
m9_65 -> m9_75  [color=green, key=1, label="string[]", style=dashed];
m9_65 -> m9_78  [color=green, key=1, label=object, style=dashed];
m9_65 -> m9_79  [color=green, key=1, label=object, style=dashed];
m9_65 -> m9_81  [color=green, key=1, label="string[]", style=dashed];
m9_65 -> m9_82  [color=green, key=1, label="string[]", style=dashed];
m9_65 -> m9_85  [color=green, key=1, label="string[]", style=dashed];
m9_69 -> m9_71  [color=green, key=1, label=helpInfo, style=dashed];
m9_69 -> m9_72  [color=green, key=1, label=helpInfo, style=dashed];
m9_69 -> m9_75  [color=green, key=1, label=helpInfo, style=dashed];
m9_69 -> m9_85  [color=green, key=1, label=helpInfo, style=dashed];
m9_77 -> m9_79  [color=green, key=1, label=verbOption, style=dashed];
m9_83 -> m9_86  [color=green, key=1, label=verbResult, style=dashed];
m9_80 -> m9_82  [color=green, key=1, label=verbArgs, style=dashed];
m9_55 -> m9_57  [color=green, key=1, label=string, style=dashed];
m9_55 -> m9_58  [color=green, key=1, label=object, style=dashed];
m9_55 -> m9_61  [color=green, key=1, label=object, style=dashed];
m9_59 -> m9_61  [color=green, key=1, label=pair, style=dashed];
m9_60 -> m9_62  [color=green, key=1, label="out bool", style=dashed];
m9_42 -> m9_44  [color=green, key=1, label=method, style=dashed];
m9_47 -> m9_51  [color=green, key=1, label="System.Reflection.MethodInfo", style=dashed];
m9_14 -> m9_16  [color=green, key=1, label="System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>", style=dashed];
m9_14 -> m9_18  [color=green, key=1, label=object, style=dashed];
m9_15 -> m9_22  [color=green, key=1, label=map, style=dashed];
m9_16 -> m9_18  [color=green, key=1, label=verb, style=dashed];
m9_16 -> m9_19  [color=green, key=1, label=verb, style=dashed];
m9_92 -> m9_95  [color=green, key=1, label="CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>", style=dashed];
m9_92 -> m9_96  [color=green, key=1, label="string[]", style=dashed];
m9_92 -> m9_98  [color=green, key=1, label=object, style=dashed];
m9_110 -> m9_1  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m9_110 -> m9_2  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m9_110 -> m9_6  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m9_110 -> m9_7  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m9_112 -> m9_68  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m9_112 -> m9_72  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m9_112 -> m9_75  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m9_112 -> m9_85  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m9_112 -> m9_71  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m9_112 -> m9_96  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m9_112 -> m9_98  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m9_112 -> m9_107  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m10_8 -> m10_5  [color=darkseagreen4, key=1, label="CommandLine.Tests.Mocks.ComplexOptions", style=dashed];
m11_2 -> m11_4  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m11_3 -> m11_7  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m11_3 -> m11_8  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m11_3 -> m11_9  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m11_3 -> m11_10  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m11_3 -> m11_11  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m11_5 -> m11_7  [color=darkseagreen4, key=1, label=y, style=dashed];
m11_5 -> m11_8  [color=darkseagreen4, key=1, label=y, style=dashed];
m11_52 -> m11_55  [color=darkseagreen4, key=1, label=info, style=dashed];
m11_53 -> m11_56  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_56 -> m11_56  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_16 -> m12_22  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m12_16 -> m12_24  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m12_16 -> m12_26  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m12_16 -> m12_27  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m12_16 -> m12_28  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m12_16 -> m12_29  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m12_19 -> m12_21  [color=darkseagreen4, key=1, label=baseOA, style=dashed];
m12_19 -> m12_22  [color=darkseagreen4, key=1, label=baseOA, style=dashed];
m12_19 -> m12_23  [color=darkseagreen4, key=1, label=baseOA, style=dashed];
m12_19 -> m12_25  [color=darkseagreen4, key=1, label=baseOA, style=dashed];
m12_19 -> m12_26  [color=darkseagreen4, key=1, label=baseOA, style=dashed];
m12_0 -> m12_8  [color=darkseagreen4, key=1, label=object, style=dashed];
m12_0 -> m12_9  [color=darkseagreen4, key=1, label=object, style=dashed];
m12_1 -> m12_8  [color=darkseagreen4, key=1, label=builder, style=dashed];
m12_1 -> m12_9  [color=darkseagreen4, key=1, label=builder, style=dashed];
m12_1 -> m12_10  [color=darkseagreen4, key=1, label=builder, style=dashed];
m12_4 -> m12_8  [color=darkseagreen4, key=1, label=field, style=dashed];
m12_4 -> m12_9  [color=darkseagreen4, key=1, label=field, style=dashed];
m12_7 -> m12_9  [color=darkseagreen4, key=1, label=attr, style=dashed];
m12_17 -> m12_38  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m12_17 -> m12_39  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m12_17 -> m12_40  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m12_37 -> m12_39  [color=darkseagreen4, key=1, label=value, style=dashed];
m13_1 -> m13_7  [color=darkseagreen4, key=1, label=valueOne, style=dashed];
m13_2 -> m13_8  [color=darkseagreen4, key=1, label=valueTwo, style=dashed];
m13_2 -> m13_11  [color=darkseagreen4, key=1, label=valueTwo, style=dashed];
m13_3 -> m13_12  [color=darkseagreen4, key=1, label=valueThree, style=dashed];
m13_3 -> m13_15  [color=darkseagreen4, key=1, label=valueThree, style=dashed];
m13_5 -> m13_7  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_5 -> m13_8  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_5 -> m13_9  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_5 -> m13_10  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_5 -> m13_11  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_5 -> m13_12  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_5 -> m13_13  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_5 -> m13_14  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_5 -> m13_15  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_5 -> m13_16  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_5 -> m13_17  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_27 -> m13_29  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_27 -> m13_30  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_27 -> m13_31  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_27 -> m13_32  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_27 -> m13_33  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_27 -> m13_34  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_27 -> m13_35  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_27 -> m13_36  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_27 -> m13_37  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_27 -> m13_38  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_27 -> m13_39  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_27 -> m13_40  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_27 -> m13_41  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_27 -> m13_42  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_27 -> m13_43  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_27 -> m13_44  [color=darkseagreen4, key=1, label=e, style=dashed];
m13_27 -> m13_45  [color=darkseagreen4, key=1, label=e, style=dashed];
m14_1 -> m14_5  [color=darkseagreen4, key=1, label=hi, style=dashed];
m14_4 -> m14_6  [color=darkseagreen4, key=1, label=sw, style=dashed];
m14_15 -> m14_19  [color=darkseagreen4, key=1, label=hi, style=dashed];
m14_18 -> m14_20  [color=darkseagreen4, key=1, label=sw, style=dashed];
m15_35 -> m15_37  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m15_18 -> m15_21  [color=darkseagreen4, key=1, label=writer, style=dashed];
m15_1 -> m15_3  [color=darkseagreen4, key=1, label=help, style=dashed];
m15_1 -> m15_4  [color=darkseagreen4, key=1, label=help, style=dashed];
m15_1 -> m15_5  [color=darkseagreen4, key=1, label=help, style=dashed];
m15_1 -> m15_6  [color=darkseagreen4, key=1, label=help, style=dashed];
m15_1 -> m15_7  [color=darkseagreen4, key=1, label=help, style=dashed];
m15_1 -> m15_8  [color=darkseagreen4, key=1, label=help, style=dashed];
m15_1 -> m15_9  [color=darkseagreen4, key=1, label=help, style=dashed];
m15_50 -> m15_8  [color=darkseagreen4, key=1, label="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions", style=dashed];
m15_51 -> m15_20  [color=darkseagreen4, key=1, label="CommandLine.Tests.HelpOptionAttributeFixture", style=dashed];
m15_51 -> m15_34  [color=darkseagreen4, key=1, label="CommandLine.Tests.HelpOptionAttributeFixture", style=dashed];
m15_51 -> m15_46  [color=darkseagreen4, key=1, label="CommandLine.Tests.HelpOptionAttributeFixture", style=dashed];
m16_195 -> m16_197  [color=green, key=1, label="CommandLine.Text.FormatOptionHelpTextEventArgs", style=dashed];
m16_195 -> m16_202  [color=darkseagreen4, key=1, label="CommandLine.Text.FormatOptionHelpTextEventArgs", style=dashed];
m16_146 -> m16_148  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_146 -> m16_149  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_62 -> m16_64  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_62 -> m16_65  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_62 -> m16_66  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_62 -> m16_67  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_62 -> m16_68  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_87 -> m16_89  [color=darkseagreen4, key=1, label=local, style=dashed];
m16_87 -> m16_90  [color=darkseagreen4, key=1, label=local, style=dashed];
m16_87 -> m16_91  [color=darkseagreen4, key=1, label=local, style=dashed];
m16_94 -> m16_96  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_94 -> m16_97  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_94 -> m16_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_94 -> m16_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_50 -> m16_52  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_50 -> m16_53  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_50 -> m16_54  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_50 -> m16_55  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_72 -> m16_74  [color=darkseagreen4, key=1, label=local, style=dashed];
m16_72 -> m16_75  [color=darkseagreen4, key=1, label=local, style=dashed];
m16_72 -> m16_76  [color=darkseagreen4, key=1, label=local, style=dashed];
m16_78 -> m16_80  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_78 -> m16_81  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_78 -> m16_82  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_78 -> m16_83  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_78 -> m16_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_187 -> m16_190  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_187 -> m16_189  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_1 -> m16_6  [color=green, key=1, label=help, style=dashed];
m16_1 -> m16_7  [color=green, key=1, label=help, style=dashed];
m16_1 -> m16_8  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_1 -> m16_9  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_1 -> m16_10  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_1 -> m16_11  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_1 -> m16_12  [color=darkseagreen4, key=1, label=help, style=dashed];
m16_4 -> m16_7  [color=green, key=1, label=errors, style=dashed];
m16_29 -> m16_31  [color=darkseagreen4, key=1, label=local, style=dashed];
m16_29 -> m16_32  [color=darkseagreen4, key=1, label=local, style=dashed];
m16_29 -> m16_33  [color=darkseagreen4, key=1, label=local, style=dashed];
m16_29 -> m16_34  [color=darkseagreen4, key=1, label=local, style=dashed];
m16_36 -> m16_38  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_106 -> m16_109  [color=darkseagreen4, key=1, label=local, style=dashed];
m16_106 -> m16_110  [color=darkseagreen4, key=1, label=local, style=dashed];
m16_106 -> m16_111  [color=darkseagreen4, key=1, label=local, style=dashed];
m16_105 -> m16_116  [color=darkseagreen4, key=1, label=year, style=dashed];
m16_114 -> m16_116  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_114 -> m16_117  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_114 -> m16_118  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_114 -> m16_119  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_206 -> m16_11  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", style=dashed];
m16_207 -> m16_26  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m16_207 -> m16_48  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m16_207 -> m16_60  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m18_32 -> m18_35  [color=darkseagreen4, key=1, label=options, style=dashed];
m18_32 -> m18_36  [color=darkseagreen4, key=1, label=options, style=dashed];
m18_25 -> m18_28  [color=darkseagreen4, key=1, label=options, style=dashed];
m18_25 -> m18_29  [color=darkseagreen4, key=1, label=options, style=dashed];
m18_51 -> m18_54  [color=darkseagreen4, key=1, label=options, style=dashed];
m18_51 -> m18_55  [color=darkseagreen4, key=1, label=options, style=dashed];
m18_51 -> m18_56  [color=darkseagreen4, key=1, label=options, style=dashed];
m18_8 -> m18_11  [color=darkseagreen4, key=1, label=options, style=dashed];
m18_58 -> m18_10  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m18_58 -> m18_21  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m18_58 -> m18_27  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m18_58 -> m18_34  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m18_58 -> m18_42  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m18_58 -> m18_47  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m18_58 -> m18_53  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m20_30 -> m20_33  [color=darkseagreen4, key=1, label=options, style=dashed];
m20_34 -> m20_37  [color=darkseagreen4, key=1, label=options, style=dashed];
m20_50 -> m20_53  [color=darkseagreen4, key=1, label=options, style=dashed];
m20_54 -> m20_57  [color=darkseagreen4, key=1, label=options, style=dashed];
m20_3 -> m20_6  [color=darkseagreen4, key=1, label=options, style=dashed];
m20_7 -> m20_10  [color=darkseagreen4, key=1, label=options, style=dashed];
m20_70 -> m20_73  [color=darkseagreen4, key=1, label=options, style=dashed];
m20_74 -> m20_77  [color=darkseagreen4, key=1, label=options, style=dashed];
m20_74 -> m20_78  [color=darkseagreen4, key=1, label=options, style=dashed];
m20_74 -> m20_79  [color=darkseagreen4, key=1, label=options, style=dashed];
m20_74 -> m20_80  [color=darkseagreen4, key=1, label=options, style=dashed];
m20_82 -> m20_5  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m20_82 -> m20_9  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m20_82 -> m20_21  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m20_82 -> m20_27  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m20_82 -> m20_32  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m20_82 -> m20_36  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m20_82 -> m20_42  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m20_82 -> m20_47  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m20_82 -> m20_52  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m20_82 -> m20_56  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m20_82 -> m20_62  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m20_82 -> m20_67  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m20_82 -> m20_72  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m20_82 -> m20_76  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m22_1 -> m22_4  [color=darkseagreen4, key=1, label=options, style=dashed];
m22_5 -> m22_8  [color=darkseagreen4, key=1, label=options, style=dashed];
m22_48 -> m22_51  [color=darkseagreen4, key=1, label=options, style=dashed];
m22_52 -> m22_55  [color=darkseagreen4, key=1, label=options, style=dashed];
m22_28 -> m22_31  [color=darkseagreen4, key=1, label=options, style=dashed];
m22_32 -> m22_35  [color=darkseagreen4, key=1, label=options, style=dashed];
m22_68 -> m22_71  [color=darkseagreen4, key=1, label=options, style=dashed];
m22_72 -> m22_75  [color=darkseagreen4, key=1, label=options, style=dashed];
m22_72 -> m22_76  [color=darkseagreen4, key=1, label=options, style=dashed];
m22_72 -> m22_77  [color=darkseagreen4, key=1, label=options, style=dashed];
m22_72 -> m22_78  [color=darkseagreen4, key=1, label=options, style=dashed];
m22_80 -> m22_3  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m22_80 -> m22_7  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m22_80 -> m22_19  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m22_80 -> m22_25  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m22_80 -> m22_30  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m22_80 -> m22_34  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m22_80 -> m22_40  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m22_80 -> m22_45  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m22_80 -> m22_50  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m22_80 -> m22_54  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m22_80 -> m22_60  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m22_80 -> m22_65  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m22_80 -> m22_70  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m22_80 -> m22_74  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m23_9 -> m23_13  [color=darkseagreen4, key=1, label=oa, style=dashed];
m23_10 -> m23_12  [color=darkseagreen4, key=1, label=oi, style=dashed];
m23_53 -> m23_62  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m23_53 -> m23_63  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m23_53 -> m23_68  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>", style=dashed];
m23_53 -> m23_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>", style=dashed];
m23_53 -> m23_69  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m23_53 -> m23_70  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m23_53 -> m23_60  [color=darkseagreen4, key=1, label=option3, style=dashed];
m23_56 -> m23_62  [color=green, key=1, label=attribute1, style=dashed];
m23_55 -> m23_62  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m23_55 -> m23_63  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m23_55 -> m23_69  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m23_55 -> m23_70  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m23_57 -> m23_60  [color=green, key=1, label=attribute2, style=dashed];
m23_57 -> m23_63  [color=green, key=1, label=attribute2, style=dashed];
m23_57 -> m23_68  [color=green, key=1, label=attribute2, style=dashed];
m23_59 -> m23_62  [color=darkseagreen4, key=1, label=option1, style=dashed];
m23_58 -> m23_61  [color=green, key=1, label=attribute3, style=dashed];
m23_60 -> m23_63  [color=darkseagreen4, key=1, label=option2, style=dashed];
m23_63 -> m23_12  [color=green, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m23_63 -> m23_13  [color=green, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m23_61 -> m23_68  [color=darkseagreen4, key=1, label=option3, style=dashed];
m23_45 -> m23_57  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>", style=dashed];
m23_45 -> m23_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>", style=dashed];
m23_45 -> m23_61  [color=darkseagreen4, key=1, label="ref CommandLine.OptionMap", style=dashed];
m23_45 -> m23_62  [color=darkseagreen4, key=1, label="ref CommandLine.OptionMap", style=dashed];
m23_47 -> m23_61  [color=darkseagreen4, key=1, label="ref CommandLine.OptionMap", style=dashed];
m23_47 -> m23_62  [color=darkseagreen4, key=1, label="ref CommandLine.OptionMap", style=dashed];
m24_4 -> m24_1  [color=darkseagreen4, key=1, label="CommandLine.Tests.Mocks.OptionsBase", style=dashed];
m34_1 -> m34_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_21 -> m34_24  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m34_21 -> m34_26  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m34_21 -> m34_27  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m34_21 -> m34_29  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m34_21 -> m34_30  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m34_21 -> m34_31  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m34_21 -> m34_32  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m34_21 -> m34_33  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m34_21 -> m34_36  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m34_21 -> m34_41  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m34_21 -> m34_42  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m34_34 -> m34_37  [color=darkseagreen4, key=1, label=builder, style=dashed];
m34_34 -> m34_38  [color=darkseagreen4, key=1, label=builder, style=dashed];
m34_34 -> m34_39  [color=darkseagreen4, key=1, label=builder, style=dashed];
m34_8 -> m34_11  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m34_9 -> m34_11  [color=darkseagreen4, key=1, label=options, style=dashed];
m34_9 -> m34_13  [color=darkseagreen4, key=1, label=options, style=dashed];
m34_60 -> m34_1  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m34_60 -> m34_5  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m35_33 -> m35_35  [color=darkseagreen4, key=1, label=pair, style=dashed];
m35_17 -> m35_19  [color=darkseagreen4, key=1, label=list, style=dashed];
m35_17 -> m35_20  [color=darkseagreen4, key=1, label=list, style=dashed];
m35_17 -> m35_21  [color=darkseagreen4, key=1, label=list, style=dashed];
m35_22 -> m35_24  [color=darkseagreen4, key=1, label=anotherList, style=dashed];
m35_22 -> m35_25  [color=darkseagreen4, key=1, label=anotherList, style=dashed];
m35_31 -> m35_49  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>", style=dashed];
m35_40 -> m35_42  [color=darkseagreen4, key=1, label=list, style=dashed];
m35_40 -> m35_43  [color=darkseagreen4, key=1, label=list, style=dashed];
m35_40 -> m35_44  [color=darkseagreen4, key=1, label=list, style=dashed];
m35_40 -> m35_45  [color=darkseagreen4, key=1, label=list, style=dashed];
m36_8 -> m36_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_15 -> m36_1  [color=darkseagreen4, key=1, label="CommandLine.Tests.Mocks.RPEOptions", style=dashed];
m36_15 -> m36_2  [color=darkseagreen4, key=1, label="CommandLine.Tests.Mocks.RPEOptions", style=dashed];
m36_16 -> m36_8  [color=darkseagreen4, key=1, label="CommandLine.Tests.Mocks.RPEOptionsForAutoBuild", style=dashed];
m36_16 -> m36_12  [color=darkseagreen4, key=1, label="CommandLine.Tests.Mocks.RPEOptionsForAutoBuild", style=dashed];
m38_4 -> m38_1  [color=darkseagreen4, key=1, label="CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid", style=dashed];
m49_1 -> m49_4  [color=darkseagreen4, key=1, label=options, style=dashed];
m49_1 -> m49_5  [color=darkseagreen4, key=1, label=options, style=dashed];
m49_1 -> m49_6  [color=darkseagreen4, key=1, label=options, style=dashed];
m49_1 -> m49_7  [color=darkseagreen4, key=1, label=options, style=dashed];
m51_2 -> m51_6  [color=darkseagreen4, key=1, label=appOptions, style=dashed];
m51_7 -> m51_10  [color=darkseagreen4, key=1, label=plugInXOptions, style=dashed];
m51_7 -> m51_11  [color=darkseagreen4, key=1, label=plugInXOptions, style=dashed];
m52_28 -> m52_33  [color=darkseagreen4, key=1, label=options, style=dashed];
m52_29 -> m52_31  [color=darkseagreen4, key=1, label=values, style=dashed];
m52_29 -> m52_32  [color=darkseagreen4, key=1, label=values, style=dashed];
m52_18 -> m52_20  [color=darkseagreen4, key=1, label=values, style=dashed];
m52_37 -> m52_33  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeFixture", style=dashed];
m53_21 -> m53_24  [color=darkseagreen4, key=1, label=options, style=dashed];
m53_21 -> m53_25  [color=darkseagreen4, key=1, label=options, style=dashed];
m53_21 -> m53_26  [color=darkseagreen4, key=1, label=options, style=dashed];
m53_21 -> m53_27  [color=darkseagreen4, key=1, label=options, style=dashed];
m53_21 -> m53_28  [color=darkseagreen4, key=1, label=options, style=dashed];
m53_21 -> m53_29  [color=darkseagreen4, key=1, label=options, style=dashed];
m53_3 -> m53_6  [color=darkseagreen4, key=1, label=options, style=dashed];
m53_3 -> m53_7  [color=darkseagreen4, key=1, label=options, style=dashed];
m53_3 -> m53_8  [color=darkseagreen4, key=1, label=options, style=dashed];
m53_3 -> m53_9  [color=darkseagreen4, key=1, label=options, style=dashed];
m53_3 -> m53_10  [color=darkseagreen4, key=1, label=options, style=dashed];
m53_3 -> m53_11  [color=darkseagreen4, key=1, label=options, style=dashed];
m53_41 -> m53_44  [color=darkseagreen4, key=1, label=options, style=dashed];
m53_41 -> m53_45  [color=darkseagreen4, key=1, label=options, style=dashed];
m53_54 -> m53_5  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m53_54 -> m53_23  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m53_54 -> m53_37  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m53_54 -> m53_43  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m53_54 -> m53_52  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
}
