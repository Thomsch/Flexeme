digraph  {
m2_59 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="ResultExtensions.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m2_67 [cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="ResultExtensions.cs", label="return value;", span="165-165"];
m2_11 [cluster="CSharpx.Nothing<T>.Nothing()", file="ResultExtensions.cs", label="Exit CSharpx.Nothing<T>.Nothing()", span="48-48"];
m2_66 [cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="ResultExtensions.cs", label="maybe.MatchJust(out value)", span="163-163"];
m2_48 [cluster="lambda expression", file="ResultExtensions.cs", label="Exit lambda expression", span="45-45"];
m2_12 [cluster="CSharpx.Just<T>.Just(T)", file="ResultExtensions.cs", label="Entry CSharpx.Just<T>.Just(T)", span="58-58"];
m2_60 [cluster="lambda expression", file="ResultExtensions.cs", label="Entry lambda expression", span="157-157"];
m2_13 [cluster="ReadText.Demo.Program.MakeError()", color=green, community=0, file="ResultExtensions.cs", label="Entry ReadText.Demo.Program.MakeError()", prediction=0, span="74-74"];
m2_14 [cluster="System.Tuple<T1, T2>.Equals(object)", file="ResultExtensions.cs", label="Entry System.Tuple<T1, T2>.Equals(object)", span="0-0"];
m2_34 [cluster="System.Text.StringBuilder.ToString()", file="ResultExtensions.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m2_44 [cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="ResultExtensions.cs", label="T value", span="136-136"];
m2_70 [cluster="System.ArgumentException.ArgumentException(string)", file="ResultExtensions.cs", label=reader, span=""];
m2_56 [cluster="ReadText.Demo.Program.ReadLines(string, bool, int)", file="ResultExtensions.cs", label="Exit ReadText.Demo.Program.ReadLines(string, bool, int)", span="54-54"];
m2_57 [cluster="lambda expression", file="ResultExtensions.cs", label="Entry lambda expression", span="155-157"];
m2_49 [cluster="lambda expression", file="ResultExtensions.cs", label="Entry lambda expression", span="46-46"];
m2_50 [cluster="lambda expression", file="ResultExtensions.cs", label="MakeError()", span="46-46"];
m2_51 [cluster="lambda expression", file="ResultExtensions.cs", label="Exit lambda expression", span="46-46"];
m2_52 [cluster="ReadText.Demo.Program.ReadLines(string, bool, int)", file="ResultExtensions.cs", label="var lines = File.ReadAllLines(fileName)", span="56-56"];
m2_39 [cluster="lambda expression", file="ResultExtensions.cs", label="Exit lambda expression", span="35-39"];
m2_40 [cluster="System.Console.WriteLine(string)", color=green, community=0, file="ResultExtensions.cs", label="Entry System.Console.WriteLine(string)", prediction=1, span="0-0"];
m2_41 [cluster="lambda expression", color=green, community=0, file="ResultExtensions.cs", label="Entry lambda expression", prediction=2, span="44-44"];
m2_42 [cluster="lambda expression", file="ResultExtensions.cs", label="Tuple.Create(header(opts), reader(opts))", span="44-44"];
m2_64 [cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", file="ResultExtensions.cs", label="return Encoding.UTF8.GetString(bytes, bytes.Length - count, count);", span="71-71"];
m2_65 [cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", file="ResultExtensions.cs", label="Exit ReadText.Demo.Program.ReadBytes(string, bool, int)", span="64-64"];
m2_68 [cluster="ReadText.Demo.Program.MakeError()", file="ResultExtensions.cs", label="return Tuple.Create(''\0'', ''\0'');", span="76-76"];
m2_69 [cluster="ReadText.Demo.Program.MakeError()", file="ResultExtensions.cs", label="Exit ReadText.Demo.Program.MakeError()", span="74-74"];
m2_18 [cluster="lambda expression", file="ResultExtensions.cs", label="Exit lambda expression", span="14-20"];
m2_19 [cluster="object.GetType()", color=green, community=0, file="ResultExtensions.cs", label="Entry object.GetType()", prediction=3, span="0-0"];
m2_20 [cluster="ReadText.Demo.Program.ReadLines(string, bool, int)", file="ResultExtensions.cs", label="Entry ReadText.Demo.Program.ReadLines(string, bool, int)", span="54-54"];
m2_45 [cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="ResultExtensions.cs", label="maybe.MatchJust(out value)", span="137-137"];
m2_16 [cluster="CSharpx.Maybe.Nothing<T>()", color=green, community=0, file="ResultExtensions.cs", label="return new Nothing<T>();", prediction=4, span="77-77"];
m2_47 [cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="ResultExtensions.cs", label="Exit CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", span="134-134"];
m2_23 [cluster="CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", color=green, community=0, file="ResultExtensions.cs", label="return new Just<T1>(((Either1Of2<T1, T2>)either).Value);", prediction=5, span="93-93"];
m2_25 [cluster="CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", file="ResultExtensions.cs", label="Exit CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", span="89-89"];
m2_27 [cluster="CSharpx.MaybeExtensions.ToMaybe<T>(T)", color=green, community=0, file="ResultExtensions.cs", label="return Equals(value, default(T)) ? Maybe.Nothing<T>() : Maybe.Just(value);", prediction=6, span="107-107"];
m2_36 [cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", color=green, community=0, file="ResultExtensions.cs", label="T1 value1", prediction=7, span="120-120"];
m2_38 [cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="ResultExtensions.cs", label="Exit CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", span="118-118"];
m2_46 [cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="ResultExtensions.cs", label="action(value)", span="139-139"];
m2_15 [cluster="CSharpx.Maybe.Nothing<T>()", file="ResultExtensions.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="75-75"];
m2_22 [cluster="CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", color=green, community=0, file="ResultExtensions.cs", label="either.Tag == Either2Type.Either1Of2", prediction=6, span="91-91"];
m2_24 [cluster="CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", color=green, community=0, file="ResultExtensions.cs", label="return new Nothing<T1>();", prediction=9, span="95-95"];
m2_26 [cluster="CSharpx.MaybeExtensions.ToMaybe<T>(T)", file="ResultExtensions.cs", label="Entry CSharpx.MaybeExtensions.ToMaybe<T>(T)", span="105-105"];
m2_28 [cluster="CSharpx.MaybeExtensions.ToMaybe<T>(T)", file="ResultExtensions.cs", label="Exit CSharpx.MaybeExtensions.ToMaybe<T>(T)", span="105-105"];
m2_29 [cluster="object.Equals(object, object)", file="ResultExtensions.cs", label="Entry object.Equals(object, object)", span="0-0"];
m2_30 [cluster="CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", file="ResultExtensions.cs", label="Entry CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", span="110-110"];
m2_35 [cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="ResultExtensions.cs", label="Entry CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", span="118-118"];
m2_37 [cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", color=green, community=0, file="ResultExtensions.cs", label="return maybe.MatchJust(out value1)\r\n                ? Maybe.Just(func(value1))\r\n                : Maybe.Nothing<T2>();", prediction=10, span="121-123"];
m2_43 [cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="ResultExtensions.cs", label="Entry CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", span="134-134"];
m2_58 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="ResultExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m2_61 [cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", file="ResultExtensions.cs", label="var bytes = File.ReadAllBytes(fileName)", span="66-66"];
m2_62 [cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", file="ResultExtensions.cs", label=fromTop, span="67-67"];
m2_31 [cluster="System.Text.StringBuilder.StringBuilder(string)", color=green, community=0, file="ResultExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", prediction=11, span="0-0"];
m2_32 [cluster="System.Text.StringBuilder.Append(object)", color=green, community=0, file="ResultExtensions.cs", label="Entry System.Text.StringBuilder.Append(object)", prediction=12, span="0-0"];
m2_33 [cluster="System.Text.StringBuilder.Append(string)", file="ResultExtensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m2_0 [cluster="CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", file="ResultExtensions.cs", label="Entry CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", span="19-19"];
m2_1 [cluster="CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", color=green, community=0, file="ResultExtensions.cs", label="this.tag = tag", prediction=13, span="21-21"];
m2_4 [cluster="CSharpx.Maybe<T>.MatchNothing()", color=green, community=0, file="ResultExtensions.cs", label="return Tag == MaybeType.Nothing;", prediction=14, span="31-31"];
m2_5 [cluster="CSharpx.Maybe<T>.MatchNothing()", file="ResultExtensions.cs", label="Exit CSharpx.Maybe<T>.MatchNothing()", span="29-29"];
m2_3 [cluster="CSharpx.Maybe<T>.MatchNothing()", file="ResultExtensions.cs", label="Entry CSharpx.Maybe<T>.MatchNothing()", span="29-29"];
m2_6 [cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="ResultExtensions.cs", label="Entry CSharpx.Maybe<T>.MatchJust(out T)", span="34-34"];
m2_7 [cluster="CSharpx.Maybe<T>.MatchJust(out T)", color=green, community=0, file="ResultExtensions.cs", label="value = Tag == MaybeType.Just\r\n                ? ((Just<T>)this).Value\r\n                : default(T)", prediction=15, span="36-38"];
m2_8 [cluster="CSharpx.Maybe<T>.MatchJust(out T)", color=green, community=0, file="ResultExtensions.cs", label="return Tag == MaybeType.Just;", prediction=16, span="39-39"];
m2_9 [cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="ResultExtensions.cs", label="Exit CSharpx.Maybe<T>.MatchJust(out T)", span="34-34"];
m2_21 [cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", file="ResultExtensions.cs", label="Entry ReadText.Demo.Program.ReadBytes(string, bool, int)", span="64-64"];
m2_10 [cluster="CommandLine.Parser.ParseArguments<T1, T2>(System.Collections.Generic.IEnumerable<string>)", file="ResultExtensions.cs", label="Entry CommandLine.Parser.ParseArguments<T1, T2>(System.Collections.Generic.IEnumerable<string>)", span="25-25"];
m2_53 [cluster="CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", file="ResultExtensions.cs", label="Entry CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", span="149-149"];
m2_54 [cluster="CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", file="ResultExtensions.cs", label="return maybe.Bind(\r\n                sourceValue => valueSelector(sourceValue)\r\n                    .Map(\r\n                        resultValue => resultSelector(sourceValue, resultValue)));", span="154-157"];
m2_55 [cluster="CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", file="ResultExtensions.cs", label="Exit CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", span="149-149"];
m2_63 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="ResultExtensions.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m2_71 [file="ResultExtensions.cs", label=header, span=""];
m2_77 [file="ResultExtensions.cs", label="CSharpx.Maybe<T>", span=""];
m2_78 [file="ResultExtensions.cs", label="CSharpx.Just<T>", span=""];
m2_79 [file="ResultExtensions.cs", label="System.Func<TSource, CSharpx.Maybe<TValue>>", span=""];
m2_80 [file="ResultExtensions.cs", label="System.Func<TSource, TValue, TResult>", span=""];
m2_81 [file="ResultExtensions.cs", label=TSource, span=""];
m2_70 -> m2_42  [color=darkseagreen4, key=1, label=reader, style=dashed];
m2_70 -> m2_47  [color=darkseagreen4, key=1, label=reader, style=dashed];
m2_52 -> m2_54  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_52 -> m2_55  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_39 -> m2_41  [color=green, key=1, label="CSharpx.Maybe<T1>", style=dashed];
m2_41 -> m2_41  [color=green, key=1, label=value1, style=dashed];
m2_64 -> m2_66  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T>", style=dashed];
m2_64 -> m2_68  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m2_20 -> m2_53  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_20 -> m2_54  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_20 -> m2_55  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_25 -> m2_28  [color=darkseagreen4, key=1, label=fromTop, style=dashed];
m2_27 -> m2_27  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_22 -> m2_25  [color=darkseagreen4, key=1, label="ReadText.Demo.IOptions", style=dashed];
m2_22 -> m2_27  [color=darkseagreen4, key=1, label="ReadText.Demo.IOptions", style=dashed];
m2_28 -> m2_28  [color=darkseagreen4, key=1, label=builder, style=dashed];
}
