digraph  {
n0 [cluster="CommonMark.Parser.InlineMethods.NormalizeReference(CommonMark.Syntax.StringPart)", label="Entry CommonMark.Parser.InlineMethods.NormalizeReference(CommonMark.Syntax.StringPart)", span="16-16"];
n1 [cluster="CommonMark.Parser.InlineMethods.NormalizeReference(CommonMark.Syntax.StringPart)", label="s.Length == 0", span="18-18"];
n3 [cluster="CommonMark.Parser.InlineMethods.NormalizeReference(CommonMark.Syntax.StringPart)", label="return NormalizeWhitespace(s.Source, s.StartIndex, s.Length).ToUpperInvariant();", span="21-21"];
n2 [cluster="CommonMark.Parser.InlineMethods.NormalizeReference(CommonMark.Syntax.StringPart)", label="return string.Empty;", span="19-19"];
n4 [cluster="CommonMark.Parser.InlineMethods.NormalizeReference(CommonMark.Syntax.StringPart)", label="Exit CommonMark.Parser.InlineMethods.NormalizeReference(CommonMark.Syntax.StringPart)", span="16-16"];
n5 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="Entry CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", span="195-195"];
n6 [cluster="string.ToUpperInvariant()", label="Entry string.ToUpperInvariant()", span="0-0"];
n7 [cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", label="Entry CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", span="26-26"];
n8 [cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", label="refmap == null", span="28-28"];
n10 [cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", label="lab.Length > Reference.MaximumReferenceLabelLength", span="31-31"];
n12 [cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", label="string label = NormalizeReference(lab)", span="34-34"];
n14 [cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", label="refmap.TryGetValue(label, out r)", span="37-37"];
n9 [cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", label="return null;", span="29-29"];
n11 [cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", label="return Reference.InvalidReference;", span="32-32"];
n13 [cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", label="Reference r", span="36-36"];
n15 [cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", label="return r;", span="38-38"];
n16 [cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", label="return null;", span="40-40"];
n18 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
n17 [cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", label="Exit CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", span="26-26"];
n19 [cluster="CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)", label="Entry CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)", span="43-43"];
n20 [cluster="CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)", label="Reference r = new Reference()", span="45-45"];
n21 [cluster="CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)", label="r.Label = NormalizeReference(label)", span="46-46"];
n22 [cluster="CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)", label="r.Url = url", span="47-47"];
n23 [cluster="CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)", label="r.Title = title", span="48-48"];
n26 [cluster="CommonMark.Syntax.Reference.Reference()", label="Entry CommonMark.Syntax.Reference.Reference()", span="9-9"];
n24 [cluster="CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)", label="return r;", span="49-49"];
n25 [cluster="CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)", label="Exit CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)", span="43-43"];
n27 [cluster="CommonMark.Parser.InlineMethods.add_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.Reference)", label="Entry CommonMark.Parser.InlineMethods.add_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.Reference)", span="52-52"];
n28 [cluster="CommonMark.Parser.InlineMethods.add_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.Reference)", label="refmap.ContainsKey(refer.Label)", span="54-54"];
n30 [cluster="CommonMark.Parser.InlineMethods.add_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.Reference)", label="refmap.Add(refer.Label, refer)", span="57-57"];
n29 [cluster="CommonMark.Parser.InlineMethods.add_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.Reference)", label="return;", span="55-55"];
n32 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n31 [cluster="CommonMark.Parser.InlineMethods.add_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.Reference)", label="Exit CommonMark.Parser.InlineMethods.add_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.Reference)", span="52-52"];
n33 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
n34 [cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)", label="Entry CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)", span="61-61"];
n35 [cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)", label="Inline e = new Inline()", span="63-63"];
n36 [cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)", label="e.Tag = t", span="64-64"];
n37 [cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)", label="e.FirstChild = label", span="65-65"];
n38 [cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)", label="e.Linkable.Url = url", span="66-66"];
n39 [cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)", label="e.Linkable.Title = title", span="67-67"];
n42 [cluster="CommonMark.Syntax.Inline.Inline()", label="Entry CommonMark.Syntax.Inline.Inline()", span="6-6"];
n40 [cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)", label="return e;", span="68-68"];
n41 [cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)", label="Exit CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)", span="61-61"];
n43 [cluster="CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", label="Entry CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", span="71-71"];
n44 [cluster="CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", label="Inline e = new Inline()", span="73-73"];
n45 [cluster="CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", label="e.Tag = t", span="74-74"];
n46 [cluster="CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", label="e.FirstChild = contents", span="75-75"];
n47 [cluster="CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", label="return e;", span="76-76"];
n48 [cluster="CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", label="Exit CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", span="71-71"];
n49 [cluster="CommonMark.Parser.InlineMethods.make_literal(CommonMark.Syntax.InlineTag, string)", label="Entry CommonMark.Parser.InlineMethods.make_literal(CommonMark.Syntax.InlineTag, string)", span="80-80"];
n50 [cluster="CommonMark.Parser.InlineMethods.make_literal(CommonMark.Syntax.InlineTag, string)", label="Inline e = new Inline()", span="82-82"];
n51 [cluster="CommonMark.Parser.InlineMethods.make_literal(CommonMark.Syntax.InlineTag, string)", label="e.Tag = t", span="83-83"];
n52 [cluster="CommonMark.Parser.InlineMethods.make_literal(CommonMark.Syntax.InlineTag, string)", label="e.LiteralContent = s", span="84-84"];
n53 [cluster="CommonMark.Parser.InlineMethods.make_literal(CommonMark.Syntax.InlineTag, string)", label="return e;", span="85-85"];
n54 [cluster="CommonMark.Parser.InlineMethods.make_literal(CommonMark.Syntax.InlineTag, string)", label="Exit CommonMark.Parser.InlineMethods.make_literal(CommonMark.Syntax.InlineTag, string)", span="80-80"];
n55 [cluster="CommonMark.Parser.InlineMethods.make_simple(CommonMark.Syntax.InlineTag)", label="Entry CommonMark.Parser.InlineMethods.make_simple(CommonMark.Syntax.InlineTag)", span="89-89"];
n56 [cluster="CommonMark.Parser.InlineMethods.make_simple(CommonMark.Syntax.InlineTag)", label="Inline e = new Inline()", span="91-91"];
n57 [cluster="CommonMark.Parser.InlineMethods.make_simple(CommonMark.Syntax.InlineTag)", label="e.Tag = t", span="92-92"];
n58 [cluster="CommonMark.Parser.InlineMethods.make_simple(CommonMark.Syntax.InlineTag)", label="return e;", span="93-93"];
n59 [cluster="CommonMark.Parser.InlineMethods.make_simple(CommonMark.Syntax.InlineTag)", label="Exit CommonMark.Parser.InlineMethods.make_simple(CommonMark.Syntax.InlineTag)", span="89-89"];
n60 [cluster="CommonMark.Parser.InlineMethods.make_str(string)", label="Entry CommonMark.Parser.InlineMethods.make_str(string)", span="97-97"];
n61 [cluster="CommonMark.Parser.InlineMethods.make_str(string)", label="return make_literal(InlineTag.String, s);", span="97-97"];
n62 [cluster="CommonMark.Parser.InlineMethods.make_str(string)", label="Exit CommonMark.Parser.InlineMethods.make_str(string)", span="97-97"];
n63 [cluster="CommonMark.Parser.InlineMethods.make_code(string)", label="Entry CommonMark.Parser.InlineMethods.make_code(string)", span="98-98"];
n64 [cluster="CommonMark.Parser.InlineMethods.make_code(string)", label="return make_literal(InlineTag.Code, s);", span="98-98"];
n65 [cluster="CommonMark.Parser.InlineMethods.make_code(string)", label="Exit CommonMark.Parser.InlineMethods.make_code(string)", span="98-98"];
n66 [cluster="CommonMark.Parser.InlineMethods.make_raw_html(string)", label="Entry CommonMark.Parser.InlineMethods.make_raw_html(string)", span="99-99"];
n67 [cluster="CommonMark.Parser.InlineMethods.make_raw_html(string)", label="return make_literal(InlineTag.RawHtml, s);", span="99-99"];
n68 [cluster="CommonMark.Parser.InlineMethods.make_raw_html(string)", label="Exit CommonMark.Parser.InlineMethods.make_raw_html(string)", span="99-99"];
n69 [cluster="CommonMark.Parser.InlineMethods.make_linebreak()", label="Entry CommonMark.Parser.InlineMethods.make_linebreak()", span="100-100"];
n70 [cluster="CommonMark.Parser.InlineMethods.make_linebreak()", label="return make_simple(InlineTag.LineBreak);", span="100-100"];
n71 [cluster="CommonMark.Parser.InlineMethods.make_linebreak()", label="Exit CommonMark.Parser.InlineMethods.make_linebreak()", span="100-100"];
n72 [cluster="CommonMark.Parser.InlineMethods.make_softbreak()", label="Entry CommonMark.Parser.InlineMethods.make_softbreak()", span="101-101"];
n73 [cluster="CommonMark.Parser.InlineMethods.make_softbreak()", label="return make_simple(InlineTag.SoftBreak);", span="101-101"];
n74 [cluster="CommonMark.Parser.InlineMethods.make_softbreak()", label="Exit CommonMark.Parser.InlineMethods.make_softbreak()", span="101-101"];
n75 [cluster="CommonMark.Parser.InlineMethods.make_link(CommonMark.Syntax.Inline, string, string)", label="Entry CommonMark.Parser.InlineMethods.make_link(CommonMark.Syntax.Inline, string, string)", span="102-102"];
n76 [cluster="CommonMark.Parser.InlineMethods.make_link(CommonMark.Syntax.Inline, string, string)", label="return make_linkable(InlineTag.Link, label, url, title);", span="102-102"];
n77 [cluster="CommonMark.Parser.InlineMethods.make_link(CommonMark.Syntax.Inline, string, string)", label="Exit CommonMark.Parser.InlineMethods.make_link(CommonMark.Syntax.Inline, string, string)", span="102-102"];
n78 [cluster="CommonMark.Parser.InlineMethods.make_emph(CommonMark.Syntax.Inline)", label="Entry CommonMark.Parser.InlineMethods.make_emph(CommonMark.Syntax.Inline)", span="103-103"];
n79 [cluster="CommonMark.Parser.InlineMethods.make_emph(CommonMark.Syntax.Inline)", label="return make_inlines(InlineTag.Emphasis, contents);", span="103-103"];
n80 [cluster="CommonMark.Parser.InlineMethods.make_emph(CommonMark.Syntax.Inline)", label="Exit CommonMark.Parser.InlineMethods.make_emph(CommonMark.Syntax.Inline)", span="103-103"];
n81 [cluster="CommonMark.Parser.InlineMethods.make_strong(CommonMark.Syntax.Inline)", label="Entry CommonMark.Parser.InlineMethods.make_strong(CommonMark.Syntax.Inline)", span="104-104"];
n82 [cluster="CommonMark.Parser.InlineMethods.make_strong(CommonMark.Syntax.Inline)", label="return make_inlines(InlineTag.Strong, contents);", span="104-104"];
n83 [cluster="CommonMark.Parser.InlineMethods.make_strong(CommonMark.Syntax.Inline)", label="Exit CommonMark.Parser.InlineMethods.make_strong(CommonMark.Syntax.Inline)", span="104-104"];
n84 [cluster="CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)", label="Entry CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)", span="108-108"];
n85 [cluster="CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)", label="a == null", span="110-110"];
n86 [cluster="CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)", label="return b;", span="112-112"];
n87 [cluster="CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)", label="a.LastSibling.NextSibling = b", span="115-115"];
n88 [cluster="CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)", label="return a;", span="116-116"];
n89 [cluster="CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)", label="Exit CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)", span="108-108"];
n90 [cluster="CommonMark.Parser.InlineMethods.make_subject(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="Entry CommonMark.Parser.InlineMethods.make_subject(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="123-123"];
n91 [cluster="CommonMark.Parser.InlineMethods.make_subject(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="return new Subject(s.TrimEnd(), refmap);", span="125-125"];
n92 [cluster="CommonMark.Parser.InlineMethods.make_subject(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="Exit CommonMark.Parser.InlineMethods.make_subject(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="123-123"];
n93 [cluster="CommonMark.Parser.Subject.Subject(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="Entry CommonMark.Parser.Subject.Subject(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="8-8"];
n94 [cluster="string.TrimEnd(params char[])", label="Entry string.TrimEnd(params char[])", span="0-0"];
n95 [cluster="CommonMark.Parser.InlineMethods.peek_char(CommonMark.Parser.Subject)", label="Entry CommonMark.Parser.InlineMethods.peek_char(CommonMark.Parser.Subject)", span="133-133"];
n96 [cluster="CommonMark.Parser.InlineMethods.peek_char(CommonMark.Parser.Subject)", label="return subj.Buffer.Length <= subj.Position ? '\0' : subj.Buffer[subj.Position];", span="135-135"];
n97 [cluster="CommonMark.Parser.InlineMethods.peek_char(CommonMark.Parser.Subject)", label="Exit CommonMark.Parser.InlineMethods.peek_char(CommonMark.Parser.Subject)", span="133-133"];
n98 [cluster="CommonMark.Parser.InlineMethods.advance(CommonMark.Parser.Subject)", label="Entry CommonMark.Parser.InlineMethods.advance(CommonMark.Parser.Subject)", span="142-142"];
n99 [cluster="CommonMark.Parser.InlineMethods.advance(CommonMark.Parser.Subject)", label="subj.Position += 1", span="144-144"];
n100 [cluster="CommonMark.Parser.InlineMethods.advance(CommonMark.Parser.Subject)", label="Exit CommonMark.Parser.InlineMethods.advance(CommonMark.Parser.Subject)", span="142-142"];
n101 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", label="Entry CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", span="152-152"];
n102 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", label="var buf = subj.Buffer", span="155-155"];
n105 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", label="var pos = subj.Position", span="158-158"];
n106 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", label="var i = subj.Position", span="160-160"];
n110 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", label="cc == openticklength", span="168-168"];
n111 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", label="subj.Position = i", span="170-170"];
n118 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", label="cc == openticklength", span="182-182"];
n119 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", label="subj.Position = len", span="184-184"];
n103 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", label="var len = buf.Length", span="156-156"];
n108 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", label="buf[i] == '`'", span="162-162"];
n113 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", label="i = buf.IndexOf('`', i) - 1", span="174-174"];
n104 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", label="var cc = 0", span="157-157"];
n107 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", label="i < len", span="160-160"];
n120 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", label="return len;", span="185-185"];
n109 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", label="cc++", span="164-164"];
n112 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", label="return i;", span="171-171"];
n117 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", label="i++", span="160-160"];
n114 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", label="i == -2", span="175-175"];
n123 [cluster="string.IndexOf(char, int)", label="Entry string.IndexOf(char, int)", span="0-0"];
n115 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", label="return 0;", span="176-176"];
n116 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", label="cc = 0", span="178-178"];
n121 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", label="return 0;", span="188-188"];
n122 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", label="Exit CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", span="152-152"];
n124 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="char c", span="197-197"];
n125 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="count = startIndex + count - 1", span="200-200"];
n126 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="startIndex < count", span="203-203"];
n127 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="c = s[startIndex]", span="205-205"];
n129 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="startIndex++", span="207-207"];
n130 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="count >= startIndex", span="210-210"];
n131 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="c = s[count]", span="212-212"];
n134 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="count < startIndex", span="217-217"];
n137 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="int pos = startIndex", span="223-223"];
n138 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="int lastPos = startIndex", span="224-224"];
n139 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="-1 != (pos = s.IndexOfAny(WhiteSpaceCharacters, pos, count - pos))", span="225-225"];
n140 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="s[pos] == '\n'", span="227-227"];
n142 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="sb = new StringBuilder(s.Length)", span="230-230"];
n143 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="sb.Append(s, lastPos, pos - lastPos)", span="233-233"];
n145 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="c = s[++pos]", span="239-239"];
n149 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="c = s[++pos]", span="248-248"];
n152 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="sb = new StringBuilder(s.Length)", span="254-254"];
n153 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="sb.Append(s, lastPos, pos - lastPos)", span="256-256"];
n154 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="c = s[++pos]", span="261-261"];
n159 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="return s.Substring(startIndex, count - startIndex + 1);", span="272-272"];
n160 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="sb.Append(s, lastPos, count - lastPos + 1)", span="274-274"];
n133 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="count--", span="214-214"];
n147 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="pos < count", span="242-242"];
n156 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="pos < count", span="264-264"];
n128 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="c != ' ' && c != '\n'", span="206-206"];
n132 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="c != ' ' && c != '\n'", span="213-213"];
n135 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="return string.Empty;", span="218-218"];
n136 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="StringBuilder sb = null", span="222-222"];
n141 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="sb == null", span="229-229"];
n144 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="sb.Append(' ')", span="234-234"];
n151 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="sb == null", span="253-253"];
n158 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="sb == null", span="271-271"];
n161 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="return sb.ToString();", span="275-275"];
n163 [cluster="string.IndexOfAny(char[], int, int)", label="Entry string.IndexOfAny(char[], int, int)", span="0-0"];
n164 [cluster="System.Text.StringBuilder.StringBuilder(int)", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
n165 [cluster="System.Text.StringBuilder.Append(string, int, int)", label="Entry System.Text.StringBuilder.Append(string, int, int)", span="0-0"];
n166 [cluster="System.Text.StringBuilder.Append(char)", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
n146 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="c != ' ' && c != '\n'", span="240-240"];
n148 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="lastPos = pos", span="244-244"];
n150 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="c == ' ' || c == '\n'", span="250-250"];
n155 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="c != ' ' && c != '\n'", span="262-262"];
n157 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="lastPos = pos", span="266-266"];
n162 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", label="Exit CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", span="195-195"];
n167 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
n168 [cluster="System.Text.StringBuilder.ToString()", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
n169 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", label="Entry CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", span="280-280"];
n170 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", label="int ticklength = 0", span="282-282"];
n171 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", label="var bl = subj.Buffer.Length", span="283-283"];
n172 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", label="subj.Position < bl && (subj.Buffer[subj.Position] == '`')", span="284-284"];
n174 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", label="subj.Position++", span="287-287"];
n175 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", label="int startpos = subj.Position", span="290-290"];
n176 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", label="int endpos = scan_to_closing_backticks(subj, ticklength)", span="291-291"];
n178 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", label="subj.Position = startpos", span="295-295"];
n180 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", label="return make_code(NormalizeWhitespace(subj.Buffer, startpos, endpos - startpos - ticklength));", span="300-300"];
n173 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", label="ticklength++", span="286-286"];
n179 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", label="return make_str(new string('`', ticklength));", span="296-296"];
n177 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", label="endpos == 0", span="292-292"];
n181 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", label="Exit CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", span="280-280"];
n182 [cluster="string.String(char, int)", label="Entry string.String(char, int)", span="0-0"];
n183 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", label="Entry CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", span="307-307"];
n184 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", label="int numdelims = 0", span="309-309"];
n186 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", label="int startpos = subj.Position", span="311-311"];
n187 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", label="int len = subj.Buffer.Length", span="312-312"];
n188 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", label="char_before = startpos == 0 ? '\n' : subj.Buffer[startpos - 1]", span="314-314"];
n189 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", label="startpos + numdelims < len && subj.Buffer[startpos + numdelims] == c", span="315-315"];
n191 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", label="subj.Position = (startpos += numdelims)", span="318-318"];
n196 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", label="char_after = len == startpos ? '\n' : subj.Buffer[startpos]", span="327-327"];
n199 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", label="c == '_'", span="332-332"];
n185 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", label="char char_before, char_after", span="310-310"];
n190 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", label="numdelims++", span="316-316"];
n192 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", label="numdelims == 0", span="320-320"];
n195 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", label="return numdelims;", span="324-324"];
n202 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", label="return numdelims;", span="338-338"];
n198 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", label="can_close = char_before != ' ' && char_before != '\n'", span="330-330"];
n200 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", label="can_open = can_open && !Utilities.IsAsciiLetterOrDigit(char_before)", span="334-334"];
n193 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", label="can_open = false", span="322-322"];
n194 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", label="can_close = false", span="323-323"];
n197 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", label="can_open = char_after != ' ' && char_after != '\n'", span="329-329"];
n201 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", label="can_close = can_close && !Utilities.IsAsciiLetterOrDigit(char_after)", span="335-335"];
n203 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", label="Exit CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", span="307-307"];
n204 [cluster="CommonMark.Utilities.IsAsciiLetterOrDigit(char)", label="Entry CommonMark.Utilities.IsAsciiLetterOrDigit(char)", span="37-37"];
n205 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="Entry CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", span="341-341"];
n206 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="int useDelims", span="347-347"];
n207 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="var openerDelims = opener.DelimeterCount", span="348-348"];
n208 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="closingDelimeterCount < 3 || openerDelims < 3", span="349-349"];
n209 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="useDelims = closingDelimeterCount <= openerDelims ? closingDelimeterCount : openerDelims", span="350-350"];
n210 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="useDelims = closingDelimeterCount % 2 == 0 ? 2 : 1", span="352-352"];
n212 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="var inl = opener.StartingInline", span="357-357"];
n215 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="closer != null", span="361-361"];
n217 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="inl.NextSibling = closer.StartingInline.NextSibling", span="364-364"];
n218 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="closer.StartingInline.NextSibling = null", span="365-365"];
n219 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="closer.StartingInline.LiteralContent = null", span="366-366"];
n222 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="InlineStack.RemoveStackEntry(opener, subj, closer)", span="374-374"];
n223 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="subj != null", span="376-376"];
n224 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="subj.LastInline = inl", span="377-377"];
n225 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="var inl = opener.StartingInline", span="382-382"];
n226 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="opener.DelimeterCount -= useDelims", span="383-383"];
n227 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="inl.LiteralContent = opener.StartingInline.LiteralContent.Substring(0, opener.DelimeterCount)", span="384-384"];
n230 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="subj != null", span="389-389"];
n231 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="subj.LastInline = emph", span="390-390"];
n211 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="openerDelims == useDelims", span="354-354"];
n213 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="inl.Tag = useDelims == 1 ? InlineTag.Emphasis : InlineTag.Strong", span="358-358"];
n228 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="var emph = useDelims == 1 ? make_emph(inl.NextSibling) : make_strong(inl.NextSibling)", span="386-386"];
n232 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="return useDelims;", span="393-393"];
n214 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="inl.LiteralContent = null", span="359-359"];
n216 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="inl.FirstChild = inl.NextSibling", span="363-363"];
n220 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="inl.FirstChild = inl.NextSibling", span="370-370"];
n221 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="inl.NextSibling = null", span="371-371"];
n234 [cluster="CommonMark.Parser.InlineStack.RemoveStackEntry(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack)", label="Entry CommonMark.Parser.InlineStack.RemoveStackEntry(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack)", span="118-118"];
n229 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="inl.NextSibling = emph", span="387-387"];
n233 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", label="Exit CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", span="341-341"];
n235 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label="Entry CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", span="396-396"];
n236 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label="bool can_open, can_close", span="398-398"];
n237 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label="var numdelims = scan_delims(subj, c, out can_open, out can_close)", span="399-399"];
n239 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label="var istack = InlineStack.FindMatchingOpener(subj.LastPendingInline, InlineStack.InlineStackPriority.Emphasis, c, out can_close)", span="404-404"];
n241 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label="var useDelims = MatchEmphasisStack(istack, subj, numdelims, null)", span="407-407"];
n243 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label="subj.Position = subj.Position - numdelims + useDelims", span="412-412"];
n245 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label="return HandleEmphasis(subj, c);", span="416-416"];
n247 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label="var inlText = make_str(subj.Buffer.Substring(subj.Position - numdelims, numdelims))", span="423-423"];
n251 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label="istack.Delimeter = c", span="429-429"];
n255 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label="InlineStack.AppendStackEntry(istack, subj)", span="435-435"];
n238 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label=can_close, span="401-401"];
n242 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label="useDelims < numdelims", span="410-410"];
n244 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label="numdelims < 10", span="415-415"];
n248 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label="can_open || can_close", span="425-425"];
n250 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label="istack.DelimeterCount = numdelims", span="428-428"];
n254 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label="istack.Flags = (can_open ? InlineStack.InlineStackFlags.Opener : 0)\r\n                             | (can_close ? InlineStack.InlineStackFlags.Closer : 0)", span="432-433"];
n240 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label="istack != null", span="405-405"];
n258 [cluster="CommonMark.Parser.InlineStack.FindMatchingOpener(CommonMark.Parser.InlineStack, CommonMark.Parser.InlineStack.InlineStackPriority, char, out bool)", label="Entry CommonMark.Parser.InlineStack.FindMatchingOpener(CommonMark.Parser.InlineStack, CommonMark.Parser.InlineStack.InlineStackPriority, char, out bool)", span="69-69"];
n246 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label="return null;", span="419-419"];
n252 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label="istack.StartingInline = inlText", span="430-430"];
n256 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label="return inlText;", span="438-438"];
n249 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label="var istack = new InlineStack()", span="427-427"];
n259 [cluster="CommonMark.Parser.InlineStack.InlineStack()", label="Entry CommonMark.Parser.InlineStack.InlineStack()", span="10-10"];
n253 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label="istack.Priority = InlineStack.InlineStackPriority.Emphasis", span="431-431"];
n260 [cluster="CommonMark.Parser.InlineStack.AppendStackEntry(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject)", label="Entry CommonMark.Parser.InlineStack.AppendStackEntry(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject)", span="98-98"];
n257 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", label="Exit CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", span="396-396"];
n261 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", label="Entry CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", span="441-441"];
n262 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", label="subj.Position++", span="444-444"];
n263 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", label="var inlText = make_str(isImage ? ''!['' : ''['')", span="446-446"];
n267 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", label="istack.StartPosition = subj.Position", span="451-451"];
n269 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", label="istack.Flags = InlineStack.InlineStackFlags.Opener | (isImage ? InlineStack.InlineStackFlags.ImageLink : InlineStack.InlineStackFlags.None)", span="453-453"];
n270 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", label="InlineStack.AppendStackEntry(istack, subj)", span="455-455"];
n264 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", label="var istack = new InlineStack()", span="448-448"];
n266 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", label="istack.StartingInline = inlText", span="450-450"];
n271 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", label="return inlText;", span="457-457"];
n265 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", label="istack.Delimeter = '['", span="449-449"];
n268 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", label="istack.Priority = InlineStack.InlineStackPriority.Links", span="452-452"];
n272 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", label="Exit CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", span="441-441"];
n273 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="Entry CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", span="460-460"];
n274 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="details != null", span="462-462"];
n275 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="var inl = opener.StartingInline", span="464-464"];
n276 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="inl.Tag = 0 != (opener.Flags & InlineStack.InlineStackFlags.ImageLink)\r\n                            ? InlineTag.Image : InlineTag.Link", span="465-466"];
n280 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="inl.Linkable.Url = details.Url", span="471-471"];
n281 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="inl.Linkable.Title = details.Title", span="472-472"];
n282 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="var temp = opener.Previous", span="475-475"];
n285 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="temp.Delimeter == '[' && temp.Flags == opener.Flags", span="479-479"];
n288 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="InlineStack.RemoveStackEntry(opener, subj, closer)", span="484-484"];
n289 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="subj != null", span="486-486"];
n290 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="subj.LastInline = inl", span="487-487"];
n291 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="InlineStack.RemoveStackEntry(opener, subj, opener)", span="493-493"];
n292 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="closer != null", span="495-495"];
n293 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="InlineStack.RemoveStackEntry(closer, subj, closer)", span="496-496"];
n295 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="subj.LastInline.LastSibling.NextSibling = inl", span="500-500"];
n296 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="subj.LastInline = inl", span="501-501"];
n277 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="inl.LiteralContent = null", span="467-467"];
n278 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="inl.FirstChild = inl.NextSibling", span="468-468"];
n279 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="inl.NextSibling = null", span="469-469"];
n283 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="temp != null && temp.Priority <= InlineStack.InlineStackPriority.Links", span="476-476"];
n284 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="var xtemp = temp.Previous", span="478-478"];
n286 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="InlineStack.RemoveStackEntry(temp, null, temp)", span="480-480"];
n287 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="temp = xtemp", span="481-481"];
n297 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="Exit CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", span="460-460"];
n294 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", label="var inl = make_str('']'')", span="499-499"];
n298 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", label="Entry CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", span="506-506"];
n299 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", label="subj.Position++", span="509-509"];
n301 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", label="var istack = InlineStack.FindMatchingOpener(subj.LastPendingInline, InlineStack.InlineStackPriority.Links, '[', out can_close)", span="512-512"];
n303 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", label="var endpos = subj.Position", span="515-515"];
n304 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", label="var details = ParseLinkDetails(subj)", span="518-518"];
n307 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", label="var label = new StringPart(subj.Buffer, startpos, endpos - startpos - 1)", span="524-524"];
n308 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", label="details = lookup_reference(subj.ReferenceMap, label)", span="526-526"];
n311 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", label="MatchSquareBracketStack(istack, subj, null, details)", span="532-532"];
n300 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", label="bool can_close", span="511-511"];
n302 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", label="istack != null", span="513-513"];
n306 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", label="var startpos = istack.StartPosition", span="523-523"];
n314 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", label=can_close, span="538-538"];
n313 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", label="var inlText = make_str('']'')", span="536-536"];
n305 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", label="details == null || details == Reference.SelfReference", span="521-521"];
n318 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="Entry CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", span="818-818"];
n309 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", label="details == Reference.InvalidReference", span="529-529"];
n319 [cluster="CommonMark.Syntax.StringPart.StringPart(string, int, int)", label="Entry CommonMark.Syntax.StringPart.StringPart(string, int, int)", span="11-11"];
n310 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", label="details = null", span="530-530"];
n312 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", label="return null;", span="533-533"];
n316 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", label="return inlText;", span="556-556"];
n315 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", label="throw new NotSupportedException(''It is not supported to have inline stack priority higher than Links.'');", span="544-544"];
n317 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", label="Exit CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", span="506-506"];
n320 [cluster="System.NotSupportedException.NotSupportedException(string)", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
n321 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", label="Entry CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", span="560-560"];
n322 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", label="advance(subj)", span="562-562"];
n323 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", label="subj.Position >= subj.Buffer.Length", span="564-564"];
n325 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", label="var nextChar = subj.Buffer[subj.Position]", span="567-567"];
n327 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", label="advance(subj)", span="573-573"];
n330 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", label="advance(subj)", span="578-578"];
n324 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", label="return make_str(''\\'');", span="565-565"];
n326 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", label="Utilities.IsEscapableSymbol(nextChar)", span="569-569"];
n328 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", label="return make_str(nextChar.ToString());", span="574-574"];
n329 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", label="nextChar == '\n'", span="576-576"];
n334 [cluster="CommonMark.Utilities.IsEscapableSymbol(char)", label="Entry CommonMark.Utilities.IsEscapableSymbol(char)", span="28-28"];
n332 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", label="return make_str(''\\'');", span="583-583"];
n331 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", label="return make_linebreak();", span="579-579"];
n333 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", label="Exit CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", span="560-560"];
n335 [cluster="char.ToString()", label="Entry char.ToString()", span="0-0"];
n336 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", label="Entry CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", span="589-589"];
n337 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", label="int match", span="591-591"];
n340 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", label="match = Scanner.scan_entity(subj.Buffer, subj.Position, subj.Buffer.Length - subj.Position, out namedEntity, out numericEntity)", span="594-594"];
n342 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", label="subj.Position += match", span="597-597"];
n352 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", label="return make_str(subj.Buffer.Substring(subj.Position - match, match));", span="613-613"];
n353 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", label="advance(subj)", span="617-617"];
n338 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", label="string namedEntity", span="592-592"];
n339 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", label="int numericEntity", span="593-593"];
n341 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", label="match > 0", span="595-595"];
n356 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", label="Entry CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", span="517-517"];
n343 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", label="namedEntity != null", span="599-599"];
n344 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", label="var decoded = EntityDecoder.DecodeEntity(namedEntity)", span="601-601"];
n347 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", label="numericEntity > 0", span="605-605"];
n348 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", label="var decoded = EntityDecoder.DecodeEntity(numericEntity)", span="607-607"];
n345 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", label="decoded != null", span="602-602"];
n357 [cluster="CommonMark.Parser.EntityDecoder.DecodeEntity(string)", label="Entry CommonMark.Parser.EntityDecoder.DecodeEntity(string)", span="13-13"];
n346 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", label="return make_str(decoded);", span="603-603"];
n349 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", label="decoded != null", span="608-608"];
n358 [cluster="CommonMark.Parser.EntityDecoder.DecodeEntity(int)", label="Entry CommonMark.Parser.EntityDecoder.DecodeEntity(int)", span="26-26"];
n350 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", label="return make_str(decoded);", span="609-609"];
n351 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", label="return make_str(''\uFFFD'');", span="610-610"];
n354 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", label="return make_str(''&'');", span="618-618"];
n355 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", label="Exit CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", span="589-589"];
n359 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", label="Entry CommonMark.Parser.InlineMethods.make_str_with_entities(string)", span="624-624"];
n360 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", label="Inline result = null", span="626-626"];
n364 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", label="Subject subj = make_subject(s, null)", span="630-630"];
n361 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", label="Inline inew", span="627-627"];
n373 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", label="result = append_inlines(result, inew)", span="648-648"];
n374 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", label="return result;", span="651-651"];
n362 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", label="int searchpos", span="628-628"];
n363 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", label="char c", span="629-629"];
n365 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", label="'\0' != (c = peek_char(subj))", span="632-632"];
n367 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", label="inew = handle_entity(subj)", span="636-636"];
n368 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", label="searchpos = subj.Buffer.IndexOf('&', subj.Position)", span="640-640"];
n370 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", label="searchpos = subj.Buffer.Length", span="642-642"];
n371 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", label="inew = make_str(subj.Buffer.Substring(subj.Position, searchpos - subj.Position))", span="644-644"];
n372 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", label="subj.Position = searchpos", span="645-645"];
n366 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", label="c == '&'", span="634-634"];
n369 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", label="searchpos == -1", span="641-641"];
n375 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", label="Exit CommonMark.Parser.InlineMethods.make_str_with_entities(string)", span="624-624"];
n376 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="Entry CommonMark.Parser.InlineMethods.Unescape(string)", span="658-658"];
n377 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="int searchPos = 0", span="661-661"];
n383 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="(searchPos = url.IndexOfAny(search, searchPos)) != -1", span="668-668"];
n384 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="c = url[searchPos]", span="670-670"];
n387 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="url.Length == searchPos", span="675-675"];
n388 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="c = url[searchPos]", span="678-678"];
n391 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="sb = new StringBuilder(url.Length)", span="681-681"];
n392 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="sb.Append(url, lastPos, searchPos - lastPos - 1)", span="682-682"];
n397 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="match = Scanner.scan_entity(url, searchPos, url.Length - searchPos, out namedEntity, out numericEntity)", span="690-690"];
n405 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="sb = new StringBuilder(url.Length)", span="704-704"];
n406 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="sb.Append(url, lastPos, searchPos - match - lastPos)", span="705-705"];
n413 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="sb = new StringBuilder(url.Length)", span="715-715"];
n414 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="sb.Append(url, lastPos, searchPos - match - lastPos)", span="716-716"];
n417 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="sb = new StringBuilder(url.Length)", span="721-721"];
n418 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="sb.Append(url, lastPos, searchPos - match - lastPos)", span="722-722"];
n422 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="return url;", span="733-733"];
n423 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="sb.Append(url, lastPos, url.Length - lastPos)", span="735-735"];
n378 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="int lastPos = 0", span="662-662"];
n379 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="int match", span="663-663"];
n380 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="char c", span="664-664"];
n381 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="char[] search = new[] { '\\', '&' }", span="665-665"];
n382 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="StringBuilder sb = null", span="666-666"];
n390 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="sb == null", span="681-681"];
n404 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="sb == null", span="704-704"];
n407 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="sb.Append(decoded)", span="706-706"];
n412 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="sb == null", span="715-715"];
n415 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="sb.Append(decoded)", span="717-717"];
n416 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="sb == null", span="721-721"];
n419 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="sb.Append('\uFFFD')", span="723-723"];
n421 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="sb == null", span="732-732"];
n424 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="return sb.ToString();", span="736-736"];
n426 [cluster="string.IndexOfAny(char[], int)", label="Entry string.IndexOfAny(char[], int)", span="0-0"];
n386 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="searchPos++", span="673-673"];
n399 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="searchPos++", span="693-693"];
n400 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="searchPos += match", span="697-697"];
n385 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="c == '\\'", span="671-671"];
n394 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="c == '&'", span="686-686"];
n393 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="lastPos = searchPos", span="683-683"];
n389 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="Utilities.IsEscapableSymbol(c)", span="679-679"];
n395 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="string namedEntity", span="688-688"];
n396 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="int numericEntity", span="689-689"];
n398 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="match == 0", span="691-691"];
n401 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="namedEntity != null", span="699-699"];
n402 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="var decoded = EntityDecoder.DecodeEntity(namedEntity)", span="701-701"];
n409 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="numericEntity > 0", span="710-710"];
n410 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="var decoded = EntityDecoder.DecodeEntity(numericEntity)", span="712-712"];
n408 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="lastPos = searchPos", span="707-707"];
n420 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="lastPos = searchPos", span="726-726"];
n403 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="decoded != null", span="702-702"];
n427 [cluster="System.Text.StringBuilder.Append(string)", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
n411 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="decoded != null", span="713-713"];
n425 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="Exit CommonMark.Parser.InlineMethods.Unescape(string)", span="658-658"];
n428 [cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)", label="Entry CommonMark.Parser.InlineMethods.CleanUrl(string)", span="743-743"];
n429 [cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)", label="url.Length == 0", span="745-745"];
n430 [cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)", label="return url;", span="746-746"];
n431 [cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)", label="url = url.Trim()", span="749-749"];
n432 [cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)", label="url[0] == '<' && url[url.Length - 1] == '>'", span="751-751"];
n436 [cluster="string.Trim()", label="Entry string.Trim()", span="0-0"];
n433 [cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)", label="url = url.Substring(1, url.Length - 2)", span="752-752"];
n434 [cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)", label="return Unescape(url);", span="754-754"];
n435 [cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)", label="Exit CommonMark.Parser.InlineMethods.CleanUrl(string)", span="743-743"];
n437 [cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)", label="Entry CommonMark.Parser.InlineMethods.CleanTitle(string)", span="761-761"];
n438 [cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)", label="int titlelength = title.Length", span="764-764"];
n440 [cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)", label="return title;", span="766-766"];
n441 [cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)", label="var a = title[0]", span="768-768"];
n442 [cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)", label="var b = title[titlelength - 1]", span="769-769"];
n444 [cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)", label="title = title.Substring(1, titlelength - 2)", span="771-771"];
n445 [cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)", label="return Unescape(title);", span="773-773"];
n439 [cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)", label="titlelength == 0", span="765-765"];
n443 [cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)", label="(a == '\'' && b == '\'') || (a == '(' && b == ')') || (a == '''' && b == '''')", span="770-770"];
n446 [cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)", label="Exit CommonMark.Parser.InlineMethods.CleanTitle(string)", span="761-761"];
n447 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="Entry CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", span="778-778"];
n448 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="int matchlen = 0", span="780-780"];
n451 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="advance(subj)", span="784-784"];
n452 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="matchlen = Scanner.scan_autolink_uri(subj.Buffer, subj.Position)", span="786-786"];
n454 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="contents = subj.Buffer.Substring(subj.Position, matchlen - 1)", span="789-789"];
n455 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="subj.Position += matchlen", span="790-790"];
n458 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="matchlen = Scanner.scan_autolink_email(subj.Buffer, subj.Position)", span="795-795"];
n460 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="contents = subj.Buffer.Substring(subj.Position, matchlen - 1)", span="798-798"];
n461 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="subj.Position += matchlen", span="799-799"];
n464 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="matchlen = Scanner.scan_html_tag(subj.Buffer, subj.Position)", span="804-804"];
n466 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="contents = subj.Buffer.Substring(subj.Position - 1, matchlen + 1)", span="807-807"];
n467 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="subj.Position += matchlen", span="808-808"];
n449 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="string contents", span="781-781"];
n450 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="Inline result", span="782-782"];
n453 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="matchlen > 0", span="787-787"];
n471 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int)", label="Entry CommonMark.Parser.Scanner.scan_autolink_uri(string, int)", span="21-21"];
n456 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="result = make_link(make_str_with_entities(contents), contents, '''')", span="791-791"];
n457 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="return result;", span="792-792"];
n459 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="matchlen > 0", span="796-796"];
n472 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int)", label="Entry CommonMark.Parser.Scanner.scan_autolink_email(string, int)", span="62-62"];
n462 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="result = make_link(make_str_with_entities(contents), ''mailto:'' + contents, '''')", span="800-800"];
n463 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="return result;", span="801-801"];
n465 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="matchlen > 0", span="805-805"];
n473 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", label="Entry CommonMark.Parser.Scanner.scan_html_tag(string, int)", span="246-246"];
n469 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="return make_str(''<'');", span="813-813"];
n468 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="return make_raw_html(contents);", span="809-809"];
n470 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", label="Exit CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", span="778-778"];
n474 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="int n", span="820-820"];
n478 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="endlabel = subj.Position", span="824-824"];
n479 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="var c = peek_char(subj)", span="826-826"];
n480 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="c == '(' &&\r\n                    ((sps = Scanner.scan_spacechars(subj.Buffer, subj.Position + 1)) > -1) &&\r\n                    ((n = Scanner.scan_link_url(subj.Buffer, subj.Position + 1 + sps)) > -1)", span="828-830"];
n481 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="starturl = subj.Position + 1 + sps", span="833-833"];
n483 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="starttitle = endurl + Scanner.scan_spacechars(subj.Buffer, endurl)", span="835-835"];
n484 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="endtitle = (starttitle == endurl) ? starttitle :\r\n                               starttitle + Scanner.scan_link_title(subj.Buffer, starttitle)", span="837-838"];
n485 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="endall = endtitle + Scanner.scan_spacechars(subj.Buffer, endtitle)", span="839-839"];
n486 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="endall < subj.Buffer.Length && subj.Buffer[endall] == ')'", span="840-840"];
n487 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="subj.Position = endall + 1", span="842-842"];
n488 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="url = subj.Buffer.Substring(starturl, endurl - starturl)", span="843-843"];
n490 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="title = subj.Buffer.Substring(starttitle, endtitle - starttitle)", span="845-845"];
n494 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="var label = ParseReferenceLabel(subj)", span="853-853"];
n498 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="var details = lookup_reference(subj.ReferenceMap, label.Value)", span="859-859"];
n501 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="subj.Position = endlabel", span="865-865"];
n503 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="subj.Position = endlabel", span="871-871"];
n475 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="int sps", span="821-821"];
n476 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="int endlabel, starturl, endurl, starttitle, endtitle, endall", span="822-822"];
n477 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="string url, title", span="823-823"];
n493 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="c == '[' || c == ' ' || c == '\n'", span="851-851"];
n506 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int)", label="Entry CommonMark.Parser.Scanner.scan_spacechars(string, int)", span="271-271"];
n507 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int)", label="Entry CommonMark.Parser.Scanner.scan_link_url(string, int)", span="169-169"];
n482 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="endurl = starturl + n", span="834-834"];
n508 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int)", label="Entry CommonMark.Parser.Scanner.scan_link_title(string, int)", span="236-236"];
n489 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="url = CleanUrl(url)", span="844-844"];
n492 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="return new Reference() { Title = title, Url = url };", span="848-848"];
n491 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="title = CleanTitle(title)", span="846-846"];
n495 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="label != null", span="854-854"];
n509 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="Entry CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", span="1037-1037"];
n496 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="label.Value.Length == 0", span="856-856"];
n497 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="return Reference.SelfReference;", span="857-857"];
n499 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="details != null", span="860-860"];
n500 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="return details;", span="861-861"];
n502 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="return Reference.InvalidReference;", span="866-866"];
n504 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="return null;", span="872-872"];
n505 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", label="Exit CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", span="818-818"];
n510 [cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", label="Entry CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", span="877-877"];
n511 [cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", label="int nlpos = subj.Position", span="879-879"];
n512 [cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", label="advance(subj)", span="882-882"];
n513 [cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", label="var len = subj.Buffer.Length", span="885-885"];
n514 [cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", label="subj.Position < len && subj.Buffer[subj.Position] == ' '", span="886-886"];
n515 [cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", label="advance(subj)", span="887-887"];
n516 [cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", label="nlpos > 1 && subj.Buffer[nlpos - 1] == ' ' && subj.Buffer[nlpos - 2] == ' '", span="889-889"];
n517 [cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", label="return make_linebreak();", span="890-890"];
n518 [cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", label="return make_softbreak();", span="892-892"];
n519 [cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", label="Exit CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", span="877-877"];
n520 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="Entry CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", span="898-898"];
n521 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="Inline inew = null", span="900-900"];
n524 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="var c = subj.Buffer[subj.Position]", span="904-904"];
n527 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="inew = handle_newline(subj)", span="909-909"];
n529 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="inew = handle_backticks(subj)", span="912-912"];
n531 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="inew = handle_backslash(subj)", span="915-915"];
n533 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="inew = handle_entity(subj)", span="918-918"];
n535 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="inew = handle_pointy_brace(subj)", span="921-921"];
n537 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="inew = HandleEmphasis(subj, '_')", span="924-924"];
n539 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="inew = HandleEmphasis(subj, '*')", span="927-927"];
n541 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="inew = HandleLeftSquareBracket(subj, false)", span="930-930"];
n543 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="inew = HandleRightSquareBracket(subj)", span="933-933"];
n545 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="advance(subj)", span="936-936"];
n546 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="peek_char(subj) == '['", span="937-937"];
n547 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="inew = HandleLeftSquareBracket(subj, true)", span="938-938"];
n549 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="endpos = subj.Buffer.IndexOfAny(SpecialCharacters, subj.Position)", span="945-945"];
n550 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="endpos == subj.Position", span="947-947"];
n551 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="contents = subj.Buffer[endpos].ToString()", span="950-950"];
n552 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="advance(subj)", span="951-951"];
n554 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="endpos = subj.Buffer.Length", span="956-956"];
n555 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="contents = subj.Buffer.Substring(subj.Position)", span="957-957"];
n556 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="subj.Position = endpos", span="958-958"];
n557 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="contents = subj.Buffer.Substring(subj.Position, endpos - subj.Position)", span="963-963"];
n558 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="subj.Position = endpos", span="965-965"];
n559 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="peek_char(subj) == '\n'", span="967-967"];
n522 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="string contents", span="901-901"];
n523 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="int endpos", span="902-902"];
n525 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label=c, span="906-906"];
n526 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="'\n'", span="908-908"];
n528 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="'`'", span="911-911"];
n530 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="'\\'", span="914-914"];
n532 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="'&'", span="917-917"];
n534 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="'<'", span="920-920"];
n536 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="'_'", span="923-923"];
n538 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="'*'", span="926-926"];
n540 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="'['", span="929-929"];
n542 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="']'", span="932-932"];
n544 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="'!'", span="935-935"];
n548 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="inew = make_str(''!'')", span="940-940"];
n553 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="endpos == -1", span="953-953"];
n561 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="inew = make_str(contents)", span="971-971"];
n564 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
n560 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="contents = contents.TrimEnd()", span="968-968"];
n562 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="return inew;", span="975-975"];
n563 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", label="Exit CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", span="898-898"];
n565 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="Entry CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="978-978"];
n566 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="input == null", span="980-980"];
n568 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="Subject subj = make_subject(input, refmap)", span="983-983"];
n567 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="return null;", span="981-981"];
n569 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="var len = subj.Buffer.Length", span="985-985"];
n572 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="var first = parse_inline(subj)", span="990-990"];
n573 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="subj.LastInline = first.LastSibling", span="991-991"];
n575 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="subj.Position < len", span="994-994"];
n576 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="cur = parse_inline(subj)", span="996-996"];
n578 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="subj.LastInline.NextSibling = cur", span="999-999"];
n579 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="subj.LastInline = cur.LastSibling", span="1000-1000"];
n580 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="InlineStack.PostProcessInlineStack(subj, subj.FirstPendingInline, subj.LastPendingInline, InlineStack.InlineStackPriority.Maximum)", span="1004-1004"];
n570 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="len == 0", span="987-987"];
n571 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="return null;", span="988-988"];
n581 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="return first;", span="1006-1006"];
n574 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="Inline cur", span="993-993"];
n577 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="cur != null", span="997-997"];
n583 [cluster="CommonMark.Parser.InlineStack.PostProcessInlineStack(CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Parser.InlineStack, CommonMark.Parser.InlineStack.InlineStackPriority)", label="Entry CommonMark.Parser.InlineStack.PostProcessInlineStack(CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Parser.InlineStack, CommonMark.Parser.InlineStack.InlineStackPriority)", span="168-168"];
n582 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="Exit CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="978-978"];
n584 [cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", label="Entry CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", span="1010-1010"];
n585 [cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", label="bool seen_newline = false", span="1012-1012"];
n586 [cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", label="var len = subj.Buffer.Length", span="1013-1013"];
n588 [cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", label="subj.Position < len", span="1015-1015"];
n589 [cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", label="c = subj.Buffer[subj.Position]", span="1017-1017"];
n591 [cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", label="advance(subj)", span="1019-1019"];
n590 [cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", label="c == ' ' || (!seen_newline && (seen_newline = c == '\n'))", span="1018-1018"];
n587 [cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", label="char c", span="1014-1014"];
n593 [cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", label="Exit CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", span="1010-1010"];
n592 [cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", label="return;", span="1021-1021"];
n594 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="var startPos = subj.Position", span="1039-1039"];
n595 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="var source = subj.Buffer", span="1040-1040"];
n598 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="subj.Position < len", span="1044-1044"];
n599 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="c = subj.Buffer[subj.Position]", span="1046-1046"];
n601 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="subj.Position++", span="1049-1049"];
n603 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="subj.Position++", span="1054-1054"];
n604 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="subj.Position = startPos", span="1059-1059"];
n606 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="var labelStartPos = subj.Position", span="1064-1064"];
n607 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="len = subj.Position + Reference.MaximumReferenceLabelLength", span="1066-1066"];
n610 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="subj.Position = source.IndexOfAny(BracketSpecialCharacters, subj.Position, len - subj.Position)", span="1070-1070"];
n611 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="subj.Position > -1", span="1071-1071"];
n612 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="c = source[subj.Position]", span="1073-1073"];
n614 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="subj.Position += 2", span="1076-1076"];
n615 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="subj.Position >= len", span="1077-1077"];
n616 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="subj.Position = source.IndexOfAny(BracketSpecialCharacters, subj.Position, len - subj.Position)", span="1080-1080"];
n618 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="var label = new StringPart(source, labelStartPos, subj.Position - labelStartPos)", span="1088-1088"];
n619 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="subj.Position++", span="1089-1089"];
n621 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="subj.Position = startPos", span="1094-1094"];
n596 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="var len = source.Length", span="1041-1041"];
n608 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="len > source.Length", span="1067-1067"];
n609 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="len = source.Length", span="1068-1068"];
n597 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="char c = '\0'", span="1043-1043"];
n600 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="c == ' ' || c == '\n'", span="1047-1047"];
n602 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="c == '['", span="1052-1052"];
n605 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="return null;", span="1060-1060"];
n613 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="c == '\\'", span="1074-1074"];
n617 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="c == '['", span="1082-1082"];
n620 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="return label;", span="1090-1090"];
n622 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="return null;", span="1095-1095"];
n623 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", label="Exit CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", span="1037-1037"];
n624 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="Entry CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="1102-1102"];
n625 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="Subject subj = make_subject(input.ToString(), null)", span="1104-1104"];
n658 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="add_reference(refmap, make_reference(lab.Value, url, title))", span="1157-1157"];
n626 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="string url = null", span="1105-1105"];
n661 [cluster="CommonMark.Syntax.StringContent.ToString()", label="Entry CommonMark.Syntax.StringContent.ToString()", span="50-50"];
n630 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="var lab = ParseReferenceLabel(subj)", span="1111-1111"];
n633 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="peek_char(subj) == ':'", span="1116-1116"];
n634 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="advance(subj)", span="1117-1117"];
n636 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="spnl(subj)", span="1122-1122"];
n637 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="matchlen = Scanner.scan_link_url(subj.Buffer, subj.Position)", span="1123-1123"];
n640 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="url = subj.Buffer.Substring(subj.Position, matchlen)", span="1127-1127"];
n642 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="subj.Position += matchlen", span="1129-1129"];
n643 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="beforetitle = subj.Position", span="1132-1132"];
n644 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="spnl(subj)", span="1133-1133"];
n645 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="matchlen = Scanner.scan_link_title(subj.Buffer, subj.Position)", span="1134-1134"];
n647 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="title = subj.Buffer.Substring(subj.Position, matchlen)", span="1137-1137"];
n649 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="subj.Position += matchlen", span="1139-1139"];
n650 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="subj.Position = beforetitle", span="1143-1143"];
n652 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="peek_char(subj) == ' '", span="1148-1148"];
n653 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="advance(subj)", span="1149-1149"];
n654 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="peek_char(subj) == '\n'", span="1151-1151"];
n655 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="advance(subj)", span="1152-1152"];
n656 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="peek_char(subj) != '\0'", span="1153-1153"];
n659 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="return subj.Position;", span="1159-1159"];
n627 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="string title = null", span="1106-1106"];
n628 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="int matchlen = 0", span="1107-1107"];
n629 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="int beforetitle", span="1108-1108"];
n631 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="lab == null || lab.Value.Length > Reference.MaximumReferenceLabelLength", span="1112-1112"];
n632 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="return 0;", span="1113-1113"];
n635 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="return 0;", span="1119-1119"];
n638 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="matchlen == 0", span="1124-1124"];
n639 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="return 0;", span="1125-1125"];
n641 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="url = CleanUrl(url)", span="1128-1128"];
n646 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="matchlen > 0", span="1135-1135"];
n648 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="title = CleanTitle(title)", span="1138-1138"];
n651 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="title = string.Empty", span="1144-1144"];
n657 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="return 0;", span="1154-1154"];
n660 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="Exit CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="1102-1102"];
m3_16 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="78-78"];
m3_22 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46"];
m3_23 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptions())\r\n                .AddPostOptionsLine(''post-options'')", span="50-53"];
m3_24 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="57-57"];
m3_25 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Assert.Equal(''pre-options'', lines[0])", span="58-58"];
m3_26 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="59-59"];
m3_27 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Assert.Equal(''-i               Define a int sequence here.'', lines[2])", span="60-60"];
m3_28 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[3])", span="61-61"];
m3_29 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="62-62"];
m3_30 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", color=green, community=0, file="HelpTextTests.cs", label="Assert.Equal( ''post-options'', lines[5])", prediction=0, span="63-63"];
m3_31 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46"];
m3_42 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="83-83"];
m3_43 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", color=green, community=0, file="HelpTextTests.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", prediction=1, span="87-87"];
m3_44 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", color=green, community=0, file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", prediction=2, span="88-88"];
m3_45 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", color=green, community=0, file="HelpTextTests.cs", label="sut.AddOptions(new FakeOptionsWithLongDescription())", prediction=1, span="89-89"];
m3_46 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", color=green, community=0, file="HelpTextTests.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", prediction=4, span="92-92"];
m3_47 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", color=green, community=0, file="HelpTextTests.cs", label="lines[2].Should().Be(''  v, verbose    This is the description'')", prediction=5, span="93-93"];
m3_48 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", color=green, community=0, file="HelpTextTests.cs", label="lines[3].Should().Be(''                of the verbosity to '')", prediction=4, span="95-95"];
m3_49 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", color=green, community=0, file="HelpTextTests.cs", label="lines[4].Should().Be(''                test out the wrapping '')", prediction=4, span="96-96"];
m3_50 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", color=green, community=0, file="HelpTextTests.cs", label="lines[5].Should().Be(''                capabilities of the '')", prediction=4, span="97-97"];
m3_51 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", color=green, community=0, file="HelpTextTests.cs", label="lines[6].Should().Be(''                Help Text.'')", prediction=4, span="98-98"];
m3_52 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="83-83"];
m3_57 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="103-103"];
m3_58 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="107-107"];
m3_59 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="108-108"];
m3_60 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="sut.AddOptions(new FakeOptionsWithLongDescriptionAndNoSpaces())", span="109-109"];
m3_61 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="112-112"];
m3_62 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[2].Should().Be(''  v, verbose    Before '')", span="113-113"];
m3_63 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[3].Should().Be(''                012345678901234567890123'')", span="114-114"];
m3_64 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[4].Should().Be(''                After'')", span="115-115"];
m3_65 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[5].Should().Be(''  input-file    Before '')", span="116-116"];
m3_66 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[6].Should().Be(''                012345678901234567890123'')", span="117-117"];
m3_67 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[7].Should().Be(''                456789 After'')", span="118-118"];
m3_68 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="103-103"];
m3_174 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpTextTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m3_149 [cluster="Unk.True", file="HelpTextTests.cs", label="Entry Unk.True", span=""];
m3_99 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="HelpTextTests.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="188-188"];
m3_133 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="209-209"];
m3_134 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new ParserResult<FakeOptions>(\r\n                ParserResultType.Options,\r\n                new FakeOptions(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="212-220"];
m3_135 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="223-223"];
m3_136 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="226-226"];
m3_137 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="228-228"];
m3_138 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="229-229"];
m3_139 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''ERROR(S):'', lines[2])", span="230-230"];
m3_140 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''Token 'badtoken' is not recognized.'', lines[3])", span="231-231"];
m3_141 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''A sequence option 'i' is defined with few items than required.'', lines[4])", span="232-232"];
m3_142 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[5])", span="233-233"];
m3_143 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''-i               Define a int sequence here.'', lines[6])", span="234-234"];
m3_144 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[7])", span="235-235"];
m3_145 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[8])", span="236-236"];
m3_146 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="209-209"];
m3_148 [cluster="string.StartsWith(string, System.StringComparison)", file="HelpTextTests.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m3_103 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283"];
m3_161 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="269-269"];
m3_162 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="272-273"];
m3_163 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new ParserResult<object>(\r\n                ParserResultType.Verbs,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(null, null, false)\r\n                    },\r\n                Maybe.Just(verbTypes))", span="274-281"];
m3_164 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="284-284"];
m3_165 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="287-287"];
m3_166 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="289-289"];
m3_167 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="290-290"];
m3_168 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''add       Add file contents to the index.'', lines[2])", span="291-291"];
m3_169 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''commit    Record changes to the repository.'', lines[3])", span="292-292"];
m3_170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''clone     Clone a repository into a new directory.'', lines[4])", span="293-293"];
m3_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''help      Display more information on a specific command.'', lines[5])", span="294-294"];
m3_172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="269-269"];
m3_70 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="123-123"];
m3_71 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="var sut = new HelpText(''Heading Info.'')", span="127-127"];
m3_72 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="128-128"];
m3_73 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new FakeOptionsForHelp())\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="129-131"];
m3_74 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="var lines = sut.ToString().Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="134-134"];
m3_75 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[1].Should().Be(''Before '')", span="135-135"];
m3_76 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[2].Should().Be(''0123456789012345678901234567890123456789'')", span="136-136"];
m3_77 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[3].Should().Be(''012 After'')", span="137-137"];
m3_78 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 3].Should().Be(''Before '')", span="138-138"];
m3_79 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 2].Should().Be(''0123456789012345678901234567890123456789'')", span="139-139"];
m3_80 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 1].Should().Be('' After'')", span="140-140"];
m3_81 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="123-123"];
m3_0 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
m3_1 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="Assert.Equal(string.Empty, new HelpText().ToString())", span="18-18"];
m3_2 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
m3_111 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", span="389-389"];
m3_132 [cluster="System.InvalidOperationException.InvalidOperationException()", file="HelpTextTests.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m3_173 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpTextTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m3_107 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="HelpTextTests.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="327-327"];
m3_3 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="32-32"];
m3_35 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="68-68"];
m3_36 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", color=green, community=0, file="HelpTextTests.cs", label="var sut = new HelpText(''Meta Value.'')\r\n                .AddOptions(new FakeOptionsWithMetaValue())", prediction=10, span="72-73"];
m3_37 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", color=green, community=0, file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", prediction=11, span="76-76"];
m3_38 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", color=green, community=0, file="HelpTextTests.cs", label="Assert.Equal(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'', lines[2])", prediction=12, span="78-78"];
m3_39 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="68-68"];
m3_19 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="313-313"];
m3_97 [cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="HelpTextTests.cs", label="Entry CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", span="23-23"];
m3_109 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="HelpTextTests.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="353-353"];
m3_41 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", span="4-4"];
m3_105 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m3_112 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="166-189"];
m3_113 [cluster="lambda expression", file="HelpTextTests.cs", label="err.Tag", span="168-168"];
m3_115 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="171-171"];
m3_117 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="173-173"];
m3_119 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="175-175"];
m3_121 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="177-177"];
m3_123 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;", span="179-179"];
m3_125 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="181-181"];
m3_129 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="185-185"];
m3_114 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.BadFormatTokenError", span="170-170"];
m3_116 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MissingValueOptionError", span="172-172"];
m3_118 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.UnknownOptionError", span="174-174"];
m3_120 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MissingRequiredOptionError", span="176-176"];
m3_122 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MutuallyExclusiveSetError", span="178-178"];
m3_124 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.SequenceOutOfRangeError", span="180-180"];
m3_126 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.NoVerbSelectedError", span="182-182"];
m3_128 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.BadVerbSelectedError", span="184-184"];
m3_130 [cluster="lambda expression", file="HelpTextTests.cs", label="throw new InvalidOperationException();", span="187-187"];
m3_127 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR no-verb-selected'';", span="183-183"];
m3_131 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="166-189"];
m3_40 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="55-55"];
m3_100 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261"];
m3_55 [cluster="Unk.Should", file="HelpTextTests.cs", label="Entry Unk.Should", span=""];
m3_56 [cluster="Unk.Be", file="HelpTextTests.cs", label="Entry Unk.Be", span=""];
m3_4 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="417-417"];
m3_33 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(T)", span="333-333"];
m3_175 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="HelpTextTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m3_82 [cluster="CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", span="4-4"];
m3_106 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="HelpTextTests.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="391-391"];
m3_17 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="37-37"];
m3_69 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", span="31-31"];
m3_102 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="HelpTextTests.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="272-272"];
m3_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="HelpTextTests.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="59-59"];
m3_147 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="242-242"];
m3_20 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="323-323"];
m3_104 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294"];
m3_21 [cluster="string.ToNotEmptyLines()", file="HelpTextTests.cs", label="Entry string.ToNotEmptyLines()", span="9-9"];
m3_98 [cluster="CommandLine.NullInstance.NullInstance()", file="HelpTextTests.cs", label="Entry CommandLine.NullInstance.NullInstance()", span="9-9"];
m3_110 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="HelpTextTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m3_101 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m3_32 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m3_6 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m3_7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31"];
m3_8 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34"];
m3_9 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''Unit-tests 2.0'', lines[0])", span="36-36"];
m3_10 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''Copyright (C) 2005 - 2013 Author'', lines[1])", span="37-37"];
m3_11 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''pre-options line 1'', lines[2])", span="38-38"];
m3_12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''pre-options line 2'', lines[3])", span="39-39"];
m3_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''post-options line 1'', lines[4])", span="40-40"];
m3_14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''post-options line 2'', lines[5])", span="41-41"];
m3_15 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m3_83 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="146-146"];
m3_84 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new ParserResult<NullInstance>(\r\n                ParserResultType.Options,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new MutuallyExclusiveSetError(new NameInfo(''z'', '''')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false), // should be ignored \r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="149-165"];
m3_85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.MutuallyExclusiveSetError:\r\n                            return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="166-189"];
m3_86 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, 2)", span="192-192"];
m3_87 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = errorsText.ToNotEmptyLines()", span="195-195"];
m3_88 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR badtoken'', lines[0])", span="197-197"];
m3_89 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR x, switch'', lines[1])", span="198-198"];
m3_90 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR unknown'', lines[2])", span="199-199"];
m3_91 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR missing'', lines[3])", span="200-200"];
m3_92 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR z'', lines[4])", span="201-201"];
m3_93 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR s, sequence'', lines[5])", span="202-202"];
m3_94 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR no-verb-selected'', lines[6])", span="203-203"];
m3_95 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR badverb'', lines[7])", span="204-204"];
m3_96 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="146-146"];
m3_150 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="241-241"];
m3_151 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new ParserResult<object>(\r\n                ParserResultType.Verbs,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="244-251"];
m3_152 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="254-254"];
m3_153 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="257-257"];
m3_154 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="259-259"];
m3_155 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="260-260"];
m3_156 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''-p, --patch    Use the interactive patch selection interface to chose which'', lines[2])", span="261-261"];
m3_157 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''changes to commit.'', lines[3])", span="262-262"];
m3_158 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''--amend        Used to amend the tip of the current branch.'', lines[4])", span="263-263"];
m3_159 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''--help         Display this help screen.'', lines[5])", span="264-264"];
m3_160 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="241-241"];
m3_34 [cluster="string[].TrimStringArray()", file="HelpTextTests.cs", label="Entry string[].TrimStringArray()", span="14-14"];
m3_108 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="HelpTextTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338"];
m3_5 [cluster="Unk.Equal", file="HelpTextTests.cs", label="Entry Unk.Equal", span=""];
m3_54 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextTests.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m3_53 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", span="22-22"];
m4_76 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", span="7-7"];
m4_86 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="27-27"];
m4_33 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", span="75-75"];
m4_34 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs", label="var expectedResult = -.123D", span="78-78"];
m4_35 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithDouble(),\r\n                new[] { ''-0.123'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="81-85"];
m4_36 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs", label="Assert.Equal(expectedResult, result.Value.DoubleValue)", span="88-88"];
m4_37 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", span="75-75"];
m4_11 [cluster="Unk.True", file="InstanceBuilderTests.cs", label="Entry Unk.True", span=""];
m4_123 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="256-256"];
m4_124 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''i'', '''')) }", span="259-259"];
m4_125 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new [] { ''-i'', ''10'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="262-266"];
m4_126 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="269-269"];
m4_127 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="256-256"];
m4_118 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283"];
m4_132 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="275-275"];
m4_133 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new UnknownOptionError(''xyz'') }", span="278-278"];
m4_134 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''--stringvalue'', ''abc'', ''--xyz'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="281-285"];
m4_135 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="288-288"];
m4_136 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="275-275"];
m4_57 [cluster="Unk.AllProperties", file="InstanceBuilderTests.cs", label="Entry Unk.AllProperties", span=""];
m4_101 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="10-10"];
m4_0 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="15-15"];
m4_1 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="var fakeOptions = new FakeOptions()", span="18-18"];
m4_2 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="var expectedResult = ParserResult.Create(\r\n                ParserResultType.Options,\r\n                fakeOptions, new Error[] { new HelpRequestedError() })", span="19-21"];
m4_3 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => fakeOptions,\r\n                new[] { ''--help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="24-28"];
m4_4 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.Equals(result))", span="31-31"];
m4_5 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="15-15"];
m4_113 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="237-237"];
m4_114 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(new NameInfo('''', ''str'')) }", span="240-240"];
m4_115 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequired(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="243-247"];
m4_116 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="250-250"];
m4_117 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="237-237"];
m4_8 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="103-103"];
m4_128 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m4_154 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="320-320"];
m4_13 [cluster="lambda expression", file="InstanceBuilderTests.cs", label=fakeOptions, span="25-25"];
m4_12 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="25-25"];
m4_14 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="25-25"];
m4_21 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="44-44"];
m4_22 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="44-44"];
m4_23 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="44-44"];
m4_29 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="63-63"];
m4_30 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithDouble()", span="63-63"];
m4_31 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="63-63"];
m4_38 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="82-82"];
m4_39 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithDouble()", span="82-82"];
m4_40 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="82-82"];
m4_47 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="101-101"];
m4_48 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="101-101"];
m4_49 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="101-101"];
m4_59 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="123-123"];
m4_60 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithEnum()", span="123-123"];
m4_61 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="123-123"];
m4_68 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="148-148"];
m4_69 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithValues()", span="148-148"];
m4_70 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="148-148"];
m4_77 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="170-170"];
m4_78 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSequenceWithoutRange()", span="170-170"];
m4_79 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="170-170"];
m4_87 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="199-199"];
m4_90 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="200-202"];
m4_88 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithValues()", span="199-199"];
m4_89 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="199-199"];
m4_91 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)))", span="201-202"];
m4_95 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))", span="202-202"];
m4_99 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)", span="202-202"];
m4_92 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="200-202"];
m4_94 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="202-202"];
m4_96 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="202-202"];
m4_98 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="202-202"];
m4_100 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="202-202"];
m4_109 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="225-225"];
m4_110 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSets()", span="225-225"];
m4_111 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="225-225"];
m4_119 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="244-244"];
m4_120 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionWithRequired()", span="244-244"];
m4_121 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="244-244"];
m4_129 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="263-263"];
m4_130 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="263-263"];
m4_131 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="263-263"];
m4_138 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="282-282"];
m4_139 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="282-282"];
m4_140 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="282-282"];
m4_146 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="301-301"];
m4_147 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="301-301"];
m4_148 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="301-301"];
m4_155 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="320-320"];
m4_156 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="320-320"];
m4_46 [cluster="Unk.SequenceEqual", file="InstanceBuilderTests.cs", label="Entry Unk.SequenceEqual", span=""];
m4_80 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="185-185"];
m4_81 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''str1'',\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''-a'', ''--bee'', ''-c'' },\r\n                    IntValue = 20\r\n                }", span="188-194"];
m4_82 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="var arguments = new[] { ''--stringvalue'', ''str1'', ''--'', ''10'', ''-a'', ''--bee'', ''-c'', ''20'' }", span="195-195"];
m4_84 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="208-208"];
m4_83 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                (a, optionSpecs) =>\r\n                    Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="198-205"];
m4_85 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="185-185"];
m4_149 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="313-313"];
m4_150 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="316-316"];
m4_151 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-zx'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="319-323"];
m4_152 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="326-326"];
m4_153 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="313-313"];
m4_10 [cluster="CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", span="90-90"];
m4_32 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", span="7-7"];
m4_55 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", span="14-14"];
m4_62 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="135-135"];
m4_63 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = string.Empty,\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''a'', ''b'', ''c'' },\r\n                    IntValue = 20\r\n                }", span="138-144"];
m4_64 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                new[] { ''10'', ''a'', ''b'', ''c'', ''20'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="147-151"];
m4_65 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="154-154"];
m4_66 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="135-135"];
m4_137 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="272-272"];
m4_97 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m4_93 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="33-33"];
m4_112 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", span="4-4"];
m4_107 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294"];
m4_102 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="214-214"];
m4_103 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[]\r\n                {\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''weburl'')),\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''ftpurl''))\r\n                }", span="217-221"];
m4_104 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSets(),\r\n                new[] { ''--weburl'', ''http://mywebsite.org/'', ''--ftpurl'', ''fpt://ftpsite.org/'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="224-228"];
m4_105 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="231-231"];
m4_106 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="214-214"];
m4_24 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", span="56-56"];
m4_25 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs", label="var expectedResult = .123D", span="59-59"];
m4_26 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithDouble(),\r\n                new[] { ''0.123'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="62-66"];
m4_27 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs", label="Assert.Equal(expectedResult, result.Value.DoubleValue)", span="69-69"];
m4_28 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", span="56-56"];
m4_122 [cluster="CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", span="4-4"];
m4_58 [cluster="Unk.EqualTo", file="InstanceBuilderTests.cs", label="Entry Unk.EqualTo", span=""];
m4_108 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m4_56 [cluster="Unk.ShouldHave", file="InstanceBuilderTests.cs", label="Entry Unk.ShouldHave", span=""];
m4_6 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m4_15 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", span="37-37"];
m4_16 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs", label="var expectedResult = -123", span="40-40"];
m4_17 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-123'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="43-47"];
m4_18 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs", label="Assert.Equal(expectedResult, result.Value.LongValue)", span="50-50"];
m4_19 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", span="37-37"];
m4_141 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="294-294"];
m4_142 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="297-297"];
m4_143 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-z'', ''-x'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="300-304"];
m4_144 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="307-307"];
m4_145 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="294-294"];
m4_50 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", span="113-113"];
m4_51 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs", label="var expectedResult = new FakeOptionsWithEnum\r\n                {\r\n                    Colors = Colors.Green\r\n                }", span="116-119"];
m4_52 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''Green'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="122-126"];
m4_53 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="129-129"];
m4_54 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", span="113-113"];
m4_67 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6"];
m4_7 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338"];
m4_20 [cluster="Unk.Equal", file="InstanceBuilderTests.cs", label="Entry Unk.Equal", span=""];
m4_41 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", span="94-94"];
m4_42 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { 10, 20, 30, 40 }", span="97-97"];
m4_43 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-i'', ''10'', ''20'', ''30'', ''40'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="100-104"];
m4_44 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Value.IntSequence))", span="107-107"];
m4_45 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", span="94-94"];
m4_71 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", span="160-160"];
m4_73 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceWithoutRange(),\r\n                new[] { ''1'', ''2'', ''3'', ''4'', ''5'', ''6'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="169-173"];
m4_74 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="176-176"];
m4_75 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", span="160-160"];
m4_9 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m4_157 [file="InstanceBuilderTests.cs", label=fakeOptions, span=""];
m4_158 [file="InstanceBuilderTests.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m5_14 [cluster="CommandLine.OptionAttribute.OptionAttribute()", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute()", span="40-40"];
m5_15 [cluster="CommandLine.OptionAttribute.OptionAttribute()", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute()", span="40-40"];
m5_20 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char)", span="68-68"];
m5_21 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(char)", span="68-68"];
m5_18 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char, string)", span="59-59"];
m5_19 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(char, string)", span="59-59"];
m5_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="OptionAttribute.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m5_0 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="22-22"];
m5_1 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="shortName == null", span="24-24"];
m5_3 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="longName == null", span="25-25"];
m5_5 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="this.shortName = shortName", span="27-27"];
m5_6 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="this.longName = longName", span="28-28"];
m5_2 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="throw new ArgumentNullException(''shortName'');", span="24-24"];
m5_4 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="throw new ArgumentNullException(''longName'');", span="25-25"];
m5_7 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="this.setName = string.Empty", span="29-29"];
m5_8 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="this.min = -1", span="30-30"];
m5_9 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="this.max = -1", span="31-31"];
m5_10 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="this.helpText = string.Empty", span="32-32"];
m5_11 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="this.metaValue = string.Empty", span="33-33"];
m5_12 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="22-22"];
m5_16 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string)", span="49-49"];
m5_17 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(string)", span="49-49"];
m5_22 [file="OptionAttribute.cs", label="CommandLine.OptionAttribute", span=""];
m6_8 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="OptionMapperTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m6_11 [cluster="Unk.Create", file="OptionMapperTests.cs", label="Entry Unk.Create", span=""];
m6_12 [cluster="Unk.Where", file="OptionMapperTests.cs", label="Entry Unk.Where", span=""];
m6_6 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="OptionMapperTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m6_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", span="15-15"];
m6_10 [cluster="Unk.Single", file="OptionMapperTests.cs", label="Entry Unk.Single", span=""];
m6_14 [cluster="Unk.NotNull", file="OptionMapperTests.cs", label="Entry Unk.NotNull", span=""];
m6_26 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12"];
m6_0 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Entry CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="16-16"];
m6_1 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var tokenPartitions = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''x'', new [] { ''true'' })\r\n                }", span="19-22"];
m6_2 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", color=green, community=0, file="OptionMapperTests.cs", label="var specProps = new[]\r\n                {\r\n                    SpecificationProperty.Create(\r\n                        new OptionSpecification(''x'', string.Empty, false, string.Empty, -1, -1, Maybe.Nothing<object>(), typeof(bool), string.Empty, string.Empty), \r\n                        typeof(FakeOptions).GetProperties().Single(p => p.Name.Equals(''BoolValue'', StringComparison.Ordinal)),\r\n                        Maybe.Nothing<object>())\r\n                }", prediction=13, span="23-29"];
m6_3 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var result = OptionMapper.MapValues(\r\n                specProps.Where(pt => pt.Specification.IsOption()),\r\n                tokenPartitions,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture),\r\n                StringComparer.InvariantCulture)", span="32-36"];
m6_4 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Assert.NotNull(result.Value.Single(\r\n                a => a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value == true))", span="39-42"];
m6_5 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Exit CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="16-16"];
m6_27 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="40-42"];
m6_15 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="27-27"];
m6_19 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="33-33"];
m6_23 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="35-35"];
m6_16 [cluster="lambda expression", file="OptionMapperTests.cs", label="p.Name.Equals(''BoolValue'', StringComparison.Ordinal)", span="27-27"];
m6_17 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="27-27"];
m6_20 [cluster="lambda expression", file="OptionMapperTests.cs", label="pt.Specification.IsOption()", span="33-33"];
m6_21 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="33-33"];
m6_24 [cluster="lambda expression", file="OptionMapperTests.cs", label="TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture)", span="35-35"];
m6_25 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="35-35"];
m6_28 [cluster="lambda expression", file="OptionMapperTests.cs", label="a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value == true", span="40-42"];
m6_29 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="40-42"];
m6_30 [cluster="string.Equals(string)", file="OptionMapperTests.cs", label="Entry string.Equals(string)", span="0-0"];
m6_18 [cluster="string.Equals(string, System.StringComparison)", file="OptionMapperTests.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m6_22 [cluster="CommandLine.Core.Specification.IsOption()", file="OptionMapperTests.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
m6_13 [cluster="Unk.MapValues", file="OptionMapperTests.cs", label="Entry Unk.MapValues", span=""];
m6_9 [cluster="System.Type.GetProperties()", file="OptionMapperTests.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m7_0 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionSpecification.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", span="15-15"];
m7_1 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionSpecification.cs", label="this.shortName = shortName", span="18-18"];
m7_2 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionSpecification.cs", label="this.longName = longName", span="19-19"];
m7_3 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionSpecification.cs", label="this.setName = setName", span="20-20"];
m7_4 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionSpecification.cs", label="this.helpText = helpText", span="21-21"];
m7_5 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionSpecification.cs", label="this.metaValue = metaValue", span="22-22"];
m7_6 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionSpecification.cs", label="Exit CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", span="15-15"];
m7_7 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type)", file="OptionSpecification.cs", label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type)", span="25-25"];
m7_8 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type)", color=green, community=0, file="OptionSpecification.cs", label="return new OptionSpecification(\r\n                attribute.ShortName,\r\n                attribute.LongName,\r\n                attribute.Required,\r\n                attribute.SetName,\r\n                attribute.Min,\r\n                attribute.Max,\r\n                attribute.DefaultValue.ToMaybe(),\r\n                conversionType,\r\n                attribute.HelpText,\r\n                attribute.MetaValue);", prediction=14, span="27-37"];
m7_9 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type)", file="OptionSpecification.cs", label="Exit CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type)", span="25-25"];
m7_10 [cluster="T.ToMaybe<T>()", file="OptionSpecification.cs", label="Entry T.ToMaybe<T>()", span="82-82"];
m7_11 [file="OptionSpecification.cs", label="CommandLine.Core.OptionSpecification", span=""];
m8_4 [cluster="CommandLine.ParserSettings.~ParserSettings()", file="ParserSettings.cs", label="Entry CommandLine.ParserSettings.~ParserSettings()", span="34-34"];
m8_5 [cluster="CommandLine.ParserSettings.~ParserSettings()", file="ParserSettings.cs", label="Dispose(false)", span="36-36"];
m8_6 [cluster="CommandLine.ParserSettings.~ParserSettings()", file="ParserSettings.cs", label="Exit CommandLine.ParserSettings.~ParserSettings()", span="34-34"];
m8_0 [cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettings.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="25-25"];
m8_1 [cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettings.cs", label="this.caseSensitive = true", span="27-27"];
m8_2 [cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettings.cs", label="this.parsingCulture = CultureInfo.InvariantCulture", span="28-28"];
m8_3 [cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettings.cs", label="Exit CommandLine.ParserSettings.ParserSettings()", span="25-25"];
m8_7 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="Entry CommandLine.ParserSettings.Dispose(bool)", span="124-124"];
m8_13 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="this.disposed", span="126-126"];
m8_15 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label=disposing, span="131-131"];
m8_14 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="return;", span="128-128"];
m8_16 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="HelpWriter != null", span="133-133"];
m8_17 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="this.helpWriter.Dispose()", span="135-135"];
m8_19 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="this.disposed = true", span="139-139"];
m8_18 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="this.helpWriter = null", span="136-136"];
m8_20 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="Exit CommandLine.ParserSettings.Dispose(bool)", span="124-124"];
m8_12 [cluster="System.GC.SuppressFinalize(object)", file="ParserSettings.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m8_21 [cluster="System.IO.TextWriter.Dispose()", file="ParserSettings.cs", label="Entry System.IO.TextWriter.Dispose()", span="0-0"];
m8_8 [cluster="CommandLine.ParserSettings.Dispose()", file="ParserSettings.cs", label="Entry CommandLine.ParserSettings.Dispose()", span="117-117"];
m8_9 [cluster="CommandLine.ParserSettings.Dispose()", file="ParserSettings.cs", label="Dispose(true)", span="119-119"];
m8_10 [cluster="CommandLine.ParserSettings.Dispose()", file="ParserSettings.cs", label="GC.SuppressFinalize(this)", span="121-121"];
m8_11 [cluster="CommandLine.ParserSettings.Dispose()", file="ParserSettings.cs", label="Exit CommandLine.ParserSettings.Dispose()", span="117-117"];
m8_22 [file="ParserSettings.cs", label="CommandLine.ParserSettings", span=""];
m9_23 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m9_22 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="Specification.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m9_26 [cluster="string.ToLowerInvariant()", file="Specification.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m9_28 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="Specification.cs", label="Entry CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="17-17"];
m9_25 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type)", file="Specification.cs", label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type)", span="25-25"];
m9_8 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="67-67"];
m9_9 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=green, community=0, file="Specification.cs", label="var attrs = property.GetCustomAttributes(true)", prediction=15, span="69-69"];
m9_12 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=green, community=0, file="Specification.cs", label="var spec = OptionSpecification.FromAttribute(oa.Single(), property.PropertyType)", prediction=16, span="73-73"];
m9_18 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="return ValueSpecification.FromAttribute(va.Single(), property.PropertyType);", span="84-84"];
m9_10 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=green, community=0, file="Specification.cs", label="var oa = attrs.OfType<OptionAttribute>()", prediction=17, span="70-70"];
m9_16 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="var va = attrs.OfType<ValueAttribute>()", span="81-81"];
m9_11 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=green, community=0, file="Specification.cs", label="oa.Count() == 1", prediction=18, span="71-71"];
m9_13 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=green, community=0, file="Specification.cs", label="spec.ShortName.Length == 0 && spec.LongName.Length == 0", prediction=19, span="74-74"];
m9_15 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="return spec;", span="78-78"];
m9_17 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=green, community=0, file="Specification.cs", label="va.Count() == 1", prediction=20, span="82-82"];
m9_19 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="throw new InvalidOperationException();", span="87-87"];
m9_20 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="Exit CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="67-67"];
m9_29 [cluster="System.InvalidOperationException.InvalidOperationException()", file="Specification.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m9_21 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="Specification.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m9_24 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m9_27 [cluster="CommandLine.Core.OptionSpecification.WithLongName(string)", file="Specification.cs", label="Entry CommandLine.Core.OptionSpecification.WithLongName(string)", span="25-25"];
m9_0 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="Entry CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="27-27"];
m9_1 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.tag = tag", span="29-29"];
m9_2 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.required = required", span="30-30"];
m9_3 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.min = min", span="31-31"];
m9_4 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.max = max", span="32-32"];
m9_5 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.defaultValue = defaultValue", span="33-33"];
m9_6 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.conversionType = conversionType", span="34-34"];
m9_7 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="Exit CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="27-27"];
m9_30 [file="Specification.cs", label="CommandLine.Core.Specification", span=""];
m10_42 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="SpecificationExtensions.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m10_15 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="40-40"];
m10_16 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label=guardsLookup, span="42-42"];
m10_17 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="specifications.Any(spec => guard.Item1(spec))", span="44-44"];
m10_19 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="return specifications;", span="50-50"];
m10_18 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="throw new ApplicationException(guard.Item2);", span="46-46"];
m10_20 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="40-40"];
m10_41 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="SpecificationExtensions.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m10_0 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11"];
m10_1 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="specification == null", span="13-13"];
m10_3 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return specification.Tag == SpecificationType.Option;", span="15-15"];
m10_2 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="throw new ArgumentNullException(''specification'');", span="13-13"];
m10_4 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11"];
m10_14 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", span="15-15"];
m10_6 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="18-18"];
m10_7 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="specification == null", span="20-20"];
m10_9 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return specification.Tag == SpecificationType.Value;", span="22-22"];
m10_8 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="throw new ArgumentNullException(''specification'');", span="20-20"];
m10_10 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="18-18"];
m10_23 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Entry lambda expression", span="44-44"];
m10_24 [cluster="lambda expression", file="SpecificationExtensions.cs", label="guard.Item1(spec)", span="44-44"];
m10_25 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Exit lambda expression", span="44-44"];
m10_27 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="53-53"];
m10_28 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="specification == null", span="55-55"];
m10_30 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="specification.ConversionType.ToDescriptor()", span="57-57"];
m10_34 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="var min = specification.Min", span="62-62"];
m10_35 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="var max = specification.Max", span="63-63"];
m10_29 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="throw new ArgumentNullException(''specification'');", span="55-55"];
m10_31 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="DescriptorType.Scalar", span="59-59"];
m10_33 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="DescriptorType.Sequence", span="61-61"];
m10_32 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return  Maybe.Just(1);", span="60-60"];
m10_36 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="min >= 0 && max >= 0", span="64-64"];
m10_37 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return Maybe.Just(max);", span="66-66"];
m10_38 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return Maybe.Nothing<int>();", span="71-71"];
m10_39 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="53-53"];
m10_26 [cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m10_40 [cluster="System.Type.ToDescriptor()", file="SpecificationExtensions.cs", label="Entry System.Type.ToDescriptor()", span="22-22"];
m10_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m10_21 [cluster="Unk.Any", file="SpecificationExtensions.cs", label="Entry Unk.Any", span=""];
m10_11 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", span="25-25"];
m10_12 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", color=green, community=0, file="SpecificationExtensions.cs", label="return new OptionSpecification(\r\n                specification.ShortName,\r\n                newLongName,\r\n                specification.Required,\r\n                specification.SetName,\r\n                specification.Min,\r\n                specification.Max,\r\n                specification.DefaultValue,\r\n                specification.ConversionType,\r\n                specification.HelpText,\r\n                specification.MetaValue);", prediction=21, span="27-37"];
m10_13 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", span="25-25"];
m10_22 [cluster="System.ApplicationException.ApplicationException(string)", file="SpecificationExtensions.cs", label="Entry System.ApplicationException.ApplicationException(string)", span="0-0"];
m10_43 [file="SpecificationExtensions.cs", label=guard, span=""];
m11_0 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="18-18"];
m11_1 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="SpecificationPropertyRules.cs", label="return specProps =>\r\n                {\r\n                    var options = specProps.Where(sp => sp.Specification.IsOption() && sp.Value.IsJust());\r\n                    var groups = options.GroupBy(g => ((OptionSpecification)g.Specification).SetName);\r\n                    if (groups.Count() > 1)\r\n                    {\r\n                        return options.Select(s => Maybe.Just<Error>(new MutuallyExclusiveSetError(NameInfo.FromOptionSpecification((OptionSpecification)s.Specification))));\r\n                    }\r\n                    return Enumerable.Empty<Nothing<Error>>();\r\n                };", span="20-29"];
m11_2 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="18-18"];
m11_19 [cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="152-152"];
m11_48 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="46-46"];
m11_49 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="SpecificationPropertyRules.cs", label="return specProps =>\r\n                {\r\n                    var options = specProps.Where(\r\n                        sp => sp.Specification.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min);\r\n                    if (options.Any())\r\n                    {\r\n                        return options.Select(s => Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification))));\r\n                    }\r\n                    return Enumerable.Empty<Nothing<Error>>();\r\n                };", span="48-60"];
m11_50 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="46-46"];
m11_46 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283"];
m11_38 [cluster="Unk.Any", file="SpecificationPropertyRules.cs", label="Entry Unk.Any", span=""];
m11_10 [cluster="Unk.Where", file="SpecificationPropertyRules.cs", label="Entry Unk.Where", span=""];
m11_14 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="SpecificationPropertyRules.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m11_47 [cluster="Unk.FromSpecification", file="SpecificationPropertyRules.cs", label="Entry Unk.FromSpecification", span=""];
m11_61 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="137-137"];
m11_42 [cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="147-147"];
m11_65 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m11_62 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="56-57"];
m11_4 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var options = specProps.Where(sp => sp.Specification.IsOption() && sp.Value.IsJust())", span="22-22"];
m11_3 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="20-29"];
m11_5 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var groups = options.GroupBy(g => ((OptionSpecification)g.Specification).SetName)", span="23-23"];
m11_15 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="22-22"];
m11_7 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return options.Select(s => Maybe.Just<Error>(new MutuallyExclusiveSetError(NameInfo.FromOptionSpecification((OptionSpecification)s.Specification))));", span="26-26"];
m11_6 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="groups.Count() > 1", span="24-24"];
m11_20 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="23-23"];
m11_8 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return Enumerable.Empty<Nothing<Error>>();", span="28-28"];
m11_9 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="20-29"];
m11_23 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="26-26"];
m11_16 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="sp.Specification.IsOption() && sp.Value.IsJust()", span="22-22"];
m11_17 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="22-22"];
m11_21 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="((OptionSpecification)g.Specification).SetName", span="23-23"];
m11_22 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="23-23"];
m11_24 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Maybe.Just<Error>(new MutuallyExclusiveSetError(NameInfo.FromOptionSpecification((OptionSpecification)s.Specification)))", span="26-26"];
m11_25 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="26-26"];
m11_33 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="var options = specProps.Where(sp => sp.Value.IsNothing() && sp.Specification.Required)", prediction=22, span="36-36"];
m11_32 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="34-43"];
m11_34 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="options.Any()", prediction=23, span="37-37"];
m11_39 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="36-36"];
m11_35 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="return options.Select(s => Maybe.Just<Error>(new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification))));", prediction=22, span="39-40"];
m11_36 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="return Enumerable.Empty<Nothing<Error>>();", prediction=25, span="42-42"];
m11_37 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="34-43"];
m11_43 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="39-40"];
m11_40 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="sp.Value.IsNothing() && sp.Specification.Required", prediction=26, span="36-36"];
m11_41 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="36-36"];
m11_44 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="Maybe.Just<Error>(new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification)))", prediction=27, span="39-40"];
m11_45 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="39-40"];
m11_52 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var options = specProps.Where(\r\n                        sp => sp.Specification.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min)", span="50-53"];
m11_51 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="48-60"];
m11_53 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="options.Any()", span="54-54"];
m11_57 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="51-53"];
m11_54 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return options.Select(s => Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification))));", span="56-57"];
m11_55 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return Enumerable.Empty<Nothing<Error>>();", span="59-59"];
m11_56 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="48-60"];
m11_58 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="sp.Specification.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min", span="51-53"];
m11_59 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="51-53"];
m11_63 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification)))", span="56-57"];
m11_64 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="56-57"];
m11_29 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="32-32"];
m11_30 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", color=green, community=0, file="SpecificationPropertyRules.cs", label="return specProps =>\r\n                {\r\n                    var options = specProps.Where(sp => sp.Value.IsNothing() && sp.Specification.Required);\r\n                    if (options.Any())\r\n                    {\r\n                        return options.Select(s => Maybe.Just<Error>(new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification))));\r\n                    }\r\n                    return Enumerable.Empty<Nothing<Error>>();\r\n                };", prediction=28, span="34-43"];
m11_31 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="32-32"];
m11_28 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m11_13 [cluster="Unk.Select", file="SpecificationPropertyRules.cs", label="Entry Unk.Select", span=""];
m11_60 [cluster="System.Type.ToDescriptor()", file="SpecificationPropertyRules.cs", label="Entry System.Type.ToDescriptor()", span="22-22"];
m11_26 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294"];
m11_18 [cluster="CommandLine.Core.Specification.IsOption()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
m11_27 [cluster="CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", span="60-60"];
m11_11 [cluster="Unk.GroupBy", file="SpecificationPropertyRules.cs", label="Entry Unk.GroupBy", span=""];
m11_12 [cluster="Unk.Count", file="SpecificationPropertyRules.cs", label="Entry Unk.Count", span=""];
m12_103 [cluster="string.Split(params char[])", file="Tokenizer.cs", label="Entry string.Split(params char[])", span="0-0"];
m12_16 [cluster="Unk.nameLookup", file="Tokenizer.cs", label="Entry Unk.nameLookup", span=""];
m12_101 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="Tokenizer.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="188-188"];
m12_11 [cluster="string.StartsWith(string, System.StringComparison)", file="Tokenizer.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m12_80 [cluster="CommandLine.Core.Token.Name(string)", file="Tokenizer.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m12_102 [cluster="System.Action<T>.Invoke(T)", file="Tokenizer.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m12_34 [cluster="Unk.Any", file="Tokenizer.cs", label="Entry Unk.Any", span=""];
m12_12 [cluster="CommandLine.Core.Token.Value(string)", file="Tokenizer.cs", label="Entry CommandLine.Core.Token.Value(string)", span="26-26"];
m12_15 [cluster="Unk.IsName", file="Tokenizer.cs", label="Entry Unk.IsName", span=""];
m12_36 [cluster="System.Func<T, TResult>.Invoke(T)", file="Tokenizer.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m12_20 [cluster="Unk.Create", file="Tokenizer.cs", label="Entry Unk.Create", span=""];
m12_82 [cluster="string.String(char, int)", file="Tokenizer.cs", label="Entry string.String(char, int)", span="0-0"];
m12_54 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="43-43"];
m12_22 [cluster="lambda expression", file="Tokenizer.cs", label="errors.Add(e)", span="18-18"];
m12_21 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="18-18"];
m12_23 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="18-18"];
m12_41 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="39-39"];
m12_45 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="41-41"];
m12_48 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="42-42"];
m12_51 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="42-42"];
m12_55 [cluster="lambda expression", file="Tokenizer.cs", label="tokens.Concat(values)", span="43-43"];
m12_42 [cluster="lambda expression", file="Tokenizer.cs", label="arg.EqualsOrdinal(''--'')", span="39-39"];
m12_43 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="39-39"];
m12_46 [cluster="lambda expression", file="Tokenizer.cs", label="!arg.EqualsOrdinal(''--'')", span="41-41"];
m12_47 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="41-41"];
m12_49 [cluster="lambda expression", file="Tokenizer.cs", label="!arg.EqualsOrdinal(''--'')", span="42-42"];
m12_50 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="42-42"];
m12_52 [cluster="lambda expression", file="Tokenizer.cs", label="Token.Value(t)", span="42-42"];
m12_53 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="42-42"];
m12_56 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="43-43"];
m12_38 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m12_13 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="98-98"];
m12_85 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="value == null", span="102-102"];
m12_91 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield return Token.Name(text);", span="113-113"];
m12_92 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield break;", span="114-114"];
m12_95 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield break;", span="119-119"];
m12_97 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield return Token.Name(parts[0]);", span="122-122"];
m12_98 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield return Token.Value(parts[1]);", span="123-123"];
m12_87 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="value.Length > 2 && value.StartsWith(''--'', StringComparison.Ordinal)", span="107-107"];
m12_88 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="var text = value.Substring(2)", span="109-109"];
m12_94 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="onError(new BadFormatTokenError(value))", span="118-118"];
m12_86 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="throw new ArgumentNullException(''value'');", span="104-104"];
m12_89 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="var equalIndex = text.IndexOf('=')", span="110-110"];
m12_96 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="var parts = text.Split('=')", span="121-121"];
m12_90 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="equalIndex <= 0", span="111-111"];
m12_93 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="equalIndex == 1", span="116-116"];
m12_99 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="98-98"];
m12_37 [cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m12_19 [cluster="Unk.Concat", file="Tokenizer.cs", label="Entry Unk.Concat", span=""];
m12_44 [cluster="string.EqualsOrdinal(string)", file="Tokenizer.cs", label="Entry string.EqualsOrdinal(string)", span="34-34"];
m12_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m12_100 [cluster="string.IndexOf(char)", file="Tokenizer.cs", label="Entry string.IndexOf(char)", span="0-0"];
m12_39 [cluster="Unk.Select", file="Tokenizer.cs", label="Entry Unk.Select", span=""];
m12_40 [cluster="CommandLine.Core.StatePair<T1>.MapValue<T1, T2>(System.Func<T1, T2>)", file="Tokenizer.cs", label="Entry CommandLine.Core.StatePair<T1>.MapValue<T1, T2>(System.Func<T1, T2>)", span="69-69"];
m12_0 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m12_1 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="arguments == null", span="15-15"];
m12_5 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", color=green, community=0, file="Tokenizer.cs", label="var tokens = from arg in arguments\r\n                         from token in !arg.StartsWith(''-'', StringComparison.Ordinal)\r\n                               ? new Token[] { Token.Value(arg) }\r\n                               : arg.StartsWith(''--'', StringComparison.Ordinal)\r\n                                     ? TokenizeLongName(arg, onError)\r\n                                     : TokenizeShortName(arg, nameLookup)\r\n                         select token", prediction=29, span="20-26"];
m12_6 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", color=green, community=0, file="Tokenizer.cs", label="var unkTokens = from t in tokens where t.IsName() && !nameLookup(t.Text) select t", prediction=30, span="28-28"];
m12_2 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="throw new ArgumentNullException(''arguments'');", span="15-15"];
m12_3 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="var errors = new List<Error>()", span="17-17"];
m12_4 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="Action<Error> onError = e => errors.Add(e)", span="18-18"];
m12_7 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", color=green, community=0, file="Tokenizer.cs", label="return StatePair.Create(tokens.Except(unkTokens), errors.Concat(from t in unkTokens select new UnknownOptionError(t.Text)));", prediction=29, span="30-30"];
m12_8 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m12_17 [cluster="Unk.Except", file="Tokenizer.cs", label="Entry Unk.Except", span=""];
m12_25 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="33-33"];
m12_26 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="arguments == null", span="37-37"];
m12_28 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="arguments.Any(arg => arg.EqualsOrdinal(''--''))", span="39-39"];
m12_29 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="var tokenizerResult = tokenizer(arguments.TakeWhile(arg => !arg.EqualsOrdinal(''--'')))", span="41-41"];
m12_30 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="var values = arguments.SkipWhile(arg => !arg.EqualsOrdinal(''--'')).Skip(1).Select(t => Token.Value(t))", span="42-42"];
m12_32 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="return tokenizer(arguments);", span="45-45"];
m12_27 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="throw new ArgumentNullException(''arguments'');", span="37-37"];
m12_31 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="return tokenizerResult.MapValue(tokens => tokens.Concat(values));", span="43-43"];
m12_33 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="33-33"];
m12_24 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Tokenizer.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m12_79 [cluster="char.IsDigit(char)", file="Tokenizer.cs", label="Entry char.IsDigit(char)", span="0-0"];
m12_10 [cluster="System.Collections.Generic.List<T>.List()", file="Tokenizer.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m12_18 [cluster="UnknownOptionError.cstr", file="Tokenizer.cs", label="Entry UnknownOptionError.cstr", span=""];
m12_84 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m12_14 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="48-48"];
m12_57 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="value == null", span="52-52"];
m12_62 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Value(value);", span="63-63"];
m12_63 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield break;", span="64-64"];
m12_65 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Name(text);", span="69-69"];
m12_66 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield break;", span="70-70"];
m12_68 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Name(first);", span="74-74"];
m12_74 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Name(n);", span="84-84"];
m12_76 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Value(text.Substring(seen.Count()));", span="93-93"];
m12_59 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="value.Length > 1 || value[0] == '-' || value[1] != '-'", span="57-57"];
m12_60 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var text = value.Substring(1)", span="59-59"];
m12_64 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="value.Length == 2", span="67-67"];
m12_72 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="!seen.Contains(c) && nameLookup(n)", span="81-81"];
m12_58 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="throw new ArgumentNullException(''value'');", span="54-54"];
m12_61 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="char.IsDigit(text[0])", span="61-61"];
m12_67 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var first = text.Substring(0, 1)", span="73-73"];
m12_70 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="text.Substring(1)", span="78-78"];
m12_75 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="seen.Count() < text.Length", span="91-91"];
m12_69 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var seen = new List<char> { first[0] }", span="76-76"];
m12_73 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="seen.Add(c)", span="83-83"];
m12_71 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var n = new string(c, 1)", span="80-80"];
m12_77 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="48-48"];
m12_9 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Tokenizer.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m12_83 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="Tokenizer.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m12_78 [cluster="string.Substring(int)", file="Tokenizer.cs", label="Entry string.Substring(int)", span="0-0"];
m12_104 [file="Tokenizer.cs", label=errors, span=""];
m12_105 [file="Tokenizer.cs", label=values, span=""];
m13_13 [cluster="CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="Entry CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="46-46"];
m13_44 [cluster="CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="return from tseq in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                    info.Item1 == DescriptorType.Scalar ? new[] { f, s } : new Token[] { }, new Token[] { })\r\n                                    : new Token[] { })\r\n                from t in tseq\r\n                select t;", span="50-57"];
m13_45 [cluster="CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="Exit CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="46-46"];
m13_18 [cluster="System.Collections.Generic.IEnumerable<TSource>.Pairwise<TSource, TResult>(System.Func<TSource, TSource, TResult>)", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Pairwise<TSource, TResult>(System.Func<TSource, TSource, TResult>)", span="10-10"];
m13_68 [cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="TokenPartitioner.cs", label="Entry CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="59-59"];
m13_43 [cluster="CommandLine.Core.Token.IsName()", file="TokenPartitioner.cs", label="Entry CommandLine.Core.Token.IsName()", span="72-72"];
m13_11 [cluster="CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="Entry CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="37-37"];
m13_36 [cluster="CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="return from t in tokens\r\n                   where typeLookup(t.Text).Return(info => t.IsName() && info.Item1 == DescriptorType.Boolean, false)\r\n                   select t;", span="41-43"];
m13_37 [cluster="CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="Exit CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="37-37"];
m13_38 [cluster="System.Func<T, TResult>.Invoke(T)", file="TokenPartitioner.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m13_15 [cluster="Unk.Where", file="TokenPartitioner.cs", label="Entry Unk.Where", span=""];
m13_21 [cluster="Unk.Create", file="TokenPartitioner.cs", label="Entry Unk.Create", span=""];
m13_29 [cluster="CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", file="TokenPartitioner.cs", label="Entry CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", span="88-88"];
m13_93 [cluster="CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", file="TokenPartitioner.cs", label="return new KeyValuePair<string, IEnumerable<string>>(value, values);", span="90-90"];
m13_94 [cluster="CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", file="TokenPartitioner.cs", label="Exit CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", span="88-88"];
m13_78 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m13_12 [cluster="System.Collections.Generic.IEnumerable<TSource>.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m13_90 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="82-82"];
m13_22 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="26-26"];
m13_26 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="30-30"];
m13_30 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="31-31"];
m13_33 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="33-33"];
m13_23 [cluster="lambda expression", color=green, community=0, file="TokenPartitioner.cs", label="v.IsValue()", prediction=32, span="26-26"];
m13_24 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="26-26"];
m13_27 [cluster="lambda expression", file="TokenPartitioner.cs", label="CreateValue(t.Text,''true'')", span="30-30"];
m13_28 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="30-30"];
m13_31 [cluster="lambda expression", file="TokenPartitioner.cs", label="CreateValue(f.Text, s.Text)", span="31-31"];
m13_32 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="31-31"];
m13_34 [cluster="lambda expression", file="TokenPartitioner.cs", label="t.Text", span="33-33"];
m13_35 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="33-33"];
m13_40 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="42-42"];
m13_41 [cluster="lambda expression", file="TokenPartitioner.cs", label="t.IsName() && info.Item1 == DescriptorType.Boolean", span="42-42"];
m13_42 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="42-42"];
m13_47 [cluster="lambda expression", file="TokenPartitioner.cs", label="f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                    info.Item1 == DescriptorType.Scalar ? new[] { f, s } : new Token[] { }, new Token[] { })\r\n                                    : new Token[] { }", span="52-55"];
m13_46 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="51-55"];
m13_50 [cluster="lambda expression", file="TokenPartitioner.cs", label="info.Item1 == DescriptorType.Scalar ? new[] { f, s } : new Token[] { }", span="54-54"];
m13_48 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="51-55"];
m13_49 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="53-54"];
m13_51 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="53-54"];
m13_55 [cluster="lambda expression", file="TokenPartitioner.cs", label="f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                   info.Item1 == DescriptorType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Take(MaybeExtensions.Return(info.Item2, items => items, 0)))\r\n                                        : new Token[] { } , new Token[] { })\r\n                            : new Token[] {}", span="66-71"];
m13_58 [cluster="lambda expression", file="TokenPartitioner.cs", label="info.Item1 == DescriptorType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Take(MaybeExtensions.Return(info.Item2, items => items, 0)))\r\n                                        : new Token[] { }", span="68-70"];
m13_54 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="65-71"];
m13_66 [cluster="lambda expression", file="TokenPartitioner.cs", label="t.Equals(f)", span="69-69"];
m13_56 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="65-71"];
m13_57 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="67-70"];
m13_59 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="67-70"];
m13_65 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="69-69"];
m13_69 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="69-69"];
m13_72 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="69-69"];
m13_67 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="69-69"];
m13_70 [cluster="lambda expression", file="TokenPartitioner.cs", label="v.IsValue()", span="69-69"];
m13_71 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="69-69"];
m13_73 [cluster="lambda expression", file="TokenPartitioner.cs", label=items, span="69-69"];
m13_74 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="69-69"];
m13_80 [cluster="lambda expression", file="TokenPartitioner.cs", label="f.IsName()\r\n                            ? CreateValue(f.Text, tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Select(x => x.Text).ToArray())\r\n                            : CreateValue(string.Empty)", span="81-83"];
m13_79 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="80-83"];
m13_85 [cluster="lambda expression", file="TokenPartitioner.cs", label="t.Equals(f)", span="82-82"];
m13_81 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="80-83"];
m13_84 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="82-82"];
m13_87 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="82-82"];
m13_86 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="82-82"];
m13_88 [cluster="lambda expression", file="TokenPartitioner.cs", label="v.IsValue()", span="82-82"];
m13_89 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="82-82"];
m13_91 [cluster="lambda expression", file="TokenPartitioner.cs", label="x.Text", span="82-82"];
m13_92 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="82-82"];
m13_0 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="16-16"];
m13_1 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs", label="var switches = PartitionSwitches(tokens, typeLookup)", prediction=33, span="20-20"];
m13_2 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs", label="var tokensExceptSwitches = tokens.Except(switches)", prediction=34, span="21-21"];
m13_3 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs", label="var scalars = PartitionScalars(tokensExceptSwitches, typeLookup)", prediction=35, span="22-22"];
m13_5 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs", label="var sequences = PartitionSequences(tokensExceptSwitchesAndScalars, typeLookup)", prediction=36, span="24-24"];
m13_9 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="return Tuple.Create(\r\n                    switches.Select(t => CreateValue(t.Text,''true''))\r\n                        .Concat(scalars.Pairwise((f, s) => CreateValue(f.Text, s.Text)))\r\n                        .Concat(SequenceTokensToKeyValuePairEnumerable(sequences)),\r\n                values.Select(t => t.Text),\r\n                errors);", span="29-34"];
m13_4 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs", label="var tokensExceptSwitchesAndScalars = tokensExceptSwitches.Except(scalars)", prediction=37, span="23-23"];
m13_6 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs", label="var tokensExceptSwitchesAndScalarsAndSeq = tokensExceptSwitchesAndScalars.Except(sequences)", prediction=38, span="25-25"];
m13_7 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs", label="var values = tokensExceptSwitchesAndScalarsAndSeq.Where(v => v.IsValue())", prediction=39, span="26-26"];
m13_8 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs", label="var errors = tokensExceptSwitchesAndScalarsAndSeq.Except(values)", prediction=40, span="27-27"];
m13_10 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="Exit CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="16-16"];
m13_63 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m13_60 [cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m13_19 [cluster="Unk.Concat", file="TokenPartitioner.cs", label="Entry Unk.Concat", span=""];
m13_14 [cluster="CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="Entry CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="60-60"];
m13_52 [cluster="CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="return from tseq in tokens.Pairwise(\r\n                (f, s) =>     \r\n                        f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                   info.Item1 == DescriptorType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Take(MaybeExtensions.Return(info.Item2, items => items, 0)))\r\n                                        : new Token[] { } , new Token[] { })\r\n                            : new Token[] {})\r\n                from t in tseq\r\n                select t;", span="64-73"];
m13_53 [cluster="CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="Exit CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="60-60"];
m13_77 [cluster="Unk.Pairwise", file="TokenPartitioner.cs", label="Entry Unk.Pairwise", span=""];
m13_61 [cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m13_20 [cluster="CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitioner.cs", label="Entry CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="76-76"];
m13_75 [cluster="CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitioner.cs", label="return from t in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName()\r\n                            ? CreateValue(f.Text, tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Select(x => x.Text).ToArray())\r\n                            : CreateValue(string.Empty))\r\n                   where t.Key.Length > 0 && t.Value.Any()\r\n                   select t;", span="79-85"];
m13_76 [cluster="CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitioner.cs", label="Exit CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="76-76"];
m13_17 [cluster="Unk.Select", file="TokenPartitioner.cs", label="Entry Unk.Select", span=""];
m13_83 [cluster="Unk.CreateValue", file="TokenPartitioner.cs", label="Entry Unk.CreateValue", span=""];
m13_16 [cluster="Unk.Except", file="TokenPartitioner.cs", label="Entry Unk.Except", span=""];
m13_25 [cluster="CommandLine.Core.Token.IsValue()", file="TokenPartitioner.cs", label="Entry CommandLine.Core.Token.IsValue()", span="77-77"];
m13_95 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m13_62 [cluster="CommandLine.Infrastructure.MaybeExtensions.Return<T1, T2>(CommandLine.Infrastructure.Maybe<T1>, System.Func<T1, T2>, T2)", file="TokenPartitioner.cs", label="Entry CommandLine.Infrastructure.MaybeExtensions.Return<T1, T2>(CommandLine.Infrastructure.Maybe<T1>, System.Func<T1, T2>, T2)", span="103-103"];
m13_82 [cluster="Unk.ToArray", file="TokenPartitioner.cs", label="Entry Unk.ToArray", span=""];
m13_39 [cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="TokenPartitioner.cs", label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="103-103"];
m13_64 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m13_96 [file="TokenPartitioner.cs", label=t, span=""];
m13_97 [file="TokenPartitioner.cs", label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", span=""];
m13_98 [file="TokenPartitioner.cs", label="CommandLine.Core.Token", span=""];
m13_99 [file="TokenPartitioner.cs", label="CommandLine.Core.Token", span=""];
m13_100 [file="TokenPartitioner.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m13_101 [file="TokenPartitioner.cs", label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", span=""];
m13_102 [file="TokenPartitioner.cs", label="CommandLine.Core.Token", span=""];
m13_103 [file="TokenPartitioner.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m13_104 [file="TokenPartitioner.cs", label="CommandLine.Core.Token", span=""];
m14_0 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="14-14"];
m14_1 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="var expectedSequence = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''i'', new[] {''10'', ''20'', ''30'', ''40''}) \r\n                }", span="17-20"];
m14_2 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", color=green, community=0, file="TokenPartitionerTests.cs", label="var specs =new[]\r\n                {\r\n                    new OptionSpecification(string.Empty, ''stringvalue'', false, string.Empty, -1, -1, null, typeof(string), string.Empty, string.Empty),\r\n                    new OptionSpecification(''i'', string.Empty, false, string.Empty, 3, 4, null, typeof(IEnumerable<int>), string.Empty, string.Empty)\r\n                }", prediction=41, span="21-25"];
m14_4 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="Assert.True(expectedSequence.All(a => result.Item1.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="34-34"];
m14_3 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="var result = TokenPartitioner.Partition(\r\n                new[] { Token.Name(''i''), Token.Value(''10''), Token.Value(''20''), Token.Value(''30''), Token.Value(''40'') },\r\n                name => TypeLookup.GetDescriptorInfo(name, specs, StringComparer.InvariantCulture)\r\n                )", span="28-31"];
m14_5 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="14-14"];
m14_6 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="TokenPartitionerTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m14_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", span="15-15"];
m14_12 [cluster="Unk.True", file="TokenPartitionerTests.cs", label="Entry Unk.True", span=""];
m14_16 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m14_11 [cluster="Unk.All", file="TokenPartitionerTests.cs", label="Entry Unk.All", span=""];
m14_21 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="34-34"];
m14_14 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="TypeLookup.GetDescriptorInfo(name, specs, StringComparer.InvariantCulture)", span="30-30"];
m14_13 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="30-30"];
m14_18 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="result.Item1.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="34-34"];
m14_17 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="34-34"];
m14_15 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="30-30"];
m14_19 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="34-34"];
m14_22 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="34-34"];
m14_23 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="34-34"];
m14_24 [cluster="string.Equals(string)", file="TokenPartitionerTests.cs", label="Entry string.Equals(string)", span="0-0"];
m14_8 [cluster="CommandLine.Core.Token.Name(string)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m14_10 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="16-16"];
m14_25 [cluster="Unk.SequenceEqual", file="TokenPartitionerTests.cs", label="Entry Unk.SequenceEqual", span=""];
m14_20 [cluster="Unk.Any", file="TokenPartitionerTests.cs", label="Entry Unk.Any", span=""];
m14_9 [cluster="CommandLine.Core.Token.Value(string)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.Token.Value(string)", span="26-26"];
m14_26 [file="TokenPartitionerTests.cs", label=specs, span=""];
m14_27 [file="TokenPartitionerTests.cs", label=result, span=""];
m14_28 [file="TokenPartitionerTests.cs", label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span=""];
n0 -> n3  [color=darkseagreen4, key=1, label="CommonMark.Syntax.StringPart", style=dashed];
n5 -> n126  [color=darkseagreen4, key=1, label=int, style=dashed];
n5 -> n129  [color=darkseagreen4, key=1, label=int, style=dashed];
n5 -> n130  [color=darkseagreen4, key=1, label=int, style=dashed];
n5 -> n134  [color=darkseagreen4, key=1, label=int, style=dashed];
n5 -> n140  [color=darkseagreen4, key=1, label=string, style=dashed];
n5 -> n143  [color=darkseagreen4, key=1, label=string, style=dashed];
n5 -> n153  [color=darkseagreen4, key=1, label=string, style=dashed];
n5 -> n159  [color=darkseagreen4, key=1, label=string, style=dashed];
n5 -> n160  [color=darkseagreen4, key=1, label=string, style=dashed];
n7 -> n10  [color=darkseagreen4, key=1, label="CommonMark.Syntax.StringPart", style=dashed];
n7 -> n14  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>", style=dashed];
n12 -> n14  [color=darkseagreen4, key=1, label=label, style=dashed];
n20 -> n24  [color=darkseagreen4, key=1, label=r, style=dashed];
n27 -> n30  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>", style=dashed];
n35 -> n40  [color=darkseagreen4, key=1, label=e, style=dashed];
n44 -> n47  [color=darkseagreen4, key=1, label=e, style=dashed];
n50 -> n53  [color=darkseagreen4, key=1, label=e, style=dashed];
n56 -> n58  [color=darkseagreen4, key=1, label=e, style=dashed];
n84 -> n86  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Inline", style=dashed];
n84 -> n88  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Inline", style=dashed];
n101 -> n110  [color=darkseagreen4, key=1, label=int, style=dashed];
n101 -> n118  [color=darkseagreen4, key=1, label=int, style=dashed];
n102 -> n108  [color=darkseagreen4, key=1, label=buf, style=dashed];
n106 -> n108  [color=darkseagreen4, key=1, label=i, style=dashed];
n106 -> n112  [color=darkseagreen4, key=1, label=i, style=dashed];
n106 -> n117  [color=darkseagreen4, key=1, label=i, style=dashed];
n103 -> n107  [color=darkseagreen4, key=1, label=len, style=dashed];
n103 -> n120  [color=darkseagreen4, key=1, label=len, style=dashed];
n113 -> n117  [color=darkseagreen4, key=1, label=i, style=dashed];
n104 -> n109  [color=darkseagreen4, key=1, label=cc, style=dashed];
n104 -> n110  [color=darkseagreen4, key=1, label=cc, style=dashed];
n104 -> n118  [color=darkseagreen4, key=1, label=cc, style=dashed];
n109 -> n109  [color=darkseagreen4, key=1, label=cc, style=dashed];
n109 -> n118  [color=darkseagreen4, key=1, label=cc, style=dashed];
n117 -> n117  [color=darkseagreen4, key=1, label=i, style=dashed];
n116 -> n118  [color=darkseagreen4, key=1, label=cc, style=dashed];
n125 -> n130  [color=darkseagreen4, key=1, label=int, style=dashed];
n125 -> n133  [color=darkseagreen4, key=1, label=int, style=dashed];
n125 -> n134  [color=darkseagreen4, key=1, label=int, style=dashed];
n125 -> n147  [color=darkseagreen4, key=1, label=int, style=dashed];
n125 -> n156  [color=darkseagreen4, key=1, label=int, style=dashed];
n125 -> n159  [color=darkseagreen4, key=1, label=int, style=dashed];
n125 -> n160  [color=darkseagreen4, key=1, label=int, style=dashed];
n129 -> n129  [color=darkseagreen4, key=1, label=int, style=dashed];
n129 -> n130  [color=darkseagreen4, key=1, label=int, style=dashed];
n129 -> n134  [color=darkseagreen4, key=1, label=int, style=dashed];
n129 -> n159  [color=darkseagreen4, key=1, label=int, style=dashed];
n138 -> n143  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
n138 -> n153  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
n138 -> n160  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
n139 -> n143  [color=darkseagreen4, key=1, label=pos, style=dashed];
n142 -> n144  [color=darkseagreen4, key=1, label=sb, style=dashed];
n142 -> n158  [color=darkseagreen4, key=1, label=sb, style=dashed];
n142 -> n160  [color=darkseagreen4, key=1, label=sb, style=dashed];
n142 -> n161  [color=darkseagreen4, key=1, label=sb, style=dashed];
n145 -> n147  [color=darkseagreen4, key=1, label=pos, style=dashed];
n149 -> n153  [color=darkseagreen4, key=1, label=pos, style=dashed];
n152 -> n158  [color=darkseagreen4, key=1, label=sb, style=dashed];
n152 -> n160  [color=darkseagreen4, key=1, label=sb, style=dashed];
n152 -> n161  [color=darkseagreen4, key=1, label=sb, style=dashed];
n154 -> n156  [color=darkseagreen4, key=1, label=pos, style=dashed];
n133 -> n133  [color=darkseagreen4, key=1, label=int, style=dashed];
n133 -> n134  [color=darkseagreen4, key=1, label=int, style=dashed];
n133 -> n147  [color=darkseagreen4, key=1, label=int, style=dashed];
n133 -> n156  [color=darkseagreen4, key=1, label=int, style=dashed];
n133 -> n159  [color=darkseagreen4, key=1, label=int, style=dashed];
n133 -> n160  [color=darkseagreen4, key=1, label=int, style=dashed];
n136 -> n141  [color=darkseagreen4, key=1, label=sb, style=dashed];
n136 -> n143  [color=darkseagreen4, key=1, label=sb, style=dashed];
n136 -> n144  [color=darkseagreen4, key=1, label=sb, style=dashed];
n136 -> n151  [color=darkseagreen4, key=1, label=sb, style=dashed];
n136 -> n153  [color=darkseagreen4, key=1, label=sb, style=dashed];
n136 -> n158  [color=darkseagreen4, key=1, label=sb, style=dashed];
n136 -> n160  [color=darkseagreen4, key=1, label=sb, style=dashed];
n136 -> n161  [color=darkseagreen4, key=1, label=sb, style=dashed];
n148 -> n160  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
n157 -> n160  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
n169 -> n172  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n169 -> n174  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n169 -> n180  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n170 -> n173  [color=darkseagreen4, key=1, label=ticklength, style=dashed];
n170 -> n179  [color=darkseagreen4, key=1, label=ticklength, style=dashed];
n170 -> n180  [color=darkseagreen4, key=1, label=ticklength, style=dashed];
n175 -> n180  [color=darkseagreen4, key=1, label=startpos, style=dashed];
n176 -> n180  [color=darkseagreen4, key=1, label=endpos, style=dashed];
n173 -> n173  [color=darkseagreen4, key=1, label=ticklength, style=dashed];
n173 -> n179  [color=darkseagreen4, key=1, label=ticklength, style=dashed];
n173 -> n180  [color=darkseagreen4, key=1, label=ticklength, style=dashed];
n183 -> n189  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n183 -> n199  [color=darkseagreen4, key=1, label=char, style=dashed];
n184 -> n189  [color=darkseagreen4, key=1, label=numdelims, style=dashed];
n184 -> n190  [color=darkseagreen4, key=1, label=numdelims, style=dashed];
n184 -> n192  [color=darkseagreen4, key=1, label=numdelims, style=dashed];
n184 -> n195  [color=darkseagreen4, key=1, label=numdelims, style=dashed];
n184 -> n202  [color=darkseagreen4, key=1, label=numdelims, style=dashed];
n186 -> n189  [color=darkseagreen4, key=1, label=startpos, style=dashed];
n187 -> n189  [color=darkseagreen4, key=1, label=len, style=dashed];
n190 -> n190  [color=darkseagreen4, key=1, label=numdelims, style=dashed];
n190 -> n192  [color=darkseagreen4, key=1, label=numdelims, style=dashed];
n190 -> n195  [color=darkseagreen4, key=1, label=numdelims, style=dashed];
n190 -> n202  [color=darkseagreen4, key=1, label=numdelims, style=dashed];
n198 -> n203  [color=darkseagreen4, key=1, label="out bool", style=dashed];
n200 -> n203  [color=darkseagreen4, key=1, label="out bool", style=dashed];
n197 -> n203  [color=darkseagreen4, key=1, label="out bool", style=dashed];
n201 -> n203  [color=darkseagreen4, key=1, label="out bool", style=dashed];
n205 -> n208  [color=darkseagreen4, key=1, label=int, style=dashed];
n205 -> n215  [color=darkseagreen4, key=1, label="CommonMark.Parser.InlineStack", style=dashed];
n205 -> n222  [color=darkseagreen4, key=1, label="CommonMark.Parser.InlineStack", style=dashed];
n205 -> n223  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n205 -> n230  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n207 -> n211  [color=darkseagreen4, key=1, label=openerDelims, style=dashed];
n209 -> n232  [color=darkseagreen4, key=1, label=useDelims, style=dashed];
n210 -> n232  [color=darkseagreen4, key=1, label=useDelims, style=dashed];
n235 -> n245  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n235 -> n255  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n237 -> n242  [color=darkseagreen4, key=1, label=numdelims, style=dashed];
n237 -> n244  [color=darkseagreen4, key=1, label=numdelims, style=dashed];
n237 -> n248  [color=darkseagreen4, key=1, label=can_open, style=dashed];
n239 -> n248  [color=darkseagreen4, key=1, label=can_close, style=dashed];
n247 -> n256  [color=darkseagreen4, key=1, label=inlText, style=dashed];
n249 -> n255  [color=darkseagreen4, key=1, label=istack, style=dashed];
n261 -> n270  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n263 -> n271  [color=darkseagreen4, key=1, label=inlText, style=dashed];
n264 -> n270  [color=darkseagreen4, key=1, label=istack, style=dashed];
n273 -> n285  [color=darkseagreen4, key=1, label="CommonMark.Parser.InlineStack", style=dashed];
n273 -> n288  [color=darkseagreen4, key=1, label="CommonMark.Parser.InlineStack", style=dashed];
n273 -> n289  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n273 -> n291  [color=darkseagreen4, key=1, label="CommonMark.Parser.InlineStack", style=dashed];
n273 -> n292  [color=darkseagreen4, key=1, label="CommonMark.Parser.InlineStack", style=dashed];
n273 -> n293  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n282 -> n285  [color=darkseagreen4, key=1, label=temp, style=dashed];
n282 -> n286  [color=darkseagreen4, key=1, label=temp, style=dashed];
n298 -> n311  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n301 -> n311  [color=darkseagreen4, key=1, label=istack, style=dashed];
n301 -> n314  [color=darkseagreen4, key=1, label=can_close, style=dashed];
n304 -> n309  [color=darkseagreen4, key=1, label=details, style=dashed];
n304 -> n311  [color=darkseagreen4, key=1, label=details, style=dashed];
n308 -> n311  [color=darkseagreen4, key=1, label=details, style=dashed];
n313 -> n316  [color=darkseagreen4, key=1, label=inlText, style=dashed];
n318 -> n486  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n321 -> n323  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n321 -> n327  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n321 -> n330  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n325 -> n328  [color=darkseagreen4, key=1, label=nextChar, style=dashed];
n325 -> n329  [color=darkseagreen4, key=1, label=nextChar, style=dashed];
n336 -> n352  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n336 -> n353  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n340 -> n343  [color=darkseagreen4, key=1, label=namedEntity, style=dashed];
n340 -> n347  [color=darkseagreen4, key=1, label=numericEntity, style=dashed];
n340 -> n352  [color=darkseagreen4, key=1, label=match, style=dashed];
n344 -> n346  [color=darkseagreen4, key=1, label=decoded, style=dashed];
n348 -> n350  [color=darkseagreen4, key=1, label=decoded, style=dashed];
n360 -> n374  [color=darkseagreen4, key=1, label=result, style=dashed];
n373 -> n374  [color=darkseagreen4, key=1, label=result, style=dashed];
n376 -> n387  [color=darkseagreen4, key=1, label=string, style=dashed];
n376 -> n392  [color=darkseagreen4, key=1, label=string, style=dashed];
n376 -> n406  [color=darkseagreen4, key=1, label=string, style=dashed];
n376 -> n414  [color=darkseagreen4, key=1, label=string, style=dashed];
n376 -> n418  [color=darkseagreen4, key=1, label=string, style=dashed];
n376 -> n422  [color=darkseagreen4, key=1, label=string, style=dashed];
n376 -> n423  [color=darkseagreen4, key=1, label=string, style=dashed];
n383 -> n386  [color=darkseagreen4, key=1, label=searchPos, style=dashed];
n383 -> n399  [color=darkseagreen4, key=1, label=searchPos, style=dashed];
n384 -> n394  [color=darkseagreen4, key=1, label=c, style=dashed];
n391 -> n421  [color=darkseagreen4, key=1, label=sb, style=dashed];
n391 -> n423  [color=darkseagreen4, key=1, label=sb, style=dashed];
n391 -> n424  [color=darkseagreen4, key=1, label=sb, style=dashed];
n397 -> n401  [color=darkseagreen4, key=1, label=namedEntity, style=dashed];
n397 -> n406  [color=darkseagreen4, key=1, label=match, style=dashed];
n397 -> n409  [color=darkseagreen4, key=1, label=numericEntity, style=dashed];
n397 -> n414  [color=darkseagreen4, key=1, label=match, style=dashed];
n397 -> n418  [color=darkseagreen4, key=1, label=match, style=dashed];
n405 -> n407  [color=darkseagreen4, key=1, label=sb, style=dashed];
n405 -> n421  [color=darkseagreen4, key=1, label=sb, style=dashed];
n405 -> n423  [color=darkseagreen4, key=1, label=sb, style=dashed];
n405 -> n424  [color=darkseagreen4, key=1, label=sb, style=dashed];
n413 -> n415  [color=darkseagreen4, key=1, label=sb, style=dashed];
n413 -> n421  [color=darkseagreen4, key=1, label=sb, style=dashed];
n413 -> n423  [color=darkseagreen4, key=1, label=sb, style=dashed];
n413 -> n424  [color=darkseagreen4, key=1, label=sb, style=dashed];
n417 -> n419  [color=darkseagreen4, key=1, label=sb, style=dashed];
n417 -> n421  [color=darkseagreen4, key=1, label=sb, style=dashed];
n417 -> n423  [color=darkseagreen4, key=1, label=sb, style=dashed];
n417 -> n424  [color=darkseagreen4, key=1, label=sb, style=dashed];
n378 -> n392  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
n378 -> n406  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
n378 -> n414  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
n378 -> n418  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
n378 -> n423  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
n382 -> n390  [color=darkseagreen4, key=1, label=sb, style=dashed];
n382 -> n392  [color=darkseagreen4, key=1, label=sb, style=dashed];
n382 -> n404  [color=darkseagreen4, key=1, label=sb, style=dashed];
n382 -> n406  [color=darkseagreen4, key=1, label=sb, style=dashed];
n382 -> n407  [color=darkseagreen4, key=1, label=sb, style=dashed];
n382 -> n412  [color=darkseagreen4, key=1, label=sb, style=dashed];
n382 -> n414  [color=darkseagreen4, key=1, label=sb, style=dashed];
n382 -> n415  [color=darkseagreen4, key=1, label=sb, style=dashed];
n382 -> n416  [color=darkseagreen4, key=1, label=sb, style=dashed];
n382 -> n418  [color=darkseagreen4, key=1, label=sb, style=dashed];
n382 -> n419  [color=darkseagreen4, key=1, label=sb, style=dashed];
n382 -> n421  [color=darkseagreen4, key=1, label=sb, style=dashed];
n382 -> n423  [color=darkseagreen4, key=1, label=sb, style=dashed];
n382 -> n424  [color=darkseagreen4, key=1, label=sb, style=dashed];
n386 -> n386  [color=darkseagreen4, key=1, label=searchPos, style=dashed];
n386 -> n392  [color=darkseagreen4, key=1, label=searchPos, style=dashed];
n399 -> n399  [color=darkseagreen4, key=1, label=searchPos, style=dashed];
n400 -> n406  [color=darkseagreen4, key=1, label=searchPos, style=dashed];
n400 -> n414  [color=darkseagreen4, key=1, label=searchPos, style=dashed];
n400 -> n418  [color=darkseagreen4, key=1, label=searchPos, style=dashed];
n393 -> n423  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
n402 -> n407  [color=darkseagreen4, key=1, label=decoded, style=dashed];
n410 -> n415  [color=darkseagreen4, key=1, label=decoded, style=dashed];
n408 -> n423  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
n420 -> n423  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
n428 -> n430  [color=darkseagreen4, key=1, label=string, style=dashed];
n431 -> n434  [color=darkseagreen4, key=1, label=string, style=dashed];
n437 -> n440  [color=darkseagreen4, key=1, label=string, style=dashed];
n437 -> n445  [color=darkseagreen4, key=1, label=string, style=dashed];
n441 -> n443  [color=darkseagreen4, key=1, label=a, style=dashed];
n447 -> n451  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n466 -> n468  [color=darkseagreen4, key=1, label=contents, style=dashed];
n479 -> n493  [color=darkseagreen4, key=1, label=c, style=dashed];
n494 -> n496  [color=darkseagreen4, key=1, label=label, style=dashed];
n498 -> n500  [color=darkseagreen4, key=1, label=details, style=dashed];
n509 -> n598  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n509 -> n601  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n509 -> n603  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n509 -> n611  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n509 -> n615  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n509 -> n619  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n510 -> n512  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n510 -> n514  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n510 -> n515  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n510 -> n516  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n511 -> n516  [color=darkseagreen4, key=1, label=nlpos, style=dashed];
n520 -> n545  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n520 -> n546  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n520 -> n550  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n520 -> n552  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n520 -> n559  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n549 -> n553  [color=darkseagreen4, key=1, label=endpos, style=dashed];
n568 -> n575  [color=darkseagreen4, key=1, label=subj, style=dashed];
n568 -> n580  [color=darkseagreen4, key=1, label=subj, style=dashed];
n569 -> n575  [color=darkseagreen4, key=1, label=len, style=dashed];
n572 -> n581  [color=darkseagreen4, key=1, label=first, style=dashed];
n584 -> n588  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n584 -> n591  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
n586 -> n588  [color=darkseagreen4, key=1, label=len, style=dashed];
n595 -> n608  [color=darkseagreen4, key=1, label=source, style=dashed];
n599 -> n602  [color=darkseagreen4, key=1, label=c, style=dashed];
n607 -> n615  [color=darkseagreen4, key=1, label=len, style=dashed];
n612 -> n617  [color=darkseagreen4, key=1, label=c, style=dashed];
n618 -> n620  [color=darkseagreen4, key=1, label=label, style=dashed];
n596 -> n598  [color=darkseagreen4, key=1, label=len, style=dashed];
n609 -> n615  [color=darkseagreen4, key=1, label=len, style=dashed];
n624 -> n658  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>", style=dashed];
n625 -> n633  [color=darkseagreen4, key=1, label=subj, style=dashed];
n625 -> n634  [color=darkseagreen4, key=1, label=subj, style=dashed];
n625 -> n636  [color=darkseagreen4, key=1, label=subj, style=dashed];
n625 -> n644  [color=darkseagreen4, key=1, label=subj, style=dashed];
n625 -> n652  [color=darkseagreen4, key=1, label=subj, style=dashed];
n625 -> n653  [color=darkseagreen4, key=1, label=subj, style=dashed];
n625 -> n654  [color=darkseagreen4, key=1, label=subj, style=dashed];
n625 -> n655  [color=darkseagreen4, key=1, label=subj, style=dashed];
n625 -> n656  [color=darkseagreen4, key=1, label=subj, style=dashed];
n625 -> n659  [color=darkseagreen4, key=1, label=subj, style=dashed];
n630 -> n658  [color=darkseagreen4, key=1, label=lab, style=dashed];
n641 -> n658  [color=darkseagreen4, key=1, label=url, style=dashed];
n648 -> n658  [color=darkseagreen4, key=1, label=title, style=dashed];
n651 -> n658  [color=darkseagreen4, key=1, label=title, style=dashed];
m3_24 -> m3_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_24 -> m3_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_24 -> m3_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_24 -> m3_29  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_24 -> m3_30  [color=green, key=1, label=lines, style=dashed];
m3_43 -> m3_45  [color=green, key=1, label=sut, style=dashed];
m3_46 -> m3_48  [color=green, key=1, label=lines, style=dashed];
m3_46 -> m3_49  [color=green, key=1, label=lines, style=dashed];
m3_46 -> m3_50  [color=green, key=1, label=lines, style=dashed];
m3_46 -> m3_51  [color=green, key=1, label=lines, style=dashed];
m3_58 -> m3_60  [color=darkseagreen4, key=1, label=sut, style=dashed];
m3_61 -> m3_63  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_61 -> m3_64  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_61 -> m3_65  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_61 -> m3_66  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_61 -> m3_67  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_136 -> m3_138  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_136 -> m3_139  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_136 -> m3_140  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_136 -> m3_141  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_136 -> m3_142  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_136 -> m3_143  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_136 -> m3_144  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_136 -> m3_145  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_165 -> m3_167  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_165 -> m3_168  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_165 -> m3_169  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_165 -> m3_170  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_165 -> m3_171  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_71 -> m3_73  [color=darkseagreen4, key=1, label=sut, style=dashed];
m3_74 -> m3_76  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_74 -> m3_77  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_74 -> m3_78  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_74 -> m3_79  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_74 -> m3_80  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_112 -> m3_115  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_112 -> m3_117  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_112 -> m3_119  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_112 -> m3_121  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_112 -> m3_123  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_112 -> m3_125  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_112 -> m3_129  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_8 -> m3_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_8 -> m3_11  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_8 -> m3_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_8 -> m3_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_8 -> m3_14  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_85 -> m3_113  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_85 -> m3_115  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_85 -> m3_117  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_85 -> m3_119  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_85 -> m3_121  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_85 -> m3_123  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_85 -> m3_125  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_85 -> m3_129  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_87 -> m3_89  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_87 -> m3_90  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_87 -> m3_91  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_87 -> m3_92  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_87 -> m3_93  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_87 -> m3_94  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_87 -> m3_95  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_153 -> m3_155  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_153 -> m3_156  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_153 -> m3_157  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_153 -> m3_158  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_153 -> m3_159  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_34 -> m4_36  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m4_35 -> m4_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_124 -> m4_126  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m4_125 -> m4_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_133 -> m4_135  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m4_134 -> m4_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1 -> m4_13  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m4_2 -> m4_4  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m4_3 -> m4_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_114 -> m4_116  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m4_115 -> m4_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_90 -> m4_95  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m4_90 -> m4_99  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m4_91 -> m4_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_95 -> m4_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_81 -> m4_84  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m4_83 -> m4_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_83 -> m4_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_150 -> m4_152  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m4_151 -> m4_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_63 -> m4_65  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m4_64 -> m4_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_103 -> m4_105  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m4_104 -> m4_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_25 -> m4_27  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m4_26 -> m4_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_16 -> m4_18  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m4_17 -> m4_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_142 -> m4_144  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m4_143 -> m4_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_51 -> m4_53  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m4_52 -> m4_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_42 -> m4_44  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m4_43 -> m4_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_73 -> m4_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_157 -> m4_13  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m4_158 -> m4_95  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m4_158 -> m4_99  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m5_0 -> m5_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_2 -> m6_15  [color=green, key=1, label="lambda expression", style=dashed];
m6_3 -> m6_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3 -> m6_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_4 -> m6_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_7 -> m8_15  [color=darkseagreen4, key=1, label=bool, style=dashed];
m8_22 -> m8_5  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m8_22 -> m8_9  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m8_22 -> m8_10  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m8_22 -> m8_13  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m8_22 -> m8_16  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m8_22 -> m8_17  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m9_8 -> m9_18  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m9_12 -> m9_15  [color=green, key=1, label=spec, style=dashed];
m9_16 -> m9_18  [color=darkseagreen4, key=1, label=va, style=dashed];
m10_15 -> m10_17  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m10_15 -> m10_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m10_16 -> m10_24  [color=darkseagreen4, key=1, label=guard, style=dashed];
m10_16 -> m10_18  [color=darkseagreen4, key=1, label=guard, style=dashed];
m10_17 -> m10_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_0 -> m10_3  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m10_6 -> m10_9  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m10_27 -> m10_30  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m10_34 -> m10_36  [color=darkseagreen4, key=1, label=min, style=dashed];
m10_35 -> m10_37  [color=darkseagreen4, key=1, label=max, style=dashed];
m10_43 -> m10_24  [color=darkseagreen4, key=1, label=guard, style=dashed];
m11_4 -> m11_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_4 -> m11_7  [color=darkseagreen4, key=1, label=options, style=dashed];
m11_5 -> m11_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_7 -> m11_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_33 -> m11_39  [color=green, key=1, label="lambda expression", style=dashed];
m11_33 -> m11_35  [color=green, key=1, label=options, style=dashed];
m11_35 -> m11_43  [color=green, key=1, label="lambda expression", style=dashed];
m11_52 -> m11_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_52 -> m11_54  [color=darkseagreen4, key=1, label=options, style=dashed];
m11_54 -> m11_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_13 -> m12_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_13 -> m12_94  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_88 -> m12_91  [color=darkseagreen4, key=1, label=text, style=dashed];
m12_89 -> m12_93  [color=darkseagreen4, key=1, label=equalIndex, style=dashed];
m12_96 -> m12_98  [color=darkseagreen4, key=1, label=parts, style=dashed];
m12_5 -> m12_7  [color=green, key=1, label=tokens, style=dashed];
m12_3 -> m12_22  [color=darkseagreen4, key=1, label=errors, style=dashed];
m12_3 -> m12_7  [color=green, key=1, label=errors, style=dashed];
m12_4 -> m12_22  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m12_7 -> m12_7  [color=green, key=1, label=t, style=dashed];
m12_25 -> m12_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m12_25 -> m12_32  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m12_28 -> m12_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_29 -> m12_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_29 -> m12_31  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m12_30 -> m12_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_30 -> m12_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_30 -> m12_55  [color=darkseagreen4, key=1, label=values, style=dashed];
m12_31 -> m12_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_14 -> m12_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_14 -> m12_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_14 -> m12_72  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m12_60 -> m12_65  [color=darkseagreen4, key=1, label=text, style=dashed];
m12_60 -> m12_70  [color=darkseagreen4, key=1, label=text, style=dashed];
m12_60 -> m12_75  [color=darkseagreen4, key=1, label=text, style=dashed];
m12_60 -> m12_76  [color=darkseagreen4, key=1, label=text, style=dashed];
m12_70 -> m12_72  [color=darkseagreen4, key=1, label=c, style=dashed];
m12_70 -> m12_73  [color=darkseagreen4, key=1, label=c, style=dashed];
m12_69 -> m12_72  [color=darkseagreen4, key=1, label=seen, style=dashed];
m12_69 -> m12_73  [color=darkseagreen4, key=1, label=seen, style=dashed];
m12_69 -> m12_75  [color=darkseagreen4, key=1, label=seen, style=dashed];
m12_69 -> m12_76  [color=darkseagreen4, key=1, label=seen, style=dashed];
m12_71 -> m12_74  [color=darkseagreen4, key=1, label=n, style=dashed];
m12_104 -> m12_22  [color=darkseagreen4, key=1, label=errors, style=dashed];
m12_105 -> m12_55  [color=darkseagreen4, key=1, label=values, style=dashed];
m13_13 -> m13_47  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", style=dashed];
m13_44 -> m13_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_44 -> m13_44  [color=darkseagreen4, key=1, label=tseq, style=dashed];
m13_36 -> m13_36  [color=darkseagreen4, key=1, label=t, style=dashed];
m13_36 -> m13_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_36 -> m13_41  [color=darkseagreen4, key=1, label=t, style=dashed];
m13_47 -> m13_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_46 -> m13_50  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m13_55 -> m13_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_58 -> m13_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_58 -> m13_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_58 -> m13_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_54 -> m13_58  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m13_54 -> m13_66  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m13_80 -> m13_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_80 -> m13_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_80 -> m13_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_79 -> m13_85  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m13_1 -> m13_9  [color=green, key=1, label=switches, style=dashed];
m13_3 -> m13_9  [color=green, key=1, label=scalars, style=dashed];
m13_5 -> m13_9  [color=green, key=1, label=sequences, style=dashed];
m13_9 -> m13_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_9 -> m13_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_9 -> m13_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_7 -> m13_22  [color=green, key=1, label="lambda expression", style=dashed];
m13_7 -> m13_9  [color=green, key=1, label=values, style=dashed];
m13_14 -> m13_55  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m13_14 -> m13_58  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m13_52 -> m13_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_52 -> m13_52  [color=darkseagreen4, key=1, label=tseq, style=dashed];
m13_20 -> m13_80  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m13_75 -> m13_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_75 -> m13_75  [color=darkseagreen4, key=1, label=t, style=dashed];
m13_96 -> m13_41  [color=darkseagreen4, key=1, label=t, style=dashed];
m13_97 -> m13_47  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", style=dashed];
m13_98 -> m13_50  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m13_99 -> m13_50  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m13_100 -> m13_55  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m13_100 -> m13_58  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m13_101 -> m13_55  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", style=dashed];
m13_102 -> m13_58  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m13_102 -> m13_66  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m13_103 -> m13_80  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m13_104 -> m13_85  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m14_1 -> m14_4  [color=darkseagreen4, key=1, label=expectedSequence, style=dashed];
m14_2 -> m14_14  [color=green, key=1, label=specs, style=dashed];
m14_4 -> m14_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_3 -> m14_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_3 -> m14_18  [color=darkseagreen4, key=1, label=result, style=dashed];
m14_18 -> m14_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_18 -> m14_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m14_22 -> m14_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m14_26 -> m14_14  [color=darkseagreen4, key=1, label=specs, style=dashed];
m14_27 -> m14_18  [color=darkseagreen4, key=1, label=result, style=dashed];
m14_28 -> m14_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
}
