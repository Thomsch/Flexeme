digraph  {
n21 [label=string, span=""];
n0 [label="Entry Humanizer.EnumDehumanizeExtensions.DehumanizeTo<TTargetEnum>(string)", span="18-18", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeTo<TTargetEnum>(string)"];
n1 [label="return (TTargetEnum)DehumanizeToPrivate(input, typeof(TTargetEnum), OnNoMatch.ThrowsException);", span="21-21", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeTo<TTargetEnum>(string)"];
n2 [label="Exit Humanizer.EnumDehumanizeExtensions.DehumanizeTo<TTargetEnum>(string)", span="18-18", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeTo<TTargetEnum>(string)"];
n3 [label="Entry Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)", span="38-38", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)"];
n4 [label="Entry Humanizer.EnumDehumanizeExtensions.DehumanizeTo(string, System.Type, Humanizer.OnNoMatch)", span="33-33", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeTo(string, System.Type, Humanizer.OnNoMatch)"];
n5 [label="return (Enum)DehumanizeToPrivate(input, targetEnum, onNoMatch);", span="35-35", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeTo(string, System.Type, Humanizer.OnNoMatch)"];
n6 [label="Exit Humanizer.EnumDehumanizeExtensions.DehumanizeTo(string, System.Type, Humanizer.OnNoMatch)", span="33-33", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeTo(string, System.Type, Humanizer.OnNoMatch)"];
n7 [label="var match = Enum.GetValues(targetEnum).Cast<Enum>().FirstOrDefault(value => string.Equals(value.Humanize(), input, StringComparison.OrdinalIgnoreCase))", span="40-40", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)"];
n17 [label="string.Equals(value.Humanize(), input, StringComparison.OrdinalIgnoreCase)", span="40-40", cluster="lambda expression"];
n8 [label="match == null && onNoMatch == OnNoMatch.ThrowsException", span="42-42", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)"];
n9 [label="throw new NoMatchFoundException(''Couldn't find any enum member that matches the string '' + input);", span="43-43", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)"];
n12 [label="Entry System.Enum.GetValues(System.Type)", span="0-0", cluster="System.Enum.GetValues(System.Type)"];
n13 [label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.Cast<TResult>()"];
n14 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault"];
n16 [label="Entry lambda expression", span="40-40", cluster="lambda expression"];
n10 [label="return match;", span="45-45", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)"];
n11 [label="Exit Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)", span="38-38", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)"];
n15 [label="Entry Humanizer.NoMatchFoundException.NoMatchFoundException(string)", span="14-14", cluster="Humanizer.NoMatchFoundException.NoMatchFoundException(string)"];
n18 [label="Exit lambda expression", span="40-40", cluster="lambda expression"];
n19 [label="Entry System.Enum.Humanize()", span="22-22", cluster="System.Enum.Humanize()"];
n20 [label="Entry string.Equals(string, string, System.StringComparison)", span="0-0", cluster="string.Equals(string, string, System.StringComparison)"];
m0_3 [label="Entry CommandLine.Tests.Unit.ParserSettingsTests.DisposeTrackingStringWriter.Dispose(bool)", span="22-22", cluster="CommandLine.Tests.Unit.ParserSettingsTests.DisposeTrackingStringWriter.Dispose(bool)", file="ParserSettingsTests.cs"];
m0_4 [label="Disposed = true", span="24-24", cluster="CommandLine.Tests.Unit.ParserSettingsTests.DisposeTrackingStringWriter.Dispose(bool)", color=green, community=0, file="ParserSettingsTests.cs"];
m0_5 [label="base.Dispose(disposing)", span="25-25", cluster="CommandLine.Tests.Unit.ParserSettingsTests.DisposeTrackingStringWriter.Dispose(bool)", color=green, community=0, file="ParserSettingsTests.cs"];
m0_6 [label="Exit CommandLine.Tests.Unit.ParserSettingsTests.DisposeTrackingStringWriter.Dispose(bool)", span="22-22", cluster="CommandLine.Tests.Unit.ParserSettingsTests.DisposeTrackingStringWriter.Dispose(bool)", file="ParserSettingsTests.cs"];
m0_7 [label="Entry System.IO.StringWriter.Dispose(bool)", span="0-0", cluster="System.IO.StringWriter.Dispose(bool)", file="ParserSettingsTests.cs"];
m0_14 [label="Entry CommandLine.ParserSettings.ParserSettings()", span="29-29", cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettingsTests.cs"];
m0_8 [label="Entry CommandLine.Tests.Unit.ParserSettingsTests.Disposal_does_not_dispose_HelpWriter()", span="30-30", cluster="CommandLine.Tests.Unit.ParserSettingsTests.Disposal_does_not_dispose_HelpWriter()", file="ParserSettingsTests.cs"];
m0_9 [label="DisposeTrackingStringWriter textWriter = new DisposeTrackingStringWriter()", span="32-32", cluster="CommandLine.Tests.Unit.ParserSettingsTests.Disposal_does_not_dispose_HelpWriter()", color=green, community=0, file="ParserSettingsTests.cs"];
m0_10 [label="ParserSettings parserSettings = new ParserSettings()", span="34-34", cluster="CommandLine.Tests.Unit.ParserSettingsTests.Disposal_does_not_dispose_HelpWriter()", color=green, community=0, file="ParserSettingsTests.cs"];
m0_11 [label="parserSettings.HelpWriter = textWriter", span="36-36", cluster="CommandLine.Tests.Unit.ParserSettingsTests.Disposal_does_not_dispose_HelpWriter()", color=green, community=0, file="ParserSettingsTests.cs"];
m0_12 [label="textWriter.Disposed.Should().BeFalse(''not disposed'')", span="39-39", cluster="CommandLine.Tests.Unit.ParserSettingsTests.Disposal_does_not_dispose_HelpWriter()", color=green, community=0, file="ParserSettingsTests.cs"];
m0_13 [label="Exit CommandLine.Tests.Unit.ParserSettingsTests.Disposal_does_not_dispose_HelpWriter()", span="30-30", cluster="CommandLine.Tests.Unit.ParserSettingsTests.Disposal_does_not_dispose_HelpWriter()", file="ParserSettingsTests.cs"];
m0_16 [label="Entry Unk.BeFalse", span="", cluster="Unk.BeFalse", file="ParserSettingsTests.cs"];
m0_0 [label="Entry CommandLine.Tests.Unit.ParserSettingsTests.DisposeTrackingStringWriter.DisposeTrackingStringWriter()", span="15-15", cluster="CommandLine.Tests.Unit.ParserSettingsTests.DisposeTrackingStringWriter.DisposeTrackingStringWriter()", file="ParserSettingsTests.cs"];
m0_1 [label="Disposed = false", span="17-17", cluster="CommandLine.Tests.Unit.ParserSettingsTests.DisposeTrackingStringWriter.DisposeTrackingStringWriter()", color=green, community=0, file="ParserSettingsTests.cs"];
m0_2 [label="Exit CommandLine.Tests.Unit.ParserSettingsTests.DisposeTrackingStringWriter.DisposeTrackingStringWriter()", span="15-15", cluster="CommandLine.Tests.Unit.ParserSettingsTests.DisposeTrackingStringWriter.DisposeTrackingStringWriter()", file="ParserSettingsTests.cs"];
m0_15 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ParserSettingsTests.cs"];
m0_17 [label="CommandLine.Tests.Unit.ParserSettingsTests.DisposeTrackingStringWriter", span="", file="ParserSettingsTests.cs"];
n21 -> n17  [key=1, style=dashed, color=darkseagreen4, label=string];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n2 -> n0  [key=0, style=bold, color=blue];
n3 -> n7  [key=0, style=solid];
n3 -> n17  [key=1, style=dashed, color=darkseagreen4, label=string];
n3 -> n8  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.OnNoMatch"];
n3 -> n9  [key=1, style=dashed, color=darkseagreen4, label=string];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n3  [key=2, style=dotted];
n6 -> n4  [key=0, style=bold, color=blue];
n7 -> n8  [key=0, style=solid];
n7 -> n12  [key=2, style=dotted];
n7 -> n13  [key=2, style=dotted];
n7 -> n14  [key=2, style=dotted];
n7 -> n16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n7 -> n10  [key=1, style=dashed, color=darkseagreen4, label=match];
n17 -> n18  [key=0, style=solid];
n17 -> n19  [key=2, style=dotted];
n17 -> n20  [key=2, style=dotted];
n8 -> n9  [key=0, style=solid];
n8 -> n10  [key=0, style=solid];
n9 -> n11  [key=0, style=solid];
n9 -> n15  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n11 -> n3  [key=0, style=bold, color=blue];
n18 -> n16  [key=0, style=bold, color=blue];
m0_3 -> m0_4  [key=0, style=solid, color=green];
m0_3 -> m0_5  [key=1, style=dashed, color=green, label=bool];
m0_4 -> m0_5  [key=0, style=solid, color=green];
m0_5 -> m0_6  [key=0, style=solid, color=green];
m0_5 -> m0_7  [key=2, style=dotted, color=green];
m0_6 -> m0_3  [key=0, style=bold, color=blue];
m0_8 -> m0_9  [key=0, style=solid, color=green];
m0_9 -> m0_10  [key=0, style=solid, color=green];
m0_9 -> m0_0  [key=2, style=dotted, color=green];
m0_9 -> m0_11  [key=1, style=dashed, color=green, label=textWriter];
m0_9 -> m0_12  [key=1, style=dashed, color=green, label=textWriter];
m0_10 -> m0_11  [key=0, style=solid, color=green];
m0_10 -> m0_14  [key=2, style=dotted, color=green];
m0_11 -> m0_12  [key=0, style=solid, color=green];
m0_12 -> m0_13  [key=0, style=solid, color=green];
m0_12 -> m0_15  [key=2, style=dotted, color=green];
m0_12 -> m0_16  [key=2, style=dotted, color=green];
m0_13 -> m0_8  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_17 -> m0_1  [key=1, style=dashed, color=green, label="CommandLine.Tests.Unit.ParserSettingsTests.DisposeTrackingStringWriter"];
m0_17 -> m0_4  [key=1, style=dashed, color=green, label="CommandLine.Tests.Unit.ParserSettingsTests.DisposeTrackingStringWriter"];
m0_17 -> m0_5  [key=1, style=dashed, color=green, label="CommandLine.Tests.Unit.ParserSettingsTests.DisposeTrackingStringWriter"];
}
