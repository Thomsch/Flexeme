digraph  {
n62 [label="System.StringComparer", span=""];
n63 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
n64 [label="System.Collections.Generic.IEnumerable<string>", span=""];
n65 [label="System.StringComparer", span=""];
n66 [label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span=""];
n67 [label=string, span=""];
n68 [label="System.StringComparer", span=""];
n0 [label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n1 [label="return Choose(\r\n                (args, optionSpecs) => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer)),\r\n                types,\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="18-23", cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n5 [label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="19-19", cluster="lambda expression"];
n9 [label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="19-19", cluster="lambda expression"];
n2 [label="Exit CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n3 [label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="26-26", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n4 [label="Entry lambda expression", span="19-19", cluster="lambda expression"];
n6 [label="Exit lambda expression", span="19-19", cluster="lambda expression"];
n7 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)"];
n8 [label="Entry lambda expression", span="19-19", cluster="lambda expression"];
n10 [label="Exit lambda expression", span="19-19", cluster="lambda expression"];
n11 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)"];
n12 [label="var verbs = Verb.SelectFromTypes(types)", span="33-33", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n13 [label="return arguments.Empty()\r\n                ? ParserResult.Create<object>(\r\n                    ParserResultType.Verbs, new NullInstance(), new[] { new NoVerbSelectedError() }, Maybe.Just(types))\r\n                : nameComparer.Equals(''help'', arguments.First())\r\n                   ? ParserResult.Create<object>(\r\n                        ParserResultType.Verbs,\r\n                        new NullInstance(), new[] { CreateHelpVerbRequestedError(\r\n                            verbs,\r\n                            arguments.Skip(1).SingleOrDefault() ?? string.Empty,\r\n                            nameComparer) }, Maybe.Just(types))\r\n                   : MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture);", span="35-45", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n15 [label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)"];
n14 [label="Exit CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="26-26", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n16 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="62-62", cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()"];
n17 [label="Entry CommandLine.NullInstance.NullInstance()", span="9-9", cluster="CommandLine.NullInstance.NullInstance()"];
n18 [label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="406-406", cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()"];
n19 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)"];
n20 [label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", span="105-105", cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)"];
n21 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()"];
n22 [label="Entry System.StringComparer.Equals(string, string)", span="0-0", cluster="System.StringComparer.Equals(string, string)"];
n23 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)"];
n24 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()"];
n25 [label="Entry CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="69-69", cluster="CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)"];
n26 [label="Entry CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="48-48", cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n27 [label="return verbs.Any(a => nameComparer.Equals(a.Item1.Name, arguments.First()))\r\n                ? InstanceBuilder.Build(\r\n                    Maybe.Just<Func<object>>(() => Activator.CreateInstance(verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2)),\r\n                    tokenizer,\r\n                    arguments.Skip(1),\r\n                    nameComparer,\r\n                    parsingCulture)\r\n                : ParserResult.Create<object>(\r\n                    ParserResultType.Verbs,\r\n                    new NullInstance(),\r\n                    new[] { new BadVerbSelectedError(arguments.First()) },\r\n                    Maybe.Just(verbs.Select(v => v.Item2)));", span="55-66", cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n36 [label="nameComparer.Equals(a.Item1.Name, arguments.First())", span="55-55", cluster="lambda expression"];
n39 [label="Activator.CreateInstance(verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2)", span="57-57", cluster="lambda expression"];
n44 [label="nameComparer.Equals(v.Item1.Name, arguments.First())", span="57-57", cluster="lambda expression"];
n28 [label="Exit CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="48-48", cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n29 [label="Entry Unk.Any", span="", cluster="Unk.Any"];
n30 [label="Entry Unk.>", span="", cluster="Unk.>"];
n31 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="34-34", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n32 [label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="342-342", cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)"];
n33 [label="Entry Unk.Select", span="", cluster="Unk.Select"];
n34 [label="Entry Unk.Just", span="", cluster="Unk.Just"];
n35 [label="Entry lambda expression", span="55-55", cluster="lambda expression"];
n38 [label="Entry lambda expression", span="57-57", cluster="lambda expression"];
n46 [label="Entry lambda expression", span="66-66", cluster="lambda expression"];
n37 [label="Exit lambda expression", span="55-55", cluster="lambda expression"];
n40 [label="Exit lambda expression", span="57-57", cluster="lambda expression"];
n41 [label="Entry Unk.Single", span="", cluster="Unk.Single"];
n42 [label="Entry Unk.CreateInstance", span="", cluster="Unk.CreateInstance"];
n43 [label="Entry lambda expression", span="57-57", cluster="lambda expression"];
n45 [label="Exit lambda expression", span="57-57", cluster="lambda expression"];
n47 [label="v.Item2", span="66-66", cluster="lambda expression"];
n48 [label="Exit lambda expression", span="66-66", cluster="lambda expression"];
n49 [label="return verb.Length > 0\r\n                      ? verbs.SingleOrDefault(v => nameComparer.Equals(v.Item1.Name, verb))\r\n                             .ToMaybe()\r\n                             .Return(\r\n                                 v => new HelpVerbRequestedError(v.Item1.Name, v.Item2, true),\r\n                                 new HelpVerbRequestedError(null, null, false))\r\n                      : new HelpVerbRequestedError(null, null, false);", span="74-80", cluster="CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)"];
n56 [label="nameComparer.Equals(v.Item1.Name, verb)", span="75-75", cluster="lambda expression"];
n50 [label="Exit CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="69-69", cluster="CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)"];
n51 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault"];
n52 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe"];
n53 [label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="368-368", cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)"];
n54 [label="Entry Unk.Return", span="", cluster="Unk.Return"];
n55 [label="Entry lambda expression", span="75-75", cluster="lambda expression"];
n58 [label="Entry lambda expression", span="78-78", cluster="lambda expression"];
n57 [label="Exit lambda expression", span="75-75", cluster="lambda expression"];
n59 [label="new HelpVerbRequestedError(v.Item1.Name, v.Item2, true)", span="78-78", cluster="lambda expression"];
n60 [label="Exit lambda expression", span="78-78", cluster="lambda expression"];
n61 [label="Entry HelpVerbRequestedError.cstr", span="", cluster="HelpVerbRequestedError.cstr"];
m1_39 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="SpecificationPropertyRules.cs"];
m1_10 [label="Entry CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", span="62-62", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="SpecificationPropertyRules.cs"];
m1_14 [label="var testWriter = new StringWriter()", span="68-68", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", color=green, community=0, file="SpecificationPropertyRules.cs"];
m1_13 [label="var options = new OptionsWithVerbsHelp()", span="67-67", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="SpecificationPropertyRules.cs"];
m1_15 [label="ReflectionUtil.AssemblyFromWhichToPullInformation = Assembly.GetExecutingAssembly()", span="69-69", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="SpecificationPropertyRules.cs"];
m1_16 [label="var parser = new Parser(with => with.HelpWriter = testWriter)", span="70-70", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="SpecificationPropertyRules.cs"];
m1_19 [label="var helpText = testWriter.ToString()", span="80-80", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="SpecificationPropertyRules.cs"];
m1_26 [label="invokedVerbInstance.Should().Be(null)", span="89-89", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", color=green, community=0, file="SpecificationPropertyRules.cs"];
m1_17 [label="var result = parser.ParseArguments(new string[] { ''clone'', ''--no_hardlinks'' }, options,\r\n                (verb, subOptions) =>\r\n                    {\r\n                        invokedVerb = verb;\r\n                        invokedVerbInstance = subOptions;\r\n                    })", span="71-76", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="SpecificationPropertyRules.cs"];
m1_25 [label="invokedVerb.Should().Be(''clone'')", span="88-88", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="SpecificationPropertyRules.cs"];
m1_12 [label="object invokedVerbInstance = null", span="65-65", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="SpecificationPropertyRules.cs"];
m1_18 [label="result.Should().BeFalse()", span="78-78", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="SpecificationPropertyRules.cs"];
m1_20 [label="Console.WriteLine(helpText)", span="81-81", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="SpecificationPropertyRules.cs"];
m1_21 [label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="82-82", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="SpecificationPropertyRules.cs"];
m1_11 [label="string invokedVerb = null", span="64-64", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="SpecificationPropertyRules.cs"];
m1_24 [label="lines[7].Trim().Should().Be(''-q, --quiet       Suppress summary message.'')", span="86-86", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="SpecificationPropertyRules.cs"];
m1_22 [label="lines[5].Trim().Should().Be(''--no-hardlinks    Optimize the cloning process from a repository on a local'')", span="84-84", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="SpecificationPropertyRules.cs"];
m1_23 [label="lines[6].Trim().Should().Be(''filesystem by copying files.'')", span="85-85", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="SpecificationPropertyRules.cs"];
m1_27 [label="Exit CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", span="62-62", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="SpecificationPropertyRules.cs"];
m1_3 [label="Entry CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", span="121-121", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="SpecificationPropertyRules.cs"];
m1_70 [label="var testWriter = new StringWriter()", span="124-124", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="SpecificationPropertyRules.cs"];
m1_74 [label="result.Should().BeFalse()", span="132-132", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="SpecificationPropertyRules.cs"];
m1_78 [label="lines[5].Trim().Should().Be(''add       Add file contents to the index.'')", span="138-138", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="SpecificationPropertyRules.cs"];
m1_79 [label="lines[6].Trim().Should().Be(''commit    Record changes to the repository.'')", span="139-139", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="SpecificationPropertyRules.cs"];
m1_80 [label="lines[7].Trim().Should().Be(''clone     Clone a repository into a new directory.'')", span="140-140", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="SpecificationPropertyRules.cs"];
m1_69 [label="var options = new OptionsWithVerbsHelp()", span="123-123", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="SpecificationPropertyRules.cs"];
m1_71 [label="ReflectionUtil.AssemblyFromWhichToPullInformation = Assembly.GetExecutingAssembly()", span="125-125", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="SpecificationPropertyRules.cs"];
m1_72 [label="var parser = new Parser(with => with.HelpWriter = testWriter)", span="126-126", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="SpecificationPropertyRules.cs"];
m1_75 [label="var helpText = testWriter.ToString()", span="134-134", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="SpecificationPropertyRules.cs"];
m1_73 [label="var result = parser.ParseArguments(args, options,\r\n                (_, __) =>\r\n                    {\r\n                    })", span="127-130", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="SpecificationPropertyRules.cs"];
m1_77 [label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="136-136", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="SpecificationPropertyRules.cs"];
m1_76 [label="Console.WriteLine(helpText)", span="135-135", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="SpecificationPropertyRules.cs"];
m1_81 [label="Exit CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", span="121-121", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="SpecificationPropertyRules.cs"];
m1_35 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="SpecificationPropertyRules.cs"];
m1_29 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="SpecificationPropertyRules.cs"];
m1_30 [label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0", cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="SpecificationPropertyRules.cs"];
m1_31 [label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="86-86", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="SpecificationPropertyRules.cs"];
m1_4 [label="Entry CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_prints_help_index()", span="50-50", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_prints_help_index()", file="SpecificationPropertyRules.cs"];
m1_5 [label="DoCoreTestForIndex(new string[] {''help''})", span="52-52", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_prints_help_index()", file="SpecificationPropertyRules.cs"];
m1_6 [label="Exit CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_prints_help_index()", span="50-50", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_prints_help_index()", file="SpecificationPropertyRules.cs"];
m1_38 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()", file="SpecificationPropertyRules.cs"];
m1_34 [label="Entry Unk.BeFalse", span="", cluster="Unk.BeFalse", file="SpecificationPropertyRules.cs"];
m1_85 [label="Entry lambda expression", span="128-130", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m1_41 [label="with.HelpWriter = testWriter", span="70-70", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m1_40 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m1_42 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m1_43 [label="Entry lambda expression", span="72-76", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m1_63 [label="with.HelpWriter = testWriter", span="102-102", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m1_83 [label="with.HelpWriter = testWriter", span="126-126", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m1_46 [label="Exit lambda expression", span="72-76", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m1_44 [label="invokedVerb = verb", span="74-74", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m1_45 [label="invokedVerbInstance = subOptions", span="75-75", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m1_62 [label="Entry lambda expression", span="102-102", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m1_64 [label="Exit lambda expression", span="102-102", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m1_82 [label="Entry lambda expression", span="126-126", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m1_84 [label="Exit lambda expression", span="126-126", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m1_65 [label="Entry lambda expression", span="104-108", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m1_68 [label="Exit lambda expression", span="104-108", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m1_66 [label="invokedVerb = verb", span="106-106", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m1_67 [label="invokedVerbInstance = subOptions", span="107-107", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m1_86 [label="Exit lambda expression", span="128-130", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m1_47 [label="Entry CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", span="94-94", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="SpecificationPropertyRules.cs"];
m1_51 [label="var testWriter = new StringWriter()", span="100-100", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="SpecificationPropertyRules.cs"];
m1_55 [label="result.Should().BeFalse()", span="110-110", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="SpecificationPropertyRules.cs"];
m1_59 [label="invokedVerb.Should().Be(''help'')", span="116-116", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="SpecificationPropertyRules.cs"];
m1_60 [label="invokedVerbInstance.Should().Be(null)", span="117-117", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="SpecificationPropertyRules.cs"];
m1_50 [label="var options = new OptionsWithVerbsHelp()", span="99-99", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="SpecificationPropertyRules.cs"];
m1_52 [label="ReflectionUtil.AssemblyFromWhichToPullInformation = Assembly.GetExecutingAssembly()", span="101-101", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="SpecificationPropertyRules.cs"];
m1_53 [label="var parser = new Parser(with => with.HelpWriter = testWriter)", span="102-102", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="SpecificationPropertyRules.cs"];
m1_56 [label="var helpText = testWriter.ToString()", span="112-112", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="SpecificationPropertyRules.cs"];
m1_48 [label="string invokedVerb = null", span="96-96", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="SpecificationPropertyRules.cs"];
m1_49 [label="object invokedVerbInstance = null", span="97-97", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="SpecificationPropertyRules.cs"];
m1_54 [label="var result = parser.ParseArguments(new string[] {''help'', ''add''}, options,\r\n                (verb, subOptions) =>\r\n                    {\r\n                        invokedVerb = verb;\r\n                        invokedVerbInstance = subOptions;\r\n                    })", span="103-108", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="SpecificationPropertyRules.cs"];
m1_58 [label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="114-114", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="SpecificationPropertyRules.cs"];
m1_57 [label="Console.WriteLine(helpText)", span="113-113", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="SpecificationPropertyRules.cs"];
m1_61 [label="Exit CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", span="94-94", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="SpecificationPropertyRules.cs"];
m1_32 [label="Entry CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", span="162-162", cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="SpecificationPropertyRules.cs"];
m1_7 [label="Entry CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_bad_help_prints_help_index()", span="56-56", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_bad_help_prints_help_index()", file="SpecificationPropertyRules.cs"];
m1_8 [label="DoCoreTestForIndex(new string[] { ''help'', ''undefined'' })", span="58-58", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_bad_help_prints_help_index()", file="SpecificationPropertyRules.cs"];
m1_9 [label="Exit CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_bad_help_prints_help_index()", span="56-56", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_bad_help_prints_help_index()", file="SpecificationPropertyRules.cs"];
m1_0 [label="Entry CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_parsing_prints_help_index()", span="44-44", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_parsing_prints_help_index()", file="SpecificationPropertyRules.cs"];
m1_1 [label="DoCoreTestForIndex(new string[] {})", span="46-46", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_parsing_prints_help_index()", file="SpecificationPropertyRules.cs"];
m1_2 [label="Exit CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_parsing_prints_help_index()", span="44-44", cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_parsing_prints_help_index()", file="SpecificationPropertyRules.cs"];
m1_37 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)", file="SpecificationPropertyRules.cs"];
m1_33 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="SpecificationPropertyRules.cs"];
m1_36 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="SpecificationPropertyRules.cs"];
m1_28 [label="Entry CommandLine.Tests.Fakes.OptionsWithVerbsHelp.OptionsWithVerbsHelp()", span="80-80", cluster="CommandLine.Tests.Fakes.OptionsWithVerbsHelp.OptionsWithVerbsHelp()", file="SpecificationPropertyRules.cs"];
m1_88 [label=testWriter, span="", file="SpecificationPropertyRules.cs"];
m1_89 [label=testWriter, span="", file="SpecificationPropertyRules.cs"];
m1_90 [label=testWriter, span="", file="SpecificationPropertyRules.cs"];
m1_87 [label="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture", span="", file="SpecificationPropertyRules.cs"];
n62 -> n5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n62 -> n9  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n63 -> n9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n64 -> n36  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
n64 -> n39  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
n64 -> n44  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
n65 -> n36  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n65 -> n39  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n65 -> n44  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n66 -> n39  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>"];
n67 -> n56  [key=1, style=dashed, color=darkseagreen4, label=string];
n68 -> n56  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n0 -> n1  [key=0, style=solid];
n0 -> n5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n0 -> n9  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=2, style=dotted];
n5 -> n8  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=2, style=dotted];
n2 -> n0  [key=0, style=bold, color=blue];
n3 -> n12  [key=0, style=solid];
n3 -> n13  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>"];
n4 -> n5  [key=0, style=solid];
n4 -> n9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n6 -> n4  [key=0, style=bold, color=blue];
n8 -> n9  [key=0, style=solid];
n10 -> n8  [key=0, style=bold, color=blue];
n12 -> n13  [key=0, style=solid];
n12 -> n15  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n16  [key=2, style=dotted];
n13 -> n17  [key=2, style=dotted];
n13 -> n18  [key=2, style=dotted];
n13 -> n19  [key=2, style=dotted];
n13 -> n20  [key=2, style=dotted];
n13 -> n21  [key=2, style=dotted];
n13 -> n22  [key=2, style=dotted];
n13 -> n23  [key=2, style=dotted];
n13 -> n24  [key=2, style=dotted];
n13 -> n25  [key=2, style=dotted];
n13 -> n26  [key=2, style=dotted];
n14 -> n3  [key=0, style=bold, color=blue];
n25 -> n49  [key=0, style=solid];
n25 -> n56  [key=1, style=dashed, color=darkseagreen4, label=string];
n26 -> n27  [key=0, style=solid];
n26 -> n36  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
n26 -> n39  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>"];
n26 -> n44  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
n27 -> n28  [key=0, style=solid];
n27 -> n29  [key=2, style=dotted];
n27 -> n30  [key=2, style=dotted];
n27 -> n23  [key=2, style=dotted];
n27 -> n31  [key=2, style=dotted];
n27 -> n17  [key=2, style=dotted];
n27 -> n32  [key=2, style=dotted];
n27 -> n21  [key=2, style=dotted];
n27 -> n33  [key=2, style=dotted];
n27 -> n34  [key=2, style=dotted];
n27 -> n35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n27 -> n38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n27 -> n46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n36 -> n37  [key=0, style=solid];
n36 -> n21  [key=2, style=dotted];
n36 -> n22  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n39 -> n41  [key=2, style=dotted];
n39 -> n42  [key=2, style=dotted];
n39 -> n43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n44 -> n45  [key=0, style=solid];
n44 -> n21  [key=2, style=dotted];
n44 -> n22  [key=2, style=dotted];
n28 -> n26  [key=0, style=bold, color=blue];
n35 -> n36  [key=0, style=solid];
n38 -> n39  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n37 -> n35  [key=0, style=bold, color=blue];
n40 -> n38  [key=0, style=bold, color=blue];
n43 -> n44  [key=0, style=solid];
n45 -> n43  [key=0, style=bold, color=blue];
n47 -> n48  [key=0, style=solid];
n48 -> n46  [key=0, style=bold, color=blue];
n49 -> n50  [key=0, style=solid];
n49 -> n51  [key=2, style=dotted];
n49 -> n52  [key=2, style=dotted];
n49 -> n53  [key=2, style=dotted];
n49 -> n54  [key=2, style=dotted];
n49 -> n55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n49 -> n58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n56 -> n57  [key=0, style=solid];
n56 -> n22  [key=2, style=dotted];
n50 -> n25  [key=0, style=bold, color=blue];
n55 -> n56  [key=0, style=solid];
n58 -> n59  [key=0, style=solid];
n57 -> n55  [key=0, style=bold, color=blue];
n59 -> n60  [key=0, style=solid];
n59 -> n61  [key=2, style=dotted];
n60 -> n58  [key=0, style=bold, color=blue];
m1_10 -> m1_11  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid, color=green];
m1_14 -> m1_29  [key=2, style=dotted, color=green];
m1_14 -> m1_16  [key=1, style=dashed, color=green, label=testWriter];
m1_14 -> m1_41  [key=1, style=dashed, color=green, label=testWriter];
m1_14 -> m1_19  [key=1, style=dashed, color=green, label=testWriter];
m1_13 -> m1_14  [key=0, style=solid, color=green];
m1_13 -> m1_28  [key=2, style=dotted];
m1_13 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label=options];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_30  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_31  [key=2, style=dotted];
m1_16 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_35  [key=2, style=dotted];
m1_19 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=helpText];
m1_26 -> m1_27  [key=0, style=solid, color=green];
m1_26 -> m1_33  [key=2, style=dotted, color=green];
m1_26 -> m1_39  [key=2, style=dotted, color=green];
m1_17 -> m1_26  [key=1, style=dashed, color=green, label=invokedVerbInstance];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_32  [key=2, style=dotted];
m1_17 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_17 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=invokedVerb];
m1_25 -> m1_26  [key=0, style=solid, color=green];
m1_25 -> m1_33  [key=2, style=dotted];
m1_25 -> m1_39  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_17  [key=3, color=darkorchid, style=bold, label="Local variable object invokedVerbInstance"];
m1_12 -> m1_11  [key=3, color=darkorchid, style=bold, label="Local variable object invokedVerbInstance"];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_33  [key=2, style=dotted];
m1_18 -> m1_34  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_36  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_37  [key=2, style=dotted];
m1_21 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_21 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_11 -> m1_17  [key=3, color=darkorchid, style=bold, label="Local variable string invokedVerb"];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_11  [key=3, color=darkorchid, style=bold, label="Local variable string invokedVerb"];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_33  [key=2, style=dotted];
m1_24 -> m1_39  [key=2, style=dotted];
m1_24 -> m1_38  [key=2, style=dotted];
m1_22 -> m1_33  [key=2, style=dotted];
m1_22 -> m1_39  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_38  [key=2, style=dotted];
m1_23 -> m1_33  [key=2, style=dotted];
m1_23 -> m1_39  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_38  [key=2, style=dotted];
m1_27 -> m1_10  [key=0, style=bold, color=blue];
m1_3 -> m1_69  [key=0, style=solid];
m1_3 -> m1_73  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_70 -> m1_29  [key=2, style=dotted];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_72  [key=1, style=dashed, color=darkseagreen4, label=testWriter];
m1_70 -> m1_83  [key=1, style=dashed, color=darkseagreen4, label=testWriter];
m1_70 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label=testWriter];
m1_74 -> m1_33  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_34  [key=2, style=dotted];
m1_78 -> m1_33  [key=2, style=dotted];
m1_78 -> m1_39  [key=2, style=dotted];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_38  [key=2, style=dotted];
m1_79 -> m1_33  [key=2, style=dotted];
m1_79 -> m1_39  [key=2, style=dotted];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_38  [key=2, style=dotted];
m1_80 -> m1_33  [key=2, style=dotted];
m1_80 -> m1_39  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_38  [key=2, style=dotted];
m1_69 -> m1_28  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_73  [key=1, style=dashed, color=darkseagreen4, label=options];
m1_71 -> m1_30  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_72 -> m1_31  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_83  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_75 -> m1_35  [key=2, style=dotted];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_77  [key=1, style=dashed, color=darkseagreen4, label=helpText];
m1_73 -> m1_32  [key=2, style=dotted];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_79  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_77 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_77 -> m1_37  [key=2, style=dotted];
m1_76 -> m1_36  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_81 -> m1_3  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_3  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_4  [key=0, style=bold, color=blue];
m1_85 -> m1_86  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_40 -> m1_41  [key=0, style=solid];
m1_42 -> m1_40  [key=0, style=bold, color=blue];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_45  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_63 -> m1_64  [key=0, style=solid];
m1_83 -> m1_84  [key=0, style=solid];
m1_46 -> m1_43  [key=0, style=bold, color=blue];
m1_44 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label=invokedVerb];
m1_44 -> m1_45  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_62 -> m1_63  [key=0, style=solid];
m1_64 -> m1_62  [key=0, style=bold, color=blue];
m1_82 -> m1_83  [key=0, style=solid];
m1_84 -> m1_82  [key=0, style=bold, color=blue];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_67  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_68 -> m1_65  [key=0, style=bold, color=blue];
m1_66 -> m1_68  [key=1, style=dashed, color=darkseagreen4, label=invokedVerb];
m1_66 -> m1_67  [key=0, style=solid];
m1_67 -> m1_68  [key=0, style=solid];
m1_86 -> m1_85  [key=0, style=bold, color=blue];
m1_47 -> m1_48  [key=0, style=solid];
m1_51 -> m1_29  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label=testWriter];
m1_51 -> m1_63  [key=1, style=dashed, color=darkseagreen4, label=testWriter];
m1_51 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label=testWriter];
m1_55 -> m1_33  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_34  [key=2, style=dotted];
m1_59 -> m1_33  [key=2, style=dotted];
m1_59 -> m1_39  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_60 -> m1_33  [key=2, style=dotted];
m1_60 -> m1_39  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_50 -> m1_28  [key=2, style=dotted];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label=options];
m1_52 -> m1_30  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_53 -> m1_31  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_63  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_56 -> m1_35  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label=helpText];
m1_48 -> m1_11  [key=3, color=darkorchid, style=bold, label="Local variable string invokedVerb"];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_54  [key=3, color=darkorchid, style=bold, label="Local variable string invokedVerb"];
m1_49 -> m1_11  [key=3, color=darkorchid, style=bold, label="Local variable object invokedVerbInstance"];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_54  [key=3, color=darkorchid, style=bold, label="Local variable object invokedVerbInstance"];
m1_54 -> m1_32  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=invokedVerb];
m1_54 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label=invokedVerbInstance];
m1_54 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_37  [key=2, style=dotted];
m1_57 -> m1_36  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_61 -> m1_47  [key=0, style=bold, color=blue];
m1_7 -> m1_8  [key=0, style=solid];
m1_8 -> m1_3  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_7  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_88 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=testWriter];
m1_89 -> m1_63  [key=1, style=dashed, color=darkseagreen4, label=testWriter];
m1_90 -> m1_83  [key=1, style=dashed, color=darkseagreen4, label=testWriter];
m1_87 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture"];
m1_87 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture"];
m1_87 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture"];
}
