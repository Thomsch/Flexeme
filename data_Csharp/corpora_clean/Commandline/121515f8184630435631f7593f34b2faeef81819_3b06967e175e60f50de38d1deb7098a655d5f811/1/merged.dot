digraph  {
m0_66 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="StringBuilderExtensions.cs"];
m0_28 [label="Entry CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="95-95", cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="StringBuilderExtensions.cs"];
m0_77 [label="return new NotParsed<object>(new NullInstance(), types, errors);", span="97-97", cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="StringBuilderExtensions.cs"];
m0_78 [label="Exit CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="95-95", cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="StringBuilderExtensions.cs"];
m0_26 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="57-57", cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="StringBuilderExtensions.cs"];
m0_45 [label="Entry Unk.>", span="", cluster="Unk.>", file="StringBuilderExtensions.cs"];
m0_49 [label="Entry Unk.MakeNotParsed", span="", cluster="Unk.MakeNotParsed", file="StringBuilderExtensions.cs"];
m0_44 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="StringBuilderExtensions.cs"];
m0_18 [label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16", cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="StringBuilderExtensions.cs"];
m0_31 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="StringBuilderExtensions.cs"];
m0_79 [label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="136-136", cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StringBuilderExtensions.cs"];
m0_48 [label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357", cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="StringBuilderExtensions.cs"];
m0_11 [label="Entry lambda expression", span="22-22", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_12 [label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="22-22", cluster="lambda expression", file="StringBuilderExtensions.cs", color=green, community=0];
m0_13 [label="Exit lambda expression", span="22-22", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_68 [label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383", cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="StringBuilderExtensions.cs"];
m0_3 [label="builder.Append(value)", span="15-15", cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="StringBuilderExtensions.cs"];
m0_19 [label="arguments.Empty()", span="39-39", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_20 [label="return MakeNotParsed(types, new NoVerbSelectedError());", span="41-41", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_21 [label="var firstArg = arguments.First()", span="44-44", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_22 [label="Func<string, bool> preprocCompare = command =>\r\n                    nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="46-48", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_23 [label="var verbs = Verb.SelectFromTypes(types)", span="50-50", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_24 [label="return preprocCompare(''help'')\r\n                ? MakeNotParsed(types,\r\n                    MakeHelpVerbRequestedError(verbs,\r\n                        arguments.Skip(1).SingleOrDefault() ?? string.Empty, nameComparer))\r\n                : preprocCompare(''version'')\r\n                    ? MakeNotParsed(types, new VersionRequestedError())\r\n                    : MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture);", span="52-58", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_25 [label="Exit CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="32-32", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_14 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="StringBuilderExtensions.cs"];
m0_35 [label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="432-432", cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="StringBuilderExtensions.cs"];
m0_40 [label="Entry System.StringComparer.Equals(string, string)", span="0-0", cluster="System.StringComparer.Equals(string, string)", file="StringBuilderExtensions.cs"];
m0_67 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="StringBuilderExtensions.cs"];
m0_56 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="StringBuilderExtensions.cs"];
m0_0 [label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="13-13", cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_1 [label="return Choose(\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                types,\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="19-29", cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs", color=green, community=0];
m0_2 [label="Exit CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="13-13", cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_4 [label="Entry lambda expression", span="20-25", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_5 [label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="22-22", cluster="lambda expression", file="StringBuilderExtensions.cs", color=green, community=0];
m0_41 [label="Entry string.Concat(string, string)", span="0-0", cluster="string.Concat(string, string)", file="StringBuilderExtensions.cs"];
m0_33 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="StringBuilderExtensions.cs"];
m0_73 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_6 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", color=green, community=0, file="StringBuilderExtensions.cs"];
m0_7 [label="Entry CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", span="21-21", cluster="CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", color=green, community=0, file="StringBuilderExtensions.cs"];
m0_15 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_16 [label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="23-23", cluster="lambda expression", color=green, community=0, file="StringBuilderExtensions.cs"];
m0_17 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_8 [label="return builder == null ? string.Empty : builder.ToString();", span="23-23", cluster="CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="StringBuilderExtensions.cs"];
m0_38 [label="nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="47-48", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_37 [label="Entry lambda expression", span="46-48", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_39 [label="Exit lambda expression", span="46-48", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_51 [label="nameComparer.Equals(a.Item1.Name, arguments.First())", span="68-68", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_59 [label="nameComparer.Equals(v.Item1.Name, arguments.First())", span="72-72", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_71 [label="nameComparer.Equals(v.Item1.Name, verb)", span="87-87", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_54 [label="verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First()))\r\n                                .Item2.AutoDefault()", span="72-73", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_50 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_53 [label="Entry lambda expression", span="71-73", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_61 [label="Entry lambda expression", span="78-78", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_52 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_58 [label="Entry lambda expression", span="72-72", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_60 [label="Exit lambda expression", span="72-72", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_70 [label="Entry lambda expression", span="87-87", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_72 [label="Exit lambda expression", span="87-87", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_55 [label="Exit lambda expression", span="71-73", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_63 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_62 [label="v.Item2", span="78-78", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_74 [label="new HelpVerbRequestedError(v.Item1.Name, v.Item2, true)", span="90-90", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_75 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_29 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="StringBuilderExtensions.cs"];
m0_32 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="StringBuilderExtensions.cs"];
m0_34 [label="Entry CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="81-81", cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="StringBuilderExtensions.cs"];
m0_64 [label="return verb.Length > 0\r\n                ? verbs.SingleOrDefault(v => nameComparer.Equals(v.Item1.Name, verb))\r\n                        .ToMaybe()\r\n                        .Return(\r\n                            v => new HelpVerbRequestedError(v.Item1.Name, v.Item2, true),\r\n                            new HelpVerbRequestedError(null, null, false))\r\n                : new HelpVerbRequestedError(null, null, false);", span="86-92", cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="StringBuilderExtensions.cs"];
m0_65 [label="Exit CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="81-81", cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="StringBuilderExtensions.cs"];
m0_47 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="StringBuilderExtensions.cs"];
m0_27 [label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421", cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="StringBuilderExtensions.cs"];
m0_9 [label="Exit CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", span="21-21", cluster="CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="StringBuilderExtensions.cs"];
m0_69 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="StringBuilderExtensions.cs"];
m0_36 [label="Entry CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="61-61", cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_42 [label="return verbs.Any(a => nameComparer.Equals(a.Item1.Name, arguments.First()))\r\n                ? InstanceBuilder.Build(\r\n                    Maybe.Just<Func<object>>(\r\n                        () =>\r\n                            verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First()))\r\n                                .Item2.AutoDefault()),\r\n                    tokenizer,\r\n                    arguments.Skip(1),\r\n                    nameComparer,\r\n                    parsingCulture)\r\n                : MakeNotParsed(verbs.Select(v => v.Item2), new BadVerbSelectedError(arguments.First()));", span="68-78", cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_43 [label="Exit CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="61-61", cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_46 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_10 [label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", span="45-45", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", file="StringBuilderExtensions.cs"];
m0_57 [label="Entry Unk.AutoDefault", span="", cluster="Unk.AutoDefault", file="StringBuilderExtensions.cs"];
m0_80 [label="Entry CommandLine.NullInstance.NullInstance()", span="9-9", cluster="CommandLine.NullInstance.NullInstance()", file="StringBuilderExtensions.cs"];
m0_30 [label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="StringBuilderExtensions.cs"];
m0_76 [label="Entry HelpVerbRequestedError.cstr", span="", cluster="HelpVerbRequestedError.cstr", file="StringBuilderExtensions.cs"];
m0_81 [label="System.StringComparer", span="", file="StringBuilderExtensions.cs"];
m0_82 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", file="StringBuilderExtensions.cs"];
m0_83 [label="System.StringComparer", span="", file="StringBuilderExtensions.cs"];
m0_84 [label=firstArg, span="", file="StringBuilderExtensions.cs"];
m0_85 [label="System.Collections.Generic.IEnumerable<string>", span="", file="StringBuilderExtensions.cs"];
m0_86 [label="System.StringComparer", span="", file="StringBuilderExtensions.cs"];
m0_88 [label=string, span="", file="StringBuilderExtensions.cs"];
m0_89 [label="System.StringComparer", span="", file="StringBuilderExtensions.cs"];
m0_87 [label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span="", file="StringBuilderExtensions.cs"];
m0_28 -> m0_77  [key=0, style=solid];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_79  [key=2, style=dotted];
m0_77 -> m0_80  [key=2, style=dotted];
m0_78 -> m0_28  [key=0, style=bold, color=blue];
m0_11 -> m0_12  [key=0, style=solid, color=green];
m0_12 -> m0_13  [key=0, style=solid, color=green];
m0_12 -> m0_14  [key=2, style=dotted, color=green];
m0_13 -> m0_11  [key=0, style=bold, color=blue];
m0_3 -> m0_19  [key=0, style=solid];
m0_3 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Type>"];
m0_3 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_3 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m0_3 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m0_3 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Type>"];
m0_3 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>"];
m0_3 -> m0_2  [key=0, style=solid];
m0_3 -> m0_6  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=0, style=solid];
m0_19 -> m0_26  [key=2, style=dotted];
m0_20 -> m0_25  [key=0, style=solid];
m0_20 -> m0_27  [key=2, style=dotted];
m0_20 -> m0_28  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_29  [key=2, style=dotted];
m0_21 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label=firstArg];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_22 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label=preprocCompare];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_30  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_31  [key=2, style=dotted];
m0_24 -> m0_32  [key=2, style=dotted];
m0_24 -> m0_33  [key=2, style=dotted];
m0_24 -> m0_34  [key=2, style=dotted];
m0_24 -> m0_28  [key=2, style=dotted];
m0_24 -> m0_35  [key=2, style=dotted];
m0_24 -> m0_36  [key=2, style=dotted];
m0_25 -> m0_3  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_0 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m0_0 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m0_0 -> m0_0  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Text.StringBuilder AppendWhen"];
m0_0 -> m0_5  [key=1, style=dashed, color=green, label="System.StringComparer"];
m0_0 -> m0_12  [key=1, style=dashed, color=green, label="System.StringComparer"];
m0_0 -> m0_6  [key=1, style=dashed, color=green, label="System.StringComparer"];
m0_0 -> m0_16  [key=1, style=dashed, color=green, label="System.StringComparer"];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_4  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted, color=green];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_4  [key=0, style=solid];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid, color=green];
m0_4 -> m0_12  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m0_4 -> m0_6  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m0_4 -> m0_16  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m0_5 -> m0_0  [key=0, style=bold, color=blue];
m0_5 -> m0_6  [key=0, style=solid, color=green];
m0_5 -> m0_9  [key=2, style=dotted, color=green];
m0_5 -> m0_11  [key=1, style=dashed, color=green, label="lambda expression"];
m0_73 -> m0_74  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid, color=green];
m0_6 -> m0_10  [key=2, style=dotted, color=green];
m0_6 -> m0_15  [key=1, style=dashed, color=green, label="lambda expression"];
m0_7 -> m0_8  [key=0, style=solid, color=green];
m0_15 -> m0_16  [key=0, style=solid, color=green];
m0_16 -> m0_17  [key=0, style=solid, color=green];
m0_16 -> m0_18  [key=2, style=dotted, color=green];
m0_17 -> m0_15  [key=0, style=bold, color=blue];
m0_8 -> m0_4  [key=0, style=bold, color=blue];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_10  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_40  [key=2, style=dotted];
m0_38 -> m0_41  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_39 -> m0_37  [key=0, style=bold, color=blue];
m0_51 -> m0_29  [key=2, style=dotted];
m0_51 -> m0_40  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_59 -> m0_29  [key=2, style=dotted];
m0_59 -> m0_40  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_71 -> m0_40  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_56  [key=2, style=dotted];
m0_54 -> m0_57  [key=2, style=dotted];
m0_54 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_50 -> m0_51  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_61 -> m0_62  [key=0, style=solid];
m0_52 -> m0_50  [key=0, style=bold, color=blue];
m0_58 -> m0_59  [key=0, style=solid];
m0_60 -> m0_58  [key=0, style=bold, color=blue];
m0_70 -> m0_71  [key=0, style=solid];
m0_72 -> m0_70  [key=0, style=bold, color=blue];
m0_55 -> m0_53  [key=0, style=bold, color=blue];
m0_63 -> m0_61  [key=0, style=bold, color=blue];
m0_62 -> m0_63  [key=0, style=solid];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_76  [key=2, style=dotted];
m0_75 -> m0_73  [key=0, style=bold, color=blue];
m0_34 -> m0_64  [key=0, style=solid];
m0_34 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_66  [key=2, style=dotted];
m0_64 -> m0_67  [key=2, style=dotted];
m0_64 -> m0_68  [key=2, style=dotted];
m0_64 -> m0_69  [key=2, style=dotted];
m0_64 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_64 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_65 -> m0_34  [key=0, style=bold, color=blue];
m0_9 -> m0_7  [key=0, style=bold, color=blue];
m0_36 -> m0_42  [key=0, style=solid];
m0_36 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_36 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>"];
m0_36 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_42 -> m0_29  [key=2, style=dotted];
m0_42 -> m0_32  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_44  [key=2, style=dotted];
m0_42 -> m0_45  [key=2, style=dotted];
m0_42 -> m0_46  [key=2, style=dotted];
m0_42 -> m0_47  [key=2, style=dotted];
m0_42 -> m0_48  [key=2, style=dotted];
m0_42 -> m0_49  [key=2, style=dotted];
m0_42 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_42 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_42 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_43 -> m0_36  [key=0, style=bold, color=blue];
m0_81 -> m0_5  [key=1, style=dashed, color=green, label="System.StringComparer"];
m0_81 -> m0_12  [key=1, style=dashed, color=green, label="System.StringComparer"];
m0_81 -> m0_6  [key=1, style=dashed, color=green, label="System.StringComparer"];
m0_81 -> m0_16  [key=1, style=dashed, color=green, label="System.StringComparer"];
m0_82 -> m0_12  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m0_82 -> m0_16  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m0_83 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m0_84 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label=firstArg];
m0_85 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_85 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_85 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_86 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m0_86 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m0_86 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m0_88 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_89 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m0_87 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>"];
}
