digraph  {
m2_8 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", span="92-92"];
m2_9 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", span="92-92"];
m2_2 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", span="56-56"];
m2_3 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", span="56-56"];
m2_6 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", span="79-79"];
m2_7 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", span="79-79"];
m2_0 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", span="46-46"];
m2_1 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", span="46-46"];
m2_4 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", span="67-67"];
m2_5 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", span="67-67"];
m4_71 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="AttributesFixture.cs", label="parserState.Errors.Add(error)", span="204-204"];
m4_25 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="AttributesFixture.cs", label="return new NotParsed<object>(new NullInstance(), types, new[]\r\n                    {\r\n                        CreateHelpVerbRequestedError(\r\n                            verbs,\r\n                            arguments.Skip(1).SingleOrDefault() ?? string.Empty,\r\n                            nameComparer)\r\n                    });", span="53-59"];
m4_26 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="AttributesFixture.cs", label="preprocCompare(''version'')", span="62-62"];
m4_27 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="AttributesFixture.cs", label="return new NotParsed<object>(new NullInstance(), types, new[]\r\n                    {\r\n                        new VersionRequestedError()\r\n                    });", span="64-67"];
m4_28 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="AttributesFixture.cs", label="return MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture);", span="70-70"];
m4_31 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="AttributesFixture.cs", label="_map.Values", span="131-131"];
m4_73 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="AttributesFixture.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="372-372"];
m4_50 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="AttributesFixture.cs", label="var setName = option.MutuallyExclusiveSet", span="168-168"];
m4_49 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="AttributesFixture.cs", label="Entry CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", span="166-166"];
m4_18 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="AttributesFixture.cs", label="Exit CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="61-61"];
m4_36 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="AttributesFixture.cs", label="Exit CommandLine.Internal.OptionMap.EnforceRequiredRule()", span="128-128"];
m4_32 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="AttributesFixture.cs", label="option.Required && !option.IsDefined", span="133-133"];
m4_24 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="AttributesFixture.cs", label="preprocCompare(''help'')", span="51-51"];
m4_30 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="AttributesFixture.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m4_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="AttributesFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m4_33 [cluster="CommandLine.NullInstance.NullInstance()", file="AttributesFixture.cs", label="Entry CommandLine.NullInstance.NullInstance()", span="9-9"];
m4_34 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="AttributesFixture.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="410-410"];
m4_52 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="AttributesFixture.cs", label="_mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="171-171"];
m4_39 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="AttributesFixture.cs", label="return true;", span="146-146"];
m4_69 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", color=green, community=0, file="AttributesFixture.cs", label="mutualExclusiveness != null", prediction=0, span="203-203"];
m4_70 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="AttributesFixture.cs", label="error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="203-203"];
m4_54 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="AttributesFixture.cs", label="Exit CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", span="166-166"];
m4_21 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="AttributesFixture.cs", label="return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="117-117"];
m4_22 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="AttributesFixture.cs", label="Exit CommandLine.Internal.OptionMap.EnforceRules()", span="115-115"];
m4_19 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", file="AttributesFixture.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m4_20 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="AttributesFixture.cs", label="Entry CommandLine.Internal.OptionMap.EnforceRules()", span="115-115"];
m4_23 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="AttributesFixture.cs", label="Entry CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", span="142-142"];
m4_29 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="AttributesFixture.cs", label="Entry CommandLine.Internal.OptionInfo.SetDefault(object)", span="179-179"];
m4_14 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="AttributesFixture.cs", label="_names = new Dictionary<string, string>(capacity, comparer)", span="74-74"];
m4_40 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="AttributesFixture.cs", label="_map.Values", span="148-148"];
m4_45 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="AttributesFixture.cs", label="SetParserStateIfNeeded(RawOptions, info.BadOption, null, true)", span="159-159"];
m4_72 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="AttributesFixture.cs", label="Exit CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", span="176-176"];
m4_61 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="AttributesFixture.cs", label="property.GetValue(options, null) == null", span="185-185"];
m4_38 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="AttributesFixture.cs", label="!_settings.MutuallyExclusive", span="144-144"];
m4_46 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="AttributesFixture.cs", label="return false;", span="160-160"];
m4_8 [cluster="lambda expression", file="AttributesFixture.cs", label="Exit lambda expression", span="19-24"];
m4_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="AttributesFixture.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m4_15 [cluster="lambda expression", file="AttributesFixture.cs", label="Entry lambda expression", span="22-22"];
m4_17 [cluster="lambda expression", file="AttributesFixture.cs", label="Exit lambda expression", span="22-22"];
m4_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="AttributesFixture.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="44-44"];
m4_11 [cluster="lambda expression", file="AttributesFixture.cs", label="Entry lambda expression", span="21-21"];
m4_12 [cluster="lambda expression", file="AttributesFixture.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="21-21"];
m4_13 [cluster="lambda expression", file="AttributesFixture.cs", label="Exit lambda expression", span="21-21"];
m4_16 [cluster="lambda expression", file="AttributesFixture.cs", label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="22-22"];
m4_76 [cluster="lambda expression", file="AttributesFixture.cs", label="nameComparer.Equals(v.Item1.Name, verb)", span="99-99"];
m4_55 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="AttributesFixture.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m4_58 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="AttributesFixture.cs", label="list.Count == 0", span="179-179"];
m4_66 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="AttributesFixture.cs", label="var error = new ParsingError\r\n            {\r\n                BadOption =\r\n                {\r\n                    ShortName = option.ShortName,\r\n                    LongName = option.LongName\r\n                }\r\n            }", span="194-201"];
m4_75 [cluster="CommandLine.ParserState.ParserState()", file="AttributesFixture.cs", label="Entry CommandLine.ParserState.ParserState()", span="47-47"];
m4_78 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="AttributesFixture.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m4_79 [cluster="lambda expression", color=green, community=0, file="AttributesFixture.cs", label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo", prediction=1, span=""];
m4_80 [cluster="lambda expression", file="AttributesFixture.cs", label="CommandLine.Internal.OptionMap", span=""];
m4_56 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="AttributesFixture.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m4_59 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="AttributesFixture.cs", label="return;", span="181-181"];
m4_64 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="AttributesFixture.cs", label="parserState == null", span="190-190"];
m4_57 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="AttributesFixture.cs", label="var list = ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(options)", span="178-178"];
m4_60 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="AttributesFixture.cs", label="var property = list[0].Left", span="183-183"];
m4_68 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="AttributesFixture.cs", label="error.ViolatesRequired = required.Value", span="202-202"];
m4_67 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="AttributesFixture.cs", label="required != null", span="202-202"];
m4_77 [cluster="CommandLine.ParsingError.ParsingError()", file="AttributesFixture.cs", label="Entry CommandLine.ParsingError.ParsingError()", span="47-47"];
m4_63 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="AttributesFixture.cs", label="var parserState = (IParserState)property.GetValue(options, null)", span="189-189"];
m4_65 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="AttributesFixture.cs", label="return;", span="192-192"];
m4_43 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="AttributesFixture.cs", label="_mutuallyExclusiveSetMap.Values", span="155-155"];
m4_42 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="AttributesFixture.cs", label="BuildMutuallyExclusiveMap(option)", span="152-152"];
m4_44 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="AttributesFixture.cs", label="info.Occurrence > 1", span="157-157"];
m4_4 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="AttributesFixture.cs", label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", span="47-47"];
m4_5 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="AttributesFixture.cs", label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="54-54"];
m4_6 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="AttributesFixture.cs", label="++_count", span="54-54"];
m4_7 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="AttributesFixture.cs", label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="54-54"];
m4_37 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="AttributesFixture.cs", label="Entry CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", span="176-176"];
m4_2 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="AttributesFixture.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m4_51 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="AttributesFixture.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="34-34"];
m4_53 [cluster="Unk.Select", file="AttributesFixture.cs", label="Entry Unk.Select", span=""];
m4_62 [cluster="Unk.AutoDefault", file="AttributesFixture.cs", label="Entry Unk.AutoDefault", span=""];
m4_0 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", file="AttributesFixture.cs", label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", span="45-45"];
m4_1 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", file="AttributesFixture.cs", label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", span="45-45"];
m4_74 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="AttributesFixture.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m4_41 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="AttributesFixture.cs", label="option.IsDefined && option.MutuallyExclusiveSet != null", span="150-150"];
m4_47 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="AttributesFixture.cs", label="return true;", prediction=2, span="163-163"];
m4_48 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="AttributesFixture.cs", label="Exit CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", span="142-142"];
m4_81 [cluster="HelpVerbRequestedError.cstr", file="AttributesFixture.cs", label="Entry HelpVerbRequestedError.cstr", span=""];
m4_86 [file="AttributesFixture.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m4_87 [file="AttributesFixture.cs", label="System.StringComparer", span=""];
m4_88 [file="AttributesFixture.cs", label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span=""];
m4_89 [file="AttributesFixture.cs", label=string, span=""];
m4_90 [file="AttributesFixture.cs", label="System.StringComparer", span=""];
m4_84 [file="AttributesFixture.cs", label="System.StringComparer", span=""];
m4_85 [file="AttributesFixture.cs", label=firstArg, span=""];
m4_82 [file="AttributesFixture.cs", label="System.StringComparer", span=""];
m4_83 [file="AttributesFixture.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m8_4 [cluster="lambda expression", file="CommandLineParserException.cs", label="var options = specProps.Where(sp => sp.Specification.IsOption() && sp.Value.IsJust())", span="22-22"];
m8_5 [cluster="lambda expression", file="CommandLineParserException.cs", label="var groups = options.GroupBy(g => ((OptionSpecification)g.Specification).SetName)", span="23-23"];
m8_52 [cluster="CommandLine.Core.Specification.GetSetName()", file="CommandLineParserException.cs", label="Entry CommandLine.Core.Specification.GetSetName()", span="80-80"];
m8_19 [cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="CommandLineParserException.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149"];
m8_0 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", file="CommandLineParserException.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException()", span="48-48"];
m8_1 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", file="CommandLineParserException.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException()", span="48-48"];
m8_2 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLineParserException.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="52-52"];
m8_59 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="CommandLineParserException.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="52-52"];
m8_60 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", color=green, community=0, file="CommandLineParserException.cs", label="return specProps =>\r\n                {\r\n                    var options = specProps.Where(\r\n                        sp => sp.Specification.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && (\r\n                            (!sp.Specification.IsMinNotSpecified() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min)\r\n                            || (!sp.Specification.IsMaxNotSpecified() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max)\r\n                        )\r\n                    );\r\n                    if (options.Any())\r\n                    {\r\n                        return options.Select(s => Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification))));\r\n                    }\r\n                    return Enumerable.Empty<Nothing<Error>>();\r\n                };", prediction=3, span="54-70"];
m8_61 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="CommandLineParserException.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="52-52"];
m8_57 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="CommandLineParserException.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283"];
m8_40 [cluster="Unk.Any", file="CommandLineParserException.cs", label="Entry Unk.Any", span=""];
m8_3 [cluster="lambda expression", file="CommandLineParserException.cs", label="Entry lambda expression", span="20-29"];
m8_14 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="CommandLineParserException.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m8_10 [cluster="Unk.Where", file="CommandLineParserException.cs", label="Entry Unk.Where", span=""];
m8_58 [cluster="Unk.FromSpecification", file="CommandLineParserException.cs", label="Entry Unk.FromSpecification", span=""];
m8_73 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="CommandLineParserException.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="134-134"];
m8_51 [cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="CommandLineParserException.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="144-144"];
m8_78 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="CommandLineParserException.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m8_20 [cluster="lambda expression", file="CommandLineParserException.cs", label="Entry lambda expression", span="23-23"];
m8_33 [cluster="lambda expression", file="CommandLineParserException.cs", label="List<string> setsWithTrue =\r\n                    specProps.Where(sp => sp.Specification.IsOption() && sp.Value.IsJust() && sp.Specification.Required)\r\n                        .Select(x => x.Specification.GetSetName()).ToList()", span="36-38"];
m8_34 [cluster="lambda expression", file="CommandLineParserException.cs", label="var requiredButEmpty =\r\n                    specProps.Where(sp => sp.Value.IsNothing() && \r\n                                          sp.Specification.Required &&\r\n                                          !setsWithTrue.Contains(sp.Specification.GetSetName())).ToList()", span="40-43"];
m8_36 [cluster="lambda expression", color=green, community=0, file="CommandLineParserException.cs", label="return requiredButEmpty.Select(s => Maybe.Just<Error>(new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification))));", prediction=4, span="45-46"];
m8_35 [cluster="lambda expression", file="CommandLineParserException.cs", label="requiredButEmpty.Any()", span="44-44"];
m8_38 [cluster="lambda expression", file="CommandLineParserException.cs", label="Exit lambda expression", span="34-49"];
m8_54 [cluster="lambda expression", file="CommandLineParserException.cs", label="Entry lambda expression", span="45-46"];
m8_37 [cluster="lambda expression", color=green, community=0, file="CommandLineParserException.cs", label="return Enumerable.Empty<Nothing<Error>>();", prediction=5, span="48-48"];
m8_55 [cluster="lambda expression", color=green, community=0, file="CommandLineParserException.cs", label="Maybe.Just<Error>(new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification)))", prediction=6, span="45-46"];
m8_56 [cluster="lambda expression", file="CommandLineParserException.cs", label="Exit lambda expression", span="45-46"];
m8_63 [cluster="lambda expression", color=green, community=0, file="CommandLineParserException.cs", label="var options = specProps.Where(\r\n                        sp => sp.Specification.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && (\r\n                            (!sp.Specification.IsMinNotSpecified() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min)\r\n                            || (!sp.Specification.IsMaxNotSpecified() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max)\r\n                        )\r\n                    )", prediction=7, span="56-63"];
m8_62 [cluster="lambda expression", file="CommandLineParserException.cs", label="Entry lambda expression", span="54-70"];
m8_64 [cluster="lambda expression", file="CommandLineParserException.cs", label="options.Any()", span="64-64"];
m8_68 [cluster="lambda expression", file="CommandLineParserException.cs", label="Entry lambda expression", span="57-62"];
m8_65 [cluster="lambda expression", file="CommandLineParserException.cs", label="return options.Select(s => Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification))));", span="66-67"];
m8_69 [cluster="lambda expression", color=green, community=0, file="CommandLineParserException.cs", label="sp.Specification.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && (\r\n                            (!sp.Specification.IsMinNotSpecified() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min)\r\n                            || (!sp.Specification.IsMaxNotSpecified() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max)\r\n                        )", prediction=8, span="57-62"];
m8_70 [cluster="lambda expression", file="CommandLineParserException.cs", label="Exit lambda expression", span="57-62"];
m8_32 [cluster="lambda expression", file="CommandLineParserException.cs", label="Entry lambda expression", span="34-49"];
m8_41 [cluster="lambda expression", file="CommandLineParserException.cs", label="Entry lambda expression", span="37-37"];
m8_44 [cluster="lambda expression", file="CommandLineParserException.cs", label="Entry lambda expression", span="38-38"];
m8_49 [cluster="lambda expression", file="CommandLineParserException.cs", label="sp.Value.IsNothing() && \r\n                                          sp.Specification.Required &&\r\n                                          !setsWithTrue.Contains(sp.Specification.GetSetName())", span="41-43"];
m8_48 [cluster="lambda expression", file="CommandLineParserException.cs", label="Entry lambda expression", span="41-43"];
m8_7 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CommandLineParserException.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="62-62"];
m8_8 [cluster="lambda expression", file="CommandLineParserException.cs", label="return Enumerable.Empty<Nothing<Error>>();", span="28-28"];
m8_66 [cluster="lambda expression", file="CommandLineParserException.cs", label="return Enumerable.Empty<Nothing<Error>>();", span="69-69"];
m8_76 [cluster="lambda expression", file="CommandLineParserException.cs", label="Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification)))", span="66-67"];
m8_24 [cluster="lambda expression", file="CommandLineParserException.cs", label="Maybe.Just<Error>(new MutuallyExclusiveSetError(NameInfo.FromOptionSpecification((OptionSpecification)s.Specification)))", span="26-26"];
m8_67 [cluster="lambda expression", file="CommandLineParserException.cs", label="Exit lambda expression", span="54-70"];
m8_75 [cluster="lambda expression", file="CommandLineParserException.cs", label="Entry lambda expression", span="66-67"];
m8_16 [cluster="lambda expression", file="CommandLineParserException.cs", label="sp.Specification.IsOption() && sp.Value.IsJust()", span="22-22"];
m8_42 [cluster="lambda expression", file="CommandLineParserException.cs", label="sp.Specification.IsOption() && sp.Value.IsJust() && sp.Specification.Required", span="37-37"];
m8_43 [cluster="lambda expression", file="CommandLineParserException.cs", label="Exit lambda expression", span="37-37"];
m8_46 [cluster="lambda expression", file="CommandLineParserException.cs", label="Exit lambda expression", span="38-38"];
m8_45 [cluster="lambda expression", file="CommandLineParserException.cs", label="x.Specification.GetSetName()", span="38-38"];
m8_50 [cluster="lambda expression", file="CommandLineParserException.cs", label="Exit lambda expression", span="41-43"];
m8_6 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CommandLineParserException.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="62-62"];
m8_9 [cluster="lambda expression", file="CommandLineParserException.cs", label="Exit lambda expression", span="20-29"];
m8_23 [cluster="lambda expression", file="CommandLineParserException.cs", label="Entry lambda expression", span="26-26"];
m8_77 [cluster="lambda expression", file="CommandLineParserException.cs", label="Exit lambda expression", span="66-67"];
m8_25 [cluster="lambda expression", file="CommandLineParserException.cs", label="Exit lambda expression", span="26-26"];
m8_15 [cluster="lambda expression", file="CommandLineParserException.cs", label="Entry lambda expression", span="22-22"];
m8_17 [cluster="lambda expression", file="CommandLineParserException.cs", label="Exit lambda expression", span="22-22"];
m8_21 [cluster="lambda expression", file="CommandLineParserException.cs", label="((OptionSpecification)g.Specification).SetName", span="23-23"];
m8_22 [cluster="lambda expression", file="CommandLineParserException.cs", label="Exit lambda expression", span="23-23"];
m8_72 [cluster="CommandLine.Core.Specification.IsMinNotSpecified()", file="CommandLineParserException.cs", label="Entry CommandLine.Core.Specification.IsMinNotSpecified()", span="70-70"];
m8_29 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="CommandLineParserException.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="32-32"];
m8_30 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", color=green, community=0, file="CommandLineParserException.cs", label="return specProps =>\r\n            {\r\n                List<string> setsWithTrue =\r\n                    specProps.Where(sp => sp.Specification.IsOption() && sp.Value.IsJust() && sp.Specification.Required)\r\n                        .Select(x => x.Specification.GetSetName()).ToList();\r\n                \r\n                var requiredButEmpty =\r\n                    specProps.Where(sp => sp.Value.IsNothing() && \r\n                                          sp.Specification.Required &&\r\n                                          !setsWithTrue.Contains(sp.Specification.GetSetName())).ToList();\r\n                    if (requiredButEmpty.Any()) {\r\n                        return requiredButEmpty.Select(s => Maybe.Just<Error>(new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification))));\r\n                    }\r\n                    return Enumerable.Empty<Nothing<Error>>();\r\n                };", prediction=9, span="34-49"];
m8_31 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="CommandLineParserException.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="32-32"];
m8_28 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="CommandLineParserException.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
m8_13 [cluster="Unk.Select", file="CommandLineParserException.cs", label="Entry Unk.Select", span=""];
m8_71 [cluster="System.Type.ToDescriptorKind()", file="CommandLineParserException.cs", label="Entry System.Type.ToDescriptorKind()", span="22-22"];
m8_39 [cluster="Unk.ToList", file="CommandLineParserException.cs", label="Entry Unk.ToList", span=""];
m8_26 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="CommandLineParserException.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294"];
m8_18 [cluster="CommandLine.Core.Specification.IsOption()", file="CommandLineParserException.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
m8_27 [cluster="CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", file="CommandLineParserException.cs", label="Entry CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", span="60-60"];
m8_47 [cluster="Unk.GetSetName", file="CommandLineParserException.cs", label="Entry Unk.GetSetName", span=""];
m8_11 [cluster="Unk.GroupBy", file="CommandLineParserException.cs", label="Entry Unk.GroupBy", span=""];
m8_12 [cluster="Unk.Count", file="CommandLineParserException.cs", label="Entry Unk.Count", span=""];
m8_53 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="CommandLineParserException.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m8_74 [cluster="CommandLine.Core.Specification.IsMaxNotSpecified()", file="CommandLineParserException.cs", label="Entry CommandLine.Core.Specification.IsMaxNotSpecified()", span="75-75"];
m8_79 [file="CommandLineParserException.cs", label=setsWithTrue, span=""];
m9_2 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLineParserSettings.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="62-62"];
m9_3 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLineParserSettings.cs", label="CaseSensitive = caseSensitive", span="64-64"];
m9_4 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLineParserSettings.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="62-62"];
m9_27 [cluster="CommandLine.CommandLineParserSettings.Dispose()", file="CommandLineParserSettings.cs", label="Entry CommandLine.CommandLineParserSettings.Dispose()", span="167-167"];
m9_28 [cluster="CommandLine.CommandLineParserSettings.Dispose()", file="CommandLineParserSettings.cs", label="Dispose(true)", span="169-169"];
m9_29 [cluster="CommandLine.CommandLineParserSettings.Dispose()", file="CommandLineParserSettings.cs", label="GC.SuppressFinalize(this)", span="171-171"];
m9_30 [cluster="CommandLine.CommandLineParserSettings.Dispose()", file="CommandLineParserSettings.cs", label="Exit CommandLine.CommandLineParserSettings.Dispose()", span="167-167"];
m9_16 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="112-112"];
m9_17 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="CaseSensitive = caseSensitive", span="114-114"];
m9_18 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="MutuallyExclusive = mutuallyExclusive", span="115-115"];
m9_19 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="HelpWriter = helpWriter", span="116-116"];
m9_20 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="112-112"];
m9_38 [cluster="System.IO.TextWriter.Dispose()", file="CommandLineParserSettings.cs", label="Entry System.IO.TextWriter.Dispose()", span="0-0"];
m9_32 [cluster="System.GC.SuppressFinalize(object)", file="CommandLineParserSettings.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m9_12 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLineParserSettings.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="98-98"];
m9_13 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLineParserSettings.cs", label="CaseSensitive = caseSensitive", span="100-100"];
m9_14 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLineParserSettings.cs", label="MutuallyExclusive = mutuallyExclusive", span="101-101"];
m9_15 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLineParserSettings.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="98-98"];
m9_5 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="73-73"];
m9_6 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="HelpWriter = helpWriter", span="76-76"];
m9_7 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="73-73"];
m9_8 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="86-86"];
m9_9 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="CaseSensitive = caseSensitive", span="88-88"];
m9_10 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="HelpWriter = helpWriter", span="89-89"];
m9_11 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="86-86"];
m9_31 [cluster="CommandLine.CommandLineParserSettings.Dispose(bool)", file="CommandLineParserSettings.cs", label="Entry CommandLine.CommandLineParserSettings.Dispose(bool)", span="174-174"];
m9_33 [cluster="CommandLine.CommandLineParserSettings.Dispose(bool)", color=green, community=0, file="CommandLineParserSettings.cs", label="!_disposed", prediction=10, span="176-176"];
m9_34 [cluster="CommandLine.CommandLineParserSettings.Dispose(bool)", color=green, community=0, file="CommandLineParserSettings.cs", label="HelpWriter != null", prediction=10, span="178-178"];
m9_35 [cluster="CommandLine.CommandLineParserSettings.Dispose(bool)", color=green, community=0, file="CommandLineParserSettings.cs", label="HelpWriter.Dispose()", prediction=10, span="180-180"];
m9_36 [cluster="CommandLine.CommandLineParserSettings.Dispose(bool)", file="CommandLineParserSettings.cs", label="_disposed = true", span="182-182"];
m9_37 [cluster="CommandLine.CommandLineParserSettings.Dispose(bool)", file="CommandLineParserSettings.cs", label="Exit CommandLine.CommandLineParserSettings.Dispose(bool)", span="174-174"];
m9_21 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", span="128-128"];
m9_22 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="CaseSensitive = caseSensitive", span="130-130"];
m9_23 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="MutuallyExclusive = mutuallyExclusive", span="131-131"];
m9_24 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="HelpWriter = helpWriter", span="132-132"];
m9_25 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="IgnoreUnknownArguments = ignoreUnknownArguments", span="133-133"];
m9_26 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", span="128-128"];
m9_39 [cluster="CommandLine.CommandLineParserSettings.~CommandLineParserSettings()", file="CommandLineParserSettings.cs", label="Entry CommandLine.CommandLineParserSettings.~CommandLineParserSettings()", span="191-191"];
m9_40 [cluster="CommandLine.CommandLineParserSettings.~CommandLineParserSettings()", file="CommandLineParserSettings.cs", label="Dispose(false)", span="193-193"];
m9_41 [cluster="CommandLine.CommandLineParserSettings.~CommandLineParserSettings()", file="CommandLineParserSettings.cs", label="Exit CommandLine.CommandLineParserSettings.~CommandLineParserSettings()", span="191-191"];
m9_42 [file="CommandLineParserSettings.cs", label="CommandLine.CommandLineParserSettings", span=""];
m11_25 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="HelpOptionAttribute.cs", label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="112-112"];
m11_28 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="HelpOptionAttribute.cs", label="return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", span="114-114"];
m11_29 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="HelpOptionAttribute.cs", label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="112-112"];
m11_18 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="HelpOptionAttribute.cs", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="103-103"];
m11_19 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="HelpOptionAttribute.cs", label="text = null", span="106-106"];
m11_20 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="HelpOptionAttribute.cs", label="var method = pair.Left", span="107-107"];
m11_23 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="HelpOptionAttribute.cs", label="text = (string)method.Invoke(target, null)", span="109-109"];
m11_21 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="HelpOptionAttribute.cs", label="!CheckMethodSignature(method)", span="108-108"];
m11_22 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="HelpOptionAttribute.cs", label="throw new MemberAccessException();", span="108-108"];
m11_24 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="HelpOptionAttribute.cs", label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="103-103"];
m11_27 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="HelpOptionAttribute.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m11_8 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)", file="HelpOptionAttribute.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)", span="72-72"];
m11_11 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)", file="HelpOptionAttribute.cs", label="HelpText = DefaultHelpText", span="76-76"];
m11_12 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)", file="HelpOptionAttribute.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)", span="72-72"];
m11_0 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="HelpOptionAttribute.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="49-49"];
m11_1 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="HelpOptionAttribute.cs", label="HelpText = DefaultHelpText", span="52-52"];
m11_2 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="HelpOptionAttribute.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="49-49"];
m11_3 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char)", file="HelpOptionAttribute.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(char)", span="60-60"];
m11_6 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char)", file="HelpOptionAttribute.cs", label="HelpText = DefaultHelpText", span="64-64"];
m11_7 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char)", file="HelpOptionAttribute.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(char)", span="60-60"];
m11_13 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char, string)", file="HelpOptionAttribute.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(char, string)", span="85-85"];
m11_16 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char, string)", file="HelpOptionAttribute.cs", label="HelpText = DefaultHelpText", span="89-89"];
m11_17 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char, string)", file="HelpOptionAttribute.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(char, string)", span="85-85"];
m11_26 [cluster="System.MemberAccessException.MemberAccessException()", file="HelpOptionAttribute.cs", label="Entry System.MemberAccessException.MemberAccessException()", span="0-0"];
m11_30 [cluster="System.Reflection.MethodBase.GetParameters()", file="HelpOptionAttribute.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m11_31 [file="HelpOptionAttribute.cs", label="CommandLine.HelpOptionAttribute", span=""];
m13_30 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", span="44-44"];
m13_31 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="HelpVerbOptionAttribute.cs", label="specProps == null", span="49-49"];
m13_33 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="HelpVerbOptionAttribute.cs", label="return rules.SelectMany(rule => rule(specProps));", span="51-51"];
m13_32 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="HelpVerbOptionAttribute.cs", label="throw new ArgumentNullException(''specProps'');", span="49-49"];
m13_34 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", span="44-44"];
m13_0 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", span="11-11"];
m13_1 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="HelpVerbOptionAttribute.cs", label="specProp == null", span="13-13"];
m13_3 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="HelpVerbOptionAttribute.cs", label="newSpecification == null", span="14-14"];
m13_5 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="HelpVerbOptionAttribute.cs", label="return SpecificationProperty.Create(newSpecification, specProp.Property, specProp.Value);", span="16-16"];
m13_2 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="HelpVerbOptionAttribute.cs", label="throw new ArgumentNullException(''specProp'');", span="13-13"];
m13_4 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="HelpVerbOptionAttribute.cs", label="throw new ArgumentNullException(''newSpecification'');", span="14-14"];
m13_6 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", span="11-11"];
m13_16 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", span="27-27"];
m13_17 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="HelpVerbOptionAttribute.cs", label="specProp == null", span="29-29"];
m13_19 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="HelpVerbOptionAttribute.cs", label="specProp.Specification.ConversionType.ToDescriptor()", span="31-31"];
m13_22 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="HelpVerbOptionAttribute.cs", label="return specProp.Property.PropertyType;", span="40-40"];
m13_18 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="HelpVerbOptionAttribute.cs", label="throw new ArgumentNullException(''specProp'');", span="29-29"];
m13_20 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="HelpVerbOptionAttribute.cs", label="TypeDescriptorKind.Sequence", span="33-33"];
m13_23 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", span="27-27"];
m13_29 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="137-137"];
m13_8 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21"];
m13_9 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", span="19-19"];
m13_10 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="HelpVerbOptionAttribute.cs", label="specProp == null", span="21-21"];
m13_12 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="HelpVerbOptionAttribute.cs", label="newValue == null", span="22-22"];
m13_14 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="HelpVerbOptionAttribute.cs", label="return SpecificationProperty.Create(specProp.Specification, specProp.Property, newValue);", span="24-24"];
m13_11 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="HelpVerbOptionAttribute.cs", label="throw new ArgumentNullException(''specProp'');", span="21-21"];
m13_13 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="HelpVerbOptionAttribute.cs", label="throw new ArgumentNullException(''newValue'');", span="22-22"];
m13_15 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", span="19-19"];
m13_25 [cluster="System.Type.GetGenericArguments()", file="HelpVerbOptionAttribute.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m13_27 [cluster="T.ToMaybe<T>()", file="HelpVerbOptionAttribute.cs", label="Entry T.ToMaybe<T>()", span="82-82"];
m13_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="HelpVerbOptionAttribute.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m13_36 [cluster="lambda expression", file="HelpVerbOptionAttribute.cs", label="Entry lambda expression", span="51-51"];
m13_37 [cluster="lambda expression", file="HelpVerbOptionAttribute.cs", label="rule(specProps)", span="51-51"];
m13_38 [cluster="lambda expression", file="HelpVerbOptionAttribute.cs", label="Exit lambda expression", span="51-51"];
m13_24 [cluster="System.Type.ToDescriptor()", file="HelpVerbOptionAttribute.cs", label="Entry System.Type.ToDescriptor()", span="22-22"];
m13_7 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="HelpVerbOptionAttribute.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m13_28 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="HelpVerbOptionAttribute.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m13_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="HelpVerbOptionAttribute.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m13_39 [cluster="System.Func<T, TResult>.Invoke(T)", file="HelpVerbOptionAttribute.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m13_40 [file="HelpVerbOptionAttribute.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", span=""];
m14_2 [cluster="CommandLine.Internal.IArgumentEnumerator.MoveNext()", file="IArgumentEnumerator.cs", label="Entry CommandLine.Internal.IArgumentEnumerator.MoveNext()", span="48-48"];
m14_3 [cluster="CommandLine.Internal.IArgumentEnumerator.MoveNext()", file="IArgumentEnumerator.cs", label="Exit CommandLine.Internal.IArgumentEnumerator.MoveNext()", span="48-48"];
m14_0 [cluster="CommandLine.Internal.IArgumentEnumerator.GetRemainingFromNext()", file="IArgumentEnumerator.cs", label="Entry CommandLine.Internal.IArgumentEnumerator.GetRemainingFromNext()", span="43-43"];
m14_1 [cluster="CommandLine.Internal.IArgumentEnumerator.GetRemainingFromNext()", file="IArgumentEnumerator.cs", label="Exit CommandLine.Internal.IArgumentEnumerator.GetRemainingFromNext()", span="43-43"];
m14_4 [cluster="CommandLine.Internal.IArgumentEnumerator.MovePrevious()", file="IArgumentEnumerator.cs", label="Entry CommandLine.Internal.IArgumentEnumerator.MovePrevious()", span="50-50"];
m14_5 [cluster="CommandLine.Internal.IArgumentEnumerator.MovePrevious()", file="IArgumentEnumerator.cs", label="Exit CommandLine.Internal.IArgumentEnumerator.MovePrevious()", span="50-50"];
m16_0 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="12-12"];
m16_1 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="MultiLineTextAttribute.cs", label="result.Tag == ResultType.Ok", span="14-14"];
m16_2 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="MultiLineTextAttribute.cs", label="var ok = (Ok<TSuccess, TMessage>)result", span="16-16"];
m16_4 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="MultiLineTextAttribute.cs", label="return Enumerable.Empty<TMessage>();", span="19-19"];
m16_3 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="MultiLineTextAttribute.cs", label="return ok.Value.Messages;", span="17-17"];
m16_5 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="12-12"];
m16_6 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="MultiLineTextAttribute.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m18_2 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string)", file="OptionArrayAttribute.cs", label="Entry CommandLine.OptionArrayAttribute.OptionArrayAttribute(string)", span="46-46"];
m18_3 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string)", file="OptionArrayAttribute.cs", label="Exit CommandLine.OptionArrayAttribute.OptionArrayAttribute(string)", span="46-46"];
m18_4 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(char, string)", file="OptionArrayAttribute.cs", label="Entry CommandLine.OptionArrayAttribute.OptionArrayAttribute(char, string)", span="53-53"];
m18_5 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(char, string)", file="OptionArrayAttribute.cs", label="Exit CommandLine.OptionArrayAttribute.OptionArrayAttribute(char, string)", span="53-53"];
m18_0 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(char)", file="OptionArrayAttribute.cs", label="Entry CommandLine.OptionArrayAttribute.OptionArrayAttribute(char)", span="40-40"];
m18_1 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(char)", file="OptionArrayAttribute.cs", label="Exit CommandLine.OptionArrayAttribute.OptionArrayAttribute(char)", span="40-40"];
m20_88 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="292-292"];
m20_96 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="OptionInfo.cs", label="throw new ArgumentNullException(''parserResult'');", span="294-294"];
m20_98 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="OptionInfo.cs", label="throw new ArgumentNullException(''current'');", span="295-295"];
m20_95 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="OptionInfo.cs", label="parserResult == null", span="294-294"];
m20_97 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="OptionInfo.cs", label="current == null", span="295-295"];
m20_99 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="OptionInfo.cs", label="FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors).Empty()", span="297-297"];
m20_100 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="OptionInfo.cs", label="return current;", span="299-299"];
m20_103 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="OptionInfo.cs", label="return current;", span="308-308"];
m20_107 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="OptionInfo.cs", label="return current;", span="318-318"];
m20_101 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="OptionInfo.cs", label="var errors = RenderParsingErrorsText(parserResult,\r\n                current.SentenceBuilder.FormatError,\r\n                current.SentenceBuilder.FormatMutuallyExclusiveSetErrors,\r\n                2)", span="302-305"];
m20_104 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="OptionInfo.cs", label="current.AddPreOptionsLine(\r\n                string.Concat(Environment.NewLine, current.SentenceBuilder.ErrorsHeadingText()))", span="311-312"];
m20_106 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="OptionInfo.cs", label="lines.ForEach(\r\n                line => current.AddPreOptionsLine(line))", span="315-316"];
m20_102 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="OptionInfo.cs", label="string.IsNullOrEmpty(errors)", span="306-306"];
m20_105 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="OptionInfo.cs", label="var lines = errors.Split(\r\n                new[] { Environment.NewLine }, StringSplitOptions.None)", span="313-314"];
m20_108 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="292-292"];
m20_109 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="OptionInfo.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
m20_52 [cluster="Unk.Any", file="OptionInfo.cs", label="Entry Unk.Any", span=""];
m20_183 [cluster="System.Text.StringBuilder.AppendLine(string)", file="OptionInfo.cs", label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0"];
m20_0 [cluster="CommandLine.Text.HelpText.HelpText()", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="34-34"];
m20_1 [cluster="CommandLine.Text.HelpText.HelpText()", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.HelpText()", span="34-34"];
m20_293 [cluster="string.PadRight(int)", file="OptionInfo.cs", label="Entry string.PadRight(int)", span="0-0"];
m20_374 [cluster="T.ToStringInvariant<T>()", file="OptionInfo.cs", label="Entry T.ToStringInvariant<T>()", span="15-15"];
m20_190 [cluster="System.Text.StringBuilder.SafeToString()", file="OptionInfo.cs", label="Entry System.Text.StringBuilder.SafeToString()", span="65-65"];
m20_189 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="OptionInfo.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m20_76 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="OptionInfo.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m20_320 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="OptionInfo.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
m20_170 [cluster="System.Text.StringBuilder.AppendIfNotEmpty(params string[])", file="OptionInfo.cs", label="Entry System.Text.StringBuilder.AppendIfNotEmpty(params string[])", span="53-53"];
m20_55 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(T)", span="356-356"];
m20_131 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", file="OptionInfo.cs", label="throw new ArgumentNullException(''options'');", span="358-358"];
m20_130 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", file="OptionInfo.cs", label="Equals(options, default(T))", span="358-358"];
m20_132 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", file="OptionInfo.cs", label="return AddOptionsImpl(\r\n                this.GetSpecificationsFromType(options),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="360-363"];
m20_133 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.AddOptions<T>(T)", span="356-356"];
m20_122 [cluster="CommandLine.Text.HelpText.ToString()", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="459-459"];
m20_185 [cluster="CommandLine.Text.HelpText.ToString()", file="OptionInfo.cs", label="return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="462-474"];
m20_184 [cluster="CommandLine.Text.HelpText.ToString()", file="OptionInfo.cs", label="int ExtraLength = 10", span="461-461"];
m20_186 [cluster="CommandLine.Text.HelpText.ToString()", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.ToString()", span="459-459"];
m20_187 [cluster="string.SafeLength()", file="OptionInfo.cs", label="Entry string.SafeLength()", span="40-40"];
m20_126 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="346-346"];
m20_127 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="OptionInfo.cs", label="return AddLine(postOptionsHelp, value);", span="348-348"];
m20_128 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="346-346"];
m20_111 [cluster="string.IsNullOrEmpty(string)", file="OptionInfo.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m20_340 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="721-721"];
m20_351 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label=AddDashesToOption, span="737-737"];
m20_356 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label=AddDashesToOption, span="748-748"];
m20_350 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="++specLength", span="736-736"];
m20_352 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="++specLength", span="739-739"];
m20_353 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="specLength += metaLength", span="742-742"];
m20_355 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="specLength += spec.LongName.Length", span="747-747"];
m20_357 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="specLength += 2", span="750-750"];
m20_358 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="specLength += metaLength", span="753-753"];
m20_343 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="var specLength = 0", span="723-723"];
m20_344 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="var hasShort = spec.ShortName.Length > 0", span="725-725"];
m20_345 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="var hasLong = spec.LongName.Length > 0", span="726-726"];
m20_347 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="spec.MetaValue.Length > 0", span="729-729"];
m20_348 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="metaLength = spec.MetaValue.Length + 1", span="731-731"];
m20_349 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label=hasShort, span="734-734"];
m20_346 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="var metaLength = 0", span="728-728"];
m20_354 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label=hasLong, span="745-745"];
m20_360 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="specLength += 2", span="758-758"];
m20_361 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="return specLength;", span="761-761"];
m20_359 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="hasShort && hasLong", span="756-756"];
m20_362 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="721-721"];
m20_235 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="OptionInfo.cs", label="return (from verbTuple in Verb.SelectFromTypes(types)\r\n                    select\r\n                        OptionSpecification.NewSwitch(\r\n                            string.Empty,\r\n                            verbTuple.Item1.Name,\r\n                            false,\r\n                            verbTuple.Item1.HelpText,\r\n                            string.Empty)).Concat(new[] { this.MakeHelpEntry(), this.MakeVersionEntry() });", span="536-543"];
m20_144 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="534-534"];
m20_236 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="534-534"];
m20_297 [cluster="string.Trim()", file="OptionInfo.cs", label="Entry string.Trim()", span="0-0"];
m20_188 [cluster="System.Text.StringBuilder.SafeLength()", file="OptionInfo.cs", label="Entry System.Text.StringBuilder.SafeLength()", span="70-70"];
m20_237 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="OptionInfo.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m20_296 [cluster="string.FormatInvariant(params object[])", file="OptionInfo.cs", label="Entry string.FormatInvariant(params object[])", span="20-20"];
m20_23 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="OptionInfo.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m20_220 [cluster="string.Substring(int)", file="OptionInfo.cs", label="Entry string.Substring(int)", span="0-0"];
m20_110 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="422-422"];
m20_158 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="OptionInfo.cs", label="throw new ArgumentNullException(''parserResult'');", span="428-428"];
m20_157 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="OptionInfo.cs", label="parserResult == null", span="428-428"];
m20_159 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="OptionInfo.cs", label="var meaningfulErrors =\r\n                FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors)", span="430-431"];
m20_164 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="OptionInfo.cs", label="text.AppendIfNotEmpty(\r\n                formatMutuallyExclusiveSetErrors(\r\n                    meaningfulErrors.OfType<MutuallyExclusiveSetError>()))", span="448-450"];
m20_161 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="OptionInfo.cs", label="return string.Empty;", span="434-434"];
m20_165 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="OptionInfo.cs", label="return text.ToString();", span="452-452"];
m20_160 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="OptionInfo.cs", label="meaningfulErrors.Empty()", span="432-432"];
m20_163 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="OptionInfo.cs", label="meaningfulErrors\r\n                .Where(e => e.Tag != ErrorType.MutuallyExclusiveSetError)\r\n                .ForEach(\r\n                    error =>\r\n                        {\r\n                            var line = new StringBuilder(indent.Spaces())\r\n                                .Append(formatError(error)); \r\n                            text.AppendLine(line.ToString());\r\n                        })", span="438-446"];
m20_162 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="OptionInfo.cs", label="var text = new StringBuilder()", span="437-437"];
m20_166 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="422-422"];
m20_45 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="477-477"];
m20_191 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="OptionInfo.cs", label="return errors.Where(e => e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError);", span="479-479"];
m20_192 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="477-477"];
m20_319 [cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])", file="OptionInfo.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="21-21"];
m20_53 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="OptionInfo.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m20_50 [cluster="CSharpx.Maybe<T>.FromJust<T>(System.Exception)", file="OptionInfo.cs", label="Entry CSharpx.Maybe<T>.FromJust<T>(System.Exception)", span="160-160"];
m20_48 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="OptionInfo.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12"];
m20_250 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="591-591"];
m20_263 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="addEnumValuesToHelpText && specification.EnumValues.Any()", span="605-605"];
m20_266 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="optionHelpText = ''(Default: {0}) ''.FormatLocal(specification.DefaultValue.FromJust()) + optionHelpText", span="612-612"];
m20_265 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="specification.DefaultValue.IsJust()", span="610-610"];
m20_262 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="var optionHelpText = specification.HelpText", span="603-603"];
m20_264 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="607-607"];
m20_267 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="specification.Required", span="615-615"];
m20_268 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="617-617"];
m20_269 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="!string.IsNullOrEmpty(optionHelpText)", span="620-620"];
m20_271 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="var words = optionHelpText.Split(new[] { ' ' })", span="625-625"];
m20_284 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="650-650"];
m20_287 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="optionsHelp.Append(optionHelpText)", span="657-657"];
m20_258 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="optionsHelp.Append(''  '')", span="593-593"];
m20_259 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="var name = new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.Tag == SpecificationType.Option,\r\n                    it => it.Append(AddOptionName(maxLength, (OptionSpecification)specification)),\r\n                    it => it.Append(AddValueName(maxLength, (ValueSpecification)specification)))", span="594-598"];
m20_260 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="optionsHelp.Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())", span="600-600"];
m20_261 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="optionsHelp.Append(''    '')", span="602-602"];
m20_275 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="optionsHelp.Append(words[i])", span="630-630"];
m20_278 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="optionsHelp.Append('' '')", span="634-634"];
m20_281 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="640-640"];
m20_285 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="651-652"];
m20_288 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="optionsHelp.Append(Environment.NewLine)", span="658-658"];
m20_289 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="optionsHelp.AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="659-659"];
m20_290 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="return this;", span="661-661"];
m20_270 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="var wordBuffer = 0", span="624-624"];
m20_274 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="words[i].Length < (widthOfHelpText - wordBuffer)", span="628-628"];
m20_277 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="(widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="632-632"];
m20_280 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="words[i].Length >= widthOfHelpText && wordBuffer == 0", span="638-638"];
m20_282 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="wordBuffer = widthOfHelpText", span="641-641"];
m20_286 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="optionHelpText.Length > widthOfHelpText", span="654-654"];
m20_272 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="var i = 0", span="626-626"];
m20_273 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="i < words.Length", span="626-626"];
m20_276 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="wordBuffer += words[i].Length", span="631-631"];
m20_279 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="wordBuffer++", span="635-635"];
m20_283 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="i++", span="626-626"];
m20_291 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="591-591"];
m20_254 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="574-574"];
m20_253 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="OptionInfo.cs", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''version'',\r\n                false,\r\n                sentenceBuilder.VersionCommandText(AddDashesToOption),\r\n                string.Empty);", span="576-581"];
m20_229 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="574-574"];
m20_321 [cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", file="OptionInfo.cs", label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="33-33"];
m20_113 [cluster="string.Concat(string, string)", file="OptionInfo.cs", label="Entry string.Concat(string, string)", span="0-0"];
m20_232 [cluster="lambda expression", file="OptionInfo.cs", label="Entry lambda expression", span="528-528"];
m20_56 [cluster="lambda expression", file="OptionInfo.cs", label="Entry lambda expression", span="235-235"];
m20_57 [cluster="lambda expression", color=green, community=0, file="OptionInfo.cs", label="e.Tag == ErrorType.NoVerbSelectedError", prediction=13, span="235-235"];
m20_58 [cluster="lambda expression", file="OptionInfo.cs", label="Exit lambda expression", span="235-235"];
m20_86 [cluster="lambda expression", file="OptionInfo.cs", label="DefaultParsingErrorsHandler(parserResult, current)", span="274-274"];
m20_93 [cluster="lambda expression", file="OptionInfo.cs", label="DefaultParsingErrorsHandler(parserResult, current)", span="284-284"];
m20_85 [cluster="lambda expression", file="OptionInfo.cs", label="Entry lambda expression", span="274-274"];
m20_92 [cluster="lambda expression", file="OptionInfo.cs", label="Entry lambda expression", span="284-284"];
m20_89 [cluster="lambda expression", file="OptionInfo.cs", label="Entry lambda expression", span="281-281"];
m20_79 [cluster="lambda expression", file="OptionInfo.cs", label="Entry lambda expression", span="267-267"];
m20_82 [cluster="lambda expression", file="OptionInfo.cs", label="Entry lambda expression", span="272-272"];
m20_248 [cluster="lambda expression", file="OptionInfo.cs", label="AddOption(requiredWord, maxLength, option, remainingSpace)", span="559-559"];
m20_300 [cluster="lambda expression", file="OptionInfo.cs", label="it.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="597-597"];
m20_304 [cluster="lambda expression", file="OptionInfo.cs", label="it.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="598-598"];
m20_337 [cluster="lambda expression", file="OptionInfo.cs", label="var specLength = spec.Tag == SpecificationType.Option\r\n                            ? this.GetMaxOptionLength((OptionSpecification)spec)\r\n                            : this.GetMaxValueLength((ValueSpecification)spec)", span="712-714"];
m20_90 [cluster="lambda expression", file="OptionInfo.cs", label="DefaultParsingErrorsHandler(pr, current)", span="281-281"];
m20_117 [cluster="lambda expression", file="OptionInfo.cs", label="current.AddPreOptionsLine(line)", span="316-316"];
m20_87 [cluster="lambda expression", file="OptionInfo.cs", label="Exit lambda expression", span="274-274"];
m20_94 [cluster="lambda expression", file="OptionInfo.cs", label="Exit lambda expression", span="284-284"];
m20_91 [cluster="lambda expression", file="OptionInfo.cs", label="Exit lambda expression", span="281-281"];
m20_193 [cluster="lambda expression", file="OptionInfo.cs", label="Entry lambda expression", span="479-479"];
m20_81 [cluster="lambda expression", file="OptionInfo.cs", label="Exit lambda expression", span="267-267"];
m20_80 [cluster="lambda expression", file="OptionInfo.cs", label="e.Tag == ErrorType.VersionRequestedError", span="267-267"];
m20_84 [cluster="lambda expression", file="OptionInfo.cs", label="Exit lambda expression", span="272-272"];
m20_83 [cluster="lambda expression", file="OptionInfo.cs", label="e.Tag == ErrorType.HelpVerbRequestedError", span="272-272"];
m20_247 [cluster="lambda expression", file="OptionInfo.cs", label="Entry lambda expression", span="558-559"];
m20_249 [cluster="lambda expression", file="OptionInfo.cs", label="Exit lambda expression", span="558-559"];
m20_299 [cluster="lambda expression", file="OptionInfo.cs", label="Entry lambda expression", span="597-597"];
m20_303 [cluster="lambda expression", file="OptionInfo.cs", label="Entry lambda expression", span="598-598"];
m20_301 [cluster="lambda expression", file="OptionInfo.cs", label="Exit lambda expression", span="597-597"];
m20_305 [cluster="lambda expression", file="OptionInfo.cs", label="Exit lambda expression", span="598-598"];
m20_336 [cluster="lambda expression", file="OptionInfo.cs", label="Entry lambda expression", span="710-717"];
m20_338 [cluster="lambda expression", file="OptionInfo.cs", label="return Math.Max(length, specLength);", span="716-716"];
m20_176 [cluster="lambda expression", file="OptionInfo.cs", label="var line = new StringBuilder(indent.Spaces())\r\n                                .Append(formatError(error))", span="443-444"];
m20_116 [cluster="lambda expression", file="OptionInfo.cs", label="Entry lambda expression", span="316-316"];
m20_118 [cluster="lambda expression", file="OptionInfo.cs", label="Exit lambda expression", span="316-316"];
m20_172 [cluster="lambda expression", file="OptionInfo.cs", label="Entry lambda expression", span="439-439"];
m20_175 [cluster="lambda expression", file="OptionInfo.cs", label="Entry lambda expression", span="441-446"];
m20_195 [cluster="lambda expression", file="OptionInfo.cs", label="Exit lambda expression", span="479-479"];
m20_194 [cluster="lambda expression", file="OptionInfo.cs", label="e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError", span="479-479"];
m20_177 [cluster="lambda expression", file="OptionInfo.cs", label="text.AppendLine(line.ToString())", span="445-445"];
m20_339 [cluster="lambda expression", file="OptionInfo.cs", label="Exit lambda expression", span="710-717"];
m20_174 [cluster="lambda expression", file="OptionInfo.cs", label="Exit lambda expression", span="439-439"];
m20_173 [cluster="lambda expression", file="OptionInfo.cs", label="e.Tag != ErrorType.MutuallyExclusiveSetError", span="439-439"];
m20_178 [cluster="lambda expression", file="OptionInfo.cs", label="Exit lambda expression", span="441-446"];
m20_233 [cluster="lambda expression", file="OptionInfo.cs", label="v.Index", span="528-528"];
m20_234 [cluster="lambda expression", file="OptionInfo.cs", label="Exit lambda expression", span="528-528"];
m20_302 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="664-664"];
m20_309 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="optionName.AppendWhen(addDashesToOption, '-')", span="669-669"];
m20_314 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="optionName.AppendWhen(addDashesToOption, ''--'')", span="676-676"];
m20_307 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="var optionName = new StringBuilder(maxLength)", span="666-666"];
m20_308 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="specification.ShortName.Length > 0", span="667-667"];
m20_310 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="optionName.AppendFormat(''{0}'', specification.ShortName)", span="670-670"];
m20_313 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="specification.LongName.Length > 0", span="674-674"];
m20_315 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="optionName.AppendFormat(''{0}'', specification.LongName)", span="677-677"];
m20_311 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="optionName.AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)", span="671-671"];
m20_312 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="optionName.AppendWhen(specification.LongName.Length > 0, '', '')", span="672-672"];
m20_316 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="optionName.AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="678-678"];
m20_317 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="return optionName.ToString();", span="680-680"];
m20_318 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="664-664"];
m20_4 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="57-57"];
m20_5 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.HelpText(string)", span="57-57"];
m20_239 [cluster="Unk.Concat", file="OptionInfo.cs", label="Entry Unk.Concat", span=""];
m20_25 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", span="199-199"];
m20_38 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", color=green, community=0, file="OptionInfo.cs", label="(verbsIndex && parserResult.VerbTypes.Any()) || errors.Any(e => e.Tag == ErrorType.NoVerbSelectedError)", prediction=14, span="235-235"];
m20_29 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="OptionInfo.cs", label="errors = ((NotParsed<T>)parserResult).Errors", span="215-215"];
m20_27 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="OptionInfo.cs", label="var errors = Enumerable.Empty<Error>()", span="211-211"];
m20_37 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="OptionInfo.cs", label="usage.FromJust().AddToHelpText(auto, true)", span="232-232"];
m20_36 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="OptionInfo.cs", label="usage.IsJust()", span="230-230"];
m20_39 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", color=green, community=0, file="OptionInfo.cs", label="auto.AddDashesToOption = false", prediction=15, span="237-237"];
m20_41 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", color=green, community=0, file="OptionInfo.cs", label="auto.AddOptions(parserResult.Value)", prediction=14, span="242-242"];
m20_40 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", color=green, community=0, file="OptionInfo.cs", label="auto.AddVerbs(parserResult.VerbTypes.ToArray())", prediction=14, span="238-238"];
m20_26 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="OptionInfo.cs", label="var auto = new HelpText {\r\n                Heading = HeadingInfo.Default,\r\n                Copyright = CopyrightInfo.Default,\r\n                AdditionalNewLineAfterOption = true,\r\n                AddDashesToOption = !verbsIndex\r\n            }", span="204-209"];
m20_31 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="OptionInfo.cs", label="auto = onError(auto)", span="219-219"];
m20_42 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", color=green, community=0, file="OptionInfo.cs", label="return auto;", prediction=14, span="245-245"];
m20_28 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="OptionInfo.cs", label="onError != null && parserResult.Tag == ParserResultType.NotParsed", span="213-213"];
m20_30 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="OptionInfo.cs", label="FilterMeaningfulErrors(errors).Any()", span="217-217"];
m20_35 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="OptionInfo.cs", label="var usage = ReflectionHelper.GetAttribute<AssemblyUsageAttribute>()", span="229-229"];
m20_34 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="OptionInfo.cs", label="license.FromJust().AddToHelpText(auto, true)", span="226-226"];
m20_32 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="OptionInfo.cs", label="var license = ReflectionHelper.GetAttribute<AssemblyLicenseAttribute>()", span="223-223"];
m20_33 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="OptionInfo.cs", label="license.IsJust()", span="224-224"];
m20_43 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", span="199-199"];
m20_59 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="258-258"];
m20_61 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="OptionInfo.cs", label="throw new InvalidOperationException();", span="262-262"];
m20_66 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="OptionInfo.cs", label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current));", span="274-274"];
m20_71 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="OptionInfo.cs", label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), true);", span="284-284"];
m20_70 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="OptionInfo.cs", label="return AutoBuild(pr, current => DefaultParsingErrorsHandler(pr, current));", span="281-281"];
m20_63 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="OptionInfo.cs", label="errors.Any(e => e.Tag == ErrorType.VersionRequestedError)", span="267-267"];
m20_65 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="OptionInfo.cs", label="!errors.Any(e => e.Tag == ErrorType.HelpVerbRequestedError)", span="272-272"];
m20_60 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="OptionInfo.cs", label="parserResult.Tag != ParserResultType.NotParsed", span="260-260"];
m20_62 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="OptionInfo.cs", label="var errors = ((NotParsed<T>)parserResult).Errors", span="265-265"];
m20_68 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="OptionInfo.cs", label="err.Matched", span="278-278"];
m20_69 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="OptionInfo.cs", label="var pr = new NotParsed<object>(err.Type.AutoDefault(), Enumerable.Empty<Error>())", span="280-280"];
m20_64 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="OptionInfo.cs", label="return new HelpText(HeadingInfo.Default).AddPreOptionsLine(Environment.NewLine);", span="269-269"];
m20_67 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="OptionInfo.cs", label="var err = errors.OfType<HelpVerbRequestedError>().Single()", span="277-277"];
m20_72 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="258-258"];
m20_180 [cluster="int.Spaces()", file="OptionInfo.cs", label="Entry int.Spaces()", span="30-30"];
m20_51 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="OptionInfo.cs", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155"];
m20_171 [cluster="System.Text.StringBuilder.ToString()", file="OptionInfo.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m20_167 [cluster="System.Text.StringBuilder.StringBuilder()", file="OptionInfo.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m20_54 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="372-372"];
m20_138 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="OptionInfo.cs", label="throw new ArgumentNullException(''types'');", span="374-374"];
m20_137 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="OptionInfo.cs", label="types == null", span="374-374"];
m20_139 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="OptionInfo.cs", label="types.Length == 0", span="375-375"];
m20_141 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="OptionInfo.cs", label="return AddOptionsImpl(\r\n                this.AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="377-380"];
m20_140 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="OptionInfo.cs", label="throw new ArgumentOutOfRangeException(''types'');", span="375-375"];
m20_142 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="372-372"];
m20_114 [cluster="string.Split(string[], System.StringSplitOptions)", file="OptionInfo.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m20_294 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="OptionInfo.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m20_78 [cluster="System.Type.AutoDefault()", file="OptionInfo.cs", label="Entry System.Type.AutoDefault()", span="138-138"];
m20_115 [cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", file="OptionInfo.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="251-251"];
m20_24 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="OptionInfo.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m20_77 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="OptionInfo.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="142-142"];
m20_217 [cluster="string.Split(params char[])", file="OptionInfo.cs", label="Entry string.Split(params char[])", span="0-0"];
m20_238 [cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", file="OptionInfo.cs", label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45"];
m20_222 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", file="OptionInfo.cs", label="var optionSpecs = specs\r\n                .OfType<OptionSpecification>()\r\n                .Concat(new[] { this.MakeHelpEntry(), this.MakeVersionEntry() })", span="523-525"];
m20_135 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", span="520-520"];
m20_224 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", file="OptionInfo.cs", label="return Enumerable.Empty<Specification>()\r\n                .Concat(optionSpecs)\r\n                .Concat(valueSpecs);", span="529-531"];
m20_221 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", file="OptionInfo.cs", label="var specs = options.GetType().GetSpecifications(Specification.FromProperty)", span="522-522"];
m20_223 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", file="OptionInfo.cs", label="var valueSpecs = specs\r\n                .OfType<ValueSpecification>()\r\n                .OrderBy(v => v.Index)", span="526-528"];
m20_225 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", span="520-520"];
m20_47 [cluster="System.Func<T, TResult>.Invoke(T)", file="OptionInfo.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m20_44 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="OptionInfo.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m20_168 [cluster="Unk.Where", file="OptionInfo.cs", label="Entry Unk.Where", span=""];
m20_298 [cluster="string.String(char, int)", file="OptionInfo.cs", label="Entry string.String(char, int)", span="0-0"];
m20_145 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, T)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, T)", span="389-389"];
m20_147 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, T)", file="OptionInfo.cs", label="throw new ArgumentNullException(''options'');", span="391-391"];
m20_146 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, T)", file="OptionInfo.cs", label="Equals(options, default(T))", span="391-391"];
m20_148 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, T)", file="OptionInfo.cs", label="return AddOptionsImpl(\r\n                this.GetSpecificationsFromType(options),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="393-396"];
m20_149 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, T)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, T)", span="389-389"];
m20_219 [cluster="System.Math.Min(int, int)", file="OptionInfo.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m20_231 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="OptionInfo.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m20_329 [cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", file="OptionInfo.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0"];
m20_136 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="546-546"];
m20_240 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="OptionInfo.cs", label="var maxLength = GetMaxLength(specifications)", span="551-551"];
m20_242 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="OptionInfo.cs", label="var remainingSpace = maximumLength - (maxLength + 6)", span="555-555"];
m20_243 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="OptionInfo.cs", label="specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="557-559"];
m20_241 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="OptionInfo.cs", label="optionsHelp = new StringBuilder(BuilderCapacity)", span="553-553"];
m20_244 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="OptionInfo.cs", label="return this;", span="561-561"];
m20_245 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="546-546"];
m20_134 [cluster="object.Equals(object, object)", file="OptionInfo.cs", label="Entry object.Equals(object, object)", span="0-0"];
m20_182 [cluster="System.Text.StringBuilder.Append(string)", file="OptionInfo.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m20_119 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="326-326"];
m20_120 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="OptionInfo.cs", label="return info.ToString();", span="328-328"];
m20_121 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="326-326"];
m20_125 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="584-584"];
m20_255 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="OptionInfo.cs", label="AddLine(preOptionsHelp, value, maximumLength)", span="586-586"];
m20_256 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="OptionInfo.cs", label="return this;", span="588-588"];
m20_257 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="584-584"];
m20_129 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="700-700"];
m20_330 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="OptionInfo.cs", label="AddLine(builder, value, MaximumDisplayWidth)", span="702-702"];
m20_331 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="OptionInfo.cs", label="return this;", span="704-704"];
m20_332 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="700-700"];
m20_196 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="482-482"];
m20_198 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="OptionInfo.cs", label="var wordBuffer = 0", span="487-487"];
m20_199 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="OptionInfo.cs", label="var words = value.Split(new[] { ' ' })", span="488-488"];
m20_212 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="OptionInfo.cs", label="value = value.Substring(Math.Min(wordBuffer, value.Length))", span="512-512"];
m20_203 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="OptionInfo.cs", label="builder.Append(words[i])", span="493-493"];
m20_206 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="OptionInfo.cs", label="builder.Append('' '')", span="497-497"];
m20_209 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="OptionInfo.cs", label="builder.Append(words[i].Substring(0, maximumLength))", span="503-503"];
m20_215 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="OptionInfo.cs", label="builder.Append(value)", span="517-517"];
m20_197 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="OptionInfo.cs", label="builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="484-484"];
m20_213 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="OptionInfo.cs", label="builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="513-513"];
m20_202 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="OptionInfo.cs", label="words[i].Length < (maximumLength - wordBuffer)", span="491-491"];
m20_205 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="OptionInfo.cs", label="(maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="495-495"];
m20_208 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="OptionInfo.cs", label="words[i].Length >= maximumLength && wordBuffer == 0", span="501-501"];
m20_210 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="OptionInfo.cs", label="wordBuffer = maximumLength", span="504-504"];
m20_214 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="OptionInfo.cs", label="value.Length > maximumLength", span="515-515"];
m20_200 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="OptionInfo.cs", label="var i = 0", span="489-489"];
m20_204 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="OptionInfo.cs", label="wordBuffer += words[i].Length", span="494-494"];
m20_201 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="OptionInfo.cs", label="i < words.Length", span="489-489"];
m20_207 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="OptionInfo.cs", label="wordBuffer++", span="498-498"];
m20_211 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="OptionInfo.cs", label="i++", span="489-489"];
m20_216 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="482-482"];
m20_10 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="93-93"];
m20_13 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", color=green, community=0, file="OptionInfo.cs", label="heading == null", prediction=19, span="96-96"];
m20_11 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="OptionInfo.cs", label="sentenceBuilder == null", span="95-95"];
m20_14 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", color=green, community=0, file="OptionInfo.cs", label="throw new ArgumentNullException(''heading'');", prediction=20, span="96-96"];
m20_15 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="OptionInfo.cs", label="copyright == null", span="97-97"];
m20_19 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="OptionInfo.cs", label="this.sentenceBuilder = sentenceBuilder", span="102-102"];
m20_20 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="OptionInfo.cs", label="this.heading = heading", span="103-103"];
m20_21 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="OptionInfo.cs", label="this.copyright = copyright", span="104-104"];
m20_12 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="OptionInfo.cs", label="throw new ArgumentNullException(''sentenceBuilder'');", span="95-95"];
m20_16 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="OptionInfo.cs", label="throw new ArgumentNullException(''copyright'');", span="97-97"];
m20_17 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="OptionInfo.cs", label="preOptionsHelp = new StringBuilder(BuilderCapacity)", span="99-99"];
m20_18 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="OptionInfo.cs", label="postOptionsHelp = new StringBuilder(BuilderCapacity)", span="100-100"];
m20_22 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="93-93"];
m20_306 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="683-683"];
m20_322 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="OptionInfo.cs", label="var valueName = new StringBuilder(maxLength)", span="685-685"];
m20_323 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="OptionInfo.cs", label="specification.MetaName.Length > 0", span="687-687"];
m20_324 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="OptionInfo.cs", label="valueName.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="689-689"];
m20_325 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="OptionInfo.cs", label="valueName.AppendFormat(''value pos. {0}'', specification.Index)", span="693-693"];
m20_326 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="OptionInfo.cs", label="valueName.AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)", span="695-695"];
m20_327 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="OptionInfo.cs", label="return valueName.ToString();", span="697-697"];
m20_328 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="683-683"];
m20_342 [cluster="System.Math.Max(int, int)", file="OptionInfo.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m20_181 [cluster="Unk.formatError", file="OptionInfo.cs", label="Entry Unk.formatError", span=""];
m20_246 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="707-707"];
m20_333 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="OptionInfo.cs", label="return specifications.Aggregate(0,\r\n                (length, spec) =>\r\n                    {\r\n                        var specLength = spec.Tag == SpecificationType.Option\r\n                            ? this.GetMaxOptionLength((OptionSpecification)spec)\r\n                            : this.GetMaxValueLength((ValueSpecification)spec);\r\n\r\n                        return Math.Max(length, specLength);\r\n                    });", span="709-717"];
m20_334 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="707-707"];
m20_292 [cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="OptionInfo.cs", label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="47-47"];
m20_143 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="OptionInfo.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m20_252 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="564-564"];
m20_251 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="OptionInfo.cs", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''help'',\r\n                false,\r\n                sentenceBuilder.HelpCommandText(AddDashesToOption),\r\n                string.Empty);", span="566-571"];
m20_228 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="564-564"];
m20_73 [cluster="System.InvalidOperationException.InvalidOperationException()", file="OptionInfo.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m20_295 [cluster="string.FormatLocal(params object[])", file="OptionInfo.cs", label="Entry string.FormatLocal(params object[])", span="25-25"];
m20_218 [cluster="string.Substring(int, int)", file="OptionInfo.cs", label="Entry string.Substring(int, int)", span="0-0"];
m20_341 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="764-764"];
m20_363 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="OptionInfo.cs", label="var specLength = 0", span="766-766"];
m20_364 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="OptionInfo.cs", label="var hasMeta = spec.MetaName.Length > 0", span="768-768"];
m20_366 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="OptionInfo.cs", label="spec.MetaValue.Length > 0", span="771-771"];
m20_367 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="OptionInfo.cs", label="metaLength = spec.MetaValue.Length + 1", span="773-773"];
m20_369 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="OptionInfo.cs", label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="778-778"];
m20_370 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="OptionInfo.cs", label="specLength += spec.Index.ToStringInvariant().Length + 11", span="782-782"];
m20_365 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="OptionInfo.cs", label="var metaLength = 0", span="770-770"];
m20_372 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="OptionInfo.cs", label="return specLength;", span="787-787"];
m20_368 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="OptionInfo.cs", label=hasMeta, span="776-776"];
m20_371 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="OptionInfo.cs", label="specLength += metaLength", span="785-785"];
m20_373 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="764-764"];
m20_74 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="336-336"];
m20_123 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="OptionInfo.cs", label="return AddPreOptionsLine(value, MaximumDisplayWidth);", span="338-338"];
m20_124 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="336-336"];
m20_227 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="OptionInfo.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="14-14"];
m20_46 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="OptionInfo.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m20_112 [cluster="System.Func<TResult>.Invoke()", file="OptionInfo.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m20_226 [cluster="object.GetType()", file="OptionInfo.cs", label="Entry object.GetType()", span="0-0"];
m20_150 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="406-406"];
m20_152 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="OptionInfo.cs", label="throw new ArgumentNullException(''types'');", span="408-408"];
m20_151 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="OptionInfo.cs", label="types == null", span="408-408"];
m20_155 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="OptionInfo.cs", label="return AddOptionsImpl(this.AdaptVerbsToSpecifications(types), SentenceBuilder.RequiredWord(), maximumLength);", span="411-411"];
m20_153 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="OptionInfo.cs", label="types.Length == 0", span="409-409"];
m20_154 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="OptionInfo.cs", label="throw new ArgumentOutOfRangeException(''types'');", span="409-409"];
m20_156 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="OptionInfo.cs", label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="406-406"];
m20_169 [cluster="Unk.ForEach", file="OptionInfo.cs", label="Entry Unk.ForEach", span=""];
m20_335 [cluster="Unk.Aggregate", file="OptionInfo.cs", label="Entry Unk.Aggregate", span=""];
m20_179 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="OptionInfo.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m20_75 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="OptionInfo.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m20_49 [cluster="CSharpx.Maybe<T>.IsJust<T>()", file="OptionInfo.cs", label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="175-175"];
m20_230 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="OptionInfo.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m20_375 [file="OptionInfo.cs", label="CommandLine.Text.HelpText", span=""];
m20_376 [file="OptionInfo.cs", label="CommandLine.ParserResult<T>", span=""];
m20_382 [file="OptionInfo.cs", label=string, span=""];
m20_383 [file="OptionInfo.cs", label=maxLength, span=""];
m20_384 [file="OptionInfo.cs", label=remainingSpace, span=""];
m20_385 [file="OptionInfo.cs", label=int, span=""];
m20_386 [file="OptionInfo.cs", label="CommandLine.Core.Specification", span=""];
m20_377 [file="OptionInfo.cs", label=pr, span=""];
m20_378 [file="OptionInfo.cs", label="CommandLine.Text.HelpText", span=""];
m20_379 [file="OptionInfo.cs", label="System.Func<CommandLine.Error, string>", span=""];
m20_380 [file="OptionInfo.cs", label=int, span=""];
m20_381 [file="OptionInfo.cs", label=text, span=""];
m22_0 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char)", file="OptionListAttribute.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(char)", span="42-42"];
m22_1 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char)", file="OptionListAttribute.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(char)", span="42-42"];
m22_7 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", file="OptionListAttribute.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", span="67-67"];
m22_8 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", file="OptionListAttribute.cs", label="Separator = separator", span="70-70"];
m22_9 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", file="OptionListAttribute.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", span="67-67"];
m22_2 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string)", file="OptionListAttribute.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string)", span="48-48"];
m22_3 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string)", file="OptionListAttribute.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string)", span="48-48"];
m22_4 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string)", file="OptionListAttribute.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(char, string)", span="55-55"];
m22_5 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string)", file="OptionListAttribute.cs", label="Separator = ':'", span="58-58"];
m22_6 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string)", file="OptionListAttribute.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(char, string)", span="55-55"];
m22_10 [file="OptionListAttribute.cs", label="CommandLine.OptionListAttribute", span=""];
m23_37 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="Entry CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", span="176-176"];
m23_57 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="var list = ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(options)", span="178-178"];
m23_61 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="property.GetValue(options, null) == null", span="185-185"];
m23_62 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="property.SetValue(options, new CommandLine.ParserState(), null)", span="187-187"];
m23_63 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="var parserState = (IParserState)property.GetValue(options, null)", span="189-189"];
m23_66 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="var error = new ParsingError\r\n            {\r\n                BadOption =\r\n                {\r\n                    ShortName = option.ShortName,\r\n                    LongName = option.LongName\r\n                }\r\n            }", span="194-201"];
m23_67 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="required != null", span="202-202"];
m23_68 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="error.ViolatesRequired = required.Value", span="202-202"];
m23_69 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="mutualExclusiveness != null", span="203-203"];
m23_70 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="203-203"];
m23_59 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="return;", span="181-181"];
m23_71 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="parserState.Errors.Add(error)", span="204-204"];
m23_65 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="return;", span="192-192"];
m23_58 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="list.Count == 0", span="179-179"];
m23_60 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="var property = list[0].Left", span="183-183"];
m23_64 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="parserState == null", span="190-190"];
m23_72 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="Exit CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", span="176-176"];
m23_49 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="OptionMap.cs", label="Entry CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", span="166-166"];
m23_51 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="OptionMap.cs", label="!_mutuallyExclusiveSetMap.ContainsKey(setName)", span="169-169"];
m23_52 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="OptionMap.cs", label="_mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="171-171"];
m23_53 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="OptionMap.cs", label="_mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="173-173"];
m23_50 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="OptionMap.cs", label="var setName = option.MutuallyExclusiveSet", span="168-168"];
m23_54 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="OptionMap.cs", label="Exit CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", span="166-166"];
m23_29 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionMap.cs", label="Entry CommandLine.Internal.OptionInfo.SetDefault(object)", span="179-179"];
m23_19 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", file="OptionMap.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m23_25 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="OptionMap.cs", label="Entry CommandLine.Internal.OptionMap.SetDefaults()", span="120-120"];
m23_26 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="OptionMap.cs", label="_map.Values", span="122-122"];
m23_27 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="OptionMap.cs", label="option.SetDefault(RawOptions)", span="124-124"];
m23_28 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="OptionMap.cs", label="Exit CommandLine.Internal.OptionMap.SetDefaults()", span="120-120"];
m23_20 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="OptionMap.cs", label="Entry CommandLine.Internal.OptionMap.EnforceRules()", span="115-115"];
m23_21 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", color=green, community=0, file="OptionMap.cs", label="return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", prediction=21, span="117-117"];
m23_22 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="OptionMap.cs", label="Exit CommandLine.Internal.OptionMap.EnforceRules()", span="115-115"];
m23_56 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="OptionMap.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m23_75 [cluster="CommandLine.ParserState.ParserState()", file="OptionMap.cs", label="Entry CommandLine.ParserState.ParserState()", span="47-47"];
m23_78 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="OptionMap.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m23_8 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs", label="Entry CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="61-61"];
m23_9 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="OptionMap.cs", label="_settings = settings", prediction=22, span="63-63"];
m23_10 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="OptionMap.cs", label="IEqualityComparer<string> comparer", prediction=23, span="65-65"];
m23_11 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs", label="_settings.CaseSensitive", span="66-66"];
m23_14 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs", label="_names = new Dictionary<string, string>(capacity, comparer)", span="74-74"];
m23_15 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs", label="_map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="75-75"];
m23_16 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs", label="_settings.MutuallyExclusive", span="76-76"];
m23_17 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs", label="_mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="78-78"];
m23_12 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs", label="comparer = StringComparer.Ordinal", span="68-68"];
m23_13 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs", label="comparer = StringComparer.OrdinalIgnoreCase", span="72-72"];
m23_18 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs", label="Exit CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="61-61"];
m23_73 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="OptionMap.cs", label="Entry CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="43-43"];
m23_76 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="OptionMap.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m23_77 [cluster="CommandLine.ParsingError.ParsingError()", file="OptionMap.cs", label="Entry CommandLine.ParsingError.ParsingError()", span="47-47"];
m23_55 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="OptionMap.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m23_74 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="OptionMap.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m23_2 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="OptionMap.cs", label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", span="47-47"];
m23_3 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="OptionMap.cs", label="BadOption = option", span="49-49"];
m23_4 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="OptionMap.cs", label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", span="47-47"];
m23_5 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="OptionMap.cs", label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="54-54"];
m23_6 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="OptionMap.cs", label="++_count", span="54-54"];
m23_7 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="OptionMap.cs", label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="54-54"];
m23_23 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="Entry CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", span="142-142"];
m23_38 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="!_settings.MutuallyExclusive", span="144-144"];
m23_40 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="_map.Values", span="148-148"];
m23_42 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="BuildMutuallyExclusiveMap(option)", span="152-152"];
m23_43 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="_mutuallyExclusiveSetMap.Values", span="155-155"];
m23_45 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="SetParserStateIfNeeded(RawOptions, info.BadOption, null, true)", span="159-159"];
m23_46 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="return false;", span="160-160"];
m23_39 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="return true;", span="146-146"];
m23_41 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="option.IsDefined && option.MutuallyExclusiveSet != null", span="150-150"];
m23_44 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="info.Occurrence > 1", span="157-157"];
m23_47 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="return true;", span="163-163"];
m23_48 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="Exit CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", span="142-142"];
m23_24 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionMap.cs", label="Entry CommandLine.Internal.OptionMap.EnforceRequiredRule()", span="128-128"];
m23_31 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionMap.cs", label="_map.Values", span="131-131"];
m23_33 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionMap.cs", label="SetParserStateIfNeeded(RawOptions, option, true, null)", span="135-135"];
m23_30 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionMap.cs", label="bool requiredRulesAllMet = true", span="130-130"];
m23_32 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionMap.cs", label="option.Required && !option.IsDefined", span="133-133"];
m23_34 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionMap.cs", label="requiredRulesAllMet = false", span="136-136"];
m23_35 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionMap.cs", label="return requiredRulesAllMet;", span="139-139"];
m23_36 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionMap.cs", label="Exit CommandLine.Internal.OptionMap.EnforceRequiredRule()", span="128-128"];
m23_80 [file="OptionMap.cs", label="CommandLine.Internal.OptionMap", span=""];
m23_79 [file="OptionMap.cs", label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo", span=""];
m24_40 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", span="111-111"];
m24_41 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="116-120"];
m24_42 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="Pair.cs", label="Assert.True(expected.SequenceEqual(result.Value.IntSequence))", span="123-123"];
m24_43 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", span="111-111"];
m24_357 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", span="834-834"];
m24_358 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", file="Pair.cs", label="Action test = () => InstanceBuilder.Build(\r\n                () => new FakeOptionsWithMinMaxZero(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="837-841"];
m24_359 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", file="Pair.cs", label="Assert.Throws<ApplicationException>(test)", span="844-844"];
m24_360 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", span="834-834"];
m24_338 [cluster="Unk.>", file="Pair.cs", label="Entry Unk.>", span=""];
m24_62 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraint.FakeOptionsWithSequenceAndOnlyMaxConstraint()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraint.FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="6-6"];
m24_151 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", span="384-384"];
m24_152 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndSeparator(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="389-393"];
m24_153 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="Pair.cs", label="expected.ShouldBeEquivalentTo(result.Value.LongSequence)", span="396-396"];
m24_154 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", span="384-384"];
m24_54 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraint.FakeOptionsWithSequenceAndOnlyMinConstraint()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraint.FakeOptionsWithSequenceAndOnlyMinConstraint()", span="6-6"];
m24_266 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", span="635-635"];
m24_267 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="640-644"];
m24_268 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="Pair.cs", label="Assert.True(expected.Equals(result.Value.StringValue))", span="647-647"];
m24_269 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", span="635-635"];
m24_334 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", span="806-806"];
m24_335 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", file="Pair.cs", label="Action test = () => InstanceBuilder.Build(\r\n                () => new FakeOptionsWithMinZero(),\r\n                new string[] {},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="809-813"];
m24_336 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", file="Pair.cs", label="Assert.Throws<ApplicationException>(test)", span="816-816"];
m24_337 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", span="806-806"];
m24_307 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", span="739-739"];
m24_308 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithNullables(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="744-748"];
m24_309 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="Pair.cs", label="expected.ShouldBeEquivalentTo(result.Value.NullableLong)", span="751-751"];
m24_310 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", span="739-739"];
m24_78 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="Pair.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m24_166 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="427-427"];
m24_167 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="Pair.cs", label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''str1'',\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''-a'', ''--bee'', ''-c'' },\r\n                    IntValue = 20\r\n                }", span="430-436"];
m24_168 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="Pair.cs", label="var arguments = new[] { ''--stringvalue'', ''str1'', ''--'', ''10'', ''-a'', ''--bee'', ''-c'', ''20'' }", span="437-437"];
m24_170 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="Pair.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="450-450"];
m24_169 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                (a, optionSpecs) =>\r\n                    Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="440-447"];
m24_171 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="427-427"];
m24_258 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="614-614"];
m24_259 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="Pair.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="617-617"];
m24_260 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-zx'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="620-624"];
m24_261 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="Pair.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="627-627"];
m24_262 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="614-614"];
m24_108 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", span="11-11"];
m24_203 [cluster="CommandLine.Tests.Fakes.FakeOptionWithRequiredAndSet.FakeOptionWithRequiredAndSet()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequiredAndSet.FakeOptionWithRequiredAndSet()", span="4-4"];
m24_73 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="193-193"];
m24_74 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="196-196"];
m24_75 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMinConstraintAsValue(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="199-203"];
m24_76 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="206-206"];
m24_77 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="193-193"];
m24_246 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="Pair.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="272-272"];
m24_91 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="232-232"];
m24_92 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="235-235"];
m24_93 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue(),\r\n                new[] { ''one'', ''two'', ''three'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="238-242"];
m24_94 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="245-245"];
m24_95 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="232-232"];
m24_183 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Pair.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m24_314 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", span="759-759"];
m24_315 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithFSharpOption(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="764-768"];
m24_317 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="Pair.cs", label="expectedValue.ShouldBeEquivalentTo(result.Value.FileName.Value)", span="773-773"];
m24_318 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="Pair.cs", label="expectedSome.ShouldBeEquivalentTo(FSharpOption<string>.get_IsSome(result.Value.FileName))", span="775-775"];
m24_316 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="Pair.cs", label="result.Value.FileName != null", span="771-771"];
m24_319 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", span="759-759"];
m24_298 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceMinMaxEqual.FakeOptionsWithSequenceMinMaxEqual()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceMinMaxEqual.FakeOptionsWithSequenceMinMaxEqual()", span="9-9"];
m24_306 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithNullables.FakeOptionsWithNullables()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithNullables.FakeOptionsWithNullables()", span="4-4"];
m24_6 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m24_250 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="595-595"];
m24_251 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="Pair.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="598-598"];
m24_252 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-z'', ''-x'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="601-605"];
m24_253 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="Pair.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="608-608"];
m24_254 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="595-595"];
m24_109 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", span="275-275"];
m24_110 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="Pair.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="278-278"];
m24_111 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''3'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="281-285"];
m24_112 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="Pair.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="288-288"];
m24_113 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", span="275-275"];
m24_368 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], int)", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], int)", span="853-853"];
m24_369 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], int)", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithNamedAndEmptySets(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="855-859"];
m24_370 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], int)", file="Pair.cs", label="result.Errors.Should().HaveCount(x => x == expected)", span="862-862"];
m24_371 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], int)", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], int)", span="853-853"];
m24_7 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="Pair.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338"];
m24_377 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithNamedAndEmptySets.FakeOptionsWithNamedAndEmptySets()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithNamedAndEmptySets.FakeOptionsWithNamedAndEmptySets()", span="4-4"];
m24_104 [cluster="Unk.ShouldBeEquivalentTo", file="Pair.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m24_172 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Pair.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33"];
m24_388 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", span="886-886"];
m24_389 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithScalarValueAndSequenceStringAdjacent(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="891-895"];
m24_390 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="Pair.cs", label="expected.ShouldBeEquivalentTo(result.Value)", span="898-898"];
m24_391 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", span="886-886"];
m24_82 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", span="6-6"];
m24_143 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", span="362-362"];
m24_144 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceWithoutRange(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="367-371"];
m24_145 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="Pair.cs", label="expected.ShouldBeEquivalentTo(result.Value.LongSequence)", span="374-374"];
m24_146 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", span="362-362"];
m24_55 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="156-156"];
m24_56 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMaxConstraint(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="161-165"];
m24_57 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="Pair.cs", label="Assert.True(expected.SequenceEqual(result.Value.StringSequence))", span="168-168"];
m24_58 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="156-156"];
m24_31 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", span="89-89"];
m24_32 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequence(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="94-98"];
m24_33 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="Pair.cs", label="Assert.True(expected.SequenceEqual(result.Value.IntSequence))", span="101-101"];
m24_34 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", span="89-89"];
m24_392 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="892-892"];
m24_13 [cluster="lambda expression", file="Pair.cs", label=fakeOptions, span="27-27"];
m24_12 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="27-27"];
m24_14 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="27-27"];
m24_20 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="48-48"];
m24_21 [cluster="lambda expression", file="Pair.cs", label="new FakeOptions()", span="48-48"];
m24_22 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="48-48"];
m24_27 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="71-71"];
m24_28 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithDouble()", span="71-71"];
m24_29 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="71-71"];
m24_36 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="95-95"];
m24_37 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithSequence()", span="95-95"];
m24_38 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="95-95"];
m24_44 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="117-117"];
m24_45 [cluster="lambda expression", file="Pair.cs", label="new FakeOptions()", span="117-117"];
m24_46 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="117-117"];
m24_51 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="140-140"];
m24_52 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithSequenceAndOnlyMinConstraint()", span="140-140"];
m24_53 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="140-140"];
m24_59 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="162-162"];
m24_60 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="162-162"];
m24_61 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="162-162"];
m24_70 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="181-181"];
m24_71 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithSequenceAndOnlyMinConstraint()", span="181-181"];
m24_72 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="181-181"];
m24_79 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="200-200"];
m24_80 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", span="200-200"];
m24_81 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="200-200"];
m24_88 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="220-220"];
m24_89 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="220-220"];
m24_90 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="220-220"];
m24_96 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="239-239"];
m24_97 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", span="239-239"];
m24_98 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="239-239"];
m24_105 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="263-263"];
m24_106 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithEnum()", span="263-263"];
m24_107 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="263-263"];
m24_115 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="282-282"];
m24_116 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithEnum()", span="282-282"];
m24_117 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="282-282"];
m24_123 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="301-301"];
m24_124 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithEnum()", span="301-301"];
m24_125 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="301-301"];
m24_131 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="320-320"];
m24_132 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithEnum()", span="320-320"];
m24_133 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="320-320"];
m24_140 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="345-345"];
m24_141 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithValues()", span="345-345"];
m24_142 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="345-345"];
m24_147 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="368-368"];
m24_148 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithSequenceWithoutRange()", span="368-368"];
m24_149 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="368-368"];
m24_155 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="390-390"];
m24_156 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithSequenceAndSeparator()", span="390-390"];
m24_157 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="390-390"];
m24_163 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="412-412"];
m24_164 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithSequenceAndSeparator()", span="412-412"];
m24_165 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="412-412"];
m24_173 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="441-441"];
m24_176 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="442-444"];
m24_174 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithValues()", span="441-441"];
m24_175 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="441-441"];
m24_177 [cluster="lambda expression", file="Pair.cs", label="Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)))", span="443-444"];
m24_181 [cluster="lambda expression", file="Pair.cs", label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))", span="444-444"];
m24_185 [cluster="lambda expression", file="Pair.cs", label="NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)", span="444-444"];
m24_178 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="442-444"];
m24_180 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="444-444"];
m24_182 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="444-444"];
m24_184 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="444-444"];
m24_186 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="444-444"];
m24_194 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="467-467"];
m24_195 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithSets()", span="467-467"];
m24_196 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="467-467"];
m24_204 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="487-487"];
m24_205 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionWithRequiredAndSet()", span="487-487"];
m24_206 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="487-487"];
m24_212 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="507-507"];
m24_213 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionWithRequiredAndSet()", span="507-507"];
m24_214 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="507-507"];
m24_221 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="527-527"];
m24_222 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionWithRequiredAndSet()", span="527-527"];
m24_223 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="527-527"];
m24_229 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="545-545"];
m24_230 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionWithRequired()", span="545-545"];
m24_231 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="545-545"];
m24_238 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="564-564"];
m24_239 [cluster="lambda expression", file="Pair.cs", label="new FakeOptions()", span="564-564"];
m24_240 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="564-564"];
m24_247 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="583-583"];
m24_248 [cluster="lambda expression", file="Pair.cs", label="new FakeOptions()", span="583-583"];
m24_249 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="583-583"];
m24_255 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="602-602"];
m24_256 [cluster="lambda expression", file="Pair.cs", label="new FakeOptions()", span="602-602"];
m24_257 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="602-602"];
m24_263 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="621-621"];
m24_264 [cluster="lambda expression", file="Pair.cs", label="new FakeOptions()", span="621-621"];
m24_265 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="621-621"];
m24_271 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="641-641"];
m24_272 [cluster="lambda expression", file="Pair.cs", label="new FakeOptions()", span="641-641"];
m24_273 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="641-641"];
m24_279 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="660-660"];
m24_280 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithRequiredValue()", span="660-660"];
m24_281 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="660-660"];
m24_287 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="682-682"];
m24_288 [cluster="lambda expression", file="Pair.cs", label="new FakeOptions()", span="682-682"];
m24_289 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="682-682"];
m24_295 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="701-701"];
m24_296 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithSequenceMinMaxEqual()", span="701-701"];
m24_297 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="701-701"];
m24_303 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="723-723"];
m24_304 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithNullables()", span="723-723"];
m24_305 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="723-723"];
m24_311 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="745-745"];
m24_312 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithNullables()", span="745-745"];
m24_313 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="745-745"];
m24_321 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="765-765"];
m24_322 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithFSharpOption()", span="765-765"];
m24_323 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="765-765"];
m24_331 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="789-789"];
m24_332 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithFSharpOption()", span="789-789"];
m24_333 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="789-789"];
m24_339 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="809-813"];
m24_340 [cluster="lambda expression", file="Pair.cs", label="InstanceBuilder.Build(\r\n                () => new FakeOptionsWithMinZero(),\r\n                new string[] {},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="809-813"];
m24_341 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="809-813"];
m24_342 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="810-810"];
m24_343 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithMinZero()", span="810-810"];
m24_344 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="810-810"];
m24_350 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="823-827"];
m24_351 [cluster="lambda expression", file="Pair.cs", label="InstanceBuilder.Build(\r\n                () => new FakeOptionsWithMaxZero(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="823-827"];
m24_352 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="823-827"];
m24_353 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="824-824"];
m24_354 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithMaxZero()", span="824-824"];
m24_355 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="824-824"];
m24_361 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="837-841"];
m24_362 [cluster="lambda expression", file="Pair.cs", label="InstanceBuilder.Build(\r\n                () => new FakeOptionsWithMinMaxZero(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="837-841"];
m24_363 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="837-841"];
m24_364 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="838-838"];
m24_365 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithMinMaxZero()", span="838-838"];
m24_366 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="838-838"];
m24_379 [cluster="lambda expression", file="Pair.cs", label="x == expected", span="862-862"];
m24_374 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="856-856"];
m24_378 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="862-862"];
m24_375 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithNamedAndEmptySets()", span="856-856"];
m24_376 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="856-856"];
m24_380 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="862-862"];
m24_385 [cluster="lambda expression", file="Pair.cs", label="Entry lambda expression", span="873-873"];
m24_386 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithRequiredValue()", span="873-873"];
m24_387 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="873-873"];
m24_393 [cluster="lambda expression", file="Pair.cs", label="new FakeOptionsWithScalarValueAndSequenceStringAdjacent()", span="892-892"];
m24_394 [cluster="lambda expression", file="Pair.cs", label="Exit lambda expression", span="892-892"];
m24_10 [cluster="CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", file="Pair.cs", label="Entry CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", span="87-87"];
m24_30 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", span="4-4"];
m24_158 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", span="6-6"];
m24_179 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Pair.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="31-31"];
m24_193 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="Pair.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294"];
m24_232 [cluster="CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", span="4-4"];
m24_47 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="134-134"];
m24_48 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMinConstraint(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="139-143"];
m24_49 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="Pair.cs", label="Assert.True(expected.SequenceEqual(result.Value.StringSequence))", span="146-146"];
m24_50 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="134-134"];
m24_118 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", span="294-294"];
m24_119 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="Pair.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="297-297"];
m24_120 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''Yellow'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="300-304"];
m24_121 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="Pair.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="307-307"];
m24_122 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", span="294-294"];
m24_139 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6"];
m24_23 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", span="65-65"];
m24_24 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithDouble(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="70-74"];
m24_25 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="Pair.cs", label="Assert.Equal(expected, result.Value.DoubleValue)", span="77-77"];
m24_26 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", span="65-65"];
m24_282 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue.FakeOptionsWithRequiredValue()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue.FakeOptionsWithRequiredValue()", span="4-4"];
m24_367 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithMinMaxZero.FakeOptionsWithMinMaxZero()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMinMaxZero.FakeOptionsWithMinMaxZero()", span="6-6"];
m24_11 [cluster="Unk.True", file="Pair.cs", label="Entry Unk.True", span=""];
m24_274 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", span="653-653"];
m24_275 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="Pair.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(NameInfo.EmptyName) }", span="656-656"];
m24_276 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithRequiredValue(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="659-663"];
m24_277 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="Pair.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="666-666"];
m24_278 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", span="653-653"];
m24_233 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="557-557"];
m24_234 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''i'', '''')) }", span="560-560"];
m24_235 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new [] { ''-i'', ''10'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="563-567"];
m24_236 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="570-570"];
m24_237 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="557-557"];
m24_324 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithFSharpOption.FakeOptionsWithFSharpOption()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithFSharpOption.FakeOptionsWithFSharpOption()", span="6-6"];
m24_320 [cluster="Unk.get_IsSome", file="Pair.cs", label="Entry Unk.get_IsSome", span=""];
m24_187 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Pair.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m24_0 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="17-17"];
m24_1 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="Pair.cs", label="var fakeOptions = new FakeOptions()", span="20-20"];
m24_2 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="Pair.cs", label="var expectedResult = ParserResult.Create(\r\n                ParserResultType.Options,\r\n                fakeOptions, new Error[] { new HelpRequestedError() })", span="21-23"];
m24_3 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => fakeOptions,\r\n                new[] { ''--help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="26-30"];
m24_5 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="17-17"];
m24_224 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="538-538"];
m24_225 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="Pair.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(new NameInfo('''', ''str'')) }", span="541-541"];
m24_226 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequired(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="544-548"];
m24_227 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="Pair.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="551-551"];
m24_228 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="538-538"];
m24_215 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="518-518"];
m24_216 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="Pair.cs", label="var expectedResult = new[]\r\n            {\r\n                new MissingRequiredOptionError(new NameInfo('''', ''ftpurl'')),\r\n                new MissingRequiredOptionError(new NameInfo('''', ''weburl''))\r\n            }", span="520-524"];
m24_217 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] {''''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="526-530"];
m24_218 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="Pair.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="533-533"];
m24_219 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="518-518"];
m24_35 [cluster="Unk.SequenceEqual", file="Pair.cs", label="Entry Unk.SequenceEqual", span=""];
m24_126 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", span="313-313"];
m24_127 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="Pair.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="316-316"];
m24_128 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''RED'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="319-323"];
m24_129 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="Pair.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="326-326"];
m24_130 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", span="313-313"];
m24_68 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="Pair.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261"];
m24_381 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", span="867-867"];
m24_382 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithRequiredValue(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="872-876"];
m24_383 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="Pair.cs", label="expected.ShouldBeEquivalentTo(result.Value)", span="879-879"];
m24_384 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", span="867-867"];
m24_83 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="213-213"];
m24_84 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''s'', ''string-seq'')) }", span="216-216"];
m24_85 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMaxConstraint(),\r\n                new[] { ''--string-seq=one'', ''two'', ''three'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="219-223"];
m24_86 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="226-226"];
m24_87 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="213-213"];
m24_63 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="174-174"];
m24_64 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="Pair.cs", label="var expectedResult = new[] { new MissingValueOptionError(new NameInfo(''s'', ''string-seq'')) }", span="177-177"];
m24_65 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMinConstraint(),\r\n                new[] { ''-s'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="180-184"];
m24_66 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="Pair.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="187-187"];
m24_67 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="174-174"];
m24_134 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="332-332"];
m24_135 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="Pair.cs", label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = string.Empty,\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''a'', ''b'', ''c'' },\r\n                    IntValue = 20\r\n                }", span="335-341"];
m24_136 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                new[] { ''10'', ''a'', ''b'', ''c'', ''20'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="344-348"];
m24_137 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="Pair.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="351-351"];
m24_138 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="332-332"];
m24_395 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent.FakeOptionsWithScalarValueAndSequenceStringAdjacent()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent.FakeOptionsWithScalarValueAndSequenceStringAdjacent()", span="6-6"];
m24_356 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithMaxZero.FakeOptionsWithMaxZero()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMaxZero.FakeOptionsWithMaxZero()", span="6-6"];
m24_373 [cluster="Unk.HaveCount", file="Pair.cs", label="Entry Unk.HaveCount", span=""];
m24_197 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", span="4-4"];
m24_270 [cluster="string.Equals(string)", file="Pair.cs", label="Entry string.Equals(string)", span="0-0"];
m24_69 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="Pair.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m24_15 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", span="42-42"];
m24_16 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="47-51"];
m24_17 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="Pair.cs", label="Assert.Equal(expected, result.Value.LongValue)", span="54-54"];
m24_18 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", span="42-42"];
m24_19 [cluster="Unk.Equal", file="Pair.cs", label="Entry Unk.Equal", span=""];
m24_325 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", span="783-783"];
m24_326 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithFSharpOption(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="788-792"];
m24_328 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="Pair.cs", label="expectedValue.ShouldBeEquivalentTo(result.Value.Offset.Value)", span="797-797"];
m24_329 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="Pair.cs", label="expectedSome.ShouldBeEquivalentTo(FSharpOption<int>.get_IsSome(result.Value.Offset))", span="799-799"];
m24_327 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="Pair.cs", label="result.Value.Offset != null", span="795-795"];
m24_330 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", span="783-783"];
m24_9 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Pair.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m24_150 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", span="6-6"];
m24_159 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", span="406-406"];
m24_160 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndSeparator(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="411-415"];
m24_161 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="Pair.cs", label="expected.ShouldBeEquivalentTo(result.Value.StringSequence)", span="418-418"];
m24_162 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", span="406-406"];
m24_220 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="Pair.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283"];
m24_299 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", span="717-717"];
m24_300 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithNullables(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="722-726"];
m24_301 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="Pair.cs", label="expected.ShouldBeEquivalentTo(result.Value.NullableInt)", span="729-729"];
m24_302 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", span="717-717"];
m24_241 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="576-576"];
m24_242 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="Pair.cs", label="var expectedResult = new[] { new UnknownOptionError(''xyz'') }", span="579-579"];
m24_243 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''--stringvalue'', ''abc'', ''--xyz'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="582-586"];
m24_244 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="Pair.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="589-589"];
m24_245 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="576-576"];
m24_207 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="499-499"];
m24_208 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="Pair.cs", label="var expectedResult = new FakeOptionWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = ''str2''\r\n            }", span="501-504"];
m24_209 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] { ''--ftpurl'', ''str1'', ''--weburl'', ''str2'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="506-510"];
m24_210 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="Pair.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="513-513"];
m24_211 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="499-499"];
m24_290 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="694-694"];
m24_291 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="697-697"];
m24_292 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceMinMaxEqual(),\r\n                new[] { ''one'', ''two'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="700-704"];
m24_293 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="707-707"];
m24_294 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="694-694"];
m24_8 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="Pair.cs", label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="100-100"];
m24_100 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", span="257-257"];
m24_101 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="262-266"];
m24_102 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="Pair.cs", label="expected.ShouldBeEquivalentTo(result.Value.Colors)", span="269-269"];
m24_103 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", span="257-257"];
m24_99 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", span="6-6"];
m24_372 [cluster="Unk.Should", file="Pair.cs", label="Entry Unk.Should", span=""];
m24_283 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", span="676-676"];
m24_284 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="681-685"];
m24_285 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="Pair.cs", label="expected.ShouldBeEquivalentTo(result.Value.StringValue)", span="688-688"];
m24_286 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", span="676-676"];
m24_114 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="Pair.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="305-305"];
m24_198 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", span="479-479"];
m24_199 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="Pair.cs", label="var expectedResult = new FakeOptionWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = null\r\n            }", span="481-484"];
m24_200 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] { ''--ftpurl'', ''str1''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="486-490"];
m24_201 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="Pair.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="493-493"];
m24_202 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", span="479-479"];
m24_39 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", span="6-6"];
m24_345 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithMinZero.FakeOptionsWithMinZero()", file="Pair.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMinZero.FakeOptionsWithMinZero()", span="6-6"];
m24_346 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", span="820-820"];
m24_347 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", file="Pair.cs", label="Action test = () => InstanceBuilder.Build(\r\n                () => new FakeOptionsWithMaxZero(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="823-827"];
m24_348 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", file="Pair.cs", label="Assert.Throws<ApplicationException>(test)", span="830-830"];
m24_349 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", span="820-820"];
m24_188 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="Pair.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="456-456"];
m24_189 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="Pair.cs", label="var expectedResult = new[]\r\n                {\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''weburl'')),\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''ftpurl''))\r\n                }", span="459-463"];
m24_190 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="Pair.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSets(),\r\n                new[] { ''--weburl'', ''http://mywebsite.org/'', ''--ftpurl'', ''fpt://ftpsite.org/'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="466-470"];
m24_191 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="Pair.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="473-473"];
m24_192 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="Pair.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="456-456"];
m24_396 [file="Pair.cs", label=fakeOptions, span=""];
m24_397 [file="Pair.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m24_398 [file="Pair.cs", label=int, span=""];
m26_211 [cluster="System.Text.StringBuilder.Append(char)", file="Program.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m26_87 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Program.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="271-271"];
m26_94 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Program.cs", label="parserResult == null", span="273-273"];
m26_96 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Program.cs", label="current == null", span="274-274"];
m26_98 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Program.cs", label="FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors).Empty()", span="276-276"];
m26_99 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Program.cs", label="return current;", span="277-277"];
m26_100 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Program.cs", label="var errors = RenderParsingErrorsText(parserResult,\r\n                current.SentenceBuilder.FormatError,\r\n                current.SentenceBuilder.FormatMutuallyExclusiveSetErrors,\r\n                2)", span="279-282"];
m26_102 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Program.cs", label="return current;", span="284-284"];
m26_103 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Program.cs", label="current.AddPreOptionsLine(\r\n                string.Concat(Environment.NewLine, current.SentenceBuilder.ErrorsHeadingText()))", span="286-287"];
m26_105 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Program.cs", label="lines.ForEach(\r\n                line => current.AddPreOptionsLine(line))", span="290-291"];
m26_106 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Program.cs", label="return current;", span="293-293"];
m26_95 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Program.cs", label="throw new ArgumentNullException(''parserResult'');", span="273-273"];
m26_97 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Program.cs", label="throw new ArgumentNullException(''current'');", span="274-274"];
m26_101 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Program.cs", label="string.IsNullOrEmpty(errors)", span="283-283"];
m26_104 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Program.cs", label="var lines = errors.Split(\r\n                new[] { Environment.NewLine }, StringSplitOptions.None)", span="288-289"];
m26_107 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Program.cs", label="Exit CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="271-271"];
m26_108 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="Program.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
m26_46 [cluster="Unk.Any", file="Program.cs", label="Entry Unk.Any", span=""];
m26_180 [cluster="System.Text.StringBuilder.AppendLine(string)", file="Program.cs", label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0"];
m26_0 [cluster="CommandLine.Text.HelpText.HelpText()", file="Program.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36"];
m26_1 [cluster="CommandLine.Text.HelpText.HelpText()", file="Program.cs", label="Exit CommandLine.Text.HelpText.HelpText()", span="36-36"];
m26_336 [cluster="string.PadRight(int)", file="Program.cs", label="Entry string.PadRight(int)", span="0-0"];
m26_418 [cluster="T.ToStringInvariant<T>()", file="Program.cs", label="Entry T.ToStringInvariant<T>()", span="15-15"];
m26_281 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="Program.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m26_49 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="331-331"];
m26_129 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="Program.cs", label="result == null", span="334-334"];
m26_131 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="Program.cs", label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="336-339"];
m26_130 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="Program.cs", label="throw new ArgumentNullException(''result'');", span="334-334"];
m26_132 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="Program.cs", label="Exit CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="331-331"];
m26_226 [cluster="System.Text.StringBuilder.SafeToString()", file="Program.cs", label="Entry System.Text.StringBuilder.SafeToString()", span="66-66"];
m26_225 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="Program.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m26_77 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="Program.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m26_75 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="Program.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m26_360 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="Program.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
m26_167 [cluster="System.Text.StringBuilder.AppendIfNotEmpty(params string[])", file="Program.cs", label="Entry System.Text.StringBuilder.AppendIfNotEmpty(params string[])", span="57-57"];
m26_121 [cluster="CommandLine.Text.HelpText.ToString()", file="Program.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="480-480"];
m26_220 [cluster="CommandLine.Text.HelpText.ToString()", file="Program.cs", label="int ExtraLength = 10", span="482-482"];
m26_221 [cluster="CommandLine.Text.HelpText.ToString()", file="Program.cs", label="return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="483-495"];
m26_222 [cluster="CommandLine.Text.HelpText.ToString()", file="Program.cs", label="Exit CommandLine.Text.HelpText.ToString()", span="480-480"];
m26_223 [cluster="string.SafeLength()", file="Program.cs", label="Entry string.SafeLength()", span="40-40"];
m26_125 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="321-321"];
m26_126 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="Program.cs", label="return AddLine(postOptionsHelp, value);", span="323-323"];
m26_127 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="Program.cs", label="Exit CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="321-321"];
m26_110 [cluster="string.IsNullOrEmpty(string)", file="Program.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m26_209 [cluster="CSharpx.Maybe<T>.FromJust<T>()", file="Program.cs", label="Entry CSharpx.Maybe<T>.FromJust<T>()", span="342-342"];
m26_384 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Program.cs", label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="752-752"];
m26_387 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Program.cs", label="var specLength = 0", span="754-754"];
m26_388 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Program.cs", label="var hasShort = spec.ShortName.Length > 0", span="756-756"];
m26_389 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Program.cs", label="var hasLong = spec.LongName.Length > 0", span="757-757"];
m26_391 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Program.cs", label="spec.MetaValue.Length > 0", span="760-760"];
m26_392 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Program.cs", label="metaLength = spec.MetaValue.Length + 1", span="761-761"];
m26_399 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Program.cs", label="specLength += spec.LongName.Length", span="774-774"];
m26_394 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Program.cs", label="++specLength", span="765-765"];
m26_404 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Program.cs", label="specLength += 2", span="782-782"];
m26_405 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Program.cs", label="return specLength;", span="784-784"];
m26_393 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Program.cs", label=hasShort, span="763-763"];
m26_403 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Program.cs", label="hasShort && hasLong", span="781-781"];
m26_390 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Program.cs", label="var metaLength = 0", span="759-759"];
m26_398 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Program.cs", label=hasLong, span="772-772"];
m26_397 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Program.cs", label="specLength += metaLength", span="769-769"];
m26_402 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Program.cs", label="specLength += metaLength", span="778-778"];
m26_395 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Program.cs", label=AddDashesToOption, span="766-766"];
m26_396 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Program.cs", label="++specLength", span="767-767"];
m26_400 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Program.cs", label=AddDashesToOption, span="775-775"];
m26_401 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Program.cs", label="specLength += 2", span="776-776"];
m26_406 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Program.cs", label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="752-752"];
m26_212 [cluster="CommandLine.Text.Example.GetFormatStylesOrDefault()", file="Program.cs", label="Entry CommandLine.Text.Example.GetFormatStylesOrDefault()", span="111-111"];
m26_282 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="Program.cs", label="return (from verbTuple in Verb.SelectFromTypes(types)\r\n                    select\r\n                        OptionSpecification.NewSwitch(\r\n                            string.Empty,\r\n                            verbTuple.Item1.Name,\r\n                            false,\r\n                            verbTuple.Item1.HelpText,\r\n                            string.Empty)).Concat(new[] { MakeHelpEntry(), MakeVersionEntry() });", span="577-584"];
m26_142 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="575-575"];
m26_283 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="Program.cs", label="Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="575-575"];
m26_339 [cluster="string.Trim()", file="Program.cs", label="Entry string.Trim()", span="0-0"];
m26_224 [cluster="System.Text.StringBuilder.SafeLength()", file="Program.cs", label="Entry System.Text.StringBuilder.SafeLength()", span="73-73"];
m26_284 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="Program.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m26_338 [cluster="string.FormatInvariant(params object[])", file="Program.cs", label="Entry string.FormatInvariant(params object[])", span="20-20"];
m26_23 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Program.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m26_256 [cluster="string.Substring(int)", file="Program.cs", label="Entry string.Substring(int)", span="0-0"];
m26_109 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="Program.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="398-398"];
m26_155 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="Program.cs", label="parserResult == null", span="404-404"];
m26_157 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="Program.cs", label="var meaningfulErrors =\r\n                FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors)", span="406-407"];
m26_161 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="Program.cs", label="meaningfulErrors\r\n                .Where(e => e.Tag != ErrorType.MutuallyExclusiveSetError)\r\n                .ForEach(\r\n                    error =>\r\n                        {\r\n                            var line = new StringBuilder(indent.Spaces())\r\n                                .Append(formatError(error)); \r\n                            text.AppendLine(line.ToString());\r\n                        })", span="412-420"];
m26_162 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="Program.cs", label="return text.AppendIfNotEmpty(\r\n                formatMutuallyExclusiveSetErrors(\r\n                    meaningfulErrors.OfType<MutuallyExclusiveSetError>()))\r\n                .ToString();", span="422-425"];
m26_156 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="Program.cs", label="throw new ArgumentNullException(''parserResult'');", span="404-404"];
m26_158 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="Program.cs", label="meaningfulErrors.Empty()", span="408-408"];
m26_159 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="Program.cs", label="return string.Empty;", span="409-409"];
m26_160 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="Program.cs", label="var text = new StringBuilder()", span="411-411"];
m26_163 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="Program.cs", label="Exit CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="398-398"];
m26_41 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="Program.cs", label="Entry CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="498-498"];
m26_227 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="Program.cs", label="return errors.Where(e => e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError);", span="500-500"];
m26_228 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="Program.cs", label="Exit CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="498-498"];
m26_272 [cluster="System.Type.GetUsageData()", file="Program.cs", label="Entry System.Type.GetUsageData()", span="39-39"];
m26_359 [cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])", file="Program.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="18-18"];
m26_47 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="Program.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m26_210 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="Program.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="23-23"];
m26_44 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="Program.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12"];
m26_297 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="632-632"];
m26_305 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="optionsHelp.Append(''  '')", span="634-634"];
m26_306 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="var name = new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.Tag == SpecificationType.Option,\r\n                    it => it.Append(AddOptionName(maxLength, (OptionSpecification)specification)),\r\n                    it => it.Append(AddValueName(maxLength, (ValueSpecification)specification)))", span="635-639"];
m26_307 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="optionsHelp\r\n                .Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())\r\n                .Append(''    '')", span="641-643"];
m26_308 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="var optionHelpText = specification.HelpText", span="645-645"];
m26_309 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="addEnumValuesToHelpText && specification.EnumValues.Any()", span="647-647"];
m26_310 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="648-648"];
m26_311 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="specification.DefaultValue.Do(\r\n                defaultValue => optionHelpText = ''(Default: {0}) ''.FormatLocal(defaultValue) + optionHelpText)", span="650-651"];
m26_312 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="specification.Required", span="653-653"];
m26_313 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="654-654"];
m26_319 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="words[i].Length < (widthOfHelpText - wordBuffer)", span="664-664"];
m26_322 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="(widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="668-668"];
m26_325 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="words[i].Length >= widthOfHelpText && wordBuffer == 0", span="674-674"];
m26_326 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="676-676"];
m26_327 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="wordBuffer = widthOfHelpText", span="677-677"];
m26_330 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="685-686"];
m26_331 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="optionHelpText.Length > widthOfHelpText", span="688-688"];
m26_314 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="!string.IsNullOrEmpty(optionHelpText)", span="656-656"];
m26_316 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="var words = optionHelpText.Split(' ')", span="661-661"];
m26_329 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="684-684"];
m26_332 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="optionsHelp\r\n                .Append(optionHelpText)\r\n                .Append(Environment.NewLine)\r\n                .AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="691-694"];
m26_315 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="var wordBuffer = 0", span="660-660"];
m26_321 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="wordBuffer += words[i].Length", span="667-667"];
m26_317 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="var i = 0", span="662-662"];
m26_318 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="i < words.Length", span="662-662"];
m26_320 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="optionsHelp.Append(words[i])", span="666-666"];
m26_328 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="i++", span="662-662"];
m26_324 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="wordBuffer++", span="671-671"];
m26_323 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="optionsHelp.Append('' '')", span="670-670"];
m26_333 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="return this;", span="696-696"];
m26_334 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Program.cs", label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="632-632"];
m26_301 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="Program.cs", label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="615-615"];
m26_264 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="Program.cs", label="Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="615-615"];
m26_300 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="Program.cs", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''version'',\r\n                false,\r\n                sentenceBuilder.VersionCommandText(AddDashesToOption),\r\n                string.Empty);", span="617-622"];
m26_361 [cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", file="Program.cs", label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="27-27"];
m26_112 [cluster="string.Concat(string, string)", file="Program.cs", label="Entry string.Concat(string, string)", span="0-0"];
m26_380 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="741-748"];
m26_51 [cluster="lambda expression", file="Program.cs", label="license.AddToHelpText(auto, true)", span="220-220"];
m26_55 [cluster="lambda expression", file="Program.cs", label="usage.AddToHelpText(auto, true)", span="223-223"];
m26_50 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="220-220"];
m26_54 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="223-223"];
m26_57 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="225-225"];
m26_52 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="220-220"];
m26_56 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="223-223"];
m26_58 [cluster="lambda expression", file="Program.cs", label="e.Tag == ErrorType.NoVerbSelectedError", span="225-225"];
m26_59 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="225-225"];
m26_85 [cluster="lambda expression", file="Program.cs", label="DefaultParsingErrorsHandler(parserResult, current)", span="257-257"];
m26_92 [cluster="lambda expression", file="Program.cs", label="DefaultParsingErrorsHandler(parserResult, current)", span="263-263"];
m26_78 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="253-253"];
m26_81 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="256-256"];
m26_89 [cluster="lambda expression", file="Program.cs", label="DefaultParsingErrorsHandler(pr, current)", span="262-262"];
m26_88 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="262-262"];
m26_91 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="263-263"];
m26_84 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="257-257"];
m26_79 [cluster="lambda expression", file="Program.cs", label="e.Tag == ErrorType.VersionRequestedError", span="253-253"];
m26_80 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="253-253"];
m26_82 [cluster="lambda expression", file="Program.cs", label="e.Tag == ErrorType.HelpVerbRequestedError", span="256-256"];
m26_83 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="256-256"];
m26_86 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="257-257"];
m26_90 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="262-262"];
m26_93 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="263-263"];
m26_116 [cluster="lambda expression", file="Program.cs", label="current.AddPreOptionsLine(line)", span="291-291"];
m26_115 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="291-291"];
m26_117 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="291-291"];
m26_173 [cluster="lambda expression", file="Program.cs", label="var line = new StringBuilder(indent.Spaces())\r\n                                .Append(formatError(error))", span="417-418"];
m26_174 [cluster="lambda expression", file="Program.cs", label="text.AppendLine(line.ToString())", span="419-419"];
m26_169 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="413-413"];
m26_172 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="415-420"];
m26_170 [cluster="lambda expression", file="Program.cs", label="e.Tag != ErrorType.MutuallyExclusiveSetError", span="413-413"];
m26_171 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="413-413"];
m26_175 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="415-420"];
m26_185 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="430-430"];
m26_186 [cluster="lambda expression", file="Program.cs", label=example, span="430-430"];
m26_187 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="430-430"];
m26_216 [cluster="lambda expression", file="Program.cs", label="config.PreferShortName = s.PreferShortName", span="463-463"];
m26_217 [cluster="lambda expression", file="Program.cs", label="config.GroupSwitches = s.GroupSwitches", span="464-464"];
m26_218 [cluster="lambda expression", file="Program.cs", label="config.UseEqualToken = s.UseEqualToken", span="465-465"];
m26_215 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="461-466"];
m26_219 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="461-466"];
m26_229 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="500-500"];
m26_230 [cluster="lambda expression", file="Program.cs", label="e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError", span="500-500"];
m26_231 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="500-500"];
m26_267 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="547-547"];
m26_268 [cluster="lambda expression", file="Program.cs", label="v.Index", span="547-547"];
m26_269 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="547-547"];
m26_274 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="556-572"];
m26_275 [cluster="lambda expression", file="Program.cs", label="var prop = tuple.Item1", span="558-558"];
m26_276 [cluster="lambda expression", file="Program.cs", label="var attr = tuple.Item2", span="559-559"];
m26_277 [cluster="lambda expression", file="Program.cs", label="var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null)", span="561-562"];
m26_278 [cluster="lambda expression", file="Program.cs", label="return Tuple.Create(attr, examples);", span="571-571"];
m26_279 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="556-572"];
m26_295 [cluster="lambda expression", file="Program.cs", label="AddOption(requiredWord, maxLength, option, remainingSpace)", span="600-600"];
m26_294 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="599-600"];
m26_296 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="599-600"];
m26_342 [cluster="lambda expression", file="Program.cs", label="it.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="638-638"];
m26_346 [cluster="lambda expression", file="Program.cs", label="it.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="639-639"];
m26_341 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="638-638"];
m26_345 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="639-639"];
m26_349 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="651-651"];
m26_350 [cluster="lambda expression", file="Program.cs", label="optionHelpText = ''(Default: {0}) ''.FormatLocal(defaultValue) + optionHelpText", span="651-651"];
m26_343 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="638-638"];
m26_347 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="639-639"];
m26_351 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="651-651"];
m26_357 [cluster="lambda expression", file="Program.cs", label="it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', '')", span="705-709"];
m26_363 [cluster="lambda expression", file="Program.cs", label="it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="712-715"];
m26_356 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="705-709"];
m26_362 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="712-715"];
m26_358 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="705-709"];
m26_364 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="712-715"];
m26_368 [cluster="lambda expression", file="Program.cs", label="it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="724-724"];
m26_372 [cluster="lambda expression", file="Program.cs", label="it.AppendFormat(''value pos. {0}'', specification.Index)", span="725-725"];
m26_367 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="724-724"];
m26_371 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="725-725"];
m26_369 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="724-724"];
m26_373 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="725-725"];
m26_381 [cluster="lambda expression", file="Program.cs", label="var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec)", span="743-745"];
m26_382 [cluster="lambda expression", file="Program.cs", label="return Math.Max(length, specLength);", span="747-747"];
m26_383 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="741-748"];
m26_355 [cluster="System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="Program.cs", label="Entry System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49"];
m26_72 [cluster="System.ArgumentException.ArgumentException(string, string)", file="Program.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m26_344 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="699-699"];
m26_353 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="Program.cs", label="return\r\n                new StringBuilder(maxLength)\r\n                    .MapIf(\r\n                        specification.ShortName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', ''))\r\n                    .MapIf(\r\n                        specification.LongName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue))\r\n                    .ToString();", span="701-716"];
m26_354 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="Program.cs", label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="699-699"];
m26_4 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="Program.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
m26_5 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="Program.cs", label="Exit CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
m26_286 [cluster="Unk.Concat", file="Program.cs", label="Entry Unk.Concat", span=""];
m26_25 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", span="195-195"];
m26_26 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Program.cs", label="var auto = new HelpText {\r\n                Heading = HeadingInfo.Default,\r\n                Copyright = CopyrightInfo.Default,\r\n                AdditionalNewLineAfterOption = true,\r\n                AddDashesToOption = !verbsIndex\r\n            }", span="200-205"];
m26_28 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Program.cs", label="onError != null && parserResult.Tag == ParserResultType.NotParsed", span="209-209"];
m26_29 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Program.cs", label="errors = ((NotParsed<T>)parserResult).Errors", span="211-211"];
m26_31 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Program.cs", label="auto = onError(auto)", span="215-215"];
m26_34 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Program.cs", label="(verbsIndex && parserResult.TypeInfo.Choices.Any()) || errors.Any(e => e.Tag == ErrorType.NoVerbSelectedError)", span="225-225"];
m26_36 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Program.cs", label="auto.AddVerbs(parserResult.TypeInfo.Choices.ToArray())", span="228-228"];
m26_37 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Program.cs", label="auto.AddOptions(parserResult)", span="231-231"];
m26_27 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Program.cs", label="var errors = Enumerable.Empty<Error>()", span="207-207"];
m26_32 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Program.cs", label="ReflectionHelper.GetAttribute<AssemblyLicenseAttribute>()\r\n                .Do(license => license.AddToHelpText(auto, true))", span="219-220"];
m26_33 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Program.cs", label="ReflectionHelper.GetAttribute<AssemblyUsageAttribute>()\r\n                .Do(usage => usage.AddToHelpText(auto, true))", span="222-223"];
m26_35 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Program.cs", label="auto.AddDashesToOption = false", span="227-227"];
m26_38 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Program.cs", label="return auto;", span="233-233"];
m26_30 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Program.cs", label="FilterMeaningfulErrors(errors).Any()", span="213-213"];
m26_39 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Program.cs", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", span="195-195"];
m26_60 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="246-246"];
m26_61 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Program.cs", label="parserResult.Tag != ParserResultType.NotParsed", span="248-248"];
m26_63 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Program.cs", label="var errors = ((NotParsed<T>)parserResult).Errors", span="251-251"];
m26_67 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Program.cs", label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current));", span="257-257"];
m26_70 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Program.cs", label="return err.Matched\r\n                ? AutoBuild(pr, current => DefaultParsingErrorsHandler(pr, current))\r\n                : AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), true);", span="261-263"];
m26_62 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Program.cs", label="throw new ArgumentException(''Excepting NotParsed<T> type.'', ''parserResult'');", span="249-249"];
m26_64 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Program.cs", label="errors.Any(e => e.Tag == ErrorType.VersionRequestedError)", span="253-253"];
m26_66 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Program.cs", label="!errors.Any(e => e.Tag == ErrorType.HelpVerbRequestedError)", span="256-256"];
m26_68 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Program.cs", label="var err = errors.OfType<HelpVerbRequestedError>().Single()", span="259-259"];
m26_65 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Program.cs", label="return new HelpText(HeadingInfo.Default).AddPreOptionsLine(Environment.NewLine);", span="254-254"];
m26_69 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Program.cs", label="var pr = new NotParsed<object>(TypeInfo.Create(err.Type), Enumerable.Empty<Error>())", span="260-260"];
m26_71 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Program.cs", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="246-246"];
m26_177 [cluster="int.Spaces()", file="Program.cs", label="Entry int.Spaces()", span="30-30"];
m26_53 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="Program.cs", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155"];
m26_168 [cluster="System.Text.StringBuilder.ToString()", file="Program.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m26_208 [cluster="CSharpx.Maybe<T>.MatchNothing()", file="Program.cs", label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57"];
m26_164 [cluster="System.Text.StringBuilder.StringBuilder()", file="Program.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m26_48 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="Program.cs", label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="348-348"];
m26_135 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="Program.cs", label="types == null", span="350-350"];
m26_137 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="Program.cs", label="types.Length == 0", span="351-351"];
m26_139 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="Program.cs", label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="353-356"];
m26_136 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="Program.cs", label="throw new ArgumentNullException(''types'');", span="350-350"];
m26_138 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="Program.cs", label="throw new ArgumentOutOfRangeException(''types'');", span="351-351"];
m26_140 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="Program.cs", label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="348-348"];
m26_207 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="Program.cs", label="Entry CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="553-553"];
m26_270 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="Program.cs", label="return type.GetUsageData().Map(\r\n                tuple =>\r\n                {\r\n                    var prop = tuple.Item1;\r\n                    var attr = tuple.Item2;\r\n\r\n                    var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null);\r\n                    //var groups = attr.Groups;\r\n\r\n                    //return examples.Select(example => groups.ContainsKey(example.Group)\r\n                    //    ? example.WithGroupDescription(groups[example.Group])\r\n                    //    : example)\r\n                    //        .OrderBy(x => x.Group)\r\n                    //        .ThenBy(x => x.GroupDescription)\r\n                    //    .Memorize();\r\n                    return Tuple.Create(attr, examples);\r\n                });", span="555-572"];
m26_271 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="Program.cs", label="Exit CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="553-553"];
m26_113 [cluster="string.Split(string[], System.StringSplitOptions)", file="Program.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m26_337 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="Program.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m26_8 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="Program.cs", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="82-82"];
m26_9 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="Program.cs", label="Exit CommandLine.Text.HelpText.HelpText(string, string)", span="82-82"];
m26_181 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="Program.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="428-428"];
m26_182 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="Program.cs", label="return RenderUsageText(parserResult, example => example);", span="430-430"];
m26_183 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="Program.cs", label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="428-428"];
m26_114 [cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", file="Program.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="231-231"];
m26_253 [cluster="string.Split(params char[])", file="Program.cs", label="Entry string.Split(params char[])", span="0-0"];
m26_24 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="Program.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m26_285 [cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", file="Program.cs", label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45"];
m26_43 [cluster="System.Func<T, TResult>.Invoke(T)", file="Program.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m26_40 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="Program.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m26_165 [cluster="Unk.Where", file="Program.cs", label="Entry Unk.Where", span=""];
m26_76 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="Program.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m26_340 [cluster="string.String(char, int)", file="Program.cs", label="Entry string.String(char, int)", span="0-0"];
m26_255 [cluster="System.Math.Min(int, int)", file="Program.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m26_266 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="Program.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m26_370 [cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", file="Program.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0"];
m26_134 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="587-587"];
m26_287 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="Program.cs", label="var maxLength = GetMaxLength(specifications)", span="592-592"];
m26_289 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="Program.cs", label="var remainingSpace = maximumLength - (maxLength + 6)", span="596-596"];
m26_290 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="Program.cs", label="specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="598-600"];
m26_288 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="Program.cs", label="optionsHelp = new StringBuilder(BuilderCapacity)", span="594-594"];
m26_291 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="Program.cs", label="return this;", span="602-602"];
m26_292 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="Program.cs", label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="587-587"];
m26_179 [cluster="System.Text.StringBuilder.Append(string)", file="Program.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m26_118 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="Program.cs", label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="301-301"];
m26_119 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="Program.cs", label="return info.ToString();", span="303-303"];
m26_120 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="Program.cs", label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="301-301"];
m26_124 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="625-625"];
m26_302 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="Program.cs", label="AddLine(preOptionsHelp, value, maximumLength)", span="627-627"];
m26_303 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="Program.cs", label="return this;", span="629-629"];
m26_304 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="Program.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="625-625"];
m26_214 [cluster="System.Text.StringBuilder.Append(object)", file="Program.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m26_280 [cluster="System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", file="Program.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", span="0-0"];
m26_128 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="731-731"];
m26_374 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="Program.cs", label="AddLine(builder, value, MaximumDisplayWidth)", span="733-733"];
m26_375 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="Program.cs", label="return this;", span="735-735"];
m26_376 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="Program.cs", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="731-731"];
m26_2 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="Program.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48"];
m26_3 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="Program.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48"];
m26_258 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="Program.cs", label="var optionSpecs = specs\r\n                .OfType<OptionSpecification>()\r\n                .Concat(new[] { MakeHelpEntry(), MakeVersionEntry() })", span="542-544"];
m26_133 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="Program.cs", label="Entry CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="539-539"];
m26_257 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="Program.cs", label="var specs = type.GetSpecifications(Specification.FromProperty)", span="541-541"];
m26_259 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="Program.cs", label="var valueSpecs = specs\r\n                .OfType<ValueSpecification>()\r\n                .OrderBy(v => v.Index)", span="545-547"];
m26_260 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="Program.cs", label="return Enumerable.Empty<Specification>()\r\n                .Concat(optionSpecs)\r\n                .Concat(valueSpecs);", span="548-550"];
m26_261 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="Program.cs", label="Exit CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="539-539"];
m26_232 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="503-503"];
m26_233 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Program.cs", label="builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="505-505"];
m26_235 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Program.cs", label="var words = value.Split(' ')", span="509-509"];
m26_238 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Program.cs", label="words[i].Length < (maximumLength - wordBuffer)", span="512-512"];
m26_239 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Program.cs", label="builder.Append(words[i])", span="514-514"];
m26_241 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Program.cs", label="(maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="516-516"];
m26_242 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Program.cs", label="builder.Append('' '')", span="518-518"];
m26_244 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Program.cs", label="words[i].Length >= maximumLength && wordBuffer == 0", span="522-522"];
m26_245 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Program.cs", label="builder.Append(words[i].Substring(0, maximumLength))", span="524-524"];
m26_246 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Program.cs", label="wordBuffer = maximumLength", span="525-525"];
m26_248 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Program.cs", label="value = value.Substring(Math.Min(wordBuffer, value.Length))", span="531-531"];
m26_249 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Program.cs", label="builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="532-532"];
m26_250 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Program.cs", label="value.Length > maximumLength", span="534-534"];
m26_251 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Program.cs", label="builder.Append(value)", span="536-536"];
m26_234 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Program.cs", label="var wordBuffer = 0", span="508-508"];
m26_240 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Program.cs", label="wordBuffer += words[i].Length", span="515-515"];
m26_236 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Program.cs", label="var i = 0", span="510-510"];
m26_237 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Program.cs", label="i < words.Length", span="510-510"];
m26_247 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Program.cs", label="i++", span="510-510"];
m26_243 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Program.cs", label="wordBuffer++", span="519-519"];
m26_252 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Program.cs", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="503-503"];
m26_10 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Program.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95"];
m26_11 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Program.cs", label="sentenceBuilder == null", span="97-97"];
m26_13 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Program.cs", label="heading == null", span="98-98"];
m26_15 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Program.cs", label="copyright == null", span="99-99"];
m26_19 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Program.cs", label="this.sentenceBuilder = sentenceBuilder", span="104-104"];
m26_20 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Program.cs", label="this.heading = heading", span="105-105"];
m26_21 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Program.cs", label="this.copyright = copyright", span="106-106"];
m26_12 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Program.cs", label="throw new ArgumentNullException(''sentenceBuilder'');", span="97-97"];
m26_14 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Program.cs", label="throw new ArgumentNullException(''heading'');", span="98-98"];
m26_16 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Program.cs", label="throw new ArgumentNullException(''copyright'');", span="99-99"];
m26_17 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Program.cs", label="preOptionsHelp = new StringBuilder(BuilderCapacity)", span="101-101"];
m26_18 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Program.cs", label="postOptionsHelp = new StringBuilder(BuilderCapacity)", span="102-102"];
m26_22 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Program.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95"];
m26_348 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="719-719"];
m26_365 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="Program.cs", label="return new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.MetaName.Length > 0,\r\n                    it => it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index),\r\n                    it => it.AppendFormat(''value pos. {0}'', specification.Index))\r\n                .AppendFormatWhen(\r\n                    specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                .ToString();", span="721-728"];
m26_366 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="Program.cs", label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="719-719"];
m26_386 [cluster="System.Math.Max(int, int)", file="Program.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m26_178 [cluster="Unk.formatError", file="Program.cs", label="Entry Unk.formatError", span=""];
m26_293 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="Program.cs", label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="738-738"];
m26_377 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="Program.cs", label="return specifications.Aggregate(0,\r\n                (length, spec) =>\r\n                    {\r\n                        var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec);\r\n\r\n                        return Math.Max(length, specLength);\r\n                    });", span="740-748"];
m26_378 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="Program.cs", label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="738-738"];
m26_335 [cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="Program.cs", label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41"];
m26_141 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="Program.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m26_299 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="Program.cs", label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="605-605"];
m26_263 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="Program.cs", label="Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="605-605"];
m26_298 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="Program.cs", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''help'',\r\n                false,\r\n                sentenceBuilder.HelpCommandText(AddDashesToOption),\r\n                string.Empty);", span="607-612"];
m26_254 [cluster="string.Substring(int, int)", file="Program.cs", label="Entry string.Substring(int, int)", span="0-0"];
m26_352 [cluster="string.FormatLocal(params object[])", file="Program.cs", label="Entry string.FormatLocal(params object[])", span="25-25"];
m26_143 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="365-365"];
m26_144 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="Program.cs", label="result == null", span="367-367"];
m26_146 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="Program.cs", label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="369-372"];
m26_145 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="Program.cs", label="throw new ArgumentNullException(''result'');", span="367-367"];
m26_147 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="Program.cs", label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="365-365"];
m26_385 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Program.cs", label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="787-787"];
m26_407 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Program.cs", label="var specLength = 0", span="789-789"];
m26_408 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Program.cs", label="var hasMeta = spec.MetaName.Length > 0", span="791-791"];
m26_410 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Program.cs", label="spec.MetaValue.Length > 0", span="794-794"];
m26_411 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Program.cs", label="metaLength = spec.MetaValue.Length + 1", span="795-795"];
m26_413 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Program.cs", label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="798-798"];
m26_414 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Program.cs", label="specLength += spec.Index.ToStringInvariant().Length + 11", span="800-800"];
m26_409 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Program.cs", label="var metaLength = 0", span="793-793"];
m26_412 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Program.cs", label=hasMeta, span="797-797"];
m26_415 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Program.cs", label="specLength += metaLength", span="802-802"];
m26_416 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Program.cs", label="return specLength;", span="804-804"];
m26_417 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Program.cs", label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="787-787"];
m26_73 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="311-311"];
m26_122 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="Program.cs", label="return AddPreOptionsLine(value, MaximumDisplayWidth);", span="313-313"];
m26_123 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="Program.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="311-311"];
m26_273 [cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", file="Program.cs", label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="265-265"];
m26_262 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="Program.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="17-17"];
m26_42 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Program.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m26_111 [cluster="System.Func<TResult>.Invoke()", file="Program.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m26_148 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="Program.cs", label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="382-382"];
m26_149 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="Program.cs", label="types == null", span="384-384"];
m26_151 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="Program.cs", label="types.Length == 0", span="385-385"];
m26_153 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="Program.cs", label="return AddOptionsImpl(AdaptVerbsToSpecifications(types), SentenceBuilder.RequiredWord(), maximumLength);", span="387-387"];
m26_150 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="Program.cs", label="throw new ArgumentNullException(''types'');", span="384-384"];
m26_152 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="Program.cs", label="throw new ArgumentOutOfRangeException(''types'');", span="385-385"];
m26_154 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="Program.cs", label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="382-382"];
m26_45 [cluster="CSharpx.Maybe<T>.Do<T>(System.Action<T>)", file="Program.cs", label="Entry CSharpx.Maybe<T>.Do<T>(System.Action<T>)", span="300-300"];
m26_6 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="Program.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70"];
m26_7 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="Program.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70"];
m26_184 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="Program.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="433-433"];
m26_188 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="Program.cs", label="parserResult == null", span="435-435"];
m26_190 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="Program.cs", label="var usage = GetUsageFromType(parserResult.TypeInfo.Current)", span="437-437"];
m26_198 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="Program.cs", label="var example = mapperFunc(e)", span="448-448"];
m26_189 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="Program.cs", label="throw new ArgumentNullException(''parserResult'');", span="435-435"];
m26_191 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="Program.cs", label="usage.MatchNothing()", span="438-438"];
m26_193 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="Program.cs", label="var usageTuple = usage.FromJust()", span="441-441"];
m26_192 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="Program.cs", label="return string.Empty;", span="439-439"];
m26_194 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="Program.cs", label="var examples = usageTuple.Item2", span="442-442"];
m26_195 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="Program.cs", label="var appAlias = usageTuple.Item1.ApplicationAlias ?? ReflectionHelper.GetAssemblyName()", span="443-443"];
m26_197 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="Program.cs", label=examples, span="446-446"];
m26_196 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="Program.cs", label="var text = new StringBuilder()", span="445-445"];
m26_202 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="Program.cs", label="var commandLine = new StringBuilder()\r\n                        .Append(2.Spaces())\r\n                        .Append(appAlias)\r\n                        .Append(' ')\r\n                        .Append(Parser.Default.FormatCommandLine(example.Sample,\r\n                            config =>\r\n                                {\r\n                                    config.PreferShortName = s.PreferShortName;\r\n                                    config.GroupSwitches = s.GroupSwitches;\r\n                                    config.UseEqualToken = s.UseEqualToken;\r\n                                }))\r\n                        .Append(Environment.NewLine)", span="456-467"];
m26_204 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="Program.cs", label="text.Append(exampleText)", span="470-470"];
m26_205 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="Program.cs", label="return text.ToString();", span="473-473"];
m26_199 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="Program.cs", label="var exampleText = new StringBuilder()\r\n                    .Append(example.HelpText)\r\n                    .Append(':')\r\n                    .Append(Environment.NewLine)", span="449-452"];
m26_200 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="Program.cs", label="var styles = example.GetFormatStylesOrDefault()", span="453-453"];
m26_203 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="Program.cs", label="exampleText.Append(commandLine)", span="468-468"];
m26_201 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="Program.cs", label=styles, span="454-454"];
m26_206 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="Program.cs", label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="433-433"];
m26_166 [cluster="Unk.ForEach", file="Program.cs", label="Entry Unk.ForEach", span=""];
m26_379 [cluster="Unk.Aggregate", file="Program.cs", label="Entry Unk.Aggregate", span=""];
m26_213 [cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="Program.cs", label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="87-87"];
m26_176 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="Program.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m26_74 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="Program.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m26_265 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="Program.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m26_419 [file="Program.cs", label="CommandLine.Text.HelpText", span=""];
m26_420 [file="Program.cs", label=auto, span=""];
m26_421 [file="Program.cs", label="CommandLine.ParserResult<T>", span=""];
m26_422 [file="Program.cs", label=pr, span=""];
m26_423 [file="Program.cs", label="CommandLine.Text.HelpText", span=""];
m26_424 [file="Program.cs", label="System.Func<CommandLine.Error, string>", span=""];
m26_425 [file="Program.cs", label=int, span=""];
m26_426 [file="Program.cs", label=text, span=""];
m26_427 [file="Program.cs", label=s, span=""];
m26_428 [file="Program.cs", label=string, span=""];
m26_429 [file="Program.cs", label=maxLength, span=""];
m26_430 [file="Program.cs", label=remainingSpace, span=""];
m26_431 [file="Program.cs", label=int, span=""];
m26_432 [file="Program.cs", label="CommandLine.Core.Specification", span=""];
m26_433 [file="Program.cs", label=optionHelpText, span=""];
m26_434 [file="Program.cs", label="CommandLine.Core.OptionSpecification", span=""];
m26_435 [file="Program.cs", label="CommandLine.Core.ValueSpecification", span=""];
m27_23 [cluster="Unk.Where", file="ReflectionUtil.cs", label="Entry Unk.Where", span=""];
m27_0 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ReflectionUtil.cs", label="Entry CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m27_1 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ReflectionUtil.cs", label="tokens.Empty()", span="15-15"];
m27_2 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ReflectionUtil.cs", label="yield break;", span="17-17"];
m27_9 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ReflectionUtil.cs", label="yield return first;", span="29-29"];
m27_12 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ReflectionUtil.cs", label="yield return token;", span="34-34"];
m27_4 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ReflectionUtil.cs", label="var first = tokens.First()", span="20-20"];
m27_7 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ReflectionUtil.cs", label="typeLookup(first.Text).MatchJust(out info)", span="24-24"];
m27_8 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ReflectionUtil.cs", label="info.Tag == TypeDescriptorKind.Sequence\r\n                        && tokens.Skip(1).Take(1).Any()", span="26-27"];
m27_10 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ReflectionUtil.cs", label="tokens.Skip(1).Where(token => token.IsValue())", span="31-31"];
m27_13 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ReflectionUtil.cs", label="Partition(tokens.Skip(1 + items), typeLookup)", span="39-39"];
m27_3 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ReflectionUtil.cs", label="var items = 0", span="19-19"];
m27_11 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ReflectionUtil.cs", label="items++", span="33-33"];
m27_5 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ReflectionUtil.cs", label="first.Tag == TokenType.Name", span="21-21"];
m27_6 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ReflectionUtil.cs", label="TypeDescriptor info", span="23-23"];
m27_15 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ReflectionUtil.cs", label="Exit CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m27_22 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ReflectionUtil.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m27_19 [cluster="CommandLine.Infrastructure.Maybe<T>.MatchJust(out T)", file="ReflectionUtil.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.MatchJust(out T)", span="31-31"];
m27_16 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="ReflectionUtil.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="87-87"];
m27_24 [cluster="lambda expression", file="ReflectionUtil.cs", label="Entry lambda expression", span="31-31"];
m27_25 [cluster="lambda expression", file="ReflectionUtil.cs", label="token.IsValue()", span="31-31"];
m27_26 [cluster="lambda expression", file="ReflectionUtil.cs", label="Exit lambda expression", span="31-31"];
m27_17 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ReflectionUtil.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m27_20 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="ReflectionUtil.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m27_21 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="ReflectionUtil.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m27_27 [cluster="CommandLine.Core.Token.IsValue()", file="ReflectionUtil.cs", label="Entry CommandLine.Core.Token.IsValue()", span="77-77"];
m27_18 [cluster="System.Func<T, TResult>.Invoke(T)", file="ReflectionUtil.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m30_37 [cluster="CommandLine.Core.OptionSpecification.FromOptionSpecification()", file="StringUtil.cs", label="Entry CommandLine.Core.OptionSpecification.FromOptionSpecification()", span="15-15"];
m30_103 [cluster="NameInfo.cstr", file="StringUtil.cs", label="Entry NameInfo.cstr", span=""];
m30_4 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="StringUtil.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="24-24"];
m30_8 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", color=green, community=0, file="StringUtil.cs", label="return specProps =>\r\n                {\r\n                    var options = specProps\r\n                            .Where(sp => sp.Specification.IsOption())\r\n                            .Where(sp => ((OptionSpecification)sp.Specification).SetName.Length > 0\r\n                                   && sp.Value.IsJust());\r\n                    var groups = options.GroupBy(g => ((OptionSpecification)g.Specification).SetName);\r\n                    if (groups.Count() > 1)\r\n                    {\r\n                        return options.Select(s =>\r\n                            new MutuallyExclusiveSetError(\r\n                                ((OptionSpecification)s.Specification).FromOptionSpecification()));\r\n                    }\r\n                    return Enumerable.Empty<Error>();\r\n                };", prediction=24, span="26-40"];
m30_9 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="StringUtil.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="24-24"];
m30_53 [cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="StringUtil.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149"];
m30_6 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="StringUtil.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="74-74"];
m30_75 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", color=green, community=0, file="StringUtil.cs", label="return specProps =>\r\n                {\r\n                    var options = specProps.Where(\r\n                        sp => sp.Specification.TargetType == TargetType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && (\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())\r\n                        )\r\n                    );\r\n                    if (options.Any())\r\n                    {\r\n                        return options.Select(s => new SequenceOutOfRangeError(\r\n                            s.Specification.FromSpecification()));\r\n                    }\r\n                    return Enumerable.Empty<Error>();\r\n                };", prediction=25, span="76-92"];
m30_76 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="StringUtil.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="74-74"];
m30_73 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="StringUtil.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m30_107 [cluster="CommandLine.Core.Token.IsName()", file="StringUtil.cs", label="Entry CommandLine.Core.Token.IsName()", span="68-68"];
m30_49 [cluster="Unk.Any", file="StringUtil.cs", label="Entry Unk.Any", span=""];
m30_68 [cluster="CommandLine.Core.Specification.IsValue()", file="StringUtil.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m30_17 [cluster="Unk.Where", file="StringUtil.cs", label="Entry Unk.Where", span=""];
m30_63 [cluster="Unk.IsNothing", file="StringUtil.cs", label="Entry Unk.IsNothing", span=""];
m30_21 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="StringUtil.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m30_74 [cluster="Unk.FromSpecification", file="StringUtil.cs", label="Entry Unk.FromSpecification", span=""];
m30_86 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="StringUtil.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="134-134"];
m30_7 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="StringUtil.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="95-95"];
m30_91 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="StringUtil.cs", label="return specProps =>\r\n                {\r\n                    var specs = from sp in specProps\r\n                                where sp.Specification.IsOption() && sp.Value.IsJust()\r\n                                select (OptionSpecification)sp.Specification;\r\n                    var options = from t in tokens.Where(t => t.IsName())\r\n                                  join o in specs on t.Text equals o.UniqueName() into to\r\n                                  from o in to.DefaultIfEmpty()\r\n                                  where o != null\r\n                                  select new { o.ShortName, o.LongName };\r\n                    var groups = from x in options\r\n                                 group x by x into g\r\n                                 let count = g.Count()\r\n                                 select new { Value = g.Key, Count = count };\r\n                    var errors = from y in groups\r\n                                 where y.Count > 1\r\n                                 select new RepeatedOptionError(new NameInfo(y.Value.ShortName, y.Value.LongName));\r\n                    return errors;\r\n                };", span="97-115"];
m30_92 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="StringUtil.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="95-95"];
m30_69 [cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="StringUtil.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="144-144"];
m30_64 [cluster="Unk.Contains", file="StringUtil.cs", label="Entry Unk.Contains", span=""];
m30_90 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="StringUtil.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="324-324"];
m30_0 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="StringUtil.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m30_1 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="StringUtil.cs", label="return new List<Func<IEnumerable<SpecificationProperty>, IEnumerable<Error>>>\r\n                {\r\n                    EnforceMutuallyExclusiveSet(),\r\n                    EnforceRequired(),\r\n                    EnforceRange(),\r\n                    EnforceSingle(tokens)\r\n                };", span="15-21"];
m30_2 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="StringUtil.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m30_93 [cluster="lambda expression", file="StringUtil.cs", label="Entry lambda expression", span="97-115"];
m30_11 [cluster="lambda expression", file="StringUtil.cs", label="var options = specProps\r\n                            .Where(sp => sp.Specification.IsOption())\r\n                            .Where(sp => ((OptionSpecification)sp.Specification).SetName.Length > 0\r\n                                   && sp.Value.IsJust())", span="28-31"];
m30_13 [cluster="lambda expression", color=green, community=0, file="StringUtil.cs", label="groups.Count() > 1", prediction=26, span="33-33"];
m30_12 [cluster="lambda expression", file="StringUtil.cs", label="var groups = options.GroupBy(g => ((OptionSpecification)g.Specification).SetName)", span="32-32"];
m30_14 [cluster="lambda expression", file="StringUtil.cs", label="return options.Select(s =>\r\n                            new MutuallyExclusiveSetError(\r\n                                ((OptionSpecification)s.Specification).FromOptionSpecification()));", span="35-37"];
m30_15 [cluster="lambda expression", file="StringUtil.cs", label="return Enumerable.Empty<Error>();", span="39-39"];
m30_41 [cluster="lambda expression", color=green, community=0, file="StringUtil.cs", label="var setsWithTrue =\r\n                    specProps\r\n                        .Where(sp => sp.Specification.IsOption()\r\n                            && sp.Value.IsJust() && sp.Specification.Required)\r\n                        .Select(s => ((OptionSpecification)s.Specification).SetName).ToList()", prediction=27, span="47-51"];
m30_42 [cluster="lambda expression", color=green, community=0, file="StringUtil.cs", label="var requiredButEmpty =\r\n                    specProps\r\n                        .Where(sp => sp.Specification.IsOption())\r\n                        .Where(sp => sp.Value.IsNothing()\r\n                            && sp.Specification.Required\r\n                            && (\r\n                                ((OptionSpecification)sp.Specification).SetName.Length == 0 ||\r\n                                !setsWithTrue.Contains(((OptionSpecification)sp.Specification).SetName)\r\n                            ))                          \r\n                    .Concat(specProps\r\n                        .Where(sp => sp.Specification.IsValue()\r\n                            && sp.Value.IsNothing()\r\n                            && sp.Specification.Required)).ToList()", prediction=27, span="53-65"];
m30_40 [cluster="lambda expression", file="StringUtil.cs", label="Entry lambda expression", span="45-71"];
m30_50 [cluster="lambda expression", file="StringUtil.cs", label="Entry lambda expression", span="49-50"];
m30_54 [cluster="lambda expression", file="StringUtil.cs", label="Entry lambda expression", span="51-51"];
m30_61 [cluster="lambda expression", color=green, community=0, file="StringUtil.cs", label="sp.Value.IsNothing()\r\n                            && sp.Specification.Required\r\n                            && (\r\n                                ((OptionSpecification)sp.Specification).SetName.Length == 0 ||\r\n                                !setsWithTrue.Contains(((OptionSpecification)sp.Specification).SetName)\r\n                            )", prediction=27, span="56-61"];
m30_43 [cluster="lambda expression", color=green, community=0, file="StringUtil.cs", label="requiredButEmpty.Any()", prediction=30, span="66-66"];
m30_57 [cluster="lambda expression", file="StringUtil.cs", label="Entry lambda expression", span="55-55"];
m30_60 [cluster="lambda expression", file="StringUtil.cs", label="Entry lambda expression", span="56-61"];
m30_65 [cluster="lambda expression", file="StringUtil.cs", label="Entry lambda expression", span="63-65"];
m30_44 [cluster="lambda expression", color=green, community=0, file="StringUtil.cs", label="return requiredButEmpty.Select(s =>new MissingRequiredOptionError(\r\n                            s.Specification.FromSpecification()));", prediction=27, span="67-68"];
m30_62 [cluster="lambda expression", file="StringUtil.cs", label="Exit lambda expression", span="56-61"];
m30_45 [cluster="lambda expression", file="StringUtil.cs", label="return Enumerable.Empty<Error>();", span="70-70"];
m30_46 [cluster="lambda expression", file="StringUtil.cs", label="Exit lambda expression", span="45-71"];
m30_70 [cluster="lambda expression", file="StringUtil.cs", label="Entry lambda expression", span="67-68"];
m30_51 [cluster="lambda expression", color=green, community=0, file="StringUtil.cs", label="sp.Specification.IsOption()\r\n                            && sp.Value.IsJust() && sp.Specification.Required", prediction=32, span="49-50"];
m30_52 [cluster="lambda expression", file="StringUtil.cs", label="Exit lambda expression", span="49-50"];
m30_66 [cluster="lambda expression", color=green, community=0, file="StringUtil.cs", label="sp.Specification.IsValue()\r\n                            && sp.Value.IsNothing()\r\n                            && sp.Specification.Required", prediction=33, span="63-65"];
m30_67 [cluster="lambda expression", file="StringUtil.cs", label="Exit lambda expression", span="63-65"];
m30_71 [cluster="lambda expression", color=green, community=0, file="StringUtil.cs", label="new MissingRequiredOptionError(\r\n                            s.Specification.FromSpecification())", prediction=34, span="67-68"];
m30_72 [cluster="lambda expression", file="StringUtil.cs", label="Exit lambda expression", span="67-68"];
m30_78 [cluster="lambda expression", color=green, community=0, file="StringUtil.cs", label="var options = specProps.Where(\r\n                        sp => sp.Specification.TargetType == TargetType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && (\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())\r\n                        )\r\n                    )", prediction=35, span="78-85"];
m30_77 [cluster="lambda expression", file="StringUtil.cs", label="Entry lambda expression", span="76-92"];
m30_79 [cluster="lambda expression", file="StringUtil.cs", label="options.Any()", span="86-86"];
m30_83 [cluster="lambda expression", file="StringUtil.cs", label="Entry lambda expression", span="79-84"];
m30_80 [cluster="lambda expression", file="StringUtil.cs", label="return options.Select(s => new SequenceOutOfRangeError(\r\n                            s.Specification.FromSpecification()));", span="88-89"];
m30_10 [cluster="lambda expression", file="StringUtil.cs", label="Entry lambda expression", span="26-40"];
m30_22 [cluster="lambda expression", file="StringUtil.cs", label="Entry lambda expression", span="29-29"];
m30_26 [cluster="lambda expression", file="StringUtil.cs", label="Entry lambda expression", span="30-31"];
m30_30 [cluster="lambda expression", file="StringUtil.cs", label="Entry lambda expression", span="32-32"];
m30_16 [cluster="lambda expression", file="StringUtil.cs", label="Exit lambda expression", span="26-40"];
m30_33 [cluster="lambda expression", file="StringUtil.cs", label="Entry lambda expression", span="35-37"];
m30_96 [cluster="lambda expression", file="StringUtil.cs", label="var groups = from x in options\r\n                                 group x by x into g\r\n                                 let count = g.Count()\r\n                                 select new { Value = g.Key, Count = count }", span="107-110"];
m30_95 [cluster="lambda expression", file="StringUtil.cs", label="var options = from t in tokens.Where(t => t.IsName())\r\n                                  join o in specs on t.Text equals o.UniqueName() into to\r\n                                  from o in to.DefaultIfEmpty()\r\n                                  where o != null\r\n                                  select new { o.ShortName, o.LongName }", span="102-106"];
m30_56 [cluster="lambda expression", file="StringUtil.cs", label="Exit lambda expression", span="51-51"];
m30_55 [cluster="lambda expression", file="StringUtil.cs", label="((OptionSpecification)s.Specification).SetName", span="51-51"];
m30_59 [cluster="lambda expression", file="StringUtil.cs", label="Exit lambda expression", span="55-55"];
m30_58 [cluster="lambda expression", file="StringUtil.cs", label="sp.Specification.IsOption()", span="55-55"];
m30_23 [cluster="lambda expression", file="StringUtil.cs", label="sp.Specification.IsOption()", span="29-29"];
m30_94 [cluster="lambda expression", file="StringUtil.cs", label="var specs = from sp in specProps\r\n                                where sp.Specification.IsOption() && sp.Value.IsJust()\r\n                                select (OptionSpecification)sp.Specification", span="99-101"];
m30_84 [cluster="lambda expression", file="StringUtil.cs", label="sp.Specification.TargetType == TargetType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && (\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())\r\n                        )", span="79-84"];
m30_88 [cluster="lambda expression", file="StringUtil.cs", label="new SequenceOutOfRangeError(\r\n                            s.Specification.FromSpecification())", span="88-89"];
m30_82 [cluster="lambda expression", file="StringUtil.cs", label="Exit lambda expression", span="76-92"];
m30_81 [cluster="lambda expression", file="StringUtil.cs", label="return Enumerable.Empty<Error>();", span="91-91"];
m30_85 [cluster="lambda expression", file="StringUtil.cs", label="Exit lambda expression", span="79-84"];
m30_87 [cluster="lambda expression", file="StringUtil.cs", label="Entry lambda expression", span="88-89"];
m30_24 [cluster="lambda expression", file="StringUtil.cs", label="Exit lambda expression", span="29-29"];
m30_28 [cluster="lambda expression", file="StringUtil.cs", label="Exit lambda expression", span="30-31"];
m30_27 [cluster="lambda expression", file="StringUtil.cs", label="((OptionSpecification)sp.Specification).SetName.Length > 0\r\n                                   && sp.Value.IsJust()", span="30-31"];
m30_32 [cluster="lambda expression", file="StringUtil.cs", label="Exit lambda expression", span="32-32"];
m30_31 [cluster="lambda expression", file="StringUtil.cs", label="((OptionSpecification)g.Specification).SetName", span="32-32"];
m30_35 [cluster="lambda expression", file="StringUtil.cs", label="Exit lambda expression", span="35-37"];
m30_34 [cluster="lambda expression", file="StringUtil.cs", label="new MutuallyExclusiveSetError(\r\n                                ((OptionSpecification)s.Specification).FromOptionSpecification())", span="36-37"];
m30_97 [cluster="lambda expression", file="StringUtil.cs", label="var errors = from y in groups\r\n                                 where y.Count > 1\r\n                                 select new RepeatedOptionError(new NameInfo(y.Value.ShortName, y.Value.LongName))", span="111-113"];
m30_104 [cluster="lambda expression", file="StringUtil.cs", label="Entry lambda expression", span="102-102"];
m30_89 [cluster="lambda expression", file="StringUtil.cs", label="Exit lambda expression", span="88-89"];
m30_98 [cluster="lambda expression", file="StringUtil.cs", label="return errors;", span="114-114"];
m30_106 [cluster="lambda expression", file="StringUtil.cs", label="Exit lambda expression", span="102-102"];
m30_105 [cluster="lambda expression", file="StringUtil.cs", label="t.IsName()", span="102-102"];
m30_99 [cluster="lambda expression", file="StringUtil.cs", label="Exit lambda expression", span="97-115"];
m30_102 [cluster="CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", file="StringUtil.cs", label="Entry CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", span="335-335"];
m30_48 [cluster="Unk.Concat", file="StringUtil.cs", label="Entry Unk.Concat", span=""];
m30_5 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="StringUtil.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="43-43"];
m30_38 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", color=green, community=0, file="StringUtil.cs", label="return specProps =>\r\n            {\r\n                var setsWithTrue =\r\n                    specProps\r\n                        .Where(sp => sp.Specification.IsOption()\r\n                            && sp.Value.IsJust() && sp.Specification.Required)\r\n                        .Select(s => ((OptionSpecification)s.Specification).SetName).ToList();\r\n                \r\n                var requiredButEmpty =\r\n                    specProps\r\n                        .Where(sp => sp.Specification.IsOption())\r\n                        .Where(sp => sp.Value.IsNothing()\r\n                            && sp.Specification.Required\r\n                            && (\r\n                                ((OptionSpecification)sp.Specification).SetName.Length == 0 ||\r\n                                !setsWithTrue.Contains(((OptionSpecification)sp.Specification).SetName)\r\n                            ))                          \r\n                    .Concat(specProps\r\n                        .Where(sp => sp.Specification.IsValue()\r\n                            && sp.Value.IsNothing()\r\n                            && sp.Specification.Required)).ToList();\r\n                    if (requiredButEmpty.Any()) {\r\n                        return requiredButEmpty.Select(s =>new MissingRequiredOptionError(\r\n                            s.Specification.FromSpecification()));\r\n                    }\r\n                    return Enumerable.Empty<Error>();\r\n                };", prediction=27, span="45-71"];
m30_39 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="StringUtil.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="43-43"];
m30_20 [cluster="Unk.Select", file="StringUtil.cs", label="Entry Unk.Select", span=""];
m30_29 [cluster="Unk.IsJust", file="StringUtil.cs", label="Entry Unk.IsJust", span=""];
m30_100 [cluster="Unk.UniqueName", file="StringUtil.cs", label="Entry Unk.UniqueName", span=""];
m30_47 [cluster="Unk.ToList", file="StringUtil.cs", label="Entry Unk.ToList", span=""];
m30_101 [cluster="Unk.DefaultIfEmpty", file="StringUtil.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m30_36 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="StringUtil.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="302-302"];
m30_25 [cluster="CommandLine.Core.Specification.IsOption()", file="StringUtil.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m30_3 [cluster="System.Collections.Generic.List<T>.List()", file="StringUtil.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m30_18 [cluster="Unk.GroupBy", file="StringUtil.cs", label="Entry Unk.GroupBy", span=""];
m30_19 [cluster="Unk.Count", file="StringUtil.cs", label="Entry Unk.Count", span=""];
m30_108 [file="StringUtil.cs", label=setsWithTrue, span=""];
m30_109 [file="StringUtil.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m35_3 [cluster="CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", file="VerbOptionAttribute.cs", label="Entry CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", span="61-61"];
m35_0 [cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", file="VerbOptionAttribute.cs", label="Entry CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", span="47-47"];
m35_1 [cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", file="VerbOptionAttribute.cs", label="Assumes.NotNullOrEmpty(longName, ''longName'')", span="50-50"];
m35_2 [cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", file="VerbOptionAttribute.cs", label="Exit CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", span="47-47"];
m4_31 -> m4_33  [color=darkseagreen4, key=1, label=option, style=dashed];
m4_50 -> m4_52  [color=darkseagreen4, key=1, label=setName, style=dashed];
m4_50 -> m4_53  [color=darkseagreen4, key=1, label=setName, style=dashed];
m4_49 -> m4_52  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m4_30 -> m4_35  [color=darkseagreen4, key=1, label=requiredRulesAllMet, style=dashed];
m4_34 -> m4_35  [color=darkseagreen4, key=1, label=requiredRulesAllMet, style=dashed];
m4_39 -> m4_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_69 -> m4_75  [color=green, key=1, label="lambda expression", style=dashed];
m4_69 -> m4_78  [color=green, key=1, label="lambda expression", style=dashed];
m4_22 -> m4_43  [color=darkseagreen4, key=1, label=firstArg, style=dashed];
m4_19 -> m4_28  [color=darkseagreen4, key=1, label=verbs, style=dashed];
m4_19 -> m4_25  [color=darkseagreen4, key=1, label=verbs, style=dashed];
m4_23 -> m4_26  [color=darkseagreen4, key=1, label=preprocCompare, style=dashed];
m4_23 -> m4_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_40 -> m4_42  [color=darkseagreen4, key=1, label=option, style=dashed];
m4_8 -> m4_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_12 -> m4_15  [color=darkseagreen4, key=1, label=comparer, style=dashed];
m4_13 -> m4_15  [color=darkseagreen4, key=1, label=comparer, style=dashed];
m4_66 -> m4_71  [color=darkseagreen4, key=1, label=error, style=dashed];
m4_79 -> m4_6  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo", style=dashed];
m4_80 -> m4_9  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_80 -> m4_11  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_80 -> m4_15  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_80 -> m4_16  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_80 -> m4_17  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_80 -> m4_21  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_80 -> m4_26  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_80 -> m4_27  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_80 -> m4_31  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_80 -> m4_33  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_80 -> m4_38  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_80 -> m4_40  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_80 -> m4_42  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_80 -> m4_43  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_80 -> m4_45  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_80 -> m4_51  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_80 -> m4_52  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_80 -> m4_53  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m4_60 -> m4_62  [color=darkseagreen4, key=1, label=property, style=dashed];
m4_63 -> m4_71  [color=darkseagreen4, key=1, label=parserState, style=dashed];
m4_4 -> m4_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m4_4 -> m4_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m4_4 -> m4_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m4_5 -> m4_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_6 -> m4_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_37 -> m4_61  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_37 -> m4_62  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_37 -> m4_67  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m4_37 -> m4_69  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m4_0 -> m4_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_0 -> m4_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_0 -> m4_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_0 -> m4_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_1 -> m4_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_41 -> m4_56  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m4_41 -> m4_59  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m4_41 -> m4_64  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m4_47 -> m4_55  [color=green, key=1, label="lambda expression", style=dashed];
m4_47 -> m4_58  [color=green, key=1, label="lambda expression", style=dashed];
m4_86 -> m4_56  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m4_86 -> m4_59  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m4_86 -> m4_64  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m4_87 -> m4_56  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_87 -> m4_59  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_87 -> m4_64  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_88 -> m4_59  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m4_89 -> m4_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_90 -> m4_76  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_84 -> m4_43  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_85 -> m4_43  [color=darkseagreen4, key=1, label=firstArg, style=dashed];
m4_82 -> m4_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_82 -> m4_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_82 -> m4_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_82 -> m4_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_83 -> m4_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m4_83 -> m4_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m8_4 -> m8_7  [color=darkseagreen4, key=1, label=options, style=dashed];
m8_4 -> m8_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_5 -> m8_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_33 -> m8_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_33 -> m8_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_33 -> m8_49  [color=darkseagreen4, key=1, label=setsWithTrue, style=dashed];
m8_34 -> m8_36  [color=green, key=1, label=requiredButEmpty, style=dashed];
m8_34 -> m8_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_36 -> m8_54  [color=green, key=1, label="lambda expression", style=dashed];
m8_63 -> m8_68  [color=green, key=1, label="lambda expression", style=dashed];
m8_63 -> m8_65  [color=green, key=1, label=options, style=dashed];
m8_65 -> m8_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_32 -> m8_34  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m8_7 -> m8_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_30 -> m8_33  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m8_30 -> m8_34  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m8_79 -> m8_49  [color=darkseagreen4, key=1, label=setsWithTrue, style=dashed];
m9_42 -> m9_33  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
m9_42 -> m9_34  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
m9_42 -> m9_35  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
m9_42 -> m9_28  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
m9_42 -> m9_29  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
m9_42 -> m9_40  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
m13_30 -> m13_33  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m13_30 -> m13_37  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m13_33 -> m13_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_0 -> m13_3  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m13_0 -> m13_5  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m13_16 -> m13_19  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m13_16 -> m13_22  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m13_9 -> m13_12  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.Maybe<object>", style=dashed];
m13_9 -> m13_14  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m13_40 -> m13_37  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m20_88 -> m20_97  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_88 -> m20_99  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m20_88 -> m20_100  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_88 -> m20_103  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_88 -> m20_104  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_88 -> m20_106  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_88 -> m20_117  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_88 -> m20_107  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_106 -> m20_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_55 -> m20_132  [color=darkseagreen4, key=1, label=T, style=dashed];
m20_340 -> m20_347  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m20_350 -> m20_350  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m20_350 -> m20_352  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m20_352 -> m20_352  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m20_353 -> m20_361  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m20_358 -> m20_361  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m20_343 -> m20_350  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m20_343 -> m20_361  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m20_344 -> m20_349  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
m20_344 -> m20_359  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
m20_345 -> m20_354  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
m20_345 -> m20_359  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
m20_235 -> m20_235  [color=darkseagreen4, key=1, label=verbTuple, style=dashed];
m20_110 -> m20_159  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m20_110 -> m20_164  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>", style=dashed];
m20_159 -> m20_164  [color=darkseagreen4, key=1, label=meaningfulErrors, style=dashed];
m20_163 -> m20_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_163 -> m20_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_162 -> m20_164  [color=darkseagreen4, key=1, label=text, style=dashed];
m20_162 -> m20_165  [color=darkseagreen4, key=1, label=text, style=dashed];
m20_162 -> m20_177  [color=darkseagreen4, key=1, label=text, style=dashed];
m20_191 -> m20_193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_250 -> m20_263  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m20_250 -> m20_265  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m20_250 -> m20_300  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_250 -> m20_304  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_250 -> m20_260  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_250 -> m20_267  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m20_250 -> m20_274  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_250 -> m20_277  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_250 -> m20_280  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_250 -> m20_281  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_250 -> m20_285  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_250 -> m20_286  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_266 -> m20_269  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m20_266 -> m20_287  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m20_262 -> m20_269  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m20_262 -> m20_287  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m20_264 -> m20_269  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m20_264 -> m20_287  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m20_268 -> m20_287  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m20_271 -> m20_273  [color=darkseagreen4, key=1, label=words, style=dashed];
m20_271 -> m20_274  [color=darkseagreen4, key=1, label=words, style=dashed];
m20_271 -> m20_275  [color=darkseagreen4, key=1, label=words, style=dashed];
m20_271 -> m20_277  [color=darkseagreen4, key=1, label=words, style=dashed];
m20_271 -> m20_280  [color=darkseagreen4, key=1, label=words, style=dashed];
m20_271 -> m20_281  [color=darkseagreen4, key=1, label=words, style=dashed];
m20_284 -> m20_286  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m20_284 -> m20_287  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m20_259 -> m20_299  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_259 -> m20_303  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_270 -> m20_274  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m20_270 -> m20_280  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m20_272 -> m20_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_272 -> m20_281  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_272 -> m20_274  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_272 -> m20_277  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_272 -> m20_280  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_272 -> m20_283  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_276 -> m20_279  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m20_279 -> m20_279  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m20_283 -> m20_283  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_336 -> m20_338  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_302 -> m20_308  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m20_302 -> m20_310  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m20_302 -> m20_311  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m20_302 -> m20_312  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m20_302 -> m20_313  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m20_302 -> m20_315  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m20_302 -> m20_316  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m20_307 -> m20_309  [color=darkseagreen4, key=1, label=optionName, style=dashed];
m20_307 -> m20_314  [color=darkseagreen4, key=1, label=optionName, style=dashed];
m20_307 -> m20_310  [color=darkseagreen4, key=1, label=optionName, style=dashed];
m20_307 -> m20_311  [color=darkseagreen4, key=1, label=optionName, style=dashed];
m20_307 -> m20_312  [color=darkseagreen4, key=1, label=optionName, style=dashed];
m20_307 -> m20_315  [color=darkseagreen4, key=1, label=optionName, style=dashed];
m20_307 -> m20_316  [color=darkseagreen4, key=1, label=optionName, style=dashed];
m20_307 -> m20_317  [color=darkseagreen4, key=1, label=optionName, style=dashed];
m20_25 -> m20_38  [color=green, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m20_25 -> m20_40  [color=green, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m20_25 -> m20_41  [color=green, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m20_25 -> m20_28  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m20_38 -> m20_56  [color=green, key=1, label="lambda expression", style=dashed];
m20_29 -> m20_38  [color=green, key=1, label=errors, style=dashed];
m20_27 -> m20_38  [color=green, key=1, label=errors, style=dashed];
m20_26 -> m20_40  [color=green, key=1, label=auto, style=dashed];
m20_26 -> m20_41  [color=green, key=1, label=auto, style=dashed];
m20_26 -> m20_42  [color=green, key=1, label=auto, style=dashed];
m20_26 -> m20_37  [color=darkseagreen4, key=1, label=auto, style=dashed];
m20_26 -> m20_34  [color=darkseagreen4, key=1, label=auto, style=dashed];
m20_31 -> m20_40  [color=green, key=1, label=auto, style=dashed];
m20_31 -> m20_41  [color=green, key=1, label=auto, style=dashed];
m20_31 -> m20_42  [color=green, key=1, label=auto, style=dashed];
m20_31 -> m20_37  [color=darkseagreen4, key=1, label=auto, style=dashed];
m20_31 -> m20_34  [color=darkseagreen4, key=1, label=auto, style=dashed];
m20_35 -> m20_37  [color=darkseagreen4, key=1, label=usage, style=dashed];
m20_32 -> m20_34  [color=darkseagreen4, key=1, label=license, style=dashed];
m20_59 -> m20_66  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m20_59 -> m20_86  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m20_59 -> m20_71  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m20_59 -> m20_93  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m20_66 -> m20_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_71 -> m20_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_70 -> m20_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_63 -> m20_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_65 -> m20_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_62 -> m20_65  [color=darkseagreen4, key=1, label=errors, style=dashed];
m20_69 -> m20_90  [color=darkseagreen4, key=1, label=pr, style=dashed];
m20_54 -> m20_139  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m20_54 -> m20_141  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m20_222 -> m20_224  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m20_223 -> m20_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_145 -> m20_148  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_136 -> m20_243  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m20_136 -> m20_248  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_240 -> m20_243  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m20_240 -> m20_248  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m20_242 -> m20_248  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
m20_243 -> m20_247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_196 -> m20_202  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_196 -> m20_203  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m20_196 -> m20_205  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_196 -> m20_206  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m20_196 -> m20_208  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_196 -> m20_209  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m20_196 -> m20_213  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m20_196 -> m20_214  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_196 -> m20_215  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m20_198 -> m20_202  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m20_198 -> m20_208  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m20_199 -> m20_201  [color=darkseagreen4, key=1, label=words, style=dashed];
m20_199 -> m20_202  [color=darkseagreen4, key=1, label=words, style=dashed];
m20_199 -> m20_203  [color=darkseagreen4, key=1, label=words, style=dashed];
m20_199 -> m20_205  [color=darkseagreen4, key=1, label=words, style=dashed];
m20_199 -> m20_208  [color=darkseagreen4, key=1, label=words, style=dashed];
m20_199 -> m20_209  [color=darkseagreen4, key=1, label=words, style=dashed];
m20_212 -> m20_214  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_212 -> m20_215  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_200 -> m20_203  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_200 -> m20_209  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_200 -> m20_202  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_200 -> m20_205  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_200 -> m20_208  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_200 -> m20_211  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_204 -> m20_207  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m20_207 -> m20_207  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m20_211 -> m20_211  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_10 -> m20_13  [color=green, key=1, label=string, style=dashed];
m20_10 -> m20_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_306 -> m20_323  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m20_306 -> m20_324  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m20_306 -> m20_325  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m20_306 -> m20_326  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m20_322 -> m20_324  [color=darkseagreen4, key=1, label=valueName, style=dashed];
m20_322 -> m20_325  [color=darkseagreen4, key=1, label=valueName, style=dashed];
m20_322 -> m20_326  [color=darkseagreen4, key=1, label=valueName, style=dashed];
m20_322 -> m20_327  [color=darkseagreen4, key=1, label=valueName, style=dashed];
m20_333 -> m20_336  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_341 -> m20_366  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m20_364 -> m20_368  [color=darkseagreen4, key=1, label=hasMeta, style=dashed];
m20_150 -> m20_155  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_150 -> m20_153  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m20_375 -> m20_263  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_141  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_132  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_123  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_127  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_148  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_155  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_185  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_235  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_243  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_248  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_244  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_251  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_253  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_255  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_256  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_258  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_300  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_304  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_260  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_261  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_275  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_278  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_281  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_285  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_287  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_288  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_289  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_290  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_309  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_314  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_330  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_331  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_351  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_375 -> m20_356  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_376 -> m20_86  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m20_376 -> m20_93  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m20_382 -> m20_248  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_383 -> m20_248  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m20_384 -> m20_248  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
m20_385 -> m20_300  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_385 -> m20_304  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_386 -> m20_300  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m20_386 -> m20_304  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m20_377 -> m20_90  [color=darkseagreen4, key=1, label=pr, style=dashed];
m20_378 -> m20_117  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_381 -> m20_177  [color=darkseagreen4, key=1, label=text, style=dashed];
m23_37 -> m23_61  [color=darkseagreen4, key=1, label=object, style=dashed];
m23_37 -> m23_62  [color=darkseagreen4, key=1, label=object, style=dashed];
m23_37 -> m23_67  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m23_37 -> m23_69  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m23_63 -> m23_71  [color=darkseagreen4, key=1, label=parserState, style=dashed];
m23_66 -> m23_71  [color=darkseagreen4, key=1, label=error, style=dashed];
m23_60 -> m23_62  [color=darkseagreen4, key=1, label=property, style=dashed];
m23_49 -> m23_52  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m23_50 -> m23_52  [color=darkseagreen4, key=1, label=setName, style=dashed];
m23_50 -> m23_53  [color=darkseagreen4, key=1, label=setName, style=dashed];
m23_40 -> m23_42  [color=darkseagreen4, key=1, label=option, style=dashed];
m23_43 -> m23_45  [color=darkseagreen4, key=1, label=info, style=dashed];
m23_31 -> m23_33  [color=darkseagreen4, key=1, label=option, style=dashed];
m23_30 -> m23_35  [color=darkseagreen4, key=1, label=requiredRulesAllMet, style=dashed];
m23_34 -> m23_35  [color=darkseagreen4, key=1, label=requiredRulesAllMet, style=dashed];
m23_80 -> m23_21  [color=green, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m23_80 -> m23_11  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m23_80 -> m23_16  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m23_80 -> m23_26  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m23_80 -> m23_27  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m23_80 -> m23_31  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m23_80 -> m23_33  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m23_80 -> m23_38  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m23_80 -> m23_40  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m23_80 -> m23_42  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m23_80 -> m23_43  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m23_80 -> m23_45  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m23_80 -> m23_51  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m23_80 -> m23_52  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m23_80 -> m23_53  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m23_79 -> m23_6  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo", style=dashed];
m24_40 -> m24_42  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m24_41 -> m24_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_151 -> m24_153  [color=darkseagreen4, key=1, label="long[]", style=dashed];
m24_152 -> m24_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_266 -> m24_268  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_267 -> m24_271  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_307 -> m24_309  [color=darkseagreen4, key=1, label="long?", style=dashed];
m24_308 -> m24_311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_167 -> m24_170  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m24_169 -> m24_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_169 -> m24_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_259 -> m24_261  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m24_260 -> m24_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_74 -> m24_76  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m24_75 -> m24_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_92 -> m24_94  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m24_93 -> m24_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_314 -> m24_317  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_314 -> m24_318  [color=darkseagreen4, key=1, label=bool, style=dashed];
m24_315 -> m24_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_315 -> m24_317  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_315 -> m24_318  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_251 -> m24_253  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m24_252 -> m24_255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_110 -> m24_112  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m24_111 -> m24_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_368 -> m24_370  [color=darkseagreen4, key=1, label=int, style=dashed];
m24_368 -> m24_379  [color=darkseagreen4, key=1, label=int, style=dashed];
m24_369 -> m24_374  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_370 -> m24_378  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_388 -> m24_390  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent", style=dashed];
m24_389 -> m24_392  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_143 -> m24_145  [color=darkseagreen4, key=1, label="long[]", style=dashed];
m24_144 -> m24_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_55 -> m24_57  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m24_56 -> m24_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_31 -> m24_33  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m24_32 -> m24_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_176 -> m24_181  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m24_176 -> m24_185  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m24_177 -> m24_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_181 -> m24_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_340 -> m24_342  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_351 -> m24_353  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_362 -> m24_364  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_47 -> m24_49  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m24_48 -> m24_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_119 -> m24_121  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m24_120 -> m24_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_23 -> m24_25  [color=darkseagreen4, key=1, label=double, style=dashed];
m24_24 -> m24_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_275 -> m24_277  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m24_276 -> m24_279  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_234 -> m24_236  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m24_235 -> m24_238  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_1 -> m24_13  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m24_3 -> m24_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_225 -> m24_227  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m24_226 -> m24_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_216 -> m24_218  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m24_217 -> m24_221  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_127 -> m24_129  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m24_128 -> m24_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_381 -> m24_383  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue", style=dashed];
m24_382 -> m24_385  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_84 -> m24_86  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m24_85 -> m24_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_64 -> m24_66  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m24_65 -> m24_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_135 -> m24_137  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m24_136 -> m24_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_15 -> m24_17  [color=darkseagreen4, key=1, label=long, style=dashed];
m24_16 -> m24_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_325 -> m24_328  [color=darkseagreen4, key=1, label=int, style=dashed];
m24_325 -> m24_329  [color=darkseagreen4, key=1, label=bool, style=dashed];
m24_326 -> m24_331  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_326 -> m24_328  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_326 -> m24_329  [color=darkseagreen4, key=1, label=result, style=dashed];
m24_159 -> m24_161  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m24_160 -> m24_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_299 -> m24_301  [color=darkseagreen4, key=1, label="int?", style=dashed];
m24_300 -> m24_303  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_242 -> m24_244  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m24_243 -> m24_247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_208 -> m24_210  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m24_209 -> m24_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_291 -> m24_293  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m24_292 -> m24_295  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_100 -> m24_102  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Colors", style=dashed];
m24_101 -> m24_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_102 -> m24_102  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Colors", style=dashed];
m24_283 -> m24_285  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_284 -> m24_287  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_199 -> m24_201  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m24_200 -> m24_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_189 -> m24_191  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m24_190 -> m24_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_396 -> m24_13  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m24_397 -> m24_181  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m24_397 -> m24_185  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m24_398 -> m24_379  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_87 -> m26_96  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_87 -> m26_98  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m26_87 -> m26_99  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_87 -> m26_102  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_87 -> m26_103  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_87 -> m26_105  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_87 -> m26_116  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_87 -> m26_106  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_105 -> m26_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_49 -> m26_131  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m26_384 -> m26_391  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m26_387 -> m26_394  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m26_387 -> m26_405  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m26_388 -> m26_393  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
m26_388 -> m26_403  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
m26_389 -> m26_398  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
m26_389 -> m26_403  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
m26_394 -> m26_394  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m26_394 -> m26_396  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m26_397 -> m26_405  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m26_402 -> m26_405  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m26_396 -> m26_396  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m26_282 -> m26_282  [color=darkseagreen4, key=1, label=verbTuple, style=dashed];
m26_109 -> m26_157  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m26_109 -> m26_162  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>", style=dashed];
m26_157 -> m26_162  [color=darkseagreen4, key=1, label=meaningfulErrors, style=dashed];
m26_161 -> m26_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_161 -> m26_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_160 -> m26_174  [color=darkseagreen4, key=1, label=text, style=dashed];
m26_160 -> m26_162  [color=darkseagreen4, key=1, label=text, style=dashed];
m26_227 -> m26_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_297 -> m26_342  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_297 -> m26_346  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_297 -> m26_307  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_297 -> m26_309  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m26_297 -> m26_312  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m26_297 -> m26_319  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_297 -> m26_322  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_297 -> m26_325  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_297 -> m26_326  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_297 -> m26_330  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_297 -> m26_331  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_306 -> m26_341  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_306 -> m26_345  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_311 -> m26_349  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_311 -> m26_314  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m26_311 -> m26_332  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m26_313 -> m26_332  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m26_316 -> m26_318  [color=darkseagreen4, key=1, label=words, style=dashed];
m26_316 -> m26_319  [color=darkseagreen4, key=1, label=words, style=dashed];
m26_316 -> m26_320  [color=darkseagreen4, key=1, label=words, style=dashed];
m26_316 -> m26_322  [color=darkseagreen4, key=1, label=words, style=dashed];
m26_316 -> m26_325  [color=darkseagreen4, key=1, label=words, style=dashed];
m26_316 -> m26_326  [color=darkseagreen4, key=1, label=words, style=dashed];
m26_329 -> m26_331  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m26_329 -> m26_332  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m26_315 -> m26_319  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m26_315 -> m26_325  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m26_321 -> m26_324  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m26_317 -> m26_319  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_317 -> m26_320  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_317 -> m26_322  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_317 -> m26_325  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_317 -> m26_326  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_317 -> m26_328  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_328 -> m26_328  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_324 -> m26_324  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m26_380 -> m26_382  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_276 -> m26_278  [color=darkseagreen4, key=1, label=attr, style=dashed];
m26_344 -> m26_357  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m26_344 -> m26_363  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m26_353 -> m26_356  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_353 -> m26_362  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_25 -> m26_28  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m26_25 -> m26_34  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m26_25 -> m26_36  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m26_25 -> m26_37  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m26_26 -> m26_32  [color=darkseagreen4, key=1, label=auto, style=dashed];
m26_26 -> m26_51  [color=darkseagreen4, key=1, label=auto, style=dashed];
m26_26 -> m26_33  [color=darkseagreen4, key=1, label=auto, style=dashed];
m26_26 -> m26_55  [color=darkseagreen4, key=1, label=auto, style=dashed];
m26_26 -> m26_36  [color=darkseagreen4, key=1, label=auto, style=dashed];
m26_26 -> m26_37  [color=darkseagreen4, key=1, label=auto, style=dashed];
m26_26 -> m26_38  [color=darkseagreen4, key=1, label=auto, style=dashed];
m26_29 -> m26_34  [color=darkseagreen4, key=1, label=errors, style=dashed];
m26_31 -> m26_51  [color=darkseagreen4, key=1, label=auto, style=dashed];
m26_31 -> m26_33  [color=darkseagreen4, key=1, label=auto, style=dashed];
m26_31 -> m26_55  [color=darkseagreen4, key=1, label=auto, style=dashed];
m26_31 -> m26_36  [color=darkseagreen4, key=1, label=auto, style=dashed];
m26_31 -> m26_37  [color=darkseagreen4, key=1, label=auto, style=dashed];
m26_31 -> m26_38  [color=darkseagreen4, key=1, label=auto, style=dashed];
m26_34 -> m26_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_27 -> m26_34  [color=darkseagreen4, key=1, label=errors, style=dashed];
m26_32 -> m26_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_33 -> m26_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_60 -> m26_67  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m26_60 -> m26_85  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m26_60 -> m26_70  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m26_60 -> m26_92  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m26_63 -> m26_66  [color=darkseagreen4, key=1, label=errors, style=dashed];
m26_67 -> m26_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_70 -> m26_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_70 -> m26_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_64 -> m26_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_66 -> m26_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_68 -> m26_70  [color=darkseagreen4, key=1, label=err, style=dashed];
m26_69 -> m26_89  [color=darkseagreen4, key=1, label=pr, style=dashed];
m26_48 -> m26_137  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m26_48 -> m26_139  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m26_270 -> m26_274  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_182 -> m26_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_134 -> m26_290  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m26_134 -> m26_295  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_287 -> m26_290  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m26_287 -> m26_295  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m26_289 -> m26_295  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
m26_290 -> m26_294  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_258 -> m26_260  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m26_259 -> m26_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_232 -> m26_238  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_232 -> m26_239  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m26_232 -> m26_241  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_232 -> m26_242  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m26_232 -> m26_244  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_232 -> m26_245  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m26_232 -> m26_249  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m26_232 -> m26_250  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_232 -> m26_251  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m26_235 -> m26_237  [color=darkseagreen4, key=1, label=words, style=dashed];
m26_235 -> m26_238  [color=darkseagreen4, key=1, label=words, style=dashed];
m26_235 -> m26_239  [color=darkseagreen4, key=1, label=words, style=dashed];
m26_235 -> m26_241  [color=darkseagreen4, key=1, label=words, style=dashed];
m26_235 -> m26_244  [color=darkseagreen4, key=1, label=words, style=dashed];
m26_235 -> m26_245  [color=darkseagreen4, key=1, label=words, style=dashed];
m26_248 -> m26_250  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_248 -> m26_251  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_234 -> m26_238  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m26_234 -> m26_244  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m26_240 -> m26_243  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m26_236 -> m26_238  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_236 -> m26_239  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_236 -> m26_241  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_236 -> m26_244  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_236 -> m26_245  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_236 -> m26_247  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_247 -> m26_247  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_243 -> m26_243  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m26_10 -> m26_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_10 -> m26_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_348 -> m26_368  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m26_348 -> m26_372  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m26_365 -> m26_367  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_365 -> m26_371  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_377 -> m26_380  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_143 -> m26_146  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_385 -> m26_410  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m26_408 -> m26_412  [color=darkseagreen4, key=1, label=hasMeta, style=dashed];
m26_148 -> m26_151  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m26_148 -> m26_153  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_194 -> m26_197  [color=darkseagreen4, key=1, label=examples, style=dashed];
m26_196 -> m26_204  [color=darkseagreen4, key=1, label=text, style=dashed];
m26_196 -> m26_205  [color=darkseagreen4, key=1, label=text, style=dashed];
m26_202 -> m26_215  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_199 -> m26_203  [color=darkseagreen4, key=1, label=exampleText, style=dashed];
m26_199 -> m26_204  [color=darkseagreen4, key=1, label=exampleText, style=dashed];
m26_419 -> m26_122  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_126  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_131  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_139  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_146  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_153  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_221  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_282  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_290  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_295  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_291  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_298  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_300  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_302  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_303  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_305  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_342  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_346  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_307  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_309  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_320  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_323  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_326  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_330  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_332  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_333  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_353  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_357  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_363  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_374  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_375  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_395  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_419 -> m26_400  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_420 -> m26_51  [color=darkseagreen4, key=1, label=auto, style=dashed];
m26_420 -> m26_55  [color=darkseagreen4, key=1, label=auto, style=dashed];
m26_421 -> m26_85  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m26_421 -> m26_92  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m26_422 -> m26_89  [color=darkseagreen4, key=1, label=pr, style=dashed];
m26_423 -> m26_116  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m26_426 -> m26_174  [color=darkseagreen4, key=1, label=text, style=dashed];
m26_428 -> m26_295  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_429 -> m26_295  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m26_430 -> m26_295  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
m26_431 -> m26_342  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_431 -> m26_346  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_432 -> m26_342  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m26_432 -> m26_346  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m26_434 -> m26_357  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m26_434 -> m26_363  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m26_435 -> m26_368  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m26_435 -> m26_372  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m27_0 -> m27_7  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>", style=dashed];
m27_0 -> m27_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m27_0 -> m27_10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m27_0 -> m27_13  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m27_4 -> m27_7  [color=darkseagreen4, key=1, label=first, style=dashed];
m27_4 -> m27_9  [color=darkseagreen4, key=1, label=first, style=dashed];
m27_10 -> m27_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_10 -> m27_12  [color=darkseagreen4, key=1, label=token, style=dashed];
m27_3 -> m27_11  [color=darkseagreen4, key=1, label=items, style=dashed];
m27_3 -> m27_13  [color=darkseagreen4, key=1, label=items, style=dashed];
m27_11 -> m27_11  [color=darkseagreen4, key=1, label=items, style=dashed];
m27_11 -> m27_13  [color=darkseagreen4, key=1, label=items, style=dashed];
m30_11 -> m30_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_11 -> m30_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_11 -> m30_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m30_12 -> m30_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_14 -> m30_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_41 -> m30_50  [color=green, key=1, label="lambda expression", style=dashed];
m30_41 -> m30_54  [color=green, key=1, label="lambda expression", style=dashed];
m30_41 -> m30_61  [color=green, key=1, label=setsWithTrue, style=dashed];
m30_42 -> m30_57  [color=green, key=1, label="lambda expression", style=dashed];
m30_42 -> m30_60  [color=green, key=1, label="lambda expression", style=dashed];
m30_42 -> m30_65  [color=green, key=1, label="lambda expression", style=dashed];
m30_42 -> m30_44  [color=green, key=1, label=requiredButEmpty, style=dashed];
m30_40 -> m30_42  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m30_44 -> m30_70  [color=green, key=1, label="lambda expression", style=dashed];
m30_78 -> m30_83  [color=green, key=1, label="lambda expression", style=dashed];
m30_78 -> m30_80  [color=green, key=1, label=options, style=dashed];
m30_80 -> m30_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_95 -> m30_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_38 -> m30_41  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m30_38 -> m30_42  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m30_108 -> m30_61  [color=green, key=1, label=setsWithTrue, style=dashed];
}
