digraph  {
d3 [label="help.AddPreOptionsLine(''This software is under the terms of the XYZ License'')", span="62-62", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", color=green, community=0];
d1 [label="var help = new HelpText(new HeadingInfo(''MyProgram'', ''1.0''))", span="60-60", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()"];
d2 [label="help.Copyright = new CopyrightInfo(''Authors, Inc.'', 2007)", span="61-61", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()"];
d4 [label="help.AddPreOptionsLine(''(http://license-text.org/show.cgi?xyz).'')", span="63-63", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()"];
d14 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="378-378", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)"];
d0 [label="Entry CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", span="58-58", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()"];
d11 [label="Entry CommandLine.Text.HelpText.HelpText(string)", span="84-84", cluster="CommandLine.Text.HelpText.HelpText(string)"];
d12 [label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="60-60", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)"];
d5 [label="help.AddPreOptionsLine(''Usage: myprog --input equations-file.xml -o result-file.xml'')", span="64-64", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()"];
d6 [label="help.AddPreOptionsLine(''       myprog -i equations-file.xml --paralell'')", span="65-65", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()"];
d7 [label="help.AddPreOptionsLine(''       myprog -i equations-file.xml -vo result-file.xml'')", span="66-66", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()"];
d8 [label="help.AddOptions(this)", span="67-67", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()"];
d9 [label="return help;", span="68-68", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()"];
d13 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="56-56", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)"];
d10 [label="Exit CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", span="58-58", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()"];
d63 [label="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions", span=""];
d15 [label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="398-398", cluster="CommandLine.Text.HelpText.AddOptions(object)"];
m1_0 [label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", span="15-15", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ReflectionHelper.cs"];
m1_1 [label="var writer = new StringWriter()", span="18-18", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ReflectionHelper.cs"];
m1_2 [label="var sut = new Parser(with => with.HelpWriter = writer)", span="19-19", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ReflectionHelper.cs"];
m1_4 [label="var text = writer.ToString()", span="25-25", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ReflectionHelper.cs"];
m1_3 [label="sut.ParseArguments<FakeOptionWithRequired>(new string[] { })", span="22-22", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ReflectionHelper.cs"];
m1_5 [label="Assert.True(text.Length > 0)", span="26-26", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ReflectionHelper.cs"];
m1_6 [label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", span="15-15", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ReflectionHelper.cs"];
m1_100 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="184-184", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ReflectionHelper.cs"];
m1_101 [label="var expectedError = new HelpRequestedError()", span="187-187", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ReflectionHelper.cs"];
m1_102 [label="var sut = new Parser()", span="188-188", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ReflectionHelper.cs"];
m1_105 [label="((NotParsed<FakeImmutableOptions>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="195-195", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ReflectionHelper.cs"];
m1_103 [label="var result = sut.ParseArguments<FakeImmutableOptions>(new[] { ''--help'' })", span="191-191", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ReflectionHelper.cs"];
m1_104 [label="((NotParsed<FakeImmutableOptions>)result).Errors.Should().HaveCount(x => x == 1)", span="194-194", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ReflectionHelper.cs"];
m1_106 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="184-184", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ReflectionHelper.cs"];
m1_162 [label="Entry CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", span="251-251", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs"];
m1_163 [label="var help = new StringWriter()", span="254-254", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs"];
m1_164 [label="var sut = new Parser(config => config.HelpWriter = help)", span="255-255", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs"];
m1_166 [label="var result = help.ToString()", span="259-259", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs"];
m1_165 [label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new string [] { })", span="258-258", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs"];
m1_167 [label="result.Length.Should().BeGreaterThan(0)", span="262-262", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs"];
m1_168 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="263-263", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs"];
m1_169 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="264-264", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs"];
m1_170 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="265-265", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs"];
m1_171 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="266-266", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs"];
m1_172 [label="lines[3].ShouldBeEquivalentTo(''No verb selected.'')", span="267-267", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs"];
m1_173 [label="lines[4].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="268-268", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs"];
m1_174 [label="lines[5].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="269-269", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs"];
m1_175 [label="lines[6].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="270-270", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs"];
m1_176 [label="lines[7].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="271-271", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs"];
m1_177 [label="lines[8].ShouldBeEquivalentTo(''version    Display version information.'')", span="272-272", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs"];
m1_178 [label="Exit CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", span="251-251", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs"];
m1_8 [label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="37-37", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="ReflectionHelper.cs"];
m1_79 [label="Entry CommandLine.Tests.Fakes.CloneOptions.CloneOptions()", span="33-33", cluster="CommandLine.Tests.Fakes.CloneOptions.CloneOptions()", file="ReflectionHelper.cs"];
m1_11 [label="Entry Unk.True", span="", cluster="Unk.True", file="ReflectionHelper.cs"];
m1_118 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="200-200", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ReflectionHelper.cs"];
m1_119 [label="var help = new StringWriter()", span="203-203", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ReflectionHelper.cs"];
m1_120 [label="var sut = new Parser(config => config.HelpWriter = help)", span="204-204", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ReflectionHelper.cs"];
m1_122 [label="var result = help.ToString()", span="208-208", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ReflectionHelper.cs"];
m1_121 [label="sut.ParseArguments<FakeImmutableOptions>(new[] { ''--help'' })", span="207-207", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ReflectionHelper.cs"];
m1_123 [label="result.Length.Should().BeGreaterThan(0)", span="211-211", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ReflectionHelper.cs"];
m1_124 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="200-200", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ReflectionHelper.cs"];
m1_46 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="81-81", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ReflectionHelper.cs"];
m1_47 [label="var expectedOptions = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''astring'',\r\n                    LongValue = 20L,\r\n                    StringSequence = new[] { ''--aaa'', ''-b'', ''--ccc'' },\r\n                    IntValue = 30\r\n                }", span="84-90", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ReflectionHelper.cs"];
m1_48 [label="var sut = new Parser(with => with.EnableDashDash = true)", span="91-91", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ReflectionHelper.cs"];
m1_50 [label="result.Value.ShouldBeEquivalentTo(expectedOptions)", span="98-98", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ReflectionHelper.cs"];
m1_49 [label="var result = sut.ParseArguments<FakeOptionsWithValues>(\r\n                new[] { ''--stringvalue'', ''astring'', ''--'', ''20'', ''--aaa'', ''-b'', ''--ccc'', ''30'' })", span="94-95", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ReflectionHelper.cs"];
m1_51 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="81-81", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ReflectionHelper.cs"];
m1_110 [label="Entry Unk.ContainSingle", span="", cluster="Unk.ContainSingle", file="ReflectionHelper.cs"];
m1_237 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", span="350-350", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ReflectionHelper.cs"];
m1_238 [label="var help = new StringWriter()", span="353-353", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ReflectionHelper.cs"];
m1_239 [label="var sut = new Parser(config => config.HelpWriter = help)", span="354-354", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ReflectionHelper.cs"];
m1_241 [label="var result = help.ToString()", span="358-358", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ReflectionHelper.cs"];
m1_240 [label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new[] { ''commit'', ''--help'' })", span="357-357", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ReflectionHelper.cs"];
m1_242 [label="result.Length.Should().BeGreaterThan(0)", span="361-361", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ReflectionHelper.cs"];
m1_243 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", span="350-350", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ReflectionHelper.cs"];
m1_64 [label="Entry Unk.>", span="", cluster="Unk.>", file="ReflectionHelper.cs"];
m1_22 [label="Entry CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="142-142", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="ReflectionHelper.cs"];
m1_33 [label="Entry CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", span="46-46", cluster="CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", file="ReflectionHelper.cs"];
m1_83 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="147-147", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ReflectionHelper.cs"];
m1_84 [label="var expectedOptions = new CloneOptions\r\n            {\r\n                Quiet = true,\r\n                Urls = new[] { ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' }\r\n            }", span="150-154", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ReflectionHelper.cs"];
m1_85 [label="var sut = new Parser()", span="155-155", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ReflectionHelper.cs"];
m1_88 [label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="163-163", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ReflectionHelper.cs"];
m1_86 [label="var result = sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(\r\n                new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' })", span="158-159", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ReflectionHelper.cs"];
m1_87 [label="Assert.IsType<CloneOptions>(result.Value)", span="162-162", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ReflectionHelper.cs"];
m1_89 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="147-147", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ReflectionHelper.cs"];
m1_154 [label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15", cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="ReflectionHelper.cs"];
m1_56 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="103-103", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_57 [label="var expectedOptions = new AddOptions\r\n                {\r\n                    Patch = true,\r\n                    FileName = ''--strange-fn''\r\n                }", span="106-110", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_58 [label="var sut = new Parser(with => with.EnableDashDash = true)", span="111-111", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_61 [label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="120-120", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_59 [label="var result = sut.ParseArguments(\r\n                new[] { ''add'', ''-p'', ''--'', ''--strange-fn'' },\r\n                typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="114-116", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_60 [label="Assert.IsType<AddOptions>(result.Value)", span="119-119", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_62 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="103-103", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_7 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="ReflectionHelper.cs"];
m1_71 [label="Entry Unk.RespectingRuntimeTypes", span="", cluster="Unk.RespectingRuntimeTypes", file="ReflectionHelper.cs"];
m1_125 [label="Entry Unk.BeGreaterThan", span="", cluster="Unk.BeGreaterThan", file="ReflectionHelper.cs"];
m1_129 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="216-216", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ReflectionHelper.cs"];
m1_130 [label="var expectedError = new VersionRequestedError()", span="219-219", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ReflectionHelper.cs"];
m1_131 [label="var sut = new Parser()", span="220-220", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ReflectionHelper.cs"];
m1_134 [label="((NotParsed<FakeOptions>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="227-227", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ReflectionHelper.cs"];
m1_132 [label="var result = sut.ParseArguments<FakeOptions>(new[] { ''--version'' })", span="223-223", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ReflectionHelper.cs"];
m1_133 [label="((NotParsed<FakeOptions>)result).Errors.Should().HaveCount(x => x == 1)", span="226-226", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ReflectionHelper.cs"];
m1_135 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="216-216", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ReflectionHelper.cs"];
m1_136 [label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="432-432", cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="ReflectionHelper.cs"];
m1_44 [label="Entry CommandLine.Parser.Parser()", span="26-26", cluster="CommandLine.Parser.Parser()", file="ReflectionHelper.cs"];
m1_182 [label="Entry CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="277-277", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_183 [label="var help = new StringWriter()", span="280-280", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_184 [label="var sut = new Parser(config => config.HelpWriter = help)", span="281-281", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_186 [label="var result = help.ToString()", span="285-285", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_185 [label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new [] { ''--help'' })", span="284-284", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_187 [label="result.Length.Should().BeGreaterThan(0)", span="288-288", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_188 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="289-289", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_189 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="290-290", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_190 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="291-291", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_191 [label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="292-292", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_192 [label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="293-293", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_193 [label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="294-294", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_194 [label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="295-295", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_195 [label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="296-296", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_196 [label="Exit CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="277-277", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_244 [label="Entry lambda expression", span="354-354", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_13 [label="with.HelpWriter = writer", span="19-19", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_12 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_14 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_24 [label="with.HelpWriter = writer", span="35-35", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_23 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_25 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_35 [label="with.HelpWriter = writer", span="51-51", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_34 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_36 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_54 [label="with.EnableDashDash = true", span="91-91", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_53 [label="Entry lambda expression", span="91-91", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_55 [label="Exit lambda expression", span="91-91", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_66 [label="with.EnableDashDash = true", span="111-111", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_68 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_65 [label="Entry lambda expression", span="111-111", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_67 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_69 [label="o.RespectingRuntimeTypes()", span="120-120", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_70 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_80 [label="Entry lambda expression", span="142-142", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_81 [label="o.RespectingRuntimeTypes()", span="142-142", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_82 [label="Exit lambda expression", span="142-142", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_90 [label="Entry lambda expression", span="163-163", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_91 [label="o.RespectingRuntimeTypes()", span="163-163", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_92 [label="Exit lambda expression", span="163-163", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_115 [label="e.Equals(expectedError)", span="195-195", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_111 [label="Entry lambda expression", span="194-194", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_114 [label="Entry lambda expression", span="195-195", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_112 [label="x == 1", span="194-194", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_113 [label="Exit lambda expression", span="194-194", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_116 [label="Exit lambda expression", span="195-195", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_127 [label="config.HelpWriter = help", span="204-204", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_126 [label="Entry lambda expression", span="204-204", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_128 [label="Exit lambda expression", span="204-204", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_141 [label="e.Equals(expectedError)", span="227-227", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_137 [label="Entry lambda expression", span="226-226", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_140 [label="Entry lambda expression", span="227-227", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_138 [label="x == 1", span="226-226", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_139 [label="Exit lambda expression", span="226-226", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_142 [label="Exit lambda expression", span="227-227", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_157 [label="config.HelpWriter = help", span="236-236", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_159 [label="Entry lambda expression", span="245-245", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_156 [label="Entry lambda expression", span="236-236", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_158 [label="Exit lambda expression", span="236-236", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_160 [label="x == 1", span="245-245", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_161 [label="Exit lambda expression", span="245-245", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_180 [label="config.HelpWriter = help", span="255-255", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_179 [label="Entry lambda expression", span="255-255", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_181 [label="Exit lambda expression", span="255-255", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_198 [label="config.HelpWriter = help", span="281-281", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_197 [label="Entry lambda expression", span="281-281", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_199 [label="Exit lambda expression", span="281-281", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_211 [label="config.HelpWriter = help", span="307-307", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_213 [label="Entry lambda expression", span="316-316", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_210 [label="Entry lambda expression", span="307-307", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_212 [label="Exit lambda expression", span="307-307", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_214 [label="x == 1", span="316-316", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_215 [label="Exit lambda expression", span="316-316", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_235 [label="config.HelpWriter = help", span="326-326", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_234 [label="Entry lambda expression", span="326-326", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_236 [label="Exit lambda expression", span="326-326", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_245 [label="config.HelpWriter = help", span="354-354", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_246 [label="Exit lambda expression", span="354-354", cluster="lambda expression", file="ReflectionHelper.cs"];
m1_216 [label="Entry CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", span="322-322", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs"];
m1_217 [label="var help = new StringWriter()", span="325-325", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs"];
m1_218 [label="var sut = new Parser(config => config.HelpWriter = help)", span="326-326", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs"];
m1_220 [label="var result = help.ToString()", span="331-331", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs"];
m1_219 [label="sut.ParseArguments<FakeOptionsWithTwoRequiredAndSets>(\r\n                new[] { ''--weburl=value.com'', ''--ftpurl=value.org'' })", span="329-330", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs"];
m1_221 [label="result.Length.Should().BeGreaterThan(0)", span="334-334", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs"];
m1_222 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="335-335", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs"];
m1_223 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="336-336", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs"];
m1_224 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="337-337", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs"];
m1_225 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="338-338", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs"];
m1_226 [label="lines[3].ShouldBeEquivalentTo(''Option: 'weburl' is not compatible with: 'ftpurl'.'')", span="339-339", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs"];
m1_227 [label="lines[4].ShouldBeEquivalentTo(''Option: 'ftpurl' is not compatible with: 'weburl'.'')", span="340-340", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs"];
m1_228 [label="lines[5].ShouldBeEquivalentTo(''--weburl     Required.'')", span="341-341", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs"];
m1_229 [label="lines[6].ShouldBeEquivalentTo(''--ftpurl     Required.'')", span="342-342", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs"];
m1_230 [label="lines[7].ShouldBeEquivalentTo(''-a'')", span="343-343", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs"];
m1_231 [label="lines[8].ShouldBeEquivalentTo(''--help       Display this help screen.'')", span="344-344", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs"];
m1_232 [label="lines[9].ShouldBeEquivalentTo(''--version    Display version information.'')", span="345-345", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs"];
m1_233 [label="Exit CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", span="322-322", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs"];
m1_26 [label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="47-47", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ReflectionHelper.cs"];
m1_27 [label="var writer = new StringWriter()", span="50-50", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ReflectionHelper.cs"];
m1_28 [label="var sut = new Parser(with => with.HelpWriter = writer)", span="51-51", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ReflectionHelper.cs"];
m1_30 [label="var text = writer.ToString()", span="57-57", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ReflectionHelper.cs"];
m1_29 [label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new string[] { })", span="54-54", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ReflectionHelper.cs"];
m1_31 [label="Assert.True(text.Length > 0)", span="58-58", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ReflectionHelper.cs"];
m1_32 [label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="47-47", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ReflectionHelper.cs"];
m1_108 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ReflectionHelper.cs"];
m1_117 [label="Entry Unk.Equals", span="", cluster="Unk.Equals", file="ReflectionHelper.cs"];
m1_10 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="ReflectionHelper.cs"];
m1_155 [label="Entry Unk.StartWithEquivalent", span="", cluster="Unk.StartWithEquivalent", file="ReflectionHelper.cs"];
m1_109 [label="Entry Unk.HaveCount", span="", cluster="Unk.HaveCount", file="ReflectionHelper.cs"];
m1_99 [label="Entry CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", span="13-13", cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="ReflectionHelper.cs"];
m1_63 [label="Entry CommandLine.Tests.Fakes.AddOptions.AddOptions()", span="7-7", cluster="CommandLine.Tests.Fakes.AddOptions.AddOptions()", file="ReflectionHelper.cs"];
m1_37 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options()", span="63-63", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ReflectionHelper.cs"];
m1_38 [label="var expectedOptions = new FakeOptions\r\n                {\r\n                    StringValue = ''strvalue'', IntSequence = new[] { 1, 2, 3 }\r\n                }", span="66-69", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ReflectionHelper.cs"];
m1_39 [label="var sut = new Parser()", span="70-70", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ReflectionHelper.cs"];
m1_41 [label="result.Value.ShouldBeEquivalentTo(expectedOptions)", span="76-76", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ReflectionHelper.cs"];
m1_40 [label="var result = sut.ParseArguments<FakeOptions>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="73-73", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ReflectionHelper.cs"];
m1_42 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options()", span="63-63", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ReflectionHelper.cs"];
m1_143 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="232-232", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionHelper.cs"];
m1_144 [label="var help = new StringWriter()", span="235-235", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionHelper.cs"];
m1_145 [label="var sut = new Parser(config => config.HelpWriter = help)", span="236-236", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionHelper.cs"];
m1_147 [label="var result = help.ToString()", span="240-240", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionHelper.cs"];
m1_146 [label="sut.ParseArguments<FakeOptions>(new[] { ''--version'' })", span="239-239", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionHelper.cs"];
m1_148 [label="result.Length.Should().BeGreaterThan(0)", span="243-243", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionHelper.cs"];
m1_149 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="244-244", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionHelper.cs"];
m1_150 [label="lines.Should().HaveCount(x => x == 1)", span="245-245", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionHelper.cs"];
m1_151 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="246-246", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionHelper.cs"];
m1_152 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="232-232", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionHelper.cs"];
m1_93 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="168-168", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ReflectionHelper.cs"];
m1_94 [label="var expectedOptions = new FakeImmutableOptions(\r\n                ''strvalue'', new[] { 1, 2, 3 }, default(bool), default(long))", span="171-172", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ReflectionHelper.cs"];
m1_95 [label="var sut = new Parser()", span="173-173", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ReflectionHelper.cs"];
m1_97 [label="result.Value.ShouldBeEquivalentTo(expectedOptions)", span="179-179", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ReflectionHelper.cs"];
m1_96 [label="var result = sut.ParseArguments<FakeImmutableOptions>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="176-176", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ReflectionHelper.cs"];
m1_98 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="168-168", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ReflectionHelper.cs"];
m1_15 [label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="31-31", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_16 [label="var writer = new StringWriter()", span="34-34", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_17 [label="var sut = new Parser(with => with.HelpWriter = writer)", span="35-35", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_19 [label="var text = writer.ToString()", span="41-41", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_18 [label="sut.ParseArguments(new string[] { }, typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="38-38", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_20 [label="Assert.True(text.Length > 0)", span="42-42", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_21 [label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="31-31", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ReflectionHelper.cs"];
m1_153 [label="Entry string.ToNotEmptyLines()", span="10-10", cluster="string.ToNotEmptyLines()", file="ReflectionHelper.cs"];
m1_9 [label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="ReflectionHelper.cs"];
m1_72 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="125-125", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ReflectionHelper.cs"];
m1_73 [label="var expectedOptions = new CloneOptions\r\n                {\r\n                    Quiet = true,\r\n                    Urls = new[] { ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' }\r\n                }", span="128-132", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ReflectionHelper.cs"];
m1_74 [label="var sut = new Parser()", span="133-133", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ReflectionHelper.cs"];
m1_77 [label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="142-142", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ReflectionHelper.cs"];
m1_75 [label="var result = sut.ParseArguments(\r\n                new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' },\r\n                typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="136-138", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ReflectionHelper.cs"];
m1_76 [label="Assert.IsType<CloneOptions>(result.Value)", span="141-141", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ReflectionHelper.cs"];
m1_78 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="125-125", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ReflectionHelper.cs"];
m1_43 [label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="ReflectionHelper.cs"];
m1_200 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", span="303-303", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ReflectionHelper.cs"];
m1_201 [label="var help = new StringWriter()", span="306-306", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ReflectionHelper.cs"];
m1_203 [label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new[] { command })", span="310-310", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ReflectionHelper.cs"];
m1_202 [label="var sut = new Parser(config => config.HelpWriter = help)", span="307-307", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ReflectionHelper.cs"];
m1_204 [label="var result = help.ToString()", span="311-311", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ReflectionHelper.cs"];
m1_205 [label="result.Length.Should().BeGreaterThan(0)", span="314-314", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ReflectionHelper.cs"];
m1_206 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="315-315", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ReflectionHelper.cs"];
m1_207 [label="lines.Should().HaveCount(x => x == 1)", span="316-316", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ReflectionHelper.cs"];
m1_208 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="317-317", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ReflectionHelper.cs"];
m1_209 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", span="303-303", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ReflectionHelper.cs"];
m1_52 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="ReflectionHelper.cs"];
m1_107 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="ReflectionHelper.cs"];
m1_45 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="ReflectionHelper.cs"];
m1_247 [label=writer, span="", file="ReflectionHelper.cs"];
m1_248 [label=writer, span="", file="ReflectionHelper.cs"];
m1_249 [label=writer, span="", file="ReflectionHelper.cs"];
m1_250 [label=expectedError, span="", file="ReflectionHelper.cs"];
m1_251 [label=help, span="", file="ReflectionHelper.cs"];
m1_252 [label=expectedError, span="", file="ReflectionHelper.cs"];
m1_253 [label=help, span="", file="ReflectionHelper.cs"];
m1_254 [label=help, span="", file="ReflectionHelper.cs"];
m1_255 [label=help, span="", file="ReflectionHelper.cs"];
m1_256 [label=help, span="", file="ReflectionHelper.cs"];
m1_257 [label=help, span="", file="ReflectionHelper.cs"];
m1_258 [label=help, span="", file="ReflectionHelper.cs"];
d3 -> d4  [key=0, style=solid, color=green];
d3 -> d14  [key=2, style=dotted, color=green];
d1 -> d3  [key=1, style=dashed, color=green, label=help];
d1 -> d2  [key=0, style=solid];
d1 -> d11  [key=2, style=dotted];
d1 -> d12  [key=2, style=dotted];
d1 -> d4  [key=1, style=dashed, color=darkseagreen4, label=help];
d1 -> d5  [key=1, style=dashed, color=darkseagreen4, label=help];
d1 -> d6  [key=1, style=dashed, color=darkseagreen4, label=help];
d1 -> d7  [key=1, style=dashed, color=darkseagreen4, label=help];
d1 -> d8  [key=1, style=dashed, color=darkseagreen4, label=help];
d1 -> d9  [key=1, style=dashed, color=darkseagreen4, label=help];
d2 -> d3  [key=0, style=solid, color=green];
d2 -> d13  [key=2, style=dotted];
d4 -> d5  [key=0, style=solid];
d4 -> d14  [key=2, style=dotted];
d0 -> d1  [key=0, style=solid];
d5 -> d14  [key=2, style=dotted];
d5 -> d6  [key=0, style=solid];
d6 -> d14  [key=2, style=dotted];
d6 -> d7  [key=0, style=solid];
d7 -> d14  [key=2, style=dotted];
d7 -> d8  [key=0, style=solid];
d8 -> d9  [key=0, style=solid];
d8 -> d15  [key=2, style=dotted];
d9 -> d10  [key=0, style=solid];
d10 -> d0  [key=0, style=bold, color=blue];
d63 -> d8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions"];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_7  [key=2, style=dotted];
m1_1 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_1 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_8  [key=2, style=dotted];
m1_2 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_10  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_9  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_11  [key=2, style=dotted];
m1_6 -> m1_0  [key=0, style=bold, color=blue];
m1_100 -> m1_101  [key=0, style=solid];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_107  [key=2, style=dotted];
m1_101 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m1_101 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_44  [key=2, style=dotted];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_108  [key=2, style=dotted];
m1_105 -> m1_110  [key=2, style=dotted];
m1_105 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_9  [key=2, style=dotted];
m1_103 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_108  [key=2, style=dotted];
m1_104 -> m1_109  [key=2, style=dotted];
m1_104 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_106 -> m1_100  [key=0, style=bold, color=blue];
m1_162 -> m1_163  [key=0, style=solid];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_7  [key=2, style=dotted];
m1_163 -> m1_180  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_163 -> m1_166  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_8  [key=2, style=dotted];
m1_164 -> m1_180  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_166 -> m1_167  [key=0, style=solid];
m1_166 -> m1_10  [key=2, style=dotted];
m1_166 -> m1_168  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_33  [key=2, style=dotted];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_108  [key=2, style=dotted];
m1_167 -> m1_125  [key=2, style=dotted];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_153  [key=2, style=dotted];
m1_168 -> m1_154  [key=2, style=dotted];
m1_168 -> m1_170  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_168 -> m1_171  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_168 -> m1_172  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_168 -> m1_173  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_168 -> m1_174  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_168 -> m1_175  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_168 -> m1_176  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_168 -> m1_177  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_108  [key=2, style=dotted];
m1_169 -> m1_155  [key=2, style=dotted];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_45  [key=2, style=dotted];
m1_171 -> m1_172  [key=0, style=solid];
m1_171 -> m1_45  [key=2, style=dotted];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_45  [key=2, style=dotted];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_45  [key=2, style=dotted];
m1_174 -> m1_175  [key=0, style=solid];
m1_174 -> m1_45  [key=2, style=dotted];
m1_175 -> m1_176  [key=0, style=solid];
m1_175 -> m1_45  [key=2, style=dotted];
m1_176 -> m1_177  [key=0, style=solid];
m1_176 -> m1_45  [key=2, style=dotted];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_45  [key=2, style=dotted];
m1_178 -> m1_162  [key=0, style=bold, color=blue];
m1_118 -> m1_119  [key=0, style=solid];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_7  [key=2, style=dotted];
m1_119 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_119 -> m1_122  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_8  [key=2, style=dotted];
m1_120 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_10  [key=2, style=dotted];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_9  [key=2, style=dotted];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_108  [key=2, style=dotted];
m1_123 -> m1_125  [key=2, style=dotted];
m1_124 -> m1_118  [key=0, style=bold, color=blue];
m1_46 -> m1_47  [key=0, style=solid];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_52  [key=2, style=dotted];
m1_47 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_8  [key=2, style=dotted];
m1_48 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_45  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_9  [key=2, style=dotted];
m1_51 -> m1_46  [key=0, style=bold, color=blue];
m1_237 -> m1_238  [key=0, style=solid];
m1_238 -> m1_239  [key=0, style=solid];
m1_238 -> m1_7  [key=2, style=dotted];
m1_238 -> m1_245  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_238 -> m1_241  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_239 -> m1_240  [key=0, style=solid];
m1_239 -> m1_8  [key=2, style=dotted];
m1_239 -> m1_245  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_241 -> m1_242  [key=0, style=solid];
m1_241 -> m1_10  [key=2, style=dotted];
m1_240 -> m1_241  [key=0, style=solid];
m1_240 -> m1_33  [key=2, style=dotted];
m1_242 -> m1_243  [key=0, style=solid];
m1_242 -> m1_108  [key=2, style=dotted];
m1_242 -> m1_125  [key=2, style=dotted];
m1_243 -> m1_237  [key=0, style=bold, color=blue];
m1_83 -> m1_84  [key=0, style=solid];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_79  [key=2, style=dotted];
m1_84 -> m1_88  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_44  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_45  [key=2, style=dotted];
m1_88 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_33  [key=2, style=dotted];
m1_86 -> m1_88  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_64  [key=2, style=dotted];
m1_89 -> m1_83  [key=0, style=bold, color=blue];
m1_56 -> m1_57  [key=0, style=solid];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_63  [key=2, style=dotted];
m1_57 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_8  [key=2, style=dotted];
m1_58 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_45  [key=2, style=dotted];
m1_61 -> m1_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_22  [key=2, style=dotted];
m1_59 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_64  [key=2, style=dotted];
m1_62 -> m1_56  [key=0, style=bold, color=blue];
m1_129 -> m1_130  [key=0, style=solid];
m1_130 -> m1_131  [key=0, style=solid];
m1_130 -> m1_136  [key=2, style=dotted];
m1_130 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m1_130 -> m1_141  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_44  [key=2, style=dotted];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_108  [key=2, style=dotted];
m1_134 -> m1_110  [key=2, style=dotted];
m1_134 -> m1_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_9  [key=2, style=dotted];
m1_132 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_108  [key=2, style=dotted];
m1_133 -> m1_109  [key=2, style=dotted];
m1_133 -> m1_137  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_135 -> m1_129  [key=0, style=bold, color=blue];
m1_182 -> m1_183  [key=0, style=solid];
m1_183 -> m1_184  [key=0, style=solid];
m1_183 -> m1_7  [key=2, style=dotted];
m1_183 -> m1_198  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_183 -> m1_186  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_8  [key=2, style=dotted];
m1_184 -> m1_198  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_10  [key=2, style=dotted];
m1_186 -> m1_188  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_33  [key=2, style=dotted];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_108  [key=2, style=dotted];
m1_187 -> m1_125  [key=2, style=dotted];
m1_188 -> m1_189  [key=0, style=solid];
m1_188 -> m1_153  [key=2, style=dotted];
m1_188 -> m1_154  [key=2, style=dotted];
m1_188 -> m1_190  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_188 -> m1_191  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_188 -> m1_192  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_188 -> m1_193  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_188 -> m1_194  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_188 -> m1_195  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_189 -> m1_190  [key=0, style=solid];
m1_189 -> m1_108  [key=2, style=dotted];
m1_189 -> m1_155  [key=2, style=dotted];
m1_190 -> m1_191  [key=0, style=solid];
m1_190 -> m1_45  [key=2, style=dotted];
m1_191 -> m1_192  [key=0, style=solid];
m1_191 -> m1_45  [key=2, style=dotted];
m1_192 -> m1_193  [key=0, style=solid];
m1_192 -> m1_45  [key=2, style=dotted];
m1_193 -> m1_194  [key=0, style=solid];
m1_193 -> m1_45  [key=2, style=dotted];
m1_194 -> m1_195  [key=0, style=solid];
m1_194 -> m1_45  [key=2, style=dotted];
m1_195 -> m1_196  [key=0, style=solid];
m1_195 -> m1_45  [key=2, style=dotted];
m1_196 -> m1_182  [key=0, style=bold, color=blue];
m1_244 -> m1_245  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_14 -> m1_12  [key=0, style=bold, color=blue];
m1_24 -> m1_25  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_25 -> m1_23  [key=0, style=bold, color=blue];
m1_35 -> m1_36  [key=0, style=solid];
m1_34 -> m1_35  [key=0, style=solid];
m1_36 -> m1_34  [key=0, style=bold, color=blue];
m1_54 -> m1_55  [key=0, style=solid];
m1_53 -> m1_54  [key=0, style=solid];
m1_55 -> m1_53  [key=0, style=bold, color=blue];
m1_66 -> m1_67  [key=0, style=solid];
m1_68 -> m1_69  [key=0, style=solid];
m1_65 -> m1_66  [key=0, style=solid];
m1_67 -> m1_65  [key=0, style=bold, color=blue];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_71  [key=2, style=dotted];
m1_70 -> m1_68  [key=0, style=bold, color=blue];
m1_80 -> m1_81  [key=0, style=solid];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_71  [key=2, style=dotted];
m1_82 -> m1_80  [key=0, style=bold, color=blue];
m1_90 -> m1_91  [key=0, style=solid];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_71  [key=2, style=dotted];
m1_92 -> m1_90  [key=0, style=bold, color=blue];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_117  [key=2, style=dotted];
m1_111 -> m1_112  [key=0, style=solid];
m1_114 -> m1_115  [key=0, style=solid];
m1_112 -> m1_113  [key=0, style=solid];
m1_113 -> m1_111  [key=0, style=bold, color=blue];
m1_116 -> m1_114  [key=0, style=bold, color=blue];
m1_127 -> m1_128  [key=0, style=solid];
m1_126 -> m1_127  [key=0, style=solid];
m1_128 -> m1_126  [key=0, style=bold, color=blue];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_117  [key=2, style=dotted];
m1_137 -> m1_138  [key=0, style=solid];
m1_140 -> m1_141  [key=0, style=solid];
m1_138 -> m1_139  [key=0, style=solid];
m1_139 -> m1_137  [key=0, style=bold, color=blue];
m1_142 -> m1_140  [key=0, style=bold, color=blue];
m1_157 -> m1_158  [key=0, style=solid];
m1_159 -> m1_160  [key=0, style=solid];
m1_156 -> m1_157  [key=0, style=solid];
m1_158 -> m1_156  [key=0, style=bold, color=blue];
m1_160 -> m1_161  [key=0, style=solid];
m1_161 -> m1_159  [key=0, style=bold, color=blue];
m1_180 -> m1_181  [key=0, style=solid];
m1_179 -> m1_180  [key=0, style=solid];
m1_181 -> m1_179  [key=0, style=bold, color=blue];
m1_198 -> m1_199  [key=0, style=solid];
m1_197 -> m1_198  [key=0, style=solid];
m1_199 -> m1_197  [key=0, style=bold, color=blue];
m1_211 -> m1_212  [key=0, style=solid];
m1_213 -> m1_214  [key=0, style=solid];
m1_210 -> m1_211  [key=0, style=solid];
m1_212 -> m1_210  [key=0, style=bold, color=blue];
m1_214 -> m1_215  [key=0, style=solid];
m1_215 -> m1_213  [key=0, style=bold, color=blue];
m1_235 -> m1_236  [key=0, style=solid];
m1_234 -> m1_235  [key=0, style=solid];
m1_236 -> m1_234  [key=0, style=bold, color=blue];
m1_245 -> m1_246  [key=0, style=solid];
m1_246 -> m1_244  [key=0, style=bold, color=blue];
m1_216 -> m1_217  [key=0, style=solid];
m1_217 -> m1_218  [key=0, style=solid];
m1_217 -> m1_7  [key=2, style=dotted];
m1_217 -> m1_235  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_217 -> m1_220  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_218 -> m1_219  [key=0, style=solid];
m1_218 -> m1_8  [key=2, style=dotted];
m1_218 -> m1_235  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_220 -> m1_221  [key=0, style=solid];
m1_220 -> m1_10  [key=2, style=dotted];
m1_220 -> m1_222  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_219 -> m1_220  [key=0, style=solid];
m1_219 -> m1_9  [key=2, style=dotted];
m1_221 -> m1_222  [key=0, style=solid];
m1_221 -> m1_108  [key=2, style=dotted];
m1_221 -> m1_125  [key=2, style=dotted];
m1_222 -> m1_223  [key=0, style=solid];
m1_222 -> m1_153  [key=2, style=dotted];
m1_222 -> m1_154  [key=2, style=dotted];
m1_222 -> m1_224  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_225  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_226  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_227  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_228  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_229  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_230  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_231  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_232  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_223 -> m1_224  [key=0, style=solid];
m1_223 -> m1_108  [key=2, style=dotted];
m1_223 -> m1_155  [key=2, style=dotted];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_45  [key=2, style=dotted];
m1_225 -> m1_226  [key=0, style=solid];
m1_225 -> m1_45  [key=2, style=dotted];
m1_226 -> m1_227  [key=0, style=solid];
m1_226 -> m1_45  [key=2, style=dotted];
m1_227 -> m1_228  [key=0, style=solid];
m1_227 -> m1_45  [key=2, style=dotted];
m1_228 -> m1_229  [key=0, style=solid];
m1_228 -> m1_45  [key=2, style=dotted];
m1_229 -> m1_230  [key=0, style=solid];
m1_229 -> m1_45  [key=2, style=dotted];
m1_230 -> m1_231  [key=0, style=solid];
m1_230 -> m1_45  [key=2, style=dotted];
m1_231 -> m1_232  [key=0, style=solid];
m1_231 -> m1_45  [key=2, style=dotted];
m1_232 -> m1_233  [key=0, style=solid];
m1_232 -> m1_45  [key=2, style=dotted];
m1_233 -> m1_216  [key=0, style=bold, color=blue];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_7  [key=2, style=dotted];
m1_27 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_27 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_8  [key=2, style=dotted];
m1_28 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_10  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_33  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_11  [key=2, style=dotted];
m1_32 -> m1_26  [key=0, style=bold, color=blue];
m1_37 -> m1_38  [key=0, style=solid];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_43  [key=2, style=dotted];
m1_38 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_44  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_45  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_9  [key=2, style=dotted];
m1_42 -> m1_37  [key=0, style=bold, color=blue];
m1_143 -> m1_144  [key=0, style=solid];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_7  [key=2, style=dotted];
m1_144 -> m1_157  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_144 -> m1_147  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_145 -> m1_146  [key=0, style=solid];
m1_145 -> m1_8  [key=2, style=dotted];
m1_145 -> m1_157  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_147 -> m1_148  [key=0, style=solid];
m1_147 -> m1_10  [key=2, style=dotted];
m1_147 -> m1_149  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_146 -> m1_147  [key=0, style=solid];
m1_146 -> m1_9  [key=2, style=dotted];
m1_148 -> m1_149  [key=0, style=solid];
m1_148 -> m1_108  [key=2, style=dotted];
m1_148 -> m1_125  [key=2, style=dotted];
m1_149 -> m1_150  [key=0, style=solid];
m1_149 -> m1_153  [key=2, style=dotted];
m1_149 -> m1_154  [key=2, style=dotted];
m1_149 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_108  [key=2, style=dotted];
m1_150 -> m1_109  [key=2, style=dotted];
m1_150 -> m1_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_108  [key=2, style=dotted];
m1_151 -> m1_155  [key=2, style=dotted];
m1_152 -> m1_143  [key=0, style=bold, color=blue];
m1_93 -> m1_94  [key=0, style=solid];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_99  [key=2, style=dotted];
m1_94 -> m1_97  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_44  [key=2, style=dotted];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_45  [key=2, style=dotted];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_9  [key=2, style=dotted];
m1_98 -> m1_93  [key=0, style=bold, color=blue];
m1_15 -> m1_16  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_7  [key=2, style=dotted];
m1_16 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_16 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_8  [key=2, style=dotted];
m1_17 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_10  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_22  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_11  [key=2, style=dotted];
m1_21 -> m1_15  [key=0, style=bold, color=blue];
m1_72 -> m1_73  [key=0, style=solid];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_79  [key=2, style=dotted];
m1_73 -> m1_77  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_44  [key=2, style=dotted];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_45  [key=2, style=dotted];
m1_77 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_22  [key=2, style=dotted];
m1_75 -> m1_77  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_64  [key=2, style=dotted];
m1_78 -> m1_72  [key=0, style=bold, color=blue];
m1_200 -> m1_201  [key=0, style=solid];
m1_200 -> m1_203  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_7  [key=2, style=dotted];
m1_201 -> m1_211  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_201 -> m1_204  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_203 -> m1_204  [key=0, style=solid];
m1_203 -> m1_33  [key=2, style=dotted];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_8  [key=2, style=dotted];
m1_202 -> m1_211  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_204 -> m1_205  [key=0, style=solid];
m1_204 -> m1_10  [key=2, style=dotted];
m1_204 -> m1_206  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_205 -> m1_206  [key=0, style=solid];
m1_205 -> m1_108  [key=2, style=dotted];
m1_205 -> m1_125  [key=2, style=dotted];
m1_206 -> m1_207  [key=0, style=solid];
m1_206 -> m1_153  [key=2, style=dotted];
m1_206 -> m1_154  [key=2, style=dotted];
m1_206 -> m1_208  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_207 -> m1_208  [key=0, style=solid];
m1_207 -> m1_108  [key=2, style=dotted];
m1_207 -> m1_109  [key=2, style=dotted];
m1_207 -> m1_213  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_208 -> m1_209  [key=0, style=solid];
m1_208 -> m1_108  [key=2, style=dotted];
m1_208 -> m1_155  [key=2, style=dotted];
m1_209 -> m1_200  [key=0, style=bold, color=blue];
m1_247 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_248 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_249 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_250 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m1_251 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_252 -> m1_141  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m1_253 -> m1_157  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_254 -> m1_180  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_255 -> m1_198  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_256 -> m1_211  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_257 -> m1_235  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_258 -> m1_245  [key=1, style=dashed, color=darkseagreen4, label=help];
}
