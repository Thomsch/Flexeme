digraph  {
d3 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", color=green, community=0, label="-1: help.AddPreOptionsLine(''This software is under the terms of the XYZ License'')", span="62-62"];
d1 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", label="var help = new HelpText(new HeadingInfo(''MyProgram'', ''1.0''))", span="60-60"];
d2 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", label="help.Copyright = new CopyrightInfo(''Authors, Inc.'', 2007)", span="61-61"];
d4 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", label="help.AddPreOptionsLine(''(http://license-text.org/show.cgi?xyz).'')", span="63-63"];
d14 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="378-378"];
d0 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", label="Entry CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", span="58-58"];
d11 [cluster="CommandLine.Text.HelpText.HelpText(string)", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="84-84"];
d12 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="60-60"];
d5 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", label="help.AddPreOptionsLine(''Usage: myprog --input equations-file.xml -o result-file.xml'')", span="64-64"];
d6 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", label="help.AddPreOptionsLine(''       myprog -i equations-file.xml --paralell'')", span="65-65"];
d7 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", label="help.AddPreOptionsLine(''       myprog -i equations-file.xml -vo result-file.xml'')", span="66-66"];
d8 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", label="help.AddOptions(this)", span="67-67"];
d9 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", label="return help;", span="68-68"];
d13 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="56-56"];
d10 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", label="Exit CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", span="58-58"];
d63 [label="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions", span=""];
d15 [cluster="CommandLine.Text.HelpText.AddOptions(object)", label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="398-398"];
m1_0 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", span="15-15"];
m1_1 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ReflectionHelper.cs", label="var writer = new StringWriter()", span="18-18"];
m1_2 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ReflectionHelper.cs", label="var sut = new Parser(with => with.HelpWriter = writer)", span="19-19"];
m1_4 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ReflectionHelper.cs", label="var text = writer.ToString()", span="25-25"];
m1_3 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ReflectionHelper.cs", label="sut.ParseArguments<FakeOptionWithRequired>(new string[] { })", span="22-22"];
m1_5 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ReflectionHelper.cs", label="Assert.True(text.Length > 0)", span="26-26"];
m1_6 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ReflectionHelper.cs", label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", span="15-15"];
m1_100 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="184-184"];
m1_101 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ReflectionHelper.cs", label="var expectedError = new HelpRequestedError()", span="187-187"];
m1_102 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ReflectionHelper.cs", label="var sut = new Parser()", span="188-188"];
m1_105 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ReflectionHelper.cs", label="((NotParsed<FakeImmutableOptions>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="195-195"];
m1_103 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ReflectionHelper.cs", label="var result = sut.ParseArguments<FakeImmutableOptions>(new[] { ''--help'' })", span="191-191"];
m1_104 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ReflectionHelper.cs", label="((NotParsed<FakeImmutableOptions>)result).Errors.Should().HaveCount(x => x == 1)", span="194-194"];
m1_106 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ReflectionHelper.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="184-184"];
m1_162 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", span="251-251"];
m1_163 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs", label="var help = new StringWriter()", span="254-254"];
m1_164 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="255-255"];
m1_166 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs", label="var result = help.ToString()", span="259-259"];
m1_165 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs", label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new string [] { })", span="258-258"];
m1_167 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs", label="result.Length.Should().BeGreaterThan(0)", span="262-262"];
m1_168 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="263-263"];
m1_169 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="264-264"];
m1_170 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="265-265"];
m1_171 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="266-266"];
m1_172 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs", label="lines[3].ShouldBeEquivalentTo(''No verb selected.'')", span="267-267"];
m1_173 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs", label="lines[4].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="268-268"];
m1_174 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs", label="lines[5].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="269-269"];
m1_175 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs", label="lines[6].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="270-270"];
m1_176 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs", label="lines[7].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="271-271"];
m1_177 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs", label="lines[8].ShouldBeEquivalentTo(''version    Display version information.'')", span="272-272"];
m1_178 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionHelper.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", span="251-251"];
m1_8 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="ReflectionHelper.cs", label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="37-37"];
m1_79 [cluster="CommandLine.Tests.Fakes.CloneOptions.CloneOptions()", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Fakes.CloneOptions.CloneOptions()", span="33-33"];
m1_11 [cluster="Unk.True", file="ReflectionHelper.cs", label="Entry Unk.True", span=""];
m1_118 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="200-200"];
m1_119 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ReflectionHelper.cs", label="var help = new StringWriter()", span="203-203"];
m1_120 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ReflectionHelper.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="204-204"];
m1_122 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ReflectionHelper.cs", label="var result = help.ToString()", span="208-208"];
m1_121 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ReflectionHelper.cs", label="sut.ParseArguments<FakeImmutableOptions>(new[] { ''--help'' })", span="207-207"];
m1_123 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ReflectionHelper.cs", label="result.Length.Should().BeGreaterThan(0)", span="211-211"];
m1_124 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ReflectionHelper.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="200-200"];
m1_46 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="81-81"];
m1_47 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ReflectionHelper.cs", label="var expectedOptions = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''astring'',\r\n                    LongValue = 20L,\r\n                    StringSequence = new[] { ''--aaa'', ''-b'', ''--ccc'' },\r\n                    IntValue = 30\r\n                }", span="84-90"];
m1_48 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ReflectionHelper.cs", label="var sut = new Parser(with => with.EnableDashDash = true)", span="91-91"];
m1_50 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ReflectionHelper.cs", label="result.Value.ShouldBeEquivalentTo(expectedOptions)", span="98-98"];
m1_49 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ReflectionHelper.cs", label="var result = sut.ParseArguments<FakeOptionsWithValues>(\r\n                new[] { ''--stringvalue'', ''astring'', ''--'', ''20'', ''--aaa'', ''-b'', ''--ccc'', ''30'' })", span="94-95"];
m1_51 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ReflectionHelper.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="81-81"];
m1_110 [cluster="Unk.ContainSingle", file="ReflectionHelper.cs", label="Entry Unk.ContainSingle", span=""];
m1_237 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", span="350-350"];
m1_238 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ReflectionHelper.cs", label="var help = new StringWriter()", span="353-353"];
m1_239 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ReflectionHelper.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="354-354"];
m1_241 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ReflectionHelper.cs", label="var result = help.ToString()", span="358-358"];
m1_240 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ReflectionHelper.cs", label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new[] { ''commit'', ''--help'' })", span="357-357"];
m1_242 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ReflectionHelper.cs", label="result.Length.Should().BeGreaterThan(0)", span="361-361"];
m1_243 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ReflectionHelper.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", span="350-350"];
m1_64 [cluster="Unk.>", file="ReflectionHelper.cs", label="Entry Unk.>", span=""];
m1_22 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="ReflectionHelper.cs", label="Entry CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="142-142"];
m1_33 [cluster="CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", file="ReflectionHelper.cs", label="Entry CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", span="46-46"];
m1_83 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="147-147"];
m1_84 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ReflectionHelper.cs", label="var expectedOptions = new CloneOptions\r\n            {\r\n                Quiet = true,\r\n                Urls = new[] { ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' }\r\n            }", span="150-154"];
m1_85 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ReflectionHelper.cs", label="var sut = new Parser()", span="155-155"];
m1_88 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ReflectionHelper.cs", label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="163-163"];
m1_86 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ReflectionHelper.cs", label="var result = sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(\r\n                new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' })", span="158-159"];
m1_87 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ReflectionHelper.cs", label="Assert.IsType<CloneOptions>(result.Value)", span="162-162"];
m1_89 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ReflectionHelper.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="147-147"];
m1_154 [cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="ReflectionHelper.cs", label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15"];
m1_56 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="103-103"];
m1_57 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ReflectionHelper.cs", label="var expectedOptions = new AddOptions\r\n                {\r\n                    Patch = true,\r\n                    FileName = ''--strange-fn''\r\n                }", span="106-110"];
m1_58 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ReflectionHelper.cs", label="var sut = new Parser(with => with.EnableDashDash = true)", span="111-111"];
m1_61 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ReflectionHelper.cs", label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="120-120"];
m1_59 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ReflectionHelper.cs", label="var result = sut.ParseArguments(\r\n                new[] { ''add'', ''-p'', ''--'', ''--strange-fn'' },\r\n                typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="114-116"];
m1_60 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ReflectionHelper.cs", label="Assert.IsType<AddOptions>(result.Value)", span="119-119"];
m1_62 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ReflectionHelper.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="103-103"];
m1_7 [cluster="System.IO.StringWriter.StringWriter()", file="ReflectionHelper.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m1_71 [cluster="Unk.RespectingRuntimeTypes", file="ReflectionHelper.cs", label="Entry Unk.RespectingRuntimeTypes", span=""];
m1_125 [cluster="Unk.BeGreaterThan", file="ReflectionHelper.cs", label="Entry Unk.BeGreaterThan", span=""];
m1_129 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="216-216"];
m1_130 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ReflectionHelper.cs", label="var expectedError = new VersionRequestedError()", span="219-219"];
m1_131 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ReflectionHelper.cs", label="var sut = new Parser()", span="220-220"];
m1_134 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ReflectionHelper.cs", label="((NotParsed<FakeOptions>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="227-227"];
m1_132 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ReflectionHelper.cs", label="var result = sut.ParseArguments<FakeOptions>(new[] { ''--version'' })", span="223-223"];
m1_133 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ReflectionHelper.cs", label="((NotParsed<FakeOptions>)result).Errors.Should().HaveCount(x => x == 1)", span="226-226"];
m1_135 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ReflectionHelper.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="216-216"];
m1_136 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="ReflectionHelper.cs", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="432-432"];
m1_44 [cluster="CommandLine.Parser.Parser()", file="ReflectionHelper.cs", label="Entry CommandLine.Parser.Parser()", span="26-26"];
m1_182 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="277-277"];
m1_183 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs", label="var help = new StringWriter()", span="280-280"];
m1_184 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="281-281"];
m1_186 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs", label="var result = help.ToString()", span="285-285"];
m1_185 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs", label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new [] { ''--help'' })", span="284-284"];
m1_187 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs", label="result.Length.Should().BeGreaterThan(0)", span="288-288"];
m1_188 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="289-289"];
m1_189 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="290-290"];
m1_190 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="291-291"];
m1_191 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs", label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="292-292"];
m1_192 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs", label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="293-293"];
m1_193 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs", label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="294-294"];
m1_194 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs", label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="295-295"];
m1_195 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs", label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="296-296"];
m1_196 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionHelper.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="277-277"];
m1_244 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="354-354"];
m1_13 [cluster="lambda expression", file="ReflectionHelper.cs", label="with.HelpWriter = writer", span="19-19"];
m1_12 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="19-19"];
m1_14 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="19-19"];
m1_24 [cluster="lambda expression", file="ReflectionHelper.cs", label="with.HelpWriter = writer", span="35-35"];
m1_23 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="35-35"];
m1_25 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="35-35"];
m1_35 [cluster="lambda expression", file="ReflectionHelper.cs", label="with.HelpWriter = writer", span="51-51"];
m1_34 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="51-51"];
m1_36 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="51-51"];
m1_54 [cluster="lambda expression", file="ReflectionHelper.cs", label="with.EnableDashDash = true", span="91-91"];
m1_53 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="91-91"];
m1_55 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="91-91"];
m1_66 [cluster="lambda expression", file="ReflectionHelper.cs", label="with.EnableDashDash = true", span="111-111"];
m1_68 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="120-120"];
m1_65 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="111-111"];
m1_67 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="111-111"];
m1_69 [cluster="lambda expression", file="ReflectionHelper.cs", label="o.RespectingRuntimeTypes()", span="120-120"];
m1_70 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="120-120"];
m1_80 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="142-142"];
m1_81 [cluster="lambda expression", file="ReflectionHelper.cs", label="o.RespectingRuntimeTypes()", span="142-142"];
m1_82 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="142-142"];
m1_90 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="163-163"];
m1_91 [cluster="lambda expression", file="ReflectionHelper.cs", label="o.RespectingRuntimeTypes()", span="163-163"];
m1_92 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="163-163"];
m1_115 [cluster="lambda expression", file="ReflectionHelper.cs", label="e.Equals(expectedError)", span="195-195"];
m1_111 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="194-194"];
m1_114 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="195-195"];
m1_112 [cluster="lambda expression", file="ReflectionHelper.cs", label="x == 1", span="194-194"];
m1_113 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="194-194"];
m1_116 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="195-195"];
m1_127 [cluster="lambda expression", file="ReflectionHelper.cs", label="config.HelpWriter = help", span="204-204"];
m1_126 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="204-204"];
m1_128 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="204-204"];
m1_141 [cluster="lambda expression", file="ReflectionHelper.cs", label="e.Equals(expectedError)", span="227-227"];
m1_137 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="226-226"];
m1_140 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="227-227"];
m1_138 [cluster="lambda expression", file="ReflectionHelper.cs", label="x == 1", span="226-226"];
m1_139 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="226-226"];
m1_142 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="227-227"];
m1_157 [cluster="lambda expression", file="ReflectionHelper.cs", label="config.HelpWriter = help", span="236-236"];
m1_159 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="245-245"];
m1_156 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="236-236"];
m1_158 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="236-236"];
m1_160 [cluster="lambda expression", file="ReflectionHelper.cs", label="x == 1", span="245-245"];
m1_161 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="245-245"];
m1_180 [cluster="lambda expression", file="ReflectionHelper.cs", label="config.HelpWriter = help", span="255-255"];
m1_179 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="255-255"];
m1_181 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="255-255"];
m1_198 [cluster="lambda expression", file="ReflectionHelper.cs", label="config.HelpWriter = help", span="281-281"];
m1_197 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="281-281"];
m1_199 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="281-281"];
m1_211 [cluster="lambda expression", file="ReflectionHelper.cs", label="config.HelpWriter = help", span="307-307"];
m1_213 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="316-316"];
m1_210 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="307-307"];
m1_212 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="307-307"];
m1_214 [cluster="lambda expression", file="ReflectionHelper.cs", label="x == 1", span="316-316"];
m1_215 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="316-316"];
m1_235 [cluster="lambda expression", file="ReflectionHelper.cs", label="config.HelpWriter = help", span="326-326"];
m1_234 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="326-326"];
m1_236 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="326-326"];
m1_245 [cluster="lambda expression", file="ReflectionHelper.cs", label="config.HelpWriter = help", span="354-354"];
m1_246 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="354-354"];
m1_216 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", span="322-322"];
m1_217 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs", label="var help = new StringWriter()", span="325-325"];
m1_218 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="326-326"];
m1_220 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs", label="var result = help.ToString()", span="331-331"];
m1_219 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs", label="sut.ParseArguments<FakeOptionsWithTwoRequiredAndSets>(\r\n                new[] { ''--weburl=value.com'', ''--ftpurl=value.org'' })", span="329-330"];
m1_221 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs", label="result.Length.Should().BeGreaterThan(0)", span="334-334"];
m1_222 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="335-335"];
m1_223 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="336-336"];
m1_224 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="337-337"];
m1_225 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="338-338"];
m1_226 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs", label="lines[3].ShouldBeEquivalentTo(''Option: 'weburl' is not compatible with: 'ftpurl'.'')", span="339-339"];
m1_227 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs", label="lines[4].ShouldBeEquivalentTo(''Option: 'ftpurl' is not compatible with: 'weburl'.'')", span="340-340"];
m1_228 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs", label="lines[5].ShouldBeEquivalentTo(''--weburl     Required.'')", span="341-341"];
m1_229 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs", label="lines[6].ShouldBeEquivalentTo(''--ftpurl     Required.'')", span="342-342"];
m1_230 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs", label="lines[7].ShouldBeEquivalentTo(''-a'')", span="343-343"];
m1_231 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs", label="lines[8].ShouldBeEquivalentTo(''--help       Display this help screen.'')", span="344-344"];
m1_232 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs", label="lines[9].ShouldBeEquivalentTo(''--version    Display version information.'')", span="345-345"];
m1_233 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ReflectionHelper.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", span="322-322"];
m1_26 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="47-47"];
m1_27 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ReflectionHelper.cs", label="var writer = new StringWriter()", span="50-50"];
m1_28 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ReflectionHelper.cs", label="var sut = new Parser(with => with.HelpWriter = writer)", span="51-51"];
m1_30 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ReflectionHelper.cs", label="var text = writer.ToString()", span="57-57"];
m1_29 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ReflectionHelper.cs", label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new string[] { })", span="54-54"];
m1_31 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ReflectionHelper.cs", label="Assert.True(text.Length > 0)", span="58-58"];
m1_32 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ReflectionHelper.cs", label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="47-47"];
m1_108 [cluster="Unk.Should", file="ReflectionHelper.cs", label="Entry Unk.Should", span=""];
m1_117 [cluster="Unk.Equals", file="ReflectionHelper.cs", label="Entry Unk.Equals", span=""];
m1_10 [cluster="System.IO.StringWriter.ToString()", file="ReflectionHelper.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m1_155 [cluster="Unk.StartWithEquivalent", file="ReflectionHelper.cs", label="Entry Unk.StartWithEquivalent", span=""];
m1_109 [cluster="Unk.HaveCount", file="ReflectionHelper.cs", label="Entry Unk.HaveCount", span=""];
m1_99 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", span="13-13"];
m1_63 [cluster="CommandLine.Tests.Fakes.AddOptions.AddOptions()", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Fakes.AddOptions.AddOptions()", span="7-7"];
m1_37 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options()", span="63-63"];
m1_38 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ReflectionHelper.cs", label="var expectedOptions = new FakeOptions\r\n                {\r\n                    StringValue = ''strvalue'', IntSequence = new[] { 1, 2, 3 }\r\n                }", span="66-69"];
m1_39 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ReflectionHelper.cs", label="var sut = new Parser()", span="70-70"];
m1_41 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ReflectionHelper.cs", label="result.Value.ShouldBeEquivalentTo(expectedOptions)", span="76-76"];
m1_40 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ReflectionHelper.cs", label="var result = sut.ParseArguments<FakeOptions>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="73-73"];
m1_42 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ReflectionHelper.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options()", span="63-63"];
m1_143 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="232-232"];
m1_144 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionHelper.cs", label="var help = new StringWriter()", span="235-235"];
m1_145 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionHelper.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="236-236"];
m1_147 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionHelper.cs", label="var result = help.ToString()", span="240-240"];
m1_146 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionHelper.cs", label="sut.ParseArguments<FakeOptions>(new[] { ''--version'' })", span="239-239"];
m1_148 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionHelper.cs", label="result.Length.Should().BeGreaterThan(0)", span="243-243"];
m1_149 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionHelper.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="244-244"];
m1_150 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionHelper.cs", label="lines.Should().HaveCount(x => x == 1)", span="245-245"];
m1_151 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionHelper.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="246-246"];
m1_152 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionHelper.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="232-232"];
m1_93 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="168-168"];
m1_94 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ReflectionHelper.cs", label="var expectedOptions = new FakeImmutableOptions(\r\n                ''strvalue'', new[] { 1, 2, 3 }, default(bool), default(long))", span="171-172"];
m1_95 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ReflectionHelper.cs", label="var sut = new Parser()", span="173-173"];
m1_97 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ReflectionHelper.cs", label="result.Value.ShouldBeEquivalentTo(expectedOptions)", span="179-179"];
m1_96 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ReflectionHelper.cs", label="var result = sut.ParseArguments<FakeImmutableOptions>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="176-176"];
m1_98 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ReflectionHelper.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="168-168"];
m1_15 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="31-31"];
m1_16 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ReflectionHelper.cs", label="var writer = new StringWriter()", span="34-34"];
m1_17 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ReflectionHelper.cs", label="var sut = new Parser(with => with.HelpWriter = writer)", span="35-35"];
m1_19 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ReflectionHelper.cs", label="var text = writer.ToString()", span="41-41"];
m1_18 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ReflectionHelper.cs", label="sut.ParseArguments(new string[] { }, typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="38-38"];
m1_20 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ReflectionHelper.cs", label="Assert.True(text.Length > 0)", span="42-42"];
m1_21 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ReflectionHelper.cs", label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="31-31"];
m1_153 [cluster="string.ToNotEmptyLines()", file="ReflectionHelper.cs", label="Entry string.ToNotEmptyLines()", span="10-10"];
m1_9 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="ReflectionHelper.cs", label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85"];
m1_72 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="125-125"];
m1_73 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ReflectionHelper.cs", label="var expectedOptions = new CloneOptions\r\n                {\r\n                    Quiet = true,\r\n                    Urls = new[] { ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' }\r\n                }", span="128-132"];
m1_74 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ReflectionHelper.cs", label="var sut = new Parser()", span="133-133"];
m1_77 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ReflectionHelper.cs", label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="142-142"];
m1_75 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ReflectionHelper.cs", label="var result = sut.ParseArguments(\r\n                new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' },\r\n                typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="136-138"];
m1_76 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ReflectionHelper.cs", label="Assert.IsType<CloneOptions>(result.Value)", span="141-141"];
m1_78 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ReflectionHelper.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="125-125"];
m1_43 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m1_200 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", span="303-303"];
m1_201 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ReflectionHelper.cs", label="var help = new StringWriter()", span="306-306"];
m1_203 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ReflectionHelper.cs", label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new[] { command })", span="310-310"];
m1_202 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ReflectionHelper.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="307-307"];
m1_204 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ReflectionHelper.cs", label="var result = help.ToString()", span="311-311"];
m1_205 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ReflectionHelper.cs", label="result.Length.Should().BeGreaterThan(0)", span="314-314"];
m1_206 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ReflectionHelper.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="315-315"];
m1_207 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ReflectionHelper.cs", label="lines.Should().HaveCount(x => x == 1)", span="316-316"];
m1_208 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ReflectionHelper.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="317-317"];
m1_209 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ReflectionHelper.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", span="303-303"];
m1_52 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="ReflectionHelper.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6"];
m1_107 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="ReflectionHelper.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368"];
m1_45 [cluster="Unk.ShouldBeEquivalentTo", file="ReflectionHelper.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m1_247 [file="ReflectionHelper.cs", label=writer, span=""];
m1_248 [file="ReflectionHelper.cs", label=writer, span=""];
m1_249 [file="ReflectionHelper.cs", label=writer, span=""];
m1_250 [file="ReflectionHelper.cs", label=expectedError, span=""];
m1_251 [file="ReflectionHelper.cs", label=help, span=""];
m1_252 [file="ReflectionHelper.cs", label=expectedError, span=""];
m1_253 [file="ReflectionHelper.cs", label=help, span=""];
m1_254 [file="ReflectionHelper.cs", label=help, span=""];
m1_255 [file="ReflectionHelper.cs", label=help, span=""];
m1_256 [file="ReflectionHelper.cs", label=help, span=""];
m1_257 [file="ReflectionHelper.cs", label=help, span=""];
m1_258 [file="ReflectionHelper.cs", label=help, span=""];
d3 -> d4  [color=green, key=0, style=solid];
d3 -> d14  [color=green, key=2, style=dotted];
d1 -> d3  [color=green, key=1, label=help, style=dashed];
d1 -> d2  [key=0, style=solid];
d1 -> d11  [key=2, style=dotted];
d1 -> d12  [key=2, style=dotted];
d1 -> d4  [color=darkseagreen4, key=1, label=help, style=dashed];
d1 -> d5  [color=darkseagreen4, key=1, label=help, style=dashed];
d1 -> d6  [color=darkseagreen4, key=1, label=help, style=dashed];
d1 -> d7  [color=darkseagreen4, key=1, label=help, style=dashed];
d1 -> d8  [color=darkseagreen4, key=1, label=help, style=dashed];
d1 -> d9  [color=darkseagreen4, key=1, label=help, style=dashed];
d2 -> d3  [color=green, key=0, style=solid];
d2 -> d13  [key=2, style=dotted];
d4 -> d5  [key=0, style=solid];
d4 -> d14  [key=2, style=dotted];
d0 -> d1  [key=0, style=solid];
d5 -> d14  [key=2, style=dotted];
d5 -> d6  [key=0, style=solid];
d6 -> d14  [key=2, style=dotted];
d6 -> d7  [key=0, style=solid];
d7 -> d14  [key=2, style=dotted];
d7 -> d8  [key=0, style=solid];
d8 -> d9  [key=0, style=solid];
d8 -> d15  [key=2, style=dotted];
d9 -> d10  [key=0, style=solid];
d10 -> d0  [color=blue, key=0, style=bold];
d63 -> d8  [color=darkseagreen4, key=1, label="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions", style=dashed];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_7  [key=2, style=dotted];
m1_1 -> m1_13  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_1 -> m1_4  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_8  [key=2, style=dotted];
m1_2 -> m1_13  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_10  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_9  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_11  [key=2, style=dotted];
m1_6 -> m1_0  [color=blue, key=0, style=bold];
m1_100 -> m1_101  [key=0, style=solid];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_107  [key=2, style=dotted];
m1_101 -> m1_105  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m1_101 -> m1_115  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_44  [key=2, style=dotted];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_108  [key=2, style=dotted];
m1_105 -> m1_110  [key=2, style=dotted];
m1_105 -> m1_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_9  [key=2, style=dotted];
m1_103 -> m1_105  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_108  [key=2, style=dotted];
m1_104 -> m1_109  [key=2, style=dotted];
m1_104 -> m1_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_106 -> m1_100  [color=blue, key=0, style=bold];
m1_162 -> m1_163  [key=0, style=solid];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_7  [key=2, style=dotted];
m1_163 -> m1_180  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_163 -> m1_166  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_8  [key=2, style=dotted];
m1_164 -> m1_180  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_166 -> m1_167  [key=0, style=solid];
m1_166 -> m1_10  [key=2, style=dotted];
m1_166 -> m1_168  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_33  [key=2, style=dotted];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_108  [key=2, style=dotted];
m1_167 -> m1_125  [key=2, style=dotted];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_153  [key=2, style=dotted];
m1_168 -> m1_154  [key=2, style=dotted];
m1_168 -> m1_170  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_168 -> m1_171  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_168 -> m1_172  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_168 -> m1_173  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_168 -> m1_174  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_168 -> m1_175  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_168 -> m1_176  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_168 -> m1_177  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_108  [key=2, style=dotted];
m1_169 -> m1_155  [key=2, style=dotted];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_45  [key=2, style=dotted];
m1_171 -> m1_172  [key=0, style=solid];
m1_171 -> m1_45  [key=2, style=dotted];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_45  [key=2, style=dotted];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_45  [key=2, style=dotted];
m1_174 -> m1_175  [key=0, style=solid];
m1_174 -> m1_45  [key=2, style=dotted];
m1_175 -> m1_176  [key=0, style=solid];
m1_175 -> m1_45  [key=2, style=dotted];
m1_176 -> m1_177  [key=0, style=solid];
m1_176 -> m1_45  [key=2, style=dotted];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_45  [key=2, style=dotted];
m1_178 -> m1_162  [color=blue, key=0, style=bold];
m1_118 -> m1_119  [key=0, style=solid];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_7  [key=2, style=dotted];
m1_119 -> m1_127  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_119 -> m1_122  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_8  [key=2, style=dotted];
m1_120 -> m1_127  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_10  [key=2, style=dotted];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_9  [key=2, style=dotted];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_108  [key=2, style=dotted];
m1_123 -> m1_125  [key=2, style=dotted];
m1_124 -> m1_118  [color=blue, key=0, style=bold];
m1_46 -> m1_47  [key=0, style=solid];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_52  [key=2, style=dotted];
m1_47 -> m1_50  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_8  [key=2, style=dotted];
m1_48 -> m1_54  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_45  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_9  [key=2, style=dotted];
m1_51 -> m1_46  [color=blue, key=0, style=bold];
m1_237 -> m1_238  [key=0, style=solid];
m1_238 -> m1_239  [key=0, style=solid];
m1_238 -> m1_7  [key=2, style=dotted];
m1_238 -> m1_245  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_238 -> m1_241  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_239 -> m1_240  [key=0, style=solid];
m1_239 -> m1_8  [key=2, style=dotted];
m1_239 -> m1_245  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_241 -> m1_242  [key=0, style=solid];
m1_241 -> m1_10  [key=2, style=dotted];
m1_240 -> m1_241  [key=0, style=solid];
m1_240 -> m1_33  [key=2, style=dotted];
m1_242 -> m1_243  [key=0, style=solid];
m1_242 -> m1_108  [key=2, style=dotted];
m1_242 -> m1_125  [key=2, style=dotted];
m1_243 -> m1_237  [color=blue, key=0, style=bold];
m1_83 -> m1_84  [key=0, style=solid];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_79  [key=2, style=dotted];
m1_84 -> m1_88  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_44  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_45  [key=2, style=dotted];
m1_88 -> m1_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_33  [key=2, style=dotted];
m1_86 -> m1_88  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_64  [key=2, style=dotted];
m1_89 -> m1_83  [color=blue, key=0, style=bold];
m1_56 -> m1_57  [key=0, style=solid];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_63  [key=2, style=dotted];
m1_57 -> m1_61  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_8  [key=2, style=dotted];
m1_58 -> m1_66  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_45  [key=2, style=dotted];
m1_61 -> m1_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_22  [key=2, style=dotted];
m1_59 -> m1_61  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_64  [key=2, style=dotted];
m1_62 -> m1_56  [color=blue, key=0, style=bold];
m1_129 -> m1_130  [key=0, style=solid];
m1_130 -> m1_131  [key=0, style=solid];
m1_130 -> m1_136  [key=2, style=dotted];
m1_130 -> m1_134  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m1_130 -> m1_141  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_44  [key=2, style=dotted];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_108  [key=2, style=dotted];
m1_134 -> m1_110  [key=2, style=dotted];
m1_134 -> m1_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_9  [key=2, style=dotted];
m1_132 -> m1_134  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_108  [key=2, style=dotted];
m1_133 -> m1_109  [key=2, style=dotted];
m1_133 -> m1_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_135 -> m1_129  [color=blue, key=0, style=bold];
m1_182 -> m1_183  [key=0, style=solid];
m1_183 -> m1_184  [key=0, style=solid];
m1_183 -> m1_7  [key=2, style=dotted];
m1_183 -> m1_198  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_183 -> m1_186  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_8  [key=2, style=dotted];
m1_184 -> m1_198  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_10  [key=2, style=dotted];
m1_186 -> m1_188  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_33  [key=2, style=dotted];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_108  [key=2, style=dotted];
m1_187 -> m1_125  [key=2, style=dotted];
m1_188 -> m1_189  [key=0, style=solid];
m1_188 -> m1_153  [key=2, style=dotted];
m1_188 -> m1_154  [key=2, style=dotted];
m1_188 -> m1_190  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_188 -> m1_191  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_188 -> m1_192  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_188 -> m1_193  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_188 -> m1_194  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_188 -> m1_195  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_189 -> m1_190  [key=0, style=solid];
m1_189 -> m1_108  [key=2, style=dotted];
m1_189 -> m1_155  [key=2, style=dotted];
m1_190 -> m1_191  [key=0, style=solid];
m1_190 -> m1_45  [key=2, style=dotted];
m1_191 -> m1_192  [key=0, style=solid];
m1_191 -> m1_45  [key=2, style=dotted];
m1_192 -> m1_193  [key=0, style=solid];
m1_192 -> m1_45  [key=2, style=dotted];
m1_193 -> m1_194  [key=0, style=solid];
m1_193 -> m1_45  [key=2, style=dotted];
m1_194 -> m1_195  [key=0, style=solid];
m1_194 -> m1_45  [key=2, style=dotted];
m1_195 -> m1_196  [key=0, style=solid];
m1_195 -> m1_45  [key=2, style=dotted];
m1_196 -> m1_182  [color=blue, key=0, style=bold];
m1_244 -> m1_245  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_14 -> m1_12  [color=blue, key=0, style=bold];
m1_24 -> m1_25  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_25 -> m1_23  [color=blue, key=0, style=bold];
m1_35 -> m1_36  [key=0, style=solid];
m1_34 -> m1_35  [key=0, style=solid];
m1_36 -> m1_34  [color=blue, key=0, style=bold];
m1_54 -> m1_55  [key=0, style=solid];
m1_53 -> m1_54  [key=0, style=solid];
m1_55 -> m1_53  [color=blue, key=0, style=bold];
m1_66 -> m1_67  [key=0, style=solid];
m1_68 -> m1_69  [key=0, style=solid];
m1_65 -> m1_66  [key=0, style=solid];
m1_67 -> m1_65  [color=blue, key=0, style=bold];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_71  [key=2, style=dotted];
m1_70 -> m1_68  [color=blue, key=0, style=bold];
m1_80 -> m1_81  [key=0, style=solid];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_71  [key=2, style=dotted];
m1_82 -> m1_80  [color=blue, key=0, style=bold];
m1_90 -> m1_91  [key=0, style=solid];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_71  [key=2, style=dotted];
m1_92 -> m1_90  [color=blue, key=0, style=bold];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_117  [key=2, style=dotted];
m1_111 -> m1_112  [key=0, style=solid];
m1_114 -> m1_115  [key=0, style=solid];
m1_112 -> m1_113  [key=0, style=solid];
m1_113 -> m1_111  [color=blue, key=0, style=bold];
m1_116 -> m1_114  [color=blue, key=0, style=bold];
m1_127 -> m1_128  [key=0, style=solid];
m1_126 -> m1_127  [key=0, style=solid];
m1_128 -> m1_126  [color=blue, key=0, style=bold];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_117  [key=2, style=dotted];
m1_137 -> m1_138  [key=0, style=solid];
m1_140 -> m1_141  [key=0, style=solid];
m1_138 -> m1_139  [key=0, style=solid];
m1_139 -> m1_137  [color=blue, key=0, style=bold];
m1_142 -> m1_140  [color=blue, key=0, style=bold];
m1_157 -> m1_158  [key=0, style=solid];
m1_159 -> m1_160  [key=0, style=solid];
m1_156 -> m1_157  [key=0, style=solid];
m1_158 -> m1_156  [color=blue, key=0, style=bold];
m1_160 -> m1_161  [key=0, style=solid];
m1_161 -> m1_159  [color=blue, key=0, style=bold];
m1_180 -> m1_181  [key=0, style=solid];
m1_179 -> m1_180  [key=0, style=solid];
m1_181 -> m1_179  [color=blue, key=0, style=bold];
m1_198 -> m1_199  [key=0, style=solid];
m1_197 -> m1_198  [key=0, style=solid];
m1_199 -> m1_197  [color=blue, key=0, style=bold];
m1_211 -> m1_212  [key=0, style=solid];
m1_213 -> m1_214  [key=0, style=solid];
m1_210 -> m1_211  [key=0, style=solid];
m1_212 -> m1_210  [color=blue, key=0, style=bold];
m1_214 -> m1_215  [key=0, style=solid];
m1_215 -> m1_213  [color=blue, key=0, style=bold];
m1_235 -> m1_236  [key=0, style=solid];
m1_234 -> m1_235  [key=0, style=solid];
m1_236 -> m1_234  [color=blue, key=0, style=bold];
m1_245 -> m1_246  [key=0, style=solid];
m1_246 -> m1_244  [color=blue, key=0, style=bold];
m1_216 -> m1_217  [key=0, style=solid];
m1_217 -> m1_218  [key=0, style=solid];
m1_217 -> m1_7  [key=2, style=dotted];
m1_217 -> m1_235  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_217 -> m1_220  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_218 -> m1_219  [key=0, style=solid];
m1_218 -> m1_8  [key=2, style=dotted];
m1_218 -> m1_235  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_220 -> m1_221  [key=0, style=solid];
m1_220 -> m1_10  [key=2, style=dotted];
m1_220 -> m1_222  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_219 -> m1_220  [key=0, style=solid];
m1_219 -> m1_9  [key=2, style=dotted];
m1_221 -> m1_222  [key=0, style=solid];
m1_221 -> m1_108  [key=2, style=dotted];
m1_221 -> m1_125  [key=2, style=dotted];
m1_222 -> m1_223  [key=0, style=solid];
m1_222 -> m1_153  [key=2, style=dotted];
m1_222 -> m1_154  [key=2, style=dotted];
m1_222 -> m1_224  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_225  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_226  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_227  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_228  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_229  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_230  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_231  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_232  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_223 -> m1_224  [key=0, style=solid];
m1_223 -> m1_108  [key=2, style=dotted];
m1_223 -> m1_155  [key=2, style=dotted];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_45  [key=2, style=dotted];
m1_225 -> m1_226  [key=0, style=solid];
m1_225 -> m1_45  [key=2, style=dotted];
m1_226 -> m1_227  [key=0, style=solid];
m1_226 -> m1_45  [key=2, style=dotted];
m1_227 -> m1_228  [key=0, style=solid];
m1_227 -> m1_45  [key=2, style=dotted];
m1_228 -> m1_229  [key=0, style=solid];
m1_228 -> m1_45  [key=2, style=dotted];
m1_229 -> m1_230  [key=0, style=solid];
m1_229 -> m1_45  [key=2, style=dotted];
m1_230 -> m1_231  [key=0, style=solid];
m1_230 -> m1_45  [key=2, style=dotted];
m1_231 -> m1_232  [key=0, style=solid];
m1_231 -> m1_45  [key=2, style=dotted];
m1_232 -> m1_233  [key=0, style=solid];
m1_232 -> m1_45  [key=2, style=dotted];
m1_233 -> m1_216  [color=blue, key=0, style=bold];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_7  [key=2, style=dotted];
m1_27 -> m1_35  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_27 -> m1_30  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_8  [key=2, style=dotted];
m1_28 -> m1_35  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_10  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_33  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_11  [key=2, style=dotted];
m1_32 -> m1_26  [color=blue, key=0, style=bold];
m1_37 -> m1_38  [key=0, style=solid];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_43  [key=2, style=dotted];
m1_38 -> m1_41  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_44  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_45  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_9  [key=2, style=dotted];
m1_42 -> m1_37  [color=blue, key=0, style=bold];
m1_143 -> m1_144  [key=0, style=solid];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_7  [key=2, style=dotted];
m1_144 -> m1_157  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_144 -> m1_147  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_145 -> m1_146  [key=0, style=solid];
m1_145 -> m1_8  [key=2, style=dotted];
m1_145 -> m1_157  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_147 -> m1_148  [key=0, style=solid];
m1_147 -> m1_10  [key=2, style=dotted];
m1_147 -> m1_149  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_146 -> m1_147  [key=0, style=solid];
m1_146 -> m1_9  [key=2, style=dotted];
m1_148 -> m1_149  [key=0, style=solid];
m1_148 -> m1_108  [key=2, style=dotted];
m1_148 -> m1_125  [key=2, style=dotted];
m1_149 -> m1_150  [key=0, style=solid];
m1_149 -> m1_153  [key=2, style=dotted];
m1_149 -> m1_154  [key=2, style=dotted];
m1_149 -> m1_151  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_108  [key=2, style=dotted];
m1_150 -> m1_109  [key=2, style=dotted];
m1_150 -> m1_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_108  [key=2, style=dotted];
m1_151 -> m1_155  [key=2, style=dotted];
m1_152 -> m1_143  [color=blue, key=0, style=bold];
m1_93 -> m1_94  [key=0, style=solid];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_99  [key=2, style=dotted];
m1_94 -> m1_97  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_44  [key=2, style=dotted];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_45  [key=2, style=dotted];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_9  [key=2, style=dotted];
m1_98 -> m1_93  [color=blue, key=0, style=bold];
m1_15 -> m1_16  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_7  [key=2, style=dotted];
m1_16 -> m1_24  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_16 -> m1_19  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_8  [key=2, style=dotted];
m1_17 -> m1_24  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_10  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_22  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_11  [key=2, style=dotted];
m1_21 -> m1_15  [color=blue, key=0, style=bold];
m1_72 -> m1_73  [key=0, style=solid];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_79  [key=2, style=dotted];
m1_73 -> m1_77  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_44  [key=2, style=dotted];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_45  [key=2, style=dotted];
m1_77 -> m1_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_22  [key=2, style=dotted];
m1_75 -> m1_77  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_64  [key=2, style=dotted];
m1_78 -> m1_72  [color=blue, key=0, style=bold];
m1_200 -> m1_201  [key=0, style=solid];
m1_200 -> m1_203  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_7  [key=2, style=dotted];
m1_201 -> m1_211  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_201 -> m1_204  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_203 -> m1_204  [key=0, style=solid];
m1_203 -> m1_33  [key=2, style=dotted];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_8  [key=2, style=dotted];
m1_202 -> m1_211  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_204 -> m1_205  [key=0, style=solid];
m1_204 -> m1_10  [key=2, style=dotted];
m1_204 -> m1_206  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_205 -> m1_206  [key=0, style=solid];
m1_205 -> m1_108  [key=2, style=dotted];
m1_205 -> m1_125  [key=2, style=dotted];
m1_206 -> m1_207  [key=0, style=solid];
m1_206 -> m1_153  [key=2, style=dotted];
m1_206 -> m1_154  [key=2, style=dotted];
m1_206 -> m1_208  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_207 -> m1_208  [key=0, style=solid];
m1_207 -> m1_108  [key=2, style=dotted];
m1_207 -> m1_109  [key=2, style=dotted];
m1_207 -> m1_213  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_208 -> m1_209  [key=0, style=solid];
m1_208 -> m1_108  [key=2, style=dotted];
m1_208 -> m1_155  [key=2, style=dotted];
m1_209 -> m1_200  [color=blue, key=0, style=bold];
m1_247 -> m1_13  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_248 -> m1_24  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_249 -> m1_35  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_250 -> m1_115  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m1_251 -> m1_127  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_252 -> m1_141  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m1_253 -> m1_157  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_254 -> m1_180  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_255 -> m1_198  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_256 -> m1_211  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_257 -> m1_235  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_258 -> m1_245  [color=darkseagreen4, key=1, label=help, style=dashed];
}
