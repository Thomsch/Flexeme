digraph  {
m0_7 [label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1335-1335", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="ArgumentParserFixture.cs"];
m0_0 [label="Entry CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", span="40-40", cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="ArgumentParserFixture.cs"];
m0_1 [label="var ae = new StringArrayEnumerator(new string[] { ''--optarr'', ''one'', ''two'', ''--plain'', ''3'' })", span="42-42", cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="ArgumentParserFixture.cs"];
m0_2 [label="ae.MoveNext()", span="44-44", cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="ArgumentParserFixture.cs"];
m0_3 [label="var items = ArgumentParser.PublicWrapperOfGetNextInputValues(ae)", span="46-46", cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="ArgumentParserFixture.cs"];
m0_5 [label="ae.Current.Should().Equal(''two'')", span="49-49", cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="ArgumentParserFixture.cs"];
m0_4 [label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'' }, items)", span="48-48", cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="ArgumentParserFixture.cs"];
m0_6 [label="Exit CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", span="40-40", cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="ArgumentParserFixture.cs"];
m0_10 [label="Entry Unk.ElementsShouldBeEqual", span="", cluster="Unk.ElementsShouldBeEqual", file="ArgumentParserFixture.cs"];
m0_9 [label="Entry Unk.PublicWrapperOfGetNextInputValues", span="", cluster="Unk.PublicWrapperOfGetNextInputValues", file="ArgumentParserFixture.cs"];
m0_12 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ArgumentParserFixture.cs"];
m0_8 [label="Entry CommandLine.StringArrayEnumerator.MoveNext()", span="1390-1390", cluster="CommandLine.StringArrayEnumerator.MoveNext()", file="ArgumentParserFixture.cs"];
m0_11 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ArgumentParserFixture.cs"];
m0_13 [label="CommandLine.Tests.ArgumentParserFixture", span="", file="ArgumentParserFixture.cs"];
m5_0 [label="Entry CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(string, string)", span="40-40", cluster="CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(string, string)", file="AttributesFixture.cs"];
m5_5 [label="new OptionAttribute(''more-than-one-character'', null)", span="52-52", cluster="CommandLine.Tests.AttributesFixture.OptionShortNameCanNotExceedOneCharacter()", color=red, community=0, file="AttributesFixture.cs"];
m5_4 [label="Entry CommandLine.Tests.AttributesFixture.OptionShortNameCanNotExceedOneCharacter()", span="50-50", cluster="CommandLine.Tests.AttributesFixture.OptionShortNameCanNotExceedOneCharacter()", color=green, community=0, file="AttributesFixture.cs"];
m5_6 [label="Exit CommandLine.Tests.AttributesFixture.OptionShortNameCanNotExceedOneCharacter()", span="50-50", cluster="CommandLine.Tests.AttributesFixture.OptionShortNameCanNotExceedOneCharacter()", color=green, community=0, file="AttributesFixture.cs"];
m5_14 [label="Exit CommandLine.Tests.AttributesFixture.HelpOptionShortNameCanNotExceedOneCharacter()", span="64-64", cluster="CommandLine.Tests.AttributesFixture.HelpOptionShortNameCanNotExceedOneCharacter()", color=green, community=0, file="AttributesFixture.cs"];
m5_7 [label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="204-204", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="AttributesFixture.cs"];
m5_2 [label="base.LongName = longName", span="43-43", cluster="CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(string, string)", color=red, community=0, file="AttributesFixture.cs"];
m5_1 [label="base.ShortName = shortName", span="42-42", cluster="CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(string, string)", file="AttributesFixture.cs", color=red, community=0];
m5_3 [label="Exit CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(string, string)", span="40-40", cluster="CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(string, string)", color=green, community=0, file="AttributesFixture.cs"];
m5_16 [label="Entry CommandLine.Tests.AttributesFixture.ShortNameOfBaseOptionDerivedTypeCanNotExceedOneCharacter()", span="71-71", cluster="CommandLine.Tests.AttributesFixture.ShortNameOfBaseOptionDerivedTypeCanNotExceedOneCharacter()", color=green, community=0, file="AttributesFixture.cs"];
m5_15 [label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="136-136", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=green, community=0, file="AttributesFixture.cs"];
m5_13 [label="new HelpOptionAttribute(''same-as-above-again'', null)", span="66-66", cluster="CommandLine.Tests.AttributesFixture.HelpOptionShortNameCanNotExceedOneCharacter()", color=red, community=0, file="AttributesFixture.cs"];
m5_11 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="258-258", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", color=green, community=0, file="AttributesFixture.cs"];
m5_12 [label="Entry CommandLine.Tests.AttributesFixture.HelpOptionShortNameCanNotExceedOneCharacter()", span="64-64", cluster="CommandLine.Tests.AttributesFixture.HelpOptionShortNameCanNotExceedOneCharacter()", color=green, community=0, file="AttributesFixture.cs"];
m5_9 [label="new OptionListAttribute(''same-as-above'', null)", span="59-59", cluster="CommandLine.Tests.AttributesFixture.OptionListShortNameCanNotExceedOneCharacter()", color=red, community=0, file="AttributesFixture.cs"];
m5_8 [label="Entry CommandLine.Tests.AttributesFixture.OptionListShortNameCanNotExceedOneCharacter()", span="57-57", cluster="CommandLine.Tests.AttributesFixture.OptionListShortNameCanNotExceedOneCharacter()", file="AttributesFixture.cs"];
m5_10 [label="Exit CommandLine.Tests.AttributesFixture.OptionListShortNameCanNotExceedOneCharacter()", span="57-57", cluster="CommandLine.Tests.AttributesFixture.OptionListShortNameCanNotExceedOneCharacter()", color=green, community=0, file="AttributesFixture.cs"];
m5_17 [label="new CustomOptionAttribute(''not-allowed'', null)", span="73-73", cluster="CommandLine.Tests.AttributesFixture.ShortNameOfBaseOptionDerivedTypeCanNotExceedOneCharacter()", file="AttributesFixture.cs", color=red, community=0];
m5_100 [label="Entry string.CompareOrdinal(string, string)", span="0-0", cluster="string.CompareOrdinal(string, string)", file="AttributesFixture.cs"];
m5_20 [label="new OptionAttribute(''o'', null)", span="80-80", cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName()", file="AttributesFixture.cs", color=red, community=0];
m5_40 [label="Entry System.Type.GetMethods()", span="0-0", cluster="System.Type.GetMethods()", file="AttributesFixture.cs"];
m5_18 [label="Exit CommandLine.Tests.AttributesFixture.ShortNameOfBaseOptionDerivedTypeCanNotExceedOneCharacter()", span="71-71", cluster="CommandLine.Tests.AttributesFixture.ShortNameOfBaseOptionDerivedTypeCanNotExceedOneCharacter()", file="AttributesFixture.cs"];
m5_21 [label="new OptionListAttribute(''l'', null)", span="81-81", cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName()", file="AttributesFixture.cs", color=red, community=0];
m5_41 [label="Entry CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="99-99", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="AttributesFixture.cs"];
m5_51 [label="ReflectionCache.Instance[key] = data", span="116-116", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="AttributesFixture.cs"];
m5_42 [label="var key = new Pair<Type, object>(typeof(TAttribute), target)", span="102-102", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="AttributesFixture.cs"];
m5_50 [label="var data = (TAttribute) attribute", span="115-115", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="AttributesFixture.cs"];
m5_52 [label="return data;", span="117-117", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="AttributesFixture.cs"];
m5_44 [label="cached == null", span="104-104", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="AttributesFixture.cs"];
m5_43 [label="var cached = ReflectionCache.Instance[key]", span="103-103", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="AttributesFixture.cs"];
m5_45 [label="var info = target.GetType().GetMethods()", span="106-106", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="AttributesFixture.cs"];
m5_54 [label="return (TAttribute) cached;", span="123-123", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="AttributesFixture.cs"];
m5_46 [label=info, span="107-107", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="AttributesFixture.cs"];
m5_47 [label="!method.IsStatic", span="109-109", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="AttributesFixture.cs"];
m5_49 [label="attribute != null", span="113-113", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="AttributesFixture.cs"];
m5_53 [label="return null;", span="121-121", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="AttributesFixture.cs"];
m5_48 [label="Attribute attribute =\r\n                            Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="111-112", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="AttributesFixture.cs"];
m5_55 [label="Exit CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="99-99", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="AttributesFixture.cs"];
m5_24 [label="Exit CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName()", span="78-78", cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName()", file="AttributesFixture.cs"];
m5_22 [label="new HelpOptionAttribute(''?'', null)", span="82-82", cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName()", file="AttributesFixture.cs", color=red, community=0];
m5_19 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="AttributesFixture.cs"];
m5_23 [label="Entry System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", span="0-0", cluster="System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", color=red, community=0, file="AttributesFixture.cs"];
m5_56 [label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="126-126", cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs"];
m5_61 [label="var info = target.GetType().GetProperties()", span="134-134", cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs"];
m5_60 [label="IList<TAttribute> list = new List<TAttribute>()", span="133-133", cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs"];
m5_57 [label="var key = new Pair<Type, object>(typeof(IList<TAttribute>), target)", span="129-129", cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs"];
m5_68 [label="list.Add((TAttribute) attribute)", span="146-146", cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs"];
m5_64 [label="var setMethod = property.GetSetMethod()", span="140-140", cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs"];
m5_66 [label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="143-143", cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs"];
m5_62 [label=info, span="136-136", cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs"];
m5_59 [label="cached == null", span="131-131", cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs"];
m5_69 [label="ReflectionCache.Instance[key] = list", span="151-151", cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs"];
m5_70 [label="return list;", span="152-152", cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs"];
m5_58 [label="var cached = ReflectionCache.Instance[key]", span="130-130", cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs"];
m5_67 [label="attribute != null", span="144-144", cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs"];
m5_63 [label="property != null && (property.CanRead && property.CanWrite)", span="138-138", cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs"];
m5_65 [label="setMethod != null && !setMethod.IsStatic", span="141-141", cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs"];
m5_71 [label="return (IList<TAttribute>) cached;", span="154-154", cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs"];
m5_72 [label="Exit CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="126-126", cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs"];
m5_25 [label="Entry CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", span="87-87", cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", file="AttributesFixture.cs"];
m5_26 [label="new OptionAttribute(null, ''option-attr'')", span="89-89", cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", color=red, community=0, file="AttributesFixture.cs"];
m5_27 [label="new OptionListAttribute(null, ''option-list-attr'')", span="90-90", cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", color=red, community=0, file="AttributesFixture.cs"];
m5_35 [label="ReflectionCache.Instance[key] = data", span="89-89", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="AttributesFixture.cs"];
m5_29 [label="new CustomOptionAttribute(null, ''custom-attr'')", span="92-92", cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", color=red, community=0, file="AttributesFixture.cs"];
m5_28 [label="new HelpOptionAttribute(null, ''help-attr'')", span="91-91", cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", color=red, community=0, file="AttributesFixture.cs"];
m5_30 [label="Exit CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", span="87-87", cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", color=green, community=0, file="AttributesFixture.cs"];
m5_38 [label="return (Pair<MethodInfo, TAttribute>) cached;", span="96-96", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="AttributesFixture.cs"];
m5_31 [label="CommandLine.Tests.AttributesFixture.CustomOptionAttribute", span="", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="AttributesFixture.cs"];
m5_33 [label="attribute != null", span="86-86", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="AttributesFixture.cs"];
m5_37 [label="return null;", span="94-94", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="AttributesFixture.cs"];
m5_32 [label="Attribute attribute =\r\n                            Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="84-85", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="AttributesFixture.cs"];
m5_34 [label="var data = new Pair<MethodInfo, TAttribute>(method, (TAttribute) attribute)", span="88-88", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="AttributesFixture.cs"];
m5_36 [label="return data;", span="90-90", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="AttributesFixture.cs"];
m5_39 [label="Exit CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="72-72", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="AttributesFixture.cs"];
m5_80 [label="Entry CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="171-171", cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs"];
m5_87 [label="var propertiesInfo = target.GetType().GetProperties()", span="183-183", cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs"];
m5_81 [label="var key = new Pair<Type, object>(typeof(Pair<PropertyInfo, BaseOptionAttribute>), target)", span="174-174", cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs"];
m5_95 [label="found = new Pair<PropertyInfo, TAttribute>(property, (TAttribute) attribute)", span="196-196", cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs"];
m5_90 [label="var setMethod = property.GetSetMethod()", span="189-189", cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs"];
m5_92 [label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="192-192", cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs"];
m5_85 [label="target == null", span="179-179", cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs"];
m5_88 [label=propertiesInfo, span="185-185", cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs"];
m5_82 [label="var cached = ReflectionCache.Instance[key]", span="175-175", cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs"];
m5_96 [label="ReflectionCache.Instance[key] = found", span="197-197", cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs"];
m5_94 [label="optionAttr != null && string.CompareOrdinal(uniqueName, optionAttr.UniqueName) == 0", span="194-194", cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs"];
m5_97 [label="return found;", span="198-198", cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs"];
m5_89 [label="property != null && (property.CanRead && property.CanWrite)", span="187-187", cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs"];
m5_91 [label="setMethod != null && !setMethod.IsStatic", span="190-190", cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs"];
m5_93 [label="var optionAttr = (TAttribute) attribute", span="193-193", cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs"];
m5_84 [label="Pair<PropertyInfo, TAttribute> found = null", span="178-178", cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs"];
m5_86 [label="return null;", span="181-181", cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs"];
m5_98 [label="return (Pair<PropertyInfo, TAttribute>) cached;", span="204-204", cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs"];
m5_83 [label="cached == null", span="176-176", cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs"];
m5_99 [label="Exit CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="171-171", cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs"];
m7_8 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="BaseFixture.cs"];
m7_7 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="BaseFixture.cs"];
m7_9 [label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs"];
m7_10 [label="expected.Length.Should().Equal(actual.Count)", span="50-50", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs"];
m7_12 [label="i < expected.Length", span="51-51", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs"];
m7_13 [label="expected[i].Should().Equal(actual[i])", span="53-53", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs"];
m7_11 [label="int i = 0", span="51-51", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs"];
m7_14 [label="i++", span="51-51", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs"];
m7_15 [label="Exit CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs"];
m7_0 [label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="39-39", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs"];
m7_1 [label="expected.Length.Should().Equal(actual.Length)", span="41-41", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs"];
m7_3 [label="i < expected.Length", span="42-42", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs"];
m7_4 [label="expected[i].Should().Equal(actual[i])", span="44-44", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs"];
m7_2 [label="int i = 0", span="42-42", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs"];
m7_5 [label="i++", span="42-42", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs"];
m7_6 [label="Exit CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="39-39", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs"];
m10_0 [label="Entry CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", span="35-35", cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="BooleanSetOptions.cs"];
m10_1 [label="NonBooleanValue = 0", span="37-37", cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="BooleanSetOptions.cs"];
m10_2 [label="Exit CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", span="35-35", cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="BooleanSetOptions.cs"];
m10_3 [label="CommandLine.Tests.Mocks.BooleanSetOptions", span="", file="BooleanSetOptions.cs"];
m11_512 [label="Entry CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", span="1419-1419", cluster="CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", file="CommandLine.cs"];
m11_513 [label="Exit CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", span="1419-1419", cluster="CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", file="CommandLine.cs"];
m11_15 [label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="166-166", cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="CommandLine.cs"];
m11_18 [label="return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", span="168-168", cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", color=red, community=0, file="CommandLine.cs"];
m11_19 [label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="166-166", cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="CommandLine.cs"];
m11_331 [label="Entry CommandLine.OptionInfo.SetValueScalar(string, object)", span="898-898", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs"];
m11_348 [label="_property.PropertyType.IsEnum", span="902-902", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_350 [label="_property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", span="906-906", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_352 [label="_property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, Thread.CurrentThread.CurrentCulture), null)", span="913-913", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_349 [label=_setValueLock, span="904-904", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_351 [label=_setValueLock, span="911-911", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_353 [label=InvalidCastException, span="917-917", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_355 [label=FormatException, span="921-921", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_357 [label=ArgumentException, span="925-925", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_359 [label=OverflowException, span="929-929", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_361 [label="return true;", span="934-934", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_354 [label="return false;", span="919-919", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_356 [label="return false;", span="923-923", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_358 [label="return false;", span="927-927", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_360 [label="return false;", span="931-931", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_362 [label="Exit CommandLine.OptionInfo.SetValueScalar(string, object)", span="898-898", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs"];
m11_529 [label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1486-1486", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs"];
m11_530 [label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1486-1486", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs"];
m11_159 [label="Entry CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="499-499", cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", file="CommandLine.cs"];
m11_160 [label="ShortName = shortName", span="501-501", cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=red, community=0, file="CommandLine.cs"];
m11_161 [label="LongName = longName", span="502-502", cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=red, community=0, file="CommandLine.cs"];
m11_162 [label="Exit CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="499-499", cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", file="CommandLine.cs"];
m11_470 [label="Entry CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1248-1248", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", file="CommandLine.cs"];
m11_471 [label="var other = obj as Pair<TLeft, TRight>", span="1250-1250", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=red, community=0, file="CommandLine.cs"];
m11_472 [label="other == null", span="1252-1252", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=red, community=0, file="CommandLine.cs"];
m11_474 [label="return Equals(_left, other._left) && Equals(_right, other._right);", span="1255-1255", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=red, community=0, file="CommandLine.cs"];
m11_473 [label="return false;", span="1253-1253", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=red, community=0, file="CommandLine.cs"];
m11_475 [label="Exit CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1248-1248", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", file="CommandLine.cs"];
m11_95 [label="Entry CommandLine.ParsingError.ParsingError(string, string, bool)", span="1269-1269", cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", file="CommandLine.cs"];
m11_479 [label="this.BadOption = new BadOptionInfo(shortName, longName)", span="1271-1271", cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=red, community=0, file="CommandLine.cs"];
m11_480 [label="this.ViolatesFormat = format", span="1273-1273", cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=red, community=0, file="CommandLine.cs"];
m11_481 [label="Exit CommandLine.ParsingError.ParsingError(string, string, bool)", span="1269-1269", cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", file="CommandLine.cs"];
m11_579 [label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1735-1735", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs"];
m11_580 [label="Assumes.NotNull(args, ''args'')", span="1737-1737", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLine.cs"];
m11_581 [label="Assumes.NotNull(options, ''options'')", span="1738-1738", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLine.cs"];
m11_582 [label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="1740-1740", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLine.cs"];
m11_583 [label="pair != null && helpWriter != null", span="1742-1742", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLine.cs"];
m11_584 [label="ParseHelp(args, pair.Right) || !DoParseArguments(args, options)", span="1744-1744", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLine.cs"];
m11_586 [label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="1747-1747", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLine.cs"];
m11_587 [label="helpWriter.Write(helpText)", span="1748-1748", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLine.cs"];
m11_590 [label="return DoParseArguments(args, options);", span="1754-1754", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLine.cs"];
m11_585 [label="string helpText", span="1746-1746", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLine.cs"];
m11_589 [label="return true;", span="1751-1751", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLine.cs"];
m11_588 [label="return false;", span="1749-1749", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLine.cs"];
m11_591 [label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1735-1735", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs"];
m11_53 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1517-1517", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLine.cs"];
m11_535 [label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1517-1517", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLine.cs"];
m11_714 [label="Entry decimal.TryParse(string, out decimal)", span="0-0", cluster="decimal.TryParse(string, out decimal)", file="CommandLine.cs"];
m11_217 [label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="628-628", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="CommandLine.cs"];
m11_218 [label="Assumes.NotNullOrEmpty(value, ''value'')", span="630-630", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=red, community=0, file="CommandLine.cs"];
m11_219 [label="_data = value", span="632-632", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=red, community=0, file="CommandLine.cs"];
m11_220 [label="_index = -1", span="633-633", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=red, community=0, file="CommandLine.cs"];
m11_221 [label="Exit CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="628-628", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="CommandLine.cs"];
m11_86 [label="Entry CommandLine.ArgumentParser.ArgumentParser()", span="385-385", cluster="CommandLine.ArgumentParser.ArgumentParser()", file="CommandLine.cs"];
m11_87 [label="this.PostParsingState = new List<ParsingError>()", span="387-387", cluster="CommandLine.ArgumentParser.ArgumentParser()", color=red, community=0, file="CommandLine.cs"];
m11_88 [label="Exit CommandLine.ArgumentParser.ArgumentParser()", span="385-385", cluster="CommandLine.ArgumentParser.ArgumentParser()", file="CommandLine.cs"];
m11_672 [label="Entry System.Type.GetMethods()", span="0-0", cluster="System.Type.GetMethods()", file="CommandLine.cs"];
m11_52 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="CommandLine.cs"];
m11_216 [label="Entry CommandLine.OptionInfo.SetValue(bool, object)", span="958-958", cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="CommandLine.cs"];
m11_373 [label=_setValueLock, span="960-960", cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=red, community=0, file="CommandLine.cs"];
m11_374 [label="_property.SetValue(options, value, null)", span="962-962", cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=red, community=0, file="CommandLine.cs"];
m11_375 [label="return true;", span="964-964", cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=red, community=0, file="CommandLine.cs"];
m11_376 [label="Exit CommandLine.OptionInfo.SetValue(bool, object)", span="958-958", cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="CommandLine.cs"];
m11_223 [label="Entry CommandLine.OneCharStringEnumerator.Reset()", span="672-672", cluster="CommandLine.OneCharStringEnumerator.Reset()", file="CommandLine.cs"];
m11_224 [label="_index = -1", span="674-674", cluster="CommandLine.OneCharStringEnumerator.Reset()", color=red, community=0, file="CommandLine.cs"];
m11_225 [label="Exit CommandLine.OneCharStringEnumerator.Reset()", span="672-672", cluster="CommandLine.OneCharStringEnumerator.Reset()", file="CommandLine.cs"];
m11_33 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="CommandLine.cs"];
m11_504 [label="Entry CommandLine.StringArrayEnumerator.MovePrevious()", span="1405-1405", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", file="CommandLine.cs"];
m11_505 [label="_index <= 0", span="1407-1407", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0, file="CommandLine.cs"];
m11_506 [label="throw new InvalidOperationException();", span="1409-1409", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0, file="CommandLine.cs"];
m11_507 [label="_index <= _endIndex", span="1411-1411", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0, file="CommandLine.cs"];
m11_508 [label="_index--", span="1413-1413", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0, file="CommandLine.cs"];
m11_510 [label="return false;", span="1416-1416", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0, file="CommandLine.cs"];
m11_509 [label="return _index <= _endIndex;", span="1414-1414", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0, file="CommandLine.cs"];
m11_511 [label="Exit CommandLine.StringArrayEnumerator.MovePrevious()", span="1405-1405", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", file="CommandLine.cs"];
m11_551 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1589-1589", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLine.cs"];
m11_552 [label="CaseSensitive = caseSensitive", span="1591-1591", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=red, community=0, file="CommandLine.cs"];
m11_553 [label="MutuallyExclusive = mutuallyExclusive", span="1592-1592", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=red, community=0, file="CommandLine.cs"];
m11_554 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1589-1589", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLine.cs"];
m11_560 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", span="1619-1619", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", file="CommandLine.cs"];
m11_561 [label="CaseSensitive = caseSensitive", span="1621-1621", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=red, community=0, file="CommandLine.cs"];
m11_562 [label="MutuallyExclusive = mutuallyExclusive", span="1622-1622", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=red, community=0, file="CommandLine.cs"];
m11_563 [label="HelpWriter = helpWriter", span="1623-1623", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=red, community=0, file="CommandLine.cs"];
m11_564 [label="IgnoreUnknownArguments = ignoreUnknownArguments", span="1624-1624", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=red, community=0, file="CommandLine.cs"];
m11_565 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", span="1619-1619", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", file="CommandLine.cs"];
m11_441 [label="Entry CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1187-1187", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", file="CommandLine.cs"];
m11_442 [label="var setName = option.MutuallyExclusiveSet", span="1189-1189", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0, file="CommandLine.cs"];
m11_444 [label="_mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="1193-1193", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0, file="CommandLine.cs"];
m11_443 [label="!_mutuallyExclusiveSetMap.ContainsKey(setName)", span="1191-1191", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0, file="CommandLine.cs"];
m11_445 [label="_mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="1196-1196", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0, file="CommandLine.cs"];
m11_446 [label="Exit CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1187-1187", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", file="CommandLine.cs"];
m11_8 [label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="154-154", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLine.cs"];
m11_9 [label="text = null", span="157-157", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, file="CommandLine.cs"];
m11_10 [label="var method = pair.Left", span="159-159", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, file="CommandLine.cs"];
m11_13 [label="text = (string)method.Invoke(target, null)", span="163-163", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, file="CommandLine.cs"];
m11_11 [label="!CheckMethodSignature(method)", span="160-160", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, file="CommandLine.cs"];
m11_12 [label="throw new MemberAccessException();", span="161-161", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, file="CommandLine.cs"];
m11_14 [label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="154-154", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLine.cs"];
m11_110 [label="Entry CommandLine.LongOptionParser.LongOptionParser(bool)", span="543-543", cluster="CommandLine.LongOptionParser.LongOptionParser(bool)", file="CommandLine.cs"];
m11_167 [label="_ignoreUnkwnownArguments = ignoreUnkwnownArguments", span="545-545", cluster="CommandLine.LongOptionParser.LongOptionParser(bool)", color=red, community=0, file="CommandLine.cs"];
m11_168 [label="Exit CommandLine.LongOptionParser.LongOptionParser(bool)", span="543-543", cluster="CommandLine.LongOptionParser.LongOptionParser(bool)", file="CommandLine.cs"];
m11_464 [label="Entry CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1240-1240", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", file="CommandLine.cs"];
m11_465 [label="int leftHash = (_left == null ? 0 : _left.GetHashCode())", span="1242-1242", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=red, community=0, file="CommandLine.cs"];
m11_466 [label="int rightHash = (_right == null ? 0 : _right.GetHashCode())", span="1243-1243", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=red, community=0, file="CommandLine.cs"];
m11_467 [label="return leftHash ^ rightHash;", span="1245-1245", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=red, community=0, file="CommandLine.cs"];
m11_468 [label="Exit CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1240-1240", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", file="CommandLine.cs"];
m11_555 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1603-1603", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLine.cs"];
m11_556 [label="CaseSensitive = caseSensitive", span="1605-1605", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=red, community=0, file="CommandLine.cs"];
m11_557 [label="MutuallyExclusive = mutuallyExclusive", span="1606-1606", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=red, community=0, file="CommandLine.cs"];
m11_558 [label="HelpWriter = helpWriter", span="1607-1607", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=red, community=0, file="CommandLine.cs"];
m11_559 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1603-1603", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLine.cs"];
m11_245 [label="Entry System.NotSupportedException.NotSupportedException()", span="0-0", cluster="System.NotSupportedException.NotSupportedException()", file="CommandLine.cs"];
m11_142 [label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="466-466", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", file="CommandLine.cs"];
m11_143 [label="value && !addMoveNextIfTrue", span="468-468", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0, file="CommandLine.cs"];
m11_145 [label=value, span="471-471", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0, file="CommandLine.cs"];
m11_144 [label="return ParserState.Success;", span="469-469", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0, file="CommandLine.cs"];
m11_146 [label="return ParserState.Success | ParserState.MoveOnNextElement;", span="472-472", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0, file="CommandLine.cs"];
m11_147 [label="return ParserState.Failure;", span="474-474", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0, file="CommandLine.cs"];
m11_148 [label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="466-466", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", file="CommandLine.cs"];
m11_399 [label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1076-1076", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="CommandLine.cs"];
m11_400 [label="++_count", span="1076-1076", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", color=red, community=0, file="CommandLine.cs"];
m11_401 [label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1076-1076", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="CommandLine.cs"];
m11_51 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="CommandLine.cs"];
m11_329 [label="Entry CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1953-1953", cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", file="CommandLine.cs"];
m11_704 [label="return type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>);", span="1955-1955", cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", color=red, community=0, file="CommandLine.cs"];
m11_705 [label="Exit CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1953-1953", cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", file="CommandLine.cs"];
m11_23 [label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="204-204", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="CommandLine.cs"];
m11_24 [label="!string.IsNullOrEmpty(shortName)", span="206-206", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="CommandLine.cs"];
m11_25 [label="_uniqueName = shortName", span="207-207", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="CommandLine.cs"];
m11_26 [label="!string.IsNullOrEmpty(longName)", span="208-208", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="CommandLine.cs"];
m11_27 [label="_uniqueName = longName", span="209-209", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="CommandLine.cs"];
m11_30 [label="base.ShortName = shortName", span="214-214", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="CommandLine.cs"];
m11_31 [label="base.LongName = longName", span="215-215", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="CommandLine.cs"];
m11_28 [label="_uniqueName == null", span="211-211", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="CommandLine.cs"];
m11_29 [label="throw new InvalidOperationException();", span="212-212", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="CommandLine.cs"];
m11_32 [label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="204-204", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="CommandLine.cs"];
m11_448 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="CommandLine.cs"];
m11_576 [label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1717-1717", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs"];
m11_577 [label="return ParseArguments(args, options, _settings.HelpWriter);", span="1719-1719", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", color=red, community=0, file="CommandLine.cs"];
m11_578 [label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1717-1717", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs"];
m11_211 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="CommandLine.cs"];
m11_412 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", file="CommandLine.cs"];
m11_673 [label="Entry CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1901-1901", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="CommandLine.cs"];
m11_674 [label="var info = target.GetType().GetMethods()", span="1904-1904", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_675 [label=info, span="1906-1906", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_676 [label="!method.IsStatic", span="1908-1908", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_680 [label="return null;", span="1917-1917", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_677 [label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1910-1911", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=1, file="CommandLine.cs"];
m11_678 [label="attribute != null", span="1912-1912", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_679 [label="return (TAttribute)attribute;", span="1913-1913", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_681 [label="Exit CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1901-1901", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="CommandLine.cs"];
m11_66 [label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="341-341", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs"];
m11_67 [label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="343-343", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0, file="CommandLine.cs"];
m11_68 [label="list == null || list.Count == 0", span="344-344", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0, file="CommandLine.cs"];
m11_70 [label="list.Count > 1", span="347-347", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0, file="CommandLine.cs"];
m11_72 [label="var pairZero = list[0]", span="350-350", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0, file="CommandLine.cs"];
m11_69 [label="return null;", span="345-345", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0, file="CommandLine.cs"];
m11_71 [label="throw new InvalidOperationException();", span="348-348", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0, file="CommandLine.cs"];
m11_73 [label="return pairZero.Right;", span="352-352", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0, file="CommandLine.cs"];
m11_74 [label="Exit CommandLine.ValueListAttribute.GetAttribute(object)", span="341-341", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs"];
m11_707 [label="Entry CommandLine.StringUtil.Spaces(int)", span="1961-1961", cluster="CommandLine.StringUtil.Spaces(int)", file="CommandLine.cs"];
m11_708 [label="return new String(' ', count);", span="1963-1963", cluster="CommandLine.StringUtil.Spaces(int)", color=red, community=0, file="CommandLine.cs"];
m11_709 [label="Exit CommandLine.StringUtil.Spaces(int)", span="1961-1961", cluster="CommandLine.StringUtil.Spaces(int)", file="CommandLine.cs"];
m11_618 [label="Entry CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="1822-1822", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLine.cs"];
m11_631 [label="var commandLineOptionsBase = options as CommandLineOptionsBase", span="1824-1824", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", color=red, community=0, file="CommandLine.cs"];
m11_633 [label="(commandLineOptionsBase).InternalLastPostParsingState.Errors.AddRange(state)", span="1826-1826", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", color=red, community=0, file="CommandLine.cs"];
m11_632 [label="commandLineOptionsBase != null", span="1825-1825", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", color=red, community=0, file="CommandLine.cs"];
m11_634 [label="Exit CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="1822-1822", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLine.cs"];
m11_17 [label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0", cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="CommandLine.cs"];
m11_539 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1543-1543", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLine.cs"];
m11_540 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1543-1543", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLine.cs"];
m11_514 [label="Entry CommandLine.TargetWrapper.TargetWrapper(object)", span="1430-1430", cluster="CommandLine.TargetWrapper.TargetWrapper(object)", file="CommandLine.cs"];
m11_515 [label="_target = target", span="1432-1432", cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=red, community=0, file="CommandLine.cs"];
m11_516 [label="_vla = ValueListAttribute.GetAttribute(_target)", span="1433-1433", cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=red, community=0, file="CommandLine.cs"];
m11_517 [label=IsValueListDefined, span="1434-1434", cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=red, community=0, file="CommandLine.cs"];
m11_518 [label="_valueList = ValueListAttribute.GetReference(_target)", span="1435-1435", cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=red, community=0, file="CommandLine.cs"];
m11_519 [label="Exit CommandLine.TargetWrapper.TargetWrapper(object)", span="1430-1430", cluster="CommandLine.TargetWrapper.TargetWrapper(object)", file="CommandLine.cs"];
m11_310 [label="Entry CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="842-842", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs"];
m11_311 [label="var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", span="844-844", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLine.cs"];
m11_313 [label="var map = new OptionMap(list.Count, settings)", span="847-847", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLine.cs"];
m11_317 [label="map.RawOptions = target", span="855-855", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLine.cs"];
m11_312 [label="list != null", span="845-845", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLine.cs"];
m11_314 [label=list, span="849-849", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLine.cs"];
m11_319 [label="return null;", span="860-860", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLine.cs"];
m11_316 [label="map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="852-852", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLine.cs"];
m11_318 [label="return map;", span="857-857", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLine.cs"];
m11_315 [label="pair != null && pair.Right != null", span="851-851", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLine.cs"];
m11_320 [label="Exit CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="842-842", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs"];
m11_157 [label="Entry CommandLine.BadOptionInfo.BadOptionInfo()", span="495-495", cluster="CommandLine.BadOptionInfo.BadOptionInfo()", file="CommandLine.cs"];
m11_158 [label="Exit CommandLine.BadOptionInfo.BadOptionInfo()", span="495-495", cluster="CommandLine.BadOptionInfo.BadOptionInfo()", file="CommandLine.cs"];
m11_396 [label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1069-1069", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", file="CommandLine.cs"];
m11_397 [label="BadOption = option", span="1071-1071", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", color=red, community=0, file="CommandLine.cs"];
m11_398 [label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1069-1069", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", file="CommandLine.cs"];
m11_111 [label="Entry CommandLine.OptionGroupParser.OptionGroupParser(bool)", span="715-715", cluster="CommandLine.OptionGroupParser.OptionGroupParser(bool)", file="CommandLine.cs"];
m11_248 [label="_ignoreUnkwnownArguments = ignoreUnkwnownArguments", span="717-717", cluster="CommandLine.OptionGroupParser.OptionGroupParser(bool)", color=red, community=0, file="CommandLine.cs"];
m11_249 [label="Exit CommandLine.OptionGroupParser.OptionGroupParser(bool)", span="715-715", cluster="CommandLine.OptionGroupParser.OptionGroupParser(bool)", file="CommandLine.cs"];
m11_643 [label="Entry CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1847-1847", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="CommandLine.cs"];
m11_644 [label="array.Length == 0", span="1849-1849", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=red, community=0, file="CommandLine.cs"];
m11_645 [label="throw new ArgumentOutOfRangeException(paramName);", span="1850-1850", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=red, community=0, file="CommandLine.cs"];
m11_646 [label="Exit CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1847-1847", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="CommandLine.cs"];
m11_345 [label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0", cluster="System.Array.CreateInstance(System.Type, int)", file="CommandLine.cs"];
m11_347 [label="Entry System.Array.SetValue(object, int)", span="0-0", cluster="System.Array.SetValue(object, int)", file="CommandLine.cs"];
m11_447 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="CommandLine.cs"];
m11_346 [label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0", cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="CommandLine.cs"];
m11_531 [label="Entry CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1494-1494", cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", file="CommandLine.cs"];
m11_532 [label="LastPostParsingState = new PostParsingState()", span="1496-1496", cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", color=red, community=0, file="CommandLine.cs"];
m11_533 [label="Exit CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1494-1494", cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", file="CommandLine.cs"];
m11_136 [label="Entry CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="456-456", cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", file="CommandLine.cs"];
m11_137 [label="return string.Compare(argument, ''--'' + option, !caseSensitive) == 0;", span="458-458", cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", color=red, community=0, file="CommandLine.cs"];
m11_138 [label="Exit CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="456-456", cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", file="CommandLine.cs"];
m11_16 [label="Entry System.MemberAccessException.MemberAccessException()", span="0-0", cluster="System.MemberAccessException.MemberAccessException()", file="CommandLine.cs"];
m11_35 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="258-258", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", file="CommandLine.cs"];
m11_36 [label="Separator = ':'", span="261-261", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", color=red, community=0, file="CommandLine.cs"];
m11_37 [label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="258-258", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", file="CommandLine.cs"];
m11_128 [label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="532-532", cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="CommandLine.cs"];
m11_165 [label="Exit CommandLine.IArgumentEnumerator.MoveNext()", span="532-532", cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="CommandLine.cs"];
m11_418 [label="Entry CommandLine.OptionMap.SetDefaults()", span="1140-1140", cluster="CommandLine.OptionMap.SetDefaults()", file="CommandLine.cs"];
m11_419 [label="_map.Values", span="1142-1142", cluster="CommandLine.OptionMap.SetDefaults()", color=red, community=0, file="CommandLine.cs"];
m11_420 [label="option.SetDefault(this.RawOptions)", span="1144-1144", cluster="CommandLine.OptionMap.SetDefaults()", color=red, community=0, file="CommandLine.cs"];
m11_421 [label="Exit CommandLine.OptionMap.SetDefaults()", span="1140-1140", cluster="CommandLine.OptionMap.SetDefaults()", file="CommandLine.cs"];
m11_702 [label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0", cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="CommandLine.cs"];
m11_131 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException()", span="1513-1513", cluster="CommandLine.CommandLineParserException.CommandLineParserException()", file="CommandLine.cs"];
m11_534 [label="Exit CommandLine.CommandLineParserException.CommandLineParserException()", span="1513-1513", cluster="CommandLine.CommandLineParserException.CommandLineParserException()", file="CommandLine.cs"];
m11_682 [label="Entry CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1920-1920", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs"];
m11_683 [label="IList<TAttribute> list = new List<TAttribute>()", span="1923-1923", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_684 [label="var info = target.GetType().GetProperties()", span="1924-1924", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_691 [label="list.Add((TAttribute)attribute)", span="1935-1935", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_692 [label="return list;", span="1940-1940", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_685 [label=info, span="1926-1926", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_686 [label="property != null && (property.CanRead && property.CanWrite)", span="1928-1928", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_687 [label="var setMethod = property.GetSetMethod()", span="1930-1930", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_689 [label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1933-1933", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_688 [label="setMethod != null && !setMethod.IsStatic", span="1931-1931", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_690 [label="attribute != null", span="1934-1934", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_693 [label="Exit CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1920-1920", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs"];
m11_242 [label="Entry CommandLine.OneCharStringEnumerator.MovePrevious()", span="701-701", cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", file="CommandLine.cs"];
m11_243 [label="throw new NotSupportedException();", span="703-703", cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", color=red, community=0, file="CommandLine.cs"];
m11_244 [label="Exit CommandLine.OneCharStringEnumerator.MovePrevious()", span="701-701", cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", file="CommandLine.cs"];
m11_62 [label="Entry CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="355-355", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs"];
m11_76 [label="concreteType = null", span="357-357", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, file="CommandLine.cs"];
m11_77 [label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="359-359", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, file="CommandLine.cs"];
m11_78 [label="list == null || list.Count == 0", span="360-360", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, file="CommandLine.cs"];
m11_80 [label="list.Count > 1", span="363-363", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, file="CommandLine.cs"];
m11_82 [label="var pairZero = list[0]", span="366-366", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, file="CommandLine.cs"];
m11_79 [label="return null;", span="361-361", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, file="CommandLine.cs"];
m11_81 [label="throw new InvalidOperationException();", span="364-364", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, file="CommandLine.cs"];
m11_83 [label="concreteType = pairZero.Right.ConcreteType", span="367-367", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, file="CommandLine.cs"];
m11_84 [label="return pairZero.Left;", span="369-369", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, file="CommandLine.cs"];
m11_85 [label="Exit CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="355-355", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs"];
m11_63 [label="Entry System.Activator.CreateInstance(System.Type)", span="0-0", cluster="System.Activator.CreateInstance(System.Type)", file="CommandLine.cs"];
m11_212 [label="Entry string.Split(char[], int)", span="0-0", cluster="string.Split(char[], int)", file="CommandLine.cs"];
m11_222 [label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1841-1841", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="CommandLine.cs"];
m11_639 [label="string.IsNullOrEmpty(value)", span="1843-1843", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=red, community=0, file="CommandLine.cs"];
m11_640 [label="throw new ArgumentException(paramName);", span="1844-1844", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=red, community=0, file="CommandLine.cs"];
m11_641 [label="Exit CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1841-1841", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="CommandLine.cs"];
m11_537 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1527-1527", cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CommandLine.cs"];
m11_538 [label="Exit CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1527-1527", cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CommandLine.cs"];
m11_3 [label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="136-136", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="CommandLine.cs"];
m11_4 [label="ShortName = shortName", span="138-138", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=red, community=0, file="CommandLine.cs"];
m11_5 [label="LongName = longName", span="139-139", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=red, community=0, file="CommandLine.cs"];
m11_6 [label="HelpText = DefaultHelpText", span="140-140", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=red, community=0, file="CommandLine.cs"];
m11_7 [label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="136-136", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="CommandLine.cs"];
m11_413 [label="Entry CommandLine.OptionMap.EnforceRules()", span="1135-1135", cluster="CommandLine.OptionMap.EnforceRules()", file="CommandLine.cs"];
m11_414 [label="return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="1137-1137", cluster="CommandLine.OptionMap.EnforceRules()", color=red, community=0, file="CommandLine.cs"];
m11_415 [label="Exit CommandLine.OptionMap.EnforceRules()", span="1135-1135", cluster="CommandLine.OptionMap.EnforceRules()", file="CommandLine.cs"];
m11_89 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="CommandLine.cs"];
m11_235 [label="Entry CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="690-690", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", file="CommandLine.cs"];
m11_236 [label="_index == -1", span="692-692", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, file="CommandLine.cs"];
m11_237 [label="throw new InvalidOperationException();", span="693-693", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, file="CommandLine.cs"];
m11_238 [label="_index > _data.Length", span="695-695", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, file="CommandLine.cs"];
m11_239 [label="throw new InvalidOperationException();", span="696-696", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, file="CommandLine.cs"];
m11_240 [label="return _data.Substring(_index + 1);", span="698-698", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, file="CommandLine.cs"];
m11_241 [label="Exit CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="690-690", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", file="CommandLine.cs"];
m11_663 [label="Entry System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", span="0-0", cluster="System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", file="CommandLine.cs"];
m11_112 [label="Entry CommandLine.ArgumentParser.IsInputValue(string)", span="416-416", cluster="CommandLine.ArgumentParser.IsInputValue(string)", file="CommandLine.cs"];
m11_113 [label="StringUtil.IsNumeric(argument)", span="418-418", cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=red, community=0, file="CommandLine.cs"];
m11_115 [label="argument.Length > 0", span="421-421", cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=red, community=0, file="CommandLine.cs"];
m11_116 [label="return argument.Equals(''-'', StringComparison.InvariantCulture) || argument[0] != '-';", span="422-422", cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=red, community=0, file="CommandLine.cs"];
m11_114 [label="return true;", span="419-419", cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=red, community=0, file="CommandLine.cs"];
m11_117 [label="return true;", span="424-424", cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=red, community=0, file="CommandLine.cs"];
m11_118 [label="Exit CommandLine.ArgumentParser.IsInputValue(string)", span="416-416", cluster="CommandLine.ArgumentParser.IsInputValue(string)", file="CommandLine.cs"];
m11_54 [label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="328-328", cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs"];
m11_55 [label="Type concreteType", span="330-330", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0, file="CommandLine.cs"];
m11_56 [label="var property = GetProperty(target, out concreteType)", span="331-331", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0, file="CommandLine.cs"];
m11_59 [label="property.SetValue(target, Activator.CreateInstance(concreteType), null)", span="336-336", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0, file="CommandLine.cs"];
m11_60 [label="return (IList<string>)property.GetValue(target, null);", span="338-338", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0, file="CommandLine.cs"];
m11_57 [label="property == null || concreteType == null", span="333-333", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0, file="CommandLine.cs"];
m11_58 [label="return null;", span="334-334", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0, file="CommandLine.cs"];
m11_61 [label="Exit CommandLine.ValueListAttribute.GetReference(object)", span="328-328", cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs"];
m11_417 [label="Entry CommandLine.OptionMap.EnforceRequiredRule()", span="1148-1148", cluster="CommandLine.OptionMap.EnforceRequiredRule()", file="CommandLine.cs"];
m11_422 [label="bool requiredRulesAllMet = true", span="1150-1150", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, file="CommandLine.cs"];
m11_423 [label="_map.Values", span="1151-1151", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, file="CommandLine.cs"];
m11_427 [label="return requiredRulesAllMet;", span="1161-1161", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, file="CommandLine.cs"];
m11_424 [label="option.Required && !option.IsDefined", span="1153-1153", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, file="CommandLine.cs"];
m11_425 [label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, option, true, null)", span="1155-1155", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, file="CommandLine.cs"];
m11_426 [label="requiredRulesAllMet = false", span="1156-1156", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, file="CommandLine.cs"];
m11_428 [label="Exit CommandLine.OptionMap.EnforceRequiredRule()", span="1148-1148", cluster="CommandLine.OptionMap.EnforceRequiredRule()", file="CommandLine.cs"];
m11_0 [label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="124-124", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="CommandLine.cs"];
m11_1 [label="HelpText = DefaultHelpText", span="127-127", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", color=red, community=0, file="CommandLine.cs"];
m11_2 [label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="124-124", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="CommandLine.cs"];
m11_594 [label="Entry CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1757-1757", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs"];
m11_596 [label="bool hadError = false", span="1759-1759", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLine.cs"];
m11_597 [label="var optionMap = OptionInfo.CreateMap(options, _settings)", span="1760-1760", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLine.cs"];
m11_599 [label="var target = new TargetWrapper(options)", span="1762-1762", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLine.cs"];
m11_600 [label="IArgumentEnumerator arguments = new StringArrayEnumerator(args)", span="1764-1764", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLine.cs"];
m11_606 [label="ParserState result = parser.Parse(arguments, optionMap, options)", span="1773-1773", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLine.cs"];
m11_608 [label="SetPostParsingStateIfNeeded(options, parser.PostParsingState)", span="1776-1776", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLine.cs"];
m11_615 [label="hadError |= !optionMap.EnforceRules()", span="1795-1795", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLine.cs"];
m11_598 [label="optionMap.SetDefaults()", span="1761-1761", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLine.cs"];
m11_612 [label="target.IsValueListDefined", span="1784-1784", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLine.cs"];
m11_613 [label="!target.AddValueItemIfAllowed(argument)", span="1786-1786", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLine.cs"];
m11_601 [label="arguments.MoveNext()", span="1765-1765", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLine.cs"];
m11_602 [label="string argument = arguments.Current", span="1767-1767", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLine.cs"];
m11_611 [label="arguments.MoveNext()", span="1782-1782", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLine.cs"];
m11_603 [label="!string.IsNullOrEmpty(argument)", span="1768-1768", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLine.cs"];
m11_604 [label="ArgumentParser parser = ArgumentParser.Create(argument, _settings.IgnoreUnknownArguments)", span="1770-1770", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLine.cs"];
m11_605 [label="parser != null", span="1771-1771", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLine.cs"];
m11_607 [label="(result & ParserState.Failure) == ParserState.Failure", span="1774-1774", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLine.cs"];
m11_610 [label="(result & ParserState.MoveOnNextElement) == ParserState.MoveOnNextElement", span="1781-1781", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLine.cs"];
m11_609 [label="hadError = true", span="1777-1777", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLine.cs"];
m11_614 [label="hadError = true", span="1788-1788", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLine.cs"];
m11_616 [label="return !hadError;", span="1797-1797", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLine.cs"];
m11_617 [label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1757-1757", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs"];
m11_595 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)", file="CommandLine.cs"];
m11_163 [label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="527-527", cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="CommandLine.cs"];
m11_164 [label="Exit CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="527-527", cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="CommandLine.cs"];
m11_395 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1522-1522", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="CommandLine.cs"];
m11_536 [label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1522-1522", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="CommandLine.cs"];
m11_416 [label="Entry CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1164-1164", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs"];
m11_430 [label="!_settings.MutuallyExclusive", span="1166-1166", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="CommandLine.cs"];
m11_431 [label="return true;", span="1167-1167", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="CommandLine.cs"];
m11_432 [label="_map.Values", span="1169-1169", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="CommandLine.cs"];
m11_433 [label="option.IsDefined && option.MutuallyExclusiveSet != null", span="1171-1171", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="CommandLine.cs"];
m11_435 [label="_mutuallyExclusiveSetMap.Values", span="1175-1175", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="CommandLine.cs"];
m11_434 [label="BuildMutuallyExclusiveMap(option)", span="1172-1172", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="CommandLine.cs"];
m11_436 [label="info.Occurrence > 1", span="1177-1177", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="CommandLine.cs"];
m11_439 [label="return true;", span="1184-1184", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="CommandLine.cs"];
m11_437 [label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, info.BadOption, null, true)", span="1179-1179", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="CommandLine.cs"];
m11_438 [label="return false;", span="1180-1180", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="CommandLine.cs"];
m11_440 [label="Exit CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1164-1164", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs"];
m11_387 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="CommandLine.cs"];
m11_21 [label="Entry CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="182-182", cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", file="CommandLine.cs"];
m11_22 [label="Exit CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="182-182", cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", file="CommandLine.cs"];
m11_90 [label="Entry CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="390-390", cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs"];
m11_91 [label="Exit CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="390-390", cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs"];
m11_330 [label="Entry CommandLine.OptionInfo.SetNullableValue(string, object)", span="937-937", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", file="CommandLine.cs"];
m11_364 [label="var nc = new NullableConverter(_property.PropertyType)", span="939-939", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_366 [label="_property.SetValue(options, nc.ConvertFromString(null, Thread.CurrentThread.CurrentCulture, value), null)", span="945-945", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_365 [label=_setValueLock, span="943-943", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_367 [label=Exception, span="950-950", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_369 [label="return true;", span="955-955", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_368 [label="return false;", span="952-952", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_370 [label="Exit CommandLine.OptionInfo.SetNullableValue(string, object)", span="937-937", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", file="CommandLine.cs"];
m11_642 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="CommandLine.cs"];
m11_44 [label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="304-304", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="CommandLine.cs"];
m11_45 [label="concreteType == null", span="307-307", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=red, community=0, file="CommandLine.cs"];
m11_47 [label="!typeof(IList<string>).IsAssignableFrom(concreteType)", span="310-310", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=red, community=0, file="CommandLine.cs"];
m11_49 [label="_concreteType = concreteType", span="313-313", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=red, community=0, file="CommandLine.cs"];
m11_46 [label="throw new ArgumentNullException(''concreteType'');", span="308-308", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=red, community=0, file="CommandLine.cs"];
m11_48 [label="throw new CommandLineParserException(''The types are incompatible.'');", span="311-311", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=red, community=0, file="CommandLine.cs"];
m11_50 [label="Exit CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="304-304", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="CommandLine.cs"];
m11_92 [label="Entry CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="394-394", cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", file="CommandLine.cs"];
m11_93 [label="this.PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", span="396-396", cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", color=red, community=0, file="CommandLine.cs"];
m11_94 [label="Exit CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="394-394", cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", file="CommandLine.cs"];
m11_130 [label="Entry CommandLine.IArgumentEnumerator.MovePrevious()", span="534-534", cluster="CommandLine.IArgumentEnumerator.MovePrevious()", file="CommandLine.cs"];
m11_166 [label="Exit CommandLine.IArgumentEnumerator.MovePrevious()", span="534-534", cluster="CommandLine.IArgumentEnumerator.MovePrevious()", file="CommandLine.cs"];
m11_501 [label="Entry CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1400-1400", cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", file="CommandLine.cs"];
m11_502 [label="throw new NotSupportedException();", span="1402-1402", cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", color=red, community=0, file="CommandLine.cs"];
m11_503 [label="Exit CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1400-1400", cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", file="CommandLine.cs"];
m11_710 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="CommandLine.cs"];
m11_226 [label="Entry CommandLine.OneCharStringEnumerator.MoveNext()", span="677-677", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", file="CommandLine.cs"];
m11_227 [label="_index < (_data.Length - 1)", span="679-679", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, file="CommandLine.cs"];
m11_228 [label="_index++", span="681-681", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, file="CommandLine.cs"];
m11_231 [label="_index = _data.Length", span="685-685", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, file="CommandLine.cs"];
m11_229 [label="_currentElement = _data.Substring(_index, 1)", span="682-682", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, file="CommandLine.cs"];
m11_230 [label="return true;", span="683-683", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, file="CommandLine.cs"];
m11_232 [label="return false;", span="687-687", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, file="CommandLine.cs"];
m11_233 [label="Exit CommandLine.OneCharStringEnumerator.MoveNext()", span="677-677", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", file="CommandLine.cs"];
m11_635 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="CommandLine.cs"];
m11_169 [label="Entry CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="548-548", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs"];
m11_170 [label="var parts = argumentEnumerator.Current.Substring(2).Split(new[] { '=' }, 2)", span="550-550", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_171 [label="var option = map[parts[0]]", span="551-551", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_178 [label="parts.Length == 1 && (argumentEnumerator.IsLast || !ArgumentParser.IsInputValue(argumentEnumerator.Next))", span="563-563", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_182 [label="valueSetting = option.SetValue(parts[1], options)", span="570-570", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_187 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="579-579", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_189 [label="valueSetting = option.SetValue(items, options)", span="582-582", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_194 [label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="592-592", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_199 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="601-601", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_200 [label="valueSetting = option.SetValue(items, options)", span="603-603", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_206 [label="valueSetting = option.SetValue(true, options)", span="614-614", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_180 [label="parts.Length == 2", span="566-566", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_188 [label="items.Insert(0, parts[1])", span="580-580", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_204 [label="parts.Length == 2", span="611-611", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_172 [label="bool valueSetting", span="552-552", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_173 [label="option == null", span="554-554", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_175 [label="option.IsDefined = true", span="557-557", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_176 [label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="559-559", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_177 [label="!option.IsBoolean", span="561-561", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_181 [label="!option.IsArray", span="568-568", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_184 [label="this.DefineOptionThatViolatesFormat(option)", span="572-572", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_186 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="577-577", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_191 [label="this.DefineOptionThatViolatesFormat(option)", span="584-584", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_193 [label="!option.IsArray", span="590-590", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_196 [label="this.DefineOptionThatViolatesFormat(option)", span="594-594", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_198 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="599-599", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_202 [label="this.DefineOptionThatViolatesFormat(option)", span="605-605", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_208 [label="this.DefineOptionThatViolatesFormat(option)", span="616-616", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_174 [label="return _ignoreUnkwnownArguments ? ParserState.MoveOnNextElement : ParserState.Failure;", span="555-555", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_179 [label="return ParserState.Failure;", span="564-564", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_183 [label="!valueSetting", span="571-571", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_185 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="574-574", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_190 [label="!valueSetting", span="583-583", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_192 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="586-586", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_195 [label="!valueSetting", span="593-593", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_197 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="596-596", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_201 [label="!valueSetting", span="604-604", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_203 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="607-607", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_205 [label="return ParserState.Failure;", span="612-612", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_207 [label="!valueSetting", span="615-615", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_209 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="618-618", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_210 [label="Exit CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="548-548", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs"];
m11_214 [label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0", cluster="System.Collections.Generic.IList<T>.Insert(int, T)", file="CommandLine.cs"];
m11_547 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1577-1577", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLine.cs"];
m11_548 [label="CaseSensitive = caseSensitive", span="1579-1579", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=red, community=0, file="CommandLine.cs"];
m11_549 [label="HelpWriter = helpWriter", span="1580-1580", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=red, community=0, file="CommandLine.cs"];
m11_550 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1577-1577", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLine.cs"];
m11_469 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()", file="CommandLine.cs"];
m11_321 [label="Entry CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1086-1086", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs"];
m11_402 [label="_settings = settings", span="1088-1088", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLine.cs"];
m11_407 [label="_names = new Dictionary<string, string>(capacity, comparer)", span="1096-1096", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLine.cs"];
m11_408 [label="_map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="1097-1097", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLine.cs"];
m11_410 [label="_mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="1101-1101", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLine.cs"];
m11_403 [label="IEqualityComparer<string> comparer", span="1090-1090", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLine.cs"];
m11_404 [label="_settings.CaseSensitive", span="1091-1091", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLine.cs"];
m11_405 [label="comparer = StringComparer.Ordinal", span="1092-1092", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLine.cs"];
m11_406 [label="comparer = StringComparer.OrdinalIgnoreCase", span="1094-1094", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLine.cs"];
m11_409 [label="_settings.MutuallyExclusive", span="1099-1099", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLine.cs"];
m11_411 [label="Exit CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1086-1086", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs"];
m11_661 [label="Entry System.Type.GetProperties()", span="0-0", cluster="System.Type.GetProperties()", file="CommandLine.cs"];
m11_703 [label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0", cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="CommandLine.cs"];
m11_701 [label="Entry System.Reflection.Assembly.GetEntryAssembly()", span="0-0", cluster="System.Reflection.Assembly.GetEntryAssembly()", file="CommandLine.cs"];
m11_569 [label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1681-1681", cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLine.cs"];
m11_570 [label="_settings = new CommandLineParserSettings()", span="1683-1683", cluster="CommandLine.CommandLineParser.CommandLineParser()", color=red, community=0, file="CommandLine.cs"];
m11_571 [label="Exit CommandLine.CommandLineParser.CommandLineParser()", span="1681-1681", cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLine.cs"];
m11_149 [label="Entry CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="477-477", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", file="CommandLine.cs"];
m11_150 [label="!option.IsAttributeArrayCompatible", span="479-479", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=red, community=0, file="CommandLine.cs"];
m11_151 [label="throw new CommandLineParserException();", span="480-480", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=red, community=0, file="CommandLine.cs"];
m11_152 [label="Exit CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="477-477", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", file="CommandLine.cs"];
m11_41 [label="Entry CommandLine.ValueListAttribute.ValueListAttribute()", span="294-294", cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="CommandLine.cs"];
m11_42 [label="MaximumElements = -1", span="296-296", cluster="CommandLine.ValueListAttribute.ValueListAttribute()", color=red, community=0, file="CommandLine.cs"];
m11_43 [label="Exit CommandLine.ValueListAttribute.ValueListAttribute()", span="294-294", cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="CommandLine.cs"];
m11_363 [label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0", cluster="System.Enum.Parse(System.Type, string, bool)", file="CommandLine.cs"];
m11_38 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="270-270", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", file="CommandLine.cs"];
m11_39 [label="Separator = separator", span="273-273", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", color=red, community=0, file="CommandLine.cs"];
m11_40 [label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="270-270", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", file="CommandLine.cs"];
m11_476 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)", file="CommandLine.cs"];
m11_328 [label="Entry CommandLine.OptionInfo.SetValueList(string, object)", span="968-968", cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="CommandLine.cs"];
m11_377 [label=_setValueLock, span="970-970", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_378 [label="_property.SetValue(options, new List<string>(), null)", span="972-972", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_379 [label="var fieldRef = (IList<string>)_property.GetValue(options, null)", span="974-974", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_380 [label="var values = value.Split(((OptionListAttribute)_attribute).Separator)", span="975-975", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_383 [label="fieldRef.Add(values[i])", span="979-979", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_381 [label="int i = 0", span="977-977", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_382 [label="i < values.Length", span="977-977", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_384 [label="i++", span="977-977", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_385 [label="return true;", span="982-982", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_386 [label="Exit CommandLine.OptionInfo.SetValueList(string, object)", span="968-968", cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="CommandLine.cs"];
m11_371 [label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0", cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", file="CommandLine.cs"];
m11_485 [label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1335-1335", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="CommandLine.cs"];
m11_486 [label="Assumes.NotNull(value, ''value'')", span="1337-1337", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=red, community=0, file="CommandLine.cs"];
m11_487 [label="_data = value", span="1339-1339", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=red, community=0, file="CommandLine.cs"];
m11_489 [label="_endIndex = value.Length", span="1341-1341", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=red, community=0, file="CommandLine.cs"];
m11_488 [label="_index = -1", span="1340-1340", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=red, community=0, file="CommandLine.cs"];
m11_490 [label="Exit CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1335-1335", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="CommandLine.cs"];
m11_372 [label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", file="CommandLine.cs"];
m11_153 [label="Entry CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="483-483", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", file="CommandLine.cs"];
m11_154 [label="!option.IsArray && option.IsAttributeArrayCompatible", span="485-485", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=red, community=0, file="CommandLine.cs"];
m11_155 [label="throw new CommandLineParserException();", span="486-486", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=red, community=0, file="CommandLine.cs"];
m11_156 [label="Exit CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="483-483", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", file="CommandLine.cs"];
m11_592 [label="Entry CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1882-1882", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLine.cs"];
m11_664 [label="var info = target.GetType().GetMethods()", span="1885-1885", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_665 [label=info, span="1887-1887", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_666 [label="!method.IsStatic", span="1889-1889", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_670 [label="return null;", span="1898-1898", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_667 [label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1891-1892", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=1, file="CommandLine.cs"];
m11_669 [label="return new Pair<MethodInfo, TAttribute>(method, (TAttribute)attribute);", span="1894-1894", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_668 [label="attribute != null", span="1893-1893", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_671 [label="Exit CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1882-1882", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLine.cs"];
m11_139 [label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool)", span="461-461", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", file="CommandLine.cs"];
m11_140 [label="return BooleanToParserState(value, false);", span="463-463", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", color=red, community=0, file="CommandLine.cs"];
m11_141 [label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool)", span="461-461", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", file="CommandLine.cs"];
m11_459 [label="Entry CommandLine.ParsingError.ParsingError()", span="1264-1264", cluster="CommandLine.ParsingError.ParsingError()", file="CommandLine.cs"];
m11_477 [label="this.BadOption = new BadOptionInfo()", span="1266-1266", cluster="CommandLine.ParsingError.ParsingError()", color=red, community=0, file="CommandLine.cs"];
m11_478 [label="Exit CommandLine.ParsingError.ParsingError()", span="1264-1264", cluster="CommandLine.ParsingError.ParsingError()", file="CommandLine.cs"];
m11_75 [label="Entry CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1856-1856", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs"];
m11_648 [label="IList<Pair<PropertyInfo, TAttribute>> list = new List<Pair<PropertyInfo, TAttribute>>()", span="1859-1859", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_649 [label="target != null", span="1860-1860", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_650 [label="var propertiesInfo = target.GetType().GetProperties()", span="1862-1862", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_657 [label="list.Add(new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute))", span="1873-1873", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_658 [label="return list;", span="1879-1879", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_651 [label=propertiesInfo, span="1864-1864", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_652 [label="property != null && (property.CanRead && property.CanWrite)", span="1866-1866", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_653 [label="var setMethod = property.GetSetMethod()", span="1868-1868", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_655 [label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1871-1871", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_654 [label="setMethod != null && !setMethod.IsStatic", span="1869-1869", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_656 [label="attribute != null", span="1872-1872", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, file="CommandLine.cs"];
m11_659 [label="Exit CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1856-1856", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs"];
m11_520 [label="Entry CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1440-1440", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", file="CommandLine.cs"];
m11_521 [label="_vla.MaximumElements == 0 || _valueList.Count == _vla.MaximumElements", span="1442-1442", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=red, community=0, file="CommandLine.cs"];
m11_524 [label="_valueList.Add(item)", span="1447-1447", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=red, community=0, file="CommandLine.cs"];
m11_522 [label="return false;", span="1443-1443", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=red, community=0, file="CommandLine.cs"];
m11_523 [label=this, span="1445-1445", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=red, community=0, file="CommandLine.cs"];
m11_525 [label="return true;", span="1450-1450", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=red, community=0, file="CommandLine.cs"];
m11_526 [label="Exit CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1440-1440", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", file="CommandLine.cs"];
m11_65 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="CommandLine.cs"];
m11_215 [label="Entry CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="874-874", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs"];
m11_332 [label="Type elementType = _property.PropertyType.GetElementType()", span="876-876", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="CommandLine.cs"];
m11_333 [label="Array array = Array.CreateInstance(elementType, values.Count)", span="877-877", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="CommandLine.cs"];
m11_337 [label="array.SetValue(Convert.ChangeType(values[i], elementType, Thread.CurrentThread.CurrentCulture), i)", span="885-885", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="CommandLine.cs"];
m11_338 [label="_property.SetValue(options, array, null)", span="886-886", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="CommandLine.cs"];
m11_334 [label="int i = 0", span="879-879", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="CommandLine.cs"];
m11_335 [label="i < array.Length", span="879-879", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="CommandLine.cs"];
m11_341 [label="i++", span="879-879", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="CommandLine.cs"];
m11_336 [label=_setValueLock, span="883-883", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="CommandLine.cs"];
m11_342 [label="return true;", span="895-895", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="CommandLine.cs"];
m11_339 [label=FormatException, span="889-889", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="CommandLine.cs"];
m11_340 [label="return false;", span="891-891", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="CommandLine.cs"];
m11_343 [label="Exit CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="874-874", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs"];
m11_566 [label="Entry CommandLine.CommandLineParser.CommandLineParser(bool)", span="1673-1673", cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", file="CommandLine.cs"];
m11_567 [label="_settings = new CommandLineParserSettings(false, false, Console.Error)", span="1675-1675", cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", color=red, community=0, file="CommandLine.cs"];
m11_568 [label="Exit CommandLine.CommandLineParser.CommandLineParser(bool)", span="1673-1673", cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", file="CommandLine.cs"];
m11_492 [label="Entry CommandLine.StringArrayEnumerator.Reset()", span="1385-1385", cluster="CommandLine.StringArrayEnumerator.Reset()", file="CommandLine.cs"];
m11_493 [label="_index = -1", span="1387-1387", cluster="CommandLine.StringArrayEnumerator.Reset()", color=red, community=0, file="CommandLine.cs"];
m11_494 [label="Exit CommandLine.StringArrayEnumerator.Reset()", span="1385-1385", cluster="CommandLine.StringArrayEnumerator.Reset()", file="CommandLine.cs"];
m11_246 [label="Entry CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="706-706", cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", file="CommandLine.cs"];
m11_247 [label="Exit CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="706-706", cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", file="CommandLine.cs"];
m11_132 [label="Entry CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="451-451", cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", file="CommandLine.cs"];
m11_133 [label="return string.Compare(argument, ''-'' + option, !caseSensitive) == 0;", span="453-453", cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", color=red, community=0, file="CommandLine.cs"];
m11_134 [label="Exit CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="451-451", cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", file="CommandLine.cs"];
m11_647 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="CommandLine.cs"];
m11_34 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="CommandLine.cs"];
m11_20 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="CommandLine.cs"];
m11_234 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="CommandLine.cs"];
m11_541 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1553-1553", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLine.cs"];
m11_542 [label="CaseSensitive = caseSensitive", span="1555-1555", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", color=red, community=0, file="CommandLine.cs"];
m11_543 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1553-1553", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLine.cs"];
m11_593 [label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1800-1800", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs"];
m11_619 [label="bool caseSensitive = _settings.CaseSensitive", span="1802-1802", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLine.cs"];
m11_621 [label="i < args.Length", span="1804-1804", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLine.cs"];
m11_622 [label="!string.IsNullOrEmpty(helpOption.ShortName)", span="1806-1806", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLine.cs"];
m11_623 [label="ArgumentParser.CompareShort(args[i], helpOption.ShortName, caseSensitive)", span="1808-1808", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLine.cs"];
m11_625 [label="!string.IsNullOrEmpty(helpOption.LongName)", span="1812-1812", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLine.cs"];
m11_626 [label="ArgumentParser.CompareLong(args[i], helpOption.LongName, caseSensitive)", span="1814-1814", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLine.cs"];
m11_620 [label="int i = 0", span="1804-1804", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLine.cs"];
m11_628 [label="i++", span="1804-1804", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLine.cs"];
m11_629 [label="return false;", span="1819-1819", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLine.cs"];
m11_624 [label="return true;", span="1809-1809", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLine.cs"];
m11_627 [label="return true;", span="1815-1815", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLine.cs"];
m11_630 [label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1800-1800", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs"];
m11_660 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="CommandLine.cs"];
m11_64 [label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="CommandLine.cs"];
m11_109 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="CommandLine.cs"];
m11_495 [label="Entry CommandLine.StringArrayEnumerator.MoveNext()", span="1390-1390", cluster="CommandLine.StringArrayEnumerator.MoveNext()", file="CommandLine.cs"];
m11_496 [label="_index < _endIndex", span="1392-1392", cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=red, community=0, file="CommandLine.cs"];
m11_497 [label="_index++", span="1394-1394", cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=red, community=0, file="CommandLine.cs"];
m11_499 [label="return false;", span="1397-1397", cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=red, community=0, file="CommandLine.cs"];
m11_498 [label="return _index < _endIndex;", span="1395-1395", cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=red, community=0, file="CommandLine.cs"];
m11_500 [label="Exit CommandLine.StringArrayEnumerator.MoveNext()", span="1390-1390", cluster="CommandLine.StringArrayEnumerator.MoveNext()", file="CommandLine.cs"];
m11_527 [label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs"];
m11_528 [label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs"];
m11_706 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="CommandLine.cs"];
m11_129 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="CommandLine.cs"];
m11_491 [label="Entry CommandLine.Assumes.NotNull<T>(T, string)", span="1834-1834", cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="CommandLine.cs"];
m11_636 [label="value == null", span="1837-1837", cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=red, community=0, file="CommandLine.cs"];
m11_637 [label="throw new ArgumentNullException(paramName);", span="1838-1838", cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=red, community=0, file="CommandLine.cs"];
m11_638 [label="Exit CommandLine.Assumes.NotNull<T>(T, string)", span="1834-1834", cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="CommandLine.cs"];
m11_97 [label="Entry CommandLine.ArgumentParser.Create(string, bool)", span="399-399", cluster="CommandLine.ArgumentParser.Create(string, bool)", file="CommandLine.cs"];
m11_98 [label="StringUtil.IsNumeric(argument)", span="401-401", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0, file="CommandLine.cs"];
m11_100 [label="argument.Equals(''-'', StringComparison.InvariantCulture)", span="404-404", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0, file="CommandLine.cs"];
m11_102 [label="argument[0] == '-' && argument[1] == '-'", span="407-407", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0, file="CommandLine.cs"];
m11_103 [label="return new LongOptionParser(ignoreUnknownArguments);", span="408-408", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0, file="CommandLine.cs"];
m11_104 [label="argument[0] == '-'", span="410-410", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0, file="CommandLine.cs"];
m11_105 [label="return new OptionGroupParser(ignoreUnknownArguments);", span="411-411", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0, file="CommandLine.cs"];
m11_99 [label="return null;", span="402-402", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0, file="CommandLine.cs"];
m11_101 [label="return null;", span="405-405", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0, file="CommandLine.cs"];
m11_106 [label="return null;", span="413-413", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0, file="CommandLine.cs"];
m11_107 [label="Exit CommandLine.ArgumentParser.Create(string, bool)", span="399-399", cluster="CommandLine.ArgumentParser.Create(string, bool)", file="CommandLine.cs"];
m11_119 [label="Entry CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="434-434", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="CommandLine.cs"];
m11_120 [label="IList<string> list = new List<string>()", span="436-436", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, file="CommandLine.cs"];
m11_121 [label="ae.MoveNext()", span="438-438", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, file="CommandLine.cs"];
m11_122 [label="IsInputValue(ae.Current)", span="440-440", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, file="CommandLine.cs"];
m11_123 [label="list.Add(ae.Current)", span="441-441", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, file="CommandLine.cs"];
m11_124 [label="!ae.MovePrevious()", span="445-445", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, file="CommandLine.cs"];
m11_126 [label="return list;", span="448-448", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, file="CommandLine.cs"];
m11_125 [label="throw new CommandLineParserException();", span="446-446", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, file="CommandLine.cs"];
m11_127 [label="Exit CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="434-434", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="CommandLine.cs"];
m11_572 [label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1692-1692", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLine.cs"];
m11_573 [label="Assumes.NotNull(settings, ''settings'')", span="1694-1694", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLine.cs"];
m11_574 [label="_settings = settings", span="1696-1696", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLine.cs"];
m11_575 [label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1692-1692", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLine.cs"];
m11_662 [label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0", cluster="System.Reflection.PropertyInfo.GetSetMethod()", file="CommandLine.cs"];
m11_695 [label="var assemblyFromWhichToPullInformation = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="1946-1946", cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=red, community=0, file="CommandLine.cs"];
m11_694 [label="Entry CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", span="1943-1943", cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", file="CommandLine.cs"];
m11_696 [label="object[] a = assemblyFromWhichToPullInformation.GetCustomAttributes(typeof(TAttribute), false)", span="1948-1948", cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=red, community=0, file="CommandLine.cs"];
m11_697 [label="a == null || a.Length <= 0", span="1949-1949", cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=red, community=0, file="CommandLine.cs"];
m11_699 [label="return (TAttribute)a[0];", span="1950-1950", cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=red, community=0, file="CommandLine.cs"];
m11_698 [label="return null;", span="1949-1949", cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=red, community=0, file="CommandLine.cs"];
m11_700 [label="Exit CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", span="1943-1943", cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", file="CommandLine.cs"];
m11_96 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="CommandLine.cs"];
m11_344 [label="Entry System.Type.GetElementType()", span="0-0", cluster="System.Type.GetElementType()", file="CommandLine.cs"];
m11_544 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1564-1564", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLine.cs"];
m11_545 [label="HelpWriter = helpWriter", span="1567-1567", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", color=red, community=0, file="CommandLine.cs"];
m11_546 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1564-1564", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLine.cs"];
m11_250 [label="Entry CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="720-720", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs"];
m11_251 [label="IArgumentEnumerator group = new OneCharStringEnumerator(argumentEnumerator.Current.Substring(1))", span="722-722", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_253 [label="var option = map[group.Current]", span="725-725", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_259 [label="argumentEnumerator.IsLast && group.IsLast", span="735-735", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_264 [label="valueSetting = option.SetValue(group.GetRemainingFromNext(), options)", span="743-743", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_269 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="752-752", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_271 [label="valueSetting = option.SetValue(items, options)", span="755-755", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_275 [label="!argumentEnumerator.IsLast && !ArgumentParser.IsInputValue(argumentEnumerator.Next)", span="762-762", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_278 [label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="768-768", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_283 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="777-777", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_284 [label="valueSetting = option.SetValue(items, options)", span="779-779", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_288 [label="!@group.IsLast && map[@group.Next] == null", span="787-787", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_290 [label="!option.SetValue(true, options)", span="790-790", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_252 [label="group.MoveNext()", span="723-723", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_262 [label="!group.IsLast", span="739-739", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_270 [label="items.Insert(0, @group.GetRemainingFromNext())", span="753-753", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_292 [label="return ParserState.Success;", span="794-794", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_254 [label="option == null", span="726-726", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_256 [label="option.IsDefined = true", span="729-729", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_257 [label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="731-731", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_258 [label="!option.IsBoolean", span="733-733", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_263 [label="!option.IsArray", span="741-741", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_266 [label="this.DefineOptionThatViolatesFormat(option)", span="745-745", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_268 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="750-750", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_273 [label="this.DefineOptionThatViolatesFormat(option)", span="757-757", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_277 [label="!option.IsArray", span="766-766", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_280 [label="this.DefineOptionThatViolatesFormat(option)", span="770-770", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_282 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="775-775", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_286 [label="this.DefineOptionThatViolatesFormat(option)", span="781-781", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_255 [label="return _ignoreUnkwnownArguments ? ParserState.MoveOnNextElement : ParserState.Failure;", span="727-727", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_260 [label="return ParserState.Failure;", span="736-736", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_261 [label="bool valueSetting", span="738-738", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_265 [label="!valueSetting", span="744-744", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_267 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="747-747", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_272 [label="!valueSetting", span="756-756", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_274 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="759-759", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_276 [label="return ParserState.Failure;", span="763-763", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_279 [label="!valueSetting", span="769-769", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_281 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="772-772", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_285 [label="!valueSetting", span="780-780", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_287 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="783-783", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_289 [label="return ParserState.Failure;", span="788-788", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_291 [label="return ParserState.Failure;", span="791-791", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="CommandLine.cs"];
m11_293 [label="Exit CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="720-720", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs"];
m11_309 [label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="CommandLine.cs"];
m11_460 [label="Entry CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1224-1224", cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="CommandLine.cs"];
m11_461 [label="_left = left", span="1226-1226", cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=red, community=0, file="CommandLine.cs"];
m11_462 [label="_right = right", span="1227-1227", cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=red, community=0, file="CommandLine.cs"];
m11_463 [label="Exit CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1224-1224", cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="CommandLine.cs"];
m11_429 [label="Entry CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1199-1199", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="CommandLine.cs"];
m11_449 [label="var commandLineOptionsBase = options as CommandLineOptionsBase", span="1201-1201", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="CommandLine.cs"];
m11_452 [label="var error = new ParsingError {\r\n                BadOption = {\r\n                    ShortName = option.ShortName, \r\n                    LongName = option.LongName\r\n                }\r\n            }", span="1205-1210", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="CommandLine.cs"];
m11_453 [label="required != null", span="1212-1212", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="CommandLine.cs"];
m11_454 [label="error.ViolatesRequired = required.Value", span="1212-1212", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="CommandLine.cs"];
m11_455 [label="mutualExclusiveness != null", span="1213-1213", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="CommandLine.cs"];
m11_456 [label="error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="1213-1213", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="CommandLine.cs"];
m11_450 [label="commandLineOptionsBase == null", span="1202-1202", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="CommandLine.cs"];
m11_457 [label="(commandLineOptionsBase).InternalLastPostParsingState.Errors.Add(error)", span="1215-1215", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="CommandLine.cs"];
m11_451 [label="return;", span="1203-1203", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="CommandLine.cs"];
m11_458 [label="Exit CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1199-1199", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="CommandLine.cs"];
m11_213 [label="Entry CommandLine.OptionInfo.SetValue(string, object)", span="863-863", cluster="CommandLine.OptionInfo.SetValue(string, object)", file="CommandLine.cs"];
m11_322 [label="_attribute is OptionListAttribute", span="865-865", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_323 [label="return SetValueList(value, options);", span="866-866", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_325 [label="return SetNullableValue(value, options);", span="869-869", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_326 [label="return SetValueScalar(value, options);", span="871-871", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_324 [label="ReflectionUtil.IsNullableType(_property.PropertyType)", span="868-868", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, file="CommandLine.cs"];
m11_327 [label="Exit CommandLine.OptionInfo.SetValue(string, object)", span="863-863", cluster="CommandLine.OptionInfo.SetValue(string, object)", file="CommandLine.cs"];
m11_482 [label="Entry CommandLine.PostParsingState.PostParsingState()", span="1315-1315", cluster="CommandLine.PostParsingState.PostParsingState()", file="CommandLine.cs"];
m11_483 [label="Errors = new List<ParsingError>()", span="1317-1317", cluster="CommandLine.PostParsingState.PostParsingState()", color=red, community=0, file="CommandLine.cs"];
m11_484 [label="Exit CommandLine.PostParsingState.PostParsingState()", span="1315-1315", cluster="CommandLine.PostParsingState.PostParsingState()", file="CommandLine.cs"];
m11_108 [label="Entry CommandLine.StringUtil.IsNumeric(string)", span="1966-1966", cluster="CommandLine.StringUtil.IsNumeric(string)", file="CommandLine.cs"];
m11_711 [label="decimal temporary", span="1968-1968", cluster="CommandLine.StringUtil.IsNumeric(string)", color=red, community=0, file="CommandLine.cs"];
m11_712 [label="return decimal.TryParse(value, out temporary);", span="1969-1969", cluster="CommandLine.StringUtil.IsNumeric(string)", color=red, community=0, file="CommandLine.cs"];
m11_713 [label="Exit CommandLine.StringUtil.IsNumeric(string)", span="1966-1966", cluster="CommandLine.StringUtil.IsNumeric(string)", file="CommandLine.cs"];
m11_388 [label="Entry CommandLine.OptionInfo.SetDefault(object)", span="986-986", cluster="CommandLine.OptionInfo.SetDefault(object)", file="CommandLine.cs"];
m11_389 [label=_hasDefaultValue, span="988-988", cluster="CommandLine.OptionInfo.SetDefault(object)", color=red, community=0, file="CommandLine.cs"];
m11_391 [label="_property.SetValue(options, _defaultValue, null)", span="994-994", cluster="CommandLine.OptionInfo.SetDefault(object)", color=red, community=0, file="CommandLine.cs"];
m11_390 [label=_setValueLock, span="990-990", cluster="CommandLine.OptionInfo.SetDefault(object)", color=red, community=0, file="CommandLine.cs"];
m11_392 [label=Exception, span="996-996", cluster="CommandLine.OptionInfo.SetDefault(object)", color=red, community=0, file="CommandLine.cs"];
m11_393 [label="throw new CommandLineParserException(''Bad default value.'', e);", span="998-998", cluster="CommandLine.OptionInfo.SetDefault(object)", color=red, community=0, file="CommandLine.cs"];
m11_394 [label="Exit CommandLine.OptionInfo.SetDefault(object)", span="986-986", cluster="CommandLine.OptionInfo.SetDefault(object)", file="CommandLine.cs"];
m11_135 [label="Entry string.Compare(string, string, bool)", span="0-0", cluster="string.Compare(string, string, bool)", file="CommandLine.cs"];
m11_294 [label="Entry CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="812-812", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs"];
m11_295 [label="attribute != null", span="814-814", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="CommandLine.cs"];
m11_296 [label="_required = attribute.Required", span="816-816", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="CommandLine.cs"];
m11_297 [label="_helpText = attribute.HelpText", span="817-817", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="CommandLine.cs"];
m11_298 [label="_shortName = attribute.ShortName", span="818-818", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="CommandLine.cs"];
m11_299 [label="_longName = attribute.LongName", span="819-819", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="CommandLine.cs"];
m11_300 [label="_mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="820-820", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="CommandLine.cs"];
m11_301 [label="_defaultValue = attribute.DefaultValue", span="821-821", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="CommandLine.cs"];
m11_302 [label="_hasDefaultValue = attribute.HasDefaultValue", span="822-822", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="CommandLine.cs"];
m11_303 [label="_attribute = attribute", span="823-823", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="CommandLine.cs"];
m11_305 [label="property != null", span="828-828", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="CommandLine.cs"];
m11_306 [label="_property = property", span="829-829", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="CommandLine.cs"];
m11_304 [label="throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", span="826-826", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="CommandLine.cs"];
m11_307 [label="throw new ArgumentNullException(''property'', ''The property is mandatory'');", span="831-831", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="CommandLine.cs"];
m11_308 [label="Exit CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="812-812", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs"];
m11_715 [label="CommandLine.HelpOptionAttribute", span="", file="CommandLine.cs"];
m11_716 [label="CommandLine.OptionAttribute", span="", file="CommandLine.cs"];
m11_717 [label="CommandLine.OptionListAttribute", span="", file="CommandLine.cs"];
m11_718 [label="CommandLine.ValueListAttribute", span="", file="CommandLine.cs"];
m11_719 [label="CommandLine.ArgumentParser", span="", file="CommandLine.cs"];
m11_720 [label="CommandLine.BadOptionInfo", span="", file="CommandLine.cs"];
m11_721 [label="CommandLine.LongOptionParser", span="", file="CommandLine.cs"];
m11_722 [label="CommandLine.OneCharStringEnumerator", span="", file="CommandLine.cs"];
m11_723 [label="CommandLine.OptionGroupParser", span="", file="CommandLine.cs"];
m11_724 [label="CommandLine.OptionInfo", span="", file="CommandLine.cs"];
m11_725 [label="CommandLine.OptionMap.MutuallyExclusiveInfo", span="", file="CommandLine.cs"];
m11_726 [label="CommandLine.OptionMap", span="", file="CommandLine.cs"];
m11_727 [label="CommandLine.Pair<TLeft, TRight>", span="", file="CommandLine.cs"];
m11_728 [label="CommandLine.ParsingError", span="", file="CommandLine.cs"];
m11_729 [label="CommandLine.PostParsingState", span="", file="CommandLine.cs"];
m11_730 [label="CommandLine.StringArrayEnumerator", span="", file="CommandLine.cs"];
m11_731 [label="CommandLine.TargetWrapper", span="", file="CommandLine.cs"];
m11_732 [label="CommandLine.CommandLineOptionsBase", span="", file="CommandLine.cs"];
m11_733 [label="CommandLine.CommandLineParserSettings", span="", file="CommandLine.cs"];
m11_734 [label="CommandLine.CommandLineParser", span="", file="CommandLine.cs"];
m14_14 [label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserBaseFixture.cs"];
m14_15 [label="Result.Should().Be.False()", span="66-66", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserBaseFixture.cs"];
m14_16 [label="Result = null", span="67-67", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserBaseFixture.cs"];
m14_17 [label="Exit CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserBaseFixture.cs"];
m14_18 [label="Entry Unk.False", span="", cluster="Unk.False", file="CommandLineParserBaseFixture.cs"];
m14_4 [label="Entry CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", span="53-53", cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", file="CommandLineParserBaseFixture.cs"];
m14_5 [label="Parser = new CommandLineParser()", span="55-55", cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", file="CommandLineParserBaseFixture.cs"];
m14_6 [label="Exit CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", span="53-53", cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", file="CommandLineParserBaseFixture.cs"];
m14_0 [label="Entry CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", span="41-41", cluster="CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", file="CommandLineParserBaseFixture.cs"];
m14_1 [label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''en-US'')", span="47-47", cluster="CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", file="CommandLineParserBaseFixture.cs"];
m14_2 [label="Exit CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", span="41-41", cluster="CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", file="CommandLineParserBaseFixture.cs"];
m14_7 [label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1681-1681", cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParserBaseFixture.cs"];
m14_13 [label="Entry Unk.True", span="", cluster="Unk.True", file="CommandLineParserBaseFixture.cs"];
m14_3 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="CommandLineParserBaseFixture.cs"];
m14_12 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="CommandLineParserBaseFixture.cs"];
m14_8 [label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserBaseFixture.cs"];
m14_9 [label="Result.Should().Be.True()", span="60-60", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserBaseFixture.cs"];
m14_10 [label="Result = null", span="61-61", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserBaseFixture.cs"];
m14_11 [label="Exit CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserBaseFixture.cs"];
m14_19 [label="CommandLine.Tests.CommandLineParserBaseFixture", span="", file="CommandLineParserBaseFixture.cs"];
m16_10 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="62-62", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs"];
m16_11 [label="var options = new SimpleOptions()", span="64-64", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs"];
m16_12 [label="Result = base.Parser.ParseArguments(new string[] { ''-s'', ''something'' }, options)", span="65-65", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs"];
m16_14 [label="options.StringValue.Should().Equal(''something'')", span="68-68", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs"];
m16_15 [label="Console.WriteLine(options)", span="69-69", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs"];
m16_13 [label="ResultShouldBeTrue()", span="67-67", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs"];
m16_16 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="62-62", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs"];
m16_178 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="302-302", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_179 [label="var options = new NumberSetOptions()", span="304-304", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_180 [label="Result = base.Parser.ParseArguments(new string[] { ''--int'' }, options)", span="305-305", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_181 [label="ResultShouldBeFalse()", span="307-307", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_182 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="302-302", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_262 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", span="445-445", cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_263 [label="var options = new NumberSetOptions()", span="447-447", cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_264 [label="Result = base.Parser.ParseArguments(new string[] { ''-b'', short.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="448-448", cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_265 [label="ResultShouldBeFalse()", span="450-450", cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_266 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", span="445-445", cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_244 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", span="413-413", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs"];
m16_245 [label="var options = new NumberSetOptions()", span="415-415", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs"];
m16_246 [label="Result = base.Parser.ParseArguments(new string[] { ''-d-4096.1024'' }, options)", span="416-416", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs"];
m16_248 [label="options.DoubleValue.Should().Equal(-4096.1024D)", span="419-419", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs"];
m16_247 [label="ResultShouldBeTrue()", span="418-418", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs"];
m16_249 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", span="413-413", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs"];
m16_286 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", span="481-481", cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_287 [label="var options = new NumberSetOptions()", span="483-483", cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_288 [label="Result = base.Parser.ParseArguments(new string[] { ''-f'', double.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="484-484", cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_289 [label="ResultShouldBeFalse()", span="486-486", cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_290 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", span="481-481", cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_0 [label="Entry CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", span="43-43", cluster="CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", file="CommandLineParserFixture.cs"];
m16_1 [label="Exit CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", span="43-43", cluster="CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", file="CommandLineParserFixture.cs"];
m16_126 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", span="33-33", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", file="CommandLineParserFixture.cs"];
m16_30 [label="Entry Unk.True", span="", cluster="Unk.True", file="CommandLineParserFixture.cs"];
m16_83 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="CommandLineParserFixture.cs"];
m16_121 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", span="35-35", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", file="CommandLineParserFixture.cs"];
m16_256 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", span="433-433", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs"];
m16_257 [label="var options = new NumberSetOptions()", span="435-435", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs"];
m16_258 [label="Result = base.Parser.ParseArguments(new string[] { ''--double=-4096.1024'' }, options)", span="436-436", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs"];
m16_260 [label="options.DoubleValue.Should().Equal(-4096.1024D)", span="439-439", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs"];
m16_259 [label="ResultShouldBeTrue()", span="438-438", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs"];
m16_261 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", span="433-433", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs"];
m16_93 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="CommandLineParserFixture.cs"];
m16_285 [label="Entry float.ToString(System.IFormatProvider)", span="0-0", cluster="float.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs"];
m16_250 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", span="423-423", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs"];
m16_251 [label="var options = new NumberSetOptions()", span="425-425", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs"];
m16_252 [label="Result = base.Parser.ParseArguments(new string[] { ''--double'', ''-4096.1024'' }, options)", span="426-426", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs"];
m16_254 [label="options.DoubleValue.Should().Equal(-4096.1024D)", span="429-429", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs"];
m16_253 [label="ResultShouldBeTrue()", span="428-428", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs"];
m16_255 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", span="423-423", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs"];
m16_94 [label="Entry CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", span="35-35", cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="CommandLineParserFixture.cs"];
m16_7 [label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="56-56", cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs"];
m16_8 [label="base.Parser.ParseArguments(new string[] { }, null)", span="58-58", cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs"];
m16_9 [label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="56-56", cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs"];
m16_17 [label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserFixture.cs"];
m16_75 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="145-145", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m16_76 [label="var options = new SimpleOptionsWithEnum()", span="147-147", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m16_77 [label="Result = base.Parser.ParseArguments(new string[] { ''-s'', ''data.bin'', ''-a'', ''ReadWrite'' }, options)", span="149-149", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m16_79 [label="options.StringValue.Should().Equal(''data.bin'')", span="152-152", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m16_80 [label="options.FileAccess.Should().Equal(FileAccess.ReadWrite)", span="153-153", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m16_81 [label="Console.WriteLine(options)", span="154-154", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m16_78 [label="ResultShouldBeTrue()", span="151-151", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m16_82 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="145-145", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m16_74 [label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserFixture.cs"];
m16_162 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1553-1553", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLineParserFixture.cs"];
m16_226 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="383-383", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs"];
m16_227 [label="var options = new NumberSetOptions()", span="385-385", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs"];
m16_228 [label="Result = base.Parser.ParseArguments(new string[] { ''--int'', ''-4096'' }, options)", span="386-386", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs"];
m16_230 [label="options.IntegerValue.Should().Equal(-4096)", span="389-389", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs"];
m16_229 [label="ResultShouldBeTrue()", span="388-388", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs"];
m16_231 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="383-383", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs"];
m16_163 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="275-275", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_164 [label="var options = new SimpleOptions()", span="277-277", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_165 [label="Result = base.Parser.ParseArguments(new string[] { ''--string'' }, options)", span="278-278", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_166 [label="ResultShouldBeFalse()", span="280-280", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_167 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="275-275", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_31 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="87-87", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m16_32 [label="var options = new BooleanSetOptions()", span="89-89", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m16_33 [label="Result = base.Parser.ParseArguments(new string[] { ''-ca'', ''-d65'' }, options)", span="90-90", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m16_35 [label="options.BooleanThree.Should().Be.True()", span="93-93", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m16_36 [label="options.BooleanOne.Should().Be.True()", span="94-94", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m16_37 [label="options.BooleanTwo.Should().Be.False()", span="95-95", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m16_38 [label="options.NonBooleanValue.Should().Equal(65D)", span="96-96", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m16_39 [label="Console.WriteLine(options)", span="97-97", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m16_34 [label="ResultShouldBeTrue()", span="92-92", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m16_40 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="87-87", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m16_68 [label="Entry CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="134-134", cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs"];
m16_69 [label="var options = new SimpleOptions()", span="136-136", cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs"];
m16_70 [label="Result = base.Parser.ParseArguments(new string[] { ''-i=10'' }, options)", span="138-138", cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs"];
m16_72 [label="Console.WriteLine(options)", span="140-140", cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs"];
m16_71 [label="ResultShouldBeFalse()", span="139-139", cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs"];
m16_73 [label="Exit CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="134-134", cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs"];
m16_280 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", span="472-472", cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_281 [label="var options = new NumberSetOptions()", span="474-474", cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_282 [label="Result = base.Parser.ParseArguments(new string[] { ''-l'', float.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="475-475", cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_283 [label="ResultShouldBeFalse()", span="477-477", cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_284 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", span="472-472", cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_18 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="CommandLineParserFixture.cs"];
m16_53 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="115-115", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m16_54 [label="var options = new SimpleOptionsWithOptionList()", span="117-117", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m16_55 [label="Result = base.Parser.ParseArguments(new string[] {\r\n                                ''-k'', ''string1:stringTwo:stringIII'', ''-s'', ''test-file.txt'' }, options)", span="118-119", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m16_57 [label="options.SearchKeywords[0].Should().Equal(''string1'')", span="122-122", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m16_58 [label="Console.WriteLine(options.SearchKeywords[0])", span="123-123", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m16_59 [label="options.SearchKeywords[1].Should().Equal(''stringTwo'')", span="124-124", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m16_60 [label="Console.WriteLine(options.SearchKeywords[1])", span="125-125", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m16_61 [label="options.SearchKeywords[2].Should().Equal(''stringIII'')", span="126-126", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m16_62 [label="Console.WriteLine(options.SearchKeywords[2])", span="127-127", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m16_63 [label="options.StringValue.Should().Equal(''test-file.txt'')", span="128-128", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m16_64 [label="Console.WriteLine(options.StringValue)", span="129-129", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m16_56 [label="ResultShouldBeTrue()", span="121-121", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m16_65 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="115-115", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m16_193 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="329-329", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_194 [label="var options = new NumberSetOptions()", span="331-331", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_195 [label="Result = base.Parser.ParseArguments(new string[] { ''--double'' }, options)", span="332-332", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_196 [label="ResultShouldBeFalse()", span="334-334", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_197 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="329-329", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_6 [label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLineParserFixture.cs"];
m16_153 [label="Entry CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="261-261", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m16_154 [label="ICommandLineParser local = new CommandLineParser(new CommandLineParserSettings(false))", span="263-263", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m16_155 [label="var options = new MixedCaseOptions()", span="264-264", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m16_156 [label="Result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="265-265", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m16_158 [label="options.AlfaValue.Should().Equal(''alfa'')", span="268-268", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m16_159 [label="options.BetaValue.Should().Equal(''beta'')", span="269-269", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m16_157 [label="ResultShouldBeTrue()", span="267-267", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m16_160 [label="Exit CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="261-261", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m16_220 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="374-374", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs"];
m16_221 [label="var options = new NumberSetOptions()", span="376-376", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs"];
m16_222 [label="Result = base.Parser.ParseArguments(new string[] { ''-i-4096'' }, options)", span="377-377", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs"];
m16_224 [label="options.IntegerValue.Should().Equal(-4096)", span="380-380", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs"];
m16_223 [label="ResultShouldBeTrue()", span="379-379", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs"];
m16_225 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="374-374", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs"];
m16_20 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="CommandLineParserFixture.cs"];
m16_42 [label="Entry Unk.False", span="", cluster="Unk.False", file="CommandLineParserFixture.cs"];
m16_41 [label="Entry CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", span="35-35", cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="CommandLineParserFixture.cs"];
m16_66 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", span="35-35", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", file="CommandLineParserFixture.cs"];
m16_137 [label="Entry CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", span="239-239", cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs"];
m16_138 [label="ICommandLineParser local = new CommandLineParser()", span="241-241", cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs"];
m16_139 [label="var options = new MixedCaseOptions()", span="242-242", cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs"];
m16_140 [label="Result = local.ParseArguments(new string[] { ''-a'', ''alfa'', ''--beta-OPTION'', ''beta'' }, options)", span="243-243", cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs"];
m16_142 [label="options.AlfaValue.Should().Equal(''alfa'')", span="246-246", cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs"];
m16_143 [label="options.BetaValue.Should().Equal(''beta'')", span="247-247", cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs"];
m16_141 [label="ResultShouldBeTrue()", span="245-245", cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs"];
m16_144 [label="Exit CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", span="239-239", cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs"];
m16_84 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", span="158-158", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m16_85 [label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="160-160", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m16_86 [label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="161-161", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m16_91 [label="Thread.CurrentThread.CurrentCulture = actualCulture", span="168-168", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m16_87 [label="var options = new NumberSetOptions()", span="162-162", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m16_88 [label="Result = base.Parser.ParseArguments(new string[] { ''-d'', ''10,986'' }, options)", span="163-163", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m16_90 [label="options.DoubleValue.Should().Equal(10.986D)", span="166-166", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m16_89 [label="ResultShouldBeTrue()", span="165-165", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m16_92 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", span="158-158", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m16_132 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", span="228-228", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs"];
m16_133 [label="var options = new SimpleOptions()", span="230-230", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs"];
m16_134 [label="Result = base.Parser.ParseArguments(new string[] { ''--extend'' }, options)", span="231-231", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs"];
m16_135 [label="ResultShouldBeFalse()", span="233-233", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs"];
m16_136 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", span="228-228", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs"];
m16_21 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="73-73", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m16_22 [label="var options = new SimpleOptions()", span="75-75", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m16_23 [label="Result = base.Parser.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="76-77", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m16_25 [label="options.StringValue.Should().Equal(''another string'')", span="80-80", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m16_26 [label="options.IntegerValue.Should().Equal(100)", span="81-81", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m16_27 [label="options.BooleanValue.Should().Be.True()", span="82-82", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m16_28 [label="Console.WriteLine(options)", span="83-83", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m16_24 [label="ResultShouldBeTrue()", span="79-79", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m16_29 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="73-73", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m16_204 [label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="350-350", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m16_205 [label="var options = new SimpleOptionsWithValueList()", span="352-352", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m16_206 [label="Result = base.Parser.ParseArguments(new string[] { ''-sparser.xml'', ''-'', ''--switch'' }, options)", span="353-353", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m16_208 [label="options.StringValue.Should().Equal(''parser.xml'')", span="356-356", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m16_209 [label="options.BooleanValue.Should().Be.True()", span="357-357", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m16_210 [label="options.Items.Count.Should().Equal(1)", span="358-358", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m16_211 [label="options.Items[0].Should().Equal(''-'')", span="359-359", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m16_207 [label="ResultShouldBeTrue()", span="355-355", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m16_212 [label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="350-350", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m16_145 [label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1681-1681", cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParserFixture.cs"];
m16_161 [label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1692-1692", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParserFixture.cs"];
m16_147 [label="Entry CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="251-251", cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs"];
m16_148 [label="ICommandLineParser local = new CommandLineParser()", span="253-253", cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs"];
m16_149 [label="var options = new MixedCaseOptions()", span="254-254", cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs"];
m16_150 [label="Result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="255-255", cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs"];
m16_151 [label="ResultShouldBeFalse()", span="257-257", cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs"];
m16_152 [label="Exit CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="251-251", cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs"];
m16_214 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", span="365-365", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs"];
m16_215 [label="var options = new SimpleOptions()", span="367-367", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs"];
m16_216 [label="Result = base.Parser.ParseArguments(new string[] { ''-i'', ''-4096'' }, options)", span="368-368", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs"];
m16_218 [label="options.IntegerValue.Should().Equal(-4096)", span="371-371", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs"];
m16_217 [label="ResultShouldBeTrue()", span="370-370", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs"];
m16_219 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", span="365-365", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs"];
m16_2 [label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="49-49", cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs"];
m16_3 [label="base.Parser.ParseArguments(null, new SimpleOptions())", span="51-51", cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs"];
m16_4 [label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="49-49", cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs"];
m16_122 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", span="211-211", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs"];
m16_123 [label="var options = new SimpleOptionsWithBadDefaults()", span="213-213", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs"];
m16_124 [label="base.Parser.ParseArguments(new string[] {}, options)", span="214-214", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs"];
m16_125 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", span="211-211", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs"];
m16_213 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", file="CommandLineParserFixture.cs"];
m16_112 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", span="33-33", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m16_198 [label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="340-340", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs"];
m16_199 [label="var options = new SimpleOptions()", span="342-342", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs"];
m16_200 [label="Result = base.Parser.ParseArguments(new string[] { ''--string'', ''-'' }, options)", span="343-343", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs"];
m16_202 [label="options.StringValue.Should().Equal(''-'')", span="346-346", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs"];
m16_201 [label="ResultShouldBeTrue()", span="345-345", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs"];
m16_203 [label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="340-340", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs"];
m16_5 [label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33", cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="CommandLineParserFixture.cs"];
m16_268 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", span="454-454", cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_269 [label="var options = new NumberSetOptions()", span="456-456", cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_270 [label="Result = base.Parser.ParseArguments(new string[] { ''-s'', int.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="457-457", cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_271 [label="ResultShouldBeFalse()", span="459-459", cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_272 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", span="454-454", cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_232 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="392-392", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs"];
m16_233 [label="var options = new NumberSetOptions()", span="394-394", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs"];
m16_234 [label="Result = base.Parser.ParseArguments(new string[] { ''--int=-4096'' }, options)", span="395-395", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs"];
m16_236 [label="options.IntegerValue.Should().Equal(-4096)", span="398-398", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs"];
m16_235 [label="ResultShouldBeTrue()", span="397-397", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs"];
m16_237 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="392-392", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs"];
m16_67 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="CommandLineParserFixture.cs"];
m16_43 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="101-101", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m16_44 [label="var options = new BooleanSetOptions()", span="103-103", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m16_45 [label="Result = base.Parser.ParseArguments(new string[] { ''-b'', ''--double=9'' }, options)", span="104-104", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m16_47 [label="options.BooleanTwo.Should().Be.True()", span="107-107", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m16_48 [label="options.BooleanOne.Should().Be.False()", span="108-108", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m16_49 [label="options.BooleanThree.Should().Be.False()", span="109-109", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m16_50 [label="options.NonBooleanValue.Should().Equal(9D)", span="110-110", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m16_51 [label="Console.WriteLine(options)", span="111-111", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m16_46 [label="ResultShouldBeTrue()", span="106-106", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m16_52 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="101-101", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m16_168 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="284-284", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_169 [label="var options = new NumberSetOptions()", span="286-286", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_170 [label="Result = base.Parser.ParseArguments(new string[] { ''--byte'' }, options)", span="287-287", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_171 [label="ResultShouldBeFalse()", span="289-289", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_172 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="284-284", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_183 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="311-311", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_184 [label="var options = new NumberSetOptions()", span="313-313", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_185 [label="Result = base.Parser.ParseArguments(new string[] { ''--long'' }, options)", span="314-314", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_186 [label="ResultShouldBeFalse()", span="316-316", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_187 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="311-311", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_146 [label="Entry CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", span="33-33", cluster="CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", file="CommandLineParserFixture.cs"];
m16_238 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", span="403-403", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs"];
m16_239 [label="var options = new NumberSetOptions()", span="405-405", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs"];
m16_240 [label="Result = base.Parser.ParseArguments(new string[] { ''-d'', ''-4096.1024'' }, options)", span="406-406", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs"];
m16_242 [label="options.DoubleValue.Should().Equal(-4096.1024D)", span="409-409", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs"];
m16_241 [label="ResultShouldBeTrue()", span="408-408", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs"];
m16_243 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", span="403-403", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs"];
m16_291 [label="Entry double.ToString(System.IFormatProvider)", span="0-0", cluster="double.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs"];
m16_113 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", span="198-198", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs"];
m16_114 [label="var options = new SimpleOptionsWithDefaultArray()", span="200-200", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs"];
m16_115 [label="Result = base.Parser.ParseArguments(new string[] { ''-y'', ''4'', ''5'', ''6'' }, options)", span="201-201", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs"];
m16_117 [label="options.StringArrayValue.Should().Equal(new string[] { ''a'', ''b'', ''c'' })", span="204-204", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs"];
m16_118 [label="options.IntegerArrayValue.Should().Equal(new int[] { 4, 5, 6 })", span="205-205", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs"];
m16_119 [label="options.DoubleArrayValue.Should().Equal(new double[] { 1.1, 2.2, 3.3 })", span="206-206", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs"];
m16_116 [label="ResultShouldBeTrue()", span="203-203", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs"];
m16_120 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", span="198-198", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs"];
m16_274 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", span="463-463", cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_275 [label="var options = new NumberSetOptions()", span="465-465", cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_276 [label="Result = base.Parser.ParseArguments(new string[] { ''-i'', long.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="466-466", cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_277 [label="ResultShouldBeFalse()", span="468-468", cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_278 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", span="463-463", cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m16_267 [label="Entry short.ToString(System.IFormatProvider)", span="0-0", cluster="short.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs"];
m16_95 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", span="172-172", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m16_96 [label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="174-174", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m16_97 [label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="175-175", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m16_102 [label="Thread.CurrentThread.CurrentCulture = actualCulture", span="182-182", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m16_98 [label="var options = new NumberSetOptions()", span="176-176", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m16_99 [label="Result = base.Parser.ParseArguments(new string[] { ''--n-double'', ''12,32982'' }, options)", span="177-177", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m16_101 [label="options.NullableDoubleValue.Should().Equal(12.32982D)", span="180-180", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m16_100 [label="ResultShouldBeTrue()", span="179-179", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m16_103 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", span="172-172", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m16_273 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs"];
m16_188 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="320-320", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_189 [label="var options = new NumberSetOptions()", span="322-322", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_190 [label="Result = base.Parser.ParseArguments(new string[] { ''--float'' }, options)", span="323-323", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_191 [label="ResultShouldBeFalse()", span="325-325", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_192 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="320-320", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_104 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", span="186-186", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m16_105 [label="var options = new SimpleOptionsWithDefaults()", span="188-188", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m16_106 [label="Result = base.Parser.ParseArguments(new string[] {}, options)", span="189-189", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m16_108 [label="options.StringValue.Should().Equal(''str'')", span="192-192", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m16_109 [label="options.IntegerValue.Should().Equal(9)", span="193-193", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m16_110 [label="options.BooleanValue.Should().Be.True()", span="194-194", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m16_107 [label="ResultShouldBeTrue()", span="191-191", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m16_111 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", span="186-186", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m16_279 [label="Entry long.ToString(System.IFormatProvider)", span="0-0", cluster="long.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs"];
m16_19 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="CommandLineParserFixture.cs"];
m16_127 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", span="219-219", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs"];
m16_128 [label="var options = new SimpleOptions()", span="221-221", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs"];
m16_129 [label="Result = base.Parser.ParseArguments(new string[] { ''-x'' }, options)", span="222-222", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs"];
m16_130 [label="ResultShouldBeFalse()", span="224-224", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs"];
m16_131 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", span="219-219", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs"];
m16_173 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="293-293", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_174 [label="var options = new NumberSetOptions()", span="295-295", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_175 [label="Result = base.Parser.ParseArguments(new string[] { ''--short'' }, options)", span="296-296", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_176 [label="ResultShouldBeFalse()", span="298-298", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_177 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="293-293", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m16_292 [label="CommandLine.Tests.CommandLineParserFixture", span="", file="CommandLineParserFixture.cs"];
m18_12 [label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLineParserSettingsFixture.cs"];
m18_0 [label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", span="41-41", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs"];
m18_1 [label="var writer = new StringWriter()", span="43-43", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs"];
m18_2 [label="ICommandLineParser parser = new CommandLineParser(new CommandLineParserSettings(writer))", span="44-44", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs"];
m18_6 [label="writer.ToString().Should().Equal(''MockOptions::GetUsage()'')", span="50-50", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs"];
m18_3 [label="var options = new SimpleOptionsWithHelpOption()", span="45-45", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs"];
m18_4 [label="bool success = parser.ParseArguments(new string[] {''--help''}, options)", span="47-47", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs"];
m18_5 [label="success.Should().Be.False()", span="49-49", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs"];
m18_7 [label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", span="41-41", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs"];
m18_11 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.SimpleOptionsWithHelpOption()", span="33-33", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.SimpleOptionsWithHelpOption()", file="CommandLineParserSettingsFixture.cs"];
m18_14 [label="Entry Unk.False", span="", cluster="Unk.False", file="CommandLineParserSettingsFixture.cs"];
m18_8 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="CommandLineParserSettingsFixture.cs"];
m18_15 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="CommandLineParserSettingsFixture.cs"];
m18_36 [label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1486-1486", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParserSettingsFixture.cs"];
m18_9 [label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1692-1692", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParserSettingsFixture.cs"];
m18_27 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1543-1543", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLineParserSettingsFixture.cs"];
m18_28 [label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", span="69-69", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs"];
m18_29 [label="var writer = new StringWriter()", span="71-71", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs"];
m18_30 [label="ICommandLineParser parser = new CommandLineParser(new CommandLineParserSettings())", span="72-72", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs"];
m18_32 [label="bool success = parser.ParseArguments(new string[] { ''--help'' }, options, writer)", span="75-75", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs"];
m18_34 [label="writer.ToString().Should().Equal(''MockOptions::GetUsage()'')", span="78-78", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs"];
m18_31 [label="var options = new SimpleOptionsWithHelpOption()", span="73-73", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs"];
m18_33 [label="success.Should().Be.False()", span="77-77", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs"];
m18_35 [label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", span="69-69", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs"];
m18_10 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1564-1564", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLineParserSettingsFixture.cs"];
m18_16 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="CommandLineParserSettingsFixture.cs"];
m18_13 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="CommandLineParserSettingsFixture.cs"];
m18_17 [label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", span="54-54", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs"];
m18_18 [label="var writer = new StringWriter()", span="56-56", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs"];
m18_19 [label="var settings = new CommandLineParserSettings()", span="57-57", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs"];
m18_20 [label="settings.HelpWriter = writer", span="58-58", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs"];
m18_25 [label="writer.ToString().Should().Equal(''MockOptions::GetUsage()'')", span="65-65", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs"];
m18_21 [label="ICommandLineParser parser = new CommandLineParser(settings)", span="59-59", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs"];
m18_22 [label="var options = new SimpleOptionsWithHelpOption()", span="60-60", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs"];
m18_23 [label="bool success = parser.ParseArguments(new string[] { ''--help'' }, options)", span="62-62", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs"];
m18_24 [label="success.Should().Be.False()", span="64-64", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs"];
m18_26 [label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", span="54-54", cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs"];
m20_4 [label="Entry CommandLine.Tests.Mocks.ComplexOptions.ToString()", span="53-53", cluster="CommandLine.Tests.Mocks.ComplexOptions.ToString()", file="ComplexOptions.cs"];
m20_5 [label="return DebugStringUtil.ConvertOptionsToString(this);", span="55-55", cluster="CommandLine.Tests.Mocks.ComplexOptions.ToString()", file="ComplexOptions.cs"];
m20_6 [label="Exit CommandLine.Tests.Mocks.ComplexOptions.ToString()", span="53-53", cluster="CommandLine.Tests.Mocks.ComplexOptions.ToString()", file="ComplexOptions.cs"];
m20_0 [label="Entry CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", span="35-35", cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="ComplexOptions.cs"];
m20_1 [label="StartOffset = 0", span="37-37", cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="ComplexOptions.cs"];
m20_2 [label="Bytes = 0", span="38-38", cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="ComplexOptions.cs"];
m20_3 [label="Exit CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", span="35-35", cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="ComplexOptions.cs"];
m20_7 [label="Entry CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", span="39-39", cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="ComplexOptions.cs"];
m20_8 [label="CommandLine.Tests.Mocks.ComplexOptions", span="", file="ComplexOptions.cs"];
m22_13 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)", file="CopyrightInfoFixture.cs"];
m22_2 [label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", span="54-54", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs"];
m22_3 [label="var yearsPart = new StringBuilder(years.Length * 4)", span="56-56", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs"];
m22_4 [label=years, span="58-58", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs"];
m22_7 [label="yearsPart.Append(string.Concat(''''', y))", span="62-62", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs"];
m22_8 [label="yearsPart.Append(y)", span="64-64", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs"];
m22_9 [label="yearsPart.Append('', '')", span="65-65", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs"];
m22_10 [label="yearsPart.Remove(yearsPart.Length - 2, 2)", span="67-67", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs"];
m22_11 [label="return yearsPart.ToString();", span="69-69", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs"];
m22_5 [label="string y = year.ToString(CultureInfo.InvariantCulture)", span="60-60", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs"];
m22_6 [label="y.Length == 2", span="61-61", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs"];
m22_12 [label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", span="54-54", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs"];
m22_44 [label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", span="115-115", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", file="CopyrightInfoFixture.cs"];
m22_45 [label="new CopyrightInfo(''Authors, Inc.'')", span="117-117", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", file="CopyrightInfoFixture.cs"];
m22_46 [label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", span="115-115", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", file="CopyrightInfoFixture.cs"];
m22_27 [label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", span="83-83", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", file="CopyrightInfoFixture.cs"];
m22_28 [label="var copyright = new CopyrightInfo(true, ''X & Y Group'', 2006, 2007)", span="85-85", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", file="CopyrightInfoFixture.cs"];
m22_29 [label="copyright.ToString().Should().Equal(''Copyright (C) 2006, 2007 X & Y Group'')", span="87-87", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", file="CopyrightInfoFixture.cs"];
m22_30 [label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", span="83-83", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", file="CopyrightInfoFixture.cs"];
m22_0 [label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", span="44-44", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", file="CopyrightInfoFixture.cs"];
m22_1 [label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", span="44-44", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", file="CopyrightInfoFixture.cs"];
m22_15 [label="Entry string.Concat(string, string)", span="0-0", cluster="string.Concat(string, string)", file="CopyrightInfoFixture.cs"];
m22_47 [label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", span="121-121", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", file="CopyrightInfoFixture.cs"];
m22_48 [label="var info = new CopyleftInfo(true, ''Free Company, Inc.'', 96, 97, 98, 2005)", span="123-123", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", file="CopyrightInfoFixture.cs"];
m22_49 [label="info.ToString().Should().Equal(''Copyleft (C) '96, '97, '98, 2005 Free Company, Inc.'')", span="125-125", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", file="CopyrightInfoFixture.cs"];
m22_50 [label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", span="121-121", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", file="CopyrightInfoFixture.cs"];
m22_25 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="CopyrightInfoFixture.cs"];
m22_35 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="179-179", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="CopyrightInfoFixture.cs"];
m22_51 [label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", span="130-130", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs"];
m22_52 [label="var info = new CopyrightInfo (''ManOnTheMoon, Inc.'', 2019)", span="132-132", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs"];
m22_53 [label="int i=0", span="134-134", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs"];
m22_55 [label="info.ToString().Length.Should().Equal(37)", span="136-136", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs"];
m22_54 [label="i<10", span="134-134", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs"];
m22_56 [label="i++", span="134-134", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs"];
m22_57 [label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", span="130-130", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs"];
m22_31 [label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", span="91-91", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", file="CopyrightInfoFixture.cs"];
m22_32 [label="var copyright = new CopyrightInfo(''W & Z, Inc.'', 2005, 2007)", span="93-93", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", file="CopyrightInfoFixture.cs"];
m22_33 [label="copyright.ToString().Should().Equal(''Copyright (C) 2005 - 2007 W & Z, Inc.'')", span="95-95", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", file="CopyrightInfoFixture.cs"];
m22_34 [label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", span="91-91", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", file="CopyrightInfoFixture.cs"];
m22_17 [label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0", cluster="System.Text.StringBuilder.Remove(int, int)", file="CopyrightInfoFixture.cs"];
m22_23 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="193-193", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfoFixture.cs"];
m22_43 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="166-166", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="CopyrightInfoFixture.cs"];
m22_36 [label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", span="99-99", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs"];
m22_37 [label="var copyright = new CopyrightInfo(''CommandLine, Ltd'', 1999, 2003, 2004, 2007)", span="101-101", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs"];
m22_38 [label="copyright.ToString().Should().Equal(''Copyright (C) 1999 - 2003, 2004 - 2007 CommandLine, Ltd'')", span="103-103", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs"];
m22_39 [label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", span="99-99", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs"];
m22_24 [label="Entry CommandLine.Text.CopyrightInfo.ToString()", span="209-209", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfoFixture.cs"];
m22_18 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="CopyrightInfoFixture.cs"];
m22_16 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="CopyrightInfoFixture.cs"];
m22_14 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="CopyrightInfoFixture.cs"];
m22_26 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="CopyrightInfoFixture.cs"];
m22_19 [label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", span="75-75", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs"];
m22_20 [label="var copyright = new CopyrightInfo(false, ''Authors, Inc.'', 2007)", span="77-77", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs"];
m22_21 [label="copyright.ToString().Should().Equal(''Copyright (c) 2007 Authors, Inc.'')", span="79-79", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs"];
m22_22 [label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", span="75-75", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs"];
m22_40 [label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", span="108-108", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", file="CopyrightInfoFixture.cs"];
m22_41 [label="new CopyrightInfo(null, 2000)", span="110-110", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", file="CopyrightInfoFixture.cs"];
m22_42 [label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", span="108-108", cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", file="CopyrightInfoFixture.cs"];
m23_33 [label="Entry System.Text.StringBuilder.Append(object)", span="0-0", cluster="System.Text.StringBuilder.Append(object)", file="DebugStringUtil.cs"];
m23_16 [label="Entry CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", span="59-59", cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs"];
m23_19 [label="var baseOA = attr as BaseOptionAttribute", span="61-61", cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs"];
m23_22 [label="builder.Append(baseOA.ShortName)", span="67-67", cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs"];
m23_24 [label="builder.Append(''/'')", span="70-70", cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs"];
m23_26 [label="builder.Append(baseOA.LongName)", span="75-75", cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs"];
m23_27 [label="builder.Append('': '')", span="77-77", cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs"];
m23_28 [label="builder.Append(field.GetValue(instance))", span="78-78", cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs"];
m23_29 [label="builder.Append(Environment.NewLine)", span="79-79", cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs"];
m23_20 [label="baseOA != null", span="63-63", cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs"];
m23_21 [label="baseOA.HasShortName", span="65-65", cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs"];
m23_23 [label="baseOA.HasLongName", span="68-68", cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs"];
m23_25 [label="baseOA.HasLongName", span="73-73", cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs"];
m23_30 [label="Exit CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", span="59-59", cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs"];
m23_31 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="DebugStringUtil.cs"];
m23_12 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)", file="DebugStringUtil.cs"];
m23_0 [label="Entry CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", span="39-39", cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs"];
m23_1 [label="var builder = new StringBuilder(256)", span="41-41", cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs"];
m23_2 [label="var type = instance.GetType()", span="42-42", cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs"];
m23_8 [label="AppendBaseOptionAttribute(builder, instance, field, attr)", span="51-51", cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs"];
m23_9 [label="AppendValueListAttribute(builder, instance, field, attr)", span="52-52", cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs"];
m23_10 [label="return builder.ToString();", span="56-56", cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs"];
m23_3 [label="var fields = type.GetFields()", span="43-43", cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs"];
m23_4 [label=fields, span="45-45", cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs"];
m23_5 [label="object[] attrs = field.GetCustomAttributes(false)", span="47-47", cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs"];
m23_6 [label="attrs.Length > 0", span="48-48", cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs"];
m23_7 [label="object attr = attrs[0]", span="50-50", cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs"];
m23_11 [label="Exit CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", span="39-39", cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs"];
m23_13 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DebugStringUtil.cs"];
m23_32 [label="Entry System.Reflection.FieldInfo.GetValue(object)", span="0-0", cluster="System.Reflection.FieldInfo.GetValue(object)", file="DebugStringUtil.cs"];
m23_18 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="DebugStringUtil.cs"];
m23_14 [label="Entry System.Type.GetFields()", span="0-0", cluster="System.Type.GetFields()", file="DebugStringUtil.cs"];
m23_15 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="DebugStringUtil.cs"];
m23_17 [label="Entry CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", span="83-83", cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs"];
m23_34 [label="var valueList = attr as ValueListAttribute", span="85-85", cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs"];
m23_36 [label="IList<string> values = (IList<string>)field.GetValue(instance)", span="89-89", cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs"];
m23_38 [label="builder.Append(''non-option value: '')", span="92-92", cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs"];
m23_39 [label="builder.Append(value)", span="93-93", cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs"];
m23_40 [label="builder.Append(Environment.NewLine)", span="94-94", cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs"];
m23_35 [label="valueList != null", span="87-87", cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs"];
m23_37 [label=values, span="90-90", cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs"];
m23_41 [label="Exit CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", span="83-83", cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs"];
m25_19 [label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1335-1335", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="EnumeratorsFixture.cs"];
m25_20 [label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="532-532", cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="EnumeratorsFixture.cs"];
m25_23 [label="Entry Unk.False", span="", cluster="Unk.False", file="EnumeratorsFixture.cs"];
m25_47 [label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="628-628", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="EnumeratorsFixture.cs"];
m25_25 [label="Entry Unk.True", span="", cluster="Unk.True", file="EnumeratorsFixture.cs"];
m25_24 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="EnumeratorsFixture.cs"];
m25_0 [label="Entry CommandLine.Tests.EnumeratorsFixture.StringIteration()", span="39-39", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs"];
m25_1 [label="string valueOne = ''one''", span="41-41", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs"];
m25_2 [label="string valueTwo = ''two''", span="42-42", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs"];
m25_4 [label="string[] values = { valueOne, valueTwo, valueThree }", span="45-45", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs"];
m25_7 [label="e.Current.Should().Equal(valueOne)", span="49-49", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs"];
m25_3 [label="string valueThree = ''three''", span="43-43", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs"];
m25_8 [label="e.Next.Should().Equal(valueTwo)", span="50-50", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs"];
m25_11 [label="e.Current.Should().Equal(valueTwo)", span="55-55", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs"];
m25_12 [label="e.Next.Should().Equal(valueThree)", span="56-56", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs"];
m25_15 [label="e.Current.Should().Equal(valueThree)", span="61-61", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs"];
m25_5 [label="IArgumentEnumerator e = new StringArrayEnumerator(values)", span="46-46", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs"];
m25_6 [label="e.MoveNext()", span="47-47", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs"];
m25_9 [label="e.IsLast.Should().Be.False()", span="51-51", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs"];
m25_10 [label="e.MoveNext()", span="53-53", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs"];
m25_13 [label="e.IsLast.Should().Be.False()", span="57-57", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs"];
m25_14 [label="e.MoveNext()", span="59-59", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs"];
m25_16 [label="e.Next.Should().Be.Null()", span="62-62", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs"];
m25_17 [label="e.IsLast.Should().Be.True()", span="63-63", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs"];
m25_18 [label="Exit CommandLine.Tests.EnumeratorsFixture.StringIteration()", span="39-39", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs"];
m25_22 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="EnumeratorsFixture.cs"];
m25_21 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="EnumeratorsFixture.cs"];
m25_48 [label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="527-527", cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="EnumeratorsFixture.cs"];
m25_26 [label="Entry CommandLine.Tests.EnumeratorsFixture.CharIteration()", span="67-67", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs"];
m25_27 [label="IArgumentEnumerator e = new OneCharStringEnumerator(''abcd'')", span="69-69", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs"];
m25_28 [label="e.MoveNext()", span="70-70", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs"];
m25_29 [label="e.Current.Should().Equal(''a'')", span="72-72", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs"];
m25_30 [label="e.Next.Should().Equal(''b'')", span="73-73", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs"];
m25_31 [label="e.GetRemainingFromNext().Should().Equal(''bcd'')", span="74-74", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs"];
m25_32 [label="e.IsLast.Should().Be.False()", span="75-75", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs"];
m25_33 [label="e.MoveNext()", span="77-77", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs"];
m25_34 [label="e.Current.Should().Equal(''b'')", span="79-79", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs"];
m25_35 [label="e.Next.Should().Equal(''c'')", span="80-80", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs"];
m25_36 [label="e.GetRemainingFromNext().Should().Equal(''cd'')", span="81-81", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs"];
m25_37 [label="e.IsLast.Should().Be.False()", span="82-82", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs"];
m25_38 [label="e.MoveNext()", span="84-84", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs"];
m25_39 [label="e.Current.Should().Equal(''c'')", span="86-86", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs"];
m25_40 [label="e.Next.Should().Equal(''d'')", span="87-87", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs"];
m25_41 [label="e.GetRemainingFromNext().Should().Equal(''d'')", span="88-88", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs"];
m25_42 [label="e.IsLast.Should().Be.False()", span="89-89", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs"];
m25_43 [label="e.MoveNext()", span="91-91", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs"];
m25_44 [label="e.Current.Should().Equal(''d'')", span="93-93", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs"];
m25_45 [label="e.IsLast.Should().Be.True()", span="94-94", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs"];
m25_46 [label="Exit CommandLine.Tests.EnumeratorsFixture.CharIteration()", span="67-67", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs"];
m29_0 [label="Entry CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", span="41-41", cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs"];
m29_1 [label="var hi = new HeadingInfo(''myprog'')", span="43-43", cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs"];
m29_2 [label="string s = hi", span="44-44", cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs"];
m29_5 [label="hi.WriteMessage(''a message'', sw)", span="49-49", cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs"];
m29_3 [label="s.Should().Equal(''myprog'')", span="46-46", cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs"];
m29_4 [label="var sw = new StringWriter()", span="48-48", cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs"];
m29_6 [label="sw.ToString().Should().Equal(''myprog: a message'' + Environment.NewLine)", span="51-51", cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs"];
m29_7 [label="Exit CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", span="41-41", cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs"];
m29_11 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="HeadingInfoFixture.cs"];
m29_13 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="HeadingInfoFixture.cs"];
m29_22 [label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="298-298", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfoFixture.cs"];
m29_8 [label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="286-286", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HeadingInfoFixture.cs"];
m29_10 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="HeadingInfoFixture.cs"];
m29_12 [label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="343-343", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfoFixture.cs"];
m29_9 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="HeadingInfoFixture.cs"];
m29_14 [label="Entry CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", span="55-55", cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs"];
m29_15 [label="var hi = new HeadingInfo(''myecho'', ''2.5'')", span="57-57", cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs"];
m29_16 [label="string s = hi", span="58-58", cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs"];
m29_19 [label="hi.WriteMessage(''hello unit-test'', sw)", span="63-63", cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs"];
m29_17 [label="s.Should().Equal(''myecho 2.5'')", span="60-60", cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs"];
m29_18 [label="var sw = new StringWriter()", span="62-62", cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs"];
m29_20 [label="sw.ToString().Should().Equal(''myecho: hello unit-test'' + Environment.NewLine)", span="65-65", cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs"];
m29_21 [label="Exit CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", span="55-55", cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs"];
m31_39 [label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="HelpOptionAttributeFixture.cs"];
m31_15 [label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="946-946", cluster="CommandLine.Text.HelpText.AddOptions(object)", file="HelpOptionAttributeFixture.cs"];
m31_27 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="HelpOptionAttributeFixture.cs"];
m31_24 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="HelpOptionAttributeFixture.cs"];
m31_14 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="921-921", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpOptionAttributeFixture.cs"];
m31_30 [label="Entry CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", span="87-87", cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs"];
m31_31 [label="var options = new MockOptions()", span="89-89", cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs"];
m31_32 [label="var writer = new StringWriter()", span="90-90", cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs"];
m31_33 [label="Result = base.Parser.ParseArguments(\r\n                    new string[] { ''math.xml'', ''-oresult.xml'' }, options, writer)", span="92-93", cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs"];
m31_35 [label="string helpText = writer.ToString()", span="97-97", cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs"];
m31_34 [label="ResultShouldBeFalse()", span="95-95", cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs"];
m31_36 [label="(helpText.Length > 0).Should().Be.True()", span="98-98", cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs"];
m31_37 [label="Console.Write(helpText)", span="100-100", cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs"];
m31_38 [label="Exit CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", span="87-87", cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs"];
m31_41 [label="Entry System.Console.Write(string)", span="0-0", cluster="System.Console.Write(string)", file="HelpOptionAttributeFixture.cs"];
m31_12 [label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="298-298", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpOptionAttributeFixture.cs"];
m31_13 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="166-166", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="HelpOptionAttributeFixture.cs"];
m31_25 [label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1486-1486", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="HelpOptionAttributeFixture.cs"];
m31_40 [label="Entry Unk.True", span="", cluster="Unk.True", file="HelpOptionAttributeFixture.cs"];
m31_16 [label="Entry CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", span="74-74", cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs"];
m31_17 [label="var options = new MockOptions()", span="76-76", cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs"];
m31_18 [label="var writer = new StringWriter()", span="77-77", cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs"];
m31_19 [label="Result = base.Parser.ParseArguments(\r\n                    new string[] { ''-imath.xml'', ''-oresult.xml'' }, options, writer)", span="79-80", cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs"];
m31_21 [label="writer.ToString().Length.Should().Equal(0)", span="83-83", cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs"];
m31_20 [label="ResultShouldBeTrue()", span="82-82", cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs"];
m31_22 [label="Exit CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", span="74-74", cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs"];
m31_42 [label="Entry CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", span="104-104", cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs"];
m31_43 [label="var options = new MockOptions()", span="106-106", cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs"];
m31_44 [label="var writer = new StringWriter()", span="107-107", cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs"];
m31_45 [label="Result = base.Parser.ParseArguments(\r\n                    new string[] { ''--help'' }, options, writer)", span="109-110", cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs"];
m31_47 [label="string helpText = writer.ToString()", span="114-114", cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs"];
m31_46 [label="ResultShouldBeFalse()", span="112-112", cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs"];
m31_48 [label="(helpText.Length > 0).Should().Be.True()", span="115-115", cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs"];
m31_49 [label="Exit CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", span="104-104", cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs"];
m31_0 [label="Entry CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", span="58-58", cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs"];
m31_1 [label="var help = new HelpText(new HeadingInfo(''MyProgram'', ''1.0''))", span="60-60", cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs"];
m31_2 [label="help.Copyright = new CopyrightInfo(''Authors, Inc.'', 2007)", span="61-61", cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs"];
m31_3 [label="help.AddPreOptionsLine(''This software is under the terms of the XYZ License'')", span="62-62", cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs"];
m31_4 [label="help.AddPreOptionsLine(''(http://license-text.org/show.cgi?xyz).'')", span="63-63", cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs"];
m31_5 [label="help.AddPreOptionsLine(''Usage: myprog --input equations-file.xml -o result-file.xml'')", span="64-64", cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs"];
m31_6 [label="help.AddPreOptionsLine(''       myprog -i equations-file.xml --paralell'')", span="65-65", cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs"];
m31_7 [label="help.AddPreOptionsLine(''       myprog -i equations-file.xml -vo result-file.xml'')", span="66-66", cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs"];
m31_8 [label="help.AddOptions(this)", span="67-67", cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs"];
m31_9 [label="return help;", span="68-68", cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs"];
m31_10 [label="Exit CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", span="58-58", cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs"];
m31_29 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="HelpOptionAttributeFixture.cs"];
m31_11 [label="Entry CommandLine.Text.HelpText.HelpText(string)", span="681-681", cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpOptionAttributeFixture.cs"];
m31_28 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="HelpOptionAttributeFixture.cs"];
m31_23 [label="Entry CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.MockOptions()", span="43-43", cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.MockOptions()", file="HelpOptionAttributeFixture.cs"];
m31_26 [label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="HelpOptionAttributeFixture.cs"];
m31_50 [label="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions", span="", file="HelpOptionAttributeFixture.cs"];
m31_51 [label="CommandLine.Tests.HelpOptionAttributeFixture", span="", file="HelpOptionAttributeFixture.cs"];
m33_125 [label="Entry string.Format(System.IFormatProvider, string, object)", span="0-0", cluster="string.Format(System.IFormatProvider, string, object)", file="HelpTextFixture.cs"];
m33_175 [label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", span="398-398", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs"];
m33_176 [label="var options = new ComplexOptionsWithHelp()", span="400-400", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs"];
m33_177 [label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''0'', ''-ap'' }, options)", span="402-403", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs"];
m33_178 [label="result.Should().Be.False()", span="405-405", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs"];
m33_179 [label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", span="398-398", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs"];
m33_154 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1543-1543", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="HelpTextFixture.cs"];
m33_195 [label="Entry CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", span="433-433", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs"];
m33_196 [label="string optionHelp = null", span="436-436", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs"];
m33_197 [label="e.Option.ShortName.Value", span="438-438", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", color=green, community=0, file="HelpTextFixture.cs"];
m33_202 [label="e.Option.Required", span="449-449", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs"];
m33_204 [label="e.Option.HelpText = optionHelp", span="454-454", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs"];
m33_198 [label="'v'", span="440-440", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", color=green, community=0, file="HelpTextFixture.cs"];
m33_200 [label="'i'", span="444-444", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", color=green, community=0, file="HelpTextFixture.cs"];
m33_199 [label="optionHelp = ''Kommentar umfassend Operationen.''", span="441-441", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs"];
m33_201 [label="optionHelp = ''Gibt den Eingang an zu bearbeitenden Datei.''", span="445-445", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs"];
m33_203 [label="optionHelp = ''Erforderlich. '' + optionHelp", span="451-451", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs"];
m33_205 [label="Exit CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", span="433-433", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs"];
m33_152 [label="Entry CommandLine.Tests.Mocks.RPEOptions.RPEOptions()", span="6-6", cluster="CommandLine.Tests.Mocks.RPEOptions.RPEOptions()", file="HelpTextFixture.cs"];
m33_193 [label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1735-1735", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="HelpTextFixture.cs"];
m33_138 [label="Entry CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", span="279-279", cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs"];
m33_139 [label="var sw = new StringWriter()", span="281-281", cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs"];
m33_140 [label="var options = new RPEOptions()", span="282-282", cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs"];
m33_141 [label="var parser = new CommandLineParser(new CommandLineParserSettings {\r\n                MutuallyExclusive = true, CaseSensitive = true, HelpWriter = sw})", span="283-284", cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs"];
m33_144 [label="var outsw = sw.ToString()", span="289-289", cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs"];
m33_142 [label="var result = parser.ParseArguments(new string[] {''--option-b'', ''hello'', ''-cWORLD''}, options)", span="285-285", cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs"];
m33_143 [label="result.Should().Be.False()", span="287-287", cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs"];
m33_145 [label="Console.WriteLine(outsw)", span="291-291", cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs"];
m33_146 [label="var lines = outsw.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="293-293", cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs"];
m33_147 [label="lines[0].Should().Equal(''--option-b option violates format.'')", span="295-295", cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs"];
m33_148 [label="lines[1].Should().Equal(''-c/--option-c option violates format.'')", span="296-296", cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs"];
m33_149 [label="lines[2].Should().Equal(''-a required option is missing.'')", span="297-297", cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs"];
m33_150 [label="Exit CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", span="279-279", cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs"];
m33_181 [label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", span="409-409", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs"];
m33_182 [label="var options = new ComplexOptionsWithHelp()", span="411-411", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs"];
m33_183 [label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''zero'', ''-pa'' }, options)", span="413-414", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs"];
m33_184 [label="result.Should().Be.False()", span="416-416", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs"];
m33_185 [label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", span="409-409", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs"];
m33_58 [label="Entry CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="173-173", cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs"];
m33_59 [label="_helpText.MaximumDisplayWidth = 40", span="175-175", cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs"];
m33_60 [label="_helpText.AddOptions(new MockOptionsWithLongDescriptionAndNoSpaces())", span="176-176", cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs"];
m33_61 [label="string help = _helpText.ToString()", span="177-177", cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs"];
m33_62 [label="string[] lines = help.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="179-179", cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs"];
m33_63 [label="lines[2].Should().Equal(''  v, verbose    Before '')", span="180-180", cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs"];
m33_64 [label="lines[3].Should().Equal(''                012345678901234567890123'')", span="181-181", cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs"];
m33_65 [label="lines[4].Should().Equal(''                After'')", span="182-182", cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs"];
m33_66 [label="lines[5].Should().Equal(''  input-file    Before '')", span="183-183", cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs"];
m33_67 [label="lines[6].Should().Equal(''                012345678901234567890123'')", span="184-184", cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs"];
m33_68 [label="lines[7].Should().Equal(''                456789 After'')", span="185-185", cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs"];
m33_69 [label="Exit CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="173-173", cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs"];
m33_21 [label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="946-946", cluster="CommandLine.Text.HelpText.AddOptions(object)", file="HelpTextFixture.cs"];
m33_121 [label="Entry CommandLine.Text.HelpText.HelpText()", span="651-651", cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextFixture.cs"];
m33_134 [label="Entry CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", span="271-271", cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs"];
m33_135 [label="var local = new HelpText()", span="273-273", cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs"];
m33_136 [label="local.ToString().Should().Equal('''')", span="275-275", cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs"];
m33_137 [label="Exit CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", span="271-271", cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs"];
m33_20 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="921-921", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextFixture.cs"];
m33_151 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="HelpTextFixture.cs"];
m33_163 [label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", span="89-89", cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", file="HelpTextFixture.cs"];
m33_19 [label="Entry string.Concat(string, string)", span="0-0", cluster="string.Concat(string, string)", file="HelpTextFixture.cs"];
m33_86 [label="Entry CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", span="209-209", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs"];
m33_87 [label="var local = new HelpText(''Customizing Test.'')", span="211-211", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs"];
m33_88 [label="local.FormatOptionHelpText += new EventHandler<FormatOptionHelpTextEventArgs>(CustomizeOptionsFormat_FormatOptionHelpText)", span="212-212", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs"];
m33_89 [label="local.AddPreOptionsLine(''Pre-Options.'')", span="213-213", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs"];
m33_90 [label="local.AddOptions(new MockOptionsWithDescription())", span="214-214", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs"];
m33_91 [label="local.AddPostOptionsLine(''Post-Options.'')", span="215-215", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs"];
m33_92 [label="string help = local.ToString()", span="217-217", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs"];
m33_93 [label="Console.WriteLine(help)", span="219-219", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs"];
m33_94 [label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="221-221", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs"];
m33_95 [label="lines[0].Should().Equal(''Customizing Test.'')", span="222-222", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs"];
m33_96 [label="lines[1].Should().Equal(''Pre-Options.'')", span="223-223", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs"];
m33_97 [label="lines[3].Should().Equal(''  v, verbose       Kommentar umfassend Operationen.'')", span="224-224", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs"];
m33_98 [label="lines[4].Should().Equal(''  i, input-file    Erforderlich. Gibt den Eingang an zu bearbeitenden Datei.'')", span="225-225", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs"];
m33_99 [label="lines[6].Should().Equal(''Post-Options.'')", span="226-226", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs"];
m33_100 [label="Exit CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", span="209-209", cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs"];
m33_170 [label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="387-387", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs"];
m33_171 [label="var options = new ComplexOptionsWithHelp()", span="389-389", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs"];
m33_172 [label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-i0'' }, options)", span="391-392", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs"];
m33_173 [label="result.Should().Be.False()", span="394-394", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs"];
m33_174 [label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="387-387", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs"];
m33_14 [label="Entry CommandLine.Text.HelpText.HelpText(string)", span="681-681", cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextFixture.cs"];
m33_16 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="179-179", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="HelpTextFixture.cs"];
m33_44 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="HelpTextFixture.cs"];
m33_57 [label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescription.MockOptionsWithLongDescription()", span="65-65", cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescription.MockOptionsWithLongDescription()", file="HelpTextFixture.cs"];
m33_102 [label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", span="56-56", cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", file="HelpTextFixture.cs"];
m33_158 [label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="365-365", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs"];
m33_159 [label="var options = new ComplexOptionsWithHelp()", span="367-367", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs"];
m33_160 [label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''abc'' }, options)", span="369-370", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs"];
m33_161 [label="result.Should().Be.False()", span="372-372", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs"];
m33_162 [label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="365-365", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs"];
m33_42 [label="Entry CommandLine.Text.HelpText.ToString()", span="1131-1131", cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextFixture.cs"];
m33_156 [label="Entry Unk.False", span="", cluster="Unk.False", file="HelpTextFixture.cs"];
m33_157 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="HelpTextFixture.cs"];
m33_25 [label="Entry CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", span="131-131", cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs"];
m33_26 [label="_helpText.AddPreOptionsLine(string.Empty)", span="133-133", cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs"];
m33_27 [label="Exit CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", span="131-131", cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs"];
m33_15 [label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="298-298", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextFixture.cs"];
m33_46 [label="Entry CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", span="157-157", cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs"];
m33_47 [label="_helpText.MaximumDisplayWidth = 40", span="159-159", cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs"];
m33_48 [label="_helpText.AddOptions(new MockOptionsWithLongDescription())", span="160-160", cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs"];
m33_49 [label="string help = _helpText.ToString()", span="161-161", cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs"];
m33_50 [label="string[] lines = help.Split(new[] {Environment.NewLine}, StringSplitOptions.None)", span="163-163", cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs"];
m33_51 [label="lines[2].Should().Equal(''  v, verbose    This is the description'')", span="164-164", cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs"];
m33_52 [label="lines[3].Should().Equal(''                of the verbosity to '')", span="166-166", cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs"];
m33_53 [label="lines[4].Should().Equal(''                test out the wrapping '')", span="167-167", cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs"];
m33_54 [label="lines[5].Should().Equal(''                capabilities of the '')", span="168-168", cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs"];
m33_55 [label="lines[6].Should().Equal(''                Help Text.'')", span="169-169", cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs"];
m33_56 [label="Exit CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", span="157-157", cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs"];
m33_123 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="166-166", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="HelpTextFixture.cs"];
m33_122 [label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="286-286", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HelpTextFixture.cs"];
m33_41 [label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="936-936", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextFixture.cs"];
m33_153 [label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1692-1692", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="HelpTextFixture.cs"];
m33_194 [label="Entry Unk.Exactly", span="", cluster="Unk.Exactly", file="HelpTextFixture.cs"];
m33_18 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="HelpTextFixture.cs"];
m33_126 [label="Entry CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="253-253", cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs"];
m33_127 [label="var local = new HelpText {\r\n                AddDashesToOption = true,\r\n                Heading = new HeadingInfo(''AddOptionsWithDashes''),\r\n                Copyright = new CopyrightInfo(''Author'', DateTime.Now.Year)\r\n            }", span="255-259", cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", color=green, community=0, file="HelpTextFixture.cs"];
m33_128 [label="local.AddOptions(new MockOptionsSimple())", span="260-260", cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", color=green, community=0, file="HelpTextFixture.cs"];
m33_129 [label="string help = local.ToString()", span="262-262", cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", color=green, community=0, file="HelpTextFixture.cs"];
m33_130 [label="Console.WriteLine(help)", span="264-264", cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", color=green, community=0, file="HelpTextFixture.cs"];
m33_131 [label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="266-266", cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs"];
m33_132 [label="lines[3].Should().Equal(''  -s, --something    Input something here.'')", span="267-267", cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", color=green, community=0, file="HelpTextFixture.cs"];
m33_133 [label="Exit CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="253-253", cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs"];
m33_164 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1564-1564", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="HelpTextFixture.cs"];
m33_17 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", span="1004-1004", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", file="HelpTextFixture.cs"];
m33_101 [label="Entry EventHandler<FormatOptionHelpTextEventArgs>.cstr", span="", cluster="EventHandler<FormatOptionHelpTextEventArgs>.cstr", file="HelpTextFixture.cs"];
m33_165 [label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="376-376", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs"];
m33_166 [label="var options = new ComplexOptionsWithHelp()", span="378-378", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs"];
m33_167 [label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-j0'' }, options)", span="380-381", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs"];
m33_168 [label="result.Should().Be.False()", span="383-383", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs"];
m33_169 [label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="376-376", cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs"];
m33_71 [label="Entry CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="189-189", cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs"];
m33_72 [label="var local = new HelpText(''Heading Info.'')", span="191-191", cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs"];
m33_73 [label="local.MaximumDisplayWidth = 40", span="192-192", cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs"];
m33_74 [label="local.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')", span="193-193", cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs"];
m33_75 [label="local.AddOptions(new MockOptions())", span="194-194", cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs"];
m33_76 [label="local.AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="195-195", cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs"];
m33_77 [label="string help = local.ToString()", span="197-197", cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs"];
m33_78 [label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="199-199", cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs"];
m33_79 [label="lines[1].Should().Equal(''Before '')", span="200-200", cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs"];
m33_80 [label="lines[2].Should().Equal(''0123456789012345678901234567890123456789'')", span="201-201", cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs"];
m33_81 [label="lines[3].Should().Equal(''012 After'')", span="202-202", cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs"];
m33_82 [label="lines[lines.Length - 3].Should().Equal(''Before '')", span="203-203", cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs"];
m33_83 [label="lines[lines.Length - 2].Should().Equal(''0123456789012345678901234567890123456789'')", span="204-204", cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs"];
m33_84 [label="lines[lines.Length - 1].Should().Equal('' After'')", span="205-205", cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs"];
m33_85 [label="Exit CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="189-189", cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs"];
m33_186 [label="Entry CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", span="421-421", cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs"];
m33_187 [label="var options = new ComplexOptions()", span="423-423", cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs"];
m33_188 [label="var writer = new StringWriter()", span="424-424", cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs"];
m33_189 [label="new CommandLineParser(new CommandLineParserSettings(false,  false, writer)).ParseArguments(new string[0], options, writer)", span="426-426", cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs"];
m33_190 [label="options.InternalLastPostParsingState.Errors.Should().Count.Exactly(2)", span="428-428", cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs"];
m33_191 [label="Exit CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", span="421-421", cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs"];
m33_0 [label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="98-98", cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs"];
m33_1 [label="var help = new HelpText(new HeadingInfo(''unittest'', ''1.9''))", span="100-100", cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs"];
m33_2 [label="help.AdditionalNewLineAfterOption = true", span="101-101", cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs"];
m33_3 [label="help.Copyright = new CopyrightInfo(''CommandLine.dll Author'', 2005, 2011)", span="102-102", cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs"];
m33_4 [label="string errors = help.RenderParsingErrorsText(this, 2)", span="105-105", cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs"];
m33_6 [label="help.AddPreOptionsLine(string.Concat(Environment.NewLine, ''ERROR(S):''))", span="108-108", cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", color=green, community=0, file="HelpTextFixture.cs"];
m33_7 [label="help.AddPreOptionsLine(errors)", span="109-109", cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", color=green, community=0, file="HelpTextFixture.cs"];
m33_8 [label="help.AddPreOptionsLine(''This is free software. You may redistribute copies of it under the terms of'')", span="112-112", cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs"];
m33_9 [label="help.AddPreOptionsLine(''the MIT License <http://www.opensource.org/licenses/mit-license.php>.'')", span="113-113", cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs"];
m33_10 [label="help.AddPreOptionsLine(''Usage: Please run the unit...'')", span="114-114", cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs"];
m33_11 [label="help.AddOptions(this)", span="115-115", cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs"];
m33_12 [label="return help;", span="117-117", cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs"];
m33_5 [label="!string.IsNullOrEmpty(errors)", span="106-106", cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs"];
m33_13 [label="Exit CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="98-98", cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs"];
m33_103 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="HelpTextFixture.cs"];
m33_192 [label="Entry CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", span="35-35", cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="HelpTextFixture.cs"];
m33_40 [label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", span="47-47", cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", file="HelpTextFixture.cs"];
m33_70 [label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", span="74-74", cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", file="HelpTextFixture.cs"];
m33_28 [label="Entry CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="140-140", cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs"];
m33_29 [label="var local = new HelpText(''Heading Info.'')", span="142-142", cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs"];
m33_30 [label="local.AddPreOptionsLine(''This is a first pre-options line.'')", span="143-143", cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs"];
m33_31 [label="local.AddPreOptionsLine(''This is a second pre-options line.'')", span="144-144", cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs"];
m33_32 [label="local.AddOptions(new MockOptions())", span="145-145", cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs"];
m33_33 [label="local.AddPostOptionsLine(''This is a first post-options line.'')", span="146-146", cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs"];
m33_34 [label="local.AddPostOptionsLine(''This is a second post-options line.'')", span="147-147", cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs"];
m33_35 [label="string help = local.ToString()", span="149-149", cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs"];
m33_36 [label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="151-151", cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs"];
m33_37 [label="lines[lines.Length - 2].Should().Equal(''This is a first post-options line.'')", span="152-152", cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs"];
m33_38 [label="lines[lines.Length - 1].Should().Equal(''This is a second post-options line.'')", span="153-153", cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs"];
m33_39 [label="Exit CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="140-140", cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs"];
m33_22 [label="Entry CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="125-125", cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs"];
m33_23 [label="_helpText = new HelpText(new HeadingInfo(_ThisAssembly.Title, _ThisAssembly.Version))", span="127-127", cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs"];
m33_24 [label="Exit CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="125-125", cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs"];
m33_124 [label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", span="83-83", cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", file="HelpTextFixture.cs"];
m33_180 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1603-1603", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="HelpTextFixture.cs"];
m33_45 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="HelpTextFixture.cs"];
m33_43 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextFixture.cs"];
m33_155 [label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1717-1717", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="HelpTextFixture.cs"];
m33_104 [label="Entry CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="230-230", cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs"];
m33_105 [label="var year = DateTime.Now.Year", span="232-232", cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs"];
m33_106 [label="var local = new HelpText()", span="233-233", cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs"];
m33_108 [label="local.Copyright = new CopyrightInfo(''Author'', year)", span="235-235", cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs"];
m33_116 [label="lines[1].Should().Equal(string.Format(CultureInfo.InvariantCulture, ''Copyright (C) {0} Author'', year))", span="246-246", cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs"];
m33_107 [label="local.Heading = new HeadingInfo(''Parameterless Constructor Test.'')", span="234-234", cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs"];
m33_109 [label="local.AddPreOptionsLine(''Pre-Options.'')", span="236-236", cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs"];
m33_110 [label="local.AddOptions(new MockOptionsSimple())", span="237-237", cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs"];
m33_111 [label="local.AddPostOptionsLine(''Post-Options.'')", span="238-238", cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs"];
m33_112 [label="string help = local.ToString()", span="240-240", cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs"];
m33_113 [label="Console.WriteLine(help)", span="242-242", cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs"];
m33_114 [label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="244-244", cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs"];
m33_115 [label="lines[0].Should().Equal(''Parameterless Constructor Test.'')", span="245-245", cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs"];
m33_117 [label="lines[2].Should().Equal(''Pre-Options.'')", span="247-247", cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs"];
m33_118 [label="lines[4].Should().Equal(''  s, something    Input something here.'')", span="248-248", cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs"];
m33_119 [label="lines[6].Should().Equal(''Post-Options.'')", span="249-249", cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs"];
m33_120 [label="Exit CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="230-230", cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs"];
m33_206 [label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", span="", file="HelpTextFixture.cs"];
m33_207 [label="CommandLine.Text.Tests.HelpTextFixture", span="", file="HelpTextFixture.cs"];
m39_41 [label="Entry System.Array.FindLastIndex<T>(T[], System.Predicate<T>)", span="0-0", cluster="System.Array.FindLastIndex<T>(T[], System.Predicate<T>)", file="MultiLineTextAttribute.cs"];
m39_25 [label="Entry System.Array.ForEach<T>(T[], System.Action<T>)", span="0-0", cluster="System.Array.ForEach<T>(T[], System.Action<T>)", file="MultiLineTextAttribute.cs"];
m39_21 [label="Entry CommandLine.Text.MultiLineTextAttribute.AddToHelpText(System.Action<string>)", span="110-110", cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(System.Action<string>)", file="MultiLineTextAttribute.cs"];
m39_22 [label="var strArray = new string[] {_line1, _line2, _line3, _line4, _line5}", span="112-112", cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(System.Action<string>)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m39_23 [label="Array.ForEach( strArray, (line) =>\r\n            {\r\n                if (!string.IsNullOrEmpty(line)) { action( line ); }\r\n            })", span="113-116", cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(System.Action<string>)", color=green, community=1, file="MultiLineTextAttribute.cs"];
m39_24 [label="Exit CommandLine.Text.MultiLineTextAttribute.AddToHelpText(System.Action<string>)", span="110-110", cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(System.Action<string>)", file="MultiLineTextAttribute.cs"];
m39_17 [label="Entry CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string, string)", span="103-103", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs"];
m39_18 [label="Assumes.NotNullOrEmpty(line5, ''line5'')", span="106-106", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string, string)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m39_19 [label="_line5 = line5", span="107-107", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string, string)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m39_20 [label="Exit CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string, string)", span="103-103", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs"];
m39_37 [label="Entry CommandLine.Text.MultiLineTextAttribute.GetLastLineWithText(string[])", span="139-139", cluster="CommandLine.Text.MultiLineTextAttribute.GetLastLineWithText(string[])", file="MultiLineTextAttribute.cs"];
m39_38 [label="int index = Array.FindLastIndex(strArray, (str) => { return !string.IsNullOrEmpty(str); })", span="141-141", cluster="CommandLine.Text.MultiLineTextAttribute.GetLastLineWithText(string[])", color=green, community=0, file="MultiLineTextAttribute.cs"];
m39_39 [label="return index + 1;", span="144-144", cluster="CommandLine.Text.MultiLineTextAttribute.GetLastLineWithText(string[])", color=green, community=0, file="MultiLineTextAttribute.cs"];
m39_40 [label="Exit CommandLine.Text.MultiLineTextAttribute.GetLastLineWithText(string[])", span="139-139", cluster="CommandLine.Text.MultiLineTextAttribute.GetLastLineWithText(string[])", file="MultiLineTextAttribute.cs"];
m39_0 [label="Entry CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string)", span="46-46", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string)", file="MultiLineTextAttribute.cs"];
m39_1 [label="Assumes.NotNullOrEmpty(line1, ''line1'')", span="48-48", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m39_2 [label="_line1 = line1", span="49-49", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m39_3 [label="Exit CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string)", span="46-46", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string)", file="MultiLineTextAttribute.cs"];
m39_5 [label="Entry CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string)", span="58-58", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string)", file="MultiLineTextAttribute.cs"];
m39_6 [label="Assumes.NotNullOrEmpty(line2, ''line2'')", span="61-61", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m39_7 [label="_line2 = line2", span="62-62", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m39_8 [label="Exit CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string)", span="58-58", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string)", file="MultiLineTextAttribute.cs"];
m39_9 [label="Entry CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string)", span="72-72", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string)", file="MultiLineTextAttribute.cs"];
m39_10 [label="Assumes.NotNullOrEmpty(line3, ''line3'')", span="75-75", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m39_11 [label="_line3 = line3", span="76-76", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m39_12 [label="Exit CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string)", span="72-72", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string)", file="MultiLineTextAttribute.cs"];
m39_42 [label="Entry lambda expression", span="141-141", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m39_26 [label="Entry lambda expression", span="113-116", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m39_28 [label="action( line )", span="115-115", cluster="lambda expression", color=green, community=0, file="MultiLineTextAttribute.cs"];
m39_27 [label="!string.IsNullOrEmpty(line)", span="115-115", cluster="lambda expression", color=green, community=0, file="MultiLineTextAttribute.cs"];
m39_29 [label="Exit lambda expression", span="113-116", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m39_43 [label="return !string.IsNullOrEmpty(str);", span="141-141", cluster="lambda expression", color=green, community=0, file="MultiLineTextAttribute.cs"];
m39_44 [label="Exit lambda expression", span="141-141", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m39_30 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="MultiLineTextAttribute.cs"];
m39_32 [label="Entry CommandLine.Text.MultiLineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="119-119", cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="MultiLineTextAttribute.cs"];
m39_33 [label=before, span="123-123", cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m39_34 [label="AddToHelpText(helpText.AddPreOptionsLine)", span="125-125", cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m39_35 [label="AddToHelpText(helpText.AddPostOptionsLine)", span="129-129", cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m39_36 [label="Exit CommandLine.Text.MultiLineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="119-119", cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="MultiLineTextAttribute.cs"];
m39_31 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="MultiLineTextAttribute.cs"];
m39_4 [label="Entry CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", span="1004-1004", cluster="CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", file="MultiLineTextAttribute.cs"];
m39_13 [label="Entry CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string)", span="87-87", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string)", file="MultiLineTextAttribute.cs"];
m39_14 [label="Assumes.NotNullOrEmpty(line4, ''line4'')", span="90-90", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m39_15 [label="_line4 = line4", span="91-91", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m39_16 [label="Exit CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string)", span="87-87", cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string)", file="MultiLineTextAttribute.cs"];
m39_45 [label="System.Action<string>", span="", file="MultiLineTextAttribute.cs"];
m39_46 [label="CommandLine.Text.MultiLineTextAttribute", span="", file="MultiLineTextAttribute.cs"];
m40_9 [label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0", cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="MultiLineTextAttributeFixture.cs"];
m40_10 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="MultiLineTextAttributeFixture.cs"];
m40_8 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="MultiLineTextAttributeFixture.cs"];
m40_12 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="MultiLineTextAttributeFixture.cs"];
m40_0 [label="Entry CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", span="43-43", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs"];
m40_1 [label="IEnumerable<AssemblyLicenseAttribute> licenseAttributes = this.GetType().Assembly.GetCustomAttributes(typeof(AssemblyLicenseAttribute), false) as AssemblyLicenseAttribute[]", span="45-45", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs"];
m40_2 [label="licenseAttributes.Count().Should().Equal(1)", span="47-47", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs"];
m40_3 [label="string license = licenseAttributes.Single().Value", span="49-49", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs"];
m40_4 [label="string[] lines = license.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="50-50", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs"];
m40_5 [label="lines[0].Should().Equal(@''This is free software. You may redistribute copies of it under the terms of'')", span="51-51", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs"];
m40_6 [label="lines[1].Should().Equal(@''the MIT License <http://www.opensource.org/licenses/mit-license.php>.'')", span="52-52", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs"];
m40_7 [label="Exit CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", span="43-43", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs"];
m40_14 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)", file="MultiLineTextAttributeFixture.cs"];
m40_11 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="MultiLineTextAttributeFixture.cs"];
m40_13 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="MultiLineTextAttributeFixture.cs"];
m40_15 [label="Entry CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", span="56-56", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs"];
m40_16 [label="IEnumerable<AssemblyUsageAttribute> usageAttributes = this.GetType().Assembly.GetCustomAttributes(typeof(AssemblyUsageAttribute), false) as AssemblyUsageAttribute[]", span="58-58", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs"];
m40_17 [label="usageAttributes.Count().Should().Equal(1)", span="60-60", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs"];
m40_18 [label="usageAttributes.Single().Value.Should().Equal(@''[no usage, this is a dll]'' + Environment.NewLine)", span="61-61", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs"];
m40_19 [label="Exit CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", span="56-56", cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs"];
m40_20 [label="CommandLine.Text.Tests.MultiLineTextAttributeFixture", span="", file="MultiLineTextAttributeFixture.cs"];
m41_44 [label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", span="96-96", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs"];
m41_45 [label="var options = new OptionsWithMultipleSetAndOneOption()", span="98-98", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs"];
m41_46 [label="Result = base.Parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'' }, options)", span="99-99", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs"];
m41_47 [label="ResultShouldBeFalse()", span="101-101", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs"];
m41_48 [label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", span="96-96", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs"];
m41_14 [label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="MutuallyExclusiveParsingFixture.cs"];
m41_23 [label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="MutuallyExclusiveParsingFixture.cs"];
m41_18 [label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", span="56-56", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", file="MutuallyExclusiveParsingFixture.cs"];
m41_19 [label="var options = new OptionsWithDefaultSet()", span="58-58", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", file="MutuallyExclusiveParsingFixture.cs"];
m41_20 [label="Result = base.Parser.ParseArguments(new string[] { ''-i'', ''1'', ''--file=mystuff.xml'' }, options)", span="59-59", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", file="MutuallyExclusiveParsingFixture.cs"];
m41_21 [label="ResultShouldBeFalse()", span="61-61", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", file="MutuallyExclusiveParsingFixture.cs"];
m41_22 [label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", span="56-56", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", file="MutuallyExclusiveParsingFixture.cs"];
m41_49 [label="Entry CommandLine.Tests.Mocks.OptionsWithMultipleSetAndOneOption.OptionsWithMultipleSetAndOneOption()", span="35-35", cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSetAndOneOption.OptionsWithMultipleSetAndOneOption()", file="MutuallyExclusiveParsingFixture.cs"];
m41_2 [label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateInstance()", span="40-40", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateInstance()", file="MutuallyExclusiveParsingFixture.cs"];
m41_3 [label="Parser = new CommandLineParser(new CommandLineParserSettings {MutuallyExclusive = true})", span="42-42", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateInstance()", file="MutuallyExclusiveParsingFixture.cs"];
m41_4 [label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateInstance()", span="40-40", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateInstance()", file="MutuallyExclusiveParsingFixture.cs"];
m41_38 [label="Entry CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="35-35", cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="MutuallyExclusiveParsingFixture.cs"];
m41_31 [label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", span="76-76", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_32 [label="var options = new OptionsWithMultipleSet()", span="78-78", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_33 [label="Result = base.Parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'' }, options)", span="79-79", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_35 [label="options.Green.Should().Equal((byte) 167)", span="82-82", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_36 [label="options.Hue.Should().Equal((short) 205)", span="83-83", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_34 [label="ResultShouldBeTrue()", span="81-81", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_37 [label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", span="76-76", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_6 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1543-1543", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="MutuallyExclusiveParsingFixture.cs"];
m41_5 [label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1692-1692", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="MutuallyExclusiveParsingFixture.cs"];
m41_13 [label="Entry CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", span="35-35", cluster="CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", file="MutuallyExclusiveParsingFixture.cs"];
m41_24 [label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", span="65-65", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_25 [label="var options = new OptionsWithDefaultSet()", span="67-67", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_26 [label="Result = base.Parser.ParseArguments(new string[] { ''--file=mystuff.xml'', ''-v'' }, options)", span="68-68", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_28 [label="options.FileName.Should().Equal(''mystuff.xml'')", span="71-71", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_29 [label="options.Verbose.Should().Equal(true)", span="72-72", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_27 [label="ResultShouldBeTrue()", span="70-70", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_30 [label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", span="65-65", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_50 [label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", span="105-105", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_51 [label="var options = new OptionsWithMultipleSetAndOneOption()", span="107-107", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_52 [label="Result = base.Parser.ParseArguments(new string[] { ''-g100'', ''-h200'', ''-cRgbColorSet'' }, options)", span="108-108", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_54 [label="options.Green.Should().Equal((byte) 100)", span="111-111", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_55 [label="options.Hue.Should().Equal((short) 200)", span="112-112", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_56 [label="options.DefaultColorSet.Should().Equal(ColorSet.RgbColorSet)", span="113-113", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_53 [label="ResultShouldBeTrue()", span="110-110", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_57 [label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", span="105-105", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_39 [label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", span="87-87", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs"];
m41_40 [label="var options = new OptionsWithMultipleSet()", span="89-89", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs"];
m41_41 [label="Result = base.Parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'', ''--saturation=37'' }, options)", span="90-90", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs"];
m41_42 [label="ResultShouldBeFalse()", span="92-92", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs"];
m41_43 [label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", span="87-87", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs"];
m41_17 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="MutuallyExclusiveParsingFixture.cs"];
m41_0 [label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", span="38-38", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", file="MutuallyExclusiveParsingFixture.cs"];
m41_1 [label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", span="38-38", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", file="MutuallyExclusiveParsingFixture.cs"];
m41_16 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="MutuallyExclusiveParsingFixture.cs"];
m41_7 [label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", span="46-46", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_8 [label="var options = new OptionsWithDefaultSet()", span="48-48", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_9 [label="Result = base.Parser.ParseArguments(new string[] { ''--file=mystuff.xml'' }, options)", span="49-49", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_11 [label="options.FileName.Should().Equal(''mystuff.xml'')", span="52-52", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_10 [label="ResultShouldBeTrue()", span="51-51", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_12 [label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", span="46-46", cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs"];
m41_15 [label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="MutuallyExclusiveParsingFixture.cs"];
m41_58 [label="CommandLine.Tests.MutuallyExclusiveParsingFixture", span="", file="MutuallyExclusiveParsingFixture.cs"];
m43_0 [label="Entry CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", span="35-35", cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs"];
m43_1 [label="ByteValue = 0", span="37-37", cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs"];
m43_2 [label="ShortValue = 0", span="38-38", cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs"];
m43_3 [label="IntegerValue = 0", span="39-39", cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs"];
m43_4 [label="LongValue = 0", span="40-40", cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs"];
m43_5 [label="FloatValue = 0", span="41-41", cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs"];
m43_6 [label="DoubleValue = 0", span="42-42", cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs"];
m43_7 [label="Exit CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", span="35-35", cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs"];
m43_8 [label="CommandLine.Tests.Mocks.NumberSetOptions", span="", file="NumberSetOptions.cs"];
m46_12 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", span="57-57", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_13 [label="var options = new SimpleOptionsWithArray()", span="59-59", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_14 [label="Result = base.Parser.ParseArguments(new string[] { ''--strarr'', ''alfa'', ''beta'', ''gamma'' }, options)", span="60-60", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_16 [label="base.ElementsShouldBeEqual(new string[] { ''alfa'', ''beta'', ''gamma'' }, options.StringArrayValue)", span="63-63", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_15 [label="ResultShouldBeTrue()", span="62-62", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_17 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", span="57-57", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_56 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", span="123-123", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs"];
m46_57 [label="var options = new SimpleOptionsWithArrayAndValueList()", span="125-125", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs"];
m46_58 [label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-shere'', ''-i999'', ''--strarr=0'', ''1'', ''2'', ''3'', ''4'', ''5'', ''6'', ''7'', ''8'', ''9'' , ''--switch'', ''f1.xml'', ''f2.xml''}, options)", span="126-127", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs"];
m46_60 [label="options.StringValue.Should().Equal(''here'')", span="130-130", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs"];
m46_61 [label="options.IntegerValue.Should().Equal(999)", span="131-131", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs"];
m46_62 [label="base.ElementsShouldBeEqual(new string[] { ''0'', ''1'', ''2'', ''3'', ''4'', ''5'', ''6'', ''7'', ''8'', ''9'' }, options.StringArrayValue)", span="132-132", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs"];
m46_63 [label="options.BooleanValue.Should().Be.True()", span="133-133", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs"];
m46_64 [label="base.ElementsShouldBeEqual(new string[] { ''f1.xml'', ''f2.xml'' }, options.Items)", span="134-134", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs"];
m46_59 [label="ResultShouldBeTrue()", span="129-129", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs"];
m46_65 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", span="123-123", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs"];
m46_66 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithArrayAndValueList.SimpleOptionsWithArrayAndValueList()", span="35-35", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithArrayAndValueList.SimpleOptionsWithArrayAndValueList()", file="OptionArrayAttributeParsingFixture.cs"];
m46_83 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", span="164-164", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_84 [label="var options = new SimpleOptionsWithArray()", span="166-166", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_85 [label="Result = base.Parser.ParseArguments(new string[] { ''-y'', ''one'', ''2'', ''3'' }, options)", span="167-167", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_86 [label="ResultShouldBeFalse()", span="169-169", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_87 [label="options = new SimpleOptionsWithArray()", span="171-171", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_88 [label="Result = base.Parser.ParseArguments(new string[] { ''-yone'', ''2'', ''3'' }, options)", span="172-172", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_89 [label="ResultShouldBeFalse()", span="174-174", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_90 [label="options = new SimpleOptionsWithArray()", span="176-176", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_91 [label="Result = base.Parser.ParseArguments(new string[] { ''--intarr'', ''1'', ''two'', ''3'' }, options)", span="177-177", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_92 [label="ResultShouldBeFalse()", span="179-179", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_93 [label="options = new SimpleOptionsWithArray()", span="181-181", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_94 [label="Result = base.Parser.ParseArguments(new string[] { ''--intarr=1'', ''2'', ''three'' }, options)", span="182-182", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_95 [label="ResultShouldBeFalse()", span="184-184", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_96 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", span="164-164", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_18 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", span="67-67", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", file="OptionArrayAttributeParsingFixture.cs"];
m46_19 [label="var options = new SimpleOptionsWithArray()", span="69-69", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", file="OptionArrayAttributeParsingFixture.cs"];
m46_20 [label="Result = base.Parser.ParseArguments(new string[] { ''-zapple'', ''kiwi'' }, options)", span="70-70", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", file="OptionArrayAttributeParsingFixture.cs"];
m46_22 [label="base.ElementsShouldBeEqual(new string[] { ''apple'', ''kiwi'' }, options.StringArrayValue)", span="73-73", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", file="OptionArrayAttributeParsingFixture.cs"];
m46_21 [label="ResultShouldBeTrue()", span="72-72", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", file="OptionArrayAttributeParsingFixture.cs"];
m46_23 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", span="67-67", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", file="OptionArrayAttributeParsingFixture.cs"];
m46_55 [label="Entry Unk.True", span="", cluster="Unk.True", file="OptionArrayAttributeParsingFixture.cs"];
m46_97 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", span="189-189", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_98 [label="var options = new SimpleOptionsWithArray()", span="191-191", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_99 [label="Result = base.Parser.ParseArguments(new string[] { ''-y'' }, options)", span="192-192", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_100 [label="ResultShouldBeFalse()", span="194-194", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_101 [label="options = new SimpleOptionsWithArray()", span="196-196", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_102 [label="Result = base.Parser.ParseArguments(new string[] { ''--intarr'' }, options)", span="197-197", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_103 [label="ResultShouldBeFalse()", span="199-199", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_104 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", span="189-189", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_170 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", span="338-338", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_171 [label="base.Parser.ParseArguments(new string[] { ''-w'', ''1'', ''2'', ''3'' }, new SimpleOptionsWithBadOptionArray())", span="340-340", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_172 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", span="338-338", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_185 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="OptionArrayAttributeParsingFixture.cs"];
m46_46 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", span="109-109", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs"];
m46_47 [label="var options = new SimpleOptionsWithArray()", span="111-111", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs"];
m46_48 [label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-i'', ''191919'', ''-z'', ''one'', ''two'', ''three'', ''--switch'', ''--string=near'' }, options)", span="112-113", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs"];
m46_50 [label="options.IntegerValue.Should().Equal(191919)", span="116-116", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs"];
m46_51 [label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'' }, options.StringArrayValue)", span="117-117", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs"];
m46_52 [label="options.BooleanValue.Should().Be.True()", span="118-118", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs"];
m46_53 [label="options.StringValue.Should().Equal(''near'')", span="119-119", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs"];
m46_49 [label="ResultShouldBeTrue()", span="115-115", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs"];
m46_54 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", span="109-109", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs"];
m46_10 [label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="OptionArrayAttributeParsingFixture.cs"];
m46_163 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", span="324-324", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_164 [label="base.Parser.ParseArguments(new string[] { ''-v'', ''a'', ''b'', ''c'' }, new SimpleOptionsWithBadOptionArray())", span="326-326", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_165 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", span="324-324", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_76 [label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="OptionArrayAttributeParsingFixture.cs"];
m46_195 [label="Entry CommandLine.Tests.OptionsWithUIntArray.OptionsWithUIntArray()", span="34-34", cluster="CommandLine.Tests.OptionsWithUIntArray.OptionsWithUIntArray()", file="OptionArrayAttributeParsingFixture.cs"];
m46_24 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", span="77-77", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", file="OptionArrayAttributeParsingFixture.cs"];
m46_25 [label="var options = new SimpleOptionsWithArray()", span="79-79", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", file="OptionArrayAttributeParsingFixture.cs"];
m46_26 [label="Result = base.Parser.ParseArguments(new string[] { ''--strarr=apple'', ''kiwi'' }, options)", span="80-80", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", file="OptionArrayAttributeParsingFixture.cs"];
m46_28 [label="base.ElementsShouldBeEqual(new string[] { ''apple'', ''kiwi'' }, options.StringArrayValue)", span="83-83", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", file="OptionArrayAttributeParsingFixture.cs"];
m46_27 [label="ResultShouldBeTrue()", span="82-82", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", file="OptionArrayAttributeParsingFixture.cs"];
m46_29 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", span="77-77", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", file="OptionArrayAttributeParsingFixture.cs"];
m46_131 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", span="257-257", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_132 [label="var options = new SimpleOptionsWithArray()", span="259-259", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_133 [label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''--string=after''\r\n            }, options)", span="260-265", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_135 [label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="268-268", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_136 [label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="269-269", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_137 [label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="270-270", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_138 [label="options.StringValue.Should().Equal(''after'')", span="271-271", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_134 [label="ResultShouldBeTrue()", span="267-267", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_139 [label="options = new SimpleOptionsWithArray()", span="273-273", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_140 [label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''--string'', ''before'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4''\r\n            }, options)", span="274-279", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_142 [label="options.StringValue.Should().Equal(''before'')", span="282-282", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_143 [label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="283-283", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_144 [label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="284-284", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_145 [label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="285-285", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_141 [label="ResultShouldBeTrue()", span="281-281", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_146 [label="options = new SimpleOptionsWithArray()", span="287-287", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_147 [label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-s'', ''near-the-center'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four''\r\n            }, options)", span="288-293", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_149 [label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="296-296", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_150 [label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="297-297", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_151 [label="options.StringValue.Should().Equal(''near-the-center'')", span="298-298", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_152 [label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="299-299", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_148 [label="ResultShouldBeTrue()", span="295-295", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_153 [label="options = new SimpleOptionsWithArray()", span="301-301", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_154 [label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''--switch'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-i'', ''1234'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''--string'', ''I'm really playing with the parser!''\r\n            }, options)", span="302-309", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_156 [label="options.BooleanValue.Should().Be.True()", span="312-312", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_157 [label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="313-313", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_158 [label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="314-314", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_159 [label="options.IntegerValue.Should().Equal(1234)", span="315-315", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_160 [label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="316-316", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_161 [label="options.StringValue.Should().Equal(''I'm really playing with the parser!'')", span="317-317", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_155 [label="ResultShouldBeTrue()", span="311-311", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_162 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", span="257-257", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs"];
m46_2 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", span="47-47", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_3 [label="var options = new SimpleOptionsWithArray()", span="49-49", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_4 [label="Result = base.Parser.ParseArguments(new string[] { ''-z'', ''alfa'', ''beta'', ''gamma'' }, options)", span="50-50", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_6 [label="base.ElementsShouldBeEqual(new string[] { ''alfa'', ''beta'', ''gamma'' }, options.StringArrayValue)", span="53-53", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_5 [label="ResultShouldBeTrue()", span="52-52", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_7 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", span="47-47", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_166 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", span="37-37", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="OptionArrayAttributeParsingFixture.cs"];
m46_196 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", span="385-385", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs"];
m46_197 [label="var options = new OptionsWithUIntArray()", span="387-387", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs"];
m46_198 [label="Result = CommandLineParser.Default.ParseArguments(new string[] {\r\n                ''-s'', ''just a string'',\r\n                ''-o'', ''10'', ''20'', ''30'', ''40'',\r\n                ''-t'', ''11'', ''22'', ''33'', ''44'',\r\n                ''-b''\r\n            }, options)", span="388-393", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs"];
m46_200 [label="options.SomeStringValue.Should().Equal(''just a string'')", span="396-396", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs"];
m46_201 [label="base.ElementsShouldBeEqual(new uint[] {10, 20, 30, 40}, options.ArrayOne)", span="397-397", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs"];
m46_202 [label="base.ElementsShouldBeEqual(new uint[] {11, 22, 33, 44}, options.ArrayTwo)", span="398-398", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs"];
m46_203 [label="options.SomeBooleanValue.Should().Be.True()", span="399-399", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs"];
m46_199 [label="ResultShouldBeTrue()", span="395-395", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs"];
m46_204 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", span="385-385", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs"];
m46_37 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="OptionArrayAttributeParsingFixture.cs"];
m46_39 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", span="98-98", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs"];
m46_40 [label="var options = new SimpleOptionsWithArray()", span="100-100", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs"];
m46_41 [label="Result = base.Parser.ParseArguments(new string[] { ''-s'', ''before'', ''-z'', ''one'', ''two'', ''three'' }, options)", span="101-101", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs"];
m46_43 [label="options.StringValue.Should().Equal(''before'')", span="104-104", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs"];
m46_44 [label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'' }, options.StringArrayValue)", span="105-105", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs"];
m46_42 [label="ResultShouldBeTrue()", span="103-103", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs"];
m46_45 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", span="98-98", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs"];
m46_11 [label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="39-39", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="OptionArrayAttributeParsingFixture.cs"];
m46_9 [label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="OptionArrayAttributeParsingFixture.cs"];
m46_186 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", span="367-367", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs"];
m46_187 [label="var options = new OptionsWithUIntArray()", span="369-369", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs"];
m46_188 [label="Result = CommandLineParser.Default.ParseArguments(new string[] {\r\n                ''--somestr'', ''just a string'',\r\n                ''--arrayone'', ''10'', ''20'', ''30'', ''40'',\r\n                ''--arraytwo'', ''11'', ''22'', ''33'', ''44'',\r\n                ''--somebool''\r\n            }, options)", span="370-375", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs"];
m46_190 [label="options.SomeStringValue.Should().Equal(''just a string'')", span="378-378", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs"];
m46_191 [label="base.ElementsShouldBeEqual(new uint[] {10, 20, 30, 40}, options.ArrayOne)", span="379-379", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs"];
m46_192 [label="base.ElementsShouldBeEqual(new uint[] {11, 22, 33, 44}, options.ArrayTwo)", span="380-380", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs"];
m46_193 [label="options.SomeBooleanValue.Should().Be.True()", span="381-381", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs"];
m46_189 [label="ResultShouldBeTrue()", span="377-377", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs"];
m46_194 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", span="367-367", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs"];
m46_111 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", span="217-217", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs"];
m46_112 [label="var options = new SimpleOptionsWithArray()", span="219-219", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs"];
m46_113 [label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4''\r\n            }, options)", span="220-224", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs"];
m46_115 [label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="227-227", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs"];
m46_116 [label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="228-228", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs"];
m46_117 [label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="229-229", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs"];
m46_114 [label="ResultShouldBeTrue()", span="226-226", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs"];
m46_118 [label="options = new SimpleOptionsWithArray()", span="231-231", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs"];
m46_119 [label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4''\r\n            }, options)", span="232-236", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs"];
m46_121 [label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="239-239", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs"];
m46_122 [label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="240-240", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs"];
m46_123 [label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="241-241", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs"];
m46_120 [label="ResultShouldBeTrue()", span="238-238", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs"];
m46_124 [label="options = new SimpleOptionsWithArray()", span="243-243", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs"];
m46_125 [label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four''\r\n            }, options)", span="244-248", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs"];
m46_127 [label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="251-251", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs"];
m46_128 [label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="252-252", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs"];
m46_129 [label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="253-253", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs"];
m46_126 [label="ResultShouldBeTrue()", span="250-250", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs"];
m46_130 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", span="217-217", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs"];
m46_77 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", span="154-154", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_78 [label="var options = new SimpleOptionsWithArray()", span="156-156", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_79 [label="Result = base.Parser.ParseArguments(new string[] { ''-y'', ''1'', ''2'', ''3'' }, options)", span="157-157", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_81 [label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3 }, options.IntegerArrayValue)", span="160-160", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_80 [label="ResultShouldBeTrue()", span="159-159", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_82 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", span="154-154", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_105 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", span="205-205", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_106 [label="var options = new SimpleOptionsWithArray()", span="207-207", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_107 [label="Result = base.Parser.ParseArguments(new string[] { ''-q'', ''0.1'', ''2.3'', ''0.9'' }, options)", span="208-208", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_109 [label="base.ElementsShouldBeEqual(new double[] { .1, 2.3, .9 }, options.DoubleArrayValue)", span="211-211", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_108 [label="ResultShouldBeTrue()", span="210-210", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_110 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", span="205-205", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_8 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithArray.SimpleOptionsWithArray()", span="35-35", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithArray.SimpleOptionsWithArray()", file="OptionArrayAttributeParsingFixture.cs"];
m46_176 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", span="351-351", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs"];
m46_177 [label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="353-353", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs"];
m46_178 [label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="354-354", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs"];
m46_183 [label="Thread.CurrentThread.CurrentCulture = actualCulture", span="361-361", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs"];
m46_179 [label="var options = new SimpleOptionsWithArray()", span="355-355", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs"];
m46_180 [label="Result = base.Parser.ParseArguments(new string[] { ''-q'', ''1,2'', ''1,23'', ''1,234'' }, options)", span="356-356", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs"];
m46_182 [label="base.ElementsShouldBeEqual(new double[] { 1.2, 1.23, 1.234 }, options.DoubleArrayValue)", span="359-359", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs"];
m46_181 [label="ResultShouldBeTrue()", span="358-358", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs"];
m46_184 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", span="351-351", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs"];
m46_68 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", span="138-138", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_69 [label="var options = new SimpleOptionsWithArray()", span="140-140", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_70 [label="Result = base.Parser.ParseArguments(new string[] { ''-z'' }, options)", span="141-141", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_71 [label="ResultShouldBeFalse()", span="143-143", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_72 [label="options = new SimpleOptionsWithArray()", span="145-145", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_73 [label="Result = base.Parser.ParseArguments(new string[] { ''--strarr'' }, options)", span="146-146", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_74 [label="ResultShouldBeFalse()", span="148-148", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_75 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", span="138-138", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs"];
m46_167 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", span="331-331", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_168 [label="base.Parser.ParseArguments(new string[] { ''--bstrarr'', ''a'', ''b'', ''c'' }, new SimpleOptionsWithBadOptionArray())", span="333-333", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_169 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", span="331-331", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_173 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", span="345-345", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_174 [label="base.Parser.ParseArguments(new string[] { ''--bintarr'', ''1'', ''2'', ''3'' }, new SimpleOptionsWithBadOptionArray())", span="347-347", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_175 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", span="345-345", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", file="OptionArrayAttributeParsingFixture.cs"];
m46_38 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="OptionArrayAttributeParsingFixture.cs"];
m46_67 [label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="OptionArrayAttributeParsingFixture.cs"];
m46_0 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.OptionArrayAttributeParsingFixture()", span="42-42", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.OptionArrayAttributeParsingFixture()", file="OptionArrayAttributeParsingFixture.cs"];
m46_1 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.OptionArrayAttributeParsingFixture()", span="42-42", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.OptionArrayAttributeParsingFixture()", file="OptionArrayAttributeParsingFixture.cs"];
m46_30 [label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", span="87-87", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs"];
m46_31 [label="var options = new SimpleOptionsWithArray()", span="89-89", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs"];
m46_32 [label="Result = base.Parser.ParseArguments(new string[] { ''-z'', ''one'', ''two'', ''three'', ''-s'', ''after'' }, options)", span="90-90", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs"];
m46_34 [label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'' }, options.StringArrayValue)", span="93-93", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs"];
m46_35 [label="options.StringValue.Should().Equal(''after'')", span="94-94", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs"];
m46_33 [label="ResultShouldBeTrue()", span="92-92", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs"];
m46_36 [label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", span="87-87", cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs"];
m46_205 [label="CommandLine.Tests.OptionArrayAttributeParsingFixture", span="", file="OptionArrayAttributeParsingFixture.cs"];
m52_19 [label="Entry CommandLine.Tests.OptionMapFixture.CreateInstance()", span="83-83", cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs"];
m52_20 [label="_omBuilder = new OptionMapBuilder(3)", span="85-85", cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs"];
m52_24 [label="_optionMap = _omBuilder.OptionMap", span="90-90", cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs"];
m52_21 [label="_omBuilder.AppendOption(''p'', ''pretend'')", span="86-86", cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs", color=red, community=0];
m52_22 [label="_omBuilder.AppendOption(null, ''newuse'')", span="87-87", cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs", color=red, community=0];
m52_23 [label="_omBuilder.AppendOption(''D'', null)", span="88-88", cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs", color=red, community=0];
m52_25 [label="Exit CommandLine.Tests.OptionMapFixture.CreateInstance()", span="83-83", cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs"];
m52_29 [label="Entry CommandLine.Tests.OptionMapFixture.ManageOptions()", span="100-100", cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", color=green, community=0, file="OptionMapFixture.cs"];
m52_30 [label="_omBuilder.Options[0].Should().Be.SameAs(_optionMap[_omBuilder.Names[0]])", span="102-102", cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", color=green, community=0, file="OptionMapFixture.cs"];
m52_31 [label="_omBuilder.Options[1].Should().Be.SameAs(_optionMap[_omBuilder.Names[1]])", span="103-103", cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", color=green, community=0, file="OptionMapFixture.cs"];
m52_36 [label="Entry CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", span="108-108", cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", file="OptionMapFixture.cs"];
m52_37 [label="var shortOi = _optionMap[''y'']", span="110-110", cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", file="OptionMapFixture.cs"];
m52_38 [label="shortOi.Should().Be.Null()", span="111-111", cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", file="OptionMapFixture.cs"];
m52_39 [label="Exit CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", span="108-108", cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", file="OptionMapFixture.cs"];
m52_6 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1553-1553", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="OptionMapFixture.cs"];
m52_8 [label="Entry CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", span="54-54", cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", file="OptionMapFixture.cs"];
m52_9 [label="var oa = new OptionAttribute(shortName, longName)", span="56-56", cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", color=green, community=0, file="OptionMapFixture.cs"];
m52_10 [label="var oi = oa.CreateOptionInfo()", span="57-57", cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", color=green, community=0, file="OptionMapFixture.cs"];
m52_11 [label="_optionMap[oa.UniqueName] = oi", span="58-58", cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", color=green, community=0, file="OptionMapFixture.cs"];
m52_13 [label="_names.Add(oa.UniqueName)", span="60-60", cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", color=green, community=0, file="OptionMapFixture.cs"];
m52_12 [label="_options.Add(oi)", span="59-59", cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", color=green, community=0, file="OptionMapFixture.cs"];
m52_14 [label="Exit CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", span="54-54", cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", file="OptionMapFixture.cs"];
m52_5 [label="Entry CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1086-1086", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMapFixture.cs"];
m52_26 [label="Entry CommandLine.OptionAttribute.OptionAttribute(char, string)", span="1293-1293", cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionMapFixture.cs"];
m52_27 [label="_optionMap = null", span="96-96", cluster="CommandLine.Tests.OptionMapFixture.ShutdownInstance()", file="OptionMapFixture.cs"];
m52_28 [label="Exit CommandLine.Tests.OptionMapFixture.ShutdownInstance()", span="94-94", cluster="CommandLine.Tests.OptionMapFixture.ShutdownInstance()", file="OptionMapFixture.cs"];
m52_40 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="OptionMapFixture.cs"];
m52_0 [label="Entry CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", span="47-47", cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs"];
m52_1 [label="_optionMap = new OptionMap(capacity, new CommandLineParserSettings(true))", span="50-50", cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs"];
m52_2 [label="_options = new List<OptionInfo>(capacity)", span="50-50", cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs"];
m52_3 [label="_names = new List<string>(capacity)", span="51-51", cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs"];
m52_4 [label="Exit CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", span="47-47", cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs"];
m52_34 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="OptionMapFixture.cs"];
m52_53 [label="var option3 = attribute3.CreateOptionInfo()", span="134-134", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs"];
m52_56 [label="map[attribute3.UniqueName] = option3", span="138-138", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs"];
m52_54 [label="map[attribute1.UniqueName] = option1", span="136-136", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs"];
m52_55 [label="map[attribute2.UniqueName] = option2", span="137-137", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs"];
m52_57 [label="optionCache != null", span="140-140", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs"];
m52_59 [label="optionCache[attribute1.UniqueName] = option2", span="143-143", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs"];
m52_62 [label="Exit CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", span="121-121", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs"];
m52_66 [label="optionCache[attribute1.UniqueName] = option1", span="152-152", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs"];
m52_67 [label="optionCache[attribute1.UniqueName] = option2", span="153-153", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs"];
m52_58 [label="optionCache[attribute1.UniqueName] = option1", span="142-142", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs"];
m52_60 [label="optionCache[attribute2.UniqueName]= option3", span="144-144", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs"];
m52_63 [label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", span="", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs"];
m52_68 [label="optionCache[attribute2.UniqueName]= option3", span="154-154", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs"];
m52_61 [label="return map;", span="147-147", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs"];
m52_64 [label="map[attribute3.UniqueName] = option3", span="148-148", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs"];
m52_69 [label="return map;", span="157-157", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs"];
m52_65 [label="optionCache != null", span="150-150", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs"];
m52_70 [label="Exit CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", span="131-131", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs"];
m52_15 [label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="204-204", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionMapFixture.cs"];
m52_16 [label="Entry Unk.CreateOptionInfo", span="", cluster="Unk.CreateOptionInfo", file="OptionMapFixture.cs"];
m52_35 [label="Entry Unk.SameAs", span="", cluster="Unk.SameAs", file="OptionMapFixture.cs"];
m52_45 [label="Entry CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", span="121-121", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs"];
m52_46 [label="map == null", span="123-123", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs"];
m52_47 [label="map = new OptionMap (3, new CommandLineParserSettings (true))", span="125-125", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs"];
m52_48 [label="var attribute1 = new OptionAttribute(''p'', ''pretend'')", span="128-128", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=red, community=0, file="OptionMapFixture.cs"];
m52_49 [label="var attribute2 = new OptionAttribute(null, ''newuse'')", span="129-129", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=red, community=0, file="OptionMapFixture.cs"];
m52_51 [label="var option1 = attribute1.CreateOptionInfo()", span="132-132", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs"];
m52_50 [label="var attribute3 = new OptionAttribute(''D'', null)", span="130-130", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=red, community=0, file="OptionMapFixture.cs"];
m52_52 [label="var option2 = attribute2.CreateOptionInfo()", span="133-133", cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs"];
m52_17 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="OptionMapFixture.cs"];
m52_18 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="OptionMapFixture.cs"];
m52_41 [label="Entry CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", span="115-115", cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", file="OptionMapFixture.cs"];
m52_42 [label="var longOi = _optionMap[''nomorebugshere'']", span="117-117", cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", file="OptionMapFixture.cs"];
m52_43 [label="longOi.Should().Be.Null()", span="118-118", cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", file="OptionMapFixture.cs"];
m52_44 [label="Exit CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", span="115-115", cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", file="OptionMapFixture.cs"];
m52_7 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="OptionMapFixture.cs"];
m52_32 [label="_omBuilder.Options[2].Should().Be.SameAs(_optionMap[_omBuilder.Names[2]])", span="104-104", cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", file="OptionMapFixture.cs"];
m52_33 [label="Exit CommandLine.Tests.OptionMapFixture.ManageOptions()", span="100-100", cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", file="OptionMapFixture.cs"];
m53_0 [label="Entry CommandLine.Tests.Mocks.OptionsBase.ToString()", span="33-33", cluster="CommandLine.Tests.Mocks.OptionsBase.ToString()", file="OptionsBase.cs"];
m53_1 [label="return DebugStringUtil.ConvertOptionsToString(this);", span="35-35", cluster="CommandLine.Tests.Mocks.OptionsBase.ToString()", file="OptionsBase.cs"];
m53_2 [label="Exit CommandLine.Tests.Mocks.OptionsBase.ToString()", span="33-33", cluster="CommandLine.Tests.Mocks.OptionsBase.ToString()", file="OptionsBase.cs"];
m53_3 [label="Entry CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", span="39-39", cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="OptionsBase.cs"];
m53_4 [label="CommandLine.Tests.Mocks.OptionsBase", span="", file="OptionsBase.cs"];
m55_0 [label="Entry CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", span="35-35", cluster="CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", file="OptionsWithDefaultSet.cs"];
m55_1 [label="FileId = int.MinValue", span="37-37", cluster="CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", file="OptionsWithDefaultSet.cs"];
m55_2 [label="Exit CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", span="35-35", cluster="CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", file="OptionsWithDefaultSet.cs"];
m55_3 [label="CommandLine.Tests.Mocks.OptionsWithDefaultSet", span="", file="OptionsWithDefaultSet.cs"];
m56_0 [label="Entry CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="35-35", cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs"];
m56_1 [label="Red = 0", span="37-37", cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs"];
m56_2 [label="Green = 0", span="38-38", cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs"];
m56_3 [label="Blue = 0", span="39-39", cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs"];
m56_4 [label="Hue = 0", span="40-40", cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs"];
m56_5 [label="Saturation = 0", span="41-41", cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs"];
m56_6 [label="Value = 0", span="42-42", cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs"];
m56_7 [label="Exit CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="35-35", cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs"];
m56_8 [label="CommandLine.Tests.Mocks.OptionsWithMultipleSet", span="", file="OptionsWithMultipleSet.cs"];
m67_47 [label="Entry System.Nullable<T>.ToString()", span="0-0", cluster="System.Nullable<T>.ToString()", file="Program.cs"];
m67_49 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="Program.cs"];
m67_48 [label="Entry System.Console.WriteLine(string, object)", span="0-0", cluster="System.Console.WriteLine(string, object)", file="Program.cs"];
m67_20 [label="Entry System.Environment.Exit(int)", span="0-0", cluster="System.Environment.Exit(int)", file="Program.cs"];
m67_59 [label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string)", span="361-361", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="Program.cs"];
m67_4 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="Program.cs"];
m67_5 [label="HelpText.DefaultParsingErrorsHandler(this, current)", span="95-95", cluster="lambda expression", file="Program.cs"];
m67_6 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="Program.cs"];
m67_52 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()", file="Program.cs"];
m67_7 [label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(CommandLine.CommandLineOptionsBase, CommandLine.Text.HelpText)", span="840-840", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(CommandLine.CommandLineOptionsBase, CommandLine.Text.HelpText)", file="Program.cs"];
m67_55 [label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0", cluster="System.Text.StringBuilder.Remove(int, int)", file="Program.cs"];
m67_17 [label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1692-1692", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="Program.cs"];
m67_57 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="Program.cs"];
m67_51 [label="Entry string.ToLowerInvariant()", span="0-0", cluster="string.ToLowerInvariant()", file="Program.cs"];
m67_58 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="Program.cs"];
m67_18 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1564-1564", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="Program.cs"];
m67_56 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="Program.cs"];
m67_54 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="Program.cs"];
m67_0 [label="Entry SampleApp.Program.Options.GetUsage()", span="93-93", cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs"];
m67_1 [label="return HelpText.AutoBuild(this, (HelpText current) => HelpText.DefaultParsingErrorsHandler(this, current));", span="95-95", cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs"];
m67_2 [label="Exit SampleApp.Program.Options.GetUsage()", span="93-93", cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs"];
m67_46 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="Program.cs"];
m67_50 [label="Entry bool.ToString()", span="0-0", cluster="bool.ToString()", file="Program.cs"];
m67_16 [label="Entry SampleApp.Program.Options.Options()", span="55-55", cluster="SampleApp.Program.Options.Options()", file="Program.cs"];
m67_21 [label="Entry SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", span="171-171", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_22 [label="options.VerboseLevel == null", span="173-173", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_24 [label="Console.WriteLine(''verbose [on]: {0}'', (options.VerboseLevel < 0 || options.VerboseLevel > 2) ? ''#invalid value#'' : options.VerboseLevel.ToString())", span="176-176", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_26 [label="Console.WriteLine(''input file: {0} ...'', options.InputFile)", span="178-178", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_27 [label="options.DefinitionFiles", span="179-179", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_29 [label="Console.WriteLine(''  start offset: {0}'', options.StartOffset)", span="183-183", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_30 [label="Console.WriteLine(''  tabular data computation: {0}'', options.Calculate.ToString().ToLowerInvariant())", span="184-184", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_31 [label="Console.WriteLine(''  on errors: {0}'', options.IgnoreErrors ? ''continue'' : ''stop processing'')", span="185-185", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_32 [label="Console.WriteLine(''  optimize for: {0}'', options.Optimization.ToString().ToLowerInvariant())", span="186-186", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_33 [label="options.AllowedOperators != null", span="187-187", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_36 [label="options.AllowedOperators", span="191-191", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_41 [label="!string.IsNullOrEmpty(options.OutputFile)", span="199-199", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_42 [label="_headingInfo.WriteMessage(string.Format(''writing elaborated data: {0} ...'', options.OutputFile))", span="200-200", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_23 [label="Console.WriteLine(''verbose [off]'')", span="174-174", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_25 [label="Console.WriteLine()", span="177-177", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_28 [label="Console.WriteLine(''  using definition file: {0}'', defFile)", span="181-181", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_34 [label="var builder = new StringBuilder()", span="189-189", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_40 [label="Console.WriteLine()", span="198-198", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_35 [label="builder.Append(''  allowed operators: '')", span="190-190", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_37 [label="builder.Append(op)", span="193-193", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_38 [label="builder.Append('', '')", span="194-194", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_39 [label="Console.WriteLine(builder.Remove(builder.Length - 2, 2).ToString())", span="196-196", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_43 [label="_headingInfo.WriteMessage(''elaborated data:'')", span="203-203", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_44 [label="Console.WriteLine(''[...]'')", span="204-204", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_45 [label="Exit SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", span="171-171", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m67_53 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="Program.cs"];
m67_3 [label="Entry CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.HandleParsingErrorsDelegate)", span="793-793", cluster="CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.HandleParsingErrorsDelegate)", file="Program.cs"];
m67_19 [label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1717-1717", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="Program.cs"];
m67_8 [label="Entry SampleApp.Program.Main(string[])", span="156-156", cluster="SampleApp.Program.Main(string[])", file="Program.cs"];
m67_9 [label="var options = new Options()", span="161-161", cluster="SampleApp.Program.Main(string[])", file="Program.cs"];
m67_11 [label="!parser.ParseArguments(args, options)", span="163-163", cluster="SampleApp.Program.Main(string[])", file="Program.cs"];
m67_10 [label="var parser = new CommandLineParser(new CommandLineParserSettings(Console.Error))", span="162-162", cluster="SampleApp.Program.Main(string[])", file="Program.cs"];
m67_13 [label="DoCoreTask(options)", span="166-166", cluster="SampleApp.Program.Main(string[])", file="Program.cs"];
m67_12 [label="Environment.Exit(1)", span="164-164", cluster="SampleApp.Program.Main(string[])", file="Program.cs"];
m67_14 [label="Environment.Exit(0)", span="168-168", cluster="SampleApp.Program.Main(string[])", file="Program.cs"];
m67_15 [label="Exit SampleApp.Program.Main(string[])", span="156-156", cluster="SampleApp.Program.Main(string[])", file="Program.cs"];
m67_60 [label="SampleApp.Program.Options", span="", file="Program.cs"];
m69_10 [label="Entry CommandLine.Tests.ReflectionUtilFixture.CreateInstance()", span="102-102", cluster="CommandLine.Tests.ReflectionUtilFixture.CreateInstance()", file="ReflectionUtilFixture.cs"];
m69_11 [label="_target = new MockObject()", span="104-104", cluster="CommandLine.Tests.ReflectionUtilFixture.CreateInstance()", file="ReflectionUtilFixture.cs"];
m69_12 [label="Exit CommandLine.Tests.ReflectionUtilFixture.CreateInstance()", span="102-102", cluster="CommandLine.Tests.ReflectionUtilFixture.CreateInstance()", file="ReflectionUtilFixture.cs"];
m69_32 [label="Entry CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute()", span="133-133", cluster="CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute()", file="ReflectionUtilFixture.cs"];
m69_33 [label="var pair = ReflectionUtil.RetrieveMethod<MockAttribute>(_target)", span="135-135", cluster="CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute()", file="ReflectionUtilFixture.cs"];
m69_34 [label="pair.Should().Not.Be.Null()", span="137-137", cluster="CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute()", file="ReflectionUtilFixture.cs"];
m69_35 [label="pair.Left.Name.Should().Equal(''DoNothing'')", span="138-138", cluster="CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute()", file="ReflectionUtilFixture.cs"];
m69_36 [label="Exit CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute()", span="133-133", cluster="CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute()", file="ReflectionUtilFixture.cs"];
m69_16 [label="Entry CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", span="114-114", cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs"];
m69_17 [label="var list = ReflectionUtil.RetrievePropertyList<MockAttribute>(_target)", span="116-116", cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs"];
m69_18 [label="list.Should().Count.Exactly(2)", span="118-118", cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs"];
m69_19 [label="list[0].Left.Name.Should().Equal(''StringField'')", span="119-119", cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs"];
m69_20 [label="list[1].Left.Name.Should().Equal(''BooleanField'')", span="120-120", cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs"];
m69_21 [label="PrintFieldList<MockAttribute>(list)", span="122-122", cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs"];
m69_22 [label="var anotherList = ReflectionUtil.RetrievePropertyList<AnotherMockAttribute>(_target)", span="124-124", cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs"];
m69_23 [label="anotherList.Should().Count.Exactly(1)", span="126-126", cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs"];
m69_24 [label="anotherList[0].Left.Name.Should().Equal(''IntField'')", span="127-127", cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs"];
m69_25 [label="PrintFieldList<AnotherMockAttribute>(anotherList)", span="129-129", cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs"];
m69_26 [label="Exit CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", span="114-114", cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs"];
m69_31 [label="Entry CommandLine.Tests.ReflectionUtilFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>)", span="182-182", cluster="CommandLine.Tests.ReflectionUtilFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>)", file="ReflectionUtilFixture.cs"];
m69_48 [label="Console.WriteLine(''Attribute: {0}'', list[0].Right.GetType())", span="185-185", cluster="CommandLine.Tests.ReflectionUtilFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>)", file="ReflectionUtilFixture.cs"];
m69_49 [label=list, span="186-186", cluster="CommandLine.Tests.ReflectionUtilFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>)", file="ReflectionUtilFixture.cs"];
m69_50 [label="Console.WriteLine(''\tField: {0}'', pair.Left.Name)", span="188-188", cluster="CommandLine.Tests.ReflectionUtilFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>)", file="ReflectionUtilFixture.cs"];
m69_51 [label="Exit CommandLine.Tests.ReflectionUtilFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>)", span="182-182", cluster="CommandLine.Tests.ReflectionUtilFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>)", file="ReflectionUtilFixture.cs"];
m69_0 [label="Entry CommandLine.Tests.ReflectionUtilFixture.MockObject.MockObject()", span="59-59", cluster="CommandLine.Tests.ReflectionUtilFixture.MockObject.MockObject()", file="ReflectionUtilFixture.cs"];
m69_1 [label="IntField = 0", span="61-61", cluster="CommandLine.Tests.ReflectionUtilFixture.MockObject.MockObject()", file="ReflectionUtilFixture.cs"];
m69_2 [label="Exit CommandLine.Tests.ReflectionUtilFixture.MockObject.MockObject()", span="59-59", cluster="CommandLine.Tests.ReflectionUtilFixture.MockObject.MockObject()", file="ReflectionUtilFixture.cs"];
m69_39 [label="Entry CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", span="142-142", cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs"];
m69_40 [label="var list = ReflectionUtil.RetrievePropertyAttributeList<MockWithValueAttribute>(new AnotherMockObject())", span="144-144", cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs"];
m69_41 [label="list.Should().Not.Be.Null()", span="146-146", cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs"];
m69_42 [label="list.Should().Count.Exactly(3)", span="147-147", cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs"];
m69_43 [label="list[0].StringValue.Should().Equal(''applied to X'')", span="148-148", cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs"];
m69_44 [label="list[1].StringValue.Should().Equal(''applied to Y'')", span="149-149", cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs"];
m69_45 [label="list[2].StringValue.Should().Equal(''applied to Z'')", span="150-150", cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs"];
m69_46 [label="Exit CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", span="142-142", cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs"];
m69_47 [label="Entry CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1920-1920", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtilFixture.cs"];
m69_37 [label="Entry CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1882-1882", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtilFixture.cs"];
m69_29 [label="Entry Unk.Exactly", span="", cluster="Unk.Exactly", file="ReflectionUtilFixture.cs"];
m69_52 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="ReflectionUtilFixture.cs"];
m69_5 [label="Entry CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject.AnotherMockObject()", span="81-81", cluster="CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject.AnotherMockObject()", file="ReflectionUtilFixture.cs"];
m69_6 [label="X = 0", span="83-83", cluster="CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject.AnotherMockObject()", file="ReflectionUtilFixture.cs"];
m69_7 [label="Y = 0", span="84-84", cluster="CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject.AnotherMockObject()", file="ReflectionUtilFixture.cs"];
m69_8 [label="Z = 0", span="85-85", cluster="CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject.AnotherMockObject()", file="ReflectionUtilFixture.cs"];
m69_9 [label="Exit CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject.AnotherMockObject()", span="81-81", cluster="CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject.AnotherMockObject()", file="ReflectionUtilFixture.cs"];
m69_27 [label="Entry CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1856-1856", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtilFixture.cs"];
m69_38 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="ReflectionUtilFixture.cs"];
m69_53 [label="Entry System.Console.WriteLine(string, object)", span="0-0", cluster="System.Console.WriteLine(string, object)", file="ReflectionUtilFixture.cs"];
m69_30 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ReflectionUtilFixture.cs"];
m69_13 [label="Entry CommandLine.Tests.ReflectionUtilFixture.ShutdownInstance()", span="108-108", cluster="CommandLine.Tests.ReflectionUtilFixture.ShutdownInstance()", file="ReflectionUtilFixture.cs"];
m69_14 [label="_target = null", span="110-110", cluster="CommandLine.Tests.ReflectionUtilFixture.ShutdownInstance()", file="ReflectionUtilFixture.cs"];
m69_15 [label="Exit CommandLine.Tests.ReflectionUtilFixture.ShutdownInstance()", span="108-108", cluster="CommandLine.Tests.ReflectionUtilFixture.ShutdownInstance()", file="ReflectionUtilFixture.cs"];
m69_28 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ReflectionUtilFixture.cs"];
m69_3 [label="Entry CommandLine.Tests.ReflectionUtilFixture.MockObject.DoNothing()", span="74-74", cluster="CommandLine.Tests.ReflectionUtilFixture.MockObject.DoNothing()", file="ReflectionUtilFixture.cs"];
m69_4 [label="Exit CommandLine.Tests.ReflectionUtilFixture.MockObject.DoNothing()", span="74-74", cluster="CommandLine.Tests.ReflectionUtilFixture.MockObject.DoNothing()", file="ReflectionUtilFixture.cs"];
m69_54 [label="CommandLine.Tests.ReflectionUtilFixture.MockObject", span="", file="ReflectionUtilFixture.cs"];
m69_55 [label="CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject", span="", file="ReflectionUtilFixture.cs"];
m70_14 [label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(CommandLine.CommandLineOptionsBase, CommandLine.Text.HelpText)", span="840-840", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(CommandLine.CommandLineOptionsBase, CommandLine.Text.HelpText)", file="RPEOptions.cs"];
m70_5 [label="Entry CommandLine.Text.HelpText.HelpText()", span="651-651", cluster="CommandLine.Text.HelpText.HelpText()", file="RPEOptions.cs"];
m70_10 [label="Entry CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.HandleParsingErrorsDelegate)", span="793-793", cluster="CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.HandleParsingErrorsDelegate)", file="RPEOptions.cs"];
m70_11 [label="Entry lambda expression", span="33-34", cluster="lambda expression", file="RPEOptions.cs"];
m70_12 [label="HelpText.DefaultParsingErrorsHandler(this, current)", span="34-34", cluster="lambda expression", file="RPEOptions.cs"];
m70_13 [label="Exit lambda expression", span="33-34", cluster="lambda expression", file="RPEOptions.cs"];
m70_7 [label="Entry CommandLine.Tests.Mocks.RPEOptionsForAutoBuild.GetUsage()", span="31-31", cluster="CommandLine.Tests.Mocks.RPEOptionsForAutoBuild.GetUsage()", file="RPEOptions.cs"];
m70_8 [label="return HelpText.AutoBuild(this, delegate(HelpText current) {\r\n                HelpText.DefaultParsingErrorsHandler(this, current); });", span="33-34", cluster="CommandLine.Tests.Mocks.RPEOptionsForAutoBuild.GetUsage()", file="RPEOptions.cs"];
m70_9 [label="Exit CommandLine.Tests.Mocks.RPEOptionsForAutoBuild.GetUsage()", span="31-31", cluster="CommandLine.Tests.Mocks.RPEOptionsForAutoBuild.GetUsage()", file="RPEOptions.cs"];
m70_6 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", span="1004-1004", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", file="RPEOptions.cs"];
m70_0 [label="Entry CommandLine.Tests.Mocks.RPEOptions.GetUsage()", span="18-18", cluster="CommandLine.Tests.Mocks.RPEOptions.GetUsage()", file="RPEOptions.cs"];
m70_1 [label="LastPostParsingState.Errors.Count > 0", span="20-20", cluster="CommandLine.Tests.Mocks.RPEOptions.GetUsage()", file="RPEOptions.cs"];
m70_2 [label="return new HelpText().RenderParsingErrorsText(this, 0);", span="22-22", cluster="CommandLine.Tests.Mocks.RPEOptions.GetUsage()", file="RPEOptions.cs"];
m70_3 [label="return '''';", span="24-24", cluster="CommandLine.Tests.Mocks.RPEOptions.GetUsage()", file="RPEOptions.cs"];
m70_4 [label="Exit CommandLine.Tests.Mocks.RPEOptions.GetUsage()", span="18-18", cluster="CommandLine.Tests.Mocks.RPEOptions.GetUsage()", file="RPEOptions.cs"];
m70_15 [label="CommandLine.Tests.Mocks.RPEOptions", span="", file="RPEOptions.cs"];
m70_16 [label="CommandLine.Tests.Mocks.RPEOptionsForAutoBuild", span="", file="RPEOptions.cs"];
m71_0 [label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33", cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="SimpleOptions.cs"];
m71_1 [label="IntegerValue = 0", span="35-35", cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="SimpleOptions.cs"];
m71_2 [label="Exit CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33", cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="SimpleOptions.cs"];
m71_3 [label="CommandLine.Tests.Mocks.SimpleOptions", span="", file="SimpleOptions.cs"];
m72_3 [label="Entry CommandLine.Text.HelpText.AutoBuild(object)", span="780-780", cluster="CommandLine.Text.HelpText.AutoBuild(object)", file="SimpleOptionsForAutoBuid.cs"];
m72_0 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid.GetUsage()", span="12-12", cluster="CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid.GetUsage()", file="SimpleOptionsForAutoBuid.cs"];
m72_1 [label="return HelpText.AutoBuild(this);", span="14-14", cluster="CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid.GetUsage()", file="SimpleOptionsForAutoBuid.cs"];
m72_2 [label="Exit CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid.GetUsage()", span="12-12", cluster="CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid.GetUsage()", file="SimpleOptionsForAutoBuid.cs"];
m72_4 [label="CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid", span="", file="SimpleOptionsForAutoBuid.cs"];
m76_0 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", span="37-37", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="SimpleOptionsWithBadOptionArray.cs"];
m76_1 [label="BadIntegerValue = 0", span="39-39", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="SimpleOptionsWithBadOptionArray.cs"];
m76_2 [label="Exit CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", span="37-37", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="SimpleOptionsWithBadOptionArray.cs"];
m76_3 [label="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray", span="", file="SimpleOptionsWithBadOptionArray.cs"];
m79_0 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="SimpleOptionsWithEnum.cs"];
m79_1 [label="FileAccess = FileAccess.Read", span="40-40", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="SimpleOptionsWithEnum.cs"];
m79_2 [label="Exit CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="SimpleOptionsWithEnum.cs"];
m79_3 [label="CommandLine.Tests.Mocks.SimpleOptionsWithEnum", span="", file="SimpleOptionsWithEnum.cs"];
m80_0 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.GetUsage()", span="42-42", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.GetUsage()", file="SimpleOptionsWithHelpOption.cs"];
m80_1 [label="return ''MockOptions::GetUsage()'';", span="44-44", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.GetUsage()", file="SimpleOptionsWithHelpOption.cs"];
m80_2 [label="Exit CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.GetUsage()", span="42-42", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.GetUsage()", file="SimpleOptionsWithHelpOption.cs"];
m83_10 [label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="Singleton.cs"];
m83_14 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="Singleton.cs"];
m83_20 [label="Entry CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="35-35", cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="Singleton.cs"];
m83_0 [label="Entry CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", span="41-41", cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs"];
m83_1 [label="var options = new SimpleOptions()", span="43-43", cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs"];
m83_2 [label="bool result = CommandLineParser.Default.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="44-45", cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs"];
m83_4 [label="options.StringValue.Should().Equal(''another string'')", span="48-48", cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs"];
m83_5 [label="options.IntegerValue.Should().Equal(100)", span="49-49", cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs"];
m83_6 [label="options.BooleanValue.Should().Be.True()", span="50-50", cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs"];
m83_7 [label="Console.WriteLine(options)", span="51-51", cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs"];
m83_3 [label="result.Should().Be.True()", span="47-47", cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs"];
m83_8 [label="Exit CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", span="41-41", cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs"];
m83_12 [label="Entry Unk.True", span="", cluster="Unk.True", file="Singleton.cs"];
m83_13 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="Singleton.cs"];
m83_9 [label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33", cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="Singleton.cs"];
m83_11 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="Singleton.cs"];
m83_15 [label="Entry CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", span="55-55", cluster="CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", file="Singleton.cs"];
m83_16 [label="var options = new OptionsWithMultipleSet()", span="57-57", cluster="CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", file="Singleton.cs"];
m83_17 [label="bool result = CommandLineParser.Default.ParseArguments(\r\n                new string[] { ''-r1'', ''-g2'', ''-b3'', ''-h4'', ''-s5'', ''-v6'' }, options)", span="58-59", cluster="CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", file="Singleton.cs"];
m83_18 [label="result.Should().Be.True()", span="61-61", cluster="CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", file="Singleton.cs"];
m83_19 [label="Exit CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", span="55-55", cluster="CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", file="Singleton.cs"];
m89_20 [label="Entry CommandLine.Tests.Mocks.OptionsOfPlugInX.OptionsOfPlugInX()", span="41-41", cluster="CommandLine.Tests.Mocks.OptionsOfPlugInX.OptionsOfPlugInX()", file="UnknownArgumentsFixture.cs"];
m89_18 [label="Entry Unk.True", span="", cluster="Unk.True", file="UnknownArgumentsFixture.cs"];
m89_15 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1543-1543", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="UnknownArgumentsFixture.cs"];
m89_14 [label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1692-1692", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="UnknownArgumentsFixture.cs"];
m89_0 [label="Entry CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", span="42-42", cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs"];
m89_1 [label="string[] args = { ''--plugin'', ''addonX'', ''--filename'', ''input.dat'' }", span="44-44", cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs"];
m89_2 [label="var appOptions = new OptionsForAppWithPlugIns()", span="45-45", cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs"];
m89_4 [label="var result1 = parser.ParseArguments(args, appOptions)", span="48-48", cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs"];
m89_8 [label="var result2 = parser.ParseArguments(args, plugInXOptions)", span="54-54", cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs"];
m89_3 [label="var parser = new CommandLineParser(new CommandLineParserSettings {\r\n                IgnoreUnknownArguments = true, CaseSensitive = true })", span="46-47", cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs"];
m89_6 [label="appOptions.PlugInName.Should().Equal(''addonX'')", span="51-51", cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs"];
m89_5 [label="result1.Should().Be.True()", span="50-50", cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs"];
m89_7 [label="var plugInXOptions = new OptionsOfPlugInX()", span="53-53", cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs"];
m89_10 [label="plugInXOptions.InputFileName.Should().Equal(''input.dat'')", span="57-57", cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs"];
m89_11 [label="plugInXOptions.ReadOffset.Should().Equal(10L)", span="58-58", cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs"];
m89_9 [label="result2.Should().Be.True()", span="56-56", cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs"];
m89_12 [label="Exit CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", span="42-42", cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs"];
m89_19 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="UnknownArgumentsFixture.cs"];
m89_17 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="UnknownArgumentsFixture.cs"];
m89_13 [label="Entry CommandLine.Tests.Mocks.OptionsForAppWithPlugIns.OptionsForAppWithPlugIns()", span="35-35", cluster="CommandLine.Tests.Mocks.OptionsForAppWithPlugIns.OptionsForAppWithPlugIns()", file="UnknownArgumentsFixture.cs"];
m89_16 [label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1717-1717", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="UnknownArgumentsFixture.cs"];
m91_15 [label="Entry CommandLine.Tests.ValueListAttributeFixture.MockSpecializedList.MockSpecializedList()", span="41-41", cluster="CommandLine.Tests.ValueListAttributeFixture.MockSpecializedList.MockSpecializedList()", file="ValueListAttributeFixture.cs"];
m91_3 [label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="304-304", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttributeFixture.cs"];
m91_12 [label="Entry CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", span="73-73", cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="ValueListAttributeFixture.cs"];
m91_13 [label="new ValueListAttribute(new MockSpecializedList().GetType())", span="75-75", cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="ValueListAttributeFixture.cs"];
m91_14 [label="Exit CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", span="73-73", cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="ValueListAttributeFixture.cs"];
m91_22 [label="Entry CommandLine.Tests.ValueListAttributeFixture.MockOptions.MockOptions()", span="45-45", cluster="CommandLine.Tests.ValueListAttributeFixture.MockOptions.MockOptions()", file="ValueListAttributeFixture.cs"];
m91_27 [label="Entry CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", span="89-89", cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs"];
m91_28 [label="var options = new MockOptions()", span="91-91", cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs"];
m91_29 [label="var values = ValueListAttribute.GetReference(options)", span="93-93", cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs"];
m91_33 [label="base.ElementsShouldBeEqual(new string[] { ''value0'', ''value1'', ''value2'' }, options.Values)", span="98-98", cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs"];
m91_30 [label="values.Add(''value0'')", span="94-94", cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs"];
m91_31 [label="values.Add(''value1'')", span="95-95", cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs"];
m91_32 [label="values.Add(''value2'')", span="96-96", cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs"];
m91_34 [label="Exit CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", span="89-89", cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs"];
m91_16 [label="Entry CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", span="79-79", cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs"];
m91_17 [label="var options = new MockOptions()", span="81-81", cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs"];
m91_18 [label="IList<string> values = ValueListAttribute.GetReference(options)", span="83-83", cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs"];
m91_19 [label="values.Should().Not.Be.Null()", span="84-84", cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs"];
m91_20 [label="values.GetType().Should().Equal(typeof(List<string>))", span="85-85", cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs"];
m91_21 [label="Exit CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", span="79-79", cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs"];
m91_4 [label="Entry CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", span="61-61", cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", file="ValueListAttributeFixture.cs"];
m91_5 [label="new ValueListAttribute(new List<object>().GetType())", span="63-63", cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", file="ValueListAttributeFixture.cs"];
m91_6 [label="Exit CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", span="61-61", cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", file="ValueListAttributeFixture.cs"];
m91_35 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ValueListAttributeFixture.cs"];
m91_23 [label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="328-328", cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttributeFixture.cs"];
m91_8 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="ValueListAttributeFixture.cs"];
m91_25 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="ValueListAttributeFixture.cs"];
m91_36 [label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="ValueListAttributeFixture.cs"];
m91_0 [label="Entry CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", span="54-54", cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", file="ValueListAttributeFixture.cs"];
m91_1 [label="new ValueListAttribute(null)", span="56-56", cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", file="ValueListAttributeFixture.cs"];
m91_2 [label="Exit CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", span="54-54", cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", file="ValueListAttributeFixture.cs"];
m91_26 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ValueListAttributeFixture.cs"];
m91_24 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ValueListAttributeFixture.cs"];
m91_9 [label="Entry CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", span="67-67", cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", file="ValueListAttributeFixture.cs"];
m91_10 [label="new ValueListAttribute(new List<string>().GetType())", span="69-69", cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", file="ValueListAttributeFixture.cs"];
m91_11 [label="Exit CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", span="67-67", cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", file="ValueListAttributeFixture.cs"];
m91_7 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ValueListAttributeFixture.cs"];
m91_37 [label="CommandLine.Tests.ValueListAttributeFixture", span="", file="ValueListAttributeFixture.cs"];
m92_14 [label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="ValueListAttributeParsingFixture.cs"];
m92_20 [label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", span="61-61", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs"];
m92_21 [label="var options = new OptionsWithValueListMaximumThree()", span="63-63", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs"];
m92_22 [label="Result = base.Parser.ParseArguments(new string[] { ''file.a'', ''file.b'', ''file.c'' }, options)", span="64-64", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs"];
m92_24 [label="options.InputFilenames[0].Should().Equal(''file.a'')", span="67-67", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs"];
m92_25 [label="options.InputFilenames[1].Should().Equal(''file.b'')", span="68-68", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs"];
m92_26 [label="options.InputFilenames[2].Should().Equal(''file.c'')", span="69-69", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs"];
m92_27 [label="options.OutputFile.Should().Be.Null()", span="70-70", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs"];
m92_28 [label="options.Overwrite.Should().Be.False()", span="71-71", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs"];
m92_29 [label="Console.WriteLine(options)", span="72-72", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs"];
m92_23 [label="ResultShouldBeTrue()", span="66-66", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs"];
m92_30 [label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", span="61-61", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs"];
m92_39 [label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="ValueListAttributeParsingFixture.cs"];
m92_19 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="ValueListAttributeParsingFixture.cs"];
m92_33 [label="Entry Unk.False", span="", cluster="Unk.False", file="ValueListAttributeParsingFixture.cs"];
m92_34 [label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", span="76-76", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs"];
m92_35 [label="var options = new OptionsWithValueListMaximumThree()", span="78-78", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs"];
m92_36 [label="Result = base.Parser.ParseArguments(\r\n                    new string[] { ''file.a'', ''file.b'', ''file.c'', ''file.d'' }, options)", span="79-80", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs"];
m92_37 [label="ResultShouldBeFalse()", span="82-82", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs"];
m92_38 [label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", span="76-76", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs"];
m92_31 [label="Entry CommandLine.Tests.Mocks.OptionsWithValueListMaximumThree.OptionsWithValueListMaximumThree()", span="35-35", cluster="CommandLine.Tests.Mocks.OptionsWithValueListMaximumThree.OptionsWithValueListMaximumThree()", file="ValueListAttributeParsingFixture.cs"];
m92_18 [label="Entry Unk.True", span="", cluster="Unk.True", file="ValueListAttributeParsingFixture.cs"];
m92_48 [label="Entry Unk.Zero", span="", cluster="Unk.Zero", file="ValueListAttributeParsingFixture.cs"];
m92_13 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", file="ValueListAttributeParsingFixture.cs"];
m92_0 [label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeParsingFixture()", span="40-40", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeParsingFixture()", file="ValueListAttributeParsingFixture.cs"];
m92_1 [label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeParsingFixture()", span="40-40", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeParsingFixture()", file="ValueListAttributeParsingFixture.cs"];
m92_32 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="ValueListAttributeParsingFixture.cs"];
m92_47 [label="Entry CommandLine.Tests.Mocks.OptionsWithValueListMaximumZero.OptionsWithValueListMaximumZero()", span="36-36", cluster="CommandLine.Tests.Mocks.OptionsWithValueListMaximumZero.OptionsWithValueListMaximumZero()", file="ValueListAttributeParsingFixture.cs"];
m92_17 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ValueListAttributeParsingFixture.cs"];
m92_2 [label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", span="45-45", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs"];
m92_3 [label="var options = new SimpleOptionsWithValueList()", span="47-47", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs"];
m92_4 [label="Result = base.Parser.ParseArguments(\r\n                new string[] { ''--switch'', ''file1.ext'', ''file2.ext'', ''file3.ext'', ''-s'', ''out.ext'' }, options)", span="48-49", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs"];
m92_6 [label="options.Items[0].Should().Equal(''file1.ext'')", span="52-52", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs"];
m92_7 [label="options.Items[1].Should().Equal(''file2.ext'')", span="53-53", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs"];
m92_8 [label="options.Items[2].Should().Equal(''file3.ext'')", span="54-54", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs"];
m92_9 [label="options.StringValue.Should().Equal(''out.ext'')", span="55-55", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs"];
m92_10 [label="options.BooleanValue.Should().Be.True()", span="56-56", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs"];
m92_11 [label="Console.WriteLine(options)", span="57-57", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs"];
m92_5 [label="ResultShouldBeTrue()", span="51-51", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs"];
m92_12 [label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", span="45-45", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs"];
m92_16 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ValueListAttributeParsingFixture.cs"];
m92_49 [label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", span="97-97", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs"];
m92_50 [label="var options = new OptionsWithValueListMaximumZero()", span="99-99", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs"];
m92_51 [label="Result = base.Parser.ParseArguments(new string[] { ''some'', ''value'' }, options)", span="101-101", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs"];
m92_52 [label="ResultShouldBeFalse()", span="102-102", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs"];
m92_53 [label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", span="97-97", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs"];
m92_40 [label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", span="86-86", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs"];
m92_41 [label="var options = new OptionsWithValueListMaximumZero()", span="88-88", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs"];
m92_42 [label="Result = base.Parser.ParseArguments(new string[] { }, options)", span="89-89", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs"];
m92_44 [label="options.Junk.Should().Count.Zero()", span="92-92", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs"];
m92_45 [label="Console.WriteLine(options)", span="93-93", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs"];
m92_43 [label="ResultShouldBeTrue()", span="91-91", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs"];
m92_46 [label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", span="86-86", cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs"];
m92_15 [label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="ValueListAttributeParsingFixture.cs"];
m92_54 [label="CommandLine.Tests.ValueListAttributeParsingFixture", span="", file="ValueListAttributeParsingFixture.cs"];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_7  [key=2, style=dotted];
m0_1 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label=ae];
m0_1 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=ae];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_8  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_9  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_11  [key=2, style=dotted];
m0_5 -> m0_12  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_10  [key=2, style=dotted];
m0_6 -> m0_0  [key=0, style=bold, color=blue];
m0_13 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.ArgumentParserFixture"];
m5_0 -> m5_5  [key=1, style=dashed, color=green, label=object];
m5_0 -> m5_6  [key=1, style=dashed, color=green, label=object];
m5_0 -> m5_1  [key=0, style=solid, color=red];
m5_0 -> m5_2  [key=1, style=dashed, color=red, label=string];
m5_5 -> m5_6  [key=0, style=solid, color=red];
m5_5 -> m5_14  [key=0, style=solid, color=green];
m5_5 -> m5_7  [key=2, style=dotted, color=red];
m5_4 -> m5_5  [key=0, style=solid, color=red];
m5_4 -> m5_14  [key=1, style=dashed, color=green, label=list];
m5_4 -> m5_19  [key=2, style=dotted, color=green];
m5_4 -> m5_13  [key=1, style=dashed, color=green, label=list];
m5_4 -> m5_15  [key=1, style=dashed, color=green, label=list];
m5_6 -> m5_7  [key=0, style=solid, color=green];
m5_6 -> m5_20  [key=2, style=dotted, color=green];
m5_6 -> m5_21  [key=2, style=dotted, color=green];
m5_6 -> m5_4  [key=0, style=bold, color=blue];
m5_14 -> m5_15  [key=0, style=solid, color=green];
m5_14 -> m5_12  [key=0, style=bold, color=blue];
m5_7 -> m5_14  [key=0, style=solid, color=green];
m5_7 -> m5_13  [key=1, style=dashed, color=green, label=property];
m5_7 -> m5_9  [key=1, style=dashed, color=green, label=property];
m5_7 -> m5_11  [key=1, style=dashed, color=green, label=property];
m5_7 -> m5_8  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid, color=red];
m5_2 -> m5_16  [key=1, style=dashed, color=green, label=cached];
m5_1 -> m5_2  [key=0, style=solid, color=red];
m5_1 -> m5_14  [key=1, style=dashed, color=green, label=key];
m5_1 -> m5_18  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid, color=green];
m5_3 -> m5_16  [key=0, style=solid, color=green];
m5_3 -> m5_0  [key=0, style=bold, color=blue];
m5_16 -> m5_17  [key=0, style=solid, color=red];
m5_15 -> m5_17  [key=0, style=solid, color=green];
m5_13 -> m5_7  [key=0, style=solid, color=green];
m5_13 -> m5_18  [key=2, style=dotted, color=green];
m5_13 -> m5_24  [key=2, style=dotted, color=green];
m5_13 -> m5_14  [key=0, style=solid, color=red];
m5_13 -> m5_15  [key=2, style=dotted, color=red];
m5_11 -> m5_13  [key=1, style=dashed, color=green, label=attribute];
m5_11 -> m5_12  [key=0, style=solid, color=green];
m5_11 -> m5_23  [key=2, style=dotted, color=green];
m5_12 -> m5_13  [key=0, style=solid, color=red];
m5_12 -> m5_7  [key=0, style=solid, color=green];
m5_9 -> m5_10  [key=0, style=solid, color=red];
m5_9 -> m5_22  [key=2, style=dotted, color=green];
m5_9 -> m5_11  [key=2, style=dotted, color=red];
m5_8 -> m5_9  [key=0, style=solid, color=red];
m5_8 -> m5_7  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid, color=green];
m5_10 -> m5_7  [key=0, style=solid, color=green];
m5_10 -> m5_8  [key=0, style=bold, color=blue];
m5_17 -> m5_0  [key=0, style=bold, color=blue];
m5_17 -> m5_18  [key=0, style=solid, color=red];
m5_20 -> m5_21  [key=0, style=solid, color=red];
m5_20 -> m5_7  [key=2, style=dotted, color=red];
m5_18 -> m5_16  [key=0, style=bold, color=blue];
m5_21 -> m5_22  [key=0, style=solid, color=red];
m5_21 -> m5_11  [key=2, style=dotted, color=red];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_45  [key=1, style=dashed, color=darkseagreen4, label=object];
m5_51 -> m5_52  [key=0, style=solid, color=green];
m5_42 -> m5_51  [key=1, style=dashed, color=green, label=key];
m5_42 -> m5_18  [key=2, style=dotted];
m5_42 -> m5_43  [key=0, style=solid];
m5_50 -> m5_51  [key=0, style=solid, color=green];
m5_50 -> m5_52  [key=1, style=dashed, color=green, label=data];
m5_52 -> m5_55  [key=0, style=solid, color=green];
m5_44 -> m5_45  [key=0, style=solid, color=green];
m5_44 -> m5_54  [key=0, style=solid, color=green];
m5_43 -> m5_44  [key=0, style=solid, color=green];
m5_43 -> m5_54  [key=1, style=dashed, color=green, label=cached];
m5_45 -> m5_46  [key=0, style=solid, color=green];
m5_45 -> m5_20  [key=2, style=dotted];
m5_45 -> m5_40  [key=2, style=dotted];
m5_54 -> m5_55  [key=0, style=solid, color=green];
m5_46 -> m5_47  [key=0, style=solid, color=green];
m5_46 -> m5_53  [key=0, style=solid, color=green];
m5_46 -> m5_48  [key=1, style=dashed, color=green, label=method];
m5_47 -> m5_46  [key=0, style=solid, color=green];
m5_47 -> m5_48  [key=0, style=solid];
m5_49 -> m5_46  [key=0, style=solid, color=green];
m5_49 -> m5_50  [key=0, style=solid, color=green];
m5_53 -> m5_55  [key=0, style=solid];
m5_48 -> m5_50  [key=1, style=dashed, color=green, label=attribute];
m5_48 -> m5_23  [key=2, style=dotted];
m5_48 -> m5_49  [key=0, style=solid];
m5_55 -> m5_41  [key=0, style=bold, color=blue];
m5_24 -> m5_19  [key=0, style=bold, color=blue];
m5_22 -> m5_23  [key=0, style=solid, color=red];
m5_22 -> m5_15  [key=2, style=dotted, color=red];
m5_19 -> m5_20  [key=0, style=solid, color=red];
m5_23 -> m5_24  [key=0, style=solid, color=red];
m5_23 -> m5_0  [key=2, style=dotted, color=red];
m5_56 -> m5_61  [key=1, style=dashed, color=darkseagreen4, label=object];
m5_56 -> m5_57  [key=0, style=solid];
m5_61 -> m5_20  [key=2, style=dotted];
m5_61 -> m5_21  [key=2, style=dotted];
m5_61 -> m5_62  [key=0, style=solid];
m5_60 -> m5_19  [key=2, style=dotted];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_68  [key=1, style=dashed, color=darkseagreen4, label=list];
m5_60 -> m5_69  [key=1, style=dashed, color=darkseagreen4, label=list];
m5_60 -> m5_70  [key=1, style=dashed, color=darkseagreen4, label=list];
m5_57 -> m5_18  [key=2, style=dotted];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_69  [key=1, style=dashed, color=darkseagreen4, label=key];
m5_68 -> m5_24  [key=2, style=dotted];
m5_68 -> m5_62  [key=0, style=solid];
m5_64 -> m5_22  [key=2, style=dotted];
m5_64 -> m5_65  [key=0, style=solid];
m5_66 -> m5_23  [key=2, style=dotted];
m5_66 -> m5_68  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m5_66 -> m5_67  [key=0, style=solid];
m5_62 -> m5_64  [key=1, style=dashed, color=darkseagreen4, label=property];
m5_62 -> m5_66  [key=1, style=dashed, color=darkseagreen4, label=property];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_69  [key=0, style=solid];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_71  [key=0, style=solid];
m5_69 -> m5_70  [key=0, style=solid];
m5_70 -> m5_72  [key=0, style=solid];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_71  [key=1, style=dashed, color=darkseagreen4, label=cached];
m5_67 -> m5_68  [key=0, style=solid];
m5_67 -> m5_62  [key=0, style=solid];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_62  [key=0, style=solid];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_62  [key=0, style=solid];
m5_71 -> m5_72  [key=0, style=solid];
m5_72 -> m5_56  [key=0, style=bold, color=blue];
m5_25 -> m5_26  [key=0, style=solid, color=red];
m5_25 -> m5_29  [key=1, style=dashed, color=green, label=object];
m5_26 -> m5_27  [key=0, style=solid, color=red];
m5_26 -> m5_18  [key=2, style=dotted, color=green];
m5_26 -> m5_35  [key=1, style=dashed, color=green, label=key];
m5_26 -> m5_7  [key=2, style=dotted, color=red];
m5_27 -> m5_28  [key=0, style=solid, color=red];
m5_27 -> m5_38  [key=1, style=dashed, color=green, label=cached];
m5_27 -> m5_11  [key=2, style=dotted, color=red];
m5_35 -> m5_36  [key=0, style=solid, color=green];
m5_29 -> m5_30  [key=0, style=solid, color=red];
m5_29 -> m5_20  [key=2, style=dotted, color=green];
m5_29 -> m5_40  [key=2, style=dotted, color=green];
m5_29 -> m5_0  [key=2, style=dotted, color=red];
m5_28 -> m5_29  [key=0, style=solid, color=red];
m5_28 -> m5_38  [key=0, style=solid, color=green];
m5_28 -> m5_15  [key=2, style=dotted, color=red];
m5_30 -> m5_31  [key=0, style=solid, color=green];
m5_30 -> m5_37  [key=0, style=solid, color=green];
m5_30 -> m5_32  [key=1, style=dashed, color=green, label=method];
m5_30 -> m5_34  [key=1, style=dashed, color=green, label=method];
m5_30 -> m5_25  [key=0, style=bold, color=blue];
m5_38 -> m5_39  [key=0, style=solid];
m5_31 -> m5_30  [key=0, style=solid, color=green];
m5_31 -> m5_32  [key=0, style=solid, color=green];
m5_31 -> m5_1  [key=1, style=dashed, color=red, label="CommandLine.Tests.AttributesFixture.CustomOptionAttribute"];
m5_31 -> m5_2  [key=1, style=dashed, color=red, label="CommandLine.Tests.AttributesFixture.CustomOptionAttribute"];
m5_33 -> m5_30  [key=0, style=solid, color=green];
m5_33 -> m5_34  [key=0, style=solid, color=green];
m5_37 -> m5_39  [key=0, style=solid];
m5_32 -> m5_33  [key=0, style=solid, color=green];
m5_32 -> m5_23  [key=2, style=dotted, color=green];
m5_32 -> m5_34  [key=1, style=dashed, color=green, label=attribute];
m5_34 -> m5_36  [key=1, style=dashed, color=green, label=data];
m5_34 -> m5_18  [key=2, style=dotted];
m5_34 -> m5_35  [key=0, style=solid];
m5_36 -> m5_39  [key=0, style=solid, color=green];
m5_39 -> m5_25  [key=0, style=bold, color=blue];
m5_80 -> m5_87  [key=1, style=dashed, color=darkseagreen4, label=object];
m5_80 -> m5_81  [key=0, style=solid];
m5_80 -> m5_85  [key=1, style=dashed, color=darkseagreen4, label=object];
m5_80 -> m5_94  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_87 -> m5_20  [key=2, style=dotted];
m5_87 -> m5_21  [key=2, style=dotted];
m5_87 -> m5_88  [key=0, style=solid];
m5_81 -> m5_18  [key=2, style=dotted];
m5_81 -> m5_82  [key=0, style=solid];
m5_81 -> m5_96  [key=1, style=dashed, color=darkseagreen4, label=key];
m5_95 -> m5_18  [key=2, style=dotted];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_97  [key=1, style=dashed, color=darkseagreen4, label=found];
m5_90 -> m5_22  [key=2, style=dotted];
m5_90 -> m5_91  [key=0, style=solid];
m5_92 -> m5_23  [key=2, style=dotted];
m5_92 -> m5_95  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m5_92 -> m5_93  [key=0, style=solid];
m5_85 -> m5_87  [key=0, style=solid];
m5_85 -> m5_86  [key=0, style=solid];
m5_88 -> m5_95  [key=1, style=dashed, color=darkseagreen4, label=property];
m5_88 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=property];
m5_88 -> m5_92  [key=1, style=dashed, color=darkseagreen4, label=property];
m5_88 -> m5_89  [key=0, style=solid];
m5_88 -> m5_98  [key=0, style=solid];
m5_82 -> m5_83  [key=0, style=solid];
m5_82 -> m5_98  [key=1, style=dashed, color=darkseagreen4, label=cached];
m5_96 -> m5_97  [key=0, style=solid];
m5_94 -> m5_95  [key=0, style=solid];
m5_94 -> m5_88  [key=0, style=solid];
m5_94 -> m5_100  [key=2, style=dotted];
m5_97 -> m5_99  [key=0, style=solid];
m5_89 -> m5_90  [key=0, style=solid];
m5_89 -> m5_88  [key=0, style=solid];
m5_91 -> m5_92  [key=0, style=solid];
m5_91 -> m5_88  [key=0, style=solid];
m5_93 -> m5_94  [key=0, style=solid];
m5_84 -> m5_85  [key=0, style=solid];
m5_86 -> m5_99  [key=0, style=solid];
m5_98 -> m5_99  [key=0, style=solid];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_98  [key=0, style=solid];
m5_99 -> m5_80  [key=0, style=bold, color=blue];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_12  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m7_9 -> m7_13  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_7  [key=2, style=dotted];
m7_10 -> m7_8  [key=2, style=dotted];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_15  [key=0, style=solid];
m7_12 -> m7_3  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_7  [key=2, style=dotted];
m7_13 -> m7_8  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_13  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_11 -> m7_14  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_14 -> m7_12  [key=0, style=solid];
m7_14 -> m7_14  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_15 -> m7_9  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label="T[]"];
m7_0 -> m7_4  [key=1, style=dashed, color=darkseagreen4, label="T[]"];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_7  [key=2, style=dotted];
m7_1 -> m7_8  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_6  [key=0, style=solid];
m7_3 -> m7_3  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_7  [key=2, style=dotted];
m7_4 -> m7_8  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_4  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_2 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_5 -> m7_3  [key=0, style=solid];
m7_5 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_6 -> m7_0  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_2 -> m10_0  [key=0, style=bold, color=blue];
m10_3 -> m10_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.BooleanSetOptions"];
m11_512 -> m11_513  [key=0, style=solid];
m11_513 -> m11_512  [key=0, style=bold, color=blue];
m11_15 -> m11_18  [key=0, style=solid, color=red];
m11_15 -> m11_10  [key=3, color=red, style=bold, label="Parameter variable System.Reflection.MethodInfo value"];
m11_18 -> m11_19  [key=0, style=solid, color=red];
m11_18 -> m11_20  [key=2, style=dotted, color=red];
m11_19 -> m11_15  [key=0, style=bold, color=blue];
m11_331 -> m11_348  [key=0, style=solid, color=red];
m11_331 -> m11_350  [key=1, style=dashed, color=red, label=string];
m11_331 -> m11_352  [key=1, style=dashed, color=red, label=string];
m11_331 -> m11_213  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
m11_331 -> m11_114  [key=3, color=red, style=bold, label="method methodReturn bool SetValueScalar"];
m11_348 -> m11_349  [key=0, style=solid, color=red];
m11_348 -> m11_351  [key=0, style=solid, color=red];
m11_350 -> m11_353  [key=0, style=solid, color=red];
m11_350 -> m11_355  [key=0, style=solid, color=red];
m11_350 -> m11_357  [key=0, style=solid, color=red];
m11_350 -> m11_359  [key=0, style=solid, color=red];
m11_350 -> m11_361  [key=0, style=solid, color=red];
m11_350 -> m11_363  [key=2, style=dotted, color=red];
m11_350 -> m11_64  [key=2, style=dotted, color=red];
m11_352 -> m11_353  [key=0, style=solid, color=red];
m11_352 -> m11_355  [key=0, style=solid, color=red];
m11_352 -> m11_357  [key=0, style=solid, color=red];
m11_352 -> m11_359  [key=0, style=solid, color=red];
m11_352 -> m11_361  [key=0, style=solid, color=red];
m11_352 -> m11_346  [key=2, style=dotted, color=red];
m11_352 -> m11_64  [key=2, style=dotted, color=red];
m11_349 -> m11_350  [key=0, style=solid, color=red];
m11_351 -> m11_352  [key=0, style=solid, color=red];
m11_353 -> m11_354  [key=0, style=solid, color=red];
m11_355 -> m11_356  [key=0, style=solid, color=red];
m11_357 -> m11_358  [key=0, style=solid, color=red];
m11_359 -> m11_360  [key=0, style=solid, color=red];
m11_361 -> m11_362  [key=0, style=solid, color=red];
m11_354 -> m11_362  [key=0, style=solid, color=red];
m11_356 -> m11_362  [key=0, style=solid, color=red];
m11_358 -> m11_362  [key=0, style=solid, color=red];
m11_360 -> m11_362  [key=0, style=solid, color=red];
m11_362 -> m11_331  [key=0, style=bold, color=blue];
m11_529 -> m11_530  [key=0, style=solid];
m11_529 -> m11_579  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseArguments"];
m11_530 -> m11_529  [key=0, style=bold, color=blue];
m11_159 -> m11_160  [key=0, style=solid, color=red];
m11_159 -> m11_161  [key=1, style=dashed, color=red, label=string];
m11_160 -> m11_161  [key=0, style=solid, color=red];
m11_161 -> m11_162  [key=0, style=solid, color=red];
m11_162 -> m11_159  [key=0, style=bold, color=blue];
m11_470 -> m11_471  [key=0, style=solid, color=red];
m11_471 -> m11_472  [key=0, style=solid, color=red];
m11_471 -> m11_474  [key=1, style=dashed, color=red, label=other];
m11_472 -> m11_473  [key=0, style=solid, color=red];
m11_472 -> m11_474  [key=0, style=solid, color=red];
m11_474 -> m11_475  [key=0, style=solid, color=red];
m11_474 -> m11_476  [key=2, style=dotted, color=red];
m11_473 -> m11_475  [key=0, style=solid, color=red];
m11_475 -> m11_470  [key=0, style=bold, color=blue];
m11_95 -> m11_479  [key=0, style=solid, color=red];
m11_95 -> m11_480  [key=1, style=dashed, color=red, label=bool];
m11_479 -> m11_480  [key=0, style=solid, color=red];
m11_479 -> m11_159  [key=2, style=dotted, color=red];
m11_480 -> m11_481  [key=0, style=solid, color=red];
m11_481 -> m11_95  [key=0, style=bold, color=blue];
m11_579 -> m11_580  [key=0, style=solid, color=red];
m11_579 -> m11_581  [key=1, style=dashed, color=red, label=object];
m11_579 -> m11_582  [key=1, style=dashed, color=red, label=object];
m11_579 -> m11_583  [key=1, style=dashed, color=red, label="System.IO.TextWriter"];
m11_579 -> m11_584  [key=1, style=dashed, color=red, label="string[]"];
m11_579 -> m11_586  [key=1, style=dashed, color=red, label=object];
m11_579 -> m11_587  [key=1, style=dashed, color=red, label="System.IO.TextWriter"];
m11_579 -> m11_590  [key=1, style=dashed, color=red, label="string[]"];
m11_579 -> m11_529  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IO.TextWriter helpWriter"];
m11_579 -> m11_576  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
m11_579 -> m11_114  [key=3, color=red, style=bold, label="method methodReturn bool ParseArguments"];
m11_579 -> m11_594  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseArguments"];
m11_580 -> m11_581  [key=0, style=solid, color=red];
m11_580 -> m11_491  [key=2, style=dotted, color=red];
m11_581 -> m11_582  [key=0, style=solid, color=red];
m11_581 -> m11_491  [key=2, style=dotted, color=red];
m11_582 -> m11_583  [key=0, style=solid, color=red];
m11_582 -> m11_592  [key=2, style=dotted, color=red];
m11_582 -> m11_584  [key=1, style=dashed, color=red, label=pair];
m11_582 -> m11_586  [key=1, style=dashed, color=red, label=pair];
m11_583 -> m11_584  [key=0, style=solid, color=red];
m11_583 -> m11_590  [key=0, style=solid, color=red];
m11_584 -> m11_585  [key=0, style=solid, color=red];
m11_584 -> m11_589  [key=0, style=solid, color=red];
m11_584 -> m11_593  [key=2, style=dotted, color=red];
m11_584 -> m11_594  [key=2, style=dotted, color=red];
m11_586 -> m11_587  [key=0, style=solid, color=red];
m11_586 -> m11_8  [key=2, style=dotted, color=red];
m11_587 -> m11_588  [key=0, style=solid, color=red];
m11_587 -> m11_595  [key=2, style=dotted, color=red];
m11_590 -> m11_591  [key=0, style=solid, color=red];
m11_590 -> m11_594  [key=2, style=dotted, color=red];
m11_585 -> m11_586  [key=0, style=solid, color=red];
m11_589 -> m11_591  [key=0, style=solid, color=red];
m11_588 -> m11_591  [key=0, style=solid, color=red];
m11_591 -> m11_579  [key=0, style=bold, color=blue];
m11_53 -> m11_535  [key=0, style=solid];
m11_535 -> m11_53  [key=0, style=bold, color=blue];
m11_217 -> m11_218  [key=0, style=solid, color=red];
m11_217 -> m11_219  [key=1, style=dashed, color=red, label=string];
m11_218 -> m11_219  [key=0, style=solid, color=red];
m11_218 -> m11_222  [key=2, style=dotted, color=red];
m11_219 -> m11_220  [key=0, style=solid, color=red];
m11_220 -> m11_221  [key=0, style=solid, color=red];
m11_221 -> m11_217  [key=0, style=bold, color=blue];
m11_86 -> m11_87  [key=0, style=solid, color=red];
m11_87 -> m11_88  [key=0, style=solid, color=red];
m11_87 -> m11_89  [key=2, style=dotted, color=red];
m11_88 -> m11_86  [key=0, style=bold, color=blue];
m11_216 -> m11_373  [key=0, style=solid, color=red];
m11_216 -> m11_374  [key=1, style=dashed, color=red, label=bool];
m11_216 -> m11_114  [key=3, color=red, style=bold, label="method methodReturn bool SetValue"];
m11_216 -> m11_169  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
m11_216 -> m11_250  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
m11_373 -> m11_374  [key=0, style=solid, color=red];
m11_374 -> m11_375  [key=0, style=solid, color=red];
m11_374 -> m11_64  [key=2, style=dotted, color=red];
m11_375 -> m11_376  [key=0, style=solid, color=red];
m11_376 -> m11_216  [key=0, style=bold, color=blue];
m11_223 -> m11_224  [key=0, style=solid, color=red];
m11_224 -> m11_225  [key=0, style=solid, color=red];
m11_225 -> m11_223  [key=0, style=bold, color=blue];
m11_504 -> m11_505  [key=0, style=solid, color=red];
m11_505 -> m11_506  [key=0, style=solid, color=red];
m11_505 -> m11_507  [key=0, style=solid, color=red];
m11_506 -> m11_511  [key=0, style=solid, color=red];
m11_506 -> m11_34  [key=2, style=dotted, color=red];
m11_507 -> m11_508  [key=0, style=solid, color=red];
m11_507 -> m11_510  [key=0, style=solid, color=red];
m11_508 -> m11_509  [key=0, style=solid, color=red];
m11_510 -> m11_511  [key=0, style=solid, color=red];
m11_509 -> m11_511  [key=0, style=solid, color=red];
m11_511 -> m11_504  [key=0, style=bold, color=blue];
m11_551 -> m11_552  [key=0, style=solid, color=red];
m11_551 -> m11_553  [key=1, style=dashed, color=red, label=bool];
m11_552 -> m11_553  [key=0, style=solid, color=red];
m11_553 -> m11_554  [key=0, style=solid, color=red];
m11_554 -> m11_551  [key=0, style=bold, color=blue];
m11_560 -> m11_561  [key=0, style=solid, color=red];
m11_560 -> m11_562  [key=1, style=dashed, color=red, label=bool];
m11_560 -> m11_563  [key=1, style=dashed, color=red, label="System.IO.TextWriter"];
m11_560 -> m11_564  [key=1, style=dashed, color=red, label=bool];
m11_561 -> m11_562  [key=0, style=solid, color=red];
m11_562 -> m11_563  [key=0, style=solid, color=red];
m11_563 -> m11_564  [key=0, style=solid, color=red];
m11_564 -> m11_565  [key=0, style=solid, color=red];
m11_565 -> m11_560  [key=0, style=bold, color=blue];
m11_441 -> m11_442  [key=0, style=solid, color=red];
m11_441 -> m11_444  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_441 -> m11_432  [key=3, color=red, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
m11_442 -> m11_443  [key=0, style=solid, color=red];
m11_442 -> m11_444  [key=1, style=dashed, color=red, label=setName];
m11_442 -> m11_445  [key=1, style=dashed, color=red, label=setName];
m11_444 -> m11_445  [key=0, style=solid, color=red];
m11_444 -> m11_396  [key=2, style=dotted, color=red];
m11_444 -> m11_448  [key=2, style=dotted, color=red];
m11_443 -> m11_444  [key=0, style=solid, color=red];
m11_443 -> m11_445  [key=0, style=solid, color=red];
m11_443 -> m11_447  [key=2, style=dotted, color=red];
m11_445 -> m11_446  [key=0, style=solid, color=red];
m11_445 -> m11_399  [key=2, style=dotted, color=red];
m11_446 -> m11_441  [key=0, style=bold, color=blue];
m11_8 -> m11_9  [key=0, style=solid, color=red];
m11_8 -> m11_10  [key=1, style=dashed, color=red, label="CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>"];
m11_8 -> m11_13  [key=1, style=dashed, color=red, label=object];
m11_8 -> m11_579  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
m11_9 -> m11_10  [key=0, style=solid, color=red];
m11_10 -> m11_11  [key=0, style=solid, color=red];
m11_10 -> m11_13  [key=1, style=dashed, color=red, label=method];
m11_13 -> m11_14  [key=0, style=solid, color=red];
m11_13 -> m11_17  [key=2, style=dotted, color=red];
m11_11 -> m11_12  [key=0, style=solid, color=red];
m11_11 -> m11_13  [key=0, style=solid, color=red];
m11_11 -> m11_15  [key=2, style=dotted, color=red];
m11_12 -> m11_14  [key=0, style=solid, color=red];
m11_12 -> m11_16  [key=2, style=dotted, color=red];
m11_14 -> m11_8  [key=0, style=bold, color=blue];
m11_110 -> m11_167  [key=0, style=solid, color=red];
m11_167 -> m11_168  [key=0, style=solid, color=red];
m11_168 -> m11_110  [key=0, style=bold, color=blue];
m11_464 -> m11_465  [key=0, style=solid, color=red];
m11_465 -> m11_466  [key=0, style=solid, color=red];
m11_465 -> m11_469  [key=2, style=dotted, color=red];
m11_465 -> m11_467  [key=1, style=dashed, color=red, label=leftHash];
m11_466 -> m11_467  [key=0, style=solid, color=red];
m11_466 -> m11_469  [key=2, style=dotted, color=red];
m11_467 -> m11_468  [key=0, style=solid, color=red];
m11_468 -> m11_464  [key=0, style=bold, color=blue];
m11_555 -> m11_556  [key=0, style=solid, color=red];
m11_555 -> m11_557  [key=1, style=dashed, color=red, label=bool];
m11_555 -> m11_558  [key=1, style=dashed, color=red, label="System.IO.TextWriter"];
m11_556 -> m11_557  [key=0, style=solid, color=red];
m11_557 -> m11_558  [key=0, style=solid, color=red];
m11_558 -> m11_559  [key=0, style=solid, color=red];
m11_559 -> m11_555  [key=0, style=bold, color=blue];
m11_142 -> m11_143  [key=0, style=solid, color=red];
m11_142 -> m11_145  [key=1, style=dashed, color=red, label=bool];
m11_142 -> m11_139  [key=3, color=darkorchid, style=bold, label="Parameter variable bool value"];
m11_142 -> m11_172  [key=3, color=red, style=bold, label="Parameter variable bool value"];
m11_142 -> m11_261  [key=3, color=red, style=bold, label="Parameter variable bool value"];
m11_142 -> m11_114  [key=3, color=red, style=bold, label="Parameter variable bool addMoveNextIfTrue"];
m11_142 -> m11_144  [key=3, color=red, style=bold, label="method methodReturn CommandLine.ParserState BooleanToParserState"];
m11_142 -> m11_146  [key=3, color=red, style=bold, label="method methodReturn CommandLine.ParserState BooleanToParserState"];
m11_142 -> m11_147  [key=3, color=red, style=bold, label="method methodReturn CommandLine.ParserState BooleanToParserState"];
m11_143 -> m11_144  [key=0, style=solid, color=red];
m11_143 -> m11_145  [key=0, style=solid, color=red];
m11_145 -> m11_146  [key=0, style=solid, color=red];
m11_145 -> m11_147  [key=0, style=solid, color=red];
m11_144 -> m11_148  [key=0, style=solid, color=red];
m11_146 -> m11_148  [key=0, style=solid, color=red];
m11_147 -> m11_148  [key=0, style=solid, color=red];
m11_148 -> m11_142  [key=0, style=bold, color=blue];
m11_399 -> m11_400  [key=0, style=solid, color=red];
m11_400 -> m11_401  [key=0, style=solid, color=red];
m11_401 -> m11_399  [key=0, style=bold, color=blue];
m11_329 -> m11_704  [key=0, style=solid, color=red];
m11_704 -> m11_705  [key=0, style=solid, color=red];
m11_704 -> m11_706  [key=2, style=dotted, color=red];
m11_705 -> m11_329  [key=0, style=bold, color=blue];
m11_23 -> m11_24  [key=0, style=solid, color=red];
m11_23 -> m11_25  [key=1, style=dashed, color=red, label=string];
m11_23 -> m11_26  [key=1, style=dashed, color=red, label=string];
m11_23 -> m11_27  [key=1, style=dashed, color=red, label=string];
m11_23 -> m11_30  [key=1, style=dashed, color=red, label=string];
m11_23 -> m11_31  [key=1, style=dashed, color=red, label=string];
m11_24 -> m11_25  [key=0, style=solid, color=red];
m11_24 -> m11_26  [key=0, style=solid, color=red];
m11_24 -> m11_33  [key=2, style=dotted, color=red];
m11_25 -> m11_28  [key=0, style=solid, color=red];
m11_26 -> m11_27  [key=0, style=solid, color=red];
m11_26 -> m11_28  [key=0, style=solid, color=red];
m11_26 -> m11_33  [key=2, style=dotted, color=red];
m11_27 -> m11_28  [key=0, style=solid, color=red];
m11_30 -> m11_31  [key=0, style=solid, color=red];
m11_31 -> m11_32  [key=0, style=solid, color=red];
m11_28 -> m11_29  [key=0, style=solid, color=red];
m11_28 -> m11_30  [key=0, style=solid, color=red];
m11_29 -> m11_32  [key=0, style=solid, color=red];
m11_29 -> m11_34  [key=2, style=dotted, color=red];
m11_32 -> m11_23  [key=0, style=bold, color=blue];
m11_576 -> m11_577  [key=0, style=solid, color=red];
m11_576 -> m11_527  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
m11_576 -> m11_579  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseArguments"];
m11_577 -> m11_578  [key=0, style=solid, color=red];
m11_577 -> m11_579  [key=2, style=dotted, color=red];
m11_578 -> m11_576  [key=0, style=bold, color=blue];
m11_673 -> m11_674  [key=0, style=solid, color=red];
m11_673 -> m11_677  [key=3, color=red, style=bold, label="method methodReturn TAttribute RetrieveMethodAttributeOnly"];
m11_673 -> m11_58  [key=3, color=red, style=bold, label="method methodReturn TAttribute RetrieveMethodAttributeOnly"];
m11_674 -> m11_675  [key=0, style=solid, color=red];
m11_674 -> m11_660  [key=2, style=dotted, color=red];
m11_674 -> m11_672  [key=2, style=dotted, color=red];
m11_675 -> m11_676  [key=0, style=solid, color=red];
m11_675 -> m11_680  [key=0, style=solid, color=red];
m11_675 -> m11_677  [key=1, style=dashed, color=red, label=method];
m11_676 -> m11_677  [key=0, style=solid, color=red];
m11_676 -> m11_675  [key=0, style=solid, color=red];
m11_680 -> m11_681  [key=0, style=solid, color=red];
m11_677 -> m11_678  [key=0, style=solid, color=red];
m11_677 -> m11_663  [key=2, style=dotted, color=red];
m11_677 -> m11_679  [key=1, style=dashed, color=red, label=attribute];
m11_678 -> m11_679  [key=0, style=solid, color=red];
m11_678 -> m11_675  [key=0, style=solid, color=red];
m11_679 -> m11_681  [key=0, style=solid, color=red];
m11_681 -> m11_673  [key=0, style=bold, color=blue];
m11_66 -> m11_67  [key=0, style=solid, color=red];
m11_66 -> m11_58  [key=3, color=red, style=bold, label="method methodReturn CommandLine.ValueListAttribute GetAttribute"];
m11_67 -> m11_68  [key=0, style=solid, color=red];
m11_67 -> m11_75  [key=2, style=dotted, color=red];
m11_67 -> m11_70  [key=1, style=dashed, color=red, label=list];
m11_67 -> m11_72  [key=1, style=dashed, color=red, label=list];
m11_68 -> m11_69  [key=0, style=solid, color=red];
m11_68 -> m11_70  [key=0, style=solid, color=red];
m11_70 -> m11_71  [key=0, style=solid, color=red];
m11_70 -> m11_72  [key=0, style=solid, color=red];
m11_72 -> m11_73  [key=0, style=solid, color=red];
m11_69 -> m11_74  [key=0, style=solid, color=red];
m11_71 -> m11_74  [key=0, style=solid, color=red];
m11_71 -> m11_34  [key=2, style=dotted, color=red];
m11_73 -> m11_74  [key=0, style=solid, color=red];
m11_74 -> m11_66  [key=0, style=bold, color=blue];
m11_707 -> m11_708  [key=0, style=solid, color=red];
m11_708 -> m11_709  [key=0, style=solid, color=red];
m11_708 -> m11_710  [key=2, style=dotted, color=red];
m11_709 -> m11_707  [key=0, style=bold, color=blue];
m11_618 -> m11_631  [key=0, style=solid, color=red];
m11_618 -> m11_633  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.ParsingError>"];
m11_618 -> m11_594  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
m11_631 -> m11_632  [key=0, style=solid, color=red];
m11_631 -> m11_633  [key=1, style=dashed, color=red, label=commandLineOptionsBase];
m11_633 -> m11_634  [key=0, style=solid, color=red];
m11_633 -> m11_635  [key=2, style=dotted, color=red];
m11_632 -> m11_633  [key=0, style=solid, color=red];
m11_632 -> m11_634  [key=0, style=solid, color=red];
m11_634 -> m11_618  [key=0, style=bold, color=blue];
m11_539 -> m11_540  [key=0, style=solid];
m11_540 -> m11_539  [key=0, style=bold, color=blue];
m11_514 -> m11_515  [key=0, style=solid, color=red];
m11_515 -> m11_516  [key=0, style=solid, color=red];
m11_516 -> m11_517  [key=0, style=solid, color=red];
m11_516 -> m11_66  [key=2, style=dotted, color=red];
m11_517 -> m11_518  [key=0, style=solid, color=red];
m11_517 -> m11_519  [key=0, style=solid, color=red];
m11_518 -> m11_519  [key=0, style=solid, color=red];
m11_518 -> m11_54  [key=2, style=dotted, color=red];
m11_519 -> m11_514  [key=0, style=bold, color=blue];
m11_310 -> m11_311  [key=0, style=solid, color=red];
m11_310 -> m11_313  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
m11_310 -> m11_317  [key=1, style=dashed, color=red, label=object];
m11_310 -> m11_58  [key=3, color=red, style=bold, label="method methodReturn CommandLine.OptionMap CreateMap"];
m11_310 -> m11_594  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
m11_311 -> m11_312  [key=0, style=solid, color=red];
m11_311 -> m11_75  [key=2, style=dotted, color=red];
m11_311 -> m11_313  [key=1, style=dashed, color=red, label=list];
m11_311 -> m11_314  [key=1, style=dashed, color=red, label=list];
m11_313 -> m11_314  [key=0, style=solid, color=red];
m11_313 -> m11_321  [key=2, style=dotted, color=red];
m11_313 -> m11_316  [key=1, style=dashed, color=red, label=map];
m11_313 -> m11_317  [key=1, style=dashed, color=red, label=map];
m11_313 -> m11_318  [key=1, style=dashed, color=red, label=map];
m11_317 -> m11_318  [key=0, style=solid, color=red];
m11_312 -> m11_313  [key=0, style=solid, color=red];
m11_312 -> m11_319  [key=0, style=solid, color=red];
m11_314 -> m11_315  [key=0, style=solid, color=red];
m11_314 -> m11_317  [key=0, style=solid, color=red];
m11_314 -> m11_316  [key=1, style=dashed, color=red, label=pair];
m11_319 -> m11_320  [key=0, style=solid, color=red];
m11_316 -> m11_314  [key=0, style=solid, color=red];
m11_316 -> m11_294  [key=2, style=dotted, color=red];
m11_318 -> m11_320  [key=0, style=solid, color=red];
m11_315 -> m11_316  [key=0, style=solid, color=red];
m11_315 -> m11_314  [key=0, style=solid, color=red];
m11_320 -> m11_310  [key=0, style=bold, color=blue];
m11_157 -> m11_158  [key=0, style=solid];
m11_158 -> m11_157  [key=0, style=bold, color=blue];
m11_396 -> m11_397  [key=0, style=solid, color=red];
m11_397 -> m11_398  [key=0, style=solid, color=red];
m11_398 -> m11_396  [key=0, style=bold, color=blue];
m11_111 -> m11_248  [key=0, style=solid, color=red];
m11_248 -> m11_249  [key=0, style=solid, color=red];
m11_249 -> m11_111  [key=0, style=bold, color=blue];
m11_643 -> m11_644  [key=0, style=solid, color=red];
m11_643 -> m11_645  [key=1, style=dashed, color=red, label=string];
m11_644 -> m11_645  [key=0, style=solid, color=red];
m11_644 -> m11_646  [key=0, style=solid, color=red];
m11_645 -> m11_646  [key=0, style=solid, color=red];
m11_645 -> m11_647  [key=2, style=dotted, color=red];
m11_646 -> m11_643  [key=0, style=bold, color=blue];
m11_531 -> m11_532  [key=0, style=solid, color=red];
m11_532 -> m11_533  [key=0, style=solid, color=red];
m11_532 -> m11_482  [key=2, style=dotted, color=red];
m11_533 -> m11_531  [key=0, style=bold, color=blue];
m11_136 -> m11_137  [key=0, style=solid, color=red];
m11_136 -> m11_619  [key=3, color=red, style=bold, label="Parameter variable bool caseSensitive"];
m11_137 -> m11_138  [key=0, style=solid, color=red];
m11_137 -> m11_135  [key=2, style=dotted, color=red];
m11_138 -> m11_136  [key=0, style=bold, color=blue];
m11_35 -> m11_36  [key=0, style=solid, color=red];
m11_36 -> m11_37  [key=0, style=solid, color=red];
m11_37 -> m11_35  [key=0, style=bold, color=blue];
m11_128 -> m11_165  [key=0, style=solid];
m11_128 -> m11_226  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MoveNext"];
m11_128 -> m11_495  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MoveNext"];
m11_165 -> m11_128  [key=0, style=bold, color=blue];
m11_418 -> m11_419  [key=0, style=solid, color=red];
m11_419 -> m11_420  [key=0, style=solid, color=red];
m11_419 -> m11_421  [key=0, style=solid, color=red];
m11_420 -> m11_419  [key=0, style=solid, color=red];
m11_420 -> m11_388  [key=2, style=dotted, color=red];
m11_421 -> m11_418  [key=0, style=bold, color=blue];
m11_131 -> m11_534  [key=0, style=solid];
m11_534 -> m11_131  [key=0, style=bold, color=blue];
m11_682 -> m11_683  [key=0, style=solid, color=red];
m11_682 -> m11_684  [key=1, style=dashed, color=red, label=object];
m11_683 -> m11_684  [key=0, style=solid, color=red];
m11_683 -> m11_89  [key=2, style=dotted, color=red];
m11_683 -> m11_691  [key=1, style=dashed, color=red, label=list];
m11_683 -> m11_692  [key=1, style=dashed, color=red, label=list];
m11_684 -> m11_685  [key=0, style=solid, color=red];
m11_684 -> m11_660  [key=2, style=dotted, color=red];
m11_684 -> m11_661  [key=2, style=dotted, color=red];
m11_691 -> m11_685  [key=0, style=solid, color=red];
m11_691 -> m11_129  [key=2, style=dotted, color=red];
m11_692 -> m11_693  [key=0, style=solid, color=red];
m11_685 -> m11_686  [key=0, style=solid, color=red];
m11_685 -> m11_692  [key=0, style=solid, color=red];
m11_685 -> m11_687  [key=1, style=dashed, color=red, label=property];
m11_685 -> m11_689  [key=1, style=dashed, color=red, label=property];
m11_686 -> m11_687  [key=0, style=solid, color=red];
m11_686 -> m11_685  [key=0, style=solid, color=red];
m11_687 -> m11_688  [key=0, style=solid, color=red];
m11_687 -> m11_662  [key=2, style=dotted, color=red];
m11_689 -> m11_690  [key=0, style=solid, color=red];
m11_689 -> m11_663  [key=2, style=dotted, color=red];
m11_689 -> m11_691  [key=1, style=dashed, color=red, label=attribute];
m11_688 -> m11_689  [key=0, style=solid, color=red];
m11_688 -> m11_685  [key=0, style=solid, color=red];
m11_690 -> m11_691  [key=0, style=solid, color=red];
m11_690 -> m11_685  [key=0, style=solid, color=red];
m11_693 -> m11_682  [key=0, style=bold, color=blue];
m11_242 -> m11_243  [key=0, style=solid, color=red];
m11_243 -> m11_244  [key=0, style=solid, color=red];
m11_243 -> m11_245  [key=2, style=dotted, color=red];
m11_244 -> m11_242  [key=0, style=bold, color=blue];
m11_62 -> m11_76  [key=0, style=solid, color=red];
m11_62 -> m11_77  [key=1, style=dashed, color=red, label=object];
m11_62 -> m11_54  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
m11_62 -> m11_55  [key=3, color=red, style=bold, label="Parameter variable System.Type concreteType"];
m11_62 -> m11_58  [key=3, color=red, style=bold, label="method methodReturn System.Reflection.PropertyInfo GetProperty"];
m11_76 -> m11_77  [key=0, style=solid, color=red];
m11_77 -> m11_78  [key=0, style=solid, color=red];
m11_77 -> m11_75  [key=2, style=dotted, color=red];
m11_77 -> m11_80  [key=1, style=dashed, color=red, label=list];
m11_77 -> m11_82  [key=1, style=dashed, color=red, label=list];
m11_78 -> m11_79  [key=0, style=solid, color=red];
m11_78 -> m11_80  [key=0, style=solid, color=red];
m11_80 -> m11_81  [key=0, style=solid, color=red];
m11_80 -> m11_82  [key=0, style=solid, color=red];
m11_82 -> m11_83  [key=0, style=solid, color=red];
m11_82 -> m11_84  [key=1, style=dashed, color=red, label=pairZero];
m11_79 -> m11_85  [key=0, style=solid, color=red];
m11_81 -> m11_85  [key=0, style=solid, color=red];
m11_81 -> m11_34  [key=2, style=dotted, color=red];
m11_83 -> m11_84  [key=0, style=solid, color=red];
m11_83 -> m11_85  [key=1, style=dashed, color=red, label="out System.Type"];
m11_84 -> m11_85  [key=0, style=solid, color=red];
m11_85 -> m11_62  [key=0, style=bold, color=blue];
m11_222 -> m11_639  [key=0, style=solid, color=red];
m11_222 -> m11_640  [key=1, style=dashed, color=red, label=string];
m11_222 -> m11_217  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m11_222 -> m11_218  [key=3, color=red, style=bold, label="Parameter variable string paramName"];
m11_639 -> m11_640  [key=0, style=solid, color=red];
m11_639 -> m11_641  [key=0, style=solid, color=red];
m11_639 -> m11_33  [key=2, style=dotted, color=red];
m11_640 -> m11_641  [key=0, style=solid, color=red];
m11_640 -> m11_642  [key=2, style=dotted, color=red];
m11_641 -> m11_222  [key=0, style=bold, color=blue];
m11_537 -> m11_538  [key=0, style=solid];
m11_538 -> m11_537  [key=0, style=bold, color=blue];
m11_3 -> m11_4  [key=0, style=solid, color=red];
m11_3 -> m11_5  [key=1, style=dashed, color=red, label=string];
m11_4 -> m11_5  [key=0, style=solid, color=red];
m11_5 -> m11_6  [key=0, style=solid, color=red];
m11_6 -> m11_7  [key=0, style=solid, color=red];
m11_7 -> m11_3  [key=0, style=bold, color=blue];
m11_413 -> m11_414  [key=0, style=solid, color=red];
m11_414 -> m11_415  [key=0, style=solid, color=red];
m11_414 -> m11_416  [key=2, style=dotted, color=red];
m11_414 -> m11_417  [key=2, style=dotted, color=red];
m11_415 -> m11_413  [key=0, style=bold, color=blue];
m11_235 -> m11_236  [key=0, style=solid, color=red];
m11_236 -> m11_237  [key=0, style=solid, color=red];
m11_236 -> m11_238  [key=0, style=solid, color=red];
m11_237 -> m11_241  [key=0, style=solid, color=red];
m11_237 -> m11_34  [key=2, style=dotted, color=red];
m11_238 -> m11_239  [key=0, style=solid, color=red];
m11_238 -> m11_240  [key=0, style=solid, color=red];
m11_239 -> m11_241  [key=0, style=solid, color=red];
m11_239 -> m11_34  [key=2, style=dotted, color=red];
m11_240 -> m11_241  [key=0, style=solid, color=red];
m11_240 -> m11_211  [key=2, style=dotted, color=red];
m11_241 -> m11_235  [key=0, style=bold, color=blue];
m11_112 -> m11_113  [key=0, style=solid, color=red];
m11_112 -> m11_115  [key=1, style=dashed, color=red, label=string];
m11_112 -> m11_116  [key=1, style=dashed, color=red, label=string];
m11_112 -> m11_114  [key=3, color=red, style=bold, label="method methodReturn bool IsInputValue"];
m11_113 -> m11_114  [key=0, style=solid, color=red];
m11_113 -> m11_115  [key=0, style=solid, color=red];
m11_113 -> m11_108  [key=2, style=dotted, color=red];
m11_115 -> m11_116  [key=0, style=solid, color=red];
m11_115 -> m11_117  [key=0, style=solid, color=red];
m11_116 -> m11_118  [key=0, style=solid, color=red];
m11_116 -> m11_109  [key=2, style=dotted, color=red];
m11_114 -> m11_118  [key=0, style=solid, color=red];
m11_117 -> m11_118  [key=0, style=solid, color=red];
m11_118 -> m11_112  [key=0, style=bold, color=blue];
m11_54 -> m11_55  [key=0, style=solid, color=red];
m11_54 -> m11_56  [key=1, style=dashed, color=red, label=object];
m11_54 -> m11_59  [key=1, style=dashed, color=red, label=object];
m11_54 -> m11_60  [key=1, style=dashed, color=red, label=object];
m11_54 -> m11_58  [key=3, color=red, style=bold, label="method methodReturn System.Collections.Generic.IList<string> GetReference"];
m11_55 -> m11_56  [key=0, style=solid, color=red];
m11_56 -> m11_57  [key=0, style=solid, color=red];
m11_56 -> m11_62  [key=2, style=dotted, color=red];
m11_56 -> m11_59  [key=1, style=dashed, color=red, label=concreteType];
m11_56 -> m11_60  [key=1, style=dashed, color=red, label=property];
m11_59 -> m11_60  [key=0, style=solid, color=red];
m11_59 -> m11_63  [key=2, style=dotted, color=red];
m11_59 -> m11_64  [key=2, style=dotted, color=red];
m11_60 -> m11_61  [key=0, style=solid, color=red];
m11_60 -> m11_65  [key=2, style=dotted, color=red];
m11_57 -> m11_58  [key=0, style=solid, color=red];
m11_57 -> m11_59  [key=0, style=solid, color=red];
m11_58 -> m11_61  [key=0, style=solid, color=red];
m11_61 -> m11_54  [key=0, style=bold, color=blue];
m11_417 -> m11_422  [key=0, style=solid, color=red];
m11_422 -> m11_423  [key=0, style=solid, color=red];
m11_422 -> m11_427  [key=1, style=dashed, color=red, label=requiredRulesAllMet];
m11_422 -> m11_114  [key=3, color=red, style=bold, label="Local variable bool requiredRulesAllMet"];
m11_423 -> m11_424  [key=0, style=solid, color=red];
m11_423 -> m11_427  [key=0, style=solid, color=red];
m11_423 -> m11_425  [key=1, style=dashed, color=red, label=option];
m11_427 -> m11_428  [key=0, style=solid, color=red];
m11_424 -> m11_425  [key=0, style=solid, color=red];
m11_424 -> m11_423  [key=0, style=solid, color=red];
m11_425 -> m11_426  [key=0, style=solid, color=red];
m11_425 -> m11_429  [key=2, style=dotted, color=red];
m11_426 -> m11_423  [key=0, style=solid, color=red];
m11_426 -> m11_427  [key=1, style=dashed, color=red, label=requiredRulesAllMet];
m11_428 -> m11_417  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid, color=red];
m11_1 -> m11_2  [key=0, style=solid, color=red];
m11_2 -> m11_0  [key=0, style=bold, color=blue];
m11_594 -> m11_596  [key=0, style=solid, color=red];
m11_594 -> m11_597  [key=1, style=dashed, color=red, label=object];
m11_594 -> m11_599  [key=1, style=dashed, color=red, label=object];
m11_594 -> m11_600  [key=1, style=dashed, color=red, label="string[]"];
m11_594 -> m11_606  [key=1, style=dashed, color=red, label=object];
m11_594 -> m11_608  [key=1, style=dashed, color=red, label=object];
m11_594 -> m11_579  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
m11_596 -> m11_597  [key=0, style=solid, color=red];
m11_596 -> m11_615  [key=1, style=dashed, color=red, label=hadError];
m11_597 -> m11_598  [key=0, style=solid, color=red];
m11_597 -> m11_310  [key=2, style=dotted, color=red];
m11_597 -> m11_606  [key=1, style=dashed, color=red, label=optionMap];
m11_597 -> m11_615  [key=1, style=dashed, color=red, label=optionMap];
m11_599 -> m11_600  [key=0, style=solid, color=red];
m11_599 -> m11_514  [key=2, style=dotted, color=red];
m11_599 -> m11_612  [key=1, style=dashed, color=red, label=target];
m11_599 -> m11_613  [key=1, style=dashed, color=red, label=target];
m11_600 -> m11_601  [key=0, style=solid, color=red];
m11_600 -> m11_485  [key=2, style=dotted, color=red];
m11_600 -> m11_602  [key=1, style=dashed, color=red, label=arguments];
m11_600 -> m11_606  [key=1, style=dashed, color=red, label=arguments];
m11_600 -> m11_611  [key=1, style=dashed, color=red, label=arguments];
m11_606 -> m11_607  [key=0, style=solid, color=red];
m11_606 -> m11_90  [key=2, style=dotted, color=red];
m11_606 -> m11_610  [key=1, style=dashed, color=red, label=result];
m11_608 -> m11_609  [key=0, style=solid, color=red];
m11_608 -> m11_618  [key=2, style=dotted, color=red];
m11_615 -> m11_616  [key=0, style=solid, color=red];
m11_615 -> m11_413  [key=2, style=dotted, color=red];
m11_615 -> m11_615  [key=1, style=dashed, color=red, label=hadError];
m11_598 -> m11_599  [key=0, style=solid, color=red];
m11_598 -> m11_418  [key=2, style=dotted, color=red];
m11_612 -> m11_613  [key=0, style=solid, color=red];
m11_612 -> m11_601  [key=0, style=solid, color=red];
m11_613 -> m11_614  [key=0, style=solid, color=red];
m11_613 -> m11_601  [key=0, style=solid, color=red];
m11_613 -> m11_520  [key=2, style=dotted, color=red];
m11_601 -> m11_602  [key=0, style=solid, color=red];
m11_601 -> m11_615  [key=0, style=solid, color=red];
m11_601 -> m11_128  [key=2, style=dotted, color=red];
m11_602 -> m11_603  [key=0, style=solid, color=red];
m11_602 -> m11_604  [key=1, style=dashed, color=red, label=argument];
m11_602 -> m11_613  [key=1, style=dashed, color=red, label=argument];
m11_611 -> m11_601  [key=0, style=solid, color=red];
m11_611 -> m11_128  [key=2, style=dotted, color=red];
m11_603 -> m11_604  [key=0, style=solid, color=red];
m11_603 -> m11_601  [key=0, style=solid, color=red];
m11_603 -> m11_33  [key=2, style=dotted, color=red];
m11_604 -> m11_605  [key=0, style=solid, color=red];
m11_604 -> m11_97  [key=2, style=dotted, color=red];
m11_604 -> m11_606  [key=1, style=dashed, color=red, label=parser];
m11_604 -> m11_608  [key=1, style=dashed, color=red, label=parser];
m11_605 -> m11_606  [key=0, style=solid, color=red];
m11_605 -> m11_612  [key=0, style=solid, color=red];
m11_607 -> m11_608  [key=0, style=solid, color=red];
m11_607 -> m11_610  [key=0, style=solid, color=red];
m11_610 -> m11_611  [key=0, style=solid, color=red];
m11_610 -> m11_601  [key=0, style=solid, color=red];
m11_609 -> m11_601  [key=0, style=solid, color=red];
m11_609 -> m11_615  [key=1, style=dashed, color=red, label=hadError];
m11_614 -> m11_601  [key=0, style=solid, color=red];
m11_614 -> m11_615  [key=1, style=dashed, color=red, label=hadError];
m11_616 -> m11_617  [key=0, style=solid, color=red];
m11_617 -> m11_594  [key=0, style=bold, color=blue];
m11_163 -> m11_164  [key=0, style=solid];
m11_163 -> m11_235  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetRemainingFromNext"];
m11_163 -> m11_501  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetRemainingFromNext"];
m11_164 -> m11_163  [key=0, style=bold, color=blue];
m11_395 -> m11_536  [key=0, style=solid];
m11_536 -> m11_395  [key=0, style=bold, color=blue];
m11_416 -> m11_430  [key=0, style=solid, color=red];
m11_416 -> m11_114  [key=3, color=red, style=bold, label="method methodReturn bool EnforceMutuallyExclusiveMap"];
m11_430 -> m11_431  [key=0, style=solid, color=red];
m11_430 -> m11_432  [key=0, style=solid, color=red];
m11_431 -> m11_440  [key=0, style=solid, color=red];
m11_432 -> m11_433  [key=0, style=solid, color=red];
m11_432 -> m11_435  [key=0, style=solid, color=red];
m11_432 -> m11_434  [key=1, style=dashed, color=red, label=option];
m11_433 -> m11_434  [key=0, style=solid, color=red];
m11_433 -> m11_432  [key=0, style=solid, color=red];
m11_435 -> m11_436  [key=0, style=solid, color=red];
m11_435 -> m11_439  [key=0, style=solid, color=red];
m11_435 -> m11_437  [key=1, style=dashed, color=red, label=info];
m11_434 -> m11_432  [key=0, style=solid, color=red];
m11_434 -> m11_441  [key=2, style=dotted, color=red];
m11_436 -> m11_437  [key=0, style=solid, color=red];
m11_436 -> m11_435  [key=0, style=solid, color=red];
m11_439 -> m11_440  [key=0, style=solid, color=red];
m11_437 -> m11_438  [key=0, style=solid, color=red];
m11_437 -> m11_429  [key=2, style=dotted, color=red];
m11_438 -> m11_440  [key=0, style=solid, color=red];
m11_440 -> m11_416  [key=0, style=bold, color=blue];
m11_21 -> m11_22  [key=0, style=solid];
m11_22 -> m11_21  [key=0, style=bold, color=blue];
m11_90 -> m11_91  [key=0, style=solid];
m11_90 -> m11_169  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
m11_90 -> m11_250  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
m11_90 -> m11_600  [key=3, color=red, style=bold, label="Parameter variable CommandLine.IArgumentEnumerator argumentEnumerator"];
m11_90 -> m11_597  [key=3, color=red, style=bold, label="Parameter variable CommandLine.OptionMap map"];
m11_90 -> m11_594  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
m11_91 -> m11_90  [key=0, style=bold, color=blue];
m11_330 -> m11_364  [key=0, style=solid, color=red];
m11_330 -> m11_366  [key=1, style=dashed, color=red, label=string];
m11_330 -> m11_213  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
m11_330 -> m11_114  [key=3, color=red, style=bold, label="method methodReturn bool SetNullableValue"];
m11_364 -> m11_365  [key=0, style=solid, color=red];
m11_364 -> m11_371  [key=2, style=dotted, color=red];
m11_364 -> m11_366  [key=1, style=dashed, color=red, label=nc];
m11_366 -> m11_367  [key=0, style=solid, color=red];
m11_366 -> m11_369  [key=0, style=solid, color=red];
m11_366 -> m11_372  [key=2, style=dotted, color=red];
m11_366 -> m11_64  [key=2, style=dotted, color=red];
m11_365 -> m11_366  [key=0, style=solid, color=red];
m11_367 -> m11_368  [key=0, style=solid, color=red];
m11_369 -> m11_370  [key=0, style=solid, color=red];
m11_368 -> m11_370  [key=0, style=solid, color=red];
m11_370 -> m11_330  [key=0, style=bold, color=blue];
m11_44 -> m11_45  [key=0, style=solid, color=red];
m11_44 -> m11_47  [key=1, style=dashed, color=red, label="System.Type"];
m11_44 -> m11_49  [key=1, style=dashed, color=red, label="System.Type"];
m11_45 -> m11_46  [key=0, style=solid, color=red];
m11_45 -> m11_47  [key=0, style=solid, color=red];
m11_47 -> m11_48  [key=0, style=solid, color=red];
m11_47 -> m11_49  [key=0, style=solid, color=red];
m11_47 -> m11_52  [key=2, style=dotted, color=red];
m11_49 -> m11_50  [key=0, style=solid, color=red];
m11_46 -> m11_50  [key=0, style=solid, color=red];
m11_46 -> m11_51  [key=2, style=dotted, color=red];
m11_48 -> m11_50  [key=0, style=solid, color=red];
m11_48 -> m11_53  [key=2, style=dotted, color=red];
m11_50 -> m11_44  [key=0, style=bold, color=blue];
m11_92 -> m11_93  [key=0, style=solid, color=red];
m11_92 -> m11_171  [key=3, color=red, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
m11_92 -> m11_253  [key=3, color=red, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
m11_93 -> m11_94  [key=0, style=solid, color=red];
m11_93 -> m11_95  [key=2, style=dotted, color=red];
m11_93 -> m11_96  [key=2, style=dotted, color=red];
m11_94 -> m11_92  [key=0, style=bold, color=blue];
m11_130 -> m11_166  [key=0, style=solid];
m11_130 -> m11_242  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MovePrevious"];
m11_130 -> m11_504  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MovePrevious"];
m11_166 -> m11_130  [key=0, style=bold, color=blue];
m11_501 -> m11_502  [key=0, style=solid, color=red];
m11_502 -> m11_503  [key=0, style=solid, color=red];
m11_502 -> m11_245  [key=2, style=dotted, color=red];
m11_503 -> m11_501  [key=0, style=bold, color=blue];
m11_226 -> m11_227  [key=0, style=solid, color=red];
m11_226 -> m11_114  [key=3, color=red, style=bold, label="method methodReturn bool MoveNext"];
m11_227 -> m11_228  [key=0, style=solid, color=red];
m11_227 -> m11_231  [key=0, style=solid, color=red];
m11_228 -> m11_229  [key=0, style=solid, color=red];
m11_231 -> m11_232  [key=0, style=solid, color=red];
m11_229 -> m11_230  [key=0, style=solid, color=red];
m11_229 -> m11_234  [key=2, style=dotted, color=red];
m11_230 -> m11_233  [key=0, style=solid, color=red];
m11_232 -> m11_233  [key=0, style=solid, color=red];
m11_233 -> m11_226  [key=0, style=bold, color=blue];
m11_169 -> m11_170  [key=0, style=solid, color=red];
m11_169 -> m11_171  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
m11_169 -> m11_178  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
m11_169 -> m11_182  [key=1, style=dashed, color=red, label=object];
m11_169 -> m11_187  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
m11_169 -> m11_189  [key=1, style=dashed, color=red, label=object];
m11_169 -> m11_194  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
m11_169 -> m11_199  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
m11_169 -> m11_200  [key=1, style=dashed, color=red, label=object];
m11_169 -> m11_206  [key=1, style=dashed, color=red, label=object];
m11_169 -> m11_90  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
m11_169 -> m11_147  [key=3, color=red, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
m11_169 -> m11_139  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
m11_169 -> m11_142  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
m11_170 -> m11_171  [key=0, style=solid, color=red];
m11_170 -> m11_211  [key=2, style=dotted, color=red];
m11_170 -> m11_212  [key=2, style=dotted, color=red];
m11_170 -> m11_178  [key=1, style=dashed, color=red, label=parts];
m11_170 -> m11_180  [key=1, style=dashed, color=red, label=parts];
m11_170 -> m11_182  [key=1, style=dashed, color=red, label=parts];
m11_170 -> m11_188  [key=1, style=dashed, color=red, label=parts];
m11_170 -> m11_204  [key=1, style=dashed, color=red, label=parts];
m11_171 -> m11_172  [key=0, style=solid, color=red];
m11_171 -> m11_173  [key=1, style=dashed, color=red, label=option];
m11_171 -> m11_175  [key=1, style=dashed, color=red, label=option];
m11_171 -> m11_176  [key=1, style=dashed, color=red, label=option];
m11_171 -> m11_177  [key=1, style=dashed, color=red, label=option];
m11_171 -> m11_181  [key=1, style=dashed, color=red, label=option];
m11_171 -> m11_182  [key=1, style=dashed, color=red, label=option];
m11_171 -> m11_184  [key=1, style=dashed, color=red, label=option];
m11_171 -> m11_186  [key=1, style=dashed, color=red, label=option];
m11_171 -> m11_189  [key=1, style=dashed, color=red, label=option];
m11_171 -> m11_191  [key=1, style=dashed, color=red, label=option];
m11_171 -> m11_193  [key=1, style=dashed, color=red, label=option];
m11_171 -> m11_194  [key=1, style=dashed, color=red, label=option];
m11_171 -> m11_196  [key=1, style=dashed, color=red, label=option];
m11_171 -> m11_198  [key=1, style=dashed, color=red, label=option];
m11_171 -> m11_200  [key=1, style=dashed, color=red, label=option];
m11_171 -> m11_202  [key=1, style=dashed, color=red, label=option];
m11_171 -> m11_206  [key=1, style=dashed, color=red, label=option];
m11_171 -> m11_208  [key=1, style=dashed, color=red, label=option];
m11_178 -> m11_179  [key=0, style=solid, color=red];
m11_178 -> m11_180  [key=0, style=solid, color=red];
m11_178 -> m11_112  [key=2, style=dotted, color=red];
m11_182 -> m11_183  [key=0, style=solid, color=red];
m11_182 -> m11_213  [key=2, style=dotted, color=red];
m11_182 -> m11_185  [key=1, style=dashed, color=red, label=valueSetting];
m11_187 -> m11_188  [key=0, style=solid, color=red];
m11_187 -> m11_119  [key=2, style=dotted, color=red];
m11_187 -> m11_189  [key=1, style=dashed, color=red, label=items];
m11_189 -> m11_190  [key=0, style=solid, color=red];
m11_189 -> m11_215  [key=2, style=dotted, color=red];
m11_189 -> m11_192  [key=1, style=dashed, color=red, label=valueSetting];
m11_194 -> m11_195  [key=0, style=solid, color=red];
m11_194 -> m11_213  [key=2, style=dotted, color=red];
m11_194 -> m11_197  [key=1, style=dashed, color=red, label=valueSetting];
m11_199 -> m11_200  [key=0, style=solid, color=red];
m11_199 -> m11_119  [key=2, style=dotted, color=red];
m11_200 -> m11_201  [key=0, style=solid, color=red];
m11_200 -> m11_215  [key=2, style=dotted, color=red];
m11_200 -> m11_203  [key=1, style=dashed, color=red, label=valueSetting];
m11_206 -> m11_207  [key=0, style=solid, color=red];
m11_206 -> m11_216  [key=2, style=dotted, color=red];
m11_206 -> m11_209  [key=1, style=dashed, color=red, label=valueSetting];
m11_180 -> m11_181  [key=0, style=solid, color=red];
m11_180 -> m11_193  [key=0, style=solid, color=red];
m11_188 -> m11_189  [key=0, style=solid, color=red];
m11_188 -> m11_214  [key=2, style=dotted, color=red];
m11_204 -> m11_205  [key=0, style=solid, color=red];
m11_204 -> m11_206  [key=0, style=solid, color=red];
m11_172 -> m11_173  [key=0, style=solid, color=red];
m11_172 -> m11_213  [key=3, color=red, style=bold, label="Local variable bool valueSetting"];
m11_172 -> m11_215  [key=3, color=red, style=bold, label="Local variable bool valueSetting"];
m11_172 -> m11_216  [key=3, color=red, style=bold, label="Local variable bool valueSetting"];
m11_173 -> m11_174  [key=0, style=solid, color=red];
m11_173 -> m11_175  [key=0, style=solid, color=red];
m11_175 -> m11_176  [key=0, style=solid, color=red];
m11_176 -> m11_177  [key=0, style=solid, color=red];
m11_176 -> m11_153  [key=2, style=dotted, color=red];
m11_177 -> m11_178  [key=0, style=solid, color=red];
m11_177 -> m11_204  [key=0, style=solid, color=red];
m11_181 -> m11_182  [key=0, style=solid, color=red];
m11_181 -> m11_186  [key=0, style=solid, color=red];
m11_184 -> m11_185  [key=0, style=solid, color=red];
m11_184 -> m11_92  [key=2, style=dotted, color=red];
m11_186 -> m11_187  [key=0, style=solid, color=red];
m11_186 -> m11_149  [key=2, style=dotted, color=red];
m11_191 -> m11_192  [key=0, style=solid, color=red];
m11_191 -> m11_92  [key=2, style=dotted, color=red];
m11_193 -> m11_194  [key=0, style=solid, color=red];
m11_193 -> m11_198  [key=0, style=solid, color=red];
m11_196 -> m11_197  [key=0, style=solid, color=red];
m11_196 -> m11_92  [key=2, style=dotted, color=red];
m11_198 -> m11_199  [key=0, style=solid, color=red];
m11_198 -> m11_149  [key=2, style=dotted, color=red];
m11_202 -> m11_203  [key=0, style=solid, color=red];
m11_202 -> m11_92  [key=2, style=dotted, color=red];
m11_208 -> m11_209  [key=0, style=solid, color=red];
m11_208 -> m11_92  [key=2, style=dotted, color=red];
m11_174 -> m11_210  [key=0, style=solid, color=red];
m11_179 -> m11_210  [key=0, style=solid, color=red];
m11_183 -> m11_184  [key=0, style=solid, color=red];
m11_183 -> m11_185  [key=0, style=solid, color=red];
m11_185 -> m11_210  [key=0, style=solid, color=red];
m11_185 -> m11_139  [key=2, style=dotted, color=red];
m11_190 -> m11_191  [key=0, style=solid, color=red];
m11_190 -> m11_192  [key=0, style=solid, color=red];
m11_192 -> m11_210  [key=0, style=solid, color=red];
m11_192 -> m11_139  [key=2, style=dotted, color=red];
m11_195 -> m11_196  [key=0, style=solid, color=red];
m11_195 -> m11_197  [key=0, style=solid, color=red];
m11_197 -> m11_210  [key=0, style=solid, color=red];
m11_197 -> m11_142  [key=2, style=dotted, color=red];
m11_201 -> m11_202  [key=0, style=solid, color=red];
m11_201 -> m11_203  [key=0, style=solid, color=red];
m11_203 -> m11_210  [key=0, style=solid, color=red];
m11_203 -> m11_139  [key=2, style=dotted, color=red];
m11_205 -> m11_210  [key=0, style=solid, color=red];
m11_207 -> m11_208  [key=0, style=solid, color=red];
m11_207 -> m11_209  [key=0, style=solid, color=red];
m11_209 -> m11_210  [key=0, style=solid, color=red];
m11_209 -> m11_139  [key=2, style=dotted, color=red];
m11_210 -> m11_169  [key=0, style=bold, color=blue];
m11_547 -> m11_548  [key=0, style=solid, color=red];
m11_547 -> m11_549  [key=1, style=dashed, color=red, label="System.IO.TextWriter"];
m11_548 -> m11_549  [key=0, style=solid, color=red];
m11_549 -> m11_550  [key=0, style=solid, color=red];
m11_550 -> m11_547  [key=0, style=bold, color=blue];
m11_321 -> m11_402  [key=0, style=solid, color=red];
m11_321 -> m11_407  [key=1, style=dashed, color=red, label=int];
m11_321 -> m11_408  [key=1, style=dashed, color=red, label=int];
m11_321 -> m11_410  [key=1, style=dashed, color=red, label=int];
m11_402 -> m11_403  [key=0, style=solid, color=red];
m11_407 -> m11_408  [key=0, style=solid, color=red];
m11_407 -> m11_412  [key=2, style=dotted, color=red];
m11_408 -> m11_409  [key=0, style=solid, color=red];
m11_408 -> m11_412  [key=2, style=dotted, color=red];
m11_410 -> m11_411  [key=0, style=solid, color=red];
m11_410 -> m11_412  [key=2, style=dotted, color=red];
m11_403 -> m11_404  [key=0, style=solid, color=red];
m11_404 -> m11_405  [key=0, style=solid, color=red];
m11_404 -> m11_406  [key=0, style=solid, color=red];
m11_405 -> m11_407  [key=0, style=solid, color=red];
m11_405 -> m11_408  [key=1, style=dashed, color=red, label=comparer];
m11_406 -> m11_407  [key=0, style=solid, color=red];
m11_406 -> m11_408  [key=1, style=dashed, color=red, label=comparer];
m11_409 -> m11_410  [key=0, style=solid, color=red];
m11_409 -> m11_411  [key=0, style=solid, color=red];
m11_411 -> m11_321  [key=0, style=bold, color=blue];
m11_569 -> m11_570  [key=0, style=solid, color=red];
m11_570 -> m11_571  [key=0, style=solid, color=red];
m11_570 -> m11_539  [key=2, style=dotted, color=red];
m11_571 -> m11_569  [key=0, style=bold, color=blue];
m11_149 -> m11_150  [key=0, style=solid, color=red];
m11_149 -> m11_171  [key=3, color=red, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
m11_149 -> m11_253  [key=3, color=red, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
m11_150 -> m11_151  [key=0, style=solid, color=red];
m11_150 -> m11_152  [key=0, style=solid, color=red];
m11_151 -> m11_152  [key=0, style=solid, color=red];
m11_151 -> m11_131  [key=2, style=dotted, color=red];
m11_152 -> m11_149  [key=0, style=bold, color=blue];
m11_41 -> m11_42  [key=0, style=solid, color=red];
m11_42 -> m11_43  [key=0, style=solid, color=red];
m11_43 -> m11_41  [key=0, style=bold, color=blue];
m11_38 -> m11_39  [key=0, style=solid, color=red];
m11_39 -> m11_40  [key=0, style=solid, color=red];
m11_40 -> m11_38  [key=0, style=bold, color=blue];
m11_328 -> m11_377  [key=0, style=solid, color=red];
m11_328 -> m11_378  [key=1, style=dashed, color=red, label=object];
m11_328 -> m11_379  [key=1, style=dashed, color=red, label=object];
m11_328 -> m11_380  [key=1, style=dashed, color=red, label=string];
m11_328 -> m11_213  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
m11_328 -> m11_114  [key=3, color=red, style=bold, label="method methodReturn bool SetValueList"];
m11_377 -> m11_378  [key=0, style=solid, color=red];
m11_378 -> m11_379  [key=0, style=solid, color=red];
m11_378 -> m11_89  [key=2, style=dotted, color=red];
m11_378 -> m11_64  [key=2, style=dotted, color=red];
m11_379 -> m11_380  [key=0, style=solid, color=red];
m11_379 -> m11_65  [key=2, style=dotted, color=red];
m11_379 -> m11_383  [key=1, style=dashed, color=red, label=fieldRef];
m11_380 -> m11_381  [key=0, style=solid, color=red];
m11_380 -> m11_387  [key=2, style=dotted, color=red];
m11_380 -> m11_382  [key=1, style=dashed, color=red, label=values];
m11_380 -> m11_383  [key=1, style=dashed, color=red, label=values];
m11_383 -> m11_384  [key=0, style=solid, color=red];
m11_383 -> m11_129  [key=2, style=dotted, color=red];
m11_381 -> m11_382  [key=0, style=solid, color=red];
m11_381 -> m11_383  [key=1, style=dashed, color=red, label=i];
m11_381 -> m11_384  [key=1, style=dashed, color=red, label=i];
m11_381 -> m11_334  [key=3, color=red, style=bold, label="Local variable int i"];
m11_382 -> m11_383  [key=0, style=solid, color=red];
m11_382 -> m11_385  [key=0, style=solid, color=red];
m11_384 -> m11_382  [key=0, style=solid, color=red];
m11_384 -> m11_384  [key=1, style=dashed, color=red, label=i];
m11_385 -> m11_386  [key=0, style=solid, color=red];
m11_386 -> m11_328  [key=0, style=bold, color=blue];
m11_485 -> m11_486  [key=0, style=solid, color=red];
m11_485 -> m11_487  [key=1, style=dashed, color=red, label="string[]"];
m11_485 -> m11_489  [key=1, style=dashed, color=red, label="string[]"];
m11_486 -> m11_487  [key=0, style=solid, color=red];
m11_486 -> m11_491  [key=2, style=dotted, color=red];
m11_487 -> m11_488  [key=0, style=solid, color=red];
m11_489 -> m11_490  [key=0, style=solid, color=red];
m11_488 -> m11_489  [key=0, style=solid, color=red];
m11_490 -> m11_485  [key=0, style=bold, color=blue];
m11_153 -> m11_154  [key=0, style=solid, color=red];
m11_153 -> m11_171  [key=3, color=red, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
m11_153 -> m11_253  [key=3, color=red, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
m11_154 -> m11_155  [key=0, style=solid, color=red];
m11_154 -> m11_156  [key=0, style=solid, color=red];
m11_155 -> m11_156  [key=0, style=solid, color=red];
m11_155 -> m11_131  [key=2, style=dotted, color=red];
m11_156 -> m11_153  [key=0, style=bold, color=blue];
m11_592 -> m11_664  [key=0, style=solid, color=red];
m11_592 -> m11_579  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
m11_592 -> m11_58  [key=3, color=red, style=bold, label="method methodReturn CommandLine.Pair<System.Reflection.MethodInfo, TAttribute> RetrieveMethod"];
m11_664 -> m11_665  [key=0, style=solid, color=red];
m11_664 -> m11_660  [key=2, style=dotted, color=red];
m11_664 -> m11_672  [key=2, style=dotted, color=red];
m11_665 -> m11_666  [key=0, style=solid, color=red];
m11_665 -> m11_670  [key=0, style=solid, color=red];
m11_665 -> m11_667  [key=1, style=dashed, color=red, label=method];
m11_665 -> m11_669  [key=1, style=dashed, color=red, label=method];
m11_666 -> m11_667  [key=0, style=solid, color=red];
m11_666 -> m11_665  [key=0, style=solid, color=red];
m11_670 -> m11_671  [key=0, style=solid, color=red];
m11_667 -> m11_668  [key=0, style=solid, color=red];
m11_667 -> m11_663  [key=2, style=dotted, color=red];
m11_667 -> m11_669  [key=1, style=dashed, color=red, label=attribute];
m11_669 -> m11_671  [key=0, style=solid, color=red];
m11_669 -> m11_460  [key=2, style=dotted, color=red];
m11_668 -> m11_669  [key=0, style=solid, color=red];
m11_668 -> m11_665  [key=0, style=solid, color=red];
m11_671 -> m11_592  [key=0, style=bold, color=blue];
m11_139 -> m11_140  [key=0, style=solid, color=red];
m11_139 -> m11_142  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState BooleanToParserState"];
m11_139 -> m11_172  [key=3, color=red, style=bold, label="Parameter variable bool value"];
m11_139 -> m11_261  [key=3, color=red, style=bold, label="Parameter variable bool value"];
m11_140 -> m11_141  [key=0, style=solid, color=red];
m11_140 -> m11_142  [key=2, style=dotted, color=red];
m11_141 -> m11_139  [key=0, style=bold, color=blue];
m11_459 -> m11_477  [key=0, style=solid, color=red];
m11_477 -> m11_478  [key=0, style=solid, color=red];
m11_477 -> m11_157  [key=2, style=dotted, color=red];
m11_478 -> m11_459  [key=0, style=bold, color=blue];
m11_75 -> m11_648  [key=0, style=solid, color=red];
m11_75 -> m11_649  [key=1, style=dashed, color=red, label=object];
m11_75 -> m11_650  [key=1, style=dashed, color=red, label=object];
m11_75 -> m11_66  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
m11_75 -> m11_62  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
m11_75 -> m11_310  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
m11_648 -> m11_649  [key=0, style=solid, color=red];
m11_648 -> m11_89  [key=2, style=dotted, color=red];
m11_648 -> m11_657  [key=1, style=dashed, color=red, label=list];
m11_648 -> m11_658  [key=1, style=dashed, color=red, label=list];
m11_649 -> m11_650  [key=0, style=solid, color=red];
m11_649 -> m11_658  [key=0, style=solid, color=red];
m11_650 -> m11_651  [key=0, style=solid, color=red];
m11_650 -> m11_660  [key=2, style=dotted, color=red];
m11_650 -> m11_661  [key=2, style=dotted, color=red];
m11_657 -> m11_651  [key=0, style=solid, color=red];
m11_657 -> m11_460  [key=2, style=dotted, color=red];
m11_657 -> m11_129  [key=2, style=dotted, color=red];
m11_658 -> m11_659  [key=0, style=solid, color=red];
m11_651 -> m11_652  [key=0, style=solid, color=red];
m11_651 -> m11_658  [key=0, style=solid, color=red];
m11_651 -> m11_653  [key=1, style=dashed, color=red, label=property];
m11_651 -> m11_655  [key=1, style=dashed, color=red, label=property];
m11_651 -> m11_657  [key=1, style=dashed, color=red, label=property];
m11_652 -> m11_653  [key=0, style=solid, color=red];
m11_652 -> m11_651  [key=0, style=solid, color=red];
m11_653 -> m11_654  [key=0, style=solid, color=red];
m11_653 -> m11_662  [key=2, style=dotted, color=red];
m11_655 -> m11_656  [key=0, style=solid, color=red];
m11_655 -> m11_663  [key=2, style=dotted, color=red];
m11_655 -> m11_657  [key=1, style=dashed, color=red, label=attribute];
m11_654 -> m11_655  [key=0, style=solid, color=red];
m11_654 -> m11_651  [key=0, style=solid, color=red];
m11_656 -> m11_657  [key=0, style=solid, color=red];
m11_656 -> m11_651  [key=0, style=solid, color=red];
m11_659 -> m11_75  [key=0, style=bold, color=blue];
m11_520 -> m11_521  [key=0, style=solid, color=red];
m11_520 -> m11_524  [key=1, style=dashed, color=red, label=string];
m11_520 -> m11_114  [key=3, color=red, style=bold, label="method methodReturn bool AddValueItemIfAllowed"];
m11_520 -> m11_602  [key=3, color=red, style=bold, label="Parameter variable string item"];
m11_521 -> m11_522  [key=0, style=solid, color=red];
m11_521 -> m11_523  [key=0, style=solid, color=red];
m11_524 -> m11_525  [key=0, style=solid, color=red];
m11_524 -> m11_129  [key=2, style=dotted, color=red];
m11_522 -> m11_526  [key=0, style=solid, color=red];
m11_523 -> m11_524  [key=0, style=solid, color=red];
m11_525 -> m11_526  [key=0, style=solid, color=red];
m11_526 -> m11_520  [key=0, style=bold, color=blue];
m11_215 -> m11_332  [key=0, style=solid, color=red];
m11_215 -> m11_333  [key=1, style=dashed, color=red, label="System.Collections.Generic.IList<string>"];
m11_215 -> m11_337  [key=1, style=dashed, color=red, label="System.Collections.Generic.IList<string>"];
m11_215 -> m11_338  [key=1, style=dashed, color=red, label=object];
m11_215 -> m11_187  [key=3, color=red, style=bold, label="Parameter variable System.Collections.Generic.IList<string> values"];
m11_215 -> m11_199  [key=3, color=red, style=bold, label="Parameter variable System.Collections.Generic.IList<string> values"];
m11_215 -> m11_269  [key=3, color=red, style=bold, label="Parameter variable System.Collections.Generic.IList<string> values"];
m11_215 -> m11_283  [key=3, color=red, style=bold, label="Parameter variable System.Collections.Generic.IList<string> values"];
m11_215 -> m11_169  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
m11_215 -> m11_250  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
m11_215 -> m11_114  [key=3, color=red, style=bold, label="method methodReturn bool SetValue"];
m11_332 -> m11_333  [key=0, style=solid, color=red];
m11_332 -> m11_344  [key=2, style=dotted, color=red];
m11_332 -> m11_337  [key=1, style=dashed, color=red, label=elementType];
m11_333 -> m11_334  [key=0, style=solid, color=red];
m11_333 -> m11_345  [key=2, style=dotted, color=red];
m11_333 -> m11_335  [key=1, style=dashed, color=red, label=array];
m11_333 -> m11_337  [key=1, style=dashed, color=red, label=array];
m11_333 -> m11_338  [key=1, style=dashed, color=red, label=array];
m11_337 -> m11_338  [key=0, style=solid, color=red];
m11_337 -> m11_346  [key=2, style=dotted, color=red];
m11_337 -> m11_347  [key=2, style=dotted, color=red];
m11_338 -> m11_339  [key=0, style=solid, color=red];
m11_338 -> m11_341  [key=0, style=solid, color=red];
m11_338 -> m11_64  [key=2, style=dotted, color=red];
m11_334 -> m11_335  [key=0, style=solid, color=red];
m11_334 -> m11_337  [key=1, style=dashed, color=red, label=i];
m11_334 -> m11_341  [key=1, style=dashed, color=red, label=i];
m11_334 -> m11_334  [key=3, color=red, style=bold, label="Local variable int i"];
m11_335 -> m11_336  [key=0, style=solid, color=red];
m11_335 -> m11_342  [key=0, style=solid, color=red];
m11_341 -> m11_335  [key=0, style=solid, color=red];
m11_341 -> m11_341  [key=1, style=dashed, color=red, label=i];
m11_336 -> m11_337  [key=0, style=solid, color=red];
m11_342 -> m11_343  [key=0, style=solid, color=red];
m11_339 -> m11_340  [key=0, style=solid, color=red];
m11_340 -> m11_343  [key=0, style=solid, color=red];
m11_343 -> m11_215  [key=0, style=bold, color=blue];
m11_566 -> m11_567  [key=0, style=solid, color=red];
m11_567 -> m11_568  [key=0, style=solid, color=red];
m11_567 -> m11_555  [key=2, style=dotted, color=red];
m11_568 -> m11_566  [key=0, style=bold, color=blue];
m11_492 -> m11_493  [key=0, style=solid, color=red];
m11_493 -> m11_494  [key=0, style=solid, color=red];
m11_494 -> m11_492  [key=0, style=bold, color=blue];
m11_246 -> m11_247  [key=0, style=solid];
m11_247 -> m11_246  [key=0, style=bold, color=blue];
m11_132 -> m11_133  [key=0, style=solid, color=red];
m11_132 -> m11_619  [key=3, color=red, style=bold, label="Parameter variable bool caseSensitive"];
m11_133 -> m11_134  [key=0, style=solid, color=red];
m11_133 -> m11_135  [key=2, style=dotted, color=red];
m11_134 -> m11_132  [key=0, style=bold, color=blue];
m11_541 -> m11_542  [key=0, style=solid, color=red];
m11_542 -> m11_543  [key=0, style=solid, color=red];
m11_543 -> m11_541  [key=0, style=bold, color=blue];
m11_593 -> m11_619  [key=0, style=solid, color=red];
m11_593 -> m11_621  [key=1, style=dashed, color=red, label="string[]"];
m11_593 -> m11_622  [key=1, style=dashed, color=red, label="CommandLine.HelpOptionAttribute"];
m11_593 -> m11_623  [key=1, style=dashed, color=red, label="string[]"];
m11_593 -> m11_625  [key=1, style=dashed, color=red, label="CommandLine.HelpOptionAttribute"];
m11_593 -> m11_626  [key=1, style=dashed, color=red, label="string[]"];
m11_593 -> m11_579  [key=3, color=darkorchid, style=bold, label="Parameter variable string[] args"];
m11_593 -> m11_114  [key=3, color=red, style=bold, label="method methodReturn bool ParseHelp"];
m11_619 -> m11_620  [key=0, style=solid, color=red];
m11_619 -> m11_623  [key=1, style=dashed, color=red, label=caseSensitive];
m11_619 -> m11_626  [key=1, style=dashed, color=red, label=caseSensitive];
m11_621 -> m11_622  [key=0, style=solid, color=red];
m11_621 -> m11_629  [key=0, style=solid, color=red];
m11_621 -> m11_334  [key=3, color=red, style=bold, label="Local variable int i"];
m11_622 -> m11_623  [key=0, style=solid, color=red];
m11_622 -> m11_625  [key=0, style=solid, color=red];
m11_622 -> m11_33  [key=2, style=dotted, color=red];
m11_623 -> m11_624  [key=0, style=solid, color=red];
m11_623 -> m11_625  [key=0, style=solid, color=red];
m11_623 -> m11_132  [key=2, style=dotted, color=red];
m11_625 -> m11_626  [key=0, style=solid, color=red];
m11_625 -> m11_628  [key=0, style=solid, color=red];
m11_625 -> m11_33  [key=2, style=dotted, color=red];
m11_626 -> m11_627  [key=0, style=solid, color=red];
m11_626 -> m11_628  [key=0, style=solid, color=red];
m11_626 -> m11_136  [key=2, style=dotted, color=red];
m11_620 -> m11_621  [key=0, style=solid, color=red];
m11_620 -> m11_623  [key=1, style=dashed, color=red, label=i];
m11_620 -> m11_626  [key=1, style=dashed, color=red, label=i];
m11_620 -> m11_628  [key=1, style=dashed, color=red, label=i];
m11_628 -> m11_621  [key=0, style=solid, color=red];
m11_628 -> m11_628  [key=1, style=dashed, color=red, label=i];
m11_629 -> m11_630  [key=0, style=solid, color=red];
m11_624 -> m11_630  [key=0, style=solid, color=red];
m11_627 -> m11_630  [key=0, style=solid, color=red];
m11_630 -> m11_593  [key=0, style=bold, color=blue];
m11_495 -> m11_496  [key=0, style=solid, color=red];
m11_496 -> m11_497  [key=0, style=solid, color=red];
m11_496 -> m11_499  [key=0, style=solid, color=red];
m11_497 -> m11_498  [key=0, style=solid, color=red];
m11_499 -> m11_500  [key=0, style=solid, color=red];
m11_498 -> m11_500  [key=0, style=solid, color=red];
m11_500 -> m11_495  [key=0, style=bold, color=blue];
m11_527 -> m11_528  [key=0, style=solid];
m11_527 -> m11_576  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseArguments"];
m11_528 -> m11_527  [key=0, style=bold, color=blue];
m11_491 -> m11_636  [key=0, style=solid, color=red];
m11_491 -> m11_637  [key=1, style=dashed, color=red, label=string];
m11_491 -> m11_485  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m11_491 -> m11_572  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m11_491 -> m11_579  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m11_491 -> m11_218  [key=3, color=red, style=bold, label="Parameter variable string paramName"];
m11_491 -> m11_573  [key=3, color=red, style=bold, label="Parameter variable string paramName"];
m11_491 -> m11_580  [key=3, color=red, style=bold, label="Parameter variable string paramName"];
m11_491 -> m11_581  [key=3, color=red, style=bold, label="Parameter variable string paramName"];
m11_636 -> m11_637  [key=0, style=solid, color=red];
m11_636 -> m11_638  [key=0, style=solid, color=red];
m11_637 -> m11_638  [key=0, style=solid, color=red];
m11_637 -> m11_51  [key=2, style=dotted, color=red];
m11_638 -> m11_491  [key=0, style=bold, color=blue];
m11_97 -> m11_98  [key=0, style=solid, color=red];
m11_97 -> m11_100  [key=1, style=dashed, color=red, label=string];
m11_97 -> m11_102  [key=1, style=dashed, color=red, label=string];
m11_97 -> m11_103  [key=1, style=dashed, color=red, label=bool];
m11_97 -> m11_104  [key=1, style=dashed, color=red, label=string];
m11_97 -> m11_105  [key=1, style=dashed, color=red, label=bool];
m11_97 -> m11_58  [key=3, color=red, style=bold, label="method methodReturn CommandLine.ArgumentParser Create"];
m11_97 -> m11_602  [key=3, color=red, style=bold, label="Parameter variable string argument"];
m11_98 -> m11_99  [key=0, style=solid, color=red];
m11_98 -> m11_100  [key=0, style=solid, color=red];
m11_98 -> m11_108  [key=2, style=dotted, color=red];
m11_100 -> m11_101  [key=0, style=solid, color=red];
m11_100 -> m11_102  [key=0, style=solid, color=red];
m11_100 -> m11_109  [key=2, style=dotted, color=red];
m11_102 -> m11_103  [key=0, style=solid, color=red];
m11_102 -> m11_104  [key=0, style=solid, color=red];
m11_103 -> m11_107  [key=0, style=solid, color=red];
m11_103 -> m11_110  [key=2, style=dotted, color=red];
m11_104 -> m11_105  [key=0, style=solid, color=red];
m11_104 -> m11_106  [key=0, style=solid, color=red];
m11_105 -> m11_107  [key=0, style=solid, color=red];
m11_105 -> m11_111  [key=2, style=dotted, color=red];
m11_99 -> m11_107  [key=0, style=solid, color=red];
m11_101 -> m11_107  [key=0, style=solid, color=red];
m11_106 -> m11_107  [key=0, style=solid, color=red];
m11_107 -> m11_97  [key=0, style=bold, color=blue];
m11_119 -> m11_120  [key=0, style=solid, color=red];
m11_119 -> m11_121  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
m11_119 -> m11_122  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
m11_119 -> m11_123  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
m11_119 -> m11_124  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
m11_119 -> m11_169  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.IArgumentEnumerator ae"];
m11_119 -> m11_250  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.IArgumentEnumerator ae"];
m11_120 -> m11_121  [key=0, style=solid, color=red];
m11_120 -> m11_89  [key=2, style=dotted, color=red];
m11_120 -> m11_123  [key=1, style=dashed, color=red, label=list];
m11_120 -> m11_126  [key=1, style=dashed, color=red, label=list];
m11_121 -> m11_122  [key=0, style=solid, color=red];
m11_121 -> m11_124  [key=0, style=solid, color=red];
m11_121 -> m11_128  [key=2, style=dotted, color=red];
m11_122 -> m11_123  [key=0, style=solid, color=red];
m11_122 -> m11_124  [key=0, style=solid, color=red];
m11_122 -> m11_112  [key=2, style=dotted, color=red];
m11_123 -> m11_121  [key=0, style=solid, color=red];
m11_123 -> m11_129  [key=2, style=dotted, color=red];
m11_124 -> m11_125  [key=0, style=solid, color=red];
m11_124 -> m11_126  [key=0, style=solid, color=red];
m11_124 -> m11_130  [key=2, style=dotted, color=red];
m11_126 -> m11_127  [key=0, style=solid, color=red];
m11_125 -> m11_127  [key=0, style=solid, color=red];
m11_125 -> m11_131  [key=2, style=dotted, color=red];
m11_127 -> m11_119  [key=0, style=bold, color=blue];
m11_572 -> m11_573  [key=0, style=solid, color=red];
m11_572 -> m11_574  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
m11_573 -> m11_574  [key=0, style=solid, color=red];
m11_573 -> m11_491  [key=2, style=dotted, color=red];
m11_574 -> m11_575  [key=0, style=solid, color=red];
m11_575 -> m11_572  [key=0, style=bold, color=blue];
m11_695 -> m11_696  [key=0, style=solid, color=red];
m11_695 -> m11_701  [key=2, style=dotted, color=red];
m11_695 -> m11_702  [key=2, style=dotted, color=red];
m11_694 -> m11_695  [key=0, style=solid, color=red];
m11_694 -> m11_58  [key=3, color=red, style=bold, label="method methodReturn TAttribute GetAttribute"];
m11_696 -> m11_697  [key=0, style=solid, color=red];
m11_696 -> m11_703  [key=2, style=dotted, color=red];
m11_696 -> m11_699  [key=1, style=dashed, color=red, label=a];
m11_697 -> m11_698  [key=0, style=solid, color=red];
m11_697 -> m11_699  [key=0, style=solid, color=red];
m11_699 -> m11_700  [key=0, style=solid, color=red];
m11_698 -> m11_700  [key=0, style=solid, color=red];
m11_700 -> m11_694  [key=0, style=bold, color=blue];
m11_544 -> m11_545  [key=0, style=solid, color=red];
m11_545 -> m11_546  [key=0, style=solid, color=red];
m11_546 -> m11_544  [key=0, style=bold, color=blue];
m11_250 -> m11_251  [key=0, style=solid, color=red];
m11_250 -> m11_253  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
m11_250 -> m11_259  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
m11_250 -> m11_264  [key=1, style=dashed, color=red, label=object];
m11_250 -> m11_269  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
m11_250 -> m11_271  [key=1, style=dashed, color=red, label=object];
m11_250 -> m11_275  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
m11_250 -> m11_278  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
m11_250 -> m11_283  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
m11_250 -> m11_284  [key=1, style=dashed, color=red, label=object];
m11_250 -> m11_288  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
m11_250 -> m11_290  [key=1, style=dashed, color=red, label=object];
m11_250 -> m11_90  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
m11_250 -> m11_147  [key=3, color=red, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
m11_250 -> m11_139  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
m11_250 -> m11_142  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
m11_250 -> m11_144  [key=3, color=red, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
m11_251 -> m11_252  [key=0, style=solid, color=red];
m11_251 -> m11_217  [key=2, style=dotted, color=red];
m11_251 -> m11_211  [key=2, style=dotted, color=red];
m11_251 -> m11_253  [key=1, style=dashed, color=red, label=group];
m11_251 -> m11_259  [key=1, style=dashed, color=red, label=group];
m11_251 -> m11_262  [key=1, style=dashed, color=red, label=group];
m11_251 -> m11_264  [key=1, style=dashed, color=red, label=group];
m11_251 -> m11_270  [key=1, style=dashed, color=red, label=group];
m11_251 -> m11_288  [key=1, style=dashed, color=red, label=group];
m11_253 -> m11_254  [key=0, style=solid, color=red];
m11_253 -> m11_256  [key=1, style=dashed, color=red, label=option];
m11_253 -> m11_257  [key=1, style=dashed, color=red, label=option];
m11_253 -> m11_258  [key=1, style=dashed, color=red, label=option];
m11_253 -> m11_263  [key=1, style=dashed, color=red, label=option];
m11_253 -> m11_264  [key=1, style=dashed, color=red, label=option];
m11_253 -> m11_266  [key=1, style=dashed, color=red, label=option];
m11_253 -> m11_268  [key=1, style=dashed, color=red, label=option];
m11_253 -> m11_271  [key=1, style=dashed, color=red, label=option];
m11_253 -> m11_273  [key=1, style=dashed, color=red, label=option];
m11_253 -> m11_277  [key=1, style=dashed, color=red, label=option];
m11_253 -> m11_278  [key=1, style=dashed, color=red, label=option];
m11_253 -> m11_280  [key=1, style=dashed, color=red, label=option];
m11_253 -> m11_282  [key=1, style=dashed, color=red, label=option];
m11_253 -> m11_284  [key=1, style=dashed, color=red, label=option];
m11_253 -> m11_286  [key=1, style=dashed, color=red, label=option];
m11_253 -> m11_290  [key=1, style=dashed, color=red, label=option];
m11_259 -> m11_260  [key=0, style=solid, color=red];
m11_259 -> m11_261  [key=0, style=solid, color=red];
m11_264 -> m11_265  [key=0, style=solid, color=red];
m11_264 -> m11_163  [key=2, style=dotted, color=red];
m11_264 -> m11_213  [key=2, style=dotted, color=red];
m11_264 -> m11_267  [key=1, style=dashed, color=red, label=valueSetting];
m11_269 -> m11_270  [key=0, style=solid, color=red];
m11_269 -> m11_119  [key=2, style=dotted, color=red];
m11_269 -> m11_271  [key=1, style=dashed, color=red, label=items];
m11_271 -> m11_272  [key=0, style=solid, color=red];
m11_271 -> m11_215  [key=2, style=dotted, color=red];
m11_271 -> m11_274  [key=1, style=dashed, color=red, label=valueSetting];
m11_275 -> m11_276  [key=0, style=solid, color=red];
m11_275 -> m11_277  [key=0, style=solid, color=red];
m11_275 -> m11_112  [key=2, style=dotted, color=red];
m11_278 -> m11_279  [key=0, style=solid, color=red];
m11_278 -> m11_213  [key=2, style=dotted, color=red];
m11_278 -> m11_281  [key=1, style=dashed, color=red, label=valueSetting];
m11_283 -> m11_284  [key=0, style=solid, color=red];
m11_283 -> m11_119  [key=2, style=dotted, color=red];
m11_284 -> m11_285  [key=0, style=solid, color=red];
m11_284 -> m11_215  [key=2, style=dotted, color=red];
m11_284 -> m11_287  [key=1, style=dashed, color=red, label=valueSetting];
m11_288 -> m11_289  [key=0, style=solid, color=red];
m11_288 -> m11_290  [key=0, style=solid, color=red];
m11_290 -> m11_291  [key=0, style=solid, color=red];
m11_290 -> m11_252  [key=0, style=solid, color=red];
m11_290 -> m11_216  [key=2, style=dotted, color=red];
m11_252 -> m11_253  [key=0, style=solid, color=red];
m11_252 -> m11_292  [key=0, style=solid, color=red];
m11_252 -> m11_128  [key=2, style=dotted, color=red];
m11_262 -> m11_263  [key=0, style=solid, color=red];
m11_262 -> m11_275  [key=0, style=solid, color=red];
m11_270 -> m11_271  [key=0, style=solid, color=red];
m11_270 -> m11_163  [key=2, style=dotted, color=red];
m11_270 -> m11_214  [key=2, style=dotted, color=red];
m11_292 -> m11_293  [key=0, style=solid, color=red];
m11_254 -> m11_255  [key=0, style=solid, color=red];
m11_254 -> m11_256  [key=0, style=solid, color=red];
m11_256 -> m11_257  [key=0, style=solid, color=red];
m11_257 -> m11_258  [key=0, style=solid, color=red];
m11_257 -> m11_153  [key=2, style=dotted, color=red];
m11_258 -> m11_259  [key=0, style=solid, color=red];
m11_258 -> m11_288  [key=0, style=solid, color=red];
m11_263 -> m11_264  [key=0, style=solid, color=red];
m11_263 -> m11_268  [key=0, style=solid, color=red];
m11_266 -> m11_267  [key=0, style=solid, color=red];
m11_266 -> m11_92  [key=2, style=dotted, color=red];
m11_268 -> m11_269  [key=0, style=solid, color=red];
m11_268 -> m11_149  [key=2, style=dotted, color=red];
m11_273 -> m11_274  [key=0, style=solid, color=red];
m11_273 -> m11_92  [key=2, style=dotted, color=red];
m11_277 -> m11_278  [key=0, style=solid, color=red];
m11_277 -> m11_282  [key=0, style=solid, color=red];
m11_280 -> m11_281  [key=0, style=solid, color=red];
m11_280 -> m11_92  [key=2, style=dotted, color=red];
m11_282 -> m11_283  [key=0, style=solid, color=red];
m11_282 -> m11_149  [key=2, style=dotted, color=red];
m11_286 -> m11_287  [key=0, style=solid, color=red];
m11_286 -> m11_92  [key=2, style=dotted, color=red];
m11_255 -> m11_293  [key=0, style=solid, color=red];
m11_260 -> m11_293  [key=0, style=solid, color=red];
m11_261 -> m11_262  [key=0, style=solid, color=red];
m11_261 -> m11_213  [key=3, color=red, style=bold, label="Local variable bool valueSetting"];
m11_261 -> m11_215  [key=3, color=red, style=bold, label="Local variable bool valueSetting"];
m11_265 -> m11_266  [key=0, style=solid, color=red];
m11_265 -> m11_267  [key=0, style=solid, color=red];
m11_267 -> m11_293  [key=0, style=solid, color=red];
m11_267 -> m11_139  [key=2, style=dotted, color=red];
m11_272 -> m11_273  [key=0, style=solid, color=red];
m11_272 -> m11_274  [key=0, style=solid, color=red];
m11_274 -> m11_293  [key=0, style=solid, color=red];
m11_274 -> m11_142  [key=2, style=dotted, color=red];
m11_276 -> m11_293  [key=0, style=solid, color=red];
m11_279 -> m11_280  [key=0, style=solid, color=red];
m11_279 -> m11_281  [key=0, style=solid, color=red];
m11_281 -> m11_293  [key=0, style=solid, color=red];
m11_281 -> m11_142  [key=2, style=dotted, color=red];
m11_285 -> m11_286  [key=0, style=solid, color=red];
m11_285 -> m11_287  [key=0, style=solid, color=red];
m11_287 -> m11_293  [key=0, style=solid, color=red];
m11_287 -> m11_139  [key=2, style=dotted, color=red];
m11_289 -> m11_293  [key=0, style=solid, color=red];
m11_291 -> m11_293  [key=0, style=solid, color=red];
m11_293 -> m11_250  [key=0, style=bold, color=blue];
m11_460 -> m11_461  [key=0, style=solid, color=red];
m11_460 -> m11_462  [key=1, style=dashed, color=red, label=TRight];
m11_461 -> m11_462  [key=0, style=solid, color=red];
m11_462 -> m11_463  [key=0, style=solid, color=red];
m11_463 -> m11_460  [key=0, style=bold, color=blue];
m11_429 -> m11_449  [key=0, style=solid, color=red];
m11_429 -> m11_452  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_429 -> m11_453  [key=1, style=dashed, color=red, label="bool?"];
m11_429 -> m11_454  [key=1, style=dashed, color=red, label="bool?"];
m11_429 -> m11_455  [key=1, style=dashed, color=red, label="bool?"];
m11_429 -> m11_456  [key=1, style=dashed, color=red, label="bool?"];
m11_429 -> m11_423  [key=3, color=red, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
m11_429 -> m11_114  [key=3, color=red, style=bold, label="Parameter variable bool? mutualExclusiveness"];
m11_429 -> m11_58  [key=3, color=red, style=bold, label="Parameter variable bool? mutualExclusiveness"];
m11_449 -> m11_450  [key=0, style=solid, color=red];
m11_449 -> m11_457  [key=1, style=dashed, color=red, label=commandLineOptionsBase];
m11_452 -> m11_453  [key=0, style=solid, color=red];
m11_452 -> m11_459  [key=2, style=dotted, color=red];
m11_452 -> m11_454  [key=1, style=dashed, color=red, label=error];
m11_452 -> m11_456  [key=1, style=dashed, color=red, label=error];
m11_452 -> m11_457  [key=1, style=dashed, color=red, label=error];
m11_453 -> m11_454  [key=0, style=solid, color=red];
m11_453 -> m11_455  [key=0, style=solid, color=red];
m11_454 -> m11_455  [key=0, style=solid, color=red];
m11_455 -> m11_456  [key=0, style=solid, color=red];
m11_455 -> m11_457  [key=0, style=solid, color=red];
m11_456 -> m11_457  [key=0, style=solid, color=red];
m11_450 -> m11_451  [key=0, style=solid, color=red];
m11_450 -> m11_452  [key=0, style=solid, color=red];
m11_457 -> m11_458  [key=0, style=solid, color=red];
m11_457 -> m11_96  [key=2, style=dotted, color=red];
m11_451 -> m11_458  [key=0, style=solid, color=red];
m11_458 -> m11_429  [key=0, style=bold, color=blue];
m11_213 -> m11_322  [key=0, style=solid, color=red];
m11_213 -> m11_323  [key=1, style=dashed, color=red, label=string];
m11_213 -> m11_325  [key=1, style=dashed, color=red, label=string];
m11_213 -> m11_326  [key=1, style=dashed, color=red, label=string];
m11_213 -> m11_169  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
m11_213 -> m11_250  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
m11_213 -> m11_163  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m11_213 -> m11_328  [key=3, color=darkorchid, style=bold, label="method methodReturn bool SetValue"];
m11_213 -> m11_330  [key=3, color=darkorchid, style=bold, label="method methodReturn bool SetValue"];
m11_213 -> m11_331  [key=3, color=darkorchid, style=bold, label="method methodReturn bool SetValue"];
m11_322 -> m11_323  [key=0, style=solid, color=red];
m11_322 -> m11_324  [key=0, style=solid, color=red];
m11_323 -> m11_327  [key=0, style=solid, color=red];
m11_323 -> m11_328  [key=2, style=dotted, color=red];
m11_325 -> m11_327  [key=0, style=solid, color=red];
m11_325 -> m11_330  [key=2, style=dotted, color=red];
m11_326 -> m11_327  [key=0, style=solid, color=red];
m11_326 -> m11_331  [key=2, style=dotted, color=red];
m11_324 -> m11_325  [key=0, style=solid, color=red];
m11_324 -> m11_326  [key=0, style=solid, color=red];
m11_324 -> m11_329  [key=2, style=dotted, color=red];
m11_327 -> m11_213  [key=0, style=bold, color=blue];
m11_482 -> m11_483  [key=0, style=solid, color=red];
m11_483 -> m11_484  [key=0, style=solid, color=red];
m11_483 -> m11_89  [key=2, style=dotted, color=red];
m11_484 -> m11_482  [key=0, style=bold, color=blue];
m11_108 -> m11_711  [key=0, style=solid, color=red];
m11_108 -> m11_712  [key=1, style=dashed, color=red, label=string];
m11_108 -> m11_97  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m11_108 -> m11_112  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m11_711 -> m11_712  [key=0, style=solid, color=red];
m11_712 -> m11_713  [key=0, style=solid, color=red];
m11_712 -> m11_714  [key=2, style=dotted, color=red];
m11_713 -> m11_108  [key=0, style=bold, color=blue];
m11_388 -> m11_389  [key=0, style=solid, color=red];
m11_388 -> m11_391  [key=1, style=dashed, color=red, label=object];
m11_389 -> m11_390  [key=0, style=solid, color=red];
m11_389 -> m11_394  [key=0, style=solid, color=red];
m11_391 -> m11_392  [key=0, style=solid, color=red];
m11_391 -> m11_394  [key=0, style=solid, color=red];
m11_391 -> m11_64  [key=2, style=dotted, color=red];
m11_390 -> m11_391  [key=0, style=solid, color=red];
m11_392 -> m11_393  [key=0, style=solid, color=red];
m11_393 -> m11_394  [key=0, style=solid, color=red];
m11_393 -> m11_395  [key=2, style=dotted, color=red];
m11_394 -> m11_388  [key=0, style=bold, color=blue];
m11_294 -> m11_295  [key=0, style=solid, color=red];
m11_294 -> m11_296  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
m11_294 -> m11_297  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
m11_294 -> m11_298  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
m11_294 -> m11_299  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
m11_294 -> m11_300  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
m11_294 -> m11_301  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
m11_294 -> m11_302  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
m11_294 -> m11_303  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
m11_294 -> m11_305  [key=1, style=dashed, color=red, label="System.Reflection.PropertyInfo"];
m11_294 -> m11_306  [key=1, style=dashed, color=red, label="System.Reflection.PropertyInfo"];
m11_295 -> m11_296  [key=0, style=solid, color=red];
m11_295 -> m11_304  [key=0, style=solid, color=red];
m11_296 -> m11_297  [key=0, style=solid, color=red];
m11_297 -> m11_298  [key=0, style=solid, color=red];
m11_298 -> m11_299  [key=0, style=solid, color=red];
m11_299 -> m11_300  [key=0, style=solid, color=red];
m11_300 -> m11_301  [key=0, style=solid, color=red];
m11_301 -> m11_302  [key=0, style=solid, color=red];
m11_302 -> m11_303  [key=0, style=solid, color=red];
m11_303 -> m11_305  [key=0, style=solid, color=red];
m11_305 -> m11_306  [key=0, style=solid, color=red];
m11_305 -> m11_307  [key=0, style=solid, color=red];
m11_306 -> m11_308  [key=0, style=solid, color=red];
m11_304 -> m11_308  [key=0, style=solid, color=red];
m11_304 -> m11_309  [key=2, style=dotted, color=red];
m11_307 -> m11_308  [key=0, style=solid, color=red];
m11_307 -> m11_309  [key=2, style=dotted, color=red];
m11_308 -> m11_294  [key=0, style=bold, color=blue];
m11_715 -> m11_1  [key=1, style=dashed, color=red, label="CommandLine.HelpOptionAttribute"];
m11_715 -> m11_4  [key=1, style=dashed, color=red, label="CommandLine.HelpOptionAttribute"];
m11_715 -> m11_5  [key=1, style=dashed, color=red, label="CommandLine.HelpOptionAttribute"];
m11_715 -> m11_6  [key=1, style=dashed, color=red, label="CommandLine.HelpOptionAttribute"];
m11_716 -> m11_25  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
m11_716 -> m11_27  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
m11_716 -> m11_28  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
m11_716 -> m11_30  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
m11_716 -> m11_31  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
m11_717 -> m11_36  [key=1, style=dashed, color=red, label="CommandLine.OptionListAttribute"];
m11_717 -> m11_39  [key=1, style=dashed, color=red, label="CommandLine.OptionListAttribute"];
m11_718 -> m11_42  [key=1, style=dashed, color=red, label="CommandLine.ValueListAttribute"];
m11_718 -> m11_49  [key=1, style=dashed, color=red, label="CommandLine.ValueListAttribute"];
m11_719 -> m11_87  [key=1, style=dashed, color=red, label="CommandLine.ArgumentParser"];
m11_719 -> m11_93  [key=1, style=dashed, color=red, label="CommandLine.ArgumentParser"];
m11_720 -> m11_160  [key=1, style=dashed, color=red, label="CommandLine.BadOptionInfo"];
m11_720 -> m11_161  [key=1, style=dashed, color=red, label="CommandLine.BadOptionInfo"];
m11_721 -> m11_167  [key=1, style=dashed, color=red, label="CommandLine.LongOptionParser"];
m11_721 -> m11_174  [key=1, style=dashed, color=red, label="CommandLine.LongOptionParser"];
m11_721 -> m11_184  [key=1, style=dashed, color=red, label="CommandLine.LongOptionParser"];
m11_721 -> m11_191  [key=1, style=dashed, color=red, label="CommandLine.LongOptionParser"];
m11_721 -> m11_196  [key=1, style=dashed, color=red, label="CommandLine.LongOptionParser"];
m11_721 -> m11_202  [key=1, style=dashed, color=red, label="CommandLine.LongOptionParser"];
m11_721 -> m11_208  [key=1, style=dashed, color=red, label="CommandLine.LongOptionParser"];
m11_722 -> m11_219  [key=1, style=dashed, color=red, label="CommandLine.OneCharStringEnumerator"];
m11_722 -> m11_220  [key=1, style=dashed, color=red, label="CommandLine.OneCharStringEnumerator"];
m11_722 -> m11_224  [key=1, style=dashed, color=red, label="CommandLine.OneCharStringEnumerator"];
m11_722 -> m11_227  [key=1, style=dashed, color=red, label="CommandLine.OneCharStringEnumerator"];
m11_722 -> m11_228  [key=1, style=dashed, color=red, label="CommandLine.OneCharStringEnumerator"];
m11_722 -> m11_229  [key=1, style=dashed, color=red, label="CommandLine.OneCharStringEnumerator"];
m11_722 -> m11_231  [key=1, style=dashed, color=red, label="CommandLine.OneCharStringEnumerator"];
m11_722 -> m11_236  [key=1, style=dashed, color=red, label="CommandLine.OneCharStringEnumerator"];
m11_722 -> m11_238  [key=1, style=dashed, color=red, label="CommandLine.OneCharStringEnumerator"];
m11_722 -> m11_240  [key=1, style=dashed, color=red, label="CommandLine.OneCharStringEnumerator"];
m11_723 -> m11_248  [key=1, style=dashed, color=red, label="CommandLine.OptionGroupParser"];
m11_723 -> m11_255  [key=1, style=dashed, color=red, label="CommandLine.OptionGroupParser"];
m11_723 -> m11_266  [key=1, style=dashed, color=red, label="CommandLine.OptionGroupParser"];
m11_723 -> m11_273  [key=1, style=dashed, color=red, label="CommandLine.OptionGroupParser"];
m11_723 -> m11_280  [key=1, style=dashed, color=red, label="CommandLine.OptionGroupParser"];
m11_723 -> m11_286  [key=1, style=dashed, color=red, label="CommandLine.OptionGroupParser"];
m11_724 -> m11_296  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_297  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_298  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_299  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_300  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_301  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_302  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_303  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_306  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_322  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_323  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_324  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_325  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_326  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_332  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_336  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_338  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_348  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_349  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_350  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_351  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_352  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_364  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_365  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_366  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_373  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_374  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_377  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_378  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_379  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_380  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_389  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_390  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_724 -> m11_391  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
m11_725 -> m11_397  [key=1, style=dashed, color=red, label="CommandLine.OptionMap.MutuallyExclusiveInfo"];
m11_725 -> m11_400  [key=1, style=dashed, color=red, label="CommandLine.OptionMap.MutuallyExclusiveInfo"];
m11_726 -> m11_402  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
m11_726 -> m11_404  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
m11_726 -> m11_407  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
m11_726 -> m11_408  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
m11_726 -> m11_409  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
m11_726 -> m11_410  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
m11_726 -> m11_414  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
m11_726 -> m11_419  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
m11_726 -> m11_420  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
m11_726 -> m11_423  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
m11_726 -> m11_425  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
m11_726 -> m11_430  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
m11_726 -> m11_432  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
m11_726 -> m11_434  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
m11_726 -> m11_435  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
m11_726 -> m11_437  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
m11_726 -> m11_443  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
m11_726 -> m11_444  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
m11_726 -> m11_445  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
m11_727 -> m11_461  [key=1, style=dashed, color=red, label="CommandLine.Pair<TLeft, TRight>"];
m11_727 -> m11_462  [key=1, style=dashed, color=red, label="CommandLine.Pair<TLeft, TRight>"];
m11_727 -> m11_465  [key=1, style=dashed, color=red, label="CommandLine.Pair<TLeft, TRight>"];
m11_727 -> m11_466  [key=1, style=dashed, color=red, label="CommandLine.Pair<TLeft, TRight>"];
m11_727 -> m11_474  [key=1, style=dashed, color=red, label="CommandLine.Pair<TLeft, TRight>"];
m11_728 -> m11_477  [key=1, style=dashed, color=red, label="CommandLine.ParsingError"];
m11_728 -> m11_479  [key=1, style=dashed, color=red, label="CommandLine.ParsingError"];
m11_728 -> m11_480  [key=1, style=dashed, color=red, label="CommandLine.ParsingError"];
m11_729 -> m11_483  [key=1, style=dashed, color=red, label="CommandLine.PostParsingState"];
m11_730 -> m11_487  [key=1, style=dashed, color=red, label="CommandLine.StringArrayEnumerator"];
m11_730 -> m11_488  [key=1, style=dashed, color=red, label="CommandLine.StringArrayEnumerator"];
m11_730 -> m11_489  [key=1, style=dashed, color=red, label="CommandLine.StringArrayEnumerator"];
m11_730 -> m11_493  [key=1, style=dashed, color=red, label="CommandLine.StringArrayEnumerator"];
m11_730 -> m11_496  [key=1, style=dashed, color=red, label="CommandLine.StringArrayEnumerator"];
m11_730 -> m11_497  [key=1, style=dashed, color=red, label="CommandLine.StringArrayEnumerator"];
m11_730 -> m11_498  [key=1, style=dashed, color=red, label="CommandLine.StringArrayEnumerator"];
m11_730 -> m11_505  [key=1, style=dashed, color=red, label="CommandLine.StringArrayEnumerator"];
m11_730 -> m11_507  [key=1, style=dashed, color=red, label="CommandLine.StringArrayEnumerator"];
m11_730 -> m11_508  [key=1, style=dashed, color=red, label="CommandLine.StringArrayEnumerator"];
m11_730 -> m11_509  [key=1, style=dashed, color=red, label="CommandLine.StringArrayEnumerator"];
m11_731 -> m11_515  [key=1, style=dashed, color=red, label="CommandLine.TargetWrapper"];
m11_731 -> m11_516  [key=1, style=dashed, color=red, label="CommandLine.TargetWrapper"];
m11_731 -> m11_517  [key=1, style=dashed, color=red, label="CommandLine.TargetWrapper"];
m11_731 -> m11_518  [key=1, style=dashed, color=red, label="CommandLine.TargetWrapper"];
m11_731 -> m11_521  [key=1, style=dashed, color=red, label="CommandLine.TargetWrapper"];
m11_731 -> m11_523  [key=1, style=dashed, color=red, label="CommandLine.TargetWrapper"];
m11_731 -> m11_524  [key=1, style=dashed, color=red, label="CommandLine.TargetWrapper"];
m11_732 -> m11_532  [key=1, style=dashed, color=red, label="CommandLine.CommandLineOptionsBase"];
m11_733 -> m11_542  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
m11_733 -> m11_545  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
m11_733 -> m11_548  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
m11_733 -> m11_549  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
m11_733 -> m11_552  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
m11_733 -> m11_553  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
m11_733 -> m11_556  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
m11_733 -> m11_557  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
m11_733 -> m11_558  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
m11_733 -> m11_561  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
m11_733 -> m11_562  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
m11_733 -> m11_563  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
m11_733 -> m11_564  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
m11_734 -> m11_567  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
m11_734 -> m11_570  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
m11_734 -> m11_574  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
m11_734 -> m11_577  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
m11_734 -> m11_584  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
m11_734 -> m11_590  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
m11_734 -> m11_597  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
m11_734 -> m11_604  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
m11_734 -> m11_619  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
m14_14 -> m14_15  [key=0, style=solid];
m14_15 -> m14_16  [key=0, style=solid];
m14_15 -> m14_12  [key=2, style=dotted];
m14_15 -> m14_18  [key=2, style=dotted];
m14_16 -> m14_17  [key=0, style=solid];
m14_17 -> m14_14  [key=0, style=bold, color=blue];
m14_4 -> m14_5  [key=0, style=solid];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_7  [key=2, style=dotted];
m14_6 -> m14_4  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=2, style=dotted];
m14_2 -> m14_0  [key=0, style=bold, color=blue];
m14_8 -> m14_9  [key=0, style=solid];
m14_9 -> m14_10  [key=0, style=solid];
m14_9 -> m14_12  [key=2, style=dotted];
m14_9 -> m14_13  [key=2, style=dotted];
m14_10 -> m14_11  [key=0, style=solid];
m14_11 -> m14_8  [key=0, style=bold, color=blue];
m14_19 -> m14_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserBaseFixture"];
m14_19 -> m14_9  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserBaseFixture"];
m14_19 -> m14_10  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserBaseFixture"];
m14_19 -> m14_15  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserBaseFixture"];
m14_19 -> m14_16  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserBaseFixture"];
m16_10 -> m16_11  [key=0, style=solid];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_5  [key=2, style=dotted];
m16_11 -> m16_14  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_11 -> m16_15  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_6  [key=2, style=dotted];
m16_14 -> m16_15  [key=0, style=solid];
m16_14 -> m16_18  [key=2, style=dotted];
m16_14 -> m16_19  [key=2, style=dotted];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_20  [key=2, style=dotted];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_17  [key=2, style=dotted];
m16_16 -> m16_10  [key=0, style=bold, color=blue];
m16_178 -> m16_179  [key=0, style=solid];
m16_179 -> m16_180  [key=0, style=solid];
m16_179 -> m16_94  [key=2, style=dotted];
m16_180 -> m16_181  [key=0, style=solid];
m16_180 -> m16_6  [key=2, style=dotted];
m16_181 -> m16_182  [key=0, style=solid];
m16_181 -> m16_74  [key=2, style=dotted];
m16_182 -> m16_178  [key=0, style=bold, color=blue];
m16_262 -> m16_263  [key=0, style=solid];
m16_263 -> m16_264  [key=0, style=solid];
m16_263 -> m16_94  [key=2, style=dotted];
m16_264 -> m16_265  [key=0, style=solid];
m16_264 -> m16_267  [key=2, style=dotted];
m16_264 -> m16_6  [key=2, style=dotted];
m16_265 -> m16_266  [key=0, style=solid];
m16_265 -> m16_74  [key=2, style=dotted];
m16_266 -> m16_262  [key=0, style=bold, color=blue];
m16_244 -> m16_245  [key=0, style=solid];
m16_245 -> m16_246  [key=0, style=solid];
m16_245 -> m16_94  [key=2, style=dotted];
m16_245 -> m16_248  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_246 -> m16_247  [key=0, style=solid];
m16_246 -> m16_6  [key=2, style=dotted];
m16_248 -> m16_249  [key=0, style=solid];
m16_248 -> m16_18  [key=2, style=dotted];
m16_248 -> m16_19  [key=2, style=dotted];
m16_247 -> m16_248  [key=0, style=solid];
m16_247 -> m16_17  [key=2, style=dotted];
m16_249 -> m16_244  [key=0, style=bold, color=blue];
m16_286 -> m16_287  [key=0, style=solid];
m16_287 -> m16_288  [key=0, style=solid];
m16_287 -> m16_94  [key=2, style=dotted];
m16_288 -> m16_289  [key=0, style=solid];
m16_288 -> m16_291  [key=2, style=dotted];
m16_288 -> m16_6  [key=2, style=dotted];
m16_289 -> m16_290  [key=0, style=solid];
m16_289 -> m16_74  [key=2, style=dotted];
m16_290 -> m16_286  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_0  [key=0, style=bold, color=blue];
m16_256 -> m16_257  [key=0, style=solid];
m16_257 -> m16_258  [key=0, style=solid];
m16_257 -> m16_94  [key=2, style=dotted];
m16_257 -> m16_260  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_258 -> m16_259  [key=0, style=solid];
m16_258 -> m16_6  [key=2, style=dotted];
m16_260 -> m16_261  [key=0, style=solid];
m16_260 -> m16_18  [key=2, style=dotted];
m16_260 -> m16_19  [key=2, style=dotted];
m16_259 -> m16_260  [key=0, style=solid];
m16_259 -> m16_17  [key=2, style=dotted];
m16_261 -> m16_256  [key=0, style=bold, color=blue];
m16_250 -> m16_251  [key=0, style=solid];
m16_251 -> m16_252  [key=0, style=solid];
m16_251 -> m16_94  [key=2, style=dotted];
m16_251 -> m16_254  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_252 -> m16_253  [key=0, style=solid];
m16_252 -> m16_6  [key=2, style=dotted];
m16_254 -> m16_255  [key=0, style=solid];
m16_254 -> m16_18  [key=2, style=dotted];
m16_254 -> m16_19  [key=2, style=dotted];
m16_253 -> m16_254  [key=0, style=solid];
m16_253 -> m16_17  [key=2, style=dotted];
m16_255 -> m16_250  [key=0, style=bold, color=blue];
m16_7 -> m16_8  [key=0, style=solid];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_6  [key=2, style=dotted];
m16_9 -> m16_7  [key=0, style=bold, color=blue];
m16_75 -> m16_76  [key=0, style=solid];
m16_76 -> m16_77  [key=0, style=solid];
m16_76 -> m16_83  [key=2, style=dotted];
m16_76 -> m16_79  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_76 -> m16_80  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_76 -> m16_81  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_77 -> m16_78  [key=0, style=solid];
m16_77 -> m16_6  [key=2, style=dotted];
m16_79 -> m16_80  [key=0, style=solid];
m16_79 -> m16_18  [key=2, style=dotted];
m16_79 -> m16_19  [key=2, style=dotted];
m16_80 -> m16_81  [key=0, style=solid];
m16_80 -> m16_18  [key=2, style=dotted];
m16_80 -> m16_19  [key=2, style=dotted];
m16_81 -> m16_82  [key=0, style=solid];
m16_81 -> m16_20  [key=2, style=dotted];
m16_78 -> m16_79  [key=0, style=solid];
m16_78 -> m16_17  [key=2, style=dotted];
m16_82 -> m16_75  [key=0, style=bold, color=blue];
m16_226 -> m16_227  [key=0, style=solid];
m16_227 -> m16_228  [key=0, style=solid];
m16_227 -> m16_94  [key=2, style=dotted];
m16_227 -> m16_230  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_228 -> m16_229  [key=0, style=solid];
m16_228 -> m16_6  [key=2, style=dotted];
m16_230 -> m16_231  [key=0, style=solid];
m16_230 -> m16_18  [key=2, style=dotted];
m16_230 -> m16_19  [key=2, style=dotted];
m16_229 -> m16_230  [key=0, style=solid];
m16_229 -> m16_17  [key=2, style=dotted];
m16_231 -> m16_226  [key=0, style=bold, color=blue];
m16_163 -> m16_164  [key=0, style=solid];
m16_164 -> m16_165  [key=0, style=solid];
m16_164 -> m16_5  [key=2, style=dotted];
m16_165 -> m16_166  [key=0, style=solid];
m16_165 -> m16_6  [key=2, style=dotted];
m16_166 -> m16_167  [key=0, style=solid];
m16_166 -> m16_74  [key=2, style=dotted];
m16_167 -> m16_163  [key=0, style=bold, color=blue];
m16_31 -> m16_32  [key=0, style=solid];
m16_32 -> m16_33  [key=0, style=solid];
m16_32 -> m16_41  [key=2, style=dotted];
m16_32 -> m16_35  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_32 -> m16_36  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_32 -> m16_37  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_32 -> m16_38  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_32 -> m16_39  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_33 -> m16_34  [key=0, style=solid];
m16_33 -> m16_6  [key=2, style=dotted];
m16_35 -> m16_36  [key=0, style=solid];
m16_35 -> m16_18  [key=2, style=dotted];
m16_35 -> m16_30  [key=2, style=dotted];
m16_36 -> m16_37  [key=0, style=solid];
m16_36 -> m16_18  [key=2, style=dotted];
m16_36 -> m16_30  [key=2, style=dotted];
m16_37 -> m16_38  [key=0, style=solid];
m16_37 -> m16_18  [key=2, style=dotted];
m16_37 -> m16_42  [key=2, style=dotted];
m16_38 -> m16_39  [key=0, style=solid];
m16_38 -> m16_18  [key=2, style=dotted];
m16_38 -> m16_19  [key=2, style=dotted];
m16_39 -> m16_40  [key=0, style=solid];
m16_39 -> m16_20  [key=2, style=dotted];
m16_34 -> m16_35  [key=0, style=solid];
m16_34 -> m16_17  [key=2, style=dotted];
m16_40 -> m16_31  [key=0, style=bold, color=blue];
m16_68 -> m16_69  [key=0, style=solid];
m16_69 -> m16_70  [key=0, style=solid];
m16_69 -> m16_5  [key=2, style=dotted];
m16_69 -> m16_72  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_70 -> m16_71  [key=0, style=solid];
m16_70 -> m16_6  [key=2, style=dotted];
m16_72 -> m16_73  [key=0, style=solid];
m16_72 -> m16_20  [key=2, style=dotted];
m16_71 -> m16_72  [key=0, style=solid];
m16_71 -> m16_74  [key=2, style=dotted];
m16_73 -> m16_68  [key=0, style=bold, color=blue];
m16_280 -> m16_281  [key=0, style=solid];
m16_281 -> m16_282  [key=0, style=solid];
m16_281 -> m16_94  [key=2, style=dotted];
m16_282 -> m16_283  [key=0, style=solid];
m16_282 -> m16_285  [key=2, style=dotted];
m16_282 -> m16_6  [key=2, style=dotted];
m16_283 -> m16_284  [key=0, style=solid];
m16_283 -> m16_74  [key=2, style=dotted];
m16_284 -> m16_280  [key=0, style=bold, color=blue];
m16_53 -> m16_54  [key=0, style=solid];
m16_54 -> m16_55  [key=0, style=solid];
m16_54 -> m16_66  [key=2, style=dotted];
m16_54 -> m16_57  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_54 -> m16_58  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_54 -> m16_59  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_54 -> m16_60  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_54 -> m16_61  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_54 -> m16_62  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_54 -> m16_63  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_54 -> m16_64  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_55 -> m16_56  [key=0, style=solid];
m16_55 -> m16_6  [key=2, style=dotted];
m16_57 -> m16_58  [key=0, style=solid];
m16_57 -> m16_18  [key=2, style=dotted];
m16_57 -> m16_19  [key=2, style=dotted];
m16_58 -> m16_59  [key=0, style=solid];
m16_58 -> m16_67  [key=2, style=dotted];
m16_59 -> m16_60  [key=0, style=solid];
m16_59 -> m16_18  [key=2, style=dotted];
m16_59 -> m16_19  [key=2, style=dotted];
m16_60 -> m16_61  [key=0, style=solid];
m16_60 -> m16_67  [key=2, style=dotted];
m16_61 -> m16_62  [key=0, style=solid];
m16_61 -> m16_18  [key=2, style=dotted];
m16_61 -> m16_19  [key=2, style=dotted];
m16_62 -> m16_63  [key=0, style=solid];
m16_62 -> m16_67  [key=2, style=dotted];
m16_63 -> m16_64  [key=0, style=solid];
m16_63 -> m16_18  [key=2, style=dotted];
m16_63 -> m16_19  [key=2, style=dotted];
m16_64 -> m16_65  [key=0, style=solid];
m16_64 -> m16_67  [key=2, style=dotted];
m16_56 -> m16_57  [key=0, style=solid];
m16_56 -> m16_17  [key=2, style=dotted];
m16_65 -> m16_53  [key=0, style=bold, color=blue];
m16_193 -> m16_194  [key=0, style=solid];
m16_194 -> m16_195  [key=0, style=solid];
m16_194 -> m16_94  [key=2, style=dotted];
m16_195 -> m16_196  [key=0, style=solid];
m16_195 -> m16_6  [key=2, style=dotted];
m16_196 -> m16_197  [key=0, style=solid];
m16_196 -> m16_74  [key=2, style=dotted];
m16_197 -> m16_193  [key=0, style=bold, color=blue];
m16_153 -> m16_154  [key=0, style=solid];
m16_154 -> m16_155  [key=0, style=solid];
m16_154 -> m16_161  [key=2, style=dotted];
m16_154 -> m16_162  [key=2, style=dotted];
m16_154 -> m16_156  [key=1, style=dashed, color=darkseagreen4, label=local];
m16_155 -> m16_156  [key=0, style=solid];
m16_155 -> m16_146  [key=2, style=dotted];
m16_155 -> m16_158  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_155 -> m16_159  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_156 -> m16_157  [key=0, style=solid];
m16_156 -> m16_6  [key=2, style=dotted];
m16_158 -> m16_159  [key=0, style=solid];
m16_158 -> m16_18  [key=2, style=dotted];
m16_158 -> m16_19  [key=2, style=dotted];
m16_159 -> m16_160  [key=0, style=solid];
m16_159 -> m16_18  [key=2, style=dotted];
m16_159 -> m16_19  [key=2, style=dotted];
m16_157 -> m16_158  [key=0, style=solid];
m16_157 -> m16_17  [key=2, style=dotted];
m16_160 -> m16_153  [key=0, style=bold, color=blue];
m16_220 -> m16_221  [key=0, style=solid];
m16_221 -> m16_222  [key=0, style=solid];
m16_221 -> m16_94  [key=2, style=dotted];
m16_221 -> m16_224  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_222 -> m16_223  [key=0, style=solid];
m16_222 -> m16_6  [key=2, style=dotted];
m16_224 -> m16_225  [key=0, style=solid];
m16_224 -> m16_18  [key=2, style=dotted];
m16_224 -> m16_19  [key=2, style=dotted];
m16_223 -> m16_224  [key=0, style=solid];
m16_223 -> m16_17  [key=2, style=dotted];
m16_225 -> m16_220  [key=0, style=bold, color=blue];
m16_137 -> m16_138  [key=0, style=solid];
m16_138 -> m16_139  [key=0, style=solid];
m16_138 -> m16_145  [key=2, style=dotted];
m16_138 -> m16_140  [key=1, style=dashed, color=darkseagreen4, label=local];
m16_139 -> m16_140  [key=0, style=solid];
m16_139 -> m16_146  [key=2, style=dotted];
m16_139 -> m16_142  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_139 -> m16_143  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_140 -> m16_141  [key=0, style=solid];
m16_140 -> m16_6  [key=2, style=dotted];
m16_142 -> m16_143  [key=0, style=solid];
m16_142 -> m16_18  [key=2, style=dotted];
m16_142 -> m16_19  [key=2, style=dotted];
m16_143 -> m16_144  [key=0, style=solid];
m16_143 -> m16_18  [key=2, style=dotted];
m16_143 -> m16_19  [key=2, style=dotted];
m16_141 -> m16_142  [key=0, style=solid];
m16_141 -> m16_17  [key=2, style=dotted];
m16_144 -> m16_137  [key=0, style=bold, color=blue];
m16_84 -> m16_85  [key=0, style=solid];
m16_85 -> m16_86  [key=0, style=solid];
m16_85 -> m16_91  [key=1, style=dashed, color=darkseagreen4, label=actualCulture];
m16_86 -> m16_87  [key=0, style=solid];
m16_86 -> m16_93  [key=2, style=dotted];
m16_91 -> m16_92  [key=0, style=solid];
m16_87 -> m16_88  [key=0, style=solid];
m16_87 -> m16_94  [key=2, style=dotted];
m16_87 -> m16_90  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_88 -> m16_89  [key=0, style=solid];
m16_88 -> m16_6  [key=2, style=dotted];
m16_90 -> m16_91  [key=0, style=solid];
m16_90 -> m16_18  [key=2, style=dotted];
m16_90 -> m16_19  [key=2, style=dotted];
m16_89 -> m16_90  [key=0, style=solid];
m16_89 -> m16_17  [key=2, style=dotted];
m16_92 -> m16_84  [key=0, style=bold, color=blue];
m16_132 -> m16_133  [key=0, style=solid];
m16_133 -> m16_134  [key=0, style=solid];
m16_133 -> m16_5  [key=2, style=dotted];
m16_134 -> m16_135  [key=0, style=solid];
m16_134 -> m16_6  [key=2, style=dotted];
m16_135 -> m16_136  [key=0, style=solid];
m16_135 -> m16_74  [key=2, style=dotted];
m16_136 -> m16_132  [key=0, style=bold, color=blue];
m16_21 -> m16_22  [key=0, style=solid];
m16_22 -> m16_23  [key=0, style=solid];
m16_22 -> m16_5  [key=2, style=dotted];
m16_22 -> m16_25  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_22 -> m16_26  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_22 -> m16_27  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_22 -> m16_28  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_23 -> m16_24  [key=0, style=solid];
m16_23 -> m16_6  [key=2, style=dotted];
m16_25 -> m16_26  [key=0, style=solid];
m16_25 -> m16_18  [key=2, style=dotted];
m16_25 -> m16_19  [key=2, style=dotted];
m16_26 -> m16_27  [key=0, style=solid];
m16_26 -> m16_18  [key=2, style=dotted];
m16_26 -> m16_19  [key=2, style=dotted];
m16_27 -> m16_28  [key=0, style=solid];
m16_27 -> m16_18  [key=2, style=dotted];
m16_27 -> m16_30  [key=2, style=dotted];
m16_28 -> m16_29  [key=0, style=solid];
m16_28 -> m16_20  [key=2, style=dotted];
m16_24 -> m16_25  [key=0, style=solid];
m16_24 -> m16_17  [key=2, style=dotted];
m16_29 -> m16_21  [key=0, style=bold, color=blue];
m16_204 -> m16_205  [key=0, style=solid];
m16_205 -> m16_206  [key=0, style=solid];
m16_205 -> m16_213  [key=2, style=dotted];
m16_205 -> m16_208  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_205 -> m16_209  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_205 -> m16_210  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_205 -> m16_211  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_206 -> m16_207  [key=0, style=solid];
m16_206 -> m16_6  [key=2, style=dotted];
m16_208 -> m16_209  [key=0, style=solid];
m16_208 -> m16_18  [key=2, style=dotted];
m16_208 -> m16_19  [key=2, style=dotted];
m16_209 -> m16_210  [key=0, style=solid];
m16_209 -> m16_18  [key=2, style=dotted];
m16_209 -> m16_30  [key=2, style=dotted];
m16_210 -> m16_211  [key=0, style=solid];
m16_210 -> m16_18  [key=2, style=dotted];
m16_210 -> m16_19  [key=2, style=dotted];
m16_211 -> m16_212  [key=0, style=solid];
m16_211 -> m16_18  [key=2, style=dotted];
m16_211 -> m16_19  [key=2, style=dotted];
m16_207 -> m16_208  [key=0, style=solid];
m16_207 -> m16_17  [key=2, style=dotted];
m16_212 -> m16_204  [key=0, style=bold, color=blue];
m16_147 -> m16_148  [key=0, style=solid];
m16_148 -> m16_149  [key=0, style=solid];
m16_148 -> m16_145  [key=2, style=dotted];
m16_148 -> m16_150  [key=1, style=dashed, color=darkseagreen4, label=local];
m16_149 -> m16_150  [key=0, style=solid];
m16_149 -> m16_146  [key=2, style=dotted];
m16_150 -> m16_151  [key=0, style=solid];
m16_150 -> m16_6  [key=2, style=dotted];
m16_151 -> m16_152  [key=0, style=solid];
m16_151 -> m16_74  [key=2, style=dotted];
m16_152 -> m16_147  [key=0, style=bold, color=blue];
m16_214 -> m16_215  [key=0, style=solid];
m16_215 -> m16_216  [key=0, style=solid];
m16_215 -> m16_5  [key=2, style=dotted];
m16_215 -> m16_218  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_216 -> m16_217  [key=0, style=solid];
m16_216 -> m16_6  [key=2, style=dotted];
m16_218 -> m16_219  [key=0, style=solid];
m16_218 -> m16_18  [key=2, style=dotted];
m16_218 -> m16_19  [key=2, style=dotted];
m16_217 -> m16_218  [key=0, style=solid];
m16_217 -> m16_17  [key=2, style=dotted];
m16_219 -> m16_214  [key=0, style=bold, color=blue];
m16_2 -> m16_3  [key=0, style=solid];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_5  [key=2, style=dotted];
m16_3 -> m16_6  [key=2, style=dotted];
m16_4 -> m16_2  [key=0, style=bold, color=blue];
m16_122 -> m16_123  [key=0, style=solid];
m16_123 -> m16_124  [key=0, style=solid];
m16_123 -> m16_126  [key=2, style=dotted];
m16_124 -> m16_125  [key=0, style=solid];
m16_124 -> m16_6  [key=2, style=dotted];
m16_125 -> m16_122  [key=0, style=bold, color=blue];
m16_198 -> m16_199  [key=0, style=solid];
m16_199 -> m16_200  [key=0, style=solid];
m16_199 -> m16_5  [key=2, style=dotted];
m16_199 -> m16_202  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_200 -> m16_201  [key=0, style=solid];
m16_200 -> m16_6  [key=2, style=dotted];
m16_202 -> m16_203  [key=0, style=solid];
m16_202 -> m16_18  [key=2, style=dotted];
m16_202 -> m16_19  [key=2, style=dotted];
m16_201 -> m16_202  [key=0, style=solid];
m16_201 -> m16_17  [key=2, style=dotted];
m16_203 -> m16_198  [key=0, style=bold, color=blue];
m16_268 -> m16_269  [key=0, style=solid];
m16_269 -> m16_270  [key=0, style=solid];
m16_269 -> m16_94  [key=2, style=dotted];
m16_270 -> m16_271  [key=0, style=solid];
m16_270 -> m16_273  [key=2, style=dotted];
m16_270 -> m16_6  [key=2, style=dotted];
m16_271 -> m16_272  [key=0, style=solid];
m16_271 -> m16_74  [key=2, style=dotted];
m16_272 -> m16_268  [key=0, style=bold, color=blue];
m16_232 -> m16_233  [key=0, style=solid];
m16_233 -> m16_234  [key=0, style=solid];
m16_233 -> m16_94  [key=2, style=dotted];
m16_233 -> m16_236  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_234 -> m16_235  [key=0, style=solid];
m16_234 -> m16_6  [key=2, style=dotted];
m16_236 -> m16_237  [key=0, style=solid];
m16_236 -> m16_18  [key=2, style=dotted];
m16_236 -> m16_19  [key=2, style=dotted];
m16_235 -> m16_236  [key=0, style=solid];
m16_235 -> m16_17  [key=2, style=dotted];
m16_237 -> m16_232  [key=0, style=bold, color=blue];
m16_43 -> m16_44  [key=0, style=solid];
m16_44 -> m16_45  [key=0, style=solid];
m16_44 -> m16_41  [key=2, style=dotted];
m16_44 -> m16_47  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_44 -> m16_48  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_44 -> m16_49  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_44 -> m16_50  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_44 -> m16_51  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_45 -> m16_46  [key=0, style=solid];
m16_45 -> m16_6  [key=2, style=dotted];
m16_47 -> m16_48  [key=0, style=solid];
m16_47 -> m16_18  [key=2, style=dotted];
m16_47 -> m16_30  [key=2, style=dotted];
m16_48 -> m16_49  [key=0, style=solid];
m16_48 -> m16_18  [key=2, style=dotted];
m16_48 -> m16_42  [key=2, style=dotted];
m16_49 -> m16_50  [key=0, style=solid];
m16_49 -> m16_18  [key=2, style=dotted];
m16_49 -> m16_42  [key=2, style=dotted];
m16_50 -> m16_51  [key=0, style=solid];
m16_50 -> m16_18  [key=2, style=dotted];
m16_50 -> m16_19  [key=2, style=dotted];
m16_51 -> m16_52  [key=0, style=solid];
m16_51 -> m16_20  [key=2, style=dotted];
m16_46 -> m16_47  [key=0, style=solid];
m16_46 -> m16_17  [key=2, style=dotted];
m16_52 -> m16_43  [key=0, style=bold, color=blue];
m16_168 -> m16_169  [key=0, style=solid];
m16_169 -> m16_170  [key=0, style=solid];
m16_169 -> m16_94  [key=2, style=dotted];
m16_170 -> m16_171  [key=0, style=solid];
m16_170 -> m16_6  [key=2, style=dotted];
m16_171 -> m16_172  [key=0, style=solid];
m16_171 -> m16_74  [key=2, style=dotted];
m16_172 -> m16_168  [key=0, style=bold, color=blue];
m16_183 -> m16_184  [key=0, style=solid];
m16_184 -> m16_185  [key=0, style=solid];
m16_184 -> m16_94  [key=2, style=dotted];
m16_185 -> m16_186  [key=0, style=solid];
m16_185 -> m16_6  [key=2, style=dotted];
m16_186 -> m16_187  [key=0, style=solid];
m16_186 -> m16_74  [key=2, style=dotted];
m16_187 -> m16_183  [key=0, style=bold, color=blue];
m16_238 -> m16_239  [key=0, style=solid];
m16_239 -> m16_240  [key=0, style=solid];
m16_239 -> m16_94  [key=2, style=dotted];
m16_239 -> m16_242  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_240 -> m16_241  [key=0, style=solid];
m16_240 -> m16_6  [key=2, style=dotted];
m16_242 -> m16_243  [key=0, style=solid];
m16_242 -> m16_18  [key=2, style=dotted];
m16_242 -> m16_19  [key=2, style=dotted];
m16_241 -> m16_242  [key=0, style=solid];
m16_241 -> m16_17  [key=2, style=dotted];
m16_243 -> m16_238  [key=0, style=bold, color=blue];
m16_113 -> m16_114  [key=0, style=solid];
m16_114 -> m16_115  [key=0, style=solid];
m16_114 -> m16_121  [key=2, style=dotted];
m16_114 -> m16_117  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_114 -> m16_118  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_114 -> m16_119  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_115 -> m16_116  [key=0, style=solid];
m16_115 -> m16_6  [key=2, style=dotted];
m16_117 -> m16_118  [key=0, style=solid];
m16_117 -> m16_18  [key=2, style=dotted];
m16_117 -> m16_19  [key=2, style=dotted];
m16_118 -> m16_119  [key=0, style=solid];
m16_118 -> m16_18  [key=2, style=dotted];
m16_118 -> m16_19  [key=2, style=dotted];
m16_119 -> m16_120  [key=0, style=solid];
m16_119 -> m16_18  [key=2, style=dotted];
m16_119 -> m16_19  [key=2, style=dotted];
m16_116 -> m16_117  [key=0, style=solid];
m16_116 -> m16_17  [key=2, style=dotted];
m16_120 -> m16_113  [key=0, style=bold, color=blue];
m16_274 -> m16_275  [key=0, style=solid];
m16_275 -> m16_276  [key=0, style=solid];
m16_275 -> m16_94  [key=2, style=dotted];
m16_276 -> m16_277  [key=0, style=solid];
m16_276 -> m16_279  [key=2, style=dotted];
m16_276 -> m16_6  [key=2, style=dotted];
m16_277 -> m16_278  [key=0, style=solid];
m16_277 -> m16_74  [key=2, style=dotted];
m16_278 -> m16_274  [key=0, style=bold, color=blue];
m16_95 -> m16_96  [key=0, style=solid];
m16_96 -> m16_97  [key=0, style=solid];
m16_96 -> m16_102  [key=1, style=dashed, color=darkseagreen4, label=actualCulture];
m16_97 -> m16_98  [key=0, style=solid];
m16_97 -> m16_93  [key=2, style=dotted];
m16_102 -> m16_103  [key=0, style=solid];
m16_98 -> m16_99  [key=0, style=solid];
m16_98 -> m16_94  [key=2, style=dotted];
m16_98 -> m16_101  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_99 -> m16_100  [key=0, style=solid];
m16_99 -> m16_6  [key=2, style=dotted];
m16_101 -> m16_102  [key=0, style=solid];
m16_101 -> m16_18  [key=2, style=dotted];
m16_101 -> m16_19  [key=2, style=dotted];
m16_100 -> m16_101  [key=0, style=solid];
m16_100 -> m16_17  [key=2, style=dotted];
m16_103 -> m16_95  [key=0, style=bold, color=blue];
m16_188 -> m16_189  [key=0, style=solid];
m16_189 -> m16_190  [key=0, style=solid];
m16_189 -> m16_94  [key=2, style=dotted];
m16_190 -> m16_191  [key=0, style=solid];
m16_190 -> m16_6  [key=2, style=dotted];
m16_191 -> m16_192  [key=0, style=solid];
m16_191 -> m16_74  [key=2, style=dotted];
m16_192 -> m16_188  [key=0, style=bold, color=blue];
m16_104 -> m16_105  [key=0, style=solid];
m16_105 -> m16_106  [key=0, style=solid];
m16_105 -> m16_112  [key=2, style=dotted];
m16_105 -> m16_108  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_105 -> m16_109  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_105 -> m16_110  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_106 -> m16_107  [key=0, style=solid];
m16_106 -> m16_6  [key=2, style=dotted];
m16_108 -> m16_109  [key=0, style=solid];
m16_108 -> m16_18  [key=2, style=dotted];
m16_108 -> m16_19  [key=2, style=dotted];
m16_109 -> m16_110  [key=0, style=solid];
m16_109 -> m16_18  [key=2, style=dotted];
m16_109 -> m16_19  [key=2, style=dotted];
m16_110 -> m16_111  [key=0, style=solid];
m16_110 -> m16_18  [key=2, style=dotted];
m16_110 -> m16_30  [key=2, style=dotted];
m16_107 -> m16_108  [key=0, style=solid];
m16_107 -> m16_17  [key=2, style=dotted];
m16_111 -> m16_104  [key=0, style=bold, color=blue];
m16_127 -> m16_128  [key=0, style=solid];
m16_128 -> m16_129  [key=0, style=solid];
m16_128 -> m16_5  [key=2, style=dotted];
m16_129 -> m16_130  [key=0, style=solid];
m16_129 -> m16_6  [key=2, style=dotted];
m16_130 -> m16_131  [key=0, style=solid];
m16_130 -> m16_74  [key=2, style=dotted];
m16_131 -> m16_127  [key=0, style=bold, color=blue];
m16_173 -> m16_174  [key=0, style=solid];
m16_174 -> m16_175  [key=0, style=solid];
m16_174 -> m16_94  [key=2, style=dotted];
m16_175 -> m16_176  [key=0, style=solid];
m16_175 -> m16_6  [key=2, style=dotted];
m16_176 -> m16_177  [key=0, style=solid];
m16_176 -> m16_74  [key=2, style=dotted];
m16_177 -> m16_173  [key=0, style=bold, color=blue];
m16_292 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_23  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_24  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_33  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_34  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_45  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_46  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_55  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_56  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_70  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_71  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_77  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_78  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_88  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_89  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_99  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_100  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_106  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_107  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_115  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_116  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_124  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_129  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_130  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_134  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_135  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_140  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_141  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_150  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_151  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_156  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_157  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_165  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_166  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_170  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_171  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_175  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_176  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_180  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_181  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_185  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_186  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_190  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_191  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_195  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_196  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_200  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_201  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_206  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_207  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_216  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_217  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_222  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_223  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_228  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_229  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_234  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_235  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_240  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_241  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_246  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_247  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_252  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_253  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_258  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_259  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_264  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_265  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_270  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_271  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_276  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_277  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_282  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_283  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_288  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m16_292 -> m16_289  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_8  [key=2, style=dotted];
m18_1 -> m18_6  [key=1, style=dashed, color=darkseagreen4, label=writer];
m18_2 -> m18_3  [key=0, style=solid];
m18_2 -> m18_9  [key=2, style=dotted];
m18_2 -> m18_10  [key=2, style=dotted];
m18_2 -> m18_4  [key=1, style=dashed, color=darkseagreen4, label=parser];
m18_6 -> m18_7  [key=0, style=solid];
m18_6 -> m18_15  [key=2, style=dotted];
m18_6 -> m18_13  [key=2, style=dotted];
m18_6 -> m18_16  [key=2, style=dotted];
m18_3 -> m18_4  [key=0, style=solid];
m18_3 -> m18_11  [key=2, style=dotted];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_12  [key=2, style=dotted];
m18_5 -> m18_6  [key=0, style=solid];
m18_5 -> m18_13  [key=2, style=dotted];
m18_5 -> m18_14  [key=2, style=dotted];
m18_7 -> m18_0  [key=0, style=bold, color=blue];
m18_28 -> m18_29  [key=0, style=solid];
m18_29 -> m18_30  [key=0, style=solid];
m18_29 -> m18_8  [key=2, style=dotted];
m18_29 -> m18_32  [key=1, style=dashed, color=darkseagreen4, label=writer];
m18_29 -> m18_34  [key=1, style=dashed, color=darkseagreen4, label=writer];
m18_30 -> m18_31  [key=0, style=solid];
m18_30 -> m18_9  [key=2, style=dotted];
m18_30 -> m18_27  [key=2, style=dotted];
m18_30 -> m18_32  [key=1, style=dashed, color=darkseagreen4, label=parser];
m18_32 -> m18_33  [key=0, style=solid];
m18_32 -> m18_36  [key=2, style=dotted];
m18_34 -> m18_35  [key=0, style=solid];
m18_34 -> m18_15  [key=2, style=dotted];
m18_34 -> m18_13  [key=2, style=dotted];
m18_34 -> m18_16  [key=2, style=dotted];
m18_31 -> m18_32  [key=0, style=solid];
m18_31 -> m18_11  [key=2, style=dotted];
m18_33 -> m18_34  [key=0, style=solid];
m18_33 -> m18_13  [key=2, style=dotted];
m18_33 -> m18_14  [key=2, style=dotted];
m18_35 -> m18_28  [key=0, style=bold, color=blue];
m18_17 -> m18_18  [key=0, style=solid];
m18_18 -> m18_19  [key=0, style=solid];
m18_18 -> m18_8  [key=2, style=dotted];
m18_18 -> m18_20  [key=1, style=dashed, color=darkseagreen4, label=writer];
m18_18 -> m18_25  [key=1, style=dashed, color=darkseagreen4, label=writer];
m18_19 -> m18_20  [key=0, style=solid];
m18_19 -> m18_27  [key=2, style=dotted];
m18_19 -> m18_21  [key=1, style=dashed, color=darkseagreen4, label=settings];
m18_20 -> m18_21  [key=0, style=solid];
m18_25 -> m18_26  [key=0, style=solid];
m18_25 -> m18_15  [key=2, style=dotted];
m18_25 -> m18_13  [key=2, style=dotted];
m18_25 -> m18_16  [key=2, style=dotted];
m18_21 -> m18_22  [key=0, style=solid];
m18_21 -> m18_9  [key=2, style=dotted];
m18_21 -> m18_23  [key=1, style=dashed, color=darkseagreen4, label=parser];
m18_22 -> m18_23  [key=0, style=solid];
m18_22 -> m18_11  [key=2, style=dotted];
m18_23 -> m18_24  [key=0, style=solid];
m18_23 -> m18_12  [key=2, style=dotted];
m18_24 -> m18_25  [key=0, style=solid];
m18_24 -> m18_13  [key=2, style=dotted];
m18_24 -> m18_14  [key=2, style=dotted];
m18_26 -> m18_17  [key=0, style=bold, color=blue];
m20_4 -> m20_5  [key=0, style=solid];
m20_5 -> m20_6  [key=0, style=solid];
m20_5 -> m20_7  [key=2, style=dotted];
m20_6 -> m20_4  [key=0, style=bold, color=blue];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_2  [key=0, style=solid];
m20_2 -> m20_3  [key=0, style=solid];
m20_3 -> m20_0  [key=0, style=bold, color=blue];
m20_8 -> m20_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.ComplexOptions"];
m20_8 -> m20_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.ComplexOptions"];
m20_8 -> m20_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.ComplexOptions"];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_4  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_13  [key=2, style=dotted];
m22_3 -> m22_7  [key=1, style=dashed, color=darkseagreen4, label=yearsPart];
m22_3 -> m22_8  [key=1, style=dashed, color=darkseagreen4, label=yearsPart];
m22_3 -> m22_9  [key=1, style=dashed, color=darkseagreen4, label=yearsPart];
m22_3 -> m22_10  [key=1, style=dashed, color=darkseagreen4, label=yearsPart];
m22_3 -> m22_11  [key=1, style=dashed, color=darkseagreen4, label=yearsPart];
m22_4 -> m22_5  [key=0, style=solid];
m22_4 -> m22_10  [key=0, style=solid];
m22_7 -> m22_9  [key=0, style=solid];
m22_7 -> m22_15  [key=2, style=dotted];
m22_7 -> m22_16  [key=2, style=dotted];
m22_8 -> m22_9  [key=0, style=solid];
m22_8 -> m22_16  [key=2, style=dotted];
m22_9 -> m22_4  [key=0, style=solid];
m22_9 -> m22_16  [key=2, style=dotted];
m22_10 -> m22_11  [key=0, style=solid];
m22_10 -> m22_17  [key=2, style=dotted];
m22_11 -> m22_12  [key=0, style=solid];
m22_11 -> m22_18  [key=2, style=dotted];
m22_5 -> m22_6  [key=0, style=solid];
m22_5 -> m22_14  [key=2, style=dotted];
m22_5 -> m22_7  [key=1, style=dashed, color=darkseagreen4, label=y];
m22_5 -> m22_8  [key=1, style=dashed, color=darkseagreen4, label=y];
m22_6 -> m22_7  [key=0, style=solid];
m22_6 -> m22_8  [key=0, style=solid];
m22_12 -> m22_2  [key=0, style=bold, color=blue];
m22_44 -> m22_45  [key=0, style=solid];
m22_45 -> m22_46  [key=0, style=solid];
m22_45 -> m22_35  [key=2, style=dotted];
m22_46 -> m22_44  [key=0, style=bold, color=blue];
m22_27 -> m22_28  [key=0, style=solid];
m22_28 -> m22_29  [key=0, style=solid];
m22_28 -> m22_23  [key=2, style=dotted];
m22_29 -> m22_30  [key=0, style=solid];
m22_29 -> m22_24  [key=2, style=dotted];
m22_29 -> m22_25  [key=2, style=dotted];
m22_29 -> m22_26  [key=2, style=dotted];
m22_30 -> m22_27  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_0  [key=0, style=bold, color=blue];
m22_47 -> m22_48  [key=0, style=solid];
m22_48 -> m22_49  [key=0, style=solid];
m22_48 -> m22_0  [key=2, style=dotted];
m22_49 -> m22_50  [key=0, style=solid];
m22_49 -> m22_24  [key=2, style=dotted];
m22_49 -> m22_25  [key=2, style=dotted];
m22_49 -> m22_26  [key=2, style=dotted];
m22_50 -> m22_47  [key=0, style=bold, color=blue];
m22_51 -> m22_52  [key=0, style=solid];
m22_52 -> m22_53  [key=0, style=solid];
m22_52 -> m22_43  [key=2, style=dotted];
m22_52 -> m22_55  [key=1, style=dashed, color=darkseagreen4, label=info];
m22_53 -> m22_54  [key=0, style=solid];
m22_53 -> m22_56  [key=1, style=dashed, color=darkseagreen4, label=i];
m22_53 -> m22_53  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m22_55 -> m22_56  [key=0, style=solid];
m22_55 -> m22_24  [key=2, style=dotted];
m22_55 -> m22_25  [key=2, style=dotted];
m22_55 -> m22_26  [key=2, style=dotted];
m22_54 -> m22_55  [key=0, style=solid];
m22_54 -> m22_57  [key=0, style=solid];
m22_56 -> m22_54  [key=0, style=solid];
m22_56 -> m22_56  [key=1, style=dashed, color=darkseagreen4, label=i];
m22_57 -> m22_51  [key=0, style=bold, color=blue];
m22_31 -> m22_32  [key=0, style=solid];
m22_32 -> m22_33  [key=0, style=solid];
m22_32 -> m22_35  [key=2, style=dotted];
m22_33 -> m22_34  [key=0, style=solid];
m22_33 -> m22_24  [key=2, style=dotted];
m22_33 -> m22_25  [key=2, style=dotted];
m22_33 -> m22_26  [key=2, style=dotted];
m22_34 -> m22_31  [key=0, style=bold, color=blue];
m22_36 -> m22_37  [key=0, style=solid];
m22_37 -> m22_38  [key=0, style=solid];
m22_37 -> m22_35  [key=2, style=dotted];
m22_38 -> m22_39  [key=0, style=solid];
m22_38 -> m22_24  [key=2, style=dotted];
m22_38 -> m22_25  [key=2, style=dotted];
m22_38 -> m22_26  [key=2, style=dotted];
m22_39 -> m22_36  [key=0, style=bold, color=blue];
m22_19 -> m22_20  [key=0, style=solid];
m22_20 -> m22_21  [key=0, style=solid];
m22_20 -> m22_23  [key=2, style=dotted];
m22_21 -> m22_22  [key=0, style=solid];
m22_21 -> m22_24  [key=2, style=dotted];
m22_21 -> m22_25  [key=2, style=dotted];
m22_21 -> m22_26  [key=2, style=dotted];
m22_22 -> m22_19  [key=0, style=bold, color=blue];
m22_40 -> m22_41  [key=0, style=solid];
m22_41 -> m22_42  [key=0, style=solid];
m22_41 -> m22_43  [key=2, style=dotted];
m22_42 -> m22_40  [key=0, style=bold, color=blue];
m23_16 -> m23_19  [key=0, style=solid];
m23_16 -> m23_22  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m23_16 -> m23_24  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m23_16 -> m23_26  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m23_16 -> m23_27  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m23_16 -> m23_28  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m23_16 -> m23_29  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m23_16 -> m23_1  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Text.StringBuilder builder"];
m23_16 -> m23_0  [key=3, color=darkorchid, style=bold, label="Parameter variable object instance"];
m23_16 -> m23_4  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.FieldInfo field"];
m23_16 -> m23_7  [key=3, color=darkorchid, style=bold, label="Parameter variable object attr"];
m23_19 -> m23_20  [key=0, style=solid];
m23_19 -> m23_21  [key=1, style=dashed, color=darkseagreen4, label=baseOA];
m23_19 -> m23_22  [key=1, style=dashed, color=darkseagreen4, label=baseOA];
m23_19 -> m23_23  [key=1, style=dashed, color=darkseagreen4, label=baseOA];
m23_19 -> m23_25  [key=1, style=dashed, color=darkseagreen4, label=baseOA];
m23_19 -> m23_26  [key=1, style=dashed, color=darkseagreen4, label=baseOA];
m23_22 -> m23_23  [key=0, style=solid];
m23_22 -> m23_31  [key=2, style=dotted];
m23_24 -> m23_25  [key=0, style=solid];
m23_24 -> m23_31  [key=2, style=dotted];
m23_26 -> m23_27  [key=0, style=solid];
m23_26 -> m23_31  [key=2, style=dotted];
m23_27 -> m23_28  [key=0, style=solid];
m23_27 -> m23_31  [key=2, style=dotted];
m23_28 -> m23_29  [key=0, style=solid];
m23_28 -> m23_32  [key=2, style=dotted];
m23_28 -> m23_33  [key=2, style=dotted];
m23_29 -> m23_30  [key=0, style=solid];
m23_29 -> m23_31  [key=2, style=dotted];
m23_20 -> m23_21  [key=0, style=solid];
m23_20 -> m23_30  [key=0, style=solid];
m23_21 -> m23_22  [key=0, style=solid];
m23_21 -> m23_25  [key=0, style=solid];
m23_23 -> m23_24  [key=0, style=solid];
m23_23 -> m23_25  [key=0, style=solid];
m23_25 -> m23_26  [key=0, style=solid];
m23_25 -> m23_27  [key=0, style=solid];
m23_30 -> m23_16  [key=0, style=bold, color=blue];
m23_0 -> m23_1  [key=0, style=solid];
m23_0 -> m23_2  [key=1, style=dashed, color=darkseagreen4, label=object];
m23_0 -> m23_8  [key=1, style=dashed, color=darkseagreen4, label=object];
m23_0 -> m23_9  [key=1, style=dashed, color=darkseagreen4, label=object];
m23_1 -> m23_2  [key=0, style=solid];
m23_1 -> m23_12  [key=2, style=dotted];
m23_1 -> m23_8  [key=1, style=dashed, color=darkseagreen4, label=builder];
m23_1 -> m23_9  [key=1, style=dashed, color=darkseagreen4, label=builder];
m23_1 -> m23_10  [key=1, style=dashed, color=darkseagreen4, label=builder];
m23_2 -> m23_3  [key=0, style=solid];
m23_2 -> m23_13  [key=2, style=dotted];
m23_8 -> m23_9  [key=0, style=solid];
m23_8 -> m23_16  [key=2, style=dotted];
m23_9 -> m23_4  [key=0, style=solid];
m23_9 -> m23_17  [key=2, style=dotted];
m23_10 -> m23_11  [key=0, style=solid];
m23_10 -> m23_18  [key=2, style=dotted];
m23_3 -> m23_4  [key=0, style=solid];
m23_3 -> m23_14  [key=2, style=dotted];
m23_4 -> m23_5  [key=0, style=solid];
m23_4 -> m23_10  [key=0, style=solid];
m23_4 -> m23_8  [key=1, style=dashed, color=darkseagreen4, label=field];
m23_4 -> m23_9  [key=1, style=dashed, color=darkseagreen4, label=field];
m23_5 -> m23_6  [key=0, style=solid];
m23_5 -> m23_15  [key=2, style=dotted];
m23_5 -> m23_7  [key=1, style=dashed, color=darkseagreen4, label=attrs];
m23_6 -> m23_7  [key=0, style=solid];
m23_6 -> m23_4  [key=0, style=solid];
m23_7 -> m23_8  [key=0, style=solid];
m23_7 -> m23_9  [key=1, style=dashed, color=darkseagreen4, label=attr];
m23_11 -> m23_0  [key=0, style=bold, color=blue];
m23_17 -> m23_34  [key=0, style=solid];
m23_17 -> m23_36  [key=1, style=dashed, color=darkseagreen4, label=object];
m23_17 -> m23_38  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m23_17 -> m23_39  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m23_17 -> m23_40  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m23_17 -> m23_1  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Text.StringBuilder builder"];
m23_17 -> m23_0  [key=3, color=darkorchid, style=bold, label="Parameter variable object instance"];
m23_17 -> m23_4  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.FieldInfo field"];
m23_17 -> m23_7  [key=3, color=darkorchid, style=bold, label="Parameter variable object attr"];
m23_34 -> m23_35  [key=0, style=solid];
m23_36 -> m23_37  [key=0, style=solid];
m23_36 -> m23_32  [key=2, style=dotted];
m23_38 -> m23_39  [key=0, style=solid];
m23_38 -> m23_31  [key=2, style=dotted];
m23_39 -> m23_40  [key=0, style=solid];
m23_39 -> m23_31  [key=2, style=dotted];
m23_40 -> m23_37  [key=0, style=solid];
m23_40 -> m23_31  [key=2, style=dotted];
m23_35 -> m23_36  [key=0, style=solid];
m23_35 -> m23_41  [key=0, style=solid];
m23_37 -> m23_38  [key=0, style=solid];
m23_37 -> m23_41  [key=0, style=solid];
m23_37 -> m23_39  [key=1, style=dashed, color=darkseagreen4, label=value];
m23_41 -> m23_17  [key=0, style=bold, color=blue];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_4  [key=1, style=dashed, color=darkseagreen4, label=valueOne];
m25_1 -> m25_7  [key=1, style=dashed, color=darkseagreen4, label=valueOne];
m25_1 -> m25_1  [key=3, color=darkorchid, style=bold, label="Local variable string valueOne"];
m25_2 -> m25_3  [key=0, style=solid];
m25_2 -> m25_4  [key=1, style=dashed, color=darkseagreen4, label=valueTwo];
m25_2 -> m25_8  [key=1, style=dashed, color=darkseagreen4, label=valueTwo];
m25_2 -> m25_11  [key=1, style=dashed, color=darkseagreen4, label=valueTwo];
m25_2 -> m25_2  [key=3, color=darkorchid, style=bold, label="Local variable string valueTwo"];
m25_4 -> m25_5  [key=0, style=solid];
m25_7 -> m25_8  [key=0, style=solid];
m25_7 -> m25_21  [key=2, style=dotted];
m25_7 -> m25_22  [key=2, style=dotted];
m25_3 -> m25_4  [key=0, style=solid];
m25_3 -> m25_12  [key=1, style=dashed, color=darkseagreen4, label=valueThree];
m25_3 -> m25_15  [key=1, style=dashed, color=darkseagreen4, label=valueThree];
m25_3 -> m25_3  [key=3, color=darkorchid, style=bold, label="Local variable string valueThree"];
m25_8 -> m25_9  [key=0, style=solid];
m25_8 -> m25_21  [key=2, style=dotted];
m25_8 -> m25_22  [key=2, style=dotted];
m25_11 -> m25_12  [key=0, style=solid];
m25_11 -> m25_21  [key=2, style=dotted];
m25_11 -> m25_22  [key=2, style=dotted];
m25_12 -> m25_13  [key=0, style=solid];
m25_12 -> m25_21  [key=2, style=dotted];
m25_12 -> m25_22  [key=2, style=dotted];
m25_15 -> m25_16  [key=0, style=solid];
m25_15 -> m25_21  [key=2, style=dotted];
m25_15 -> m25_22  [key=2, style=dotted];
m25_5 -> m25_6  [key=0, style=solid];
m25_5 -> m25_19  [key=2, style=dotted];
m25_5 -> m25_7  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_5 -> m25_8  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_5 -> m25_9  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_5 -> m25_10  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_5 -> m25_11  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_5 -> m25_12  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_5 -> m25_13  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_5 -> m25_14  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_5 -> m25_15  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_5 -> m25_16  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_5 -> m25_17  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_6 -> m25_7  [key=0, style=solid];
m25_6 -> m25_20  [key=2, style=dotted];
m25_9 -> m25_10  [key=0, style=solid];
m25_9 -> m25_21  [key=2, style=dotted];
m25_9 -> m25_23  [key=2, style=dotted];
m25_10 -> m25_11  [key=0, style=solid];
m25_10 -> m25_20  [key=2, style=dotted];
m25_13 -> m25_14  [key=0, style=solid];
m25_13 -> m25_21  [key=2, style=dotted];
m25_13 -> m25_23  [key=2, style=dotted];
m25_14 -> m25_15  [key=0, style=solid];
m25_14 -> m25_20  [key=2, style=dotted];
m25_16 -> m25_17  [key=0, style=solid];
m25_16 -> m25_21  [key=2, style=dotted];
m25_16 -> m25_24  [key=2, style=dotted];
m25_17 -> m25_18  [key=0, style=solid];
m25_17 -> m25_21  [key=2, style=dotted];
m25_17 -> m25_25  [key=2, style=dotted];
m25_18 -> m25_0  [key=0, style=bold, color=blue];
m25_26 -> m25_27  [key=0, style=solid];
m25_27 -> m25_28  [key=0, style=solid];
m25_27 -> m25_47  [key=2, style=dotted];
m25_27 -> m25_29  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_27 -> m25_30  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_27 -> m25_31  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_27 -> m25_32  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_27 -> m25_33  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_27 -> m25_34  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_27 -> m25_35  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_27 -> m25_36  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_27 -> m25_37  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_27 -> m25_38  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_27 -> m25_39  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_27 -> m25_40  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_27 -> m25_41  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_27 -> m25_42  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_27 -> m25_43  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_27 -> m25_44  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_27 -> m25_45  [key=1, style=dashed, color=darkseagreen4, label=e];
m25_28 -> m25_29  [key=0, style=solid];
m25_28 -> m25_20  [key=2, style=dotted];
m25_29 -> m25_30  [key=0, style=solid];
m25_29 -> m25_21  [key=2, style=dotted];
m25_29 -> m25_22  [key=2, style=dotted];
m25_30 -> m25_31  [key=0, style=solid];
m25_30 -> m25_21  [key=2, style=dotted];
m25_30 -> m25_22  [key=2, style=dotted];
m25_31 -> m25_32  [key=0, style=solid];
m25_31 -> m25_48  [key=2, style=dotted];
m25_31 -> m25_21  [key=2, style=dotted];
m25_31 -> m25_22  [key=2, style=dotted];
m25_32 -> m25_33  [key=0, style=solid];
m25_32 -> m25_21  [key=2, style=dotted];
m25_32 -> m25_23  [key=2, style=dotted];
m25_33 -> m25_34  [key=0, style=solid];
m25_33 -> m25_20  [key=2, style=dotted];
m25_34 -> m25_35  [key=0, style=solid];
m25_34 -> m25_21  [key=2, style=dotted];
m25_34 -> m25_22  [key=2, style=dotted];
m25_35 -> m25_36  [key=0, style=solid];
m25_35 -> m25_21  [key=2, style=dotted];
m25_35 -> m25_22  [key=2, style=dotted];
m25_36 -> m25_37  [key=0, style=solid];
m25_36 -> m25_48  [key=2, style=dotted];
m25_36 -> m25_21  [key=2, style=dotted];
m25_36 -> m25_22  [key=2, style=dotted];
m25_37 -> m25_38  [key=0, style=solid];
m25_37 -> m25_21  [key=2, style=dotted];
m25_37 -> m25_23  [key=2, style=dotted];
m25_38 -> m25_39  [key=0, style=solid];
m25_38 -> m25_20  [key=2, style=dotted];
m25_39 -> m25_40  [key=0, style=solid];
m25_39 -> m25_21  [key=2, style=dotted];
m25_39 -> m25_22  [key=2, style=dotted];
m25_40 -> m25_41  [key=0, style=solid];
m25_40 -> m25_21  [key=2, style=dotted];
m25_40 -> m25_22  [key=2, style=dotted];
m25_41 -> m25_42  [key=0, style=solid];
m25_41 -> m25_48  [key=2, style=dotted];
m25_41 -> m25_21  [key=2, style=dotted];
m25_41 -> m25_22  [key=2, style=dotted];
m25_42 -> m25_43  [key=0, style=solid];
m25_42 -> m25_21  [key=2, style=dotted];
m25_42 -> m25_23  [key=2, style=dotted];
m25_43 -> m25_44  [key=0, style=solid];
m25_43 -> m25_20  [key=2, style=dotted];
m25_44 -> m25_45  [key=0, style=solid];
m25_44 -> m25_21  [key=2, style=dotted];
m25_44 -> m25_22  [key=2, style=dotted];
m25_45 -> m25_46  [key=0, style=solid];
m25_45 -> m25_21  [key=2, style=dotted];
m25_45 -> m25_25  [key=2, style=dotted];
m25_46 -> m25_26  [key=0, style=bold, color=blue];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_2  [key=0, style=solid];
m29_1 -> m29_8  [key=2, style=dotted];
m29_1 -> m29_5  [key=1, style=dashed, color=darkseagreen4, label=hi];
m29_2 -> m29_3  [key=0, style=solid];
m29_2 -> m29_1  [key=3, color=darkorchid, style=bold, label="Local variable string s"];
m29_5 -> m29_6  [key=0, style=solid];
m29_5 -> m29_12  [key=2, style=dotted];
m29_3 -> m29_4  [key=0, style=solid];
m29_3 -> m29_9  [key=2, style=dotted];
m29_3 -> m29_10  [key=2, style=dotted];
m29_4 -> m29_5  [key=0, style=solid];
m29_4 -> m29_11  [key=2, style=dotted];
m29_4 -> m29_6  [key=1, style=dashed, color=darkseagreen4, label=sw];
m29_6 -> m29_7  [key=0, style=solid];
m29_6 -> m29_13  [key=2, style=dotted];
m29_6 -> m29_9  [key=2, style=dotted];
m29_6 -> m29_10  [key=2, style=dotted];
m29_7 -> m29_0  [key=0, style=bold, color=blue];
m29_14 -> m29_15  [key=0, style=solid];
m29_15 -> m29_16  [key=0, style=solid];
m29_15 -> m29_22  [key=2, style=dotted];
m29_15 -> m29_19  [key=1, style=dashed, color=darkseagreen4, label=hi];
m29_16 -> m29_17  [key=0, style=solid];
m29_16 -> m29_15  [key=3, color=darkorchid, style=bold, label="Local variable string s"];
m29_19 -> m29_20  [key=0, style=solid];
m29_19 -> m29_12  [key=2, style=dotted];
m29_17 -> m29_18  [key=0, style=solid];
m29_17 -> m29_9  [key=2, style=dotted];
m29_17 -> m29_10  [key=2, style=dotted];
m29_18 -> m29_19  [key=0, style=solid];
m29_18 -> m29_11  [key=2, style=dotted];
m29_18 -> m29_20  [key=1, style=dashed, color=darkseagreen4, label=sw];
m29_20 -> m29_21  [key=0, style=solid];
m29_20 -> m29_13  [key=2, style=dotted];
m29_20 -> m29_9  [key=2, style=dotted];
m29_20 -> m29_10  [key=2, style=dotted];
m29_21 -> m29_14  [key=0, style=bold, color=blue];
m31_30 -> m31_31  [key=0, style=solid];
m31_31 -> m31_32  [key=0, style=solid];
m31_31 -> m31_23  [key=2, style=dotted];
m31_31 -> m31_33  [key=1, style=dashed, color=darkseagreen4, label=options];
m31_32 -> m31_33  [key=0, style=solid];
m31_32 -> m31_24  [key=2, style=dotted];
m31_32 -> m31_35  [key=1, style=dashed, color=darkseagreen4, label=writer];
m31_33 -> m31_34  [key=0, style=solid];
m31_33 -> m31_25  [key=2, style=dotted];
m31_35 -> m31_36  [key=0, style=solid];
m31_35 -> m31_27  [key=2, style=dotted];
m31_35 -> m31_37  [key=1, style=dashed, color=darkseagreen4, label=helpText];
m31_34 -> m31_35  [key=0, style=solid];
m31_34 -> m31_39  [key=2, style=dotted];
m31_36 -> m31_37  [key=0, style=solid];
m31_36 -> m31_28  [key=2, style=dotted];
m31_36 -> m31_40  [key=2, style=dotted];
m31_37 -> m31_38  [key=0, style=solid];
m31_37 -> m31_41  [key=2, style=dotted];
m31_38 -> m31_30  [key=0, style=bold, color=blue];
m31_16 -> m31_17  [key=0, style=solid];
m31_17 -> m31_18  [key=0, style=solid];
m31_17 -> m31_23  [key=2, style=dotted];
m31_17 -> m31_19  [key=1, style=dashed, color=darkseagreen4, label=options];
m31_18 -> m31_19  [key=0, style=solid];
m31_18 -> m31_24  [key=2, style=dotted];
m31_18 -> m31_21  [key=1, style=dashed, color=darkseagreen4, label=writer];
m31_19 -> m31_20  [key=0, style=solid];
m31_19 -> m31_25  [key=2, style=dotted];
m31_21 -> m31_22  [key=0, style=solid];
m31_21 -> m31_27  [key=2, style=dotted];
m31_21 -> m31_28  [key=2, style=dotted];
m31_21 -> m31_29  [key=2, style=dotted];
m31_20 -> m31_21  [key=0, style=solid];
m31_20 -> m31_26  [key=2, style=dotted];
m31_22 -> m31_16  [key=0, style=bold, color=blue];
m31_42 -> m31_43  [key=0, style=solid];
m31_43 -> m31_44  [key=0, style=solid];
m31_43 -> m31_23  [key=2, style=dotted];
m31_43 -> m31_45  [key=1, style=dashed, color=darkseagreen4, label=options];
m31_44 -> m31_45  [key=0, style=solid];
m31_44 -> m31_24  [key=2, style=dotted];
m31_44 -> m31_47  [key=1, style=dashed, color=darkseagreen4, label=writer];
m31_45 -> m31_46  [key=0, style=solid];
m31_45 -> m31_25  [key=2, style=dotted];
m31_47 -> m31_48  [key=0, style=solid];
m31_47 -> m31_27  [key=2, style=dotted];
m31_46 -> m31_47  [key=0, style=solid];
m31_46 -> m31_39  [key=2, style=dotted];
m31_48 -> m31_49  [key=0, style=solid];
m31_48 -> m31_28  [key=2, style=dotted];
m31_48 -> m31_40  [key=2, style=dotted];
m31_49 -> m31_42  [key=0, style=bold, color=blue];
m31_0 -> m31_1  [key=0, style=solid];
m31_1 -> m31_2  [key=0, style=solid];
m31_1 -> m31_11  [key=2, style=dotted];
m31_1 -> m31_12  [key=2, style=dotted];
m31_1 -> m31_3  [key=1, style=dashed, color=darkseagreen4, label=help];
m31_1 -> m31_4  [key=1, style=dashed, color=darkseagreen4, label=help];
m31_1 -> m31_5  [key=1, style=dashed, color=darkseagreen4, label=help];
m31_1 -> m31_6  [key=1, style=dashed, color=darkseagreen4, label=help];
m31_1 -> m31_7  [key=1, style=dashed, color=darkseagreen4, label=help];
m31_1 -> m31_8  [key=1, style=dashed, color=darkseagreen4, label=help];
m31_1 -> m31_9  [key=1, style=dashed, color=darkseagreen4, label=help];
m31_2 -> m31_3  [key=0, style=solid];
m31_2 -> m31_13  [key=2, style=dotted];
m31_3 -> m31_4  [key=0, style=solid];
m31_3 -> m31_14  [key=2, style=dotted];
m31_4 -> m31_5  [key=0, style=solid];
m31_4 -> m31_14  [key=2, style=dotted];
m31_5 -> m31_6  [key=0, style=solid];
m31_5 -> m31_14  [key=2, style=dotted];
m31_6 -> m31_7  [key=0, style=solid];
m31_6 -> m31_14  [key=2, style=dotted];
m31_7 -> m31_8  [key=0, style=solid];
m31_7 -> m31_14  [key=2, style=dotted];
m31_8 -> m31_9  [key=0, style=solid];
m31_8 -> m31_15  [key=2, style=dotted];
m31_9 -> m31_10  [key=0, style=solid];
m31_10 -> m31_0  [key=0, style=bold, color=blue];
m31_50 -> m31_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions"];
m31_51 -> m31_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.HelpOptionAttributeFixture"];
m31_51 -> m31_20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.HelpOptionAttributeFixture"];
m31_51 -> m31_33  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.HelpOptionAttributeFixture"];
m31_51 -> m31_34  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.HelpOptionAttributeFixture"];
m31_51 -> m31_45  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.HelpOptionAttributeFixture"];
m31_51 -> m31_46  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.HelpOptionAttributeFixture"];
m33_175 -> m33_176  [key=0, style=solid];
m33_176 -> m33_177  [key=0, style=solid];
m33_176 -> m33_163  [key=2, style=dotted];
m33_177 -> m33_178  [key=0, style=solid];
m33_177 -> m33_153  [key=2, style=dotted];
m33_177 -> m33_180  [key=2, style=dotted];
m33_177 -> m33_155  [key=2, style=dotted];
m33_178 -> m33_179  [key=0, style=solid];
m33_178 -> m33_44  [key=2, style=dotted];
m33_178 -> m33_156  [key=2, style=dotted];
m33_179 -> m33_175  [key=0, style=bold, color=blue];
m33_195 -> m33_196  [key=0, style=solid];
m33_195 -> m33_197  [key=1, style=dashed, color=green, label="CommandLine.Text.FormatOptionHelpTextEventArgs"];
m33_195 -> m33_202  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.FormatOptionHelpTextEventArgs"];
m33_195 -> m33_204  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.FormatOptionHelpTextEventArgs"];
m33_196 -> m33_197  [key=0, style=solid, color=green];
m33_196 -> m33_196  [key=3, color=darkorchid, style=bold, label="Local variable string optionHelp"];
m33_197 -> m33_198  [key=0, style=solid, color=green];
m33_197 -> m33_200  [key=0, style=solid, color=green];
m33_202 -> m33_203  [key=0, style=solid];
m33_202 -> m33_204  [key=0, style=solid];
m33_204 -> m33_205  [key=0, style=solid];
m33_198 -> m33_199  [key=0, style=solid, color=green];
m33_200 -> m33_201  [key=0, style=solid, color=green];
m33_199 -> m33_202  [key=0, style=solid];
m33_201 -> m33_202  [key=0, style=solid];
m33_201 -> m33_203  [key=1, style=dashed, color=darkseagreen4, label=optionHelp];
m33_201 -> m33_204  [key=1, style=dashed, color=darkseagreen4, label=optionHelp];
m33_203 -> m33_204  [key=0, style=solid];
m33_203 -> m33_203  [key=1, style=dashed, color=darkseagreen4, label=optionHelp];
m33_205 -> m33_195  [key=0, style=bold, color=blue];
m33_138 -> m33_139  [key=0, style=solid];
m33_139 -> m33_140  [key=0, style=solid];
m33_139 -> m33_151  [key=2, style=dotted];
m33_139 -> m33_141  [key=1, style=dashed, color=darkseagreen4, label=sw];
m33_139 -> m33_144  [key=1, style=dashed, color=darkseagreen4, label=sw];
m33_140 -> m33_141  [key=0, style=solid];
m33_140 -> m33_152  [key=2, style=dotted];
m33_140 -> m33_142  [key=1, style=dashed, color=darkseagreen4, label=options];
m33_141 -> m33_142  [key=0, style=solid];
m33_141 -> m33_153  [key=2, style=dotted];
m33_141 -> m33_154  [key=2, style=dotted];
m33_144 -> m33_145  [key=0, style=solid];
m33_144 -> m33_157  [key=2, style=dotted];
m33_144 -> m33_146  [key=1, style=dashed, color=darkseagreen4, label=outsw];
m33_142 -> m33_143  [key=0, style=solid];
m33_142 -> m33_155  [key=2, style=dotted];
m33_143 -> m33_144  [key=0, style=solid];
m33_143 -> m33_44  [key=2, style=dotted];
m33_143 -> m33_156  [key=2, style=dotted];
m33_145 -> m33_146  [key=0, style=solid];
m33_145 -> m33_103  [key=2, style=dotted];
m33_146 -> m33_147  [key=0, style=solid];
m33_146 -> m33_43  [key=2, style=dotted];
m33_146 -> m33_148  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_146 -> m33_149  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_147 -> m33_148  [key=0, style=solid];
m33_147 -> m33_44  [key=2, style=dotted];
m33_147 -> m33_45  [key=2, style=dotted];
m33_148 -> m33_149  [key=0, style=solid];
m33_148 -> m33_44  [key=2, style=dotted];
m33_148 -> m33_45  [key=2, style=dotted];
m33_149 -> m33_150  [key=0, style=solid];
m33_149 -> m33_44  [key=2, style=dotted];
m33_149 -> m33_45  [key=2, style=dotted];
m33_150 -> m33_138  [key=0, style=bold, color=blue];
m33_181 -> m33_182  [key=0, style=solid];
m33_182 -> m33_183  [key=0, style=solid];
m33_182 -> m33_163  [key=2, style=dotted];
m33_183 -> m33_184  [key=0, style=solid];
m33_183 -> m33_153  [key=2, style=dotted];
m33_183 -> m33_180  [key=2, style=dotted];
m33_183 -> m33_155  [key=2, style=dotted];
m33_184 -> m33_185  [key=0, style=solid];
m33_184 -> m33_44  [key=2, style=dotted];
m33_184 -> m33_156  [key=2, style=dotted];
m33_185 -> m33_181  [key=0, style=bold, color=blue];
m33_58 -> m33_59  [key=0, style=solid];
m33_59 -> m33_60  [key=0, style=solid];
m33_60 -> m33_61  [key=0, style=solid];
m33_60 -> m33_70  [key=2, style=dotted];
m33_60 -> m33_21  [key=2, style=dotted];
m33_61 -> m33_62  [key=0, style=solid];
m33_61 -> m33_42  [key=2, style=dotted];
m33_62 -> m33_63  [key=0, style=solid];
m33_62 -> m33_43  [key=2, style=dotted];
m33_62 -> m33_64  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_62 -> m33_65  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_62 -> m33_66  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_62 -> m33_67  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_62 -> m33_68  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_63 -> m33_64  [key=0, style=solid];
m33_63 -> m33_44  [key=2, style=dotted];
m33_63 -> m33_45  [key=2, style=dotted];
m33_64 -> m33_65  [key=0, style=solid];
m33_64 -> m33_44  [key=2, style=dotted];
m33_64 -> m33_45  [key=2, style=dotted];
m33_65 -> m33_66  [key=0, style=solid];
m33_65 -> m33_44  [key=2, style=dotted];
m33_65 -> m33_45  [key=2, style=dotted];
m33_66 -> m33_67  [key=0, style=solid];
m33_66 -> m33_44  [key=2, style=dotted];
m33_66 -> m33_45  [key=2, style=dotted];
m33_67 -> m33_68  [key=0, style=solid];
m33_67 -> m33_44  [key=2, style=dotted];
m33_67 -> m33_45  [key=2, style=dotted];
m33_68 -> m33_69  [key=0, style=solid];
m33_68 -> m33_44  [key=2, style=dotted];
m33_68 -> m33_45  [key=2, style=dotted];
m33_69 -> m33_58  [key=0, style=bold, color=blue];
m33_134 -> m33_135  [key=0, style=solid];
m33_135 -> m33_136  [key=0, style=solid];
m33_135 -> m33_121  [key=2, style=dotted];
m33_136 -> m33_137  [key=0, style=solid];
m33_136 -> m33_42  [key=2, style=dotted];
m33_136 -> m33_44  [key=2, style=dotted];
m33_136 -> m33_45  [key=2, style=dotted];
m33_137 -> m33_134  [key=0, style=bold, color=blue];
m33_86 -> m33_87  [key=0, style=solid];
m33_87 -> m33_88  [key=0, style=solid];
m33_87 -> m33_14  [key=2, style=dotted];
m33_87 -> m33_89  [key=1, style=dashed, color=darkseagreen4, label=local];
m33_87 -> m33_90  [key=1, style=dashed, color=darkseagreen4, label=local];
m33_87 -> m33_91  [key=1, style=dashed, color=darkseagreen4, label=local];
m33_87 -> m33_92  [key=1, style=dashed, color=darkseagreen4, label=local];
m33_88 -> m33_89  [key=0, style=solid];
m33_88 -> m33_101  [key=2, style=dotted];
m33_89 -> m33_90  [key=0, style=solid];
m33_89 -> m33_20  [key=2, style=dotted];
m33_90 -> m33_91  [key=0, style=solid];
m33_90 -> m33_102  [key=2, style=dotted];
m33_90 -> m33_21  [key=2, style=dotted];
m33_91 -> m33_92  [key=0, style=solid];
m33_91 -> m33_41  [key=2, style=dotted];
m33_92 -> m33_93  [key=0, style=solid];
m33_92 -> m33_42  [key=2, style=dotted];
m33_92 -> m33_94  [key=1, style=dashed, color=darkseagreen4, label=help];
m33_93 -> m33_94  [key=0, style=solid];
m33_93 -> m33_103  [key=2, style=dotted];
m33_94 -> m33_95  [key=0, style=solid];
m33_94 -> m33_43  [key=2, style=dotted];
m33_94 -> m33_96  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_94 -> m33_97  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_94 -> m33_98  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_94 -> m33_99  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_95 -> m33_96  [key=0, style=solid];
m33_95 -> m33_44  [key=2, style=dotted];
m33_95 -> m33_45  [key=2, style=dotted];
m33_96 -> m33_97  [key=0, style=solid];
m33_96 -> m33_44  [key=2, style=dotted];
m33_96 -> m33_45  [key=2, style=dotted];
m33_97 -> m33_98  [key=0, style=solid];
m33_97 -> m33_44  [key=2, style=dotted];
m33_97 -> m33_45  [key=2, style=dotted];
m33_98 -> m33_99  [key=0, style=solid];
m33_98 -> m33_44  [key=2, style=dotted];
m33_98 -> m33_45  [key=2, style=dotted];
m33_99 -> m33_100  [key=0, style=solid];
m33_99 -> m33_44  [key=2, style=dotted];
m33_99 -> m33_45  [key=2, style=dotted];
m33_100 -> m33_86  [key=0, style=bold, color=blue];
m33_170 -> m33_171  [key=0, style=solid];
m33_171 -> m33_172  [key=0, style=solid];
m33_171 -> m33_163  [key=2, style=dotted];
m33_172 -> m33_173  [key=0, style=solid];
m33_172 -> m33_153  [key=2, style=dotted];
m33_172 -> m33_164  [key=2, style=dotted];
m33_172 -> m33_155  [key=2, style=dotted];
m33_173 -> m33_174  [key=0, style=solid];
m33_173 -> m33_44  [key=2, style=dotted];
m33_173 -> m33_156  [key=2, style=dotted];
m33_174 -> m33_170  [key=0, style=bold, color=blue];
m33_158 -> m33_159  [key=0, style=solid];
m33_159 -> m33_160  [key=0, style=solid];
m33_159 -> m33_163  [key=2, style=dotted];
m33_160 -> m33_161  [key=0, style=solid];
m33_160 -> m33_153  [key=2, style=dotted];
m33_160 -> m33_164  [key=2, style=dotted];
m33_160 -> m33_155  [key=2, style=dotted];
m33_161 -> m33_162  [key=0, style=solid];
m33_161 -> m33_44  [key=2, style=dotted];
m33_161 -> m33_156  [key=2, style=dotted];
m33_162 -> m33_158  [key=0, style=bold, color=blue];
m33_25 -> m33_26  [key=0, style=solid];
m33_26 -> m33_27  [key=0, style=solid];
m33_26 -> m33_20  [key=2, style=dotted];
m33_27 -> m33_25  [key=0, style=bold, color=blue];
m33_46 -> m33_47  [key=0, style=solid];
m33_47 -> m33_48  [key=0, style=solid];
m33_48 -> m33_49  [key=0, style=solid];
m33_48 -> m33_57  [key=2, style=dotted];
m33_48 -> m33_21  [key=2, style=dotted];
m33_49 -> m33_50  [key=0, style=solid];
m33_49 -> m33_42  [key=2, style=dotted];
m33_50 -> m33_51  [key=0, style=solid];
m33_50 -> m33_43  [key=2, style=dotted];
m33_50 -> m33_52  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_50 -> m33_53  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_50 -> m33_54  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_50 -> m33_55  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_51 -> m33_52  [key=0, style=solid];
m33_51 -> m33_44  [key=2, style=dotted];
m33_51 -> m33_45  [key=2, style=dotted];
m33_52 -> m33_53  [key=0, style=solid];
m33_52 -> m33_44  [key=2, style=dotted];
m33_52 -> m33_45  [key=2, style=dotted];
m33_53 -> m33_54  [key=0, style=solid];
m33_53 -> m33_44  [key=2, style=dotted];
m33_53 -> m33_45  [key=2, style=dotted];
m33_54 -> m33_55  [key=0, style=solid];
m33_54 -> m33_44  [key=2, style=dotted];
m33_54 -> m33_45  [key=2, style=dotted];
m33_55 -> m33_56  [key=0, style=solid];
m33_55 -> m33_44  [key=2, style=dotted];
m33_55 -> m33_45  [key=2, style=dotted];
m33_56 -> m33_46  [key=0, style=bold, color=blue];
m33_126 -> m33_127  [key=0, style=solid, color=green];
m33_127 -> m33_128  [key=0, style=solid, color=green];
m33_127 -> m33_121  [key=2, style=dotted, color=green];
m33_127 -> m33_122  [key=2, style=dotted, color=green];
m33_127 -> m33_123  [key=2, style=dotted, color=green];
m33_127 -> m33_129  [key=1, style=dashed, color=green, label=local];
m33_128 -> m33_129  [key=0, style=solid, color=green];
m33_128 -> m33_124  [key=2, style=dotted, color=green];
m33_128 -> m33_21  [key=2, style=dotted, color=green];
m33_129 -> m33_130  [key=0, style=solid, color=green];
m33_129 -> m33_42  [key=2, style=dotted, color=green];
m33_129 -> m33_131  [key=1, style=dashed, color=green, label=help];
m33_130 -> m33_131  [key=0, style=solid, color=green];
m33_130 -> m33_103  [key=2, style=dotted, color=green];
m33_131 -> m33_132  [key=0, style=solid, color=green];
m33_131 -> m33_43  [key=2, style=dotted];
m33_132 -> m33_133  [key=0, style=solid, color=green];
m33_132 -> m33_44  [key=2, style=dotted, color=green];
m33_132 -> m33_45  [key=2, style=dotted, color=green];
m33_133 -> m33_126  [key=0, style=bold, color=blue];
m33_165 -> m33_166  [key=0, style=solid];
m33_166 -> m33_167  [key=0, style=solid];
m33_166 -> m33_163  [key=2, style=dotted];
m33_167 -> m33_168  [key=0, style=solid];
m33_167 -> m33_153  [key=2, style=dotted];
m33_167 -> m33_164  [key=2, style=dotted];
m33_167 -> m33_155  [key=2, style=dotted];
m33_168 -> m33_169  [key=0, style=solid];
m33_168 -> m33_44  [key=2, style=dotted];
m33_168 -> m33_156  [key=2, style=dotted];
m33_169 -> m33_165  [key=0, style=bold, color=blue];
m33_71 -> m33_72  [key=0, style=solid];
m33_72 -> m33_73  [key=0, style=solid];
m33_72 -> m33_14  [key=2, style=dotted];
m33_72 -> m33_74  [key=1, style=dashed, color=darkseagreen4, label=local];
m33_72 -> m33_75  [key=1, style=dashed, color=darkseagreen4, label=local];
m33_72 -> m33_76  [key=1, style=dashed, color=darkseagreen4, label=local];
m33_72 -> m33_77  [key=1, style=dashed, color=darkseagreen4, label=local];
m33_73 -> m33_74  [key=0, style=solid];
m33_74 -> m33_75  [key=0, style=solid];
m33_74 -> m33_20  [key=2, style=dotted];
m33_75 -> m33_76  [key=0, style=solid];
m33_75 -> m33_40  [key=2, style=dotted];
m33_75 -> m33_21  [key=2, style=dotted];
m33_76 -> m33_77  [key=0, style=solid];
m33_76 -> m33_41  [key=2, style=dotted];
m33_77 -> m33_78  [key=0, style=solid];
m33_77 -> m33_42  [key=2, style=dotted];
m33_78 -> m33_79  [key=0, style=solid];
m33_78 -> m33_43  [key=2, style=dotted];
m33_78 -> m33_80  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_78 -> m33_81  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_78 -> m33_82  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_78 -> m33_83  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_78 -> m33_84  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_79 -> m33_80  [key=0, style=solid];
m33_79 -> m33_44  [key=2, style=dotted];
m33_79 -> m33_45  [key=2, style=dotted];
m33_80 -> m33_81  [key=0, style=solid];
m33_80 -> m33_44  [key=2, style=dotted];
m33_80 -> m33_45  [key=2, style=dotted];
m33_81 -> m33_82  [key=0, style=solid];
m33_81 -> m33_44  [key=2, style=dotted];
m33_81 -> m33_45  [key=2, style=dotted];
m33_82 -> m33_83  [key=0, style=solid];
m33_82 -> m33_44  [key=2, style=dotted];
m33_82 -> m33_45  [key=2, style=dotted];
m33_83 -> m33_84  [key=0, style=solid];
m33_83 -> m33_44  [key=2, style=dotted];
m33_83 -> m33_45  [key=2, style=dotted];
m33_84 -> m33_85  [key=0, style=solid];
m33_84 -> m33_44  [key=2, style=dotted];
m33_84 -> m33_45  [key=2, style=dotted];
m33_85 -> m33_71  [key=0, style=bold, color=blue];
m33_186 -> m33_187  [key=0, style=solid];
m33_187 -> m33_188  [key=0, style=solid];
m33_187 -> m33_192  [key=2, style=dotted];
m33_187 -> m33_189  [key=1, style=dashed, color=darkseagreen4, label=options];
m33_187 -> m33_190  [key=1, style=dashed, color=darkseagreen4, label=options];
m33_188 -> m33_189  [key=0, style=solid];
m33_188 -> m33_151  [key=2, style=dotted];
m33_189 -> m33_190  [key=0, style=solid];
m33_189 -> m33_153  [key=2, style=dotted];
m33_189 -> m33_180  [key=2, style=dotted];
m33_189 -> m33_193  [key=2, style=dotted];
m33_190 -> m33_191  [key=0, style=solid];
m33_190 -> m33_44  [key=2, style=dotted];
m33_190 -> m33_194  [key=2, style=dotted];
m33_191 -> m33_186  [key=0, style=bold, color=blue];
m33_0 -> m33_1  [key=0, style=solid];
m33_1 -> m33_2  [key=0, style=solid];
m33_1 -> m33_14  [key=2, style=dotted];
m33_1 -> m33_15  [key=2, style=dotted];
m33_1 -> m33_3  [key=1, style=dashed, color=darkseagreen4, label=help];
m33_1 -> m33_4  [key=1, style=dashed, color=darkseagreen4, label=help];
m33_1 -> m33_6  [key=1, style=dashed, color=green, label=help];
m33_1 -> m33_7  [key=1, style=dashed, color=green, label=help];
m33_1 -> m33_8  [key=1, style=dashed, color=darkseagreen4, label=help];
m33_1 -> m33_9  [key=1, style=dashed, color=darkseagreen4, label=help];
m33_1 -> m33_10  [key=1, style=dashed, color=darkseagreen4, label=help];
m33_1 -> m33_11  [key=1, style=dashed, color=darkseagreen4, label=help];
m33_1 -> m33_12  [key=1, style=dashed, color=darkseagreen4, label=help];
m33_2 -> m33_3  [key=0, style=solid];
m33_3 -> m33_4  [key=0, style=solid];
m33_3 -> m33_16  [key=2, style=dotted];
m33_4 -> m33_5  [key=0, style=solid];
m33_4 -> m33_17  [key=2, style=dotted];
m33_4 -> m33_7  [key=1, style=dashed, color=green, label=errors];
m33_6 -> m33_7  [key=0, style=solid, color=green];
m33_6 -> m33_19  [key=2, style=dotted, color=green];
m33_6 -> m33_20  [key=2, style=dotted, color=green];
m33_7 -> m33_8  [key=0, style=solid, color=green];
m33_7 -> m33_20  [key=2, style=dotted, color=green];
m33_8 -> m33_9  [key=0, style=solid];
m33_8 -> m33_20  [key=2, style=dotted];
m33_9 -> m33_10  [key=0, style=solid];
m33_9 -> m33_20  [key=2, style=dotted];
m33_10 -> m33_11  [key=0, style=solid];
m33_10 -> m33_20  [key=2, style=dotted];
m33_11 -> m33_12  [key=0, style=solid];
m33_11 -> m33_21  [key=2, style=dotted];
m33_12 -> m33_13  [key=0, style=solid];
m33_5 -> m33_6  [key=0, style=solid, color=green];
m33_5 -> m33_8  [key=0, style=solid];
m33_5 -> m33_18  [key=2, style=dotted];
m33_13 -> m33_0  [key=0, style=bold, color=blue];
m33_28 -> m33_29  [key=0, style=solid];
m33_29 -> m33_30  [key=0, style=solid];
m33_29 -> m33_14  [key=2, style=dotted];
m33_29 -> m33_31  [key=1, style=dashed, color=darkseagreen4, label=local];
m33_29 -> m33_32  [key=1, style=dashed, color=darkseagreen4, label=local];
m33_29 -> m33_33  [key=1, style=dashed, color=darkseagreen4, label=local];
m33_29 -> m33_34  [key=1, style=dashed, color=darkseagreen4, label=local];
m33_29 -> m33_35  [key=1, style=dashed, color=darkseagreen4, label=local];
m33_30 -> m33_31  [key=0, style=solid];
m33_30 -> m33_20  [key=2, style=dotted];
m33_31 -> m33_32  [key=0, style=solid];
m33_31 -> m33_20  [key=2, style=dotted];
m33_32 -> m33_33  [key=0, style=solid];
m33_32 -> m33_40  [key=2, style=dotted];
m33_32 -> m33_21  [key=2, style=dotted];
m33_33 -> m33_34  [key=0, style=solid];
m33_33 -> m33_41  [key=2, style=dotted];
m33_34 -> m33_35  [key=0, style=solid];
m33_34 -> m33_41  [key=2, style=dotted];
m33_35 -> m33_36  [key=0, style=solid];
m33_35 -> m33_42  [key=2, style=dotted];
m33_36 -> m33_37  [key=0, style=solid];
m33_36 -> m33_43  [key=2, style=dotted];
m33_36 -> m33_38  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_37 -> m33_38  [key=0, style=solid];
m33_37 -> m33_44  [key=2, style=dotted];
m33_37 -> m33_45  [key=2, style=dotted];
m33_38 -> m33_39  [key=0, style=solid];
m33_38 -> m33_44  [key=2, style=dotted];
m33_38 -> m33_45  [key=2, style=dotted];
m33_39 -> m33_28  [key=0, style=bold, color=blue];
m33_22 -> m33_23  [key=0, style=solid];
m33_23 -> m33_24  [key=0, style=solid];
m33_23 -> m33_14  [key=2, style=dotted];
m33_23 -> m33_15  [key=2, style=dotted];
m33_24 -> m33_22  [key=0, style=bold, color=blue];
m33_104 -> m33_105  [key=0, style=solid];
m33_105 -> m33_106  [key=0, style=solid];
m33_105 -> m33_108  [key=1, style=dashed, color=darkseagreen4, label=year];
m33_105 -> m33_116  [key=1, style=dashed, color=darkseagreen4, label=year];
m33_106 -> m33_107  [key=0, style=solid];
m33_106 -> m33_121  [key=2, style=dotted];
m33_106 -> m33_108  [key=1, style=dashed, color=darkseagreen4, label=local];
m33_106 -> m33_109  [key=1, style=dashed, color=darkseagreen4, label=local];
m33_106 -> m33_110  [key=1, style=dashed, color=darkseagreen4, label=local];
m33_106 -> m33_111  [key=1, style=dashed, color=darkseagreen4, label=local];
m33_106 -> m33_112  [key=1, style=dashed, color=darkseagreen4, label=local];
m33_108 -> m33_109  [key=0, style=solid];
m33_108 -> m33_123  [key=2, style=dotted];
m33_116 -> m33_117  [key=0, style=solid];
m33_116 -> m33_44  [key=2, style=dotted];
m33_116 -> m33_125  [key=2, style=dotted];
m33_116 -> m33_45  [key=2, style=dotted];
m33_107 -> m33_108  [key=0, style=solid];
m33_107 -> m33_122  [key=2, style=dotted];
m33_109 -> m33_110  [key=0, style=solid];
m33_109 -> m33_20  [key=2, style=dotted];
m33_110 -> m33_111  [key=0, style=solid];
m33_110 -> m33_124  [key=2, style=dotted];
m33_110 -> m33_21  [key=2, style=dotted];
m33_111 -> m33_112  [key=0, style=solid];
m33_111 -> m33_41  [key=2, style=dotted];
m33_112 -> m33_113  [key=0, style=solid];
m33_112 -> m33_42  [key=2, style=dotted];
m33_112 -> m33_114  [key=1, style=dashed, color=darkseagreen4, label=help];
m33_113 -> m33_114  [key=0, style=solid];
m33_113 -> m33_103  [key=2, style=dotted];
m33_114 -> m33_115  [key=0, style=solid];
m33_114 -> m33_43  [key=2, style=dotted];
m33_114 -> m33_116  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_114 -> m33_117  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_114 -> m33_118  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_114 -> m33_119  [key=1, style=dashed, color=darkseagreen4, label=lines];
m33_115 -> m33_116  [key=0, style=solid];
m33_115 -> m33_44  [key=2, style=dotted];
m33_115 -> m33_45  [key=2, style=dotted];
m33_117 -> m33_118  [key=0, style=solid];
m33_117 -> m33_44  [key=2, style=dotted];
m33_117 -> m33_45  [key=2, style=dotted];
m33_118 -> m33_119  [key=0, style=solid];
m33_118 -> m33_44  [key=2, style=dotted];
m33_118 -> m33_45  [key=2, style=dotted];
m33_119 -> m33_120  [key=0, style=solid];
m33_119 -> m33_44  [key=2, style=dotted];
m33_119 -> m33_45  [key=2, style=dotted];
m33_120 -> m33_104  [key=0, style=bold, color=blue];
m33_206 -> m33_4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp"];
m33_206 -> m33_11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp"];
m33_207 -> m33_23  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Tests.HelpTextFixture"];
m33_207 -> m33_26  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Tests.HelpTextFixture"];
m33_207 -> m33_47  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Tests.HelpTextFixture"];
m33_207 -> m33_48  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Tests.HelpTextFixture"];
m33_207 -> m33_49  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Tests.HelpTextFixture"];
m33_207 -> m33_59  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Tests.HelpTextFixture"];
m33_207 -> m33_60  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Tests.HelpTextFixture"];
m33_207 -> m33_61  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Tests.HelpTextFixture"];
m33_207 -> m33_88  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Tests.HelpTextFixture"];
m39_21 -> m39_22  [key=0, style=solid, color=green];
m39_21 -> m39_23  [key=1, style=dashed, color=green, label="System.Action<string>"];
m39_21 -> m39_28  [key=1, style=dashed, color=green, label="System.Action<string>"];
m39_22 -> m39_23  [key=0, style=solid, color=green];
m39_23 -> m39_24  [key=0, style=solid, color=green];
m39_23 -> m39_25  [key=2, style=dotted, color=green];
m39_23 -> m39_26  [key=1, style=dashed, color=green, label="lambda expression"];
m39_24 -> m39_21  [key=0, style=bold, color=blue];
m39_17 -> m39_18  [key=0, style=solid, color=green];
m39_17 -> m39_19  [key=1, style=dashed, color=green, label=string];
m39_18 -> m39_19  [key=0, style=solid, color=green];
m39_18 -> m39_4  [key=2, style=dotted, color=green];
m39_19 -> m39_20  [key=0, style=solid, color=green];
m39_20 -> m39_17  [key=0, style=bold, color=blue];
m39_37 -> m39_38  [key=0, style=solid, color=green];
m39_38 -> m39_39  [key=0, style=solid, color=green];
m39_38 -> m39_41  [key=2, style=dotted, color=green];
m39_38 -> m39_42  [key=1, style=dashed, color=green, label="lambda expression"];
m39_39 -> m39_40  [key=0, style=solid, color=green];
m39_40 -> m39_37  [key=0, style=bold, color=blue];
m39_0 -> m39_1  [key=0, style=solid, color=green];
m39_0 -> m39_2  [key=1, style=dashed, color=green, label=string];
m39_1 -> m39_2  [key=0, style=solid, color=green];
m39_1 -> m39_4  [key=2, style=dotted, color=green];
m39_2 -> m39_3  [key=0, style=solid, color=green];
m39_3 -> m39_0  [key=0, style=bold, color=blue];
m39_5 -> m39_6  [key=0, style=solid, color=green];
m39_5 -> m39_7  [key=1, style=dashed, color=green, label=string];
m39_6 -> m39_7  [key=0, style=solid, color=green];
m39_6 -> m39_4  [key=2, style=dotted, color=green];
m39_7 -> m39_8  [key=0, style=solid, color=green];
m39_8 -> m39_5  [key=0, style=bold, color=blue];
m39_9 -> m39_10  [key=0, style=solid, color=green];
m39_9 -> m39_11  [key=1, style=dashed, color=green, label=string];
m39_10 -> m39_11  [key=0, style=solid, color=green];
m39_10 -> m39_4  [key=2, style=dotted, color=green];
m39_11 -> m39_12  [key=0, style=solid, color=green];
m39_12 -> m39_9  [key=0, style=bold, color=blue];
m39_42 -> m39_43  [key=0, style=solid, color=green];
m39_26 -> m39_28  [key=1, style=dashed, color=green, label=string];
m39_26 -> m39_27  [key=0, style=solid, color=green];
m39_28 -> m39_29  [key=0, style=solid, color=green];
m39_28 -> m39_31  [key=2, style=dotted, color=green];
m39_27 -> m39_28  [key=0, style=solid, color=green];
m39_27 -> m39_29  [key=0, style=solid, color=green];
m39_27 -> m39_30  [key=2, style=dotted, color=green];
m39_29 -> m39_26  [key=0, style=bold, color=blue];
m39_43 -> m39_44  [key=0, style=solid, color=green];
m39_43 -> m39_30  [key=2, style=dotted, color=green];
m39_44 -> m39_42  [key=0, style=bold, color=blue];
m39_32 -> m39_33  [key=0, style=solid, color=green];
m39_32 -> m39_34  [key=1, style=dashed, color=green, label="CommandLine.Text.HelpText"];
m39_32 -> m39_35  [key=1, style=dashed, color=green, label="CommandLine.Text.HelpText"];
m39_33 -> m39_34  [key=0, style=solid, color=green];
m39_33 -> m39_35  [key=0, style=solid, color=green];
m39_34 -> m39_36  [key=0, style=solid, color=green];
m39_34 -> m39_21  [key=2, style=dotted, color=green];
m39_35 -> m39_36  [key=0, style=solid, color=green];
m39_35 -> m39_21  [key=2, style=dotted, color=green];
m39_36 -> m39_32  [key=0, style=bold, color=blue];
m39_13 -> m39_14  [key=0, style=solid, color=green];
m39_13 -> m39_15  [key=1, style=dashed, color=green, label=string];
m39_14 -> m39_15  [key=0, style=solid, color=green];
m39_14 -> m39_4  [key=2, style=dotted, color=green];
m39_15 -> m39_16  [key=0, style=solid, color=green];
m39_16 -> m39_13  [key=0, style=bold, color=blue];
m39_45 -> m39_28  [key=1, style=dashed, color=green, label="System.Action<string>"];
m39_46 -> m39_34  [key=1, style=dashed, color=green, label="CommandLine.Text.MultiLineTextAttribute"];
m39_46 -> m39_35  [key=1, style=dashed, color=green, label="CommandLine.Text.MultiLineTextAttribute"];
m40_0 -> m40_1  [key=0, style=solid, color=green];
m40_1 -> m40_2  [key=0, style=solid, color=green];
m40_1 -> m40_8  [key=2, style=dotted, color=green];
m40_1 -> m40_9  [key=2, style=dotted, color=green];
m40_1 -> m40_3  [key=1, style=dashed, color=green, label=licenseAttributes];
m40_2 -> m40_3  [key=0, style=solid, color=green];
m40_2 -> m40_10  [key=2, style=dotted, color=green];
m40_2 -> m40_11  [key=2, style=dotted, color=green];
m40_2 -> m40_12  [key=2, style=dotted, color=green];
m40_3 -> m40_4  [key=0, style=solid, color=green];
m40_3 -> m40_13  [key=2, style=dotted, color=green];
m40_4 -> m40_5  [key=0, style=solid, color=green];
m40_4 -> m40_14  [key=2, style=dotted, color=green];
m40_4 -> m40_6  [key=1, style=dashed, color=green, label=lines];
m40_5 -> m40_6  [key=0, style=solid, color=green];
m40_5 -> m40_11  [key=2, style=dotted, color=green];
m40_5 -> m40_12  [key=2, style=dotted, color=green];
m40_6 -> m40_7  [key=0, style=solid, color=green];
m40_6 -> m40_11  [key=2, style=dotted, color=green];
m40_6 -> m40_12  [key=2, style=dotted, color=green];
m40_7 -> m40_0  [key=0, style=bold, color=blue];
m40_15 -> m40_16  [key=0, style=solid, color=green];
m40_16 -> m40_17  [key=0, style=solid, color=green];
m40_16 -> m40_8  [key=2, style=dotted, color=green];
m40_16 -> m40_9  [key=2, style=dotted, color=green];
m40_16 -> m40_18  [key=1, style=dashed, color=green, label=usageAttributes];
m40_17 -> m40_18  [key=0, style=solid, color=green];
m40_17 -> m40_10  [key=2, style=dotted, color=green];
m40_17 -> m40_11  [key=2, style=dotted, color=green];
m40_17 -> m40_12  [key=2, style=dotted, color=green];
m40_18 -> m40_19  [key=0, style=solid, color=green];
m40_18 -> m40_13  [key=2, style=dotted, color=green];
m40_18 -> m40_11  [key=2, style=dotted, color=green];
m40_18 -> m40_12  [key=2, style=dotted, color=green];
m40_19 -> m40_15  [key=0, style=bold, color=blue];
m40_20 -> m40_1  [key=1, style=dashed, color=green, label="CommandLine.Text.Tests.MultiLineTextAttributeFixture"];
m40_20 -> m40_16  [key=1, style=dashed, color=green, label="CommandLine.Text.Tests.MultiLineTextAttributeFixture"];
m41_44 -> m41_45  [key=0, style=solid];
m41_45 -> m41_46  [key=0, style=solid];
m41_45 -> m41_49  [key=2, style=dotted];
m41_46 -> m41_47  [key=0, style=solid];
m41_46 -> m41_14  [key=2, style=dotted];
m41_47 -> m41_48  [key=0, style=solid];
m41_47 -> m41_23  [key=2, style=dotted];
m41_48 -> m41_44  [key=0, style=bold, color=blue];
m41_18 -> m41_19  [key=0, style=solid];
m41_19 -> m41_20  [key=0, style=solid];
m41_19 -> m41_13  [key=2, style=dotted];
m41_20 -> m41_21  [key=0, style=solid];
m41_20 -> m41_14  [key=2, style=dotted];
m41_21 -> m41_22  [key=0, style=solid];
m41_21 -> m41_23  [key=2, style=dotted];
m41_22 -> m41_18  [key=0, style=bold, color=blue];
m41_2 -> m41_3  [key=0, style=solid];
m41_3 -> m41_4  [key=0, style=solid];
m41_3 -> m41_5  [key=2, style=dotted];
m41_3 -> m41_6  [key=2, style=dotted];
m41_4 -> m41_2  [key=0, style=bold, color=blue];
m41_31 -> m41_32  [key=0, style=solid];
m41_32 -> m41_33  [key=0, style=solid];
m41_32 -> m41_38  [key=2, style=dotted];
m41_32 -> m41_35  [key=1, style=dashed, color=darkseagreen4, label=options];
m41_32 -> m41_36  [key=1, style=dashed, color=darkseagreen4, label=options];
m41_33 -> m41_34  [key=0, style=solid];
m41_33 -> m41_14  [key=2, style=dotted];
m41_35 -> m41_36  [key=0, style=solid];
m41_35 -> m41_16  [key=2, style=dotted];
m41_35 -> m41_17  [key=2, style=dotted];
m41_36 -> m41_37  [key=0, style=solid];
m41_36 -> m41_16  [key=2, style=dotted];
m41_36 -> m41_17  [key=2, style=dotted];
m41_34 -> m41_35  [key=0, style=solid];
m41_34 -> m41_15  [key=2, style=dotted];
m41_37 -> m41_31  [key=0, style=bold, color=blue];
m41_24 -> m41_25  [key=0, style=solid];
m41_25 -> m41_26  [key=0, style=solid];
m41_25 -> m41_13  [key=2, style=dotted];
m41_25 -> m41_28  [key=1, style=dashed, color=darkseagreen4, label=options];
m41_25 -> m41_29  [key=1, style=dashed, color=darkseagreen4, label=options];
m41_26 -> m41_27  [key=0, style=solid];
m41_26 -> m41_14  [key=2, style=dotted];
m41_28 -> m41_29  [key=0, style=solid];
m41_28 -> m41_16  [key=2, style=dotted];
m41_28 -> m41_17  [key=2, style=dotted];
m41_29 -> m41_30  [key=0, style=solid];
m41_29 -> m41_16  [key=2, style=dotted];
m41_29 -> m41_17  [key=2, style=dotted];
m41_27 -> m41_28  [key=0, style=solid];
m41_27 -> m41_15  [key=2, style=dotted];
m41_30 -> m41_24  [key=0, style=bold, color=blue];
m41_50 -> m41_51  [key=0, style=solid];
m41_51 -> m41_52  [key=0, style=solid];
m41_51 -> m41_49  [key=2, style=dotted];
m41_51 -> m41_54  [key=1, style=dashed, color=darkseagreen4, label=options];
m41_51 -> m41_55  [key=1, style=dashed, color=darkseagreen4, label=options];
m41_51 -> m41_56  [key=1, style=dashed, color=darkseagreen4, label=options];
m41_52 -> m41_53  [key=0, style=solid];
m41_52 -> m41_14  [key=2, style=dotted];
m41_54 -> m41_55  [key=0, style=solid];
m41_54 -> m41_16  [key=2, style=dotted];
m41_54 -> m41_17  [key=2, style=dotted];
m41_55 -> m41_56  [key=0, style=solid];
m41_55 -> m41_16  [key=2, style=dotted];
m41_55 -> m41_17  [key=2, style=dotted];
m41_56 -> m41_57  [key=0, style=solid];
m41_56 -> m41_16  [key=2, style=dotted];
m41_56 -> m41_17  [key=2, style=dotted];
m41_53 -> m41_54  [key=0, style=solid];
m41_53 -> m41_15  [key=2, style=dotted];
m41_57 -> m41_50  [key=0, style=bold, color=blue];
m41_39 -> m41_40  [key=0, style=solid];
m41_40 -> m41_41  [key=0, style=solid];
m41_40 -> m41_38  [key=2, style=dotted];
m41_41 -> m41_42  [key=0, style=solid];
m41_41 -> m41_14  [key=2, style=dotted];
m41_42 -> m41_43  [key=0, style=solid];
m41_42 -> m41_23  [key=2, style=dotted];
m41_43 -> m41_39  [key=0, style=bold, color=blue];
m41_0 -> m41_1  [key=0, style=solid];
m41_1 -> m41_0  [key=0, style=bold, color=blue];
m41_7 -> m41_8  [key=0, style=solid];
m41_8 -> m41_9  [key=0, style=solid];
m41_8 -> m41_13  [key=2, style=dotted];
m41_8 -> m41_11  [key=1, style=dashed, color=darkseagreen4, label=options];
m41_9 -> m41_10  [key=0, style=solid];
m41_9 -> m41_14  [key=2, style=dotted];
m41_11 -> m41_12  [key=0, style=solid];
m41_11 -> m41_16  [key=2, style=dotted];
m41_11 -> m41_17  [key=2, style=dotted];
m41_10 -> m41_11  [key=0, style=solid];
m41_10 -> m41_15  [key=2, style=dotted];
m41_12 -> m41_7  [key=0, style=bold, color=blue];
m41_58 -> m41_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.MutuallyExclusiveParsingFixture"];
m41_58 -> m41_9  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.MutuallyExclusiveParsingFixture"];
m41_58 -> m41_10  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.MutuallyExclusiveParsingFixture"];
m41_58 -> m41_20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.MutuallyExclusiveParsingFixture"];
m41_58 -> m41_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.MutuallyExclusiveParsingFixture"];
m41_58 -> m41_26  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.MutuallyExclusiveParsingFixture"];
m41_58 -> m41_27  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.MutuallyExclusiveParsingFixture"];
m41_58 -> m41_33  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.MutuallyExclusiveParsingFixture"];
m41_58 -> m41_34  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.MutuallyExclusiveParsingFixture"];
m41_58 -> m41_41  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.MutuallyExclusiveParsingFixture"];
m41_58 -> m41_42  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.MutuallyExclusiveParsingFixture"];
m41_58 -> m41_46  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.MutuallyExclusiveParsingFixture"];
m41_58 -> m41_47  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.MutuallyExclusiveParsingFixture"];
m41_58 -> m41_52  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.MutuallyExclusiveParsingFixture"];
m41_58 -> m41_53  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.MutuallyExclusiveParsingFixture"];
m43_0 -> m43_1  [key=0, style=solid];
m43_1 -> m43_2  [key=0, style=solid];
m43_2 -> m43_3  [key=0, style=solid];
m43_3 -> m43_4  [key=0, style=solid];
m43_4 -> m43_5  [key=0, style=solid];
m43_5 -> m43_6  [key=0, style=solid];
m43_6 -> m43_7  [key=0, style=solid];
m43_7 -> m43_0  [key=0, style=bold, color=blue];
m43_8 -> m43_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.NumberSetOptions"];
m43_8 -> m43_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.NumberSetOptions"];
m43_8 -> m43_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.NumberSetOptions"];
m43_8 -> m43_4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.NumberSetOptions"];
m43_8 -> m43_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.NumberSetOptions"];
m43_8 -> m43_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.NumberSetOptions"];
m46_12 -> m46_13  [key=0, style=solid];
m46_13 -> m46_14  [key=0, style=solid];
m46_13 -> m46_8  [key=2, style=dotted];
m46_13 -> m46_16  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_14 -> m46_15  [key=0, style=solid];
m46_14 -> m46_9  [key=2, style=dotted];
m46_16 -> m46_17  [key=0, style=solid];
m46_16 -> m46_11  [key=2, style=dotted];
m46_15 -> m46_16  [key=0, style=solid];
m46_15 -> m46_10  [key=2, style=dotted];
m46_17 -> m46_12  [key=0, style=bold, color=blue];
m46_56 -> m46_57  [key=0, style=solid];
m46_57 -> m46_58  [key=0, style=solid];
m46_57 -> m46_66  [key=2, style=dotted];
m46_57 -> m46_60  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_57 -> m46_61  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_57 -> m46_62  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_57 -> m46_63  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_57 -> m46_64  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_58 -> m46_59  [key=0, style=solid];
m46_58 -> m46_9  [key=2, style=dotted];
m46_60 -> m46_61  [key=0, style=solid];
m46_60 -> m46_37  [key=2, style=dotted];
m46_60 -> m46_38  [key=2, style=dotted];
m46_61 -> m46_62  [key=0, style=solid];
m46_61 -> m46_37  [key=2, style=dotted];
m46_61 -> m46_38  [key=2, style=dotted];
m46_62 -> m46_63  [key=0, style=solid];
m46_62 -> m46_11  [key=2, style=dotted];
m46_63 -> m46_64  [key=0, style=solid];
m46_63 -> m46_37  [key=2, style=dotted];
m46_63 -> m46_55  [key=2, style=dotted];
m46_64 -> m46_65  [key=0, style=solid];
m46_64 -> m46_67  [key=2, style=dotted];
m46_59 -> m46_60  [key=0, style=solid];
m46_59 -> m46_10  [key=2, style=dotted];
m46_65 -> m46_56  [key=0, style=bold, color=blue];
m46_83 -> m46_84  [key=0, style=solid];
m46_84 -> m46_85  [key=0, style=solid];
m46_84 -> m46_8  [key=2, style=dotted];
m46_85 -> m46_86  [key=0, style=solid];
m46_85 -> m46_9  [key=2, style=dotted];
m46_86 -> m46_87  [key=0, style=solid];
m46_86 -> m46_76  [key=2, style=dotted];
m46_87 -> m46_88  [key=0, style=solid];
m46_87 -> m46_8  [key=2, style=dotted];
m46_88 -> m46_89  [key=0, style=solid];
m46_88 -> m46_9  [key=2, style=dotted];
m46_89 -> m46_90  [key=0, style=solid];
m46_89 -> m46_76  [key=2, style=dotted];
m46_90 -> m46_91  [key=0, style=solid];
m46_90 -> m46_8  [key=2, style=dotted];
m46_91 -> m46_92  [key=0, style=solid];
m46_91 -> m46_9  [key=2, style=dotted];
m46_92 -> m46_93  [key=0, style=solid];
m46_92 -> m46_76  [key=2, style=dotted];
m46_93 -> m46_94  [key=0, style=solid];
m46_93 -> m46_8  [key=2, style=dotted];
m46_94 -> m46_95  [key=0, style=solid];
m46_94 -> m46_9  [key=2, style=dotted];
m46_95 -> m46_96  [key=0, style=solid];
m46_95 -> m46_76  [key=2, style=dotted];
m46_96 -> m46_83  [key=0, style=bold, color=blue];
m46_18 -> m46_19  [key=0, style=solid];
m46_19 -> m46_20  [key=0, style=solid];
m46_19 -> m46_8  [key=2, style=dotted];
m46_19 -> m46_22  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_20 -> m46_21  [key=0, style=solid];
m46_20 -> m46_9  [key=2, style=dotted];
m46_22 -> m46_23  [key=0, style=solid];
m46_22 -> m46_11  [key=2, style=dotted];
m46_21 -> m46_22  [key=0, style=solid];
m46_21 -> m46_10  [key=2, style=dotted];
m46_23 -> m46_18  [key=0, style=bold, color=blue];
m46_97 -> m46_98  [key=0, style=solid];
m46_98 -> m46_99  [key=0, style=solid];
m46_98 -> m46_8  [key=2, style=dotted];
m46_99 -> m46_100  [key=0, style=solid];
m46_99 -> m46_9  [key=2, style=dotted];
m46_100 -> m46_101  [key=0, style=solid];
m46_100 -> m46_76  [key=2, style=dotted];
m46_101 -> m46_102  [key=0, style=solid];
m46_101 -> m46_8  [key=2, style=dotted];
m46_102 -> m46_103  [key=0, style=solid];
m46_102 -> m46_9  [key=2, style=dotted];
m46_103 -> m46_104  [key=0, style=solid];
m46_103 -> m46_76  [key=2, style=dotted];
m46_104 -> m46_97  [key=0, style=bold, color=blue];
m46_170 -> m46_171  [key=0, style=solid];
m46_171 -> m46_172  [key=0, style=solid];
m46_171 -> m46_166  [key=2, style=dotted];
m46_171 -> m46_9  [key=2, style=dotted];
m46_172 -> m46_170  [key=0, style=bold, color=blue];
m46_46 -> m46_47  [key=0, style=solid];
m46_47 -> m46_48  [key=0, style=solid];
m46_47 -> m46_8  [key=2, style=dotted];
m46_47 -> m46_50  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_47 -> m46_51  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_47 -> m46_52  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_47 -> m46_53  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_48 -> m46_49  [key=0, style=solid];
m46_48 -> m46_9  [key=2, style=dotted];
m46_50 -> m46_51  [key=0, style=solid];
m46_50 -> m46_37  [key=2, style=dotted];
m46_50 -> m46_38  [key=2, style=dotted];
m46_51 -> m46_52  [key=0, style=solid];
m46_51 -> m46_11  [key=2, style=dotted];
m46_52 -> m46_53  [key=0, style=solid];
m46_52 -> m46_37  [key=2, style=dotted];
m46_52 -> m46_55  [key=2, style=dotted];
m46_53 -> m46_54  [key=0, style=solid];
m46_53 -> m46_37  [key=2, style=dotted];
m46_53 -> m46_38  [key=2, style=dotted];
m46_49 -> m46_50  [key=0, style=solid];
m46_49 -> m46_10  [key=2, style=dotted];
m46_54 -> m46_46  [key=0, style=bold, color=blue];
m46_163 -> m46_164  [key=0, style=solid];
m46_164 -> m46_165  [key=0, style=solid];
m46_164 -> m46_166  [key=2, style=dotted];
m46_164 -> m46_9  [key=2, style=dotted];
m46_165 -> m46_163  [key=0, style=bold, color=blue];
m46_24 -> m46_25  [key=0, style=solid];
m46_25 -> m46_26  [key=0, style=solid];
m46_25 -> m46_8  [key=2, style=dotted];
m46_25 -> m46_28  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_26 -> m46_27  [key=0, style=solid];
m46_26 -> m46_9  [key=2, style=dotted];
m46_28 -> m46_29  [key=0, style=solid];
m46_28 -> m46_11  [key=2, style=dotted];
m46_27 -> m46_28  [key=0, style=solid];
m46_27 -> m46_10  [key=2, style=dotted];
m46_29 -> m46_24  [key=0, style=bold, color=blue];
m46_131 -> m46_132  [key=0, style=solid];
m46_132 -> m46_133  [key=0, style=solid];
m46_132 -> m46_8  [key=2, style=dotted];
m46_132 -> m46_135  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_132 -> m46_136  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_132 -> m46_137  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_132 -> m46_138  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_133 -> m46_134  [key=0, style=solid];
m46_133 -> m46_9  [key=2, style=dotted];
m46_135 -> m46_136  [key=0, style=solid];
m46_135 -> m46_11  [key=2, style=dotted];
m46_136 -> m46_137  [key=0, style=solid];
m46_136 -> m46_11  [key=2, style=dotted];
m46_137 -> m46_138  [key=0, style=solid];
m46_137 -> m46_11  [key=2, style=dotted];
m46_138 -> m46_139  [key=0, style=solid];
m46_138 -> m46_37  [key=2, style=dotted];
m46_138 -> m46_38  [key=2, style=dotted];
m46_134 -> m46_135  [key=0, style=solid];
m46_134 -> m46_10  [key=2, style=dotted];
m46_139 -> m46_140  [key=0, style=solid];
m46_139 -> m46_8  [key=2, style=dotted];
m46_139 -> m46_142  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_139 -> m46_143  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_139 -> m46_144  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_139 -> m46_145  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_140 -> m46_141  [key=0, style=solid];
m46_140 -> m46_9  [key=2, style=dotted];
m46_142 -> m46_143  [key=0, style=solid];
m46_142 -> m46_37  [key=2, style=dotted];
m46_142 -> m46_38  [key=2, style=dotted];
m46_143 -> m46_144  [key=0, style=solid];
m46_143 -> m46_11  [key=2, style=dotted];
m46_144 -> m46_145  [key=0, style=solid];
m46_144 -> m46_11  [key=2, style=dotted];
m46_145 -> m46_146  [key=0, style=solid];
m46_145 -> m46_11  [key=2, style=dotted];
m46_141 -> m46_142  [key=0, style=solid];
m46_141 -> m46_10  [key=2, style=dotted];
m46_146 -> m46_147  [key=0, style=solid];
m46_146 -> m46_8  [key=2, style=dotted];
m46_146 -> m46_149  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_146 -> m46_150  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_146 -> m46_151  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_146 -> m46_152  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_147 -> m46_148  [key=0, style=solid];
m46_147 -> m46_9  [key=2, style=dotted];
m46_149 -> m46_150  [key=0, style=solid];
m46_149 -> m46_11  [key=2, style=dotted];
m46_150 -> m46_151  [key=0, style=solid];
m46_150 -> m46_11  [key=2, style=dotted];
m46_151 -> m46_152  [key=0, style=solid];
m46_151 -> m46_37  [key=2, style=dotted];
m46_151 -> m46_38  [key=2, style=dotted];
m46_152 -> m46_153  [key=0, style=solid];
m46_152 -> m46_11  [key=2, style=dotted];
m46_148 -> m46_149  [key=0, style=solid];
m46_148 -> m46_10  [key=2, style=dotted];
m46_153 -> m46_154  [key=0, style=solid];
m46_153 -> m46_8  [key=2, style=dotted];
m46_153 -> m46_156  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_153 -> m46_157  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_153 -> m46_158  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_153 -> m46_159  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_153 -> m46_160  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_153 -> m46_161  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_154 -> m46_155  [key=0, style=solid];
m46_154 -> m46_9  [key=2, style=dotted];
m46_156 -> m46_157  [key=0, style=solid];
m46_156 -> m46_37  [key=2, style=dotted];
m46_156 -> m46_55  [key=2, style=dotted];
m46_157 -> m46_158  [key=0, style=solid];
m46_157 -> m46_11  [key=2, style=dotted];
m46_158 -> m46_159  [key=0, style=solid];
m46_158 -> m46_11  [key=2, style=dotted];
m46_159 -> m46_160  [key=0, style=solid];
m46_159 -> m46_37  [key=2, style=dotted];
m46_159 -> m46_38  [key=2, style=dotted];
m46_160 -> m46_161  [key=0, style=solid];
m46_160 -> m46_11  [key=2, style=dotted];
m46_161 -> m46_162  [key=0, style=solid];
m46_161 -> m46_37  [key=2, style=dotted];
m46_161 -> m46_38  [key=2, style=dotted];
m46_155 -> m46_156  [key=0, style=solid];
m46_155 -> m46_10  [key=2, style=dotted];
m46_162 -> m46_131  [key=0, style=bold, color=blue];
m46_2 -> m46_3  [key=0, style=solid];
m46_3 -> m46_4  [key=0, style=solid];
m46_3 -> m46_8  [key=2, style=dotted];
m46_3 -> m46_6  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_4 -> m46_5  [key=0, style=solid];
m46_4 -> m46_9  [key=2, style=dotted];
m46_6 -> m46_7  [key=0, style=solid];
m46_6 -> m46_11  [key=2, style=dotted];
m46_5 -> m46_6  [key=0, style=solid];
m46_5 -> m46_10  [key=2, style=dotted];
m46_7 -> m46_2  [key=0, style=bold, color=blue];
m46_196 -> m46_197  [key=0, style=solid];
m46_197 -> m46_198  [key=0, style=solid];
m46_197 -> m46_195  [key=2, style=dotted];
m46_197 -> m46_200  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_197 -> m46_201  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_197 -> m46_202  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_197 -> m46_203  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_198 -> m46_199  [key=0, style=solid];
m46_198 -> m46_9  [key=2, style=dotted];
m46_200 -> m46_201  [key=0, style=solid];
m46_200 -> m46_37  [key=2, style=dotted];
m46_200 -> m46_38  [key=2, style=dotted];
m46_201 -> m46_202  [key=0, style=solid];
m46_201 -> m46_11  [key=2, style=dotted];
m46_202 -> m46_203  [key=0, style=solid];
m46_202 -> m46_11  [key=2, style=dotted];
m46_203 -> m46_204  [key=0, style=solid];
m46_203 -> m46_37  [key=2, style=dotted];
m46_203 -> m46_55  [key=2, style=dotted];
m46_199 -> m46_200  [key=0, style=solid];
m46_199 -> m46_10  [key=2, style=dotted];
m46_204 -> m46_196  [key=0, style=bold, color=blue];
m46_39 -> m46_40  [key=0, style=solid];
m46_40 -> m46_41  [key=0, style=solid];
m46_40 -> m46_8  [key=2, style=dotted];
m46_40 -> m46_43  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_40 -> m46_44  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_41 -> m46_42  [key=0, style=solid];
m46_41 -> m46_9  [key=2, style=dotted];
m46_43 -> m46_44  [key=0, style=solid];
m46_43 -> m46_37  [key=2, style=dotted];
m46_43 -> m46_38  [key=2, style=dotted];
m46_44 -> m46_45  [key=0, style=solid];
m46_44 -> m46_11  [key=2, style=dotted];
m46_42 -> m46_43  [key=0, style=solid];
m46_42 -> m46_10  [key=2, style=dotted];
m46_45 -> m46_39  [key=0, style=bold, color=blue];
m46_186 -> m46_187  [key=0, style=solid];
m46_187 -> m46_188  [key=0, style=solid];
m46_187 -> m46_195  [key=2, style=dotted];
m46_187 -> m46_190  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_187 -> m46_191  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_187 -> m46_192  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_187 -> m46_193  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_188 -> m46_189  [key=0, style=solid];
m46_188 -> m46_9  [key=2, style=dotted];
m46_190 -> m46_191  [key=0, style=solid];
m46_190 -> m46_37  [key=2, style=dotted];
m46_190 -> m46_38  [key=2, style=dotted];
m46_191 -> m46_192  [key=0, style=solid];
m46_191 -> m46_11  [key=2, style=dotted];
m46_192 -> m46_193  [key=0, style=solid];
m46_192 -> m46_11  [key=2, style=dotted];
m46_193 -> m46_194  [key=0, style=solid];
m46_193 -> m46_37  [key=2, style=dotted];
m46_193 -> m46_55  [key=2, style=dotted];
m46_189 -> m46_190  [key=0, style=solid];
m46_189 -> m46_10  [key=2, style=dotted];
m46_194 -> m46_186  [key=0, style=bold, color=blue];
m46_111 -> m46_112  [key=0, style=solid];
m46_112 -> m46_113  [key=0, style=solid];
m46_112 -> m46_8  [key=2, style=dotted];
m46_112 -> m46_115  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_112 -> m46_116  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_112 -> m46_117  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_113 -> m46_114  [key=0, style=solid];
m46_113 -> m46_9  [key=2, style=dotted];
m46_115 -> m46_116  [key=0, style=solid];
m46_115 -> m46_11  [key=2, style=dotted];
m46_116 -> m46_117  [key=0, style=solid];
m46_116 -> m46_11  [key=2, style=dotted];
m46_117 -> m46_118  [key=0, style=solid];
m46_117 -> m46_11  [key=2, style=dotted];
m46_114 -> m46_115  [key=0, style=solid];
m46_114 -> m46_10  [key=2, style=dotted];
m46_118 -> m46_119  [key=0, style=solid];
m46_118 -> m46_8  [key=2, style=dotted];
m46_118 -> m46_121  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_118 -> m46_122  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_118 -> m46_123  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_119 -> m46_120  [key=0, style=solid];
m46_119 -> m46_9  [key=2, style=dotted];
m46_121 -> m46_122  [key=0, style=solid];
m46_121 -> m46_11  [key=2, style=dotted];
m46_122 -> m46_123  [key=0, style=solid];
m46_122 -> m46_11  [key=2, style=dotted];
m46_123 -> m46_124  [key=0, style=solid];
m46_123 -> m46_11  [key=2, style=dotted];
m46_120 -> m46_121  [key=0, style=solid];
m46_120 -> m46_10  [key=2, style=dotted];
m46_124 -> m46_125  [key=0, style=solid];
m46_124 -> m46_8  [key=2, style=dotted];
m46_124 -> m46_127  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_124 -> m46_128  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_124 -> m46_129  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_125 -> m46_126  [key=0, style=solid];
m46_125 -> m46_9  [key=2, style=dotted];
m46_127 -> m46_128  [key=0, style=solid];
m46_127 -> m46_11  [key=2, style=dotted];
m46_128 -> m46_129  [key=0, style=solid];
m46_128 -> m46_11  [key=2, style=dotted];
m46_129 -> m46_130  [key=0, style=solid];
m46_129 -> m46_11  [key=2, style=dotted];
m46_126 -> m46_127  [key=0, style=solid];
m46_126 -> m46_10  [key=2, style=dotted];
m46_130 -> m46_111  [key=0, style=bold, color=blue];
m46_77 -> m46_78  [key=0, style=solid];
m46_78 -> m46_79  [key=0, style=solid];
m46_78 -> m46_8  [key=2, style=dotted];
m46_78 -> m46_81  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_79 -> m46_80  [key=0, style=solid];
m46_79 -> m46_9  [key=2, style=dotted];
m46_81 -> m46_82  [key=0, style=solid];
m46_81 -> m46_11  [key=2, style=dotted];
m46_80 -> m46_81  [key=0, style=solid];
m46_80 -> m46_10  [key=2, style=dotted];
m46_82 -> m46_77  [key=0, style=bold, color=blue];
m46_105 -> m46_106  [key=0, style=solid];
m46_106 -> m46_107  [key=0, style=solid];
m46_106 -> m46_8  [key=2, style=dotted];
m46_106 -> m46_109  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_107 -> m46_108  [key=0, style=solid];
m46_107 -> m46_9  [key=2, style=dotted];
m46_109 -> m46_110  [key=0, style=solid];
m46_109 -> m46_11  [key=2, style=dotted];
m46_108 -> m46_109  [key=0, style=solid];
m46_108 -> m46_10  [key=2, style=dotted];
m46_110 -> m46_105  [key=0, style=bold, color=blue];
m46_176 -> m46_177  [key=0, style=solid];
m46_177 -> m46_178  [key=0, style=solid];
m46_177 -> m46_183  [key=1, style=dashed, color=darkseagreen4, label=actualCulture];
m46_178 -> m46_179  [key=0, style=solid];
m46_178 -> m46_185  [key=2, style=dotted];
m46_183 -> m46_184  [key=0, style=solid];
m46_179 -> m46_180  [key=0, style=solid];
m46_179 -> m46_8  [key=2, style=dotted];
m46_179 -> m46_182  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_180 -> m46_181  [key=0, style=solid];
m46_180 -> m46_9  [key=2, style=dotted];
m46_182 -> m46_183  [key=0, style=solid];
m46_182 -> m46_11  [key=2, style=dotted];
m46_181 -> m46_182  [key=0, style=solid];
m46_181 -> m46_10  [key=2, style=dotted];
m46_184 -> m46_176  [key=0, style=bold, color=blue];
m46_68 -> m46_69  [key=0, style=solid];
m46_69 -> m46_70  [key=0, style=solid];
m46_69 -> m46_8  [key=2, style=dotted];
m46_70 -> m46_71  [key=0, style=solid];
m46_70 -> m46_9  [key=2, style=dotted];
m46_71 -> m46_72  [key=0, style=solid];
m46_71 -> m46_76  [key=2, style=dotted];
m46_72 -> m46_73  [key=0, style=solid];
m46_72 -> m46_8  [key=2, style=dotted];
m46_73 -> m46_74  [key=0, style=solid];
m46_73 -> m46_9  [key=2, style=dotted];
m46_74 -> m46_75  [key=0, style=solid];
m46_74 -> m46_76  [key=2, style=dotted];
m46_75 -> m46_68  [key=0, style=bold, color=blue];
m46_167 -> m46_168  [key=0, style=solid];
m46_168 -> m46_169  [key=0, style=solid];
m46_168 -> m46_166  [key=2, style=dotted];
m46_168 -> m46_9  [key=2, style=dotted];
m46_169 -> m46_167  [key=0, style=bold, color=blue];
m46_173 -> m46_174  [key=0, style=solid];
m46_174 -> m46_175  [key=0, style=solid];
m46_174 -> m46_166  [key=2, style=dotted];
m46_174 -> m46_9  [key=2, style=dotted];
m46_175 -> m46_173  [key=0, style=bold, color=blue];
m46_0 -> m46_1  [key=0, style=solid];
m46_1 -> m46_0  [key=0, style=bold, color=blue];
m46_30 -> m46_31  [key=0, style=solid];
m46_31 -> m46_32  [key=0, style=solid];
m46_31 -> m46_8  [key=2, style=dotted];
m46_31 -> m46_34  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_31 -> m46_35  [key=1, style=dashed, color=darkseagreen4, label=options];
m46_32 -> m46_33  [key=0, style=solid];
m46_32 -> m46_9  [key=2, style=dotted];
m46_34 -> m46_35  [key=0, style=solid];
m46_34 -> m46_11  [key=2, style=dotted];
m46_35 -> m46_36  [key=0, style=solid];
m46_35 -> m46_37  [key=2, style=dotted];
m46_35 -> m46_38  [key=2, style=dotted];
m46_33 -> m46_34  [key=0, style=solid];
m46_33 -> m46_10  [key=2, style=dotted];
m46_36 -> m46_30  [key=0, style=bold, color=blue];
m46_205 -> m46_4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_14  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_15  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_16  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_22  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_26  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_27  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_32  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_33  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_34  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_41  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_42  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_44  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_48  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_49  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_51  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_58  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_59  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_62  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_64  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_70  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_71  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_73  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_74  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_79  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_80  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_81  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_85  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_86  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_88  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_89  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_91  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_92  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_94  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_95  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_99  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_100  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_102  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_103  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_107  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_108  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_109  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_113  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_114  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_115  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_116  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_117  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_119  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_120  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_121  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_122  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_123  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_125  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_126  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_127  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_128  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_129  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_133  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_134  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_135  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_136  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_137  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_140  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_141  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_143  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_144  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_145  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_147  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_148  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_149  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_150  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_152  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_154  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_155  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_157  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_158  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_160  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_164  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_168  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_171  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_174  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_180  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_181  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_182  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_188  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_189  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_191  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_192  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_198  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_199  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_201  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m46_205 -> m46_202  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionArrayAttributeParsingFixture"];
m52_19 -> m52_29  [key=3, color=green, style=bold, label="Parameter variable string longName"];
m52_19 -> m52_31  [key=3, color=green, style=bold, label="Parameter variable string longName"];
m52_19 -> m52_20  [key=0, style=solid];
m52_20 -> m52_26  [key=2, style=dotted];
m52_20 -> m52_21  [key=0, style=solid, color=red];
m52_20 -> m52_22  [key=1, style=dashed, color=darkseagreen4, label=oa];
m52_20 -> m52_24  [key=1, style=dashed, color=darkseagreen4, label=oa];
m52_20 -> m52_0  [key=2, style=dotted];
m52_20 -> m52_29  [key=0, style=solid, color=green];
m52_24 -> m52_25  [key=0, style=solid];
m52_24 -> m52_18  [key=2, style=dotted];
m52_21 -> m52_22  [key=0, style=solid, color=red];
m52_21 -> m52_16  [key=2, style=dotted];
m52_21 -> m52_23  [key=1, style=dashed, color=darkseagreen4, label=oi];
m52_21 -> m52_8  [key=2, style=dotted, color=red];
m52_22 -> m52_23  [key=0, style=solid, color=red];
m52_22 -> m52_8  [key=2, style=dotted, color=red];
m52_23 -> m52_24  [key=0, style=solid, color=red];
m52_23 -> m52_17  [key=2, style=dotted];
m52_23 -> m52_8  [key=2, style=dotted, color=red];
m52_25 -> m52_19  [key=0, style=bold, color=blue];
m52_29 -> m52_30  [key=0, style=solid, color=green];
m52_29 -> m52_19  [key=2, style=dotted, color=green];
m52_30 -> m52_31  [key=0, style=solid, color=green];
m52_30 -> m52_8  [key=2, style=dotted, color=green];
m52_30 -> m52_34  [key=2, style=dotted];
m52_30 -> m52_35  [key=2, style=dotted];
m52_31 -> m52_24  [key=0, style=solid, color=green];
m52_31 -> m52_19  [key=2, style=dotted, color=green];
m52_31 -> m52_32  [key=0, style=solid];
m52_31 -> m52_34  [key=2, style=dotted];
m52_31 -> m52_35  [key=2, style=dotted];
m52_36 -> m52_37  [key=0, style=solid];
m52_37 -> m52_38  [key=0, style=solid];
m52_38 -> m52_39  [key=0, style=solid];
m52_38 -> m52_34  [key=2, style=dotted];
m52_38 -> m52_40  [key=2, style=dotted];
m52_39 -> m52_36  [key=0, style=bold, color=blue];
m52_8 -> m52_9  [key=0, style=solid, color=green];
m52_8 -> m52_30  [key=3, color=green, style=bold, label="Parameter variable string longName"];
m52_8 -> m52_21  [key=3, color=red, style=bold, label="Parameter variable string longName"];
m52_8 -> m52_22  [key=3, color=red, style=bold, label="Parameter variable string longName"];
m52_8 -> m52_23  [key=3, color=red, style=bold, label="Parameter variable string shortName"];
m52_9 -> m52_10  [key=0, style=solid, color=green];
m52_9 -> m52_15  [key=2, style=dotted, color=green];
m52_9 -> m52_11  [key=1, style=dashed, color=darkseagreen4, label=oa];
m52_9 -> m52_13  [key=1, style=dashed, color=darkseagreen4, label=oa];
m52_10 -> m52_11  [key=0, style=solid, color=green];
m52_10 -> m52_16  [key=2, style=dotted, color=green];
m52_10 -> m52_12  [key=1, style=dashed, color=darkseagreen4, label=oi];
m52_11 -> m52_12  [key=0, style=solid, color=green];
m52_13 -> m52_14  [key=0, style=solid, color=green];
m52_13 -> m52_18  [key=2, style=dotted, color=green];
m52_12 -> m52_13  [key=0, style=solid, color=green];
m52_12 -> m52_17  [key=2, style=dotted, color=green];
m52_14 -> m52_8  [key=0, style=bold, color=blue];
m52_26 -> m52_27  [key=0, style=solid];
m52_27 -> m52_28  [key=0, style=solid];
m52_28 -> m52_26  [key=0, style=bold, color=blue];
m52_0 -> m52_1  [key=0, style=solid];
m52_0 -> m52_2  [key=1, style=dashed, color=darkseagreen4, label=int];
m52_0 -> m52_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m52_1 -> m52_2  [key=0, style=solid];
m52_1 -> m52_5  [key=2, style=dotted];
m52_1 -> m52_6  [key=2, style=dotted];
m52_2 -> m52_3  [key=0, style=solid];
m52_2 -> m52_7  [key=2, style=dotted];
m52_3 -> m52_4  [key=0, style=solid];
m52_3 -> m52_7  [key=2, style=dotted];
m52_4 -> m52_0  [key=0, style=bold, color=blue];
m52_53 -> m52_54  [key=0, style=solid];
m52_53 -> m52_62  [key=1, style=dashed, color=darkseagreen4, label="ref CommandLine.Internal.OptionMap"];
m52_53 -> m52_66  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>"];
m52_53 -> m52_67  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>"];
m52_53 -> m52_63  [key=1, style=dashed, color=darkseagreen4, label="ref CommandLine.Internal.OptionMap"];
m52_53 -> m52_68  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>"];
m52_53 -> m52_64  [key=1, style=dashed, color=darkseagreen4, label="ref CommandLine.Internal.OptionMap"];
m52_53 -> m52_53  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Internal.OptionMap CreateMap"];
m52_53 -> m52_65  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>"];
m52_53 -> m52_69  [key=1, style=dashed, color=darkseagreen4, label="ref CommandLine.Internal.OptionMap"];
m52_53 -> m52_70  [key=1, style=dashed, color=darkseagreen4, label="ref CommandLine.Internal.OptionMap"];
m52_53 -> m52_16  [key=2, style=dotted];
m52_53 -> m52_56  [key=1, style=dashed, color=darkseagreen4, label=option3];
m52_53 -> m52_60  [key=1, style=dashed, color=darkseagreen4, label=option3];
m52_56 -> m52_57  [key=0, style=solid, color=green];
m52_56 -> m52_26  [key=2, style=dotted, color=green];
m52_56 -> m52_59  [key=1, style=dashed, color=green, label=attribute1];
m52_56 -> m52_62  [key=1, style=dashed, color=green, label=attribute1];
m52_56 -> m52_66  [key=1, style=dashed, color=green, label=attribute1];
m52_56 -> m52_67  [key=1, style=dashed, color=green, label=attribute1];
m52_54 -> m52_56  [key=0, style=solid, color=green];
m52_54 -> m52_55  [key=0, style=solid];
m52_55 -> m52_56  [key=0, style=solid, color=green];
m52_55 -> m52_5  [key=2, style=dotted];
m52_55 -> m52_6  [key=2, style=dotted];
m52_55 -> m52_62  [key=1, style=dashed, color=darkseagreen4, label="ref CommandLine.Internal.OptionMap"];
m52_55 -> m52_63  [key=1, style=dashed, color=darkseagreen4, label="ref CommandLine.Internal.OptionMap"];
m52_55 -> m52_64  [key=1, style=dashed, color=darkseagreen4, label="ref CommandLine.Internal.OptionMap"];
m52_55 -> m52_69  [key=1, style=dashed, color=darkseagreen4, label="ref CommandLine.Internal.OptionMap"];
m52_55 -> m52_70  [key=1, style=dashed, color=darkseagreen4, label="ref CommandLine.Internal.OptionMap"];
m52_57 -> m52_58  [key=0, style=solid, color=green];
m52_57 -> m52_15  [key=2, style=dotted, color=green];
m52_57 -> m52_60  [key=1, style=dashed, color=green, label=attribute2];
m52_57 -> m52_63  [key=1, style=dashed, color=green, label=attribute2];
m52_57 -> m52_68  [key=1, style=dashed, color=green, label=attribute2];
m52_57 -> m52_61  [key=0, style=solid];
m52_59 -> m52_60  [key=0, style=solid];
m52_59 -> m52_16  [key=2, style=dotted];
m52_59 -> m52_62  [key=1, style=dashed, color=darkseagreen4, label=option1];
m52_59 -> m52_66  [key=1, style=dashed, color=darkseagreen4, label=option1];
m52_62 -> m52_63  [key=0, style=solid];
m52_62 -> m52_45  [key=0, style=bold, color=blue];
m52_66 -> m52_67  [key=0, style=solid];
m52_67 -> m52_68  [key=0, style=solid];
m52_58 -> m52_59  [key=0, style=solid, color=green];
m52_58 -> m52_26  [key=2, style=dotted, color=green];
m52_58 -> m52_61  [key=1, style=dashed, color=green, label=attribute3];
m52_58 -> m52_64  [key=1, style=dashed, color=green, label=attribute3];
m52_60 -> m52_67  [key=1, style=dashed, color=darkseagreen4, label=option2];
m52_60 -> m52_61  [key=0, style=solid];
m52_60 -> m52_16  [key=2, style=dotted];
m52_60 -> m52_63  [key=1, style=dashed, color=darkseagreen4, label=option2];
m52_63 -> m52_64  [key=0, style=solid];
m52_63 -> m52_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder"];
m52_63 -> m52_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder"];
m52_63 -> m52_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder"];
m52_63 -> m52_11  [key=1, style=dashed, color=green, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder"];
m52_63 -> m52_12  [key=1, style=dashed, color=green, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder"];
m52_63 -> m52_13  [key=1, style=dashed, color=green, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder"];
m52_63 -> m52_24  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder"];
m52_63 -> m52_22  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder"];
m52_63 -> m52_23  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder"];
m52_68 -> m52_69  [key=0, style=solid];
m52_61 -> m52_62  [key=0, style=solid];
m52_61 -> m52_68  [key=1, style=dashed, color=darkseagreen4, label=option3];
m52_61 -> m52_16  [key=2, style=dotted];
m52_61 -> m52_64  [key=1, style=dashed, color=darkseagreen4, label=option3];
m52_64 -> m52_65  [key=0, style=solid];
m52_69 -> m52_70  [key=0, style=solid];
m52_65 -> m52_66  [key=0, style=solid];
m52_65 -> m52_69  [key=0, style=solid];
m52_70 -> m52_53  [key=0, style=bold, color=blue];
m52_45 -> m52_46  [key=0, style=solid];
m52_45 -> m52_54  [key=1, style=dashed, color=darkseagreen4, label="ref CommandLine.OptionMap"];
m52_45 -> m52_55  [key=1, style=dashed, color=darkseagreen4, label="ref CommandLine.OptionMap"];
m52_45 -> m52_56  [key=1, style=dashed, color=darkseagreen4, label="ref CommandLine.OptionMap"];
m52_45 -> m52_57  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>"];
m52_45 -> m52_58  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>"];
m52_45 -> m52_59  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>"];
m52_45 -> m52_60  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>"];
m52_45 -> m52_61  [key=1, style=dashed, color=darkseagreen4, label="ref CommandLine.OptionMap"];
m52_45 -> m52_62  [key=1, style=dashed, color=darkseagreen4, label="ref CommandLine.OptionMap"];
m52_45 -> m52_45  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.OptionMap CreateMap"];
m52_46 -> m52_47  [key=0, style=solid];
m52_46 -> m52_48  [key=0, style=solid, color=red];
m52_47 -> m52_48  [key=0, style=solid, color=red];
m52_47 -> m52_5  [key=2, style=dotted];
m52_47 -> m52_6  [key=2, style=dotted];
m52_47 -> m52_54  [key=1, style=dashed, color=darkseagreen4, label="ref CommandLine.OptionMap"];
m52_47 -> m52_55  [key=1, style=dashed, color=darkseagreen4, label="ref CommandLine.OptionMap"];
m52_47 -> m52_56  [key=1, style=dashed, color=darkseagreen4, label="ref CommandLine.OptionMap"];
m52_47 -> m52_61  [key=1, style=dashed, color=darkseagreen4, label="ref CommandLine.OptionMap"];
m52_47 -> m52_62  [key=1, style=dashed, color=darkseagreen4, label="ref CommandLine.OptionMap"];
m52_48 -> m52_49  [key=0, style=solid, color=red];
m52_48 -> m52_15  [key=2, style=dotted, color=red];
m52_48 -> m52_51  [key=1, style=dashed, color=red, label=attribute1];
m52_48 -> m52_54  [key=1, style=dashed, color=red, label=attribute1];
m52_48 -> m52_58  [key=1, style=dashed, color=red, label=attribute1];
m52_48 -> m52_59  [key=1, style=dashed, color=red, label=attribute1];
m52_49 -> m52_50  [key=0, style=solid, color=red];
m52_49 -> m52_15  [key=2, style=dotted, color=red];
m52_49 -> m52_52  [key=1, style=dashed, color=red, label=attribute2];
m52_49 -> m52_55  [key=1, style=dashed, color=red, label=attribute2];
m52_49 -> m52_60  [key=1, style=dashed, color=red, label=attribute2];
m52_51 -> m52_52  [key=0, style=solid];
m52_51 -> m52_16  [key=2, style=dotted];
m52_51 -> m52_54  [key=1, style=dashed, color=darkseagreen4, label=option1];
m52_51 -> m52_58  [key=1, style=dashed, color=darkseagreen4, label=option1];
m52_50 -> m52_51  [key=0, style=solid, color=red];
m52_50 -> m52_15  [key=2, style=dotted, color=red];
m52_50 -> m52_53  [key=1, style=dashed, color=red, label=attribute3];
m52_50 -> m52_56  [key=1, style=dashed, color=red, label=attribute3];
m52_52 -> m52_53  [key=0, style=solid];
m52_52 -> m52_16  [key=2, style=dotted];
m52_52 -> m52_55  [key=1, style=dashed, color=darkseagreen4, label=option2];
m52_52 -> m52_59  [key=1, style=dashed, color=darkseagreen4, label=option2];
m52_41 -> m52_42  [key=0, style=solid];
m52_42 -> m52_43  [key=0, style=solid];
m52_43 -> m52_44  [key=0, style=solid];
m52_43 -> m52_34  [key=2, style=dotted];
m52_43 -> m52_40  [key=2, style=dotted];
m52_44 -> m52_41  [key=0, style=bold, color=blue];
m52_32 -> m52_33  [key=0, style=solid];
m52_32 -> m52_34  [key=2, style=dotted];
m52_32 -> m52_35  [key=2, style=dotted];
m52_33 -> m52_29  [key=0, style=bold, color=blue];
m53_0 -> m53_1  [key=0, style=solid];
m53_1 -> m53_2  [key=0, style=solid];
m53_1 -> m53_3  [key=2, style=dotted];
m53_2 -> m53_0  [key=0, style=bold, color=blue];
m53_4 -> m53_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.OptionsBase"];
m55_0 -> m55_1  [key=0, style=solid];
m55_1 -> m55_2  [key=0, style=solid];
m55_2 -> m55_0  [key=0, style=bold, color=blue];
m55_3 -> m55_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.OptionsWithDefaultSet"];
m56_0 -> m56_1  [key=0, style=solid];
m56_1 -> m56_2  [key=0, style=solid];
m56_2 -> m56_3  [key=0, style=solid];
m56_3 -> m56_4  [key=0, style=solid];
m56_4 -> m56_5  [key=0, style=solid];
m56_5 -> m56_6  [key=0, style=solid];
m56_6 -> m56_7  [key=0, style=solid];
m56_7 -> m56_0  [key=0, style=bold, color=blue];
m56_8 -> m56_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.OptionsWithMultipleSet"];
m56_8 -> m56_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.OptionsWithMultipleSet"];
m56_8 -> m56_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.OptionsWithMultipleSet"];
m56_8 -> m56_4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.OptionsWithMultipleSet"];
m56_8 -> m56_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.OptionsWithMultipleSet"];
m56_8 -> m56_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.OptionsWithMultipleSet"];
m67_4 -> m67_5  [key=0, style=solid];
m67_5 -> m67_6  [key=0, style=solid];
m67_5 -> m67_7  [key=2, style=dotted];
m67_6 -> m67_4  [key=0, style=bold, color=blue];
m67_0 -> m67_1  [key=0, style=solid];
m67_1 -> m67_2  [key=0, style=solid];
m67_1 -> m67_3  [key=2, style=dotted];
m67_1 -> m67_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m67_2 -> m67_0  [key=0, style=bold, color=blue];
m67_21 -> m67_22  [key=0, style=solid];
m67_21 -> m67_24  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m67_21 -> m67_26  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m67_21 -> m67_27  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m67_21 -> m67_29  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m67_21 -> m67_30  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m67_21 -> m67_31  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m67_21 -> m67_32  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m67_21 -> m67_33  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m67_21 -> m67_36  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m67_21 -> m67_41  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m67_21 -> m67_42  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m67_21 -> m67_9  [key=3, color=darkorchid, style=bold, label="Parameter variable SampleApp.Program.Options options"];
m67_22 -> m67_23  [key=0, style=solid];
m67_22 -> m67_24  [key=0, style=solid];
m67_24 -> m67_25  [key=0, style=solid];
m67_24 -> m67_47  [key=2, style=dotted];
m67_24 -> m67_48  [key=2, style=dotted];
m67_26 -> m67_27  [key=0, style=solid];
m67_26 -> m67_48  [key=2, style=dotted];
m67_27 -> m67_28  [key=0, style=solid];
m67_27 -> m67_29  [key=0, style=solid];
m67_29 -> m67_30  [key=0, style=solid];
m67_29 -> m67_48  [key=2, style=dotted];
m67_30 -> m67_31  [key=0, style=solid];
m67_30 -> m67_50  [key=2, style=dotted];
m67_30 -> m67_51  [key=2, style=dotted];
m67_30 -> m67_48  [key=2, style=dotted];
m67_31 -> m67_32  [key=0, style=solid];
m67_31 -> m67_48  [key=2, style=dotted];
m67_32 -> m67_33  [key=0, style=solid];
m67_32 -> m67_52  [key=2, style=dotted];
m67_32 -> m67_51  [key=2, style=dotted];
m67_32 -> m67_48  [key=2, style=dotted];
m67_33 -> m67_34  [key=0, style=solid];
m67_33 -> m67_40  [key=0, style=solid];
m67_36 -> m67_37  [key=0, style=solid];
m67_36 -> m67_39  [key=0, style=solid];
m67_41 -> m67_42  [key=0, style=solid];
m67_41 -> m67_43  [key=0, style=solid];
m67_41 -> m67_57  [key=2, style=dotted];
m67_42 -> m67_45  [key=0, style=solid];
m67_42 -> m67_58  [key=2, style=dotted];
m67_42 -> m67_59  [key=2, style=dotted];
m67_23 -> m67_25  [key=0, style=solid];
m67_23 -> m67_46  [key=2, style=dotted];
m67_25 -> m67_26  [key=0, style=solid];
m67_25 -> m67_49  [key=2, style=dotted];
m67_28 -> m67_27  [key=0, style=solid];
m67_28 -> m67_48  [key=2, style=dotted];
m67_34 -> m67_35  [key=0, style=solid];
m67_34 -> m67_53  [key=2, style=dotted];
m67_34 -> m67_37  [key=1, style=dashed, color=darkseagreen4, label=builder];
m67_34 -> m67_38  [key=1, style=dashed, color=darkseagreen4, label=builder];
m67_34 -> m67_39  [key=1, style=dashed, color=darkseagreen4, label=builder];
m67_40 -> m67_41  [key=0, style=solid];
m67_40 -> m67_49  [key=2, style=dotted];
m67_35 -> m67_36  [key=0, style=solid];
m67_35 -> m67_54  [key=2, style=dotted];
m67_37 -> m67_38  [key=0, style=solid];
m67_37 -> m67_54  [key=2, style=dotted];
m67_38 -> m67_36  [key=0, style=solid];
m67_38 -> m67_54  [key=2, style=dotted];
m67_39 -> m67_40  [key=0, style=solid];
m67_39 -> m67_55  [key=2, style=dotted];
m67_39 -> m67_56  [key=2, style=dotted];
m67_39 -> m67_46  [key=2, style=dotted];
m67_43 -> m67_44  [key=0, style=solid];
m67_43 -> m67_59  [key=2, style=dotted];
m67_44 -> m67_45  [key=0, style=solid];
m67_44 -> m67_46  [key=2, style=dotted];
m67_45 -> m67_21  [key=0, style=bold, color=blue];
m67_8 -> m67_9  [key=0, style=solid];
m67_8 -> m67_11  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m67_9 -> m67_10  [key=0, style=solid];
m67_9 -> m67_16  [key=2, style=dotted];
m67_9 -> m67_11  [key=1, style=dashed, color=darkseagreen4, label=options];
m67_9 -> m67_13  [key=1, style=dashed, color=darkseagreen4, label=options];
m67_11 -> m67_12  [key=0, style=solid];
m67_11 -> m67_13  [key=0, style=solid];
m67_11 -> m67_19  [key=2, style=dotted];
m67_10 -> m67_11  [key=0, style=solid];
m67_10 -> m67_17  [key=2, style=dotted];
m67_10 -> m67_18  [key=2, style=dotted];
m67_13 -> m67_14  [key=0, style=solid];
m67_13 -> m67_21  [key=2, style=dotted];
m67_12 -> m67_13  [key=0, style=solid];
m67_12 -> m67_20  [key=2, style=dotted];
m67_14 -> m67_15  [key=0, style=solid];
m67_14 -> m67_20  [key=2, style=dotted];
m67_15 -> m67_8  [key=0, style=bold, color=blue];
m67_60 -> m67_1  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m67_60 -> m67_5  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m69_10 -> m69_11  [key=0, style=solid];
m69_11 -> m69_12  [key=0, style=solid];
m69_11 -> m69_0  [key=2, style=dotted];
m69_12 -> m69_10  [key=0, style=bold, color=blue];
m69_32 -> m69_33  [key=0, style=solid];
m69_33 -> m69_34  [key=0, style=solid];
m69_33 -> m69_37  [key=2, style=dotted];
m69_33 -> m69_35  [key=1, style=dashed, color=darkseagreen4, label=pair];
m69_34 -> m69_35  [key=0, style=solid];
m69_34 -> m69_28  [key=2, style=dotted];
m69_34 -> m69_38  [key=2, style=dotted];
m69_35 -> m69_36  [key=0, style=solid];
m69_35 -> m69_28  [key=2, style=dotted];
m69_35 -> m69_30  [key=2, style=dotted];
m69_36 -> m69_32  [key=0, style=bold, color=blue];
m69_16 -> m69_17  [key=0, style=solid];
m69_17 -> m69_18  [key=0, style=solid];
m69_17 -> m69_27  [key=2, style=dotted];
m69_17 -> m69_19  [key=1, style=dashed, color=darkseagreen4, label=list];
m69_17 -> m69_20  [key=1, style=dashed, color=darkseagreen4, label=list];
m69_17 -> m69_21  [key=1, style=dashed, color=darkseagreen4, label=list];
m69_18 -> m69_19  [key=0, style=solid];
m69_18 -> m69_28  [key=2, style=dotted];
m69_18 -> m69_29  [key=2, style=dotted];
m69_19 -> m69_20  [key=0, style=solid];
m69_19 -> m69_28  [key=2, style=dotted];
m69_19 -> m69_30  [key=2, style=dotted];
m69_20 -> m69_21  [key=0, style=solid];
m69_20 -> m69_28  [key=2, style=dotted];
m69_20 -> m69_30  [key=2, style=dotted];
m69_21 -> m69_22  [key=0, style=solid];
m69_21 -> m69_31  [key=2, style=dotted];
m69_22 -> m69_23  [key=0, style=solid];
m69_22 -> m69_27  [key=2, style=dotted];
m69_22 -> m69_24  [key=1, style=dashed, color=darkseagreen4, label=anotherList];
m69_22 -> m69_25  [key=1, style=dashed, color=darkseagreen4, label=anotherList];
m69_23 -> m69_24  [key=0, style=solid];
m69_23 -> m69_28  [key=2, style=dotted];
m69_23 -> m69_29  [key=2, style=dotted];
m69_24 -> m69_25  [key=0, style=solid];
m69_24 -> m69_28  [key=2, style=dotted];
m69_24 -> m69_30  [key=2, style=dotted];
m69_25 -> m69_26  [key=0, style=solid];
m69_25 -> m69_31  [key=2, style=dotted];
m69_26 -> m69_16  [key=0, style=bold, color=blue];
m69_31 -> m69_48  [key=0, style=solid];
m69_31 -> m69_49  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>"];
m69_31 -> m69_17  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>> list"];
m69_31 -> m69_22  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>> list"];
m69_48 -> m69_49  [key=0, style=solid];
m69_48 -> m69_52  [key=2, style=dotted];
m69_48 -> m69_53  [key=2, style=dotted];
m69_49 -> m69_50  [key=0, style=solid];
m69_49 -> m69_51  [key=0, style=solid];
m69_50 -> m69_49  [key=0, style=solid];
m69_50 -> m69_53  [key=2, style=dotted];
m69_51 -> m69_31  [key=0, style=bold, color=blue];
m69_0 -> m69_1  [key=0, style=solid];
m69_1 -> m69_2  [key=0, style=solid];
m69_2 -> m69_0  [key=0, style=bold, color=blue];
m69_39 -> m69_40  [key=0, style=solid];
m69_40 -> m69_41  [key=0, style=solid];
m69_40 -> m69_5  [key=2, style=dotted];
m69_40 -> m69_47  [key=2, style=dotted];
m69_40 -> m69_42  [key=1, style=dashed, color=darkseagreen4, label=list];
m69_40 -> m69_43  [key=1, style=dashed, color=darkseagreen4, label=list];
m69_40 -> m69_44  [key=1, style=dashed, color=darkseagreen4, label=list];
m69_40 -> m69_45  [key=1, style=dashed, color=darkseagreen4, label=list];
m69_41 -> m69_42  [key=0, style=solid];
m69_41 -> m69_28  [key=2, style=dotted];
m69_41 -> m69_38  [key=2, style=dotted];
m69_42 -> m69_43  [key=0, style=solid];
m69_42 -> m69_28  [key=2, style=dotted];
m69_42 -> m69_29  [key=2, style=dotted];
m69_43 -> m69_44  [key=0, style=solid];
m69_43 -> m69_28  [key=2, style=dotted];
m69_43 -> m69_30  [key=2, style=dotted];
m69_44 -> m69_45  [key=0, style=solid];
m69_44 -> m69_28  [key=2, style=dotted];
m69_44 -> m69_30  [key=2, style=dotted];
m69_45 -> m69_46  [key=0, style=solid];
m69_45 -> m69_28  [key=2, style=dotted];
m69_45 -> m69_30  [key=2, style=dotted];
m69_46 -> m69_39  [key=0, style=bold, color=blue];
m69_5 -> m69_6  [key=0, style=solid];
m69_6 -> m69_7  [key=0, style=solid];
m69_7 -> m69_8  [key=0, style=solid];
m69_8 -> m69_9  [key=0, style=solid];
m69_9 -> m69_5  [key=0, style=bold, color=blue];
m69_13 -> m69_14  [key=0, style=solid];
m69_14 -> m69_15  [key=0, style=solid];
m69_15 -> m69_13  [key=0, style=bold, color=blue];
m69_3 -> m69_4  [key=0, style=solid];
m69_4 -> m69_3  [key=0, style=bold, color=blue];
m69_54 -> m69_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.ReflectionUtilFixture.MockObject"];
m69_55 -> m69_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject"];
m69_55 -> m69_7  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject"];
m69_55 -> m69_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject"];
m70_11 -> m70_12  [key=0, style=solid];
m70_12 -> m70_13  [key=0, style=solid];
m70_12 -> m70_14  [key=2, style=dotted];
m70_13 -> m70_11  [key=0, style=bold, color=blue];
m70_7 -> m70_8  [key=0, style=solid];
m70_8 -> m70_9  [key=0, style=solid];
m70_8 -> m70_10  [key=2, style=dotted];
m70_8 -> m70_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m70_9 -> m70_7  [key=0, style=bold, color=blue];
m70_0 -> m70_1  [key=0, style=solid];
m70_0 -> m70_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetUsage"];
m70_0 -> m70_7  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetUsage"];
m70_1 -> m70_2  [key=0, style=solid];
m70_1 -> m70_3  [key=0, style=solid];
m70_2 -> m70_4  [key=0, style=solid];
m70_2 -> m70_5  [key=2, style=dotted];
m70_2 -> m70_6  [key=2, style=dotted];
m70_3 -> m70_4  [key=0, style=solid];
m70_4 -> m70_0  [key=0, style=bold, color=blue];
m70_15 -> m70_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.RPEOptions"];
m70_15 -> m70_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.RPEOptions"];
m70_16 -> m70_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.RPEOptionsForAutoBuild"];
m70_16 -> m70_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.RPEOptionsForAutoBuild"];
m71_0 -> m71_1  [key=0, style=solid];
m71_1 -> m71_2  [key=0, style=solid];
m71_2 -> m71_0  [key=0, style=bold, color=blue];
m71_3 -> m71_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.SimpleOptions"];
m72_0 -> m72_1  [key=0, style=solid];
m72_1 -> m72_2  [key=0, style=solid];
m72_1 -> m72_3  [key=2, style=dotted];
m72_2 -> m72_0  [key=0, style=bold, color=blue];
m72_4 -> m72_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid"];
m76_0 -> m76_1  [key=0, style=solid];
m76_1 -> m76_2  [key=0, style=solid];
m76_2 -> m76_0  [key=0, style=bold, color=blue];
m76_3 -> m76_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray"];
m79_0 -> m79_1  [key=0, style=solid];
m79_1 -> m79_2  [key=0, style=solid];
m79_2 -> m79_0  [key=0, style=bold, color=blue];
m79_3 -> m79_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.SimpleOptionsWithEnum"];
m80_0 -> m80_1  [key=0, style=solid];
m80_1 -> m80_2  [key=0, style=solid];
m80_2 -> m80_0  [key=0, style=bold, color=blue];
m83_0 -> m83_1  [key=0, style=solid];
m83_1 -> m83_2  [key=0, style=solid];
m83_1 -> m83_9  [key=2, style=dotted];
m83_1 -> m83_4  [key=1, style=dashed, color=darkseagreen4, label=options];
m83_1 -> m83_5  [key=1, style=dashed, color=darkseagreen4, label=options];
m83_1 -> m83_6  [key=1, style=dashed, color=darkseagreen4, label=options];
m83_1 -> m83_7  [key=1, style=dashed, color=darkseagreen4, label=options];
m83_2 -> m83_3  [key=0, style=solid];
m83_2 -> m83_10  [key=2, style=dotted];
m83_4 -> m83_5  [key=0, style=solid];
m83_4 -> m83_11  [key=2, style=dotted];
m83_4 -> m83_13  [key=2, style=dotted];
m83_5 -> m83_6  [key=0, style=solid];
m83_5 -> m83_11  [key=2, style=dotted];
m83_5 -> m83_13  [key=2, style=dotted];
m83_6 -> m83_7  [key=0, style=solid];
m83_6 -> m83_11  [key=2, style=dotted];
m83_6 -> m83_12  [key=2, style=dotted];
m83_7 -> m83_8  [key=0, style=solid];
m83_7 -> m83_14  [key=2, style=dotted];
m83_3 -> m83_4  [key=0, style=solid];
m83_3 -> m83_11  [key=2, style=dotted];
m83_3 -> m83_12  [key=2, style=dotted];
m83_8 -> m83_0  [key=0, style=bold, color=blue];
m83_15 -> m83_16  [key=0, style=solid];
m83_16 -> m83_17  [key=0, style=solid];
m83_16 -> m83_20  [key=2, style=dotted];
m83_17 -> m83_18  [key=0, style=solid];
m83_17 -> m83_10  [key=2, style=dotted];
m83_18 -> m83_19  [key=0, style=solid];
m83_18 -> m83_11  [key=2, style=dotted];
m83_18 -> m83_12  [key=2, style=dotted];
m83_19 -> m83_15  [key=0, style=bold, color=blue];
m89_0 -> m89_1  [key=0, style=solid];
m89_1 -> m89_2  [key=0, style=solid];
m89_1 -> m89_4  [key=1, style=dashed, color=darkseagreen4, label=args];
m89_1 -> m89_8  [key=1, style=dashed, color=darkseagreen4, label=args];
m89_2 -> m89_3  [key=0, style=solid];
m89_2 -> m89_13  [key=2, style=dotted];
m89_2 -> m89_4  [key=1, style=dashed, color=darkseagreen4, label=appOptions];
m89_2 -> m89_6  [key=1, style=dashed, color=darkseagreen4, label=appOptions];
m89_4 -> m89_5  [key=0, style=solid];
m89_4 -> m89_16  [key=2, style=dotted];
m89_8 -> m89_9  [key=0, style=solid];
m89_8 -> m89_16  [key=2, style=dotted];
m89_3 -> m89_4  [key=0, style=solid];
m89_3 -> m89_14  [key=2, style=dotted];
m89_3 -> m89_15  [key=2, style=dotted];
m89_3 -> m89_8  [key=1, style=dashed, color=darkseagreen4, label=parser];
m89_6 -> m89_7  [key=0, style=solid];
m89_6 -> m89_17  [key=2, style=dotted];
m89_6 -> m89_19  [key=2, style=dotted];
m89_5 -> m89_6  [key=0, style=solid];
m89_5 -> m89_17  [key=2, style=dotted];
m89_5 -> m89_18  [key=2, style=dotted];
m89_7 -> m89_8  [key=0, style=solid];
m89_7 -> m89_20  [key=2, style=dotted];
m89_7 -> m89_10  [key=1, style=dashed, color=darkseagreen4, label=plugInXOptions];
m89_7 -> m89_11  [key=1, style=dashed, color=darkseagreen4, label=plugInXOptions];
m89_10 -> m89_11  [key=0, style=solid];
m89_10 -> m89_17  [key=2, style=dotted];
m89_10 -> m89_19  [key=2, style=dotted];
m89_11 -> m89_12  [key=0, style=solid];
m89_11 -> m89_17  [key=2, style=dotted];
m89_11 -> m89_19  [key=2, style=dotted];
m89_9 -> m89_10  [key=0, style=solid];
m89_9 -> m89_17  [key=2, style=dotted];
m89_9 -> m89_18  [key=2, style=dotted];
m89_12 -> m89_0  [key=0, style=bold, color=blue];
m91_12 -> m91_13  [key=0, style=solid];
m91_13 -> m91_14  [key=0, style=solid];
m91_13 -> m91_3  [key=2, style=dotted];
m91_13 -> m91_15  [key=2, style=dotted];
m91_13 -> m91_8  [key=2, style=dotted];
m91_14 -> m91_12  [key=0, style=bold, color=blue];
m91_27 -> m91_28  [key=0, style=solid];
m91_28 -> m91_29  [key=0, style=solid];
m91_28 -> m91_22  [key=2, style=dotted];
m91_28 -> m91_33  [key=1, style=dashed, color=darkseagreen4, label=options];
m91_29 -> m91_30  [key=0, style=solid];
m91_29 -> m91_23  [key=2, style=dotted];
m91_29 -> m91_31  [key=1, style=dashed, color=darkseagreen4, label=values];
m91_29 -> m91_32  [key=1, style=dashed, color=darkseagreen4, label=values];
m91_33 -> m91_34  [key=0, style=solid];
m91_33 -> m91_36  [key=2, style=dotted];
m91_30 -> m91_31  [key=0, style=solid];
m91_30 -> m91_35  [key=2, style=dotted];
m91_31 -> m91_32  [key=0, style=solid];
m91_31 -> m91_35  [key=2, style=dotted];
m91_32 -> m91_33  [key=0, style=solid];
m91_32 -> m91_35  [key=2, style=dotted];
m91_34 -> m91_27  [key=0, style=bold, color=blue];
m91_16 -> m91_17  [key=0, style=solid];
m91_17 -> m91_18  [key=0, style=solid];
m91_17 -> m91_22  [key=2, style=dotted];
m91_18 -> m91_19  [key=0, style=solid];
m91_18 -> m91_23  [key=2, style=dotted];
m91_18 -> m91_20  [key=1, style=dashed, color=darkseagreen4, label=values];
m91_19 -> m91_20  [key=0, style=solid];
m91_19 -> m91_24  [key=2, style=dotted];
m91_19 -> m91_25  [key=2, style=dotted];
m91_20 -> m91_21  [key=0, style=solid];
m91_20 -> m91_8  [key=2, style=dotted];
m91_20 -> m91_24  [key=2, style=dotted];
m91_20 -> m91_26  [key=2, style=dotted];
m91_21 -> m91_16  [key=0, style=bold, color=blue];
m91_4 -> m91_5  [key=0, style=solid];
m91_5 -> m91_6  [key=0, style=solid];
m91_5 -> m91_3  [key=2, style=dotted];
m91_5 -> m91_7  [key=2, style=dotted];
m91_5 -> m91_8  [key=2, style=dotted];
m91_6 -> m91_4  [key=0, style=bold, color=blue];
m91_0 -> m91_1  [key=0, style=solid];
m91_1 -> m91_2  [key=0, style=solid];
m91_1 -> m91_3  [key=2, style=dotted];
m91_2 -> m91_0  [key=0, style=bold, color=blue];
m91_9 -> m91_10  [key=0, style=solid];
m91_10 -> m91_11  [key=0, style=solid];
m91_10 -> m91_3  [key=2, style=dotted];
m91_10 -> m91_7  [key=2, style=dotted];
m91_10 -> m91_8  [key=2, style=dotted];
m91_11 -> m91_9  [key=0, style=bold, color=blue];
m91_37 -> m91_33  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.ValueListAttributeFixture"];
m92_20 -> m92_21  [key=0, style=solid];
m92_21 -> m92_22  [key=0, style=solid];
m92_21 -> m92_31  [key=2, style=dotted];
m92_21 -> m92_24  [key=1, style=dashed, color=darkseagreen4, label=options];
m92_21 -> m92_25  [key=1, style=dashed, color=darkseagreen4, label=options];
m92_21 -> m92_26  [key=1, style=dashed, color=darkseagreen4, label=options];
m92_21 -> m92_27  [key=1, style=dashed, color=darkseagreen4, label=options];
m92_21 -> m92_28  [key=1, style=dashed, color=darkseagreen4, label=options];
m92_21 -> m92_29  [key=1, style=dashed, color=darkseagreen4, label=options];
m92_22 -> m92_23  [key=0, style=solid];
m92_22 -> m92_14  [key=2, style=dotted];
m92_24 -> m92_25  [key=0, style=solid];
m92_24 -> m92_16  [key=2, style=dotted];
m92_24 -> m92_17  [key=2, style=dotted];
m92_25 -> m92_26  [key=0, style=solid];
m92_25 -> m92_16  [key=2, style=dotted];
m92_25 -> m92_17  [key=2, style=dotted];
m92_26 -> m92_27  [key=0, style=solid];
m92_26 -> m92_16  [key=2, style=dotted];
m92_26 -> m92_17  [key=2, style=dotted];
m92_27 -> m92_28  [key=0, style=solid];
m92_27 -> m92_16  [key=2, style=dotted];
m92_27 -> m92_32  [key=2, style=dotted];
m92_28 -> m92_29  [key=0, style=solid];
m92_28 -> m92_16  [key=2, style=dotted];
m92_28 -> m92_33  [key=2, style=dotted];
m92_29 -> m92_30  [key=0, style=solid];
m92_29 -> m92_19  [key=2, style=dotted];
m92_23 -> m92_24  [key=0, style=solid];
m92_23 -> m92_15  [key=2, style=dotted];
m92_30 -> m92_20  [key=0, style=bold, color=blue];
m92_34 -> m92_35  [key=0, style=solid];
m92_35 -> m92_36  [key=0, style=solid];
m92_35 -> m92_31  [key=2, style=dotted];
m92_36 -> m92_37  [key=0, style=solid];
m92_36 -> m92_14  [key=2, style=dotted];
m92_37 -> m92_38  [key=0, style=solid];
m92_37 -> m92_39  [key=2, style=dotted];
m92_38 -> m92_34  [key=0, style=bold, color=blue];
m92_0 -> m92_1  [key=0, style=solid];
m92_1 -> m92_0  [key=0, style=bold, color=blue];
m92_2 -> m92_3  [key=0, style=solid];
m92_3 -> m92_4  [key=0, style=solid];
m92_3 -> m92_13  [key=2, style=dotted];
m92_3 -> m92_6  [key=1, style=dashed, color=darkseagreen4, label=options];
m92_3 -> m92_7  [key=1, style=dashed, color=darkseagreen4, label=options];
m92_3 -> m92_8  [key=1, style=dashed, color=darkseagreen4, label=options];
m92_3 -> m92_9  [key=1, style=dashed, color=darkseagreen4, label=options];
m92_3 -> m92_10  [key=1, style=dashed, color=darkseagreen4, label=options];
m92_3 -> m92_11  [key=1, style=dashed, color=darkseagreen4, label=options];
m92_4 -> m92_5  [key=0, style=solid];
m92_4 -> m92_14  [key=2, style=dotted];
m92_6 -> m92_7  [key=0, style=solid];
m92_6 -> m92_16  [key=2, style=dotted];
m92_6 -> m92_17  [key=2, style=dotted];
m92_7 -> m92_8  [key=0, style=solid];
m92_7 -> m92_16  [key=2, style=dotted];
m92_7 -> m92_17  [key=2, style=dotted];
m92_8 -> m92_9  [key=0, style=solid];
m92_8 -> m92_16  [key=2, style=dotted];
m92_8 -> m92_17  [key=2, style=dotted];
m92_9 -> m92_10  [key=0, style=solid];
m92_9 -> m92_16  [key=2, style=dotted];
m92_9 -> m92_17  [key=2, style=dotted];
m92_10 -> m92_11  [key=0, style=solid];
m92_10 -> m92_16  [key=2, style=dotted];
m92_10 -> m92_18  [key=2, style=dotted];
m92_11 -> m92_12  [key=0, style=solid];
m92_11 -> m92_19  [key=2, style=dotted];
m92_5 -> m92_6  [key=0, style=solid];
m92_5 -> m92_15  [key=2, style=dotted];
m92_12 -> m92_2  [key=0, style=bold, color=blue];
m92_49 -> m92_50  [key=0, style=solid];
m92_50 -> m92_51  [key=0, style=solid];
m92_50 -> m92_47  [key=2, style=dotted];
m92_51 -> m92_52  [key=0, style=solid];
m92_51 -> m92_14  [key=2, style=dotted];
m92_52 -> m92_53  [key=0, style=solid];
m92_52 -> m92_39  [key=2, style=dotted];
m92_53 -> m92_49  [key=0, style=bold, color=blue];
m92_40 -> m92_41  [key=0, style=solid];
m92_41 -> m92_42  [key=0, style=solid];
m92_41 -> m92_47  [key=2, style=dotted];
m92_41 -> m92_44  [key=1, style=dashed, color=darkseagreen4, label=options];
m92_41 -> m92_45  [key=1, style=dashed, color=darkseagreen4, label=options];
m92_42 -> m92_43  [key=0, style=solid];
m92_42 -> m92_14  [key=2, style=dotted];
m92_44 -> m92_45  [key=0, style=solid];
m92_44 -> m92_16  [key=2, style=dotted];
m92_44 -> m92_48  [key=2, style=dotted];
m92_45 -> m92_46  [key=0, style=solid];
m92_45 -> m92_19  [key=2, style=dotted];
m92_43 -> m92_44  [key=0, style=solid];
m92_43 -> m92_15  [key=2, style=dotted];
m92_46 -> m92_40  [key=0, style=bold, color=blue];
m92_54 -> m92_4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.ValueListAttributeParsingFixture"];
m92_54 -> m92_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.ValueListAttributeParsingFixture"];
m92_54 -> m92_22  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.ValueListAttributeParsingFixture"];
m92_54 -> m92_23  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.ValueListAttributeParsingFixture"];
m92_54 -> m92_36  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.ValueListAttributeParsingFixture"];
m92_54 -> m92_37  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.ValueListAttributeParsingFixture"];
m92_54 -> m92_42  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.ValueListAttributeParsingFixture"];
m92_54 -> m92_43  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.ValueListAttributeParsingFixture"];
m92_54 -> m92_51  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.ValueListAttributeParsingFixture"];
m92_54 -> m92_52  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.ValueListAttributeParsingFixture"];
}
