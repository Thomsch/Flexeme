digraph  {
n233 [label="CommandLine.CommandLineParser", span=""];
n234 [label=object, span=""];
n0 [label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="51-51", cluster="CommandLine.CommandLineParser.CommandLineParser()"];
n1 [label="_settings = new CommandLineParserSettings()", span="53-53", cluster="CommandLine.CommandLineParser.CommandLineParser()"];
n2 [label="Exit CommandLine.CommandLineParser.CommandLineParser()", span="51-51", cluster="CommandLine.CommandLineParser.CommandLineParser()"];
n3 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="45-45", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()"];
n4 [label="Entry CommandLine.CommandLineParser.CommandLineParser(bool)", span="58-58", cluster="CommandLine.CommandLineParser.CommandLineParser(bool)"];
n5 [label="_settings = new CommandLineParserSettings(false, false, Console.Error)", span="61-61", cluster="CommandLine.CommandLineParser.CommandLineParser(bool)"];
n6 [label="Exit CommandLine.CommandLineParser.CommandLineParser(bool)", span="58-58", cluster="CommandLine.CommandLineParser.CommandLineParser(bool)"];
n7 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="105-105", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)"];
n8 [label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="70-70", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)"];
n9 [label="Assumes.NotNull(settings, ''settings'', SR.ArgumentNullException_CommandLineParserSettingsInstanceCannotBeNull)", span="72-72", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)"];
n10 [label="_settings = settings", span="73-73", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)"];
n12 [label="Entry CommandLine.Utils.Assumes.NotNull<T>(T, string, string)", span="45-45", cluster="CommandLine.Utils.Assumes.NotNull<T>(T, string, string)"];
n11 [label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="70-70", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)"];
n13 [label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="94-94", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)"];
n14 [label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="96-96", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)"];
n15 [label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="97-97", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)"];
n16 [label="return DoParseArguments(args, options);", span="99-99", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)"];
n17 [label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="94-94", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)"];
n18 [label="Entry CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="124-124", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n19 [label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="115-115", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n20 [label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="117-117", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n21 [label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="118-118", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n22 [label="_settings.HelpWriter = helpWriter", span="120-120", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n23 [label="return DoParseArguments(args, options);", span="121-121", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n24 [label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="115-115", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n25 [label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="126-126", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n27 [label="_context = new ParserContext(args, options)", span="129-129", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n29 [label="ParseHelp(args, pair.Right) || !DoParseArgumentsDispatcher(_context)", span="134-134", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n31 [label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="137-137", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n26 [label="var helpWriter = _settings.HelpWriter", span="127-127", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n37 [label="Entry CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="72-72", cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)"];
n28 [label="pair != null && helpWriter != null", span="131-131", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n32 [label="helpWriter.Write(helpText)", span="138-138", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n38 [label="Entry CommandLine.ParserContext.ParserContext(string[], object)", span="42-42", cluster="CommandLine.ParserContext.ParserContext(string[], object)"];
n35 [label="return DoParseArgumentsDispatcher(_context);", span="144-144", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n30 [label="string helpText", span="136-136", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n34 [label="return true;", span="141-141", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n39 [label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="199-199", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n40 [label="Entry CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)", span="147-147", cluster="CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)"];
n41 [label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="100-100", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)"];
n33 [label="return false;", span="139-139", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n42 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)"];
n36 [label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="124-124", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n43 [label="return context.Target.HasVerbs() ?\r\n                DoParseArgumentsVerbs(context) :\r\n                DoParseArgumentsCore(context);", span="149-151", cluster="CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)"];
n44 [label="Exit CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)", span="147-147", cluster="CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)"];
n45 [label="Entry object.HasVerbs()", span="33-33", cluster="object.HasVerbs()"];
n46 [label="Entry CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", span="265-265", cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)"];
n47 [label="Entry CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", span="154-154", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)"];
n48 [label="bool hadError = false", span="156-156", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=red, community=0];
n49 [label="var optionMap = OptionMap.Create(context.Target, _settings)", span="157-157", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)"];
n51 [label="var target = new Target(context.Target)", span="159-159", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=red, community=0];
n52 [label="IArgumentEnumerator arguments = new StringArrayEnumerator(context.Arguments)", span="161-161", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=red, community=0];
n58 [label="var result = parser.Parse(arguments, optionMap, context.Target)", span="172-172", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)"];
n60 [label="SetParserStateIfNeeded(context.Target, parser.PostParsingState)", span="175-175", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)"];
n67 [label="hadError |= !optionMap.EnforceRules()", span="194-194", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)"];
n50 [label="optionMap.SetDefaults()", span="158-158", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)"];
n70 [label="Entry CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", span="75-75", cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)"];
n71 [label="Entry CommandLine.Internal.OptionMap.SetDefaults()", span="156-156", cluster="CommandLine.Internal.OptionMap.SetDefaults()"];
n72 [label="Entry CommandLine.Internal.Target.Target(object)", span="38-38", cluster="CommandLine.Internal.Target.Target(object)"];
n64 [label="target.IsValueListDefined", span="185-185", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=red, community=0];
n65 [label="!target.AddValueItemIfAllowed(argument)", span="187-187", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=red, community=0];
n53 [label="arguments.MoveNext()", span="162-162", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)"];
n73 [label="Entry CommandLine.Internal.StringArrayEnumerator.StringArrayEnumerator(string[])", span="41-41", cluster="CommandLine.Internal.StringArrayEnumerator.StringArrayEnumerator(string[])"];
n54 [label="var argument = arguments.Current", span="164-164", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)"];
n63 [label="arguments.MoveNext()", span="182-182", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)"];
n74 [label="Entry CommandLine.Internal.IArgumentEnumerator.MoveNext()", span="38-38", cluster="CommandLine.Internal.IArgumentEnumerator.MoveNext()"];
n55 [label="string.IsNullOrEmpty(argument)", span="165-165", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)"];
n56 [label="var parser = ArgumentParser.Create(argument, _settings.IgnoreUnknownArguments)", span="169-169", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)"];
n75 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
n57 [label="parser != null", span="170-170", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)"];
n76 [label="Entry CommandLine.Internal.ArgumentParser.Create(string, bool)", span="52-52", cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)"];
n59 [label="(result & PresentParserState.Failure) == PresentParserState.Failure", span="173-173", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)"];
n77 [label="Entry CommandLine.Internal.ArgumentParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", span="43-43", cluster="CommandLine.Internal.ArgumentParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)"];
n62 [label="(result & PresentParserState.MoveOnNextElement) == PresentParserState.MoveOnNextElement", span="180-180", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)"];
n61 [label="hadError = true", span="176-176", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)"];
n78 [label="Entry CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="482-482", cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)"];
n66 [label="hadError = true", span="189-189", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)"];
n79 [label="Entry CommandLine.Internal.Target.AddValueItemIfAllowed(string)", span="50-50", cluster="CommandLine.Internal.Target.AddValueItemIfAllowed(string)"];
n68 [label="return !hadError;", span="196-196", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)"];
n80 [label="Entry CommandLine.Internal.OptionMap.EnforceRules()", span="151-151", cluster="CommandLine.Internal.OptionMap.EnforceRules()"];
n69 [label="Exit CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", span="154-154", cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)"];
n81 [label="var caseSensitive = _settings.CaseSensitive", span="201-201", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n82 [label=args, span="202-202", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n83 [label="helpOption.ShortName != null", span="204-204", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n84 [label="ArgumentParser.CompareShort(arg, helpOption.ShortName, caseSensitive)", span="206-206", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n86 [label="string.IsNullOrEmpty(helpOption.LongName)", span="211-211", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n87 [label="ArgumentParser.CompareLong(arg, helpOption.LongName, caseSensitive)", span="215-215", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n89 [label="return false;", span="220-220", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n85 [label="return true;", span="208-208", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n91 [label="Entry CommandLine.Internal.ArgumentParser.CompareShort(string, char?, bool)", span="94-94", cluster="CommandLine.Internal.ArgumentParser.CompareShort(string, char?, bool)"];
n88 [label="return true;", span="217-217", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n92 [label="Entry CommandLine.Internal.ArgumentParser.CompareLong(string, string, bool)", span="100-100", cluster="CommandLine.Internal.ArgumentParser.CompareLong(string, string, bool)"];
n90 [label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="199-199", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n93 [label="Entry CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", span="232-232", cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)"];
n94 [label="found = false", span="234-234", cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)"];
n95 [label="string.IsNullOrEmpty(verb)", span="235-235", cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)"];
n96 [label="return target;", span="237-237", cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)"];
n97 [label="var pair = ReflectionUtil.RetrieveOptionProperty<VerbOptionAttribute>(target, verb)", span="239-239", cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)"];
n99 [label="return found ? pair.Left.GetValue(target, null) : target;", span="241-241", cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)"];
n98 [label="found = pair != null", span="240-240", cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)"];
n101 [label="Entry CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="171-171", cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)"];
n100 [label="Exit CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", span="232-232", cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)"];
n102 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])"];
n103 [label="Entry CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", span="252-252", cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)"];
n104 [label="string.IsNullOrEmpty(verb) || (verb.Length > 0 && verb[0] == '-')", span="254-254", cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)"];
n108 [label="return string.Compare(_context.FirstArgument, verb, _settings.StringComparison) == 0;", span="262-262", cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)"];
n105 [label="return false;", span="256-256", cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)"];
n106 [label="!_context.HasAtLeastOneArgument()", span="258-258", cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)"];
n107 [label="return false;", span="260-260", cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)"];
n110 [label="Entry CommandLine.ParserContext.HasAtLeastOneArgument()", span="65-65", cluster="CommandLine.ParserContext.HasAtLeastOneArgument()"];
n109 [label="Exit CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", span="252-252", cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)"];
n111 [label="Entry string.Compare(string, string, System.StringComparison)", span="0-0", cluster="string.Compare(string, string, System.StringComparison)"];
n112 [label="var verbs = ReflectionUtil.RetrievePropertyList<VerbOptionAttribute>(context.Target)", span="267-267", cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)"];
n113 [label="var helpInfo = ReflectionUtil.RetrieveMethod<HelpVerbOptionAttribute>(context.Target)", span="268-268", cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)"];
n114 [label="context.HasNoArguments()", span="269-269", cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)"];
n116 [label="DisplayHelpVerbText(context.Target, helpInfo, null)", span="273-273", cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)"];
n118 [label="var optionMap = OptionMap.Create(context.Target, verbs, _settings)", span="277-277", cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)"];
n119 [label="TryParseHelpVerb(context.Arguments, context.Target, helpInfo, optionMap)", span="279-279", cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)"];
n121 [label="var verbOption = optionMap[context.FirstArgument]", span="284-284", cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)"];
n124 [label="DisplayHelpVerbText(context.Target, helpInfo, null)", span="290-290", cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)"];
n126 [label="verbOption.GetValue(context.Target) == null", span="294-294", cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)"];
n127 [label="verbOption.CreateInstance(context.Target)", span="297-297", cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)"];
n128 [label="var verbResult = DoParseArgumentsCore(context.ToCoreInstance(verbOption))", span="299-299", cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)"];
n130 [label="DisplayHelpVerbText(context.Target, helpInfo, context.FirstArgument)", span="303-303", cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)"];
n133 [label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38", cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)"];
n115 [label="helpInfo != null || _settings.HelpWriter != null", span="271-271", cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)"];
n123 [label="helpInfo != null", span="288-288", cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)"];
n134 [label="Entry CommandLine.ParserContext.HasNoArguments()", span="60-60", cluster="CommandLine.ParserContext.HasNoArguments()"];
n117 [label="return false;", span="275-275", cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)"];
n135 [label="Entry CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="336-336", cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)"];
n136 [label="Entry CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", span="94-94", cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)"];
n120 [label="return false;", span="282-282", cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)"];
n137 [label="Entry CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", span="308-308", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)"];
n122 [label="verbOption == null", span="286-286", cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)"];
n125 [label="return false;", span="292-292", cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)"];
n138 [label="Entry CommandLine.Internal.OptionInfo.GetValue(object)", span="240-240", cluster="CommandLine.Internal.OptionInfo.GetValue(object)"];
n139 [label="Entry CommandLine.Internal.OptionInfo.CreateInstance(object)", span="245-245", cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)"];
n129 [label="!verbResult", span="300-300", cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)"];
n140 [label="Entry CommandLine.ParserContext.ToCoreInstance(CommandLine.Internal.OptionInfo)", span="48-48", cluster="CommandLine.ParserContext.ToCoreInstance(CommandLine.Internal.OptionInfo)"];
n131 [label="return verbResult;", span="305-305", cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)"];
n132 [label="Exit CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", span="265-265", cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)"];
n141 [label="var helpWriter = _settings.HelpWriter", span="310-310", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)"];
n142 [label="helpInfo != null && helpWriter != null", span="311-311", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)"];
n143 [label="string.Compare(args[0], helpInfo.Right.LongName, _settings.StringComparison) == 0", span="313-313", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)"];
n144 [label="var verb = args.Length > 1 ? args[1] : null", span="316-316", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)"];
n146 [label="var verbOption = optionMap[verb]", span="319-319", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)"];
n148 [label="verbOption.GetValue(options) == null", span="322-322", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)"];
n149 [label="verbOption.CreateInstance(options)", span="325-325", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)"];
n150 [label="DisplayHelpVerbText(options, helpInfo, verb)", span="329-329", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)"];
n152 [label="return false;", span="333-333", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)"];
n145 [label="verb != null", span="317-317", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)"];
n147 [label="verbOption != null", span="320-320", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)"];
n151 [label="return true;", span="330-330", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)"];
n153 [label="Exit CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", span="308-308", cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)"];
n154 [label="string helpText", span="338-338", cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)"];
n155 [label="verb == null", span="339-339", cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)"];
n156 [label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, null, out helpText)", span="341-341", cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)"];
n157 [label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, verb, out helpText)", span="345-345", cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)"];
n158 [label="_settings.HelpWriter != null", span="347-347", cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)"];
n161 [label="Entry CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", span="85-85", cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)"];
n159 [label="_settings.HelpWriter.Write(helpText)", span="349-349", cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)"];
n160 [label="Exit CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="336-336", cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)"];
n162 [label="Entry CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", span="372-372", cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)"];
n163 [label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="374-374", cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)"];
n164 [label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="375-375", cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)"];
n165 [label="return DoParseArgumentsStrict(args, options, DefaultExitCodeFail);", span="377-377", cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)"];
n166 [label="Exit CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", span="372-372", cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)"];
n167 [label="Entry CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", span="449-449", cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)"];
n168 [label="Entry CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", span="392-392", cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)"];
n169 [label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="394-394", cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)"];
n170 [label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="395-395", cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)"];
n171 [label="return DoParseArgumentsStrict(args, options, exitCode);", span="397-397", cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)"];
n172 [label="Exit CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", span="392-392", cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)"];
n173 [label="Entry CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", span="414-414", cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)"];
n174 [label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="416-416", cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)"];
n175 [label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="417-417", cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)"];
n176 [label="_settings.HelpWriter = helpWriter", span="419-419", cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)"];
n177 [label="return DoParseArgumentsStrict(args, options, DefaultExitCodeFail);", span="421-421", cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)"];
n178 [label="Exit CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", span="414-414", cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)"];
n179 [label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", span="439-439", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)"];
n180 [label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="441-441", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)"];
n181 [label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="442-442", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)"];
n182 [label="_settings.HelpWriter = helpWriter", span="444-444", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)"];
n183 [label="return DoParseArgumentsStrict(args, options, exitCode);", span="446-446", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)"];
n184 [label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", span="439-439", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)"];
n185 [label="!DoParseArguments(args, options)", span="451-451", cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)"];
n186 [label="InvokeAutoBuildIfNeeded(options)", span="453-453", cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)"];
n187 [label="Environment.Exit(exitCode)", span="456-456", cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)"];
n188 [label="return true;", span="464-464", cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)"];
n190 [label="Entry CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", span="467-467", cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)"];
n191 [label="Entry System.Environment.Exit(int)", span="0-0", cluster="System.Environment.Exit(int)"];
n189 [label="Exit CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", span="449-449", cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)"];
n192 [label="_settings.HelpWriter == null ||\r\n                options.HasHelp() ||\r\n                options.HasVerbHelp()", span="469-471", cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)"];
n194 [label="_settings.HelpWriter.Write(HelpText.AutoBuild(options,\r\n                current => HelpText.DefaultParsingErrorsHandler(options, current), options.HasVerbs()))", span="477-478", cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)"];
n200 [label="HelpText.DefaultParsingErrorsHandler(options, current)", span="478-478", cluster="lambda expression"];
n193 [label="return;", span="473-473", cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)"];
n196 [label="Entry object.HasHelp()", span="38-38", cluster="object.HasHelp()"];
n197 [label="Entry object.HasVerbHelp()", span="43-43", cluster="object.HasVerbHelp()"];
n195 [label="Exit CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", span="467-467", cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)"];
n198 [label="Entry CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.ParsingErrorsHandler, bool)", span="209-209", cluster="CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.ParsingErrorsHandler, bool)"];
n199 [label="Entry lambda expression", span="478-478", cluster="lambda expression"];
n201 [label="Exit lambda expression", span="478-478", cluster="lambda expression"];
n202 [label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", span="248-248", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)"];
n203 [label="!options.CanReceiveParserState()", span="484-484", cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)"];
n205 [label="var property = ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(options)[0].Left", span="488-488", cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)"];
n206 [label="property.GetValue(options, null) == null", span="490-490", cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)"];
n207 [label="property.SetValue(options, new ParserState(), null)", span="493-493", cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)"];
n208 [label="var parserState = (IParserState) property.GetValue(options, null)", span="495-495", cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)"];
n209 [label=errors, span="496-496", cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)"];
n204 [label="return;", span="486-486", cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)"];
n212 [label="Entry object.CanReceiveParserState()", span="48-48", cluster="object.CanReceiveParserState()"];
n213 [label="Entry CommandLine.ParserState.ParserState()", span="39-39", cluster="CommandLine.ParserState.ParserState()"];
n214 [label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])"];
n210 [label="parserState.Errors.Add(error)", span="498-498", cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)"];
n211 [label="Exit CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="482-482", cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)"];
n215 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)"];
n216 [label="Entry CommandLine.CommandLineParser.Dispose()", span="505-505", cluster="CommandLine.CommandLineParser.Dispose()"];
n217 [label="Dispose(true)", span="507-507", cluster="CommandLine.CommandLineParser.Dispose()"];
n218 [label="GC.SuppressFinalize(this)", span="509-509", cluster="CommandLine.CommandLineParser.Dispose()"];
n220 [label="Entry CommandLine.CommandLineParser.Dispose(bool)", span="512-512", cluster="CommandLine.CommandLineParser.Dispose(bool)"];
n219 [label="Exit CommandLine.CommandLineParser.Dispose()", span="505-505", cluster="CommandLine.CommandLineParser.Dispose()"];
n221 [label="Entry System.GC.SuppressFinalize(object)", span="0-0", cluster="System.GC.SuppressFinalize(object)"];
n222 [label=_disposed, span="514-514", cluster="CommandLine.CommandLineParser.Dispose(bool)"];
n224 [label=disposing, span="518-518", cluster="CommandLine.CommandLineParser.Dispose(bool)"];
n223 [label="return;", span="516-516", cluster="CommandLine.CommandLineParser.Dispose(bool)"];
n225 [label="_settings != null", span="520-520", cluster="CommandLine.CommandLineParser.Dispose(bool)"];
n228 [label="Exit CommandLine.CommandLineParser.Dispose(bool)", span="512-512", cluster="CommandLine.CommandLineParser.Dispose(bool)"];
n226 [label="_settings.Dispose()", span="522-522", cluster="CommandLine.CommandLineParser.Dispose(bool)"];
n227 [label="_disposed = true", span="524-524", cluster="CommandLine.CommandLineParser.Dispose(bool)"];
n229 [label="Entry CommandLine.CommandLineParserSettings.Dispose()", span="163-163", cluster="CommandLine.CommandLineParserSettings.Dispose()"];
n230 [label="Entry CommandLine.CommandLineParser.~CommandLineParser()", span="531-531", cluster="CommandLine.CommandLineParser.~CommandLineParser()"];
n231 [label="Dispose(false)", span="533-533", cluster="CommandLine.CommandLineParser.~CommandLineParser()"];
n232 [label="Exit CommandLine.CommandLineParser.~CommandLineParser()", span="531-531", cluster="CommandLine.CommandLineParser.~CommandLineParser()"];
m2_9 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="PropertyWriter.cs"];
m2_11 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="PropertyWriter.cs"];
m2_13 [label="Entry CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="58-58", cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="PropertyWriter.cs"];
m2_21 [label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="38-38", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="PropertyWriter.cs"];
m2_22 [label="var expectedTokens = new[] { Token.Name(''x''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="41-42", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", color=green, community=0, file="PropertyWriter.cs"];
m2_23 [label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), ',', null, typeof(IEnumerable<string>), TargetType.Sequence, string.Empty, string.Empty, new List<string>())}", span="43-44", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", color=green, community=0, file="PropertyWriter.cs"];
m2_25 [label="Assert.True(expectedTokens.SequenceEqual(result.Value))", span="56-56", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", color=green, community=0, file="PropertyWriter.cs"];
m2_24 [label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    StatePair.Create(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''x''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture))", span="47-53", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", color=green, community=0, file="PropertyWriter.cs"];
m2_26 [label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="38-38", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="PropertyWriter.cs"];
m2_8 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, char, CommandLine.Infrastructure.Maybe<object>, System.Type, CommandLine.Core.TargetType, string, string, System.Collections.Generic.IEnumerable<string>)", span="18-18", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, char, CommandLine.Infrastructure.Maybe<object>, System.Type, CommandLine.Core.TargetType, string, string, System.Collections.Generic.IEnumerable<string>)", file="PropertyWriter.cs"];
m2_20 [label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16", cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="PropertyWriter.cs"];
m2_16 [label="Entry Unk.True", span="", cluster="Unk.True", file="PropertyWriter.cs"];
m2_0 [label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="14-14", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="PropertyWriter.cs"];
m2_1 [label="var expectedTokens = new[] { Token.Name(''i''), Token.Value(''10''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="17-18", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", color=green, community=0, file="PropertyWriter.cs"];
m2_2 [label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), ',', null, typeof(IEnumerable<string>), TargetType.Sequence, string.Empty, string.Empty, new List<string>())}", span="19-20", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", color=green, community=0, file="PropertyWriter.cs"];
m2_4 [label="Assert.True(expectedTokens.SequenceEqual(result.Value))", span="32-32", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", color=green, community=0, file="PropertyWriter.cs"];
m2_3 [label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    StatePair.Create(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''i''), Token.Value(''10''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture))", span="23-29", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", color=green, community=0, file="PropertyWriter.cs"];
m2_5 [label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="14-14", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="PropertyWriter.cs"];
m2_27 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="PropertyWriter.cs"];
m2_18 [label="NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="29-29", cluster="lambda expression", color=green, community=0, file="PropertyWriter.cs"];
m2_17 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="PropertyWriter.cs"];
m2_19 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="PropertyWriter.cs"];
m2_28 [label="NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="53-53", cluster="lambda expression", color=green, community=0, file="PropertyWriter.cs"];
m2_29 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="PropertyWriter.cs"];
m2_6 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="PropertyWriter.cs"];
m2_15 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual", file="PropertyWriter.cs"];
m2_14 [label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="44-44", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="PropertyWriter.cs"];
m2_12 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="PropertyWriter.cs"];
m2_7 [label="Entry CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="PropertyWriter.cs"];
m2_10 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="PropertyWriter.cs"];
m2_30 [label=specs, span="", file="PropertyWriter.cs"];
m2_31 [label=specs, span="", file="PropertyWriter.cs"];
m5_81 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="Target.cs"];
m5_60 [label="Entry Unk.FromJustOrFail", span="", cluster="Unk.FromJustOrFail", file="Target.cs"];
m5_74 [label="Entry NameInfo.cstr", span="", cluster="NameInfo.cstr", file="Target.cs"];
m5_4 [label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="24-24", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="Target.cs"];
m5_8 [label="return specProps =>\r\n            {\r\n                var options =\r\n                    from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Value.IsJust()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    select o;\r\n                var groups = from o in options\r\n                             group o by o.SetName into g\r\n                             select g;\r\n                if (groups.Count() > 1)\r\n                {\r\n                    return\r\n                        from o in options\r\n                        select new MutuallyExclusiveSetError(o.FromOptionSpecification(), o.SetName);\r\n                }\r\n                return Enumerable.Empty<Error>();\r\n            };", span="26-45", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", color=red, community=0, file="Target.cs"];
m5_9 [label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="24-24", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="Target.cs"];
m5_6 [label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="96-96", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="Target.cs"];
m5_40 [label="return specProps =>\r\n                {\r\n                    var options = specProps\r\n                        .Where(sp => sp.Specification.TargetType == TargetType.Sequence)\r\n                        .Where(sp => sp.Value.IsJust())\r\n                        .Where(sp =>\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJustOrFail()).Length < sp.Specification.Min.FromJustOrFail())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJustOrFail()).Length > sp.Specification.Max.FromJustOrFail())\r\n                        );\r\n                    if (options.Any())\r\n                    {\r\n                        return\r\n                            from s in options\r\n                            select new SequenceOutOfRangeError(s.Specification.FromSpecification());\r\n                    }\r\n                    return Enumerable.Empty<Error>();\r\n                };", span="98-114", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="Target.cs"];
m5_41 [label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="96-96", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="Target.cs"];
m5_38 [label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="316-316", cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="Target.cs"];
m5_20 [label="Entry MutuallyExclusiveSetError.cstr", span="", cluster="MutuallyExclusiveSetError.cstr", file="Target.cs"];
m5_49 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="Target.cs"];
m5_70 [label="Entry CommandLine.Core.Token.IsName()", span="128-128", cluster="CommandLine.Core.Token.IsName()", file="Target.cs"];
m5_37 [label="Entry CommandLine.Core.Specification.IsValue()", span="15-15", cluster="CommandLine.Core.Specification.IsValue()", file="Target.cs"];
m5_22 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="Target.cs"];
m5_33 [label="Entry Unk.IsNothing", span="", cluster="Unk.IsNothing", file="Target.cs"];
m5_48 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="Target.cs"];
m5_39 [label="Entry Unk.FromSpecification", span="", cluster="Unk.FromSpecification", file="Target.cs"];
m5_7 [label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="117-117", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="Target.cs"];
m5_61 [label="return specProps =>\r\n                {\r\n                    var specs = from sp in specProps\r\n                                where sp.Specification.IsOption()\r\n                                where sp.Value.IsJust()\r\n                                select (OptionSpecification)sp.Specification;\r\n                    var options = from t in tokens\r\n                                  where t.IsName()\r\n                                  join o in specs on t.Text equals o.UniqueName() into to\r\n                                  from o in to.DefaultIfEmpty()\r\n                                  where o != null\r\n                                  select new { o.ShortName, o.LongName };\r\n                    var groups = from x in options\r\n                                 group x by x into g\r\n                                 let count = g.Count()\r\n                                 select new { Value = g.Key, Count = count };\r\n                    var errors = from y in groups\r\n                                 where y.Count > 1\r\n                                 select new RepeatedOptionError(new NameInfo(y.Value.ShortName, y.Value.LongName));\r\n                    return errors;\r\n                };", span="119-139", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="Target.cs"];
m5_62 [label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="117-117", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="Target.cs"];
m5_50 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="360-360", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="Target.cs"];
m5_80 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Target.cs"];
m5_0 [label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12", cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="Target.cs"];
m5_1 [label="return new List<Func<IEnumerable<SpecificationProperty>, IEnumerable<Error>>>\r\n                {\r\n                    EnforceMutuallyExclusiveSet(),\r\n                    EnforceRequired(),\r\n                    EnforceRange(),\r\n                    EnforceSingle(tokens)\r\n                };", span="15-21", cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="Target.cs"];
m5_2 [label="Exit CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12", cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="Target.cs"];
m5_63 [label="Entry lambda expression", span="119-139", cluster="lambda expression", file="Target.cs"];
m5_11 [label="var options =\r\n                    from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Value.IsJust()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    select o", span="28-34", cluster="lambda expression", color=red, community=0, file="Target.cs"];
m5_10 [label="Entry lambda expression", span="26-45", cluster="lambda expression", file="Target.cs"];
m5_12 [label="var groups = from o in options\r\n                             group o by o.SetName into g\r\n                             select g", span="35-37", cluster="lambda expression", color=red, community=0, file="Target.cs"];
m5_14 [label="return\r\n                        from o in options\r\n                        select new MutuallyExclusiveSetError(o.FromOptionSpecification(), o.SetName);", span="40-42", cluster="lambda expression", color=red, community=0, file="Target.cs"];
m5_13 [label="groups.Count() > 1", span="38-38", cluster="lambda expression", color=red, community=0, file="Target.cs"];
m5_15 [label="return Enumerable.Empty<Error>();", span="44-44", cluster="lambda expression", color=red, community=0, file="Target.cs"];
m5_16 [label="Exit lambda expression", span="26-45", cluster="lambda expression", file="Target.cs"];
m5_26 [label="var requiredWithValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsJust()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    select sp.Specification", span="52-58", cluster="lambda expression", color=red, community=0, file="Target.cs"];
m5_28 [label="var requiredWithoutValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsNothing()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    where setWithRequiredValue.ContainsIfNotEmpty(o.SetName)\r\n                    select sp.Specification", span="65-72", cluster="lambda expression", file="Target.cs"];
m5_29 [label="var missing =\r\n                    requiredWithoutValue\r\n                        .Except(requiredWithValue)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsOption()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            let o = (OptionSpecification)sp.Specification\r\n                            where o.SetName.Length == 0\r\n                            select sp.Specification)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsValue()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            select sp.Specification)", span="73-89", cluster="lambda expression", file="Target.cs"];
m5_25 [label="Entry lambda expression", span="50-93", cluster="lambda expression", file="Target.cs"];
m5_27 [label="var setWithRequiredValue = (\r\n                    from s in requiredWithValue\r\n                    let o = (OptionSpecification)s\r\n                    where o.SetName.Length > 0\r\n                    select o.SetName)\r\n                        .Distinct()", span="59-64", cluster="lambda expression", color=red, community=0, file="Target.cs"];
m5_30 [label="return\r\n                    from sp in missing\r\n                    select new MissingRequiredOptionError(sp.FromSpecification());", span="90-92", cluster="lambda expression", file="Target.cs"];
m5_31 [label="Exit lambda expression", span="50-93", cluster="lambda expression", file="Target.cs"];
m5_43 [label="var options = specProps\r\n                        .Where(sp => sp.Specification.TargetType == TargetType.Sequence)\r\n                        .Where(sp => sp.Value.IsJust())\r\n                        .Where(sp =>\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJustOrFail()).Length < sp.Specification.Min.FromJustOrFail())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJustOrFail()).Length > sp.Specification.Max.FromJustOrFail())\r\n                        )", span="100-106", cluster="lambda expression", file="Target.cs"];
m5_42 [label="Entry lambda expression", span="98-114", cluster="lambda expression", file="Target.cs"];
m5_44 [label="options.Any()", span="107-107", cluster="lambda expression", file="Target.cs"];
m5_51 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="Target.cs"];
m5_54 [label="Entry lambda expression", span="102-102", cluster="lambda expression", file="Target.cs"];
m5_57 [label="Entry lambda expression", span="103-105", cluster="lambda expression", file="Target.cs"];
m5_45 [label="return\r\n                            from s in options\r\n                            select new SequenceOutOfRangeError(s.Specification.FromSpecification());", span="109-111", cluster="lambda expression", file="Target.cs"];
m5_46 [label="return Enumerable.Empty<Error>();", span="113-113", cluster="lambda expression", file="Target.cs"];
m5_47 [label="Exit lambda expression", span="98-114", cluster="lambda expression", file="Target.cs"];
m5_52 [label="sp.Specification.TargetType == TargetType.Sequence", span="101-101", cluster="lambda expression", file="Target.cs"];
m5_53 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="Target.cs"];
m5_55 [label="sp.Value.IsJust()", span="102-102", cluster="lambda expression", file="Target.cs"];
m5_56 [label="Exit lambda expression", span="102-102", cluster="lambda expression", file="Target.cs"];
m5_58 [label="(sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJustOrFail()).Length < sp.Specification.Min.FromJustOrFail())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJustOrFail()).Length > sp.Specification.Max.FromJustOrFail())", span="104-105", cluster="lambda expression", file="Target.cs"];
m5_59 [label="Exit lambda expression", span="103-105", cluster="lambda expression", file="Target.cs"];
m5_65 [label="var options = from t in tokens\r\n                                  where t.IsName()\r\n                                  join o in specs on t.Text equals o.UniqueName() into to\r\n                                  from o in to.DefaultIfEmpty()\r\n                                  where o != null\r\n                                  select new { o.ShortName, o.LongName }", span="125-130", cluster="lambda expression", file="Target.cs"];
m5_64 [label="var specs = from sp in specProps\r\n                                where sp.Specification.IsOption()\r\n                                where sp.Value.IsJust()\r\n                                select (OptionSpecification)sp.Specification", span="121-124", cluster="lambda expression", file="Target.cs"];
m5_66 [label="var groups = from x in options\r\n                                 group x by x into g\r\n                                 let count = g.Count()\r\n                                 select new { Value = g.Key, Count = count }", span="131-134", cluster="lambda expression", file="Target.cs"];
m5_67 [label="var errors = from y in groups\r\n                                 where y.Count > 1\r\n                                 select new RepeatedOptionError(new NameInfo(y.Value.ShortName, y.Value.LongName))", span="135-137", cluster="lambda expression", file="Target.cs"];
m5_68 [label="return errors;", span="138-138", cluster="lambda expression", file="Target.cs"];
m5_69 [label="Exit lambda expression", span="119-139", cluster="lambda expression", file="Target.cs"];
m5_73 [label="Entry CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", span="371-371", cluster="CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", file="Target.cs"];
m5_36 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="Target.cs"];
m5_5 [label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="48-48", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="Target.cs"];
m5_23 [label="return specProps =>\r\n            {\r\n                var requiredWithValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsJust()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    select sp.Specification;\r\n                var setWithRequiredValue = (\r\n                    from s in requiredWithValue\r\n                    let o = (OptionSpecification)s\r\n                    where o.SetName.Length > 0\r\n                    select o.SetName)\r\n                        .Distinct();\r\n                var requiredWithoutValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsNothing()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    where setWithRequiredValue.ContainsIfNotEmpty(o.SetName)\r\n                    select sp.Specification;\r\n                var missing =\r\n                    requiredWithoutValue\r\n                        .Except(requiredWithValue)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsOption()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            let o = (OptionSpecification)sp.Specification\r\n                            where o.SetName.Length == 0\r\n                            select sp.Specification)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsValue()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            select sp.Specification);\r\n                return\r\n                    from sp in missing\r\n                    select new MissingRequiredOptionError(sp.FromSpecification());\r\n            };", span="50-93", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", color=red, community=0, file="Target.cs"];
m5_24 [label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="48-48", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="Target.cs"];
m5_18 [label="Entry Unk.IsJust", span="", cluster="Unk.IsJust", file="Target.cs"];
m5_34 [label="Entry Unk.ContainsIfNotEmpty", span="", cluster="Unk.ContainsIfNotEmpty", file="Target.cs"];
m5_71 [label="Entry Unk.UniqueName", span="", cluster="Unk.UniqueName", file="Target.cs"];
m5_35 [label="Entry Unk.Except", span="", cluster="Unk.Except", file="Target.cs"];
m5_72 [label="Entry Unk.DefaultIfEmpty", span="", cluster="Unk.DefaultIfEmpty", file="Target.cs"];
m5_17 [label="Entry CommandLine.Core.Specification.IsOption()", span="10-10", cluster="CommandLine.Core.Specification.IsOption()", file="Target.cs"];
m5_75 [label="Entry CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", span="142-142", cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="Target.cs"];
m5_76 [label="sequence.Any()", span="144-144", cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="Target.cs"];
m5_77 [label="return sequence.Contains(value);", span="146-146", cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="Target.cs"];
m5_78 [label="return true;", span="148-148", cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="Target.cs"];
m5_79 [label="Exit CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", span="142-142", cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="Target.cs"];
m5_3 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="Target.cs"];
m5_32 [label="Entry Unk.Distinct", span="", cluster="Unk.Distinct", file="Target.cs"];
m5_19 [label="Entry Unk.Count", span="", cluster="Unk.Count", file="Target.cs"];
m5_21 [label="Entry Unk.FromOptionSpecification", span="", cluster="Unk.FromOptionSpecification", file="Target.cs"];
m5_82 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span="", file="Target.cs"];
m6_17 [label="Entry CommandLine.Internal.ValueMapper.ValueMapper(object)", span="43-43", cluster="CommandLine.Internal.ValueMapper.ValueMapper(object)", file="TargetExtensions.cs"];
m6_14 [label="Entry CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", span="56-56", cluster="CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", file="TargetExtensions.cs"];
m6_15 [label="return new ValueMapper(target);", span="58-58", cluster="CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", color=green, community=0, file="TargetExtensions.cs"];
m6_16 [label="Exit CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", span="56-56", cluster="CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", file="TargetExtensions.cs"];
m7_4 [label="Entry CommandLine.Parser.FormatCommandLine<T>(T)", span="17-17", cluster="CommandLine.Parser.FormatCommandLine<T>(T)", file="ValueListAttribute.cs"];
m7_0 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", span="21-21", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", file="ValueListAttribute.cs"];
m7_1 [label="new Parser()\r                .FormatCommandLine(options)\r                .ShouldBeEquivalentTo(result)", span="23-25", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", file="ValueListAttribute.cs"];
m7_2 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", span="21-21", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", file="ValueListAttribute.cs"];
m7_5 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="ValueListAttribute.cs"];
m7_3 [label="Entry CommandLine.Parser.Parser()", span="26-26", cluster="CommandLine.Parser.Parser()", file="ValueListAttribute.cs"];
m8_43 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="ValueListAttributeParsingFixture.cs"];
m8_12 [label="Entry CSharpx.Just<T>.Just(T)", span="58-58", cluster="CSharpx.Just<T>.Just(T)", file="ValueListAttributeParsingFixture.cs"];
m8_13 [label="this.value = value", span="61-61", cluster="CSharpx.Just<T>.Just(T)", file="ValueListAttributeParsingFixture.cs"];
m8_14 [label="Exit CSharpx.Just<T>.Just(T)", span="58-58", cluster="CSharpx.Just<T>.Just(T)", file="ValueListAttributeParsingFixture.cs"];
m8_29 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="ValueListAttributeParsingFixture.cs"];
m8_65 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="ValueListAttributeParsingFixture.cs"];
m8_51 [label="Entry CSharpx.Maybe<T1>.Bind<T1, T2>(System.Func<T1, CSharpx.Maybe<T2>>)", span="110-110", cluster="CSharpx.Maybe<T1>.Bind<T1, T2>(System.Func<T1, CSharpx.Maybe<T2>>)", file="ValueListAttributeParsingFixture.cs"];
m8_44 [label="Entry CSharpx.MaybeExtensions.Select<TSource, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, TResult>)", span="143-143", cluster="CSharpx.MaybeExtensions.Select<TSource, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, TResult>)", file="ValueListAttributeParsingFixture.cs"];
m8_45 [label="return maybe.Map(selector);", span="146-146", cluster="CSharpx.MaybeExtensions.Select<TSource, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, TResult>)", file="ValueListAttributeParsingFixture.cs"];
m8_46 [label="Exit CSharpx.MaybeExtensions.Select<TSource, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, TResult>)", span="143-143", cluster="CSharpx.MaybeExtensions.Select<TSource, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, TResult>)", file="ValueListAttributeParsingFixture.cs"];
m8_47 [label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="118-118", cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", file="ValueListAttributeParsingFixture.cs"];
m8_34 [label="Entry CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", span="126-126", cluster="CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="ValueListAttributeParsingFixture.cs"];
m8_35 [label="T1 value1", span="128-128", cluster="CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="ValueListAttributeParsingFixture.cs"];
m8_36 [label="return maybe.MatchJust(out value1)\r\n                ? func(value1)\r\n                : noneValue;", span="129-131", cluster="CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="ValueListAttributeParsingFixture.cs"];
m8_37 [label="Exit CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", span="126-126", cluster="CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="ValueListAttributeParsingFixture.cs"];
m8_59 [label="Entry CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", span="160-160", cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="ValueListAttributeParsingFixture.cs"];
m8_60 [label="T value", span="162-162", cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="ValueListAttributeParsingFixture.cs"];
m8_61 [label="maybe.MatchJust(out value)", span="163-163", cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="ValueListAttributeParsingFixture.cs"];
m8_63 [label="throw exceptionToThrow ?? new ArgumentException(''Value empty.'');", span="167-167", cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="ValueListAttributeParsingFixture.cs"];
m8_62 [label="return value;", span="165-165", cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="ValueListAttributeParsingFixture.cs"];
m8_64 [label="Exit CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", span="160-160", cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="ValueListAttributeParsingFixture.cs"];
m8_18 [label="Entry CSharpx.Maybe.Just<T>(T)", span="80-80", cluster="CSharpx.Maybe.Just<T>(T)", file="ValueListAttributeParsingFixture.cs"];
m8_19 [label="return new Just<T>(value);", span="82-82", cluster="CSharpx.Maybe.Just<T>(T)", file="ValueListAttributeParsingFixture.cs"];
m8_20 [label="Exit CSharpx.Maybe.Just<T>(T)", span="80-80", cluster="CSharpx.Maybe.Just<T>(T)", file="ValueListAttributeParsingFixture.cs"];
m8_55 [label="Entry lambda expression", span="157-157", cluster="lambda expression", file="ValueListAttributeParsingFixture.cs"];
m8_53 [label="valueSelector(sourceValue)\r\n                    .Map(\r\n                        resultValue => resultSelector(sourceValue, resultValue))", span="155-157", cluster="lambda expression", file="ValueListAttributeParsingFixture.cs"];
m8_56 [label="resultSelector(sourceValue, resultValue)", span="157-157", cluster="lambda expression", file="ValueListAttributeParsingFixture.cs"];
m8_52 [label="Entry lambda expression", span="155-157", cluster="lambda expression", file="ValueListAttributeParsingFixture.cs"];
m8_54 [label="Exit lambda expression", span="155-157", cluster="lambda expression", file="ValueListAttributeParsingFixture.cs"];
m8_57 [label="Exit lambda expression", span="157-157", cluster="lambda expression", file="ValueListAttributeParsingFixture.cs"];
m8_69 [label="Entry CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", span="175-175", cluster="CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", file="ValueListAttributeParsingFixture.cs"];
m8_70 [label="return maybe.Tag == MaybeType.Just;", span="177-177", cluster="CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", file="ValueListAttributeParsingFixture.cs"];
m8_71 [label="Exit CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", span="175-175", cluster="CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", file="ValueListAttributeParsingFixture.cs"];
m8_25 [label="Entry CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", span="110-110", cluster="CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", file="ValueListAttributeParsingFixture.cs"];
m8_26 [label="T1 value1", span="112-112", cluster="CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", file="ValueListAttributeParsingFixture.cs"];
m8_27 [label="return maybe.MatchJust(out value1)\r\n                ? func(value1)\r\n                : Maybe.Nothing<T2>();", span="113-115", cluster="CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", file="ValueListAttributeParsingFixture.cs"];
m8_28 [label="Exit CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", span="110-110", cluster="CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", file="ValueListAttributeParsingFixture.cs"];
m8_66 [label="Entry CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", span="170-170", cluster="CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", file="ValueListAttributeParsingFixture.cs"];
m8_67 [label="return maybe.Tag == MaybeType.Nothing;", span="172-172", cluster="CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", file="ValueListAttributeParsingFixture.cs"];
m8_68 [label="Exit CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", span="170-170", cluster="CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", file="ValueListAttributeParsingFixture.cs"];
m8_15 [label="Entry CSharpx.Maybe.Nothing<T>()", span="75-75", cluster="CSharpx.Maybe.Nothing<T>()", file="ValueListAttributeParsingFixture.cs"];
m8_16 [label="return new Nothing<T>();", span="77-77", cluster="CSharpx.Maybe.Nothing<T>()", file="ValueListAttributeParsingFixture.cs"];
m8_17 [label="Exit CSharpx.Maybe.Nothing<T>()", span="75-75", cluster="CSharpx.Maybe.Nothing<T>()", file="ValueListAttributeParsingFixture.cs"];
m8_3 [label="Entry CSharpx.Maybe<T>.MatchNothing()", span="29-29", cluster="CSharpx.Maybe<T>.MatchNothing()", file="ValueListAttributeParsingFixture.cs"];
m8_4 [label="return Tag == MaybeType.Nothing;", span="31-31", cluster="CSharpx.Maybe<T>.MatchNothing()", file="ValueListAttributeParsingFixture.cs"];
m8_5 [label="Exit CSharpx.Maybe<T>.MatchNothing()", span="29-29", cluster="CSharpx.Maybe<T>.MatchNothing()", file="ValueListAttributeParsingFixture.cs"];
m8_24 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)", file="ValueListAttributeParsingFixture.cs"];
m8_10 [label="Entry CSharpx.Nothing<T>.Nothing()", span="48-48", cluster="CSharpx.Nothing<T>.Nothing()", file="ValueListAttributeParsingFixture.cs"];
m8_11 [label="Exit CSharpx.Nothing<T>.Nothing()", span="48-48", cluster="CSharpx.Nothing<T>.Nothing()", file="ValueListAttributeParsingFixture.cs"];
m8_38 [label="Entry CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", span="134-134", cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="ValueListAttributeParsingFixture.cs"];
m8_39 [label="T value", span="136-136", cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="ValueListAttributeParsingFixture.cs"];
m8_40 [label="maybe.MatchJust(out value)", span="137-137", cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="ValueListAttributeParsingFixture.cs"];
m8_41 [label="action(value)", span="139-139", cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="ValueListAttributeParsingFixture.cs"];
m8_42 [label="Exit CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", span="134-134", cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="ValueListAttributeParsingFixture.cs"];
m8_48 [label="Entry CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", span="149-149", cluster="CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", file="ValueListAttributeParsingFixture.cs"];
m8_49 [label="return maybe.Bind(\r\n                sourceValue => valueSelector(sourceValue)\r\n                    .Map(\r\n                        resultValue => resultSelector(sourceValue, resultValue)));", span="154-157", cluster="CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", file="ValueListAttributeParsingFixture.cs"];
m8_50 [label="Exit CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", span="149-149", cluster="CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", file="ValueListAttributeParsingFixture.cs"];
m8_0 [label="Entry CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", span="19-19", cluster="CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", file="ValueListAttributeParsingFixture.cs"];
m8_1 [label="this.tag = tag", span="21-21", cluster="CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", file="ValueListAttributeParsingFixture.cs"];
m8_2 [label="Exit CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", span="19-19", cluster="CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", file="ValueListAttributeParsingFixture.cs"];
m8_21 [label="Entry CSharpx.MaybeExtensions.ToMaybe<T>(T)", span="105-105", cluster="CSharpx.MaybeExtensions.ToMaybe<T>(T)", file="ValueListAttributeParsingFixture.cs"];
m8_22 [label="return Equals(value, default(T)) ? Maybe.Nothing<T>() : Maybe.Just(value);", span="107-107", cluster="CSharpx.MaybeExtensions.ToMaybe<T>(T)", file="ValueListAttributeParsingFixture.cs"];
m8_23 [label="Exit CSharpx.MaybeExtensions.ToMaybe<T>(T)", span="105-105", cluster="CSharpx.MaybeExtensions.ToMaybe<T>(T)", file="ValueListAttributeParsingFixture.cs"];
m8_58 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="ValueListAttributeParsingFixture.cs"];
m8_30 [label="Entry CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", span="118-118", cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="ValueListAttributeParsingFixture.cs"];
m8_31 [label="T1 value1", span="120-120", cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="ValueListAttributeParsingFixture.cs"];
m8_32 [label="return maybe.MatchJust(out value1)\r\n                ? Maybe.Just(func(value1))\r\n                : Maybe.Nothing<T2>();", span="121-123", cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="ValueListAttributeParsingFixture.cs"];
m8_33 [label="Exit CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", span="118-118", cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="ValueListAttributeParsingFixture.cs"];
m8_6 [label="Entry CSharpx.Maybe<T>.MatchJust(out T)", span="34-34", cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="ValueListAttributeParsingFixture.cs"];
m8_7 [label="value = Tag == MaybeType.Just\r\n                ? ((Just<T>)this).Value\r\n                : default(T)", span="36-38", cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="ValueListAttributeParsingFixture.cs"];
m8_8 [label="return Tag == MaybeType.Just;", span="39-39", cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="ValueListAttributeParsingFixture.cs"];
m8_9 [label="Exit CSharpx.Maybe<T>.MatchJust(out T)", span="34-34", cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="ValueListAttributeParsingFixture.cs"];
m8_72 [label="CSharpx.Maybe<T>", span="", file="ValueListAttributeParsingFixture.cs"];
m8_73 [label="CSharpx.Just<T>", span="", file="ValueListAttributeParsingFixture.cs"];
m8_74 [label="System.Func<TSource, CSharpx.Maybe<TValue>>", span="", file="ValueListAttributeParsingFixture.cs"];
m8_75 [label="System.Func<TSource, TValue, TResult>", span="", file="ValueListAttributeParsingFixture.cs"];
m8_76 [label=TSource, span="", file="ValueListAttributeParsingFixture.cs"];
m9_0 [label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="49-49", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueMapper.cs"];
m9_1 [label="concreteType == null", span="52-52", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="ValueMapper.cs"];
m9_2 [label="throw new ArgumentNullException(''concreteType'');", span="54-54", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="ValueMapper.cs"];
m9_3 [label="!typeof(IList<string>).IsAssignableFrom(concreteType)", span="57-57", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="ValueMapper.cs"];
m9_4 [label="throw new ParserException(SR.CommandLineParserException_IncompatibleTypes);", span="59-59", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="ValueMapper.cs"];
m9_5 [label="_concreteType = concreteType", span="62-62", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="ValueMapper.cs"];
m9_6 [label="Exit CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="49-49", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueMapper.cs"];
m9_25 [label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="99-99", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueMapper.cs"];
m9_26 [label="var list = ReflectionHelper.RetrievePropertyList<ValueListAttribute>(target)", span="101-101", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueMapper.cs"];
m9_28 [label="return null;", span="104-104", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueMapper.cs"];
m9_30 [label="throw new InvalidOperationException();", span="109-109", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueMapper.cs"];
m9_32 [label="return pairZero.Right;", span="113-113", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueMapper.cs"];
m9_27 [label="list == null || list.Count == 0", span="102-102", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueMapper.cs"];
m9_29 [label="list.Count > 1", span="107-107", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueMapper.cs"];
m9_31 [label="var pairZero = list[0]", span="112-112", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueMapper.cs"];
m9_33 [label="Exit CommandLine.ValueListAttribute.GetAttribute(object)", span="99-99", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueMapper.cs"];
m9_9 [label="Entry CommandLine.ParserException.ParserException(string)", span="49-49", cluster="CommandLine.ParserException.ParserException(string)", file="ValueMapper.cs"];
m9_13 [label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="85-85", cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueMapper.cs"];
m9_14 [label="Type concreteType", span="87-87", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="ValueMapper.cs"];
m9_15 [label="var property = GetProperty(target, out concreteType)", span="88-88", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="ValueMapper.cs"];
m9_16 [label="property == null || concreteType == null", span="89-89", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="ValueMapper.cs"];
m9_18 [label="property.SetValue(target, Activator.CreateInstance(concreteType), null)", span="94-94", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="ValueMapper.cs"];
m9_19 [label="return (IList<string>)property.GetValue(target, null);", span="96-96", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="ValueMapper.cs"];
m9_17 [label="return null;", span="91-91", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="ValueMapper.cs"];
m9_20 [label="Exit CommandLine.ValueListAttribute.GetReference(object)", span="85-85", cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueMapper.cs"];
m9_21 [label="Entry CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="116-116", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueMapper.cs"];
m9_36 [label="concreteType = null", span="118-118", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueMapper.cs"];
m9_37 [label="var list = ReflectionHelper.RetrievePropertyList<ValueListAttribute>(target)", span="119-119", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueMapper.cs"];
m9_39 [label="return null;", span="122-122", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueMapper.cs"];
m9_41 [label="throw new InvalidOperationException();", span="127-127", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueMapper.cs"];
m9_43 [label="concreteType = pairZero.Right.ConcreteType", span="131-131", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueMapper.cs"];
m9_44 [label="return pairZero.Left;", span="132-132", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueMapper.cs"];
m9_38 [label="list == null || list.Count == 0", span="120-120", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueMapper.cs"];
m9_40 [label="list.Count > 1", span="125-125", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueMapper.cs"];
m9_42 [label="var pairZero = list[0]", span="130-130", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueMapper.cs"];
m9_45 [label="Exit CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="116-116", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueMapper.cs"];
m9_10 [label="Entry CommandLine.ValueListAttribute.ValueListAttribute()", span="65-65", cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="ValueMapper.cs"];
m9_11 [label="MaximumElements = -1", span="67-67", cluster="CommandLine.ValueListAttribute.ValueListAttribute()", color=green, community=0, file="ValueMapper.cs"];
m9_12 [label="Exit CommandLine.ValueListAttribute.ValueListAttribute()", span="65-65", cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="ValueMapper.cs"];
m9_22 [label="Entry System.Activator.CreateInstance(System.Type)", span="0-0", cluster="System.Activator.CreateInstance(System.Type)", file="ValueMapper.cs"];
m9_34 [label="Entry CommandLine.Infrastructure.ReflectionHelper.RetrievePropertyList<TAttribute>(object)", span="46-46", cluster="CommandLine.Infrastructure.ReflectionHelper.RetrievePropertyList<TAttribute>(object)", file="ValueMapper.cs"];
m9_7 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ValueMapper.cs"];
m9_8 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="ValueMapper.cs"];
m9_24 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="ValueMapper.cs"];
m9_35 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="ValueMapper.cs"];
m9_46 [label="CommandLine.ValueListAttribute", span="", file="ValueMapper.cs"];
n233 -> n1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n10  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n16  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n22  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n23  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n26  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n27  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n29  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n35  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n43  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n49  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n56  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n81  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n106  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n108  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n115  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n116  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n118  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n119  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n124  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n128  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n130  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n141  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n143  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n150  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n158  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n159  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n165  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n171  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n176  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n177  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n182  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n183  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n185  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n186  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n192  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n194  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n217  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n218  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n222  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n225  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n226  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n227  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n233 -> n231  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n234 -> n200  [key=1, style=dashed, color=darkseagreen4, label=object];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n2 -> n0  [key=0, style=bold, color=blue];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=2, style=dotted];
n6 -> n4  [key=0, style=bold, color=blue];
n8 -> n9  [key=0, style=solid];
n8 -> n10  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParserSettings"];
n9 -> n10  [key=0, style=solid];
n9 -> n12  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n11 -> n8  [key=0, style=bold, color=blue];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=1, style=dashed, color=darkseagreen4, label=object];
n13 -> n16  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
n13 -> n18  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseArguments"];
n14 -> n15  [key=0, style=solid];
n14 -> n12  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n12  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=2, style=dotted];
n17 -> n13  [key=0, style=bold, color=blue];
n18 -> n25  [key=0, style=solid];
n18 -> n27  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
n18 -> n29  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
n18 -> n31  [key=1, style=dashed, color=darkseagreen4, label=object];
n18 -> n13  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n18 -> n19  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n18 -> n167  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n18 -> n33  [key=3, color=darkorchid, style=bold, label="method methodReturn bool DoParseArguments"];
n18 -> n34  [key=3, color=darkorchid, style=bold, label="method methodReturn bool DoParseArguments"];
n18 -> n40  [key=3, color=darkorchid, style=bold, label="method methodReturn bool DoParseArguments"];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [key=1, style=dashed, color=darkseagreen4, label=object];
n19 -> n22  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
n19 -> n23  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
n19 -> n18  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseArguments"];
n20 -> n21  [key=0, style=solid];
n20 -> n12  [key=2, style=dotted];
n21 -> n22  [key=0, style=solid];
n21 -> n12  [key=2, style=dotted];
n22 -> n23  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n23 -> n18  [key=2, style=dotted];
n24 -> n19  [key=0, style=bold, color=blue];
n25 -> n26  [key=0, style=solid];
n25 -> n37  [key=2, style=dotted];
n25 -> n28  [key=1, style=dashed, color=darkseagreen4, label=pair];
n25 -> n29  [key=1, style=dashed, color=darkseagreen4, label=pair];
n25 -> n31  [key=1, style=dashed, color=darkseagreen4, label=pair];
n27 -> n28  [key=0, style=solid];
n27 -> n38  [key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n29 -> n34  [key=0, style=solid];
n29 -> n39  [key=2, style=dotted];
n29 -> n40  [key=2, style=dotted];
n31 -> n32  [key=0, style=solid];
n31 -> n41  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n26 -> n28  [key=1, style=dashed, color=darkseagreen4, label=helpWriter];
n26 -> n32  [key=1, style=dashed, color=darkseagreen4, label=helpWriter];
n28 -> n29  [key=0, style=solid];
n28 -> n35  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n32 -> n42  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n40  [key=2, style=dotted];
n30 -> n31  [key=0, style=solid];
n34 -> n36  [key=0, style=solid];
n39 -> n81  [key=0, style=solid];
n39 -> n82  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
n39 -> n83  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpOptionAttribute"];
n39 -> n84  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpOptionAttribute"];
n39 -> n86  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpOptionAttribute"];
n39 -> n87  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpOptionAttribute"];
n39 -> n18  [key=3, color=darkorchid, style=bold, label="Parameter variable string[] args"];
n39 -> n34  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseHelp"];
n39 -> n33  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseHelp"];
n40 -> n43  [key=0, style=solid];
n33 -> n36  [key=0, style=solid];
n36 -> n18  [key=0, style=bold, color=blue];
n43 -> n44  [key=0, style=solid];
n43 -> n45  [key=2, style=dotted];
n43 -> n46  [key=2, style=dotted];
n43 -> n47  [key=2, style=dotted];
n44 -> n40  [key=0, style=bold, color=blue];
n46 -> n112  [key=0, style=solid];
n46 -> n113  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserContext"];
n46 -> n114  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserContext"];
n46 -> n116  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserContext"];
n46 -> n118  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserContext"];
n46 -> n119  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserContext"];
n46 -> n121  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserContext"];
n46 -> n124  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserContext"];
n46 -> n126  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserContext"];
n46 -> n127  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserContext"];
n46 -> n128  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserContext"];
n46 -> n130  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserContext"];
n46 -> n40  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.ParserContext context"];
n46 -> n33  [key=3, color=darkorchid, style=bold, label="method methodReturn bool DoParseArgumentsVerbs"];
n47 -> n48  [key=0, style=solid, color=red];
n47 -> n49  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserContext"];
n47 -> n51  [key=1, style=dashed, color=red, label="CommandLine.ParserContext"];
n47 -> n52  [key=1, style=dashed, color=red, label="CommandLine.ParserContext"];
n47 -> n58  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserContext"];
n47 -> n60  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserContext"];
n47 -> n40  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.ParserContext context"];
n48 -> n49  [key=0, style=solid, color=red];
n48 -> n67  [key=1, style=dashed, color=red, label=hadError];
n48 -> n33  [key=3, color=red, style=bold, label="Local variable bool hadError"];
n49 -> n50  [key=0, style=solid];
n49 -> n70  [key=2, style=dotted];
n49 -> n58  [key=1, style=dashed, color=darkseagreen4, label=optionMap];
n49 -> n67  [key=1, style=dashed, color=darkseagreen4, label=optionMap];
n51 -> n52  [key=0, style=solid, color=red];
n51 -> n72  [key=2, style=dotted, color=red];
n51 -> n64  [key=1, style=dashed, color=red, label=target];
n51 -> n65  [key=1, style=dashed, color=red, label=target];
n52 -> n53  [key=0, style=solid, color=red];
n52 -> n73  [key=2, style=dotted, color=red];
n52 -> n54  [key=1, style=dashed, color=red, label=arguments];
n52 -> n58  [key=1, style=dashed, color=red, label=arguments];
n52 -> n63  [key=1, style=dashed, color=red, label=arguments];
n58 -> n59  [key=0, style=solid];
n58 -> n77  [key=2, style=dotted];
n58 -> n62  [key=1, style=dashed, color=darkseagreen4, label=result];
n60 -> n61  [key=0, style=solid];
n60 -> n78  [key=2, style=dotted];
n67 -> n68  [key=0, style=solid];
n67 -> n80  [key=2, style=dotted];
n67 -> n67  [key=1, style=dashed, color=darkseagreen4, label=hadError];
n50 -> n51  [key=0, style=solid, color=red];
n50 -> n71  [key=2, style=dotted];
n64 -> n65  [key=0, style=solid, color=red];
n64 -> n53  [key=0, style=solid, color=red];
n65 -> n66  [key=0, style=solid, color=red];
n65 -> n53  [key=0, style=solid, color=red];
n65 -> n79  [key=2, style=dotted, color=red];
n53 -> n54  [key=0, style=solid];
n53 -> n67  [key=0, style=solid];
n53 -> n74  [key=2, style=dotted];
n54 -> n55  [key=0, style=solid];
n54 -> n56  [key=1, style=dashed, color=darkseagreen4, label=argument];
n54 -> n65  [key=1, style=dashed, color=red, label=argument];
n63 -> n53  [key=0, style=solid];
n63 -> n74  [key=2, style=dotted];
n55 -> n56  [key=0, style=solid];
n55 -> n53  [key=0, style=solid];
n55 -> n75  [key=2, style=dotted];
n56 -> n57  [key=0, style=solid];
n56 -> n76  [key=2, style=dotted];
n56 -> n58  [key=1, style=dashed, color=darkseagreen4, label=parser];
n56 -> n60  [key=1, style=dashed, color=darkseagreen4, label=parser];
n57 -> n58  [key=0, style=solid];
n57 -> n64  [key=0, style=solid, color=red];
n59 -> n60  [key=0, style=solid];
n59 -> n62  [key=0, style=solid];
n62 -> n63  [key=0, style=solid];
n62 -> n53  [key=0, style=solid];
n61 -> n53  [key=0, style=solid];
n61 -> n67  [key=1, style=dashed, color=darkseagreen4, label=hadError];
n78 -> n203  [key=0, style=solid];
n78 -> n205  [key=1, style=dashed, color=darkseagreen4, label=object];
n78 -> n206  [key=1, style=dashed, color=darkseagreen4, label=object];
n78 -> n207  [key=1, style=dashed, color=darkseagreen4, label=object];
n78 -> n208  [key=1, style=dashed, color=darkseagreen4, label=object];
n78 -> n209  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.ParsingError>"];
n66 -> n53  [key=0, style=solid];
n66 -> n67  [key=1, style=dashed, color=darkseagreen4, label=hadError];
n68 -> n69  [key=0, style=solid];
n69 -> n47  [key=0, style=bold, color=blue];
n81 -> n82  [key=0, style=solid];
n81 -> n84  [key=1, style=dashed, color=darkseagreen4, label=caseSensitive];
n81 -> n87  [key=1, style=dashed, color=darkseagreen4, label=caseSensitive];
n82 -> n83  [key=0, style=solid];
n82 -> n89  [key=0, style=solid];
n82 -> n84  [key=1, style=dashed, color=darkseagreen4, label=arg];
n82 -> n87  [key=1, style=dashed, color=darkseagreen4, label=arg];
n83 -> n84  [key=0, style=solid];
n83 -> n86  [key=0, style=solid];
n84 -> n85  [key=0, style=solid];
n84 -> n86  [key=0, style=solid];
n84 -> n91  [key=2, style=dotted];
n86 -> n87  [key=0, style=solid];
n86 -> n82  [key=0, style=solid];
n86 -> n75  [key=2, style=dotted];
n87 -> n88  [key=0, style=solid];
n87 -> n82  [key=0, style=solid];
n87 -> n92  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n85 -> n90  [key=0, style=solid];
n88 -> n90  [key=0, style=solid];
n90 -> n39  [key=0, style=bold, color=blue];
n93 -> n94  [key=0, style=solid];
n93 -> n95  [key=1, style=dashed, color=darkseagreen4, label=string];
n93 -> n96  [key=1, style=dashed, color=darkseagreen4, label=object];
n93 -> n97  [key=1, style=dashed, color=darkseagreen4, label=string];
n93 -> n99  [key=1, style=dashed, color=darkseagreen4, label=object];
n93 -> n93  [key=3, color=darkorchid, style=bold, label="method methodReturn object GetVerbOptionsInstanceByName"];
n94 -> n95  [key=0, style=solid];
n95 -> n96  [key=0, style=solid];
n95 -> n97  [key=0, style=solid];
n95 -> n75  [key=2, style=dotted];
n96 -> n100  [key=0, style=solid];
n97 -> n98  [key=0, style=solid];
n97 -> n101  [key=2, style=dotted];
n97 -> n99  [key=1, style=dashed, color=darkseagreen4, label=pair];
n99 -> n100  [key=0, style=solid];
n99 -> n102  [key=2, style=dotted];
n98 -> n99  [key=0, style=solid];
n98 -> n100  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
n100 -> n93  [key=0, style=bold, color=blue];
n103 -> n104  [key=0, style=solid];
n103 -> n108  [key=1, style=dashed, color=darkseagreen4, label=string];
n103 -> n33  [key=3, color=darkorchid, style=bold, label="method methodReturn bool WasVerbOptionInvoked"];
n104 -> n105  [key=0, style=solid];
n104 -> n106  [key=0, style=solid];
n104 -> n75  [key=2, style=dotted];
n108 -> n109  [key=0, style=solid];
n108 -> n111  [key=2, style=dotted];
n105 -> n109  [key=0, style=solid];
n106 -> n107  [key=0, style=solid];
n106 -> n108  [key=0, style=solid];
n106 -> n110  [key=2, style=dotted];
n107 -> n109  [key=0, style=solid];
n109 -> n103  [key=0, style=bold, color=blue];
n112 -> n113  [key=0, style=solid];
n112 -> n133  [key=2, style=dotted];
n112 -> n118  [key=1, style=dashed, color=darkseagreen4, label=verbs];
n113 -> n114  [key=0, style=solid];
n113 -> n37  [key=2, style=dotted];
n113 -> n115  [key=1, style=dashed, color=darkseagreen4, label=helpInfo];
n113 -> n116  [key=1, style=dashed, color=darkseagreen4, label=helpInfo];
n113 -> n119  [key=1, style=dashed, color=darkseagreen4, label=helpInfo];
n113 -> n123  [key=1, style=dashed, color=darkseagreen4, label=helpInfo];
n113 -> n124  [key=1, style=dashed, color=darkseagreen4, label=helpInfo];
n113 -> n130  [key=1, style=dashed, color=darkseagreen4, label=helpInfo];
n114 -> n115  [key=0, style=solid];
n114 -> n118  [key=0, style=solid];
n114 -> n134  [key=2, style=dotted];
n116 -> n117  [key=0, style=solid];
n116 -> n135  [key=2, style=dotted];
n118 -> n119  [key=0, style=solid];
n118 -> n136  [key=2, style=dotted];
n118 -> n121  [key=1, style=dashed, color=darkseagreen4, label=optionMap];
n119 -> n120  [key=0, style=solid];
n119 -> n121  [key=0, style=solid];
n119 -> n137  [key=2, style=dotted];
n121 -> n122  [key=0, style=solid];
n121 -> n126  [key=1, style=dashed, color=darkseagreen4, label=verbOption];
n121 -> n127  [key=1, style=dashed, color=darkseagreen4, label=verbOption];
n121 -> n128  [key=1, style=dashed, color=darkseagreen4, label=verbOption];
n124 -> n125  [key=0, style=solid];
n124 -> n135  [key=2, style=dotted];
n126 -> n127  [key=0, style=solid];
n126 -> n128  [key=0, style=solid];
n126 -> n138  [key=2, style=dotted];
n127 -> n128  [key=0, style=solid];
n127 -> n139  [key=2, style=dotted];
n128 -> n129  [key=0, style=solid];
n128 -> n140  [key=2, style=dotted];
n128 -> n47  [key=2, style=dotted];
n128 -> n131  [key=1, style=dashed, color=darkseagreen4, label=verbResult];
n130 -> n131  [key=0, style=solid];
n130 -> n135  [key=2, style=dotted];
n115 -> n116  [key=0, style=solid];
n115 -> n117  [key=0, style=solid];
n123 -> n124  [key=0, style=solid];
n123 -> n125  [key=0, style=solid];
n117 -> n132  [key=0, style=solid];
n135 -> n154  [key=0, style=solid];
n135 -> n155  [key=1, style=dashed, color=darkseagreen4, label=string];
n135 -> n156  [key=1, style=dashed, color=darkseagreen4, label=object];
n135 -> n157  [key=1, style=dashed, color=darkseagreen4, label=object];
n135 -> n137  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute> helpInfo"];
n135 -> n113  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute> helpInfo"];
n135 -> n116  [key=3, color=darkorchid, style=bold, label="Parameter variable string verb"];
n135 -> n144  [key=3, color=darkorchid, style=bold, label="Parameter variable string verb"];
n120 -> n132  [key=0, style=solid];
n137 -> n141  [key=0, style=solid];
n137 -> n142  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>"];
n137 -> n143  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
n137 -> n144  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
n137 -> n146  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
n137 -> n148  [key=1, style=dashed, color=darkseagreen4, label=object];
n137 -> n149  [key=1, style=dashed, color=darkseagreen4, label=object];
n137 -> n150  [key=1, style=dashed, color=darkseagreen4, label=object];
n137 -> n113  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute> helpInfo"];
n137 -> n118  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Internal.OptionMap optionMap"];
n137 -> n34  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryParseHelpVerb"];
n137 -> n33  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryParseHelpVerb"];
n122 -> n123  [key=0, style=solid];
n122 -> n126  [key=0, style=solid];
n125 -> n132  [key=0, style=solid];
n129 -> n130  [key=0, style=solid];
n129 -> n131  [key=0, style=solid];
n131 -> n132  [key=0, style=solid];
n132 -> n46  [key=0, style=bold, color=blue];
n141 -> n142  [key=0, style=solid];
n142 -> n143  [key=0, style=solid];
n142 -> n152  [key=0, style=solid];
n143 -> n144  [key=0, style=solid];
n143 -> n152  [key=0, style=solid];
n143 -> n111  [key=2, style=dotted];
n144 -> n145  [key=0, style=solid];
n144 -> n146  [key=1, style=dashed, color=darkseagreen4, label=verb];
n144 -> n150  [key=1, style=dashed, color=darkseagreen4, label=verb];
n146 -> n147  [key=0, style=solid];
n146 -> n148  [key=1, style=dashed, color=darkseagreen4, label=verbOption];
n146 -> n149  [key=1, style=dashed, color=darkseagreen4, label=verbOption];
n148 -> n149  [key=0, style=solid];
n148 -> n150  [key=0, style=solid];
n148 -> n138  [key=2, style=dotted];
n149 -> n150  [key=0, style=solid];
n149 -> n139  [key=2, style=dotted];
n150 -> n151  [key=0, style=solid];
n150 -> n135  [key=2, style=dotted];
n152 -> n153  [key=0, style=solid];
n145 -> n146  [key=0, style=solid];
n145 -> n150  [key=0, style=solid];
n147 -> n148  [key=0, style=solid];
n147 -> n150  [key=0, style=solid];
n151 -> n153  [key=0, style=solid];
n153 -> n137  [key=0, style=bold, color=blue];
n154 -> n155  [key=0, style=solid];
n155 -> n156  [key=0, style=solid];
n155 -> n157  [key=0, style=solid];
n156 -> n158  [key=0, style=solid];
n156 -> n161  [key=2, style=dotted];
n156 -> n159  [key=1, style=dashed, color=darkseagreen4, label=helpText];
n157 -> n158  [key=0, style=solid];
n157 -> n161  [key=2, style=dotted];
n157 -> n159  [key=1, style=dashed, color=darkseagreen4, label=helpText];
n158 -> n159  [key=0, style=solid];
n158 -> n160  [key=0, style=solid];
n159 -> n160  [key=0, style=solid];
n159 -> n42  [key=2, style=dotted];
n160 -> n135  [key=0, style=bold, color=blue];
n162 -> n163  [key=0, style=solid];
n162 -> n164  [key=1, style=dashed, color=darkseagreen4, label=object];
n162 -> n165  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
n162 -> n167  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseArgumentsStrict"];
n163 -> n164  [key=0, style=solid];
n163 -> n12  [key=2, style=dotted];
n164 -> n165  [key=0, style=solid];
n164 -> n12  [key=2, style=dotted];
n165 -> n166  [key=0, style=solid];
n165 -> n167  [key=2, style=dotted];
n166 -> n162  [key=0, style=bold, color=blue];
n167 -> n185  [key=0, style=solid];
n167 -> n186  [key=1, style=dashed, color=darkseagreen4, label=object];
n167 -> n187  [key=1, style=dashed, color=darkseagreen4, label=int];
n167 -> n162  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n167 -> n168  [key=3, color=darkorchid, style=bold, label="Parameter variable int exitCode"];
n167 -> n173  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n167 -> n179  [key=3, color=darkorchid, style=bold, label="Parameter variable int exitCode"];
n167 -> n34  [key=3, color=darkorchid, style=bold, label="method methodReturn bool DoParseArgumentsStrict"];
n168 -> n169  [key=0, style=solid];
n168 -> n170  [key=1, style=dashed, color=darkseagreen4, label=object];
n168 -> n171  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
n168 -> n167  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseArgumentsStrict"];
n169 -> n170  [key=0, style=solid];
n169 -> n12  [key=2, style=dotted];
n170 -> n171  [key=0, style=solid];
n170 -> n12  [key=2, style=dotted];
n171 -> n172  [key=0, style=solid];
n171 -> n167  [key=2, style=dotted];
n172 -> n168  [key=0, style=bold, color=blue];
n173 -> n174  [key=0, style=solid];
n173 -> n175  [key=1, style=dashed, color=darkseagreen4, label=object];
n173 -> n176  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
n173 -> n177  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
n173 -> n167  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseArgumentsStrict"];
n174 -> n175  [key=0, style=solid];
n174 -> n12  [key=2, style=dotted];
n175 -> n176  [key=0, style=solid];
n175 -> n12  [key=2, style=dotted];
n176 -> n177  [key=0, style=solid];
n177 -> n178  [key=0, style=solid];
n177 -> n167  [key=2, style=dotted];
n178 -> n173  [key=0, style=bold, color=blue];
n179 -> n180  [key=0, style=solid];
n179 -> n181  [key=1, style=dashed, color=darkseagreen4, label=object];
n179 -> n182  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
n179 -> n183  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
n179 -> n167  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseArguments"];
n180 -> n181  [key=0, style=solid];
n180 -> n12  [key=2, style=dotted];
n181 -> n182  [key=0, style=solid];
n181 -> n12  [key=2, style=dotted];
n182 -> n183  [key=0, style=solid];
n183 -> n184  [key=0, style=solid];
n183 -> n167  [key=2, style=dotted];
n184 -> n179  [key=0, style=bold, color=blue];
n185 -> n186  [key=0, style=solid];
n185 -> n188  [key=0, style=solid];
n185 -> n18  [key=2, style=dotted];
n186 -> n187  [key=0, style=solid];
n186 -> n190  [key=2, style=dotted];
n187 -> n188  [key=0, style=solid];
n187 -> n191  [key=2, style=dotted];
n188 -> n189  [key=0, style=solid];
n190 -> n192  [key=0, style=solid];
n190 -> n194  [key=1, style=dashed, color=darkseagreen4, label=object];
n190 -> n200  [key=1, style=dashed, color=darkseagreen4, label=object];
n190 -> n167  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n189 -> n167  [key=0, style=bold, color=blue];
n192 -> n193  [key=0, style=solid];
n192 -> n194  [key=0, style=solid];
n192 -> n196  [key=2, style=dotted];
n192 -> n197  [key=2, style=dotted];
n194 -> n195  [key=0, style=solid];
n194 -> n45  [key=2, style=dotted];
n194 -> n198  [key=2, style=dotted];
n194 -> n42  [key=2, style=dotted];
n194 -> n199  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n200 -> n201  [key=0, style=solid];
n200 -> n202  [key=2, style=dotted];
n193 -> n195  [key=0, style=solid];
n195 -> n190  [key=0, style=bold, color=blue];
n199 -> n200  [key=0, style=solid];
n201 -> n199  [key=0, style=bold, color=blue];
n203 -> n204  [key=0, style=solid];
n203 -> n205  [key=0, style=solid];
n203 -> n212  [key=2, style=dotted];
n205 -> n206  [key=0, style=solid];
n205 -> n133  [key=2, style=dotted];
n205 -> n207  [key=1, style=dashed, color=darkseagreen4, label=property];
n205 -> n208  [key=1, style=dashed, color=darkseagreen4, label=property];
n206 -> n207  [key=0, style=solid];
n206 -> n208  [key=0, style=solid];
n206 -> n102  [key=2, style=dotted];
n207 -> n208  [key=0, style=solid];
n207 -> n213  [key=2, style=dotted];
n207 -> n214  [key=2, style=dotted];
n208 -> n209  [key=0, style=solid];
n208 -> n102  [key=2, style=dotted];
n208 -> n210  [key=1, style=dashed, color=darkseagreen4, label=parserState];
n209 -> n210  [key=0, style=solid];
n209 -> n211  [key=0, style=solid];
n204 -> n211  [key=0, style=solid];
n210 -> n209  [key=0, style=solid];
n210 -> n215  [key=2, style=dotted];
n211 -> n78  [key=0, style=bold, color=blue];
n216 -> n217  [key=0, style=solid];
n217 -> n218  [key=0, style=solid];
n217 -> n220  [key=2, style=dotted];
n218 -> n219  [key=0, style=solid];
n218 -> n221  [key=2, style=dotted];
n220 -> n222  [key=0, style=solid];
n220 -> n224  [key=1, style=dashed, color=darkseagreen4, label=bool];
n220 -> n34  [key=3, color=darkorchid, style=bold, label="Parameter variable bool disposing"];
n220 -> n33  [key=3, color=darkorchid, style=bold, label="Parameter variable bool disposing"];
n219 -> n216  [key=0, style=bold, color=blue];
n222 -> n223  [key=0, style=solid];
n222 -> n224  [key=0, style=solid];
n224 -> n225  [key=0, style=solid];
n224 -> n228  [key=0, style=solid];
n223 -> n228  [key=0, style=solid];
n225 -> n226  [key=0, style=solid];
n225 -> n227  [key=0, style=solid];
n228 -> n220  [key=0, style=bold, color=blue];
n226 -> n227  [key=0, style=solid];
n226 -> n229  [key=2, style=dotted];
n227 -> n228  [key=0, style=solid];
n230 -> n231  [key=0, style=solid];
n231 -> n232  [key=0, style=solid];
n231 -> n220  [key=2, style=dotted];
n232 -> n230  [key=0, style=bold, color=blue];
m2_21 -> m2_22  [key=0, style=solid, color=green];
m2_22 -> m2_23  [key=0, style=solid, color=green];
m2_22 -> m2_6  [key=2, style=dotted, color=green];
m2_22 -> m2_7  [key=2, style=dotted, color=green];
m2_22 -> m2_25  [key=1, style=dashed, color=green, label=expectedTokens];
m2_23 -> m2_24  [key=0, style=solid, color=green];
m2_23 -> m2_8  [key=2, style=dotted, color=green];
m2_23 -> m2_9  [key=2, style=dotted, color=green];
m2_23 -> m2_10  [key=2, style=dotted, color=green];
m2_23 -> m2_28  [key=1, style=dashed, color=green, label=specs];
m2_25 -> m2_26  [key=0, style=solid, color=green];
m2_25 -> m2_15  [key=2, style=dotted, color=green];
m2_25 -> m2_16  [key=2, style=dotted, color=green];
m2_24 -> m2_25  [key=0, style=solid, color=green];
m2_24 -> m2_11  [key=2, style=dotted, color=green];
m2_24 -> m2_6  [key=2, style=dotted, color=green];
m2_24 -> m2_7  [key=2, style=dotted, color=green];
m2_24 -> m2_12  [key=2, style=dotted, color=green];
m2_24 -> m2_13  [key=2, style=dotted, color=green];
m2_24 -> m2_14  [key=2, style=dotted, color=green];
m2_24 -> m2_27  [key=1, style=dashed, color=green, label="lambda expression"];
m2_26 -> m2_21  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid, color=green];
m2_1 -> m2_2  [key=0, style=solid, color=green];
m2_1 -> m2_6  [key=2, style=dotted, color=green];
m2_1 -> m2_7  [key=2, style=dotted, color=green];
m2_1 -> m2_4  [key=1, style=dashed, color=green, label=expectedTokens];
m2_2 -> m2_3  [key=0, style=solid, color=green];
m2_2 -> m2_8  [key=2, style=dotted, color=green];
m2_2 -> m2_9  [key=2, style=dotted, color=green];
m2_2 -> m2_10  [key=2, style=dotted, color=green];
m2_2 -> m2_18  [key=1, style=dashed, color=green, label=specs];
m2_4 -> m2_5  [key=0, style=solid, color=green];
m2_4 -> m2_15  [key=2, style=dotted, color=green];
m2_4 -> m2_16  [key=2, style=dotted, color=green];
m2_3 -> m2_4  [key=0, style=solid, color=green];
m2_3 -> m2_11  [key=2, style=dotted, color=green];
m2_3 -> m2_6  [key=2, style=dotted, color=green];
m2_3 -> m2_7  [key=2, style=dotted, color=green];
m2_3 -> m2_12  [key=2, style=dotted, color=green];
m2_3 -> m2_13  [key=2, style=dotted, color=green];
m2_3 -> m2_14  [key=2, style=dotted, color=green];
m2_3 -> m2_17  [key=1, style=dashed, color=green, label="lambda expression"];
m2_5 -> m2_0  [key=0, style=bold, color=blue];
m2_27 -> m2_28  [key=0, style=solid, color=green];
m2_18 -> m2_19  [key=0, style=solid, color=green];
m2_18 -> m2_20  [key=2, style=dotted, color=green];
m2_17 -> m2_18  [key=0, style=solid, color=green];
m2_19 -> m2_17  [key=0, style=bold, color=blue];
m2_28 -> m2_29  [key=0, style=solid, color=green];
m2_28 -> m2_20  [key=2, style=dotted, color=green];
m2_29 -> m2_27  [key=0, style=bold, color=blue];
m2_30 -> m2_18  [key=1, style=dashed, color=green, label=specs];
m2_31 -> m2_28  [key=1, style=dashed, color=green, label=specs];
m5_4 -> m5_8  [key=0, style=solid, color=red];
m5_8 -> m5_9  [key=0, style=solid, color=red];
m5_8 -> m5_11  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m5_9 -> m5_4  [key=0, style=bold, color=blue];
m5_6 -> m5_40  [key=0, style=solid];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m5_41 -> m5_6  [key=0, style=bold, color=blue];
m5_7 -> m5_61  [key=0, style=solid];
m5_7 -> m5_65  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_64  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m5_61 -> m5_61  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<CommandLine.Error> "];
m5_62 -> m5_7  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_1 -> m5_4  [key=2, style=dotted];
m5_1 -> m5_5  [key=2, style=dotted];
m5_1 -> m5_6  [key=2, style=dotted];
m5_1 -> m5_7  [key=2, style=dotted];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m5_63 -> m5_64  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid, color=red];
m5_11 -> m5_17  [key=2, style=dotted, color=red];
m5_11 -> m5_18  [key=2, style=dotted, color=red];
m5_11 -> m5_11  [key=1, style=dashed, color=red, label=sp];
m5_11 -> m5_14  [key=1, style=dashed, color=red, label=options];
m5_10 -> m5_11  [key=0, style=solid, color=red];
m5_12 -> m5_13  [key=0, style=solid, color=red];
m5_12 -> m5_12  [key=1, style=dashed, color=red, label=o];
m5_14 -> m5_16  [key=0, style=solid, color=red];
m5_14 -> m5_20  [key=2, style=dotted, color=red];
m5_14 -> m5_21  [key=2, style=dotted, color=red];
m5_14 -> m5_14  [key=1, style=dashed, color=red, label=o];
m5_13 -> m5_14  [key=0, style=solid, color=red];
m5_13 -> m5_15  [key=0, style=solid, color=red];
m5_13 -> m5_19  [key=2, style=dotted, color=red];
m5_15 -> m5_16  [key=0, style=solid, color=red];
m5_15 -> m5_22  [key=2, style=dotted, color=red];
m5_16 -> m5_10  [key=0, style=bold, color=blue];
m5_26 -> m5_27  [key=0, style=solid, color=red];
m5_26 -> m5_17  [key=2, style=dotted, color=red];
m5_26 -> m5_18  [key=2, style=dotted, color=red];
m5_26 -> m5_26  [key=1, style=dashed, color=red, label=sp];
m5_26 -> m5_29  [key=1, style=dashed, color=red, label=requiredWithValue];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_17  [key=2, style=dotted];
m5_28 -> m5_33  [key=2, style=dotted];
m5_28 -> m5_34  [key=2, style=dotted];
m5_28 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label=sp];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_35  [key=2, style=dotted];
m5_29 -> m5_17  [key=2, style=dotted];
m5_29 -> m5_33  [key=2, style=dotted];
m5_29 -> m5_36  [key=2, style=dotted];
m5_29 -> m5_37  [key=2, style=dotted];
m5_29 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label=sp];
m5_25 -> m5_26  [key=0, style=solid, color=red];
m5_25 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m5_25 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m5_27 -> m5_28  [key=0, style=solid, color=red];
m5_27 -> m5_32  [key=2, style=dotted, color=red];
m5_27 -> m5_27  [key=1, style=dashed, color=red, label=s];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_38  [key=2, style=dotted];
m5_30 -> m5_39  [key=2, style=dotted];
m5_30 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label=sp];
m5_31 -> m5_25  [key=0, style=bold, color=blue];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_48  [key=2, style=dotted];
m5_43 -> m5_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_43 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_43 -> m5_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_43 -> m5_45  [key=1, style=dashed, color=darkseagreen4, label=options];
m5_42 -> m5_43  [key=0, style=solid];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_46  [key=0, style=solid];
m5_44 -> m5_49  [key=2, style=dotted];
m5_51 -> m5_52  [key=0, style=solid];
m5_54 -> m5_55  [key=0, style=solid];
m5_57 -> m5_58  [key=0, style=solid];
m5_45 -> m5_47  [key=0, style=solid];
m5_45 -> m5_50  [key=2, style=dotted];
m5_45 -> m5_39  [key=2, style=dotted];
m5_45 -> m5_45  [key=1, style=dashed, color=darkseagreen4, label=s];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_22  [key=2, style=dotted];
m5_47 -> m5_42  [key=0, style=bold, color=blue];
m5_52 -> m5_53  [key=0, style=solid];
m5_53 -> m5_51  [key=0, style=bold, color=blue];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_18  [key=2, style=dotted];
m5_56 -> m5_54  [key=0, style=bold, color=blue];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_18  [key=2, style=dotted];
m5_58 -> m5_60  [key=2, style=dotted];
m5_59 -> m5_57  [key=0, style=bold, color=blue];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_70  [key=2, style=dotted];
m5_65 -> m5_71  [key=2, style=dotted];
m5_65 -> m5_72  [key=2, style=dotted];
m5_65 -> m5_65  [key=1, style=dashed, color=darkseagreen4, label=t];
m5_64 -> m5_65  [key=0, style=solid];
m5_64 -> m5_17  [key=2, style=dotted];
m5_64 -> m5_18  [key=2, style=dotted];
m5_64 -> m5_64  [key=1, style=dashed, color=darkseagreen4, label=sp];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_19  [key=2, style=dotted];
m5_66 -> m5_66  [key=1, style=dashed, color=darkseagreen4, label=x];
m5_67 -> m5_68  [key=0, style=solid];
m5_67 -> m5_73  [key=2, style=dotted];
m5_67 -> m5_74  [key=2, style=dotted];
m5_67 -> m5_67  [key=1, style=dashed, color=darkseagreen4, label=y];
m5_68 -> m5_69  [key=0, style=solid];
m5_69 -> m5_63  [key=0, style=bold, color=blue];
m5_5 -> m5_23  [key=0, style=solid, color=red];
m5_23 -> m5_24  [key=0, style=solid, color=red];
m5_23 -> m5_26  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m5_23 -> m5_28  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m5_23 -> m5_29  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m5_24 -> m5_5  [key=0, style=bold, color=blue];
m5_75 -> m5_76  [key=0, style=solid];
m5_75 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<T>"];
m5_75 -> m5_78  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ContainsIfNotEmpty"];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_78  [key=0, style=solid];
m5_76 -> m5_80  [key=2, style=dotted];
m5_77 -> m5_79  [key=0, style=solid];
m5_77 -> m5_81  [key=2, style=dotted];
m5_78 -> m5_79  [key=0, style=solid];
m5_79 -> m5_75  [key=0, style=bold, color=blue];
m5_82 -> m5_65  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m6_14 -> m6_15  [key=0, style=solid, color=green];
m6_15 -> m6_16  [key=0, style=solid, color=green];
m6_15 -> m6_17  [key=2, style=dotted, color=green];
m6_16 -> m6_14  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=2, style=dotted];
m7_1 -> m7_4  [key=2, style=dotted];
m7_1 -> m7_5  [key=2, style=dotted];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m8_12 -> m8_13  [key=0, style=solid];
m8_13 -> m8_14  [key=0, style=solid];
m8_14 -> m8_12  [key=0, style=bold, color=blue];
m8_44 -> m8_45  [key=0, style=solid];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_47  [key=2, style=dotted];
m8_46 -> m8_44  [key=0, style=bold, color=blue];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T1>"];
m8_35 -> m8_36  [key=0, style=solid];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_6  [key=2, style=dotted];
m8_36 -> m8_29  [key=2, style=dotted];
m8_36 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label=value1];
m8_37 -> m8_34  [key=0, style=bold, color=blue];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_61  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T>"];
m8_59 -> m8_63  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m8_60 -> m8_61  [key=0, style=solid];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_63  [key=0, style=solid];
m8_61 -> m8_6  [key=2, style=dotted];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_65  [key=2, style=dotted];
m8_62 -> m8_64  [key=0, style=solid];
m8_64 -> m8_59  [key=0, style=bold, color=blue];
m8_18 -> m8_19  [key=0, style=solid];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_12  [key=2, style=dotted];
m8_20 -> m8_18  [key=0, style=bold, color=blue];
m8_55 -> m8_56  [key=0, style=solid];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_29  [key=2, style=dotted];
m8_53 -> m8_47  [key=2, style=dotted];
m8_53 -> m8_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_58  [key=2, style=dotted];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_56  [key=1, style=dashed, color=darkseagreen4, label=TSource];
m8_54 -> m8_52  [key=0, style=bold, color=blue];
m8_57 -> m8_55  [key=0, style=bold, color=blue];
m8_69 -> m8_70  [key=0, style=solid];
m8_70 -> m8_71  [key=0, style=solid];
m8_71 -> m8_69  [key=0, style=bold, color=blue];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_27  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T1>"];
m8_26 -> m8_27  [key=0, style=solid];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_6  [key=2, style=dotted];
m8_27 -> m8_29  [key=2, style=dotted];
m8_27 -> m8_15  [key=2, style=dotted];
m8_27 -> m8_27  [key=1, style=dashed, color=darkseagreen4, label=value1];
m8_28 -> m8_25  [key=0, style=bold, color=blue];
m8_66 -> m8_67  [key=0, style=solid];
m8_67 -> m8_68  [key=0, style=solid];
m8_68 -> m8_66  [key=0, style=bold, color=blue];
m8_15 -> m8_16  [key=0, style=solid];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_10  [key=2, style=dotted];
m8_17 -> m8_15  [key=0, style=bold, color=blue];
m8_3 -> m8_4  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_3  [key=0, style=bold, color=blue];
m8_10 -> m8_11  [key=0, style=solid];
m8_11 -> m8_10  [key=0, style=bold, color=blue];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_40  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T>"];
m8_38 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label="System.Action<T>"];
m8_39 -> m8_40  [key=0, style=solid];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_42  [key=0, style=solid];
m8_40 -> m8_6  [key=2, style=dotted];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_43  [key=2, style=dotted];
m8_42 -> m8_38  [key=0, style=bold, color=blue];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_53  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, CSharpx.Maybe<TValue>>"];
m8_48 -> m8_56  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, TValue, TResult>"];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_51  [key=2, style=dotted];
m8_49 -> m8_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_50 -> m8_48  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m8_21 -> m8_22  [key=0, style=solid];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_24  [key=2, style=dotted];
m8_22 -> m8_15  [key=2, style=dotted];
m8_22 -> m8_18  [key=2, style=dotted];
m8_23 -> m8_21  [key=0, style=bold, color=blue];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_32  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T1>"];
m8_31 -> m8_32  [key=0, style=solid];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_6  [key=2, style=dotted];
m8_32 -> m8_29  [key=2, style=dotted];
m8_32 -> m8_18  [key=2, style=dotted];
m8_32 -> m8_15  [key=2, style=dotted];
m8_32 -> m8_32  [key=1, style=dashed, color=darkseagreen4, label=value1];
m8_33 -> m8_30  [key=0, style=bold, color=blue];
m8_6 -> m8_7  [key=0, style=solid];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_9  [key=1, style=dashed, color=darkseagreen4, label="out T"];
m8_8 -> m8_9  [key=0, style=solid];
m8_9 -> m8_6  [key=0, style=bold, color=blue];
m8_72 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T>"];
m8_72 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T>"];
m8_72 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T>"];
m8_72 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T>"];
m8_73 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Just<T>"];
m8_74 -> m8_53  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, CSharpx.Maybe<TValue>>"];
m8_75 -> m8_53  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, TValue, TResult>"];
m8_75 -> m8_56  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, TValue, TResult>"];
m8_76 -> m8_56  [key=1, style=dashed, color=darkseagreen4, label=TSource];
m9_0 -> m9_1  [key=0, style=solid, color=green];
m9_0 -> m9_3  [key=1, style=dashed, color=green, label="System.Type"];
m9_0 -> m9_5  [key=1, style=dashed, color=green, label="System.Type"];
m9_1 -> m9_2  [key=0, style=solid, color=green];
m9_1 -> m9_3  [key=0, style=solid, color=green];
m9_2 -> m9_6  [key=0, style=solid, color=green];
m9_2 -> m9_7  [key=2, style=dotted, color=green];
m9_3 -> m9_4  [key=0, style=solid, color=green];
m9_3 -> m9_5  [key=0, style=solid, color=green];
m9_3 -> m9_8  [key=2, style=dotted, color=green];
m9_4 -> m9_6  [key=0, style=solid, color=green];
m9_4 -> m9_9  [key=2, style=dotted, color=green];
m9_5 -> m9_6  [key=0, style=solid, color=green];
m9_6 -> m9_0  [key=0, style=bold, color=blue];
m9_25 -> m9_17  [key=3, color=green, style=bold, label="method methodReturn CommandLine.ValueListAttribute GetAttribute"];
m9_25 -> m9_26  [key=0, style=solid];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_34  [key=2, style=dotted];
m9_26 -> m9_29  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_26 -> m9_31  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_28 -> m9_33  [key=0, style=solid];
m9_30 -> m9_33  [key=0, style=solid];
m9_30 -> m9_35  [key=2, style=dotted];
m9_32 -> m9_33  [key=0, style=solid];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_29  [key=0, style=solid];
m9_29 -> m9_30  [key=0, style=solid];
m9_29 -> m9_31  [key=0, style=solid];
m9_31 -> m9_32  [key=0, style=solid];
m9_33 -> m9_25  [key=0, style=bold, color=blue];
m9_13 -> m9_14  [key=0, style=solid, color=green];
m9_13 -> m9_15  [key=1, style=dashed, color=green, label=object];
m9_13 -> m9_18  [key=1, style=dashed, color=green, label=object];
m9_13 -> m9_19  [key=1, style=dashed, color=green, label=object];
m9_13 -> m9_17  [key=3, color=green, style=bold, label="method methodReturn System.Collections.Generic.IList<string> GetReference"];
m9_14 -> m9_15  [key=0, style=solid, color=green];
m9_15 -> m9_16  [key=0, style=solid, color=green];
m9_15 -> m9_21  [key=2, style=dotted, color=green];
m9_15 -> m9_18  [key=1, style=dashed, color=green, label=concreteType];
m9_15 -> m9_19  [key=1, style=dashed, color=green, label=property];
m9_16 -> m9_18  [key=0, style=solid, color=green];
m9_16 -> m9_17  [key=0, style=solid, color=green];
m9_18 -> m9_19  [key=0, style=solid, color=green];
m9_18 -> m9_22  [key=2, style=dotted, color=green];
m9_18 -> n214  [key=2, style=dotted, color=green];
m9_19 -> m9_20  [key=0, style=solid, color=green];
m9_19 -> m9_24  [key=2, style=dotted, color=green];
m9_17 -> m9_20  [key=0, style=solid, color=green];
m9_20 -> m9_13  [key=0, style=bold, color=blue];
m9_21 -> m9_14  [key=3, color=green, style=bold, label="Parameter variable System.Type concreteType"];
m9_21 -> m9_17  [key=3, color=green, style=bold, label="method methodReturn System.Reflection.PropertyInfo GetProperty"];
m9_21 -> m9_13  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
m9_21 -> m9_36  [key=0, style=solid];
m9_21 -> m9_37  [key=1, style=dashed, color=darkseagreen4, label=object];
m9_36 -> m9_37  [key=0, style=solid];
m9_37 -> m9_38  [key=0, style=solid];
m9_37 -> m9_34  [key=2, style=dotted];
m9_37 -> m9_40  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_37 -> m9_42  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_39 -> m9_45  [key=0, style=solid];
m9_41 -> m9_45  [key=0, style=solid];
m9_41 -> m9_35  [key=2, style=dotted];
m9_43 -> m9_45  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m9_43 -> m9_44  [key=0, style=solid];
m9_44 -> m9_45  [key=0, style=solid];
m9_38 -> m9_39  [key=0, style=solid];
m9_38 -> m9_40  [key=0, style=solid];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_42  [key=0, style=solid];
m9_42 -> m9_43  [key=0, style=solid];
m9_42 -> m9_44  [key=1, style=dashed, color=darkseagreen4, label=pairZero];
m9_45 -> m9_21  [key=0, style=bold, color=blue];
m9_10 -> m9_11  [key=0, style=solid, color=green];
m9_11 -> m9_12  [key=0, style=solid, color=green];
m9_12 -> m9_10  [key=0, style=bold, color=blue];
m9_46 -> m9_5  [key=1, style=dashed, color=green, label="CommandLine.ValueListAttribute"];
m9_46 -> m9_11  [key=1, style=dashed, color=green, label="CommandLine.ValueListAttribute"];
}
