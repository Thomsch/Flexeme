digraph  {
d7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", color=green, community=0, label="0: var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31"];
d6 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
d8 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34"];
d16 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="79-79"];
d17 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="26-26"];
d18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="59-59"];
d19 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="332-332"];
d20 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="342-342"];
d15 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
d9 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", label="Assert.Equal(''Unit-tests 2.0'', lines[0])", span="36-36"];
d4 [cluster="CommandLine.Text.HelpText.ToString()", label="Entry CommandLine.Text.HelpText.ToString()", span="436-436"];
d21 [cluster="string.ToNotEmptyLines()", label="Entry string.ToNotEmptyLines()", span="10-10"];
d10 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", label="Assert.Equal(''Copyright (C) 2005 - 2013 Author'', lines[1])", span="37-37"];
d11 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", label="Assert.Equal(''pre-options line 1'', lines[2])", span="38-38"];
d12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", label="Assert.Equal(''pre-options line 2'', lines[3])", span="39-39"];
d13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", label="Assert.Equal(''post-options line 1'', lines[4])", span="40-40"];
d14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", label="Assert.Equal(''post-options line 2'', lines[5])", span="41-41"];
d63 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="130-130"];
d78 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="150-150"];
d23 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptions())\r\n                .AddPostOptionsLine(''post-options'')", span="50-53"];
d36 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", label="var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptionsWithHelpTextEnum())\r\n                .AddPostOptionsLine(''post-options'')", span="72-75"];
d47 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptionsWithHelpTextEnum())\r\n                .AddPostOptionsLine(''post-options'')", span="94-97"];
d93 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new FakeOptionsForHelp())\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="172-174"];
d5 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
d1 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", label="Assert.Equal(string.Empty, new HelpText().ToString())", span="18-18"];
d24 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="57-57"];
d37 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="79-79"];
d48 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="101-101"];
d57 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="119-119"];
d66 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="135-135"];
d81 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="155-155"];
d94 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="177-177"];
d155 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="265-265"];
d172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="294-294"];
d184 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="320-320"];
d107 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="var lines = errorsText.ToNotEmptyLines()", span="236-236"];
d62 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="126-126"];
d64 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", label="sut.MaximumDisplayWidth = 40", span="131-131"];
d60 [cluster="CommandLine.Text.HelpText.HelpText(string)", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="56-56"];
d65 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", label="sut.AddOptions(new FakeOptionsWithLongDescription())", span="132-132"];
d77 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="146-146"];
d79 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="sut.MaximumDisplayWidth = 40", span="151-151"];
d80 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="sut.AddOptions(new FakeOptionsWithLongDescriptionAndNoSpaces())", span="152-152"];
d22 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46"];
d3 [cluster="CommandLine.Text.HelpText.HelpText()", label="Entry CommandLine.Text.HelpText.HelpText()", span="33-33"];
d32 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
d33 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", label="Entry CommandLine.Text.HelpText.AddOptions<T>(T)", span="352-352"];
d35 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="68-68"];
d45 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithHelpTextEnum.FakeOptionsWithHelpTextEnum()", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithHelpTextEnum.FakeOptionsWithHelpTextEnum()", span="11-11"];
d49 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", label="Assert.Equal(''pre-options'', lines[0])", span="102-102"];
d46 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="90-90"];
d91 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="var sut = new HelpText(''Heading Info.'')", span="170-170"];
d92 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="sut.MaximumDisplayWidth = 40", span="171-171"];
d102 [cluster="CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", label="Entry CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", span="4-4"];
d25 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", label="Assert.Equal(''pre-options'', lines[0])", span="58-58"];
d26 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="59-59"];
d27 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", label="Assert.Equal(''-i               Define a int sequence here.'', lines[2])", span="60-60"];
d28 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[3])", span="61-61"];
d29 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="62-62"];
d30 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", label="Assert.Equal(''post-options'', lines[5])", span="63-63"];
d38 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", label="Assert.Equal(''pre-options'', lines[0])", span="80-80"];
d39 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="81-81"];
d40 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", label="Assert.Equal(''--shape          Define a enum value here. Valid values: Circle, Square,'', lines[2])", span="82-82"];
d41 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", label="Assert.Equal(''Triangle'', lines[3])", span="83-83"];
d42 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="84-84"];
d43 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", label="Assert.Equal(''post-options'', lines[5])", span="85-85"];
d50 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="103-103"];
d51 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", label="Assert.Equal(''--shape          Define a enum value here.'', lines[2])", span="104-104"];
d52 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", label="Assert.Equal(''--help           Display this help screen.'', lines[3])", span="105-105"];
d53 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", label="Assert.Equal(''post-options'', lines[4])", span="106-106"];
d58 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", label="Assert.Equal(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'', lines[2])", span="121-121"];
d108 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="Assert.Equal(''  ERR badtoken'', lines[0])", span="238-238"];
d109 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="Assert.Equal(''  ERR x, switch'', lines[1])", span="239-239"];
d110 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="Assert.Equal(''  ERR unknown'', lines[2])", span="240-240"];
d111 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="Assert.Equal(''  ERR missing'', lines[3])", span="241-241"];
d112 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="Assert.Equal(''  ERR z'', lines[4])", span="242-242"];
d113 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="Assert.Equal(''  ERR s, sequence'', lines[5])", span="243-243"];
d114 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="Assert.Equal(''  ERR no-verb-selected'', lines[6])", span="244-244"];
d115 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="Assert.Equal(''  ERR badverb'', lines[7])", span="245-245"];
d158 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="Assert.Equal(''ERROR(S):'', lines[2])", span="269-269"];
d159 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="Assert.Equal(''Token 'badtoken' is not recognized.'', lines[3])", span="270-270"];
d160 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="Assert.Equal(''A sequence option 'i' is defined with few items than required.'', lines[4])", span="271-271"];
d161 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[5])", span="272-272"];
d162 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="Assert.Equal(''-i               Define a int sequence here.'', lines[6])", span="273-273"];
d163 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[7])", span="274-274"];
d164 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="Assert.Equal(''--help           Display this help screen.'', lines[8])", span="275-275"];
d175 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", label="Assert.Equal(''-p, --patch    Use the interactive patch selection interface to chose which'', lines[2])", span="298-298"];
d176 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", label="Assert.Equal(''changes to commit.'', lines[3])", span="299-299"];
d177 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", label="Assert.Equal(''--amend        Used to amend the tip of the current branch.'', lines[4])", span="300-300"];
d178 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", label="Assert.Equal(''--help         Display this help screen.'', lines[5])", span="301-301"];
d187 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="Assert.Equal(''add       Add file contents to the index.'', lines[2])", span="324-324"];
d188 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="Assert.Equal(''commit    Record changes to the repository.'', lines[3])", span="325-325"];
d189 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="Assert.Equal(''clone     Clone a repository into a new directory.'', lines[4])", span="326-326"];
d190 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="Assert.Equal(''help      Display more information on a specific command.'', lines[5])", span="327-327"];
d0 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
d2 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
d34 [cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15"];
d56 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", label="var sut = new HelpText(''Meta Value.'')\r\n                .AddOptions(new FakeOptionsWithMetaValue())", span="115-116"];
d67 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", label="lines[2].Should().Be(''  v, verbose    This is the description'')", span="136-136"];
d74 [cluster="string.Split(string[], System.StringSplitOptions)", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
d68 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", label="lines[3].Should().Be(''                of the verbosity to '')", span="138-138"];
d69 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", label="lines[4].Should().Be(''                test out the wrapping '')", span="139-139"];
d70 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", label="lines[5].Should().Be(''                capabilities of the '')", span="140-140"];
d71 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", label="lines[6].Should().Be(''                Help Text.'')", span="141-141"];
d82 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="lines[2].Should().Be(''  v, verbose    Before '')", span="156-156"];
d83 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="lines[3].Should().Be(''                012345678901234567890123'')", span="157-157"];
d84 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="lines[4].Should().Be(''                After'')", span="158-158"];
d85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="lines[5].Should().Be(''  input-file    Before '')", span="159-159"];
d86 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="lines[6].Should().Be(''                012345678901234567890123'')", span="160-160"];
d87 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="lines[7].Should().Be(''                456789 After'')", span="161-161"];
d95 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="lines[1].Should().Be(''Before '')", span="178-178"];
d96 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="lines[2].Should().Be(''0123456789012345678901234567890123456789'')", span="179-179"];
d97 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="lines[3].Should().Be(''012 After'')", span="180-180"];
d98 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="lines[lines.Length - 3].Should().Be(''Before '')", span="181-181"];
d99 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="lines[lines.Length - 2].Should().Be(''0123456789012345678901234567890123456789'')", span="182-182"];
d100 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="lines[lines.Length - 1].Should().Be('' After'')", span="183-183"];
d154 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="var helpText = HelpText.AutoBuild(fakeResult)", span="262-262"];
d156 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="267-267"];
d157 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="268-268"];
d171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", label="var helpText = HelpText.AutoBuild(fakeResult)", span="291-291"];
d173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="296-296"];
d174 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="297-297"];
d183 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="var helpText = HelpText.AutoBuild(fakeResult)", span="317-317"];
d185 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="322-322"];
d186 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="323-323"];
d106 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, 2)", span="233-233"];
d72 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="126-126"];
d73 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", span="22-22"];
d88 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="146-146"];
d89 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", span="31-31"];
d31 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46"];
d153 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="var fakeResult = new NotParsed<FakeOptions>(\r\n                new FakeOptions(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="253-259"];
d44 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="68-68"];
d54 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="90-90"];
d90 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="166-166"];
d59 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="111-111"];
d116 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="189-189"];
d165 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="250-250"];
d179 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="280-280"];
d191 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="306-306"];
d55 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="111-111"];
d61 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", span="4-4"];
d75 [cluster="Unk.Should", label="Entry Unk.Should", span=""];
d76 [cluster="Unk.Be", label="Entry Unk.Be", span=""];
d101 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="166-166"];
d166 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="257-257"];
d167 [cluster="string.StartsWith(string, System.StringComparison)", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
d168 [cluster="Unk.True", label="Entry Unk.True", span=""];
d170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", label="var fakeResult = new NotParsed<object>(\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    })", span="283-288"];
d182 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="var fakeResult = new NotParsed<object>(\r\n                new NullInstance(),\r\n                verbTypes,\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="311-314"];
d104 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="var fakeResult = new NotParsed<object>(\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new MutuallyExclusiveSetError(new NameInfo(''z'', '''')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="192-206"];
d105 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.MutuallyExclusiveSetError:\r\n                            return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="207-230"];
d130 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", span="408-408"];
d152 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="250-250"];
d117 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="142-142"];
d119 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
d125 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="324-324"];
d121 [cluster="CommandLine.NameInfo.NameInfo(string, string)", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
d103 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="189-189"];
d169 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="280-280"];
d180 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="306-306"];
d118 [cluster="CommandLine.NullInstance.NullInstance()", label="Entry CommandLine.NullInstance.NullInstance()", span="9-9"];
d129 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="372-372"];
d181 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="309-310"];
d194 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="136-136"];
d120 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
d122 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280"];
d123 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
d124 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="302-302"];
d126 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="410-410"];
d127 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="346-346"];
d128 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="357-357"];
d132 [cluster="lambda expression", label="err.Tag", span="209-209"];
d134 [cluster="lambda expression", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="212-212"];
d136 [cluster="lambda expression", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="214-214"];
d138 [cluster="lambda expression", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="216-216"];
d140 [cluster="lambda expression", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="218-218"];
d142 [cluster="lambda expression", label="return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;", span="220-220"];
d144 [cluster="lambda expression", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="222-222"];
d148 [cluster="lambda expression", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="226-226"];
d192 [cluster="System.Linq.Enumerable.Empty<TResult>()", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
d193 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
d131 [cluster="lambda expression", label="Entry lambda expression", span="207-230"];
d133 [cluster="lambda expression", label="ErrorType.BadFormatTokenError", span="211-211"];
d135 [cluster="lambda expression", label="ErrorType.MissingValueOptionError", span="213-213"];
d137 [cluster="lambda expression", label="ErrorType.UnknownOptionError", span="215-215"];
d139 [cluster="lambda expression", label="ErrorType.MissingRequiredOptionError", span="217-217"];
d141 [cluster="lambda expression", label="ErrorType.MutuallyExclusiveSetError", span="219-219"];
d143 [cluster="lambda expression", label="ErrorType.SequenceOutOfRangeError", span="221-221"];
d145 [cluster="lambda expression", label="ErrorType.NoVerbSelectedError", span="223-223"];
d147 [cluster="lambda expression", label="ErrorType.BadVerbSelectedError", span="225-225"];
d149 [cluster="lambda expression", label="throw new InvalidOperationException();", span="228-228"];
d150 [cluster="lambda expression", label="Exit lambda expression", span="207-230"];
d146 [cluster="lambda expression", label="return ''ERR no-verb-selected'';", span="224-224"];
d151 [cluster="System.InvalidOperationException.InvalidOperationException()", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
d7 -> d8  [color=green, key=0, style=solid];
d7 -> d16  [color=green, key=2, style=dotted];
d7 -> d17  [color=green, key=2, style=dotted];
d7 -> d18  [color=green, key=2, style=dotted];
d7 -> d19  [color=green, key=2, style=dotted];
d7 -> d20  [color=green, key=2, style=dotted];
d6 -> d7  [color=green, key=0, style=solid];
d8 -> d9  [key=0, style=solid];
d8 -> d4  [key=2, style=dotted];
d8 -> d21  [key=2, style=dotted];
d8 -> d10  [color=darkseagreen4, key=1, label=lines, style=dashed];
d8 -> d11  [color=darkseagreen4, key=1, label=lines, style=dashed];
d8 -> d12  [color=darkseagreen4, key=1, label=lines, style=dashed];
d8 -> d13  [color=darkseagreen4, key=1, label=lines, style=dashed];
d8 -> d14  [color=darkseagreen4, key=1, label=lines, style=dashed];
d15 -> d6  [color=blue, key=0, style=bold];
d9 -> d10  [key=0, style=solid];
d9 -> d5  [key=2, style=dotted];
d10 -> d11  [key=0, style=solid];
d10 -> d5  [key=2, style=dotted];
d11 -> d12  [key=0, style=solid];
d11 -> d5  [key=2, style=dotted];
d12 -> d13  [key=0, style=solid];
d12 -> d5  [key=2, style=dotted];
d13 -> d14  [key=0, style=solid];
d13 -> d5  [key=2, style=dotted];
d14 -> d15  [key=0, style=solid];
d14 -> d5  [key=2, style=dotted];
d63 -> d17  [key=2, style=dotted];
d63 -> d64  [key=0, style=solid];
d63 -> d60  [key=2, style=dotted];
d63 -> d65  [color=darkseagreen4, key=1, label=sut, style=dashed];
d63 -> d66  [color=darkseagreen4, key=1, label=sut, style=dashed];
d78 -> d17  [key=2, style=dotted];
d78 -> d79  [key=0, style=solid];
d78 -> d60  [key=2, style=dotted];
d78 -> d80  [color=darkseagreen4, key=1, label=sut, style=dashed];
d78 -> d81  [color=darkseagreen4, key=1, label=sut, style=dashed];
d23 -> d19  [key=2, style=dotted];
d23 -> d20  [key=2, style=dotted];
d23 -> d24  [key=0, style=solid];
d23 -> d3  [key=2, style=dotted];
d23 -> d32  [key=2, style=dotted];
d23 -> d33  [key=2, style=dotted];
d36 -> d19  [key=2, style=dotted];
d36 -> d20  [key=2, style=dotted];
d36 -> d37  [key=0, style=solid];
d36 -> d3  [key=2, style=dotted];
d36 -> d45  [key=2, style=dotted];
d36 -> d33  [key=2, style=dotted];
d36 -> d49  [color=darkorchid, key=3, label="Local variable System.Reflection.Assembly assembly", style=bold];
d47 -> d19  [key=2, style=dotted];
d47 -> d20  [key=2, style=dotted];
d47 -> d48  [key=0, style=solid];
d47 -> d3  [key=2, style=dotted];
d47 -> d45  [key=2, style=dotted];
d47 -> d33  [key=2, style=dotted];
d93 -> d19  [key=2, style=dotted];
d93 -> d20  [key=2, style=dotted];
d93 -> d94  [key=0, style=solid];
d93 -> d102  [key=2, style=dotted];
d93 -> d33  [key=2, style=dotted];
d1 -> d4  [key=2, style=dotted];
d1 -> d5  [key=2, style=dotted];
d1 -> d2  [key=0, style=solid];
d1 -> d3  [key=2, style=dotted];
d24 -> d4  [key=2, style=dotted];
d24 -> d21  [key=2, style=dotted];
d24 -> d25  [key=0, style=solid];
d24 -> d34  [key=2, style=dotted];
d24 -> d26  [color=darkseagreen4, key=1, label=lines, style=dashed];
d24 -> d27  [color=darkseagreen4, key=1, label=lines, style=dashed];
d24 -> d28  [color=darkseagreen4, key=1, label=lines, style=dashed];
d24 -> d29  [color=darkseagreen4, key=1, label=lines, style=dashed];
d24 -> d30  [color=darkseagreen4, key=1, label=lines, style=dashed];
d37 -> d4  [key=2, style=dotted];
d37 -> d21  [key=2, style=dotted];
d37 -> d38  [key=0, style=solid];
d37 -> d34  [key=2, style=dotted];
d37 -> d39  [color=darkseagreen4, key=1, label=lines, style=dashed];
d37 -> d40  [color=darkseagreen4, key=1, label=lines, style=dashed];
d37 -> d41  [color=darkseagreen4, key=1, label=lines, style=dashed];
d37 -> d42  [color=darkseagreen4, key=1, label=lines, style=dashed];
d37 -> d43  [color=darkseagreen4, key=1, label=lines, style=dashed];
d48 -> d4  [key=2, style=dotted];
d48 -> d21  [key=2, style=dotted];
d48 -> d49  [key=0, style=solid];
d48 -> d34  [key=2, style=dotted];
d48 -> d50  [color=darkseagreen4, key=1, label=lines, style=dashed];
d48 -> d51  [color=darkseagreen4, key=1, label=lines, style=dashed];
d48 -> d52  [color=darkseagreen4, key=1, label=lines, style=dashed];
d48 -> d53  [color=darkseagreen4, key=1, label=lines, style=dashed];
d57 -> d4  [key=2, style=dotted];
d57 -> d21  [key=2, style=dotted];
d57 -> d58  [key=0, style=solid];
d57 -> d34  [key=2, style=dotted];
d66 -> d4  [key=2, style=dotted];
d66 -> d67  [key=0, style=solid];
d66 -> d74  [key=2, style=dotted];
d66 -> d68  [color=darkseagreen4, key=1, label=lines, style=dashed];
d66 -> d69  [color=darkseagreen4, key=1, label=lines, style=dashed];
d66 -> d70  [color=darkseagreen4, key=1, label=lines, style=dashed];
d66 -> d71  [color=darkseagreen4, key=1, label=lines, style=dashed];
d81 -> d4  [key=2, style=dotted];
d81 -> d82  [key=0, style=solid];
d81 -> d74  [key=2, style=dotted];
d81 -> d83  [color=darkseagreen4, key=1, label=lines, style=dashed];
d81 -> d84  [color=darkseagreen4, key=1, label=lines, style=dashed];
d81 -> d85  [color=darkseagreen4, key=1, label=lines, style=dashed];
d81 -> d86  [color=darkseagreen4, key=1, label=lines, style=dashed];
d81 -> d87  [color=darkseagreen4, key=1, label=lines, style=dashed];
d94 -> d4  [key=2, style=dotted];
d94 -> d95  [key=0, style=solid];
d94 -> d74  [key=2, style=dotted];
d94 -> d96  [color=darkseagreen4, key=1, label=lines, style=dashed];
d94 -> d97  [color=darkseagreen4, key=1, label=lines, style=dashed];
d94 -> d98  [color=darkseagreen4, key=1, label=lines, style=dashed];
d94 -> d99  [color=darkseagreen4, key=1, label=lines, style=dashed];
d94 -> d100  [color=darkseagreen4, key=1, label=lines, style=dashed];
d155 -> d4  [key=2, style=dotted];
d155 -> d21  [key=2, style=dotted];
d155 -> d156  [key=0, style=solid];
d155 -> d34  [key=2, style=dotted];
d155 -> d157  [color=darkseagreen4, key=1, label=lines, style=dashed];
d155 -> d158  [color=darkseagreen4, key=1, label=lines, style=dashed];
d155 -> d159  [color=darkseagreen4, key=1, label=lines, style=dashed];
d155 -> d160  [color=darkseagreen4, key=1, label=lines, style=dashed];
d155 -> d161  [color=darkseagreen4, key=1, label=lines, style=dashed];
d155 -> d162  [color=darkseagreen4, key=1, label=lines, style=dashed];
d155 -> d163  [color=darkseagreen4, key=1, label=lines, style=dashed];
d155 -> d164  [color=darkseagreen4, key=1, label=lines, style=dashed];
d172 -> d4  [key=2, style=dotted];
d172 -> d21  [key=2, style=dotted];
d172 -> d173  [key=0, style=solid];
d172 -> d34  [key=2, style=dotted];
d172 -> d174  [color=darkseagreen4, key=1, label=lines, style=dashed];
d172 -> d175  [color=darkseagreen4, key=1, label=lines, style=dashed];
d172 -> d176  [color=darkseagreen4, key=1, label=lines, style=dashed];
d172 -> d177  [color=darkseagreen4, key=1, label=lines, style=dashed];
d172 -> d178  [color=darkseagreen4, key=1, label=lines, style=dashed];
d184 -> d4  [key=2, style=dotted];
d184 -> d21  [key=2, style=dotted];
d184 -> d185  [key=0, style=solid];
d184 -> d34  [key=2, style=dotted];
d184 -> d186  [color=darkseagreen4, key=1, label=lines, style=dashed];
d184 -> d187  [color=darkseagreen4, key=1, label=lines, style=dashed];
d184 -> d188  [color=darkseagreen4, key=1, label=lines, style=dashed];
d184 -> d189  [color=darkseagreen4, key=1, label=lines, style=dashed];
d184 -> d190  [color=darkseagreen4, key=1, label=lines, style=dashed];
d107 -> d21  [key=2, style=dotted];
d107 -> d108  [key=0, style=solid];
d107 -> d109  [color=darkseagreen4, key=1, label=lines, style=dashed];
d107 -> d110  [color=darkseagreen4, key=1, label=lines, style=dashed];
d107 -> d111  [color=darkseagreen4, key=1, label=lines, style=dashed];
d107 -> d112  [color=darkseagreen4, key=1, label=lines, style=dashed];
d107 -> d113  [color=darkseagreen4, key=1, label=lines, style=dashed];
d107 -> d114  [color=darkseagreen4, key=1, label=lines, style=dashed];
d107 -> d115  [color=darkseagreen4, key=1, label=lines, style=dashed];
d62 -> d63  [key=0, style=solid];
d64 -> d65  [key=0, style=solid];
d65 -> d66  [key=0, style=solid];
d65 -> d73  [key=2, style=dotted];
d65 -> d33  [key=2, style=dotted];
d77 -> d78  [key=0, style=solid];
d79 -> d80  [key=0, style=solid];
d80 -> d81  [key=0, style=solid];
d80 -> d89  [key=2, style=dotted];
d80 -> d33  [key=2, style=dotted];
d22 -> d23  [key=0, style=solid];
d35 -> d36  [key=0, style=solid];
d49 -> d5  [key=2, style=dotted];
d49 -> d50  [key=0, style=solid];
d49 -> d51  [color=darkorchid, key=3, label="method methodReturn System.Reflection.Assembly GetExecutingOrEntryAssembly", style=bold];
d46 -> d47  [key=0, style=solid];
d91 -> d93  [color=darkseagreen4, key=1, label=sut, style=dashed];
d91 -> d94  [color=darkseagreen4, key=1, label=sut, style=dashed];
d91 -> d60  [key=2, style=dotted];
d91 -> d92  [key=0, style=solid];
d92 -> d93  [key=0, style=solid];
d25 -> d5  [key=2, style=dotted];
d25 -> d26  [key=0, style=solid];
d26 -> d5  [key=2, style=dotted];
d26 -> d27  [key=0, style=solid];
d27 -> d5  [key=2, style=dotted];
d27 -> d28  [key=0, style=solid];
d28 -> d5  [key=2, style=dotted];
d28 -> d29  [key=0, style=solid];
d29 -> d5  [key=2, style=dotted];
d29 -> d30  [key=0, style=solid];
d30 -> d5  [key=2, style=dotted];
d30 -> d31  [key=0, style=solid];
d38 -> d5  [key=2, style=dotted];
d38 -> d39  [key=0, style=solid];
d39 -> d5  [key=2, style=dotted];
d39 -> d40  [key=0, style=solid];
d40 -> d5  [key=2, style=dotted];
d40 -> d41  [key=0, style=solid];
d41 -> d5  [key=2, style=dotted];
d41 -> d42  [key=0, style=solid];
d42 -> d5  [key=2, style=dotted];
d42 -> d43  [key=0, style=solid];
d43 -> d5  [key=2, style=dotted];
d43 -> d44  [key=0, style=solid];
d50 -> d5  [key=2, style=dotted];
d50 -> d51  [key=0, style=solid];
d51 -> d5  [key=2, style=dotted];
d51 -> d52  [key=0, style=solid];
d52 -> d5  [key=2, style=dotted];
d52 -> d53  [key=0, style=solid];
d53 -> d5  [key=2, style=dotted];
d53 -> d54  [key=0, style=solid];
d58 -> d5  [key=2, style=dotted];
d58 -> d59  [key=0, style=solid];
d108 -> d5  [key=2, style=dotted];
d108 -> d109  [key=0, style=solid];
d109 -> d5  [key=2, style=dotted];
d109 -> d110  [key=0, style=solid];
d110 -> d5  [key=2, style=dotted];
d110 -> d111  [key=0, style=solid];
d111 -> d5  [key=2, style=dotted];
d111 -> d112  [key=0, style=solid];
d112 -> d5  [key=2, style=dotted];
d112 -> d113  [key=0, style=solid];
d113 -> d5  [key=2, style=dotted];
d113 -> d114  [key=0, style=solid];
d114 -> d5  [key=2, style=dotted];
d114 -> d115  [key=0, style=solid];
d115 -> d5  [key=2, style=dotted];
d115 -> d116  [key=0, style=solid];
d158 -> d5  [key=2, style=dotted];
d158 -> d159  [key=0, style=solid];
d159 -> d5  [key=2, style=dotted];
d159 -> d160  [key=0, style=solid];
d160 -> d5  [key=2, style=dotted];
d160 -> d161  [key=0, style=solid];
d161 -> d5  [key=2, style=dotted];
d161 -> d162  [key=0, style=solid];
d162 -> d5  [key=2, style=dotted];
d162 -> d163  [key=0, style=solid];
d163 -> d5  [key=2, style=dotted];
d163 -> d164  [key=0, style=solid];
d164 -> d5  [key=2, style=dotted];
d164 -> d165  [key=0, style=solid];
d175 -> d5  [key=2, style=dotted];
d175 -> d176  [key=0, style=solid];
d176 -> d5  [key=2, style=dotted];
d176 -> d177  [key=0, style=solid];
d177 -> d5  [key=2, style=dotted];
d177 -> d178  [key=0, style=solid];
d178 -> d5  [key=2, style=dotted];
d178 -> d179  [key=0, style=solid];
d187 -> d5  [key=2, style=dotted];
d187 -> d188  [key=0, style=solid];
d188 -> d5  [key=2, style=dotted];
d188 -> d189  [key=0, style=solid];
d189 -> d5  [key=2, style=dotted];
d189 -> d190  [key=0, style=solid];
d190 -> d5  [key=2, style=dotted];
d190 -> d191  [key=0, style=solid];
d0 -> d1  [key=0, style=solid];
d2 -> d0  [color=blue, key=0, style=bold];
d56 -> d57  [key=0, style=solid];
d56 -> d60  [key=2, style=dotted];
d56 -> d33  [key=2, style=dotted];
d56 -> d61  [key=2, style=dotted];
d67 -> d68  [key=0, style=solid];
d67 -> d75  [key=2, style=dotted];
d67 -> d76  [key=2, style=dotted];
d68 -> d69  [key=0, style=solid];
d68 -> d75  [key=2, style=dotted];
d68 -> d76  [key=2, style=dotted];
d69 -> d70  [key=0, style=solid];
d69 -> d75  [key=2, style=dotted];
d69 -> d76  [key=2, style=dotted];
d70 -> d71  [key=0, style=solid];
d70 -> d75  [key=2, style=dotted];
d70 -> d76  [key=2, style=dotted];
d71 -> d72  [key=0, style=solid];
d71 -> d75  [key=2, style=dotted];
d71 -> d76  [key=2, style=dotted];
d82 -> d83  [key=0, style=solid];
d82 -> d75  [key=2, style=dotted];
d82 -> d76  [key=2, style=dotted];
d83 -> d84  [key=0, style=solid];
d83 -> d75  [key=2, style=dotted];
d83 -> d76  [key=2, style=dotted];
d84 -> d85  [key=0, style=solid];
d84 -> d75  [key=2, style=dotted];
d84 -> d76  [key=2, style=dotted];
d85 -> d86  [key=0, style=solid];
d85 -> d75  [key=2, style=dotted];
d85 -> d76  [key=2, style=dotted];
d86 -> d87  [key=0, style=solid];
d86 -> d75  [key=2, style=dotted];
d86 -> d76  [key=2, style=dotted];
d87 -> d88  [key=0, style=solid];
d87 -> d75  [key=2, style=dotted];
d87 -> d76  [key=2, style=dotted];
d95 -> d96  [key=0, style=solid];
d95 -> d75  [key=2, style=dotted];
d95 -> d76  [key=2, style=dotted];
d96 -> d97  [key=0, style=solid];
d96 -> d75  [key=2, style=dotted];
d96 -> d76  [key=2, style=dotted];
d97 -> d98  [key=0, style=solid];
d97 -> d75  [key=2, style=dotted];
d97 -> d76  [key=2, style=dotted];
d98 -> d99  [key=0, style=solid];
d98 -> d75  [key=2, style=dotted];
d98 -> d76  [key=2, style=dotted];
d99 -> d100  [key=0, style=solid];
d99 -> d75  [key=2, style=dotted];
d99 -> d76  [key=2, style=dotted];
d100 -> d101  [key=0, style=solid];
d100 -> d75  [key=2, style=dotted];
d100 -> d76  [key=2, style=dotted];
d154 -> d155  [key=0, style=solid];
d154 -> d166  [key=2, style=dotted];
d156 -> d157  [key=0, style=solid];
d156 -> d167  [key=2, style=dotted];
d156 -> d168  [key=2, style=dotted];
d157 -> d158  [key=0, style=solid];
d157 -> d167  [key=2, style=dotted];
d157 -> d168  [key=2, style=dotted];
d171 -> d172  [key=0, style=solid];
d171 -> d166  [key=2, style=dotted];
d173 -> d174  [key=0, style=solid];
d173 -> d167  [key=2, style=dotted];
d173 -> d168  [key=2, style=dotted];
d174 -> d175  [key=0, style=solid];
d174 -> d167  [key=2, style=dotted];
d174 -> d168  [key=2, style=dotted];
d183 -> d184  [key=0, style=solid];
d183 -> d166  [key=2, style=dotted];
d185 -> d186  [key=0, style=solid];
d185 -> d167  [key=2, style=dotted];
d185 -> d168  [key=2, style=dotted];
d186 -> d187  [key=0, style=solid];
d186 -> d167  [key=2, style=dotted];
d186 -> d168  [key=2, style=dotted];
d106 -> d107  [key=0, style=solid];
d106 -> d130  [key=2, style=dotted];
d72 -> d62  [color=blue, key=0, style=bold];
d88 -> d77  [color=blue, key=0, style=bold];
d31 -> d22  [color=blue, key=0, style=bold];
d153 -> d32  [key=2, style=dotted];
d153 -> d154  [key=0, style=solid];
d153 -> d117  [key=2, style=dotted];
d153 -> d119  [key=2, style=dotted];
d153 -> d125  [key=2, style=dotted];
d153 -> d121  [key=2, style=dotted];
d44 -> d35  [color=blue, key=0, style=bold];
d54 -> d46  [color=blue, key=0, style=bold];
d90 -> d91  [key=0, style=solid];
d59 -> d55  [color=blue, key=0, style=bold];
d116 -> d103  [color=blue, key=0, style=bold];
d165 -> d152  [color=blue, key=0, style=bold];
d179 -> d169  [color=blue, key=0, style=bold];
d191 -> d180  [color=blue, key=0, style=bold];
d55 -> d56  [key=0, style=solid];
d101 -> d90  [color=blue, key=0, style=bold];
d170 -> d171  [key=0, style=solid];
d170 -> d117  [key=2, style=dotted];
d170 -> d118  [key=2, style=dotted];
d170 -> d129  [key=2, style=dotted];
d182 -> d183  [key=0, style=solid];
d182 -> d194  [key=2, style=dotted];
d182 -> d118  [key=2, style=dotted];
d182 -> d129  [key=2, style=dotted];
d104 -> d106  [color=darkseagreen4, key=1, label=fakeResult, style=dashed];
d104 -> d105  [key=0, style=solid];
d104 -> d117  [key=2, style=dotted];
d104 -> d118  [key=2, style=dotted];
d104 -> d119  [key=2, style=dotted];
d104 -> d120  [key=2, style=dotted];
d104 -> d121  [key=2, style=dotted];
d104 -> d122  [key=2, style=dotted];
d104 -> d123  [key=2, style=dotted];
d104 -> d124  [key=2, style=dotted];
d104 -> d125  [key=2, style=dotted];
d104 -> d126  [key=2, style=dotted];
d104 -> d127  [key=2, style=dotted];
d104 -> d128  [key=2, style=dotted];
d104 -> d129  [key=2, style=dotted];
d105 -> d106  [key=0, style=solid];
d105 -> d132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d105 -> d134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d105 -> d136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d105 -> d138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d105 -> d140  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d105 -> d142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d105 -> d144  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d105 -> d148  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d152 -> d153  [key=0, style=solid];
d103 -> d104  [key=0, style=solid];
d169 -> d170  [key=0, style=solid];
d180 -> d181  [key=0, style=solid];
d181 -> d182  [key=0, style=solid];
d181 -> d192  [key=2, style=dotted];
d181 -> d193  [key=2, style=dotted];
d132 -> d133  [key=0, style=solid];
d132 -> d135  [key=0, style=solid];
d132 -> d137  [key=0, style=solid];
d132 -> d139  [key=0, style=solid];
d132 -> d141  [key=0, style=solid];
d132 -> d143  [key=0, style=solid];
d132 -> d145  [key=0, style=solid];
d132 -> d147  [key=0, style=solid];
d132 -> d149  [key=0, style=solid];
d134 -> d150  [key=0, style=solid];
d136 -> d150  [key=0, style=solid];
d138 -> d150  [key=0, style=solid];
d140 -> d150  [key=0, style=solid];
d142 -> d150  [key=0, style=solid];
d144 -> d150  [key=0, style=solid];
d148 -> d150  [key=0, style=solid];
d131 -> d132  [key=0, style=solid];
d131 -> d134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d131 -> d136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d131 -> d138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d131 -> d140  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d131 -> d142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d131 -> d144  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d131 -> d148  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d133 -> d134  [key=0, style=solid];
d135 -> d136  [key=0, style=solid];
d137 -> d138  [key=0, style=solid];
d139 -> d140  [key=0, style=solid];
d141 -> d142  [key=0, style=solid];
d143 -> d144  [key=0, style=solid];
d145 -> d146  [key=0, style=solid];
d147 -> d148  [key=0, style=solid];
d149 -> d150  [key=0, style=solid];
d149 -> d151  [key=2, style=dotted];
d150 -> d131  [color=blue, key=0, style=bold];
d146 -> d150  [key=0, style=solid];
}
