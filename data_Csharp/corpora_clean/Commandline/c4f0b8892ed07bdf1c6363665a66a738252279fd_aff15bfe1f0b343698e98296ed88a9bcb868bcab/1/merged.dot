digraph  {
n0 [label="Entry Humanizer.OrdinalizeExtensions.Ordinalize(string)", span="15-15", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(string)"];
n1 [label="return Ordinalize(int.Parse(numberString), numberString);", span="17-17", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(string)"];
n2 [label="Exit Humanizer.OrdinalizeExtensions.Ordinalize(string)", span="15-15", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(string)"];
n3 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)"];
n4 [label="Entry Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", span="30-30", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)"];
n5 [label="Entry Humanizer.OrdinalizeExtensions.Ordinalize(int)", span="25-25", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int)"];
n6 [label="return Ordinalize(number, number.ToString(CultureInfo.InvariantCulture));", span="27-27", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int)"];
n7 [label="Exit Humanizer.OrdinalizeExtensions.Ordinalize(int)", span="25-25", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int)"];
n8 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)"];
n9 [label="int nMod100 = number % 100", span="32-32", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)"];
n11 [label="return numberString + ''th'';", span="36-36", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)"];
n12 [label="number % 10", span="39-39", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)"];
n14 [label="return numberString + ''st'';", span="42-42", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)"];
n16 [label="return numberString + ''nd'';", span="44-44", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)"];
n18 [label="return numberString + ''rd'';", span="46-46", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)"];
n19 [label="return numberString + ''th'';", span="48-48", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)"];
n10 [label="nMod100 >= 11 && nMod100 <= 13", span="34-34", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)"];
n13 [label=1, span="41-41", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)"];
n15 [label=2, span="43-43", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)"];
n17 [label=3, span="45-45", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)"];
n20 [label="Exit Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", span="30-30", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)"];
d5 [label="return from t in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName()\r\n                            ? KeyValuePairHelper.Create(f.Text, tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Select(x => x.Text).ToArray())\r\n                            : KeyValuePairHelper.Create(string.Empty))\r\n                   where t.Key.Length > 0 && t.Value.Any()\r\n                   select t;", span="18-24", cluster="CommandLine.Core.KeyValuePairHelper.CreateSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", color=green, community=0];
d4 [label="Entry CommandLine.Core.KeyValuePairHelper.CreateSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="15-15", cluster="CommandLine.Core.KeyValuePairHelper.CreateSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)"];
d6 [label="Exit CommandLine.Core.KeyValuePairHelper.CreateSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="15-15", cluster="CommandLine.Core.KeyValuePairHelper.CreateSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)"];
d7 [label="Entry Unk.Pairwise", span="", cluster="Unk.Pairwise"];
d8 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()"];
d9 [label="Entry lambda expression", span="19-22", cluster="lambda expression"];
d10 [label="f.IsName()\r\n                            ? KeyValuePairHelper.Create(f.Text, tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Select(x => x.Text).ToArray())\r\n                            : KeyValuePairHelper.Create(string.Empty)", span="20-22", cluster="lambda expression", color=green, community=0];
d29 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
d11 [label="Exit lambda expression", span="19-22", cluster="lambda expression"];
d12 [label="Entry CommandLine.Core.Token.IsName()", span="72-72", cluster="CommandLine.Core.Token.IsName()"];
d13 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)"];
d14 [label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)"];
d15 [label="Entry Unk.Select", span="", cluster="Unk.Select"];
d16 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray"];
d17 [label="Entry Unk.Create", span="", cluster="Unk.Create"];
d0 [label="Entry CommandLine.Core.KeyValuePairHelper.Create(string, params string[])", span="10-10", cluster="CommandLine.Core.KeyValuePairHelper.Create(string, params string[])"];
d18 [label="Entry lambda expression", span="21-21", cluster="lambda expression"];
d22 [label="Entry lambda expression", span="21-21", cluster="lambda expression"];
d26 [label="Entry lambda expression", span="21-21", cluster="lambda expression"];
d19 [label="t.Equals(f)", span="21-21", cluster="lambda expression", color=green, community=0];
d30 [label="CommandLine.Core.Token", span=""];
d20 [label="Exit lambda expression", span="21-21", cluster="lambda expression"];
d21 [label="Entry CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="59-59", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)"];
d23 [label="v.IsValue()", span="21-21", cluster="lambda expression", color=green, community=0];
d24 [label="Exit lambda expression", span="21-21", cluster="lambda expression"];
d25 [label="Entry CommandLine.Core.Token.IsValue()", span="77-77", cluster="CommandLine.Core.Token.IsValue()"];
d27 [label="x.Text", span="21-21", cluster="lambda expression", color=green, community=0];
d28 [label="Exit lambda expression", span="21-21", cluster="lambda expression"];
d2 [label="Exit CommandLine.Core.KeyValuePairHelper.Create(string, params string[])", span="10-10", cluster="CommandLine.Core.KeyValuePairHelper.Create(string, params string[])"];
d1 [label="return new KeyValuePair<string, IEnumerable<string>>(value, values);", span="12-12", cluster="CommandLine.Core.KeyValuePairHelper.Create(string, params string[])"];
d3 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)"];
n0 -> n1  [key=0, style=solid];
n0 -> n4  [key=3, color=darkorchid, style=bold, label="method methodReturn string Ordinalize"];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n4  [key=2, style=dotted];
n2 -> n0  [key=0, style=bold, color=blue];
n4 -> n9  [key=0, style=solid];
n4 -> n11  [key=1, style=dashed, color=darkseagreen4, label=string];
n4 -> n12  [key=1, style=dashed, color=darkseagreen4, label=int];
n4 -> n14  [key=1, style=dashed, color=darkseagreen4, label=string];
n4 -> n16  [key=1, style=dashed, color=darkseagreen4, label=string];
n4 -> n18  [key=1, style=dashed, color=darkseagreen4, label=string];
n4 -> n19  [key=1, style=dashed, color=darkseagreen4, label=string];
n4 -> n0  [key=3, color=darkorchid, style=bold, label="Parameter variable string numberString"];
n4 -> n5  [key=3, color=darkorchid, style=bold, label="Parameter variable int number"];
n5 -> n6  [key=0, style=solid];
n5 -> n4  [key=3, color=darkorchid, style=bold, label="method methodReturn string Ordinalize"];
n6 -> n7  [key=0, style=solid];
n6 -> n8  [key=2, style=dotted];
n6 -> n4  [key=2, style=dotted];
n7 -> n5  [key=0, style=bold, color=blue];
n9 -> n10  [key=0, style=solid];
n11 -> n20  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n12 -> n15  [key=0, style=solid];
n12 -> n17  [key=0, style=solid];
n12 -> n19  [key=0, style=solid];
n14 -> n20  [key=0, style=solid];
n16 -> n20  [key=0, style=solid];
n18 -> n20  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n10 -> n12  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n17 -> n18  [key=0, style=solid];
n20 -> n4  [key=0, style=bold, color=blue];
d5 -> d5  [key=1, style=dashed, color=green, label=t];
d5 -> d6  [key=0, style=solid, color=green];
d5 -> d7  [key=2, style=dotted, color=green];
d5 -> d8  [key=2, style=dotted, color=green];
d5 -> d9  [key=1, style=dashed, color=green, label="lambda expression"];
d4 -> d5  [key=0, style=solid, color=green];
d4 -> d10  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
d6 -> d4  [key=0, style=bold, color=blue];
d9 -> d10  [key=0, style=solid, color=green];
d9 -> d19  [key=1, style=dashed, color=green, label="CommandLine.Core.Token"];
d10 -> d11  [key=0, style=solid, color=green];
d10 -> d12  [key=2, style=dotted, color=green];
d10 -> d13  [key=2, style=dotted, color=green];
d10 -> d14  [key=2, style=dotted, color=green];
d10 -> d15  [key=2, style=dotted, color=green];
d10 -> d16  [key=2, style=dotted, color=green];
d10 -> d17  [key=2, style=dotted, color=green];
d10 -> d0  [key=2, style=dotted, color=green];
d10 -> d18  [key=1, style=dashed, color=green, label="lambda expression"];
d10 -> d22  [key=1, style=dashed, color=green, label="lambda expression"];
d10 -> d26  [key=1, style=dashed, color=green, label="lambda expression"];
d29 -> d10  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
d11 -> d9  [key=0, style=bold, color=blue];
d0 -> d1  [key=0, style=solid];
d18 -> d19  [key=0, style=solid, color=green];
d22 -> d23  [key=0, style=solid, color=green];
d26 -> d27  [key=0, style=solid, color=green];
d19 -> d20  [key=0, style=solid, color=green];
d19 -> d21  [key=2, style=dotted, color=green];
d30 -> d19  [key=1, style=dashed, color=green, label="CommandLine.Core.Token"];
d20 -> d18  [key=0, style=bold, color=blue];
d23 -> d24  [key=0, style=solid, color=green];
d23 -> d25  [key=2, style=dotted, color=green];
d24 -> d22  [key=0, style=bold, color=blue];
d27 -> d28  [key=0, style=solid, color=green];
d28 -> d26  [key=0, style=bold, color=blue];
d2 -> d0  [key=0, style=bold, color=blue];
d1 -> d2  [key=0, style=solid];
d1 -> d3  [key=2, style=dotted];
}
