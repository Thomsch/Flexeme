digraph  {
n6 [label="CommandLine.Tests.Fakes.FakeImmutableOptions", span=""];
n0 [label="Entry CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", span="13-13", cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)"];
n1 [label="this.stringValue = stringValue", span="15-15", cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)"];
n2 [label="this.intSequence = intSequence", span="16-16", cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)"];
n3 [label="this.boolValue = boolValue", span="17-17", cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)"];
n4 [label="this.longValue = longValue", span="18-18", cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)"];
n5 [label="Exit CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", span="13-13", cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)"];
m3_10 [label="Entry Ninject.Parameters.TypeMatchingConstructorArgument.AppliesToTarget(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", span="92-92", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.AppliesToTarget(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="FakeOptionsWithDouble.cs"];
m3_11 [label="return target.Type == this.type;", span="94-94", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.AppliesToTarget(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="FakeOptionsWithDouble.cs"];
m3_12 [label="Exit Ninject.Parameters.TypeMatchingConstructorArgument.AppliesToTarget(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", span="92-92", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.AppliesToTarget(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="FakeOptionsWithDouble.cs"];
m3_31 [label="Entry System.Type.GetHashCode()", span="0-0", cluster="System.Type.GetHashCode()", file="FakeOptionsWithDouble.cs"];
m3_28 [label="Entry Ninject.Parameters.TypeMatchingConstructorArgument.GetHashCode()", span="135-135", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.GetHashCode()", file="FakeOptionsWithDouble.cs"];
m3_29 [label="return this.GetType().GetHashCode() ^ this.type.GetHashCode();", span="137-137", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.GetHashCode()", file="FakeOptionsWithDouble.cs"];
m3_30 [label="Exit Ninject.Parameters.TypeMatchingConstructorArgument.GetHashCode()", span="135-135", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.GetHashCode()", file="FakeOptionsWithDouble.cs"];
m3_0 [label="Entry Ninject.Parameters.TypeMatchingConstructorArgument.TypeMatchingConstructorArgument(System.Type, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", span="39-39", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.TypeMatchingConstructorArgument(System.Type, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", file="FakeOptionsWithDouble.cs"];
m3_1 [label="Exit Ninject.Parameters.TypeMatchingConstructorArgument.TypeMatchingConstructorArgument(System.Type, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", span="39-39", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.TypeMatchingConstructorArgument(System.Type, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>)", file="FakeOptionsWithDouble.cs"];
m3_9 [label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="17-17", cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="FakeOptionsWithDouble.cs"];
m3_27 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)", file="FakeOptionsWithDouble.cs"];
m3_22 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="FakeOptionsWithDouble.cs"];
m3_23 [label="Entry Ninject.Parameters.TypeMatchingConstructorArgument.Equals(object)", span="125-125", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.Equals(object)", file="FakeOptionsWithDouble.cs"];
m3_24 [label="var parameter = obj as IParameter", span="127-127", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.Equals(object)", file="FakeOptionsWithDouble.cs"];
m3_25 [label="return parameter != null ? this.Equals(parameter) : ReferenceEquals(this, obj);", span="128-128", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.Equals(object)", file="FakeOptionsWithDouble.cs"];
m3_26 [label="Exit Ninject.Parameters.TypeMatchingConstructorArgument.Equals(object)", span="125-125", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.Equals(object)", file="FakeOptionsWithDouble.cs"];
m3_17 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="FakeOptionsWithDouble.cs"];
m3_2 [label="Entry Ninject.Parameters.TypeMatchingConstructorArgument.TypeMatchingConstructorArgument(System.Type, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>, bool)", span="50-50", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.TypeMatchingConstructorArgument(System.Type, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>, bool)", file="FakeOptionsWithDouble.cs"];
m3_3 [label="Ensure.ArgumentNotNull(type, ''type'')", span="52-52", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.TypeMatchingConstructorArgument(System.Type, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>, bool)", file="FakeOptionsWithDouble.cs"];
m3_4 [label="Ensure.ArgumentNotNull(valueCallback, ''valueCallback'')", span="53-53", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.TypeMatchingConstructorArgument(System.Type, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>, bool)", file="FakeOptionsWithDouble.cs"];
m3_5 [label="this.ValueCallback = valueCallback", span="55-55", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.TypeMatchingConstructorArgument(System.Type, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>, bool)", file="FakeOptionsWithDouble.cs"];
m3_6 [label="this.ShouldInherit = shouldInherit", span="56-56", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.TypeMatchingConstructorArgument(System.Type, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>, bool)", file="FakeOptionsWithDouble.cs"];
m3_7 [label="this.type = type", span="57-57", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.TypeMatchingConstructorArgument(System.Type, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>, bool)", file="FakeOptionsWithDouble.cs"];
m3_8 [label="Exit Ninject.Parameters.TypeMatchingConstructorArgument.TypeMatchingConstructorArgument(System.Type, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>, bool)", span="50-50", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.TypeMatchingConstructorArgument(System.Type, System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>, bool)", file="FakeOptionsWithDouble.cs"];
m3_18 [label="Entry Ninject.Parameters.TypeMatchingConstructorArgument.Equals(Ninject.Parameters.IParameter)", span="114-114", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.Equals(Ninject.Parameters.IParameter)", file="FakeOptionsWithDouble.cs"];
m3_19 [label="var argument = other as TypeMatchingConstructorArgument", span="116-116", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.Equals(Ninject.Parameters.IParameter)", file="FakeOptionsWithDouble.cs"];
m3_20 [label="return argument != null && other.GetType() == this.type;", span="117-117", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.Equals(Ninject.Parameters.IParameter)", file="FakeOptionsWithDouble.cs"];
m3_21 [label="Exit Ninject.Parameters.TypeMatchingConstructorArgument.Equals(Ninject.Parameters.IParameter)", span="114-114", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.Equals(Ninject.Parameters.IParameter)", file="FakeOptionsWithDouble.cs"];
m3_13 [label="Entry Ninject.Parameters.TypeMatchingConstructorArgument.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", span="103-103", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="FakeOptionsWithDouble.cs"];
m3_14 [label="Ensure.ArgumentNotNull(context, ''context'')", span="105-105", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="FakeOptionsWithDouble.cs"];
m3_15 [label="return this.ValueCallback(context, target);", span="106-106", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="FakeOptionsWithDouble.cs"];
m3_16 [label="Exit Ninject.Parameters.TypeMatchingConstructorArgument.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", span="103-103", cluster="Ninject.Parameters.TypeMatchingConstructorArgument.GetValue(Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="FakeOptionsWithDouble.cs"];
m3_32 [label="Ninject.Parameters.TypeMatchingConstructorArgument", span="", file="FakeOptionsWithDouble.cs"];
m4_13 [label="Entry Ninject.Planning.Bindings.Binding.GetProvider(Ninject.Activation.IContext)", span="209-209", cluster="Ninject.Planning.Bindings.Binding.GetProvider(Ninject.Activation.IContext)", file="FakeOptionsWithEnum.cs"];
m4_14 [label="return this.BindingConfiguration.GetProvider(context);", span="211-211", cluster="Ninject.Planning.Bindings.Binding.GetProvider(Ninject.Activation.IContext)", file="FakeOptionsWithEnum.cs"];
m4_15 [label="Exit Ninject.Planning.Bindings.Binding.GetProvider(Ninject.Activation.IContext)", span="209-209", cluster="Ninject.Planning.Bindings.Binding.GetProvider(Ninject.Activation.IContext)", file="FakeOptionsWithEnum.cs"];
m4_7 [label="Entry Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingConfiguration)", span="41-41", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingConfiguration)", file="FakeOptionsWithEnum.cs"];
m4_8 [label="Ensure.ArgumentNotNull(service, ''service'')", span="43-43", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingConfiguration)", file="FakeOptionsWithEnum.cs"];
m4_9 [label="Ensure.ArgumentNotNull(configuration, ''configuration'')", span="44-44", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingConfiguration)", file="FakeOptionsWithEnum.cs"];
m4_10 [label="this.Service = service", span="46-46", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingConfiguration)", file="FakeOptionsWithEnum.cs"];
m4_11 [label="this.BindingConfiguration = configuration", span="47-47", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingConfiguration)", file="FakeOptionsWithEnum.cs"];
m4_12 [label="Exit Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingConfiguration)", span="41-41", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingConfiguration)", file="FakeOptionsWithEnum.cs"];
m4_16 [label="Entry Ninject.Planning.Bindings.IBindingConfiguration.GetProvider(Ninject.Activation.IContext)", span="88-88", cluster="Ninject.Planning.Bindings.IBindingConfiguration.GetProvider(Ninject.Activation.IContext)", file="FakeOptionsWithEnum.cs"];
m4_6 [label="Entry Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration()", span="37-37", cluster="Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration()", file="FakeOptionsWithEnum.cs"];
m4_21 [label="Entry Ninject.Planning.Bindings.Binding.Matches(Ninject.Activation.IRequest)", span="234-234", cluster="Ninject.Planning.Bindings.Binding.Matches(Ninject.Activation.IRequest)", file="FakeOptionsWithEnum.cs"];
m4_22 [label="return this.BindingConfiguration.Matches(request);", span="236-236", cluster="Ninject.Planning.Bindings.Binding.Matches(Ninject.Activation.IRequest)", file="FakeOptionsWithEnum.cs"];
m4_23 [label="Exit Ninject.Planning.Bindings.Binding.Matches(Ninject.Activation.IRequest)", span="234-234", cluster="Ninject.Planning.Bindings.Binding.Matches(Ninject.Activation.IRequest)", file="FakeOptionsWithEnum.cs"];
m4_0 [label="Entry Ninject.Planning.Bindings.Binding.Binding(System.Type)", span="28-28", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type)", file="FakeOptionsWithEnum.cs"];
m4_1 [label="Ensure.ArgumentNotNull(service, ''service'')", span="30-30", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type)", file="FakeOptionsWithEnum.cs"];
m4_2 [label="this.Service = service", span="32-32", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type)", file="FakeOptionsWithEnum.cs"];
m4_3 [label="this.BindingConfiguration = new BindingConfiguration()", span="33-33", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type)", file="FakeOptionsWithEnum.cs"];
m4_4 [label="Exit Ninject.Planning.Bindings.Binding.Binding(System.Type)", span="28-28", cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type)", file="FakeOptionsWithEnum.cs"];
m4_17 [label="Entry Ninject.Planning.Bindings.Binding.GetScope(Ninject.Activation.IContext)", span="221-221", cluster="Ninject.Planning.Bindings.Binding.GetScope(Ninject.Activation.IContext)", file="FakeOptionsWithEnum.cs"];
m4_18 [label="return this.BindingConfiguration.GetScope(context);", span="223-223", cluster="Ninject.Planning.Bindings.Binding.GetScope(Ninject.Activation.IContext)", file="FakeOptionsWithEnum.cs"];
m4_19 [label="Exit Ninject.Planning.Bindings.Binding.GetScope(Ninject.Activation.IContext)", span="221-221", cluster="Ninject.Planning.Bindings.Binding.GetScope(Ninject.Activation.IContext)", file="FakeOptionsWithEnum.cs"];
m4_5 [label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="17-17", cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="FakeOptionsWithEnum.cs"];
m4_24 [label="Entry Ninject.Planning.Bindings.IBindingConfiguration.Matches(Ninject.Activation.IRequest)", span="103-103", cluster="Ninject.Planning.Bindings.IBindingConfiguration.Matches(Ninject.Activation.IRequest)", file="FakeOptionsWithEnum.cs"];
m4_20 [label="Entry Ninject.Planning.Bindings.IBindingConfiguration.GetScope(Ninject.Activation.IContext)", span="95-95", cluster="Ninject.Planning.Bindings.IBindingConfiguration.GetScope(Ninject.Activation.IContext)", file="FakeOptionsWithEnum.cs"];
m4_25 [label="Ninject.Planning.Bindings.Binding", span="", file="FakeOptionsWithEnum.cs"];
m7_4 [label="Entry Mock<IKernel>.cstr", span="", cluster="Mock<IKernel>.cstr", file="FakeOptionsWithMaxZero.cs"];
m7_20 [label="Entry Unk.Load", span="", cluster="Unk.Load", file="FakeOptionsWithMaxZero.cs"];
m7_14 [label="Entry Ninject.Modules.CompiledModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="57-57", cluster="Ninject.Modules.CompiledModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="FakeOptionsWithMaxZero.cs"];
m7_0 [label="Entry Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", span="19-19", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", file="FakeOptionsWithMaxZero.cs"];
m7_1 [label="kernelMock = new Mock<IKernel>()", span="21-21", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", file="FakeOptionsWithMaxZero.cs"];
m7_2 [label="loaderPlugin = new CompiledModuleLoaderPlugin(kernelMock.Object)", span="22-22", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", file="FakeOptionsWithMaxZero.cs"];
m7_3 [label="Exit Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", span="19-19", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext.CompiledModuleLoaderPluginContext()", file="FakeOptionsWithMaxZero.cs"];
m7_13 [label="Entry Unk.ShouldNotBeNull", span="", cluster="Unk.ShouldNotBeNull", file="FakeOptionsWithMaxZero.cs"];
m7_24 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="FakeOptionsWithMaxZero.cs"];
m7_21 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="FakeOptionsWithMaxZero.cs"];
m7_17 [label="x.Load(It.Is<IEnumerable<Assembly>>(p => p.Contains(expected)))", span="36-36", cluster="lambda expression", file="FakeOptionsWithMaxZero.cs"];
m7_22 [label="p.Contains(expected)", span="36-36", cluster="lambda expression", file="FakeOptionsWithMaxZero.cs"];
m7_16 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="FakeOptionsWithMaxZero.cs"];
m7_18 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="FakeOptionsWithMaxZero.cs"];
m7_23 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="FakeOptionsWithMaxZero.cs"];
m7_19 [label="Entry Unk.>", span="", cluster="Unk.>", file="FakeOptionsWithMaxZero.cs"];
m7_5 [label="Entry CompiledModuleLoaderPlugin.cstr", span="", cluster="CompiledModuleLoaderPlugin.cstr", file="FakeOptionsWithMaxZero.cs"];
m7_6 [label="Entry Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", span="29-29", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="FakeOptionsWithMaxZero.cs"];
m7_7 [label="Assembly expected = Assembly.Load(''Ninject.Tests.TestModule'')", span="31-31", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="FakeOptionsWithMaxZero.cs"];
m7_8 [label="expected.ShouldNotBeNull()", span="32-32", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="FakeOptionsWithMaxZero.cs"];
m7_10 [label="kernelMock.Verify(x => x.Load(It.Is<IEnumerable<Assembly>>(p => p.Contains(expected))))", span="36-36", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="FakeOptionsWithMaxZero.cs"];
m7_9 [label="loaderPlugin.LoadModules(new[] { assemblyFilename })", span="34-34", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="FakeOptionsWithMaxZero.cs"];
m7_11 [label="Exit Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", span="29-29", cluster="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled.CallsLoadMethodOnKernelWithAssemblies()", file="FakeOptionsWithMaxZero.cs"];
m7_12 [label="Entry System.Reflection.Assembly.Load(string)", span="0-0", cluster="System.Reflection.Assembly.Load(string)", file="FakeOptionsWithMaxZero.cs"];
m7_15 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="FakeOptionsWithMaxZero.cs"];
m7_25 [label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext", span="", file="FakeOptionsWithMaxZero.cs"];
m7_26 [label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled", span="", file="FakeOptionsWithMaxZero.cs"];
m7_27 [label=expected, span="", file="FakeOptionsWithMaxZero.cs"];
m15_0 [label="Entry Ninject.Selection.Heuristics.StandardInjectionHeuristic.ShouldInject(System.Reflection.MemberInfo)", span="30-30", cluster="Ninject.Selection.Heuristics.StandardInjectionHeuristic.ShouldInject(System.Reflection.MemberInfo)", file="FakeOptionsWithSequence.cs"];
m15_1 [label="Ensure.ArgumentNotNull(member, ''member'')", span="32-32", cluster="Ninject.Selection.Heuristics.StandardInjectionHeuristic.ShouldInject(System.Reflection.MemberInfo)", file="FakeOptionsWithSequence.cs"];
m15_2 [label="var propertyInfo = member as PropertyInfo", span="34-34", cluster="Ninject.Selection.Heuristics.StandardInjectionHeuristic.ShouldInject(System.Reflection.MemberInfo)", file="FakeOptionsWithSequence.cs"];
m15_6 [label="return member.HasAttribute(Settings.InjectAttribute) && setMethod != null;", span="46-46", cluster="Ninject.Selection.Heuristics.StandardInjectionHeuristic.ShouldInject(System.Reflection.MemberInfo)", file="FakeOptionsWithSequence.cs"];
m15_7 [label="return member.HasAttribute(Settings.InjectAttribute);", span="49-49", cluster="Ninject.Selection.Heuristics.StandardInjectionHeuristic.ShouldInject(System.Reflection.MemberInfo)", file="FakeOptionsWithSequence.cs"];
m15_3 [label="propertyInfo != null", span="36-36", cluster="Ninject.Selection.Heuristics.StandardInjectionHeuristic.ShouldInject(System.Reflection.MemberInfo)", file="FakeOptionsWithSequence.cs"];
m15_5 [label="var setMethod = propertyInfo.GetSetMethod(injectNonPublic)", span="44-44", cluster="Ninject.Selection.Heuristics.StandardInjectionHeuristic.ShouldInject(System.Reflection.MemberInfo)", file="FakeOptionsWithSequence.cs"];
m15_4 [label="bool injectNonPublic = Settings.InjectNonPublic", span="39-39", cluster="Ninject.Selection.Heuristics.StandardInjectionHeuristic.ShouldInject(System.Reflection.MemberInfo)", file="FakeOptionsWithSequence.cs"];
m15_8 [label="Exit Ninject.Selection.Heuristics.StandardInjectionHeuristic.ShouldInject(System.Reflection.MemberInfo)", span="30-30", cluster="Ninject.Selection.Heuristics.StandardInjectionHeuristic.ShouldInject(System.Reflection.MemberInfo)", file="FakeOptionsWithSequence.cs"];
m15_11 [label="Entry System.Reflection.MemberInfo.HasAttribute(System.Type)", span="69-69", cluster="System.Reflection.MemberInfo.HasAttribute(System.Type)", file="FakeOptionsWithSequence.cs"];
m15_10 [label="Entry System.Reflection.PropertyInfo.GetSetMethod(bool)", span="0-0", cluster="System.Reflection.PropertyInfo.GetSetMethod(bool)", file="FakeOptionsWithSequence.cs"];
m15_9 [label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="17-17", cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="FakeOptionsWithSequence.cs"];
m15_12 [label="Ninject.Selection.Heuristics.StandardInjectionHeuristic", span="", file="FakeOptionsWithSequence.cs"];
m22_7 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="FakeOptionsWithSets.cs"];
m22_5 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="FakeOptionsWithSets.cs"];
m22_0 [label="Entry Ninject.Planning.Bindings.Resolvers.OpenGenericBindingResolver.Resolve(Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>, System.Type)", span="32-32", cluster="Ninject.Planning.Bindings.Resolvers.OpenGenericBindingResolver.Resolve(Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>, System.Type)", file="FakeOptionsWithSets.cs"];
m22_1 [label="!service.IsGenericType || service.IsGenericTypeDefinition || !bindings.ContainsKey(service.GetGenericTypeDefinition())", span="34-34", cluster="Ninject.Planning.Bindings.Resolvers.OpenGenericBindingResolver.Resolve(Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>, System.Type)", file="FakeOptionsWithSets.cs"];
m22_3 [label="return bindings[service.GetGenericTypeDefinition()].ToEnumerable();", span="37-37", cluster="Ninject.Planning.Bindings.Resolvers.OpenGenericBindingResolver.Resolve(Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>, System.Type)", file="FakeOptionsWithSets.cs"];
m22_2 [label="return Enumerable.Empty<IBinding>();", span="35-35", cluster="Ninject.Planning.Bindings.Resolvers.OpenGenericBindingResolver.Resolve(Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>, System.Type)", file="FakeOptionsWithSets.cs"];
m22_4 [label="Exit Ninject.Planning.Bindings.Resolvers.OpenGenericBindingResolver.Resolve(Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>, System.Type)", span="32-32", cluster="Ninject.Planning.Bindings.Resolvers.OpenGenericBindingResolver.Resolve(Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>, System.Type)", file="FakeOptionsWithSets.cs"];
m22_6 [label="Entry Ninject.Infrastructure.Multimap<K, V>.ContainsKey(K)", span="113-113", cluster="Ninject.Infrastructure.Multimap<K, V>.ContainsKey(K)", file="FakeOptionsWithSets.cs"];
m22_8 [label="Entry System.Collections.Generic.IEnumerable<T>.ToEnumerable<T>()", span="40-40", cluster="System.Collections.Generic.IEnumerable<T>.ToEnumerable<T>()", file="FakeOptionsWithSets.cs"];
m23_0 [label="Entry CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", span="12-12", cluster="CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", file="FakeOptionsWithSimpleType.cs"];
m23_1 [label="this.value = value", span="14-14", cluster="CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", file="FakeOptionsWithSimpleType.cs"];
m23_2 [label="Exit CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", span="12-12", cluster="CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", file="FakeOptionsWithSimpleType.cs"];
m23_3 [label="CommandLine.Tests.Fakes.MySimpleType", span="", file="FakeOptionsWithSimpleType.cs"];
m25_16 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", span="107-107", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", file="FakeOptionsWithTwoRequired.cs"];
m25_17 [label="Exit Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", span="107-107", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", file="FakeOptionsWithTwoRequired.cs"];
m25_8 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToProvider(System.Type)", span="73-73", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToProvider(System.Type)", file="FakeOptionsWithTwoRequired.cs"];
m25_9 [label="Exit Ninject.Syntax.IBindingToSyntax<T1>.ToProvider(System.Type)", span="73-73", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToProvider(System.Type)", file="FakeOptionsWithTwoRequired.cs"];
m25_10 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToProvider<TImplementation>(Ninject.Activation.IProvider<TImplementation>)", span="81-81", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToProvider<TImplementation>(Ninject.Activation.IProvider<TImplementation>)", file="FakeOptionsWithTwoRequired.cs"];
m25_11 [label="Exit Ninject.Syntax.IBindingToSyntax<T1>.ToProvider<TImplementation>(Ninject.Activation.IProvider<TImplementation>)", span="81-81", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToProvider<TImplementation>(Ninject.Activation.IProvider<TImplementation>)", file="FakeOptionsWithTwoRequired.cs"];
m25_6 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToProvider<TProvider>()", span="64-64", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToProvider<TProvider>()", file="FakeOptionsWithTwoRequired.cs"];
m25_7 [label="Exit Ninject.Syntax.IBindingToSyntax<T1>.ToProvider<TProvider>()", span="64-64", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToProvider<TProvider>()", file="FakeOptionsWithTwoRequired.cs"];
m25_4 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To(System.Type)", span="56-56", cluster="Ninject.Syntax.IBindingToSyntax<T1>.To(System.Type)", file="FakeOptionsWithTwoRequired.cs"];
m25_5 [label="Exit Ninject.Syntax.IBindingToSyntax<T1>.To(System.Type)", span="56-56", cluster="Ninject.Syntax.IBindingToSyntax<T1>.To(System.Type)", file="FakeOptionsWithTwoRequired.cs"];
m25_2 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="48-48", cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="FakeOptionsWithTwoRequired.cs"];
m25_3 [label="Exit Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", span="48-48", cluster="Ninject.Syntax.IBindingToSyntax<T1>.To<TImplementation>()", file="FakeOptionsWithTwoRequired.cs"];
m25_14 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToMethod<TImplementation>(System.Func<Ninject.Activation.IContext, TImplementation>)", span="97-97", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToMethod<TImplementation>(System.Func<Ninject.Activation.IContext, TImplementation>)", file="FakeOptionsWithTwoRequired.cs"];
m25_15 [label="Exit Ninject.Syntax.IBindingToSyntax<T1>.ToMethod<TImplementation>(System.Func<Ninject.Activation.IContext, TImplementation>)", span="97-97", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToMethod<TImplementation>(System.Func<Ninject.Activation.IContext, TImplementation>)", file="FakeOptionsWithTwoRequired.cs"];
m25_0 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="41-41", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="FakeOptionsWithTwoRequired.cs"];
m25_1 [label="Exit Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", span="41-41", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToSelf()", file="FakeOptionsWithTwoRequired.cs"];
m25_12 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToMethod(System.Func<Ninject.Activation.IContext, T1>)", span="89-89", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToMethod(System.Func<Ninject.Activation.IContext, T1>)", file="FakeOptionsWithTwoRequired.cs"];
m25_13 [label="Exit Ninject.Syntax.IBindingToSyntax<T1>.ToMethod(System.Func<Ninject.Activation.IContext, T1>)", span="89-89", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToMethod(System.Func<Ninject.Activation.IContext, T1>)", file="FakeOptionsWithTwoRequired.cs"];
m25_18 [label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", span="117-117", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", file="FakeOptionsWithTwoRequired.cs"];
m25_19 [label="Exit Ninject.Syntax.IBindingToSyntax<T1>.ToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", span="117-117", cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", file="FakeOptionsWithTwoRequired.cs"];
m26_4 [label="Entry Ninject.StandardKernel.AddComponents()", span="64-64", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_5 [label="Components.Add<IPlanner, Planner>()", span="66-66", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_6 [label="Components.Add<IPlanningStrategy, ConstructorReflectionStrategy>()", span="67-67", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_7 [label="Components.Add<IPlanningStrategy, PropertyReflectionStrategy>()", span="68-68", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_8 [label="Components.Add<IPlanningStrategy, MethodReflectionStrategy>()", span="69-69", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_9 [label="Components.Add<ISelector, Selector>()", span="71-71", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_10 [label="Components.Add<IConstructorScorer, StandardConstructorScorer>()", span="72-72", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_11 [label="Components.Add<IInjectionHeuristic, StandardInjectionHeuristic>()", span="73-73", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_12 [label="Components.Add<IPipeline, Pipeline>()", span="75-75", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_13 [label="!Settings.ActivationCacheDisabled", span="76-76", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_14 [label="Components.Add<IActivationStrategy, ActivationCacheStrategy>()", span="78-78", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_15 [label="Components.Add<IActivationStrategy, PropertyInjectionStrategy>()", span="81-81", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_16 [label="Components.Add<IActivationStrategy, MethodInjectionStrategy>()", span="82-82", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_17 [label="Components.Add<IActivationStrategy, InitializableStrategy>()", span="83-83", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_18 [label="Components.Add<IActivationStrategy, StartableStrategy>()", span="84-84", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_19 [label="Components.Add<IActivationStrategy, BindingActionStrategy>()", span="85-85", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_20 [label="Components.Add<IActivationStrategy, DisposableStrategy>()", span="86-86", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_21 [label="Components.Add<IBindingResolver, StandardBindingResolver>()", span="88-88", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_22 [label="Components.Add<IBindingResolver, OpenGenericBindingResolver>()", span="89-89", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_23 [label="Components.Add<IMissingBindingResolver, DefaultValueBindingResolver>()", span="91-91", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_24 [label="Components.Add<IMissingBindingResolver, SelfBindingResolver>()", span="92-92", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_25 [label="!Settings.UseReflectionBasedInjection", span="95-95", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_26 [label="Components.Add<IInjectorFactory, DynamicMethodInjectorFactory>()", span="97-97", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_27 [label="Components.Add<IInjectorFactory, ReflectionInjectorFactory>()", span="102-102", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_28 [label="Components.Add<ICache, Cache>()", span="105-105", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_29 [label="Components.Add<IActivationCache, ActivationCache>()", span="106-106", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_30 [label="Components.Add<ICachePruner, GarbageCollectionCachePruner>()", span="107-107", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_31 [label="Components.Add<IModuleLoader, ModuleLoader>()", span="110-110", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_32 [label="Components.Add<IModuleLoaderPlugin, CompiledModuleLoaderPlugin>()", span="111-111", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_33 [label="Components.Add<IAssemblyNameRetriever, AssemblyNameRetriever>()", span="112-112", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_34 [label="Exit Ninject.StandardKernel.AddComponents()", span="64-64", cluster="Ninject.StandardKernel.AddComponents()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_35 [label="Entry Ninject.Components.IComponentContainer.Add<TComponent, TImplementation>()", span="31-31", cluster="Ninject.Components.IComponentContainer.Add<TComponent, TImplementation>()", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_0 [label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="48-48", cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_1 [label="Exit Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="48-48", cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_2 [label="Entry Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", span="57-57", cluster="Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_3 [label="Exit Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", span="57-57", cluster="Ninject.StandardKernel.StandardKernel(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m26_36 [label="Ninject.StandardKernel", span="", file="FakeOptionsWithTwoRequiredAndSets.cs"];
m27_2 [label="Entry Ninject.IKernelConfiguration.HasModule(string)", span="25-25", cluster="Ninject.IKernelConfiguration.HasModule(string)", file="FakeOptionsWithValues.cs"];
m27_3 [label="Exit Ninject.IKernelConfiguration.HasModule(string)", span="25-25", cluster="Ninject.IKernelConfiguration.HasModule(string)", file="FakeOptionsWithValues.cs"];
m27_4 [label="Entry Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", span="31-31", cluster="Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="FakeOptionsWithValues.cs"];
m27_5 [label="Exit Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", span="31-31", cluster="Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="FakeOptionsWithValues.cs"];
m27_8 [label="Entry Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", span="44-44", cluster="Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", file="FakeOptionsWithValues.cs"];
m27_9 [label="Exit Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", span="44-44", cluster="Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", file="FakeOptionsWithValues.cs"];
m27_6 [label="Entry Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<string>)", span="38-38", cluster="Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<string>)", file="FakeOptionsWithValues.cs"];
m27_7 [label="Exit Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<string>)", span="38-38", cluster="Ninject.IKernelConfiguration.Load(System.Collections.Generic.IEnumerable<string>)", file="FakeOptionsWithValues.cs"];
m27_12 [label="Entry Ninject.IKernelConfiguration.GetBindings(System.Type)", span="58-58", cluster="Ninject.IKernelConfiguration.GetBindings(System.Type)", file="FakeOptionsWithValues.cs"];
m27_13 [label="Exit Ninject.IKernelConfiguration.GetBindings(System.Type)", span="58-58", cluster="Ninject.IKernelConfiguration.GetBindings(System.Type)", file="FakeOptionsWithValues.cs"];
m27_10 [label="Entry Ninject.IKernelConfiguration.Unload(string)", span="51-51", cluster="Ninject.IKernelConfiguration.Unload(string)", file="FakeOptionsWithValues.cs"];
m27_11 [label="Exit Ninject.IKernelConfiguration.Unload(string)", span="51-51", cluster="Ninject.IKernelConfiguration.Unload(string)", file="FakeOptionsWithValues.cs"];
m27_0 [label="Entry Ninject.IKernelConfiguration.GetModules()", span="18-18", cluster="Ninject.IKernelConfiguration.GetModules()", file="FakeOptionsWithValues.cs"];
m27_1 [label="Exit Ninject.IKernelConfiguration.GetModules()", span="18-18", cluster="Ninject.IKernelConfiguration.GetModules()", file="FakeOptionsWithValues.cs"];
m28_3 [label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35", cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="FSharpOptionHelperTests.cs"];
m28_18 [label="Entry Unk.get_IsSome", span="", cluster="Unk.get_IsSome", file="FSharpOptionHelperTests.cs"];
m28_5 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="FSharpOptionHelperTests.cs"];
m28_24 [label="Entry Unk.get_IsNone", span="", cluster="Unk.get_IsNone", file="FSharpOptionHelperTests.cs"];
m28_0 [label="Entry CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Match_type_returns_true_if_FSharpOption()", span="14-14", cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Match_type_returns_true_if_FSharpOption()", file="FSharpOptionHelperTests.cs"];
m28_1 [label="ReflectionHelper.IsFSharpOptionType(TestData.PropertyType)\r\n                .Should().BeTrue()", span="16-17", cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Match_type_returns_true_if_FSharpOption()", file="FSharpOptionHelperTests.cs"];
m28_2 [label="Exit CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Match_type_returns_true_if_FSharpOption()", span="14-14", cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Match_type_returns_true_if_FSharpOption()", file="FSharpOptionHelperTests.cs"];
m28_6 [label="Entry CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Get_underlying_type()", span="21-21", cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Get_underlying_type()", file="FSharpOptionHelperTests.cs"];
m28_7 [label="FSharpOptionHelper.GetUnderlyingType(TestData.PropertyType).FullName\r\n                .ShouldBeEquivalentTo(''System.String'')", span="23-24", cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Get_underlying_type()", file="FSharpOptionHelperTests.cs"];
m28_8 [label="Exit CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Get_underlying_type()", span="21-21", cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Get_underlying_type()", file="FSharpOptionHelperTests.cs"];
m28_19 [label="Entry CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_none()", span="37-37", cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_none()", file="FSharpOptionHelperTests.cs"];
m28_20 [label="var expected = FSharpOptionHelper.None(FSharpOptionHelper.GetUnderlyingType(TestData.PropertyType))", span="39-39", cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_none()", file="FSharpOptionHelperTests.cs"];
m28_21 [label="FSharpOption<string>.get_IsNone((FSharpOption<string>)expected).Should().BeTrue()", span="41-41", cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_none()", file="FSharpOptionHelperTests.cs"];
m28_22 [label="Exit CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_none()", span="37-37", cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_none()", file="FSharpOptionHelperTests.cs"];
m28_17 [label="Entry Unk.>", span="", cluster="Unk.>", file="FSharpOptionHelperTests.cs"];
m28_16 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="14-14", cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="FSharpOptionHelperTests.cs"];
m28_23 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="22-22", cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="FSharpOptionHelperTests.cs"];
m28_4 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="FSharpOptionHelperTests.cs"];
m28_11 [label="Entry CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_some()", span="28-28", cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_some()", file="FSharpOptionHelperTests.cs"];
m28_12 [label="var expected = FSharpOptionHelper.Some(FSharpOptionHelper.GetUnderlyingType(TestData.PropertyType), ''with data'')", span="30-30", cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_some()", file="FSharpOptionHelperTests.cs"];
m28_13 [label="expected.Should().BeOfType<FSharpOption<string>>()", span="32-32", cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_some()", file="FSharpOptionHelperTests.cs"];
m28_14 [label="FSharpOption<string>.get_IsSome((FSharpOption<string>)expected).Should().BeTrue()", span="33-33", cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_some()", file="FSharpOptionHelperTests.cs"];
m28_15 [label="Exit CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_some()", span="28-28", cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_some()", file="FSharpOptionHelperTests.cs"];
m28_10 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="FSharpOptionHelperTests.cs"];
m28_9 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", span="8-8", cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="FSharpOptionHelperTests.cs"];
m28_25 [label="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests", span="", file="FSharpOptionHelperTests.cs"];
m30_50 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="96-96", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m30_51 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextEnum>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextEnum)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="100-103", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", color=green, community=0, file="HelpTextTests.cs"];
m30_52 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="107-107", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m30_53 [label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="108-108", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m30_54 [label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="109-109", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m30_55 [label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here.'')", span="110-110", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m30_56 [label="lines[3].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="111-111", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m30_57 [label="lines[4].ShouldBeEquivalentTo(''--version        Display version information.'')", span="112-112", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m30_58 [label="lines[5].ShouldBeEquivalentTo(''post-options'')", span="113-113", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m30_59 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="96-96", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m30_16 [label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="82-82", cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="HelpTextTests.cs"];
m30_126 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpTextTests.cs"];
m30_22 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="49-49", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m30_23 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptions>(TypeInfo.Create(typeof(FakeOptions)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="53-56", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", color=green, community=0, file="HelpTextTests.cs"];
m30_24 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="60-60", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m30_25 [label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="61-61", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m30_26 [label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="62-62", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m30_27 [label="lines[2].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="63-63", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m30_28 [label="lines[3].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="64-64", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m30_29 [label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="65-65", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m30_30 [label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="66-66", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m30_31 [label="lines[6].ShouldBeEquivalentTo(''value pos. 0     Define a long value here.'')", span="67-67", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m30_32 [label="lines[7].ShouldBeEquivalentTo(''post-options'')", span="68-68", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m30_33 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="49-49", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m30_66 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="134-134", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m30_67 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="138-138", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m30_68 [label="sut.MaximumDisplayWidth = 40", span="139-139", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m30_69 [label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescription>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescription)),\r\n                    Enumerable.Empty<Error>()))", span="140-143", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", color=green, community=0, file="HelpTextTests.cs"];
m30_70 [label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="146-146", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m30_71 [label="lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description'')", span="147-147", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m30_72 [label="lines[3].ShouldBeEquivalentTo(''                of the verbosity to '')", span="149-149", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m30_73 [label="lines[4].ShouldBeEquivalentTo(''                test out the wrapping '')", span="150-150", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m30_74 [label="lines[5].ShouldBeEquivalentTo(''                capabilities of the '')", span="151-151", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m30_75 [label="lines[6].ShouldBeEquivalentTo(''                Help Text.'')", span="152-152", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m30_76 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="134-134", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m30_218 [label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs"];
m30_78 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="157-157", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m30_79 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="161-161", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m30_80 [label="sut.MaximumDisplayWidth = 40", span="162-162", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m30_81 [label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescriptionAndNoSpaces>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescriptionAndNoSpaces)),\r\n                    Enumerable.Empty<Error>()))", span="163-166", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", color=green, community=0, file="HelpTextTests.cs"];
m30_82 [label="var lines = sut.ToString().ToNotEmptyLines()", span="169-169", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m30_83 [label="lines[1].ShouldBeEquivalentTo(''  v, verbose    Before '')", span="170-170", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m30_84 [label="lines[2].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="171-171", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m30_85 [label="lines[3].ShouldBeEquivalentTo(''                After'')", span="172-172", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m30_86 [label="lines[4].ShouldBeEquivalentTo(''  input-file    Before '')", span="173-173", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m30_87 [label="lines[5].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="174-174", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m30_88 [label="lines[6].ShouldBeEquivalentTo(''                456789 After'')", span="175-175", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m30_89 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="157-157", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m30_191 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpTextTests.cs"];
m30_116 [label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196", cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="HelpTextTests.cs"];
m30_149 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="262-262", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_150 [label="var fakeResult = new NotParsed<FakeOptions>(\r\n                TypeInfo.Create(typeof(FakeOptions)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="265-271", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", color=green, community=0, file="HelpTextTests.cs"];
m30_151 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="274-274", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_152 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="277-277", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_153 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="278-278", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_154 [label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="279-279", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_155 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="280-280", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_156 [label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="281-281", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_157 [label="lines[4].ShouldBeEquivalentTo(''A sequence option 'i' is defined with fewer or more items than required.'')", span="282-282", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_158 [label="lines[5].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="283-283", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_159 [label="lines[6].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="284-284", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_160 [label="lines[7].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="285-285", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_161 [label="lines[8].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="286-286", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_162 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="262-262", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_193 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="345-345", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m30_194 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextValue>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextValue)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="349-352", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", color=green, community=0, file="HelpTextTests.cs"];
m30_195 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="356-356", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m30_196 [label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="357-357", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m30_197 [label="lines[1].ShouldBeEquivalentTo(''--stringvalue=STR            Define a string value here.'')", span="358-358", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m30_198 [label="lines[2].ShouldBeEquivalentTo(''-i INTSEQ                    Define a int sequence here.'')", span="359-359", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m30_199 [label="lines[3].ShouldBeEquivalentTo(''-x                           Define a boolean or switch value here.'')", span="360-360", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m30_200 [label="lines[4].ShouldBeEquivalentTo(''--help                       Display this help screen.'')", span="361-361", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m30_201 [label="lines[5].ShouldBeEquivalentTo(''--version                    Display version information.'')", span="362-362", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m30_202 [label="lines[6].ShouldBeEquivalentTo(''number (pos. 0) NUM          Define a long value here.'')", span="363-363", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m30_203 [label="lines[7].ShouldBeEquivalentTo(''paintcolor (pos. 1) COLOR    Define a color value here.'')", span="364-364", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m30_204 [label="lines[8].ShouldBeEquivalentTo(''post-options'', lines[8])", span="365-365", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m30_205 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="345-345", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m30_39 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="73-73", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m30_40 [label="var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextEnum>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextEnum)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="77-80", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", color=green, community=0, file="HelpTextTests.cs"];
m30_41 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="84-84", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m30_42 [label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="85-85", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m30_43 [label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="86-86", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m30_44 [label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here. Valid values: Circle, Square,'')", span="87-87", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m30_45 [label="lines[3].ShouldBeEquivalentTo(''Triangle'')", span="88-88", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m30_46 [label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="89-89", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m30_47 [label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="90-90", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m30_48 [label="lines[6].ShouldBeEquivalentTo(''post-options'')", span="91-91", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m30_49 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="73-73", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m30_120 [label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291", cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs"];
m30_90 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="180-180", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m30_91 [label="var sut = new HelpText(''Heading Info.'')", span="184-184", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m30_92 [label="sut.MaximumDisplayWidth = 40", span="185-185", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m30_93 [label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new NotParsed<FakeOptionsForHelp>(TypeInfo.Create(typeof(FakeOptionsForHelp)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="186-188", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", color=green, community=0, file="HelpTextTests.cs"];
m30_94 [label="var lines = sut.ToString().ToNotEmptyLines()", span="191-191", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m30_95 [label="lines[1].ShouldBeEquivalentTo(''Before '')", span="192-192", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m30_96 [label="lines[2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="193-193", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m30_97 [label="lines[3].ShouldBeEquivalentTo(''012 After'')", span="194-194", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m30_98 [label="lines[lines.Length - 3].ShouldBeEquivalentTo(''Before '')", span="195-195", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m30_99 [label="lines[lines.Length - 2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="196-196", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m30_100 [label="lines[lines.Length - 1].ShouldBeEquivalentTo('' After'')", span="197-197", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m30_101 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="180-180", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m30_178 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="318-318", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_179 [label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb) })", span="321-322", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", color=green, community=0, file="HelpTextTests.cs"];
m30_180 [label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance),\r\n                    verbTypes),\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="323-326", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_181 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="329-329", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_182 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="332-332", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_183 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="334-334", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_184 [label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="335-335", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_185 [label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="336-336", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_186 [label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="337-337", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_187 [label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="338-338", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_188 [label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="339-339", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_189 [label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="340-340", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_190 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="318-318", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_0 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="19-19", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs"];
m30_1 [label="string.Empty.ShouldBeEquivalentTo(new HelpText().ToString())", span="21-21", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs"];
m30_2 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="19-19", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs"];
m30_256 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="HelpTextTests.cs"];
m30_258 [label="Entry System.Type.ToTypeInfo()", span="174-174", cluster="System.Type.ToTypeInfo()", file="HelpTextTests.cs"];
m30_145 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="HelpTextTests.cs"];
m30_36 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpTextTests.cs"];
m30_38 [label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15", cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="HelpTextTests.cs"];
m30_34 [label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163", cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpTextTests.cs"];
m30_123 [label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357", cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="HelpTextTests.cs"];
m30_3 [label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36", cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextTests.cs"];
m30_60 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="118-118", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m30_61 [label="var sut =\r\n                new HelpText(''Meta Value.'').AddOptions(\r\n                    new NotParsed<FakeOptionsWithMetaValue>(TypeInfo.Create(typeof(FakeOptionsWithMetaValue)), Enumerable.Empty<Error>()))", span="122-124", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", color=green, community=0, file="HelpTextTests.cs"];
m30_62 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="127-127", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m30_63 [label="lines[2].ShouldBeEquivalentTo(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="129-129", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m30_64 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="118-118", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m30_19 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextTests.cs"];
m30_125 [label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383", cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="HelpTextTests.cs"];
m30_206 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="370-370", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m30_207 [label="ParserResult<FakeOptionsWithUsageText> result =\r\n                new NotParsed<FakeOptionsWithUsageText>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithUsageText)), Enumerable.Empty<Error>())", span="373-375", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", color=green, community=0, file="HelpTextTests.cs"];
m30_208 [label="var text = HelpText.RenderUsageText(result)", span="378-378", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m30_209 [label="var lines = text.ToNotEmptyLines()", span="381-381", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m30_210 [label="lines[0].ShouldBeEquivalentTo(''Normal scenario:'')", span="384-384", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m30_211 [label="lines[1].ShouldBeEquivalentTo(''  mono testapp.exe --input file.bin --output out.bin'')", span="385-385", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m30_212 [label="lines[2].ShouldBeEquivalentTo(''Logging warnings:'')", span="386-386", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m30_213 [label="lines[3].ShouldBeEquivalentTo(''  mono testapp.exe -w --input file.bin'')", span="387-387", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m30_214 [label="lines[4].ShouldBeEquivalentTo(''Logging errors:'')", span="388-388", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m30_215 [label="lines[5].ShouldBeEquivalentTo(''  mono testapp.exe -e --input file.bin'')", span="389-389", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m30_216 [label="lines[6].ShouldBeEquivalentTo(''  mono testapp.exe --errs --input=file.bin'')", span="390-390", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m30_217 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="370-370", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m30_121 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="HelpTextTests.cs"];
m30_37 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs"];
m30_146 [label="Entry lambda expression", span="243-243", cluster="lambda expression", file="HelpTextTests.cs"];
m30_128 [label="err.Tag", span="222-222", cluster="lambda expression", file="HelpTextTests.cs"];
m30_130 [label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="225-225", cluster="lambda expression", file="HelpTextTests.cs"];
m30_132 [label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="227-227", cluster="lambda expression", file="HelpTextTests.cs"];
m30_134 [label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="229-229", cluster="lambda expression", file="HelpTextTests.cs"];
m30_136 [label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="231-231", cluster="lambda expression", file="HelpTextTests.cs"];
m30_138 [label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="233-233", cluster="lambda expression", file="HelpTextTests.cs"];
m30_142 [label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="237-237", cluster="lambda expression", file="HelpTextTests.cs"];
m30_127 [label="Entry lambda expression", span="220-241", cluster="lambda expression", file="HelpTextTests.cs"];
m30_129 [label="ErrorType.BadFormatTokenError", span="224-224", cluster="lambda expression", file="HelpTextTests.cs"];
m30_131 [label="ErrorType.MissingValueOptionError", span="226-226", cluster="lambda expression", file="HelpTextTests.cs"];
m30_133 [label="ErrorType.UnknownOptionError", span="228-228", cluster="lambda expression", file="HelpTextTests.cs"];
m30_135 [label="ErrorType.MissingRequiredOptionError", span="230-230", cluster="lambda expression", file="HelpTextTests.cs"];
m30_137 [label="ErrorType.SequenceOutOfRangeError", span="232-232", cluster="lambda expression", file="HelpTextTests.cs"];
m30_139 [label="ErrorType.NoVerbSelectedError", span="234-234", cluster="lambda expression", file="HelpTextTests.cs"];
m30_141 [label="ErrorType.BadVerbSelectedError", span="236-236", cluster="lambda expression", file="HelpTextTests.cs"];
m30_143 [label="throw new InvalidOperationException();", span="239-239", cluster="lambda expression", file="HelpTextTests.cs"];
m30_140 [label="return ''ERR no-verb-selected'';", span="235-235", cluster="lambda expression", file="HelpTextTests.cs"];
m30_144 [label="Exit lambda expression", span="220-241", cluster="lambda expression", file="HelpTextTests.cs"];
m30_147 [label="string.Empty", span="243-243", cluster="lambda expression", file="HelpTextTests.cs"];
m30_148 [label="Exit lambda expression", span="243-243", cluster="lambda expression", file="HelpTextTests.cs"];
m30_192 [label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34", cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="HelpTextTests.cs"];
m30_244 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", span="434-434", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs"];
m30_245 [label="var handlers = new CultureInfo(''en-US'').MakeCultureHandlers()", span="437-437", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs"];
m30_246 [label="var fakeResult =\r\n                new NotParsed<FakeOptionsWithDefaultSetToSequence>(\r\n                    typeof(FakeOptionsWithDefaultSetToSequence).ToTypeInfo(),\r\n                    new Error[] { new BadFormatTokenError(''badtoken'') })", span="438-441", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", color=green, community=0, file="HelpTextTests.cs"];
m30_247 [label="handlers.ChangeCulture()", span="444-444", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs"];
m30_249 [label="handlers.ResetCulture()", span="446-446", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs"];
m30_248 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="445-445", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs"];
m30_250 [label="var text = helpText.ToString()", span="449-449", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs"];
m30_251 [label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="450-450", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs"];
m30_252 [label="lines[4].Should().Be(''-z, --strseq    (Default: a b c)'')", span="452-452", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs"];
m30_253 [label="lines[5].Should().Be(''-y, --intseq    (Default: 1 2 3)'')", span="453-453", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs"];
m30_254 [label="lines[6].Should().Be(''-q, --dblseq    (Default: 1.1 2.2 3.3)'')", span="454-454", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs"];
m30_255 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", span="434-434", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs"];
m30_35 [label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29", cluster="CommandLine.TypeInfo.Create(System.Type)", file="HelpTextTests.cs"];
m30_65 [label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59", cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextTests.cs"];
m30_117 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs"];
m30_164 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="HelpTextTests.cs"];
m30_257 [label="Entry System.Globalization.CultureInfo.MakeCultureHandlers()", span="20-20", cluster="System.Globalization.CultureInfo.MakeCultureHandlers()", file="HelpTextTests.cs"];
m30_260 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="HelpTextTests.cs"];
m30_4 [label="Entry CommandLine.Text.HelpText.ToString()", span="580-580", cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextTests.cs"];
m30_165 [label="Entry Unk.StartWithEquivalent", span="", cluster="Unk.StartWithEquivalent", file="HelpTextTests.cs"];
m30_163 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs"];
m30_122 [label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421", cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="HelpTextTests.cs"];
m30_17 [label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextTests.cs"];
m30_119 [label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280", cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="HelpTextTests.cs"];
m30_18 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="HelpTextTests.cs"];
m30_20 [label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextTests.cs"];
m30_21 [label="Entry string.ToNotEmptyLines()", span="10-10", cluster="string.ToNotEmptyLines()", file="HelpTextTests.cs"];
m30_219 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="394-394", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_220 [label="var fakeResult = new NotParsed<FakeOptionsWithUsageText>(\r\n                TypeInfo.Create(typeof(FakeOptionsWithUsageText)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken'')\r\n                    })", span="397-402", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", color=green, community=0, file="HelpTextTests.cs"];
m30_221 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="405-405", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_222 [label="var text = helpText.ToString()", span="408-408", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_223 [label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="409-409", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_224 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="410-410", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_225 [label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="411-411", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_226 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="412-412", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_227 [label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="413-413", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_228 [label="lines[4].ShouldBeEquivalentTo(''USAGE:'')", span="414-414", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_229 [label="lines[5].ShouldBeEquivalentTo(''Normal scenario:'')", span="415-415", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_230 [label="lines[6].ShouldBeEquivalentTo(''mono testapp.exe --input file.bin --output out.bin'')", span="416-416", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_231 [label="lines[7].ShouldBeEquivalentTo(''Logging warnings:'')", span="417-417", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_232 [label="lines[8].ShouldBeEquivalentTo(''mono testapp.exe -w --input file.bin'')", span="418-418", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_233 [label="lines[9].ShouldBeEquivalentTo(''Logging errors:'')", span="419-419", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_234 [label="lines[10].ShouldBeEquivalentTo(''mono testapp.exe -e --input file.bin'')", span="420-420", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_235 [label="lines[11].ShouldBeEquivalentTo(''mono testapp.exe --errs --input=file.bin'')", span="421-421", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_236 [label="lines[12].ShouldBeEquivalentTo(''-i, --input     Set input file.'')", span="422-422", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_237 [label="lines[13].ShouldBeEquivalentTo(''-i, --output    Set output file.'')", span="423-423", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_238 [label="lines[14].ShouldBeEquivalentTo(''--verbose       Set verbosity level.'')", span="424-424", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_239 [label="lines[15].ShouldBeEquivalentTo(''-w, --warns     Log warnings.'')", span="425-425", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_240 [label="lines[16].ShouldBeEquivalentTo(''-e, --errs      Log errors.'')", span="426-426", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_241 [label="lines[17].ShouldBeEquivalentTo(''--help          Display this help screen.'')", span="427-427", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_242 [label="lines[18].ShouldBeEquivalentTo(''--version       Display version information.'')", span="428-428", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_243 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="394-394", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_118 [label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20", cluster="CommandLine.NameInfo.NameInfo(string, string)", file="HelpTextTests.cs"];
m30_6 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="25-25", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m30_7 [label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="29-34", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m30_8 [label="var lines = sut.ToString().ToNotEmptyLines()", span="37-37", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m30_9 [label="lines[0].ShouldBeEquivalentTo(''Unit-tests 2.0'')", span="39-39", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m30_10 [label="lines[1].ShouldBeEquivalentTo(''Copyright (C) 2005 - 2013 Author'')", span="40-40", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m30_11 [label="lines[2].ShouldBeEquivalentTo(''pre-options line 1'')", span="41-41", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m30_12 [label="lines[3].ShouldBeEquivalentTo(''pre-options line 2'')", span="42-42", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m30_13 [label="lines[4].ShouldBeEquivalentTo(''post-options line 1'')", span="43-43", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m30_14 [label="lines[5].ShouldBeEquivalentTo(''post-options line 2'')", span="44-44", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m30_15 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="25-25", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m30_102 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="203-203", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_103 [label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="206-219", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_104 [label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="220-241", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_106 [label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, fakeMutExclRenderer, 2)", span="246-246", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_105 [label="Func<IEnumerable<MutuallyExclusiveSetError>, string> fakeMutExclRenderer =\r\n                _ => string.Empty", span="242-243", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_107 [label="var lines = errorsText.ToNotEmptyLines()", span="249-249", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_108 [label="lines[0].ShouldBeEquivalentTo(''  ERR badtoken'')", span="251-251", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_109 [label="lines[1].ShouldBeEquivalentTo(''  ERR x, switch'')", span="252-252", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_110 [label="lines[2].ShouldBeEquivalentTo(''  ERR unknown'')", span="253-253", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_111 [label="lines[3].ShouldBeEquivalentTo(''  ERR missing'')", span="254-254", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_112 [label="lines[4].ShouldBeEquivalentTo(''  ERR s, sequence'')", span="255-255", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_113 [label="lines[5].ShouldBeEquivalentTo(''  ERR no-verb-selected'')", span="256-256", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_114 [label="lines[6].ShouldBeEquivalentTo(''  ERR badverb'')", span="257-257", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_115 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="203-203", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_166 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="291-291", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_167 [label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(Commit_Verb), true)\r\n                    })", span="294-299", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", color=green, community=0, file="HelpTextTests.cs"];
m30_168 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="302-302", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_169 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="305-305", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_170 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="307-307", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_171 [label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="308-308", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_172 [label="lines[2].ShouldBeEquivalentTo(''-p, --patch      Use the interactive patch selection interface to chose which'')", span="309-309", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_173 [label="lines[3].ShouldBeEquivalentTo(''changes to commit.'')", span="310-310", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_174 [label="lines[4].ShouldBeEquivalentTo(''--amend          Used to amend the tip of the current branch.'')", span="311-311", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_175 [label="lines[5].ShouldBeEquivalentTo(''-m, --message    Use the given message as the commit message.'')", span="312-312", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_176 [label="lines[6].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="313-313", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_177 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="291-291", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m30_259 [label="Entry System.Action.Invoke()", span="0-0", cluster="System.Action.Invoke()", file="HelpTextTests.cs"];
m30_124 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="HelpTextTests.cs"];
m30_77 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextTests.cs"];
m30_5 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="HelpTextTests.cs"];
m32_54 [label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="38-38", cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="InstanceBuilderTests.cs"];
m32_43 [label="Entry Unk.ThrowingValidate", span="", cluster="Unk.ThrowingValidate", file="InstanceBuilderTests.cs"];
m32_3 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m32_28 [label="var valueSpecProps = ValueMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                    partitions.Values,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture))", span="71-74", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="InstanceBuilderTests.cs"];
m32_26 [label="var partitions = TokenPartitioner.Partition(\r\n                tokens,\r\n                name => TypeLookup.FindTypeDescriptor(name, optionSpecs, nameComparer))", span="61-63", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m32_27 [label="var optionSpecProps = OptionMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                partitions.Options,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                nameComparer)", span="65-69", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m32_22 [label="var specProps = instance.GetType().GetSpecifications(pi => SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>()))", span="50-51", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m32_29 [label="var missingValueErrors = from token in partitions.Errors\r\n                                     select new MissingValueOptionError(\r\n                                         NameInfo.FromOptionSpecification(optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer))))", span="76-78", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m32_30 [label="var specPropsWithValue = optionSpecProps.Value.Concat(valueSpecProps.Value)", span="80-80", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="InstanceBuilderTests.cs"];
m32_33 [label="return ParserResult.Create(\r\n                ParserResultType.Options,\r\n                instance,\r\n                tokenizerResult.Errors\r\n                    .Concat(missingValueErrors)\r\n                    .Concat(optionSpecProps.Errors)\r\n                    .Concat(valueSpecProps.Errors)\r\n                    .Concat(validationErrors));", span="98-105", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="InstanceBuilderTests.cs"];
m32_24 [label="var tokenizerResult = tokenizer(arguments, optionSpecs)", span="57-57", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m32_31 [label="instance = instance\r\n                .SetProperties(specPropsWithValue,\r\n                    sp => sp.Value.IsJust(),\r\n                    sp => sp.Value.FromJust())\r\n                .SetProperties(specPropsWithValue,\r\n                    sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                    sp => sp.Specification.DefaultValue.FromJust())\r\n                .SetProperties(specPropsWithValue,\r\n                    sp => sp.Value.IsNothing()\r\n                        && sp.Specification.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                        && sp.Specification.DefaultValue.MatchNothing(),\r\n                    sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray())", span="82-93", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m32_32 [label="var validationErrors = specPropsWithValue.Validate(SpecificationPropertyRules.Lookup)\r\n                .OfType<Just<Error>>().Select(e => e.Value)", span="95-96", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m32_19 [label="var instance = factory()", span="40-40", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m32_20 [label="arguments.Any() && nameComparer.Equals(''--help'', arguments.First())", span="42-42", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m32_23 [label="var optionSpecs = (from pt in specProps select pt.Specification)\r\n                .ThrowingValidate(SpecificationGuards.Lookup)\r\n                .OfType<OptionSpecification>()", span="53-55", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m32_25 [label="var tokens = tokenizerResult.Value", span="59-59", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m32_21 [label="return ParserResult.Create(\r\n                    ParserResultType.Options,\r\n                    instance,\r\n                    new[] { new HelpRequestedError() });", span="44-47", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m32_34 [label="Exit CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m32_10 [label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="44-44", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="InstanceBuilderTests.cs"];
m32_79 [label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8", cluster="string.MatchName(string, string, System.StringComparer)", file="InstanceBuilderTests.cs"];
m32_46 [label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="InstanceBuilderTests.cs"];
m32_72 [label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m32_83 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149", cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="InstanceBuilderTests.cs"];
m32_99 [label="Entry CommandLine.Infrastructure.Maybe<T>.MatchNothing()", span="26-26", cluster="CommandLine.Infrastructure.Maybe<T>.MatchNothing()", file="InstanceBuilderTests.cs"];
m32_49 [label="Entry CommandLine.Core.Specification.IsValue()", span="16-16", cluster="CommandLine.Core.Specification.IsValue()", file="InstanceBuilderTests.cs"];
m32_58 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="InstanceBuilderTests.cs"];
m32_87 [label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="134-134", cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="InstanceBuilderTests.cs"];
m32_64 [label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21", cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="InstanceBuilderTests.cs"];
m32_14 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilderTests.cs"];
m32_91 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="144-144", cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="InstanceBuilderTests.cs"];
m32_51 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="InstanceBuilderTests.cs"];
m32_42 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="12-12", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="InstanceBuilderTests.cs"];
m32_38 [label="Entry System.StringComparer.Equals(string, string)", span="0-0", cluster="System.StringComparer.Equals(string, string)", file="InstanceBuilderTests.cs"];
m32_35 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="InstanceBuilderTests.cs"];
m32_36 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="InstanceBuilderTests.cs"];
m32_41 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="InstanceBuilderTests.cs"];
m32_106 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_4 [label="Entry lambda expression", span="20-27", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_5 [label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="22-22", cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs"];
m32_6 [label="var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.WithSeparator(name, optionSpecs, nameComparer))", span="23-25", cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs"];
m32_11 [label="Entry lambda expression", span="22-22", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_12 [label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="22-22", cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs"];
m32_13 [label="Exit lambda expression", span="22-22", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_7 [label="return explodedTokens;", span="26-26", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_15 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_73 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_16 [label="NameLookup.WithSeparator(name, optionSpecs, nameComparer)", span="25-25", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_66 [label="TypeLookup.FindTypeDescriptor(name, optionSpecs, nameComparer)", span="63-63", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_70 [label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="68-68", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_74 [label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="74-74", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_77 [label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="78-78", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_8 [label="Exit lambda expression", span="20-27", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_17 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_65 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_69 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_59 [label="Entry lambda expression", span="50-51", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_76 [label="Entry lambda expression", span="78-78", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_75 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_80 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_84 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_88 [label="Entry lambda expression", span="87-87", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_92 [label="Entry lambda expression", span="88-88", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_95 [label="Entry lambda expression", span="90-92", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_100 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_67 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_71 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_78 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_61 [label="Exit lambda expression", span="50-51", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_60 [label="SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>())", span="50-51", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_82 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_81 [label="sp.Value.IsJust()", span="84-84", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_86 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_85 [label="sp.Value.FromJust()", span="85-85", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_90 [label="Exit lambda expression", span="87-87", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_89 [label="sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust()", span="87-87", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_94 [label="Exit lambda expression", span="88-88", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_93 [label="sp.Specification.DefaultValue.FromJust()", span="88-88", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_97 [label="Exit lambda expression", span="90-92", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_96 [label="sp.Value.IsNothing()\r\n                        && sp.Specification.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                        && sp.Specification.DefaultValue.MatchNothing()", span="90-92", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_102 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_101 [label="sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray()", span="93-93", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_107 [label="e.Value", span="96-96", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_108 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m32_37 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="InstanceBuilderTests.cs"];
m32_40 [label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="100-100", cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceBuilderTests.cs"];
m32_50 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs"];
m32_57 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="InstanceBuilderTests.cs"];
m32_104 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="InstanceBuilderTests.cs"];
m32_56 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="InstanceBuilderTests.cs"];
m32_18 [label="Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16", cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilderTests.cs"];
m32_98 [label="Entry System.Type.ToDescriptorKind()", span="22-22", cluster="System.Type.ToDescriptorKind()", file="InstanceBuilderTests.cs"];
m32_105 [label="Entry System.Type.CreateEmptyArray()", span="81-81", cluster="System.Type.CreateEmptyArray()", file="InstanceBuilderTests.cs"];
m32_103 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="InstanceBuilderTests.cs"];
m32_9 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceBuilderTests.cs"];
m32_62 [label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="67-67", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="InstanceBuilderTests.cs"];
m32_47 [label="Entry CommandLine.Core.Specification.IsOption()", span="11-11", cluster="CommandLine.Core.Specification.IsOption()", file="InstanceBuilderTests.cs"];
m32_55 [label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", span="40-40", cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="InstanceBuilderTests.cs"];
m32_63 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="InstanceBuilderTests.cs"];
m32_44 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="InstanceBuilderTests.cs"];
m32_68 [label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilderTests.cs"];
m32_39 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="InstanceBuilderTests.cs"];
m32_52 [label="Entry Unk.FromOptionSpecification", span="", cluster="Unk.FromOptionSpecification", file="InstanceBuilderTests.cs"];
m32_45 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="InstanceBuilderTests.cs"];
m32_53 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="InstanceBuilderTests.cs"];
m32_48 [label="Entry Unk.MapValues", span="", cluster="Unk.MapValues", file="InstanceBuilderTests.cs"];
m32_0 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m32_1 [label="return Build(\r\n                factory,\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.WithSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="18-30", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="InstanceBuilderTests.cs"];
m32_2 [label="Exit CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m32_109 [label="System.StringComparer", span="", file="InstanceBuilderTests.cs"];
m32_110 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", file="InstanceBuilderTests.cs"];
m32_111 [label="System.StringComparer", span="", file="InstanceBuilderTests.cs"];
m32_112 [label=optionSpecs, span="", file="InstanceBuilderTests.cs"];
m32_113 [label="System.Globalization.CultureInfo", span="", file="InstanceBuilderTests.cs"];
m32_114 [label=token, span="", file="InstanceBuilderTests.cs"];
m33_3 [label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="29-29", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs"];
m33_32 [label="Entry Unk.>", span="", cluster="Unk.>", file="InstanceChooserTests.cs"];
m33_31 [label="Entry CommandLine.Tests.Fakes.Add_Verb.Add_Verb()", span="7-7", cluster="CommandLine.Tests.Fakes.Add_Verb.Add_Verb()", file="InstanceChooserTests.cs"];
m33_7 [label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14", cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceChooserTests.cs"];
m33_33 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", span="115-115", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs"];
m33_35 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(ImmutableAddOptions), typeof(ImmutableCommitOptions), typeof(ImmutableCloneOptions) },\r\n                new[] { ''add'', ''--patch'', ''dummy.bin'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="121-126", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs"];
m33_36 [label="Assert.IsType<ImmutableAddOptions>(((Parsed<object>)result).Value)", span="129-129", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs"];
m33_37 [label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="130-130", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs"];
m33_34 [label="var expected = new ImmutableAddOptions(true, default(bool), ''dummy.bin'')", span="118-118", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs"];
m33_38 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", span="115-115", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs"];
m33_9 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", span="35-35", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs"];
m33_6 [label="Exit lambda expression", span="16-20", cluster="lambda expression", file="InstanceChooserTests.cs"];
m33_40 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", span="135-135", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs"];
m33_42 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb), typeof(SequenceOptions) },\r\n                new[] { ''sequence'', ''-s'', ''aa'', ''b'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="141-146", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs"];
m33_41 [label="var expected = new SequenceOptions { LongSequence = new long[] { }, StringSequence = new[] { ''aa'', ''b'' } }", span="138-138", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs"];
m33_43 [label="Assert.IsType<SequenceOptions>(((Parsed<object>)result).Value)", span="149-149", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs"];
m33_44 [label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="150-150", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs"];
m33_45 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", span="135-135", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs"];
m33_14 [label="System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>", span="", cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="InstanceChooserTests.cs"];
m33_15 [label="CommandLine.Core.Token", span="", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs"];
m33_16 [label="CommandLine.Core.Token", span="", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", color=green, community=0, file="InstanceChooserTests.cs"];
m33_17 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb) },\r\n                new[] { ''help'', ''commit'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="61-66", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", color=green, community=0, file="InstanceChooserTests.cs"];
m33_18 [label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="69-69", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs"];
m33_19 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", span="55-55", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs"];
m33_25 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", span="95-95", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs"];
m33_26 [label="var expected = new Add_Verb { Patch = true, FileName = ''dummy.bin''}", span="98-98", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs"];
m33_27 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb) },\r\n                new[] { ''add'', ''--patch'', ''dummy.bin'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="101-106", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs"];
m33_29 [label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="110-110", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs"];
m33_28 [label="Assert.IsType<Add_Verb>(((Parsed<object>)result).Value)", span="109-109", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs"];
m33_30 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", span="95-95", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs"];
m33_11 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb) },\r\n                new[] { ''help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="41-46", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", color=green, community=0];
m33_5 [label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421", cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="InstanceChooserTests.cs"];
m33_4 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", span="15-15", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs"];
m33_12 [label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="49-49", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs"];
m33_13 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", span="35-35", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs"];
m33_10 [label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="100-100", cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="InstanceChooserTests.cs"];
m33_47 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", span="159-159", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs"];
m33_49 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb), typeof(SequenceOptions) },\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="165-170", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", color=green, community=0, file="InstanceChooserTests.cs"];
m33_48 [label="var expected = new SequenceOptions { LongSequence = new long[] { }, StringSequence = expectedString }", span="162-162", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs"];
m33_50 [label="Assert.IsType<SequenceOptions>(((Parsed<object>)result).Value)", span="173-173", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs"];
m33_51 [label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="174-174", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs"];
m33_52 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", span="159-159", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs"];
m33_46 [label="Entry CommandLine.Tests.Fakes.SequenceOptions.SequenceOptions()", span="51-51", cluster="CommandLine.Tests.Fakes.SequenceOptions.SequenceOptions()", file="InstanceChooserTests.cs"];
m33_0 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", span="15-15", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs"];
m33_1 [label="var expectedErrors = new[] { new NoVerbSelectedError() }", span="18-18", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", color=red, community=0, file="InstanceChooserTests.cs"];
m33_2 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb) },\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="21-26", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", color=green, community=0];
m33_39 [label="Entry CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", span="13-13", cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="InstanceChooserTests.cs"];
m33_8 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="InstanceChooserTests.cs"];
m33_20 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="75-75", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs"];
m33_22 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb) },\r\n                new[] { ''help'', ''earthunderalienattack'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="81-86", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", color=green, community=0, file="InstanceChooserTests.cs"];
m33_21 [label="var expectedErrors = new[] { new HelpVerbRequestedError(null, null, false) }", span="78-78", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs"];
m33_23 [label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="89-89", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs"];
m33_24 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="75-75", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs"];
m34_13 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="OptionMapperTests.cs"];
m34_12 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="OptionMapperTests.cs"];
m34_6 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="OptionMapperTests.cs"];
m34_11 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="OptionMapperTests.cs"];
m34_15 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="OptionMapperTests.cs"];
m34_7 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="OptionMapperTests.cs"];
m34_27 [label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="13-13", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="OptionMapperTests.cs"];
m34_0 [label="Entry CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="17-17", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m34_1 [label="var tokenPartitions = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''x'', new [] { ''true'' })\r\n                }", span="20-23", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m34_2 [label="var specProps = new[]\r\n                {\r\n                    SpecificationProperty.Create(\r\n                        new OptionSpecification(''x'', string.Empty, false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '\0', Maybe.Nothing<object>(), string.Empty, string.Empty, new List<string>(), typeof(bool), TargetType.Switch), \r\n                        typeof(FakeOptions).GetProperties().Single(p => p.Name.Equals(''BoolValue'', StringComparison.Ordinal)),\r\n                        Maybe.Nothing<object>())\r\n                }", span="24-30", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", color=green, community=0, file="OptionMapperTests.cs"];
m34_3 [label="var result = OptionMapper.MapValues(\r\n                specProps.Where(pt => pt.Specification.IsOption()),\r\n                tokenPartitions,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture),\r\n                StringComparer.InvariantCulture)", span="33-37", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m34_4 [label="Assert.NotNull(((Ok<IEnumerable<SpecificationProperty>, Error>)result).Value.Success.Single(\r\n                a => a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value))", span="40-43", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m34_5 [label="Exit CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="17-17", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m34_28 [label="Entry lambda expression", span="41-43", cluster="lambda expression", file="OptionMapperTests.cs"];
m34_16 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="OptionMapperTests.cs"];
m34_20 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="OptionMapperTests.cs"];
m34_24 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="OptionMapperTests.cs"];
m34_17 [label="p.Name.Equals(''BoolValue'', StringComparison.Ordinal)", span="28-28", cluster="lambda expression", color=green, community=0, file="OptionMapperTests.cs"];
m34_18 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="OptionMapperTests.cs"];
m34_21 [label="pt.Specification.IsOption()", span="34-34", cluster="lambda expression", file="OptionMapperTests.cs"];
m34_22 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="OptionMapperTests.cs"];
m34_25 [label="TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture)", span="36-36", cluster="lambda expression", file="OptionMapperTests.cs"];
m34_26 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="OptionMapperTests.cs"];
m34_29 [label="a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value", span="41-43", cluster="lambda expression", file="OptionMapperTests.cs"];
m34_30 [label="Exit lambda expression", span="41-43", cluster="lambda expression", file="OptionMapperTests.cs"];
m34_31 [label="Entry Unk.IsOption", span="", cluster="Unk.IsOption", file="OptionMapperTests.cs"];
m34_32 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="OptionMapperTests.cs"];
m34_8 [label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116", cluster="CSharpx.Maybe.Nothing<T>()", file="OptionMapperTests.cs"];
m34_19 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="OptionMapperTests.cs"];
m34_23 [label="Entry CommandLine.Core.Specification.IsOption()", span="10-10", cluster="CommandLine.Core.Specification.IsOption()", file="OptionMapperTests.cs"];
m34_14 [label="Entry Unk.MapValues", span="", cluster="Unk.MapValues", file="OptionMapperTests.cs"];
m34_10 [label="Entry System.Type.GetProperties()", span="0-0", cluster="System.Type.GetProperties()", file="OptionMapperTests.cs"];
m34_9 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="OptionMapperTests.cs"];
m35_15 [label="Entry CommandLine.Tests.ValueListAttributeFixture.MockSpecializedList.MockSpecializedList()", span="41-41", cluster="CommandLine.Tests.ValueListAttributeFixture.MockSpecializedList.MockSpecializedList()", file="ParserResultExtensionsTests.cs"];
m35_3 [label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="60-60", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ParserResultExtensionsTests.cs"];
m35_12 [label="Entry CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", span="73-73", cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="ParserResultExtensionsTests.cs"];
m35_13 [label="new ValueListAttribute(new MockSpecializedList().GetType())", span="75-75", cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="ParserResultExtensionsTests.cs"];
m35_14 [label="Exit CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", span="73-73", cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="ParserResultExtensionsTests.cs"];
m35_22 [label="Entry CommandLine.Tests.ValueListAttributeFixture.MockOptions.MockOptions()", span="45-45", cluster="CommandLine.Tests.ValueListAttributeFixture.MockOptions.MockOptions()", file="ParserResultExtensionsTests.cs"];
m35_27 [label="Entry CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", span="89-89", cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ParserResultExtensionsTests.cs"];
m35_28 [label="var options = new MockOptions()", span="91-91", cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ParserResultExtensionsTests.cs"];
m35_29 [label="var values = ValueListAttribute.GetReference(options)", span="93-93", cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ParserResultExtensionsTests.cs"];
m35_33 [label="base.ElementsShouldBeEqual(new string[] { ''value0'', ''value1'', ''value2'' }, options.Values)", span="98-98", cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ParserResultExtensionsTests.cs"];
m35_30 [label="values.Add(''value0'')", span="94-94", cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ParserResultExtensionsTests.cs"];
m35_31 [label="values.Add(''value1'')", span="95-95", cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ParserResultExtensionsTests.cs"];
m35_32 [label="values.Add(''value2'')", span="96-96", cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ParserResultExtensionsTests.cs"];
m35_34 [label="Exit CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", span="89-89", cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ParserResultExtensionsTests.cs"];
m35_16 [label="Entry CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", span="79-79", cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ParserResultExtensionsTests.cs"];
m35_17 [label="var options = new MockOptions()", span="81-81", cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ParserResultExtensionsTests.cs"];
m35_18 [label="IList<string> values = ValueListAttribute.GetReference(options)", span="83-83", cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ParserResultExtensionsTests.cs"];
m35_19 [label="values.Should().Not.Be.Null()", span="84-84", cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ParserResultExtensionsTests.cs"];
m35_20 [label="values.GetType().Should().Equal(typeof(List<string>))", span="85-85", cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ParserResultExtensionsTests.cs"];
m35_21 [label="Exit CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", span="79-79", cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ParserResultExtensionsTests.cs"];
m35_4 [label="Entry CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", span="61-61", cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", file="ParserResultExtensionsTests.cs"];
m35_5 [label="new ValueListAttribute(new List<object>().GetType())", span="63-63", cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", file="ParserResultExtensionsTests.cs"];
m35_6 [label="Exit CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", span="61-61", cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", file="ParserResultExtensionsTests.cs"];
m35_35 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ParserResultExtensionsTests.cs"];
m35_23 [label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="83-83", cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ParserResultExtensionsTests.cs"];
m35_8 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="ParserResultExtensionsTests.cs"];
m35_25 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="ParserResultExtensionsTests.cs"];
m35_36 [label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="ParserResultExtensionsTests.cs"];
m35_0 [label="Entry CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", span="54-54", cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", file="ParserResultExtensionsTests.cs"];
m35_1 [label="new ValueListAttribute(null)", span="56-56", cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", color=red, community=0, file="ParserResultExtensionsTests.cs"];
m35_2 [label="Exit CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", span="54-54", cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", file="ParserResultExtensionsTests.cs"];
m35_26 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ParserResultExtensionsTests.cs"];
m35_24 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ParserResultExtensionsTests.cs"];
m35_9 [label="Entry CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", span="67-67", cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", file="ParserResultExtensionsTests.cs"];
m35_10 [label="new ValueListAttribute(new List<string>().GetType())", span="69-69", cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", file="ParserResultExtensionsTests.cs"];
m35_11 [label="Exit CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", span="67-67", cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", file="ParserResultExtensionsTests.cs"];
m35_7 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ParserResultExtensionsTests.cs"];
m35_37 [label="CommandLine.Tests.ValueListAttributeFixture", span="", file="ParserResultExtensionsTests.cs"];
m36_48 [label="Entry Ninject.Components.ComponentContainer.Get(System.Type)", span="151-151", cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ParserTests.cs"];
m36_54 [label="Ensure.ArgumentNotNull(component, ''component'')", span="153-153", cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ParserTests.cs"];
m36_55 [label="component == typeof(IReadonlyKernel)", span="155-155", cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ParserTests.cs"];
m36_57 [label="component == typeof(IKernelConfiguration)", span="157-157", cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ParserTests.cs"];
m36_59 [label="component.IsGenericType", span="160-160", cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ParserTests.cs"];
m36_60 [label="Type gtd = component.GetGenericTypeDefinition()", span="162-162", cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ParserTests.cs"];
m36_61 [label="Type argument = component.GetGenericArguments()[0]", span="163-163", cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ParserTests.cs"];
m36_64 [label="Type implementation = _mappings[component].FirstOrDefault()", span="175-175", cluster="Ninject.Components.ComponentContainer.Get(System.Type)", color=red, community=0, file="ParserTests.cs"];
m36_66 [label="throw new InvalidOperationException(ExceptionFormatter.NoSuchComponentRegistered(component));", span="178-178", cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ParserTests.cs"];
m36_67 [label="return ResolveInstance(component, implementation);", span="180-180", cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ParserTests.cs"];
m36_56 [label="return Kernel;", span="156-156", cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ParserTests.cs"];
m36_58 [label="return Kernel;", span="158-158", cluster="Ninject.Components.ComponentContainer.Get(System.Type)", color=red, community=0, file="ParserTests.cs"];
m36_62 [label="gtd.IsInterface && typeof (IEnumerable<>).IsAssignableFrom(gtd)", span="171-171", cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ParserTests.cs"];
m36_63 [label="return GetAll(argument).CastSlow(argument);", span="172-172", cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ParserTests.cs"];
m36_65 [label="implementation == null", span="177-177", cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ParserTests.cs"];
m36_68 [label="Exit Ninject.Components.ComponentContainer.Get(System.Type)", span="151-151", cluster="Ninject.Components.ComponentContainer.Get(System.Type)", file="ParserTests.cs"];
m36_52 [label="Entry Ninject.Components.ComponentContainer.GetAll(System.Type)", span="188-188", cluster="Ninject.Components.ComponentContainer.GetAll(System.Type)", file="ParserTests.cs"];
m36_77 [label="Ensure.ArgumentNotNull(component, ''component'')", span="190-190", cluster="Ninject.Components.ComponentContainer.GetAll(System.Type)", file="ParserTests.cs"];
m36_78 [label="return _mappings[component]\r\n                .Select(implementation => ResolveInstance(component, implementation));", span="192-193", cluster="Ninject.Components.ComponentContainer.GetAll(System.Type)", color=red, community=0, file="ParserTests.cs"];
m36_79 [label="Exit Ninject.Components.ComponentContainer.GetAll(System.Type)", span="188-188", cluster="Ninject.Components.ComponentContainer.GetAll(System.Type)", file="ParserTests.cs"];
m36_114 [label="Entry System.Type.GetConstructors()", span="0-0", cluster="System.Type.GetConstructors()", file="ParserTests.cs"];
m36_11 [label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", span="37-37", cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", file="ParserTests.cs"];
m36_10 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="ParserTests.cs"];
m36_45 [label="Entry Ninject.Components.ComponentContainer.Get<T>()", span="129-129", cluster="Ninject.Components.ComponentContainer.Get<T>()", file="ParserTests.cs"];
m36_46 [label="return (T) Get(typeof(T));", span="132-132", cluster="Ninject.Components.ComponentContainer.Get<T>()", file="ParserTests.cs"];
m36_47 [label="Exit Ninject.Components.ComponentContainer.Get<T>()", span="129-129", cluster="Ninject.Components.ComponentContainer.Get<T>()", file="ParserTests.cs"];
m36_44 [label="Entry Ninject.Infrastructure.Multimap<K, V>.RemoveAll(K)", span="94-94", cluster="Ninject.Infrastructure.Multimap<K, V>.RemoveAll(K)", file="ParserTests.cs"];
m36_100 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="ParserTests.cs"];
m36_87 [label="Entry Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", span="202-202", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ParserTests.cs"];
m36_88 [label="ConstructorInfo constructor = SelectConstructor(component, implementation)", span="204-204", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ParserTests.cs"];
m36_92 [label="!this.transients.Contains(new KeyValuePair<Type, Type>(component, implementation))", span="212-212", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ParserTests.cs"];
m36_93 [label="_instances.Add(implementation, instance)", span="214-214", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ParserTests.cs"];
m36_89 [label="var arguments = constructor.GetParameters().Select(parameter => Get(parameter.ParameterType)).ToArray()", span="205-205", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ParserTests.cs"];
m36_90 [label="var instance = constructor.Invoke(arguments) as INinjectComponent", span="209-209", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ParserTests.cs"];
m36_91 [label="instance.Settings = Kernel.Settings", span="210-210", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ParserTests.cs"];
m36_94 [label="return instance;", span="217-217", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ParserTests.cs"];
m36_95 [label=TargetInvocationException, span="219-219", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ParserTests.cs"];
m36_96 [label="ex.RethrowInnerException()", span="221-221", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ParserTests.cs"];
m36_97 [label="return null;", span="222-222", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ParserTests.cs"];
m36_98 [label="Exit Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", span="202-202", cluster="Ninject.Components.ComponentContainer.CreateNewInstance(System.Type, System.Type)", file="ParserTests.cs"];
m36_115 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="ParserTests.cs"];
m36_9 [label="Entry Ninject.Infrastructure.Multimap<K, V>.Clear()", span="103-103", cluster="Ninject.Infrastructure.Multimap<K, V>.Clear()", file="ParserTests.cs"];
m36_75 [label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", span="258-258", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoSuchComponentRegistered(System.Type)", file="ParserTests.cs"];
m36_16 [label="Entry Ninject.Components.ComponentContainer.AddTransient<TComponent, TImplementation>()", span="70-70", cluster="Ninject.Components.ComponentContainer.AddTransient<TComponent, TImplementation>()", file="ParserTests.cs"];
m36_17 [label="this.Add<TComponent, TImplementation>()", span="74-74", cluster="Ninject.Components.ComponentContainer.AddTransient<TComponent, TImplementation>()", color=red, community=0, file="ParserTests.cs"];
m36_18 [label="this.transients.Add(new KeyValuePair<Type, Type>(typeof(TComponent), typeof(TImplementation)))", span="75-75", cluster="Ninject.Components.ComponentContainer.AddTransient<TComponent, TImplementation>()", file="ParserTests.cs"];
m36_19 [label="Exit Ninject.Components.ComponentContainer.AddTransient<TComponent, TImplementation>()", span="70-70", cluster="Ninject.Components.ComponentContainer.AddTransient<TComponent, TImplementation>()", file="ParserTests.cs"];
m36_102 [label="Entry Unk.Invoke", span="", cluster="Unk.Invoke", file="ParserTests.cs"];
m36_43 [label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="17-17", cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="ParserTests.cs"];
m36_34 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="ParserTests.cs"];
m36_117 [label="Entry lambda expression", span="228-228", cluster="lambda expression", file="ParserTests.cs"];
m36_82 [label="ResolveInstance(component, implementation)", span="193-193", cluster="lambda expression", file="ParserTests.cs"];
m36_81 [label="Entry lambda expression", span="193-193", cluster="lambda expression", file="ParserTests.cs"];
m36_83 [label="Exit lambda expression", span="193-193", cluster="lambda expression", file="ParserTests.cs"];
m36_106 [label="Entry lambda expression", span="205-205", cluster="lambda expression", file="ParserTests.cs"];
m36_107 [label="Get(parameter.ParameterType)", span="205-205", cluster="lambda expression", file="ParserTests.cs"];
m36_108 [label="Exit lambda expression", span="205-205", cluster="lambda expression", file="ParserTests.cs"];
m36_118 [label="c.GetParameters().Length", span="228-228", cluster="lambda expression", file="ParserTests.cs"];
m36_119 [label="Exit lambda expression", span="228-228", cluster="lambda expression", file="ParserTests.cs"];
m36_105 [label="Entry System.Reflection.TargetInvocationException.RethrowInnerException()", span="18-18", cluster="System.Reflection.TargetInvocationException.RethrowInnerException()", file="ParserTests.cs"];
m36_53 [label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.Cast<TResult>()", file="ParserTests.cs"];
m36_0 [label="Entry Ninject.Components.ComponentContainer.Dispose(bool)", span="39-39", cluster="Ninject.Components.ComponentContainer.Dispose(bool)", file="ParserTests.cs"];
m36_1 [label="disposing && !IsDisposed", span="41-41", cluster="Ninject.Components.ComponentContainer.Dispose(bool)", file="ParserTests.cs"];
m36_6 [label="base.Dispose(disposing)", span="50-50", cluster="Ninject.Components.ComponentContainer.Dispose(bool)", file="ParserTests.cs"];
m36_2 [label="_instances.Values", span="43-43", cluster="Ninject.Components.ComponentContainer.Dispose(bool)", file="ParserTests.cs"];
m36_3 [label="instance.Dispose()", span="44-44", cluster="Ninject.Components.ComponentContainer.Dispose(bool)", file="ParserTests.cs"];
m36_4 [label="_mappings.Clear()", span="46-46", cluster="Ninject.Components.ComponentContainer.Dispose(bool)", file="ParserTests.cs"];
m36_5 [label="_instances.Clear()", span="47-47", cluster="Ninject.Components.ComponentContainer.Dispose(bool)", file="ParserTests.cs"];
m36_7 [label="Exit Ninject.Components.ComponentContainer.Dispose(bool)", span="39-39", cluster="Ninject.Components.ComponentContainer.Dispose(bool)", file="ParserTests.cs"];
m36_22 [label="Entry Ninject.Components.ComponentContainer.RemoveAll<T>()", span="82-82", cluster="Ninject.Components.ComponentContainer.RemoveAll<T>()", file="ParserTests.cs"];
m36_23 [label="RemoveAll(typeof(T))", span="85-85", cluster="Ninject.Components.ComponentContainer.RemoveAll<T>()", file="ParserTests.cs"];
m36_24 [label="Exit Ninject.Components.ComponentContainer.RemoveAll<T>()", span="82-82", cluster="Ninject.Components.ComponentContainer.RemoveAll<T>()", file="ParserTests.cs"];
m36_33 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="ParserTests.cs"];
m36_76 [label="Entry Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", span="196-196", cluster="Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", file="ParserTests.cs"];
m36_84 [label=_instances, span="198-198", cluster="Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", color=red, community=0, file="ParserTests.cs"];
m36_85 [label="return _instances.ContainsKey(implementation) ? _instances[implementation] : CreateNewInstance(component, implementation);", span="199-199", cluster="Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", file="ParserTests.cs"];
m36_86 [label="Exit Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", span="196-196", cluster="Ninject.Components.ComponentContainer.ResolveInstance(System.Type, System.Type)", file="ParserTests.cs"];
m36_71 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="ParserTests.cs"];
m36_116 [label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", span="238-238", cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoConstructorsAvailableForComponent(System.Type, System.Type)", file="ParserTests.cs"];
m36_12 [label="Entry Ninject.Components.ComponentContainer.Add<TComponent, TImplementation>()", span="58-58", cluster="Ninject.Components.ComponentContainer.Add<TComponent, TImplementation>()", file="ParserTests.cs"];
m36_13 [label="_mappings.Add(typeof(TComponent), typeof(TImplementation))", span="62-62", cluster="Ninject.Components.ComponentContainer.Add<TComponent, TImplementation>()", file="ParserTests.cs"];
m36_14 [label="Exit Ninject.Components.ComponentContainer.Add<TComponent, TImplementation>()", span="58-58", cluster="Ninject.Components.ComponentContainer.Add<TComponent, TImplementation>()", file="ParserTests.cs"];
m36_69 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="ParserTests.cs"];
m36_80 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ParserTests.cs"];
m36_35 [label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="ParserTests.cs"];
m36_70 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="ParserTests.cs"];
m36_99 [label="Entry Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", span="226-226", cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="ParserTests.cs"];
m36_109 [label="var constructor = implementation.GetConstructors().OrderByDescending(c => c.GetParameters().Length).FirstOrDefault()", span="228-228", cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="ParserTests.cs"];
m36_111 [label="throw new InvalidOperationException(ExceptionFormatter.NoConstructorsAvailableForComponent(component, implementation));", span="231-231", cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="ParserTests.cs"];
m36_110 [label="constructor == null", span="230-230", cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="ParserTests.cs"];
m36_112 [label="return constructor;", span="233-233", cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="ParserTests.cs"];
m36_113 [label="Exit Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", span="226-226", cluster="Ninject.Components.ComponentContainer.SelectConstructor(System.Type, System.Type)", file="ParserTests.cs"];
m36_73 [label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="ParserTests.cs"];
m36_74 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ParserTests.cs"];
m36_103 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="ParserTests.cs"];
m36_15 [label="Entry Ninject.Infrastructure.Multimap<K, V>.Add(K, V)", span="64-64", cluster="Ninject.Infrastructure.Multimap<K, V>.Add(K, V)", file="ParserTests.cs"];
m36_26 [label="Entry Ninject.Components.ComponentContainer.Remove<T, TImplementation>()", span="93-93", cluster="Ninject.Components.ComponentContainer.Remove<T, TImplementation>()", file="ParserTests.cs"];
m36_27 [label="var implementation = typeof(TImplementation)", span="97-97", cluster="Ninject.Components.ComponentContainer.Remove<T, TImplementation>()", file="ParserTests.cs"];
m36_28 [label="_instances.ContainsKey(implementation)", span="98-98", cluster="Ninject.Components.ComponentContainer.Remove<T, TImplementation>()", file="ParserTests.cs"];
m36_29 [label="_instances[implementation].Dispose()", span="99-99", cluster="Ninject.Components.ComponentContainer.Remove<T, TImplementation>()", file="ParserTests.cs"];
m36_30 [label="_instances.Remove(implementation)", span="101-101", cluster="Ninject.Components.ComponentContainer.Remove<T, TImplementation>()", file="ParserTests.cs"];
m36_31 [label="_mappings[typeof(T)].Remove(typeof(TImplementation))", span="103-103", cluster="Ninject.Components.ComponentContainer.Remove<T, TImplementation>()", file="ParserTests.cs"];
m36_32 [label="Exit Ninject.Components.ComponentContainer.Remove<T, TImplementation>()", span="93-93", cluster="Ninject.Components.ComponentContainer.Remove<T, TImplementation>()", file="ParserTests.cs"];
m36_20 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="ParserTests.cs"];
m36_21 [label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="ParserTests.cs"];
m36_49 [label="Entry Ninject.Components.ComponentContainer.GetAll<T>()", span="140-140", cluster="Ninject.Components.ComponentContainer.GetAll<T>()", file="ParserTests.cs"];
m36_50 [label="return GetAll(typeof(T)).Cast<T>();", span="143-143", cluster="Ninject.Components.ComponentContainer.GetAll<T>()", file="ParserTests.cs"];
m36_51 [label="Exit Ninject.Components.ComponentContainer.GetAll<T>()", span="140-140", cluster="Ninject.Components.ComponentContainer.GetAll<T>()", file="ParserTests.cs"];
m36_72 [label="Entry System.Collections.IEnumerable.CastSlow(System.Type)", span="19-19", cluster="System.Collections.IEnumerable.CastSlow(System.Type)", file="ParserTests.cs"];
m36_101 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="ParserTests.cs"];
m36_25 [label="Entry Ninject.Components.ComponentContainer.RemoveAll(System.Type)", span="109-109", cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="ParserTests.cs"];
m36_36 [label="Ensure.ArgumentNotNull(component, ''component'')", span="111-111", cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="ParserTests.cs"];
m36_37 [label="_mappings[component]", span="113-113", cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="ParserTests.cs"];
m36_41 [label="_mappings.RemoveAll(component)", span="121-121", cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="ParserTests.cs"];
m36_38 [label="_instances.ContainsKey(implementation)", span="115-115", cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", color=red, community=0, file="ParserTests.cs"];
m36_39 [label="_instances[implementation].Dispose()", span="116-116", cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="ParserTests.cs"];
m36_40 [label="_instances.Remove(implementation)", span="118-118", cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="ParserTests.cs"];
m36_42 [label="Exit Ninject.Components.ComponentContainer.RemoveAll(System.Type)", span="109-109", cluster="Ninject.Components.ComponentContainer.RemoveAll(System.Type)", file="ParserTests.cs"];
m36_8 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="ParserTests.cs"];
m36_104 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="ParserTests.cs"];
m36_120 [label="Ninject.Components.ComponentContainer", span="", file="ParserTests.cs"];
m36_121 [label="System.Type", span="", file="ParserTests.cs"];
m37_5 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="ReflectionExtensions.cs"];
m37_9 [label="Entry Unk.BeFalse", span="", cluster="Unk.BeFalse", file="ReflectionExtensions.cs"];
m37_0 [label="Entry CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_with_public_set_properties_or_fields_is_ranked_mutable()", span="12-12", cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_with_public_set_properties_or_fields_is_ranked_mutable()", file="ReflectionExtensions.cs"];
m37_1 [label="typeof(FakeOptions).IsMutable().Should().BeTrue()", span="14-14", cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_with_public_set_properties_or_fields_is_ranked_mutable()", color=green, community=0, file="ReflectionExtensions.cs"];
m37_2 [label="Exit CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_with_public_set_properties_or_fields_is_ranked_mutable()", span="12-12", cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_with_public_set_properties_or_fields_is_ranked_mutable()", file="ReflectionExtensions.cs"];
m37_6 [label="Entry CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_without_public_set_properties_or_fields_is_ranked_immutable()", span="18-18", cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_without_public_set_properties_or_fields_is_ranked_immutable()", file="ReflectionExtensions.cs"];
m37_7 [label="typeof(FakeImmutableOptions).IsMutable().Should().BeFalse()", span="20-20", cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_without_public_set_properties_or_fields_is_ranked_immutable()", color=green, community=0, file="ReflectionExtensions.cs"];
m37_8 [label="Exit CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_without_public_set_properties_or_fields_is_ranked_immutable()", span="18-18", cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_without_public_set_properties_or_fields_is_ranked_immutable()", file="ReflectionExtensions.cs"];
m37_4 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ReflectionExtensions.cs"];
m37_3 [label="Entry System.Type.IsMutable()", span="139-139", cluster="System.Type.IsMutable()", file="ReflectionExtensions.cs"];
m38_4 [label="Entry CommandLine.Parser.FormatCommandLine<T>(T)", span="81-81", cluster="CommandLine.Parser.FormatCommandLine<T>(T)", file="UnParserExtensionsTests.cs"];
m38_20 [label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="95-95", cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensionsTests.cs"];
m38_28 [label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="UnParserExtensionsTests.cs"];
m38_3 [label="Entry CommandLine.Parser.Parser()", span="26-26", cluster="CommandLine.Parser.Parser()", file="UnParserExtensionsTests.cs"];
m38_12 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.FakeOptionsWithFSharpOption, string)", span="42-42", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.FakeOptionsWithFSharpOption, string)", file="UnParserExtensionsTests.cs"];
m38_13 [label="new Parser()\r\n                .FormatCommandLine(options)\r\n                .ShouldBeEquivalentTo(result)", span="44-46", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.FakeOptionsWithFSharpOption, string)", file="UnParserExtensionsTests.cs"];
m38_14 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.FakeOptionsWithFSharpOption, string)", span="42-42", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.FakeOptionsWithFSharpOption, string)", file="UnParserExtensionsTests.cs"];
m38_15 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", span="50-50", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", file="UnParserExtensionsTests.cs"];
m38_16 [label="var options = new FakeOptionsWithSwitches { InputFile = ''input.bin'', HumanReadable = true, IgnoreWarnings = true }", span="52-52", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", color=green, community=0, file="UnParserExtensionsTests.cs"];
m38_17 [label="new Parser()\r\n                .FormatCommandLine(options, config => config.GroupSwitches = true)\r\n                .ShouldBeEquivalentTo(''-hi --input input.bin'')", span="53-55", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", file="UnParserExtensionsTests.cs"];
m38_18 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", span="50-50", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", file="UnParserExtensionsTests.cs"];
m38_9 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.FakeImmutableOptions, string)", span="33-33", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.FakeImmutableOptions, string)", file="UnParserExtensionsTests.cs"];
m38_10 [label="new Parser()\r\n                .FormatCommandLine(options)\r\n                .ShouldBeEquivalentTo(result)", span="35-37", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.FakeImmutableOptions, string)", file="UnParserExtensionsTests.cs"];
m38_11 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.FakeImmutableOptions, string)", span="33-33", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.FakeImmutableOptions, string)", file="UnParserExtensionsTests.cs"];
m38_29 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m38_21 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m38_22 [label="config.GroupSwitches = true", span="54-54", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m38_23 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m38_30 [label="config.UseEqualToken = true", span="63-63", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m38_31 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m38_19 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSwitches.FakeOptionsWithSwitches()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionsWithSwitches.FakeOptionsWithSwitches()", file="UnParserExtensionsTests.cs"];
m38_6 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.Add_Verb, string)", span="24-24", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.Add_Verb, string)", file="UnParserExtensionsTests.cs"];
m38_7 [label="new Parser()\r\n                .FormatCommandLine(verb)\r\n                .ShouldBeEquivalentTo(result)", span="26-28", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.Add_Verb, string)", color=green, community=0, file="UnParserExtensionsTests.cs"];
m38_8 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.Add_Verb, string)", span="24-24", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.Add_Verb, string)", file="UnParserExtensionsTests.cs"];
m38_24 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", span="59-59", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", file="UnParserExtensionsTests.cs"];
m38_25 [label="var options = new FakeOptions { BoolValue = true, IntSequence = new[] { 1, 2, 3 }, StringValue = ''nospaces'', LongValue = 123456789 }", span="61-61", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", color=green, community=0, file="UnParserExtensionsTests.cs"];
m38_26 [label="new Parser()\r\n                .FormatCommandLine(options, config => config.UseEqualToken = true)\r\n                .ShouldBeEquivalentTo(''-i 1 2 3 --stringvalue=nospaces -x 123456789'')", span="62-64", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", file="UnParserExtensionsTests.cs"];
m38_27 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", span="59-59", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", file="UnParserExtensionsTests.cs"];
m38_0 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", span="15-15", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", file="UnParserExtensionsTests.cs"];
m38_1 [label="new Parser()\r\n                .FormatCommandLine(options)\r\n                .ShouldBeEquivalentTo(result)", span="17-19", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", file="UnParserExtensionsTests.cs"];
m38_2 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", span="15-15", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", file="UnParserExtensionsTests.cs"];
m38_5 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="UnParserExtensionsTests.cs"];
n6 -> n1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.FakeImmutableOptions"];
n6 -> n2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.FakeImmutableOptions"];
n6 -> n3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.FakeImmutableOptions"];
n6 -> n4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.FakeImmutableOptions"];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<int>"];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label=bool];
n0 -> n4  [key=1, style=dashed, color=darkseagreen4, label=long];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n5 -> n0  [key=0, style=bold, color=blue];
m3_10 -> m3_11  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_12 -> m3_10  [key=0, style=bold, color=blue];
m3_28 -> m3_29  [key=0, style=solid];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_22  [key=2, style=dotted];
m3_29 -> m3_31  [key=2, style=dotted];
m3_30 -> m3_28  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [key=0, style=bold, color=blue];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_24 -> m3_25  [key=0, style=solid];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_18  [key=2, style=dotted];
m3_25 -> m3_27  [key=2, style=dotted];
m3_26 -> m3_23  [key=0, style=bold, color=blue];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>"];
m3_2 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget, object>"];
m3_2 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label=bool];
m3_2 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_9  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_9  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_6 -> m3_7  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_8 -> m3_2  [key=0, style=bold, color=blue];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_20  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Parameters.IParameter"];
m3_19 -> m3_20  [key=0, style=solid];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_22  [key=2, style=dotted];
m3_21 -> m3_18  [key=0, style=bold, color=blue];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_9  [key=2, style=dotted];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_17  [key=2, style=dotted];
m3_16 -> m3_13  [key=0, style=bold, color=blue];
m3_32 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Parameters.TypeMatchingConstructorArgument"];
m3_32 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Parameters.TypeMatchingConstructorArgument"];
m3_32 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Parameters.TypeMatchingConstructorArgument"];
m3_32 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Parameters.TypeMatchingConstructorArgument"];
m3_32 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Parameters.TypeMatchingConstructorArgument"];
m3_32 -> m3_20  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Parameters.TypeMatchingConstructorArgument"];
m3_32 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Parameters.TypeMatchingConstructorArgument"];
m3_32 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Parameters.TypeMatchingConstructorArgument"];
m4_13 -> m4_14  [key=0, style=solid];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_16  [key=2, style=dotted];
m4_15 -> m4_13  [key=0, style=bold, color=blue];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.IBindingConfiguration"];
m4_7 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m4_7 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.IBindingConfiguration"];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_5  [key=2, style=dotted];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_5  [key=2, style=dotted];
m4_10 -> m4_11  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_12 -> m4_7  [key=0, style=bold, color=blue];
m4_21 -> m4_22  [key=0, style=solid];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_24  [key=2, style=dotted];
m4_23 -> m4_21  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_5  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_6  [key=2, style=dotted];
m4_4 -> m4_0  [key=0, style=bold, color=blue];
m4_17 -> m4_18  [key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_20  [key=2, style=dotted];
m4_19 -> m4_17  [key=0, style=bold, color=blue];
m4_25 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
m4_25 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
m4_25 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
m4_25 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
m4_25 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
m4_25 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
m4_25 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Planning.Bindings.Binding"];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_4  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_5  [key=2, style=dotted];
m7_3 -> m7_0  [key=0, style=bold, color=blue];
m7_21 -> m7_22  [key=0, style=solid];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_19  [key=2, style=dotted];
m7_17 -> m7_20  [key=2, style=dotted];
m7_17 -> m7_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_24  [key=2, style=dotted];
m7_16 -> m7_17  [key=0, style=solid];
m7_18 -> m7_16  [key=0, style=bold, color=blue];
m7_23 -> m7_21  [key=0, style=bold, color=blue];
m7_6 -> m7_7  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_12  [key=2, style=dotted];
m7_7 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label=expected];
m7_7 -> m7_17  [key=1, style=dashed, color=darkseagreen4, label=expected];
m7_7 -> m7_22  [key=1, style=dashed, color=darkseagreen4, label=expected];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_13  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_15  [key=2, style=dotted];
m7_10 -> m7_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_14  [key=2, style=dotted];
m7_11 -> m7_6  [key=0, style=bold, color=blue];
m7_25 -> m7_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext"];
m7_25 -> m7_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.CompiledModuleLoaderPluginContext"];
m7_26 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled"];
m7_26 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Tests.Unit.CompiledModuleLoaderPluginTests.WhenLoadModulesIsCalled"];
m7_27 -> m7_17  [key=1, style=dashed, color=darkseagreen4, label=expected];
m7_27 -> m7_22  [key=1, style=dashed, color=darkseagreen4, label=expected];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_2  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m15_0 -> m15_6  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m15_0 -> m15_7  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_9  [key=2, style=dotted];
m15_2 -> m15_3  [key=0, style=solid];
m15_2 -> m15_5  [key=1, style=dashed, color=darkseagreen4, label=propertyInfo];
m15_6 -> m15_8  [key=0, style=solid];
m15_6 -> m15_11  [key=2, style=dotted];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_11  [key=2, style=dotted];
m15_3 -> m15_4  [key=0, style=solid];
m15_3 -> m15_7  [key=0, style=solid];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_10  [key=2, style=dotted];
m15_4 -> m15_5  [key=0, style=solid];
m15_8 -> m15_0  [key=0, style=bold, color=blue];
m15_12 -> m15_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Selection.Heuristics.StandardInjectionHeuristic"];
m15_12 -> m15_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Selection.Heuristics.StandardInjectionHeuristic"];
m15_12 -> m15_7  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Selection.Heuristics.StandardInjectionHeuristic"];
m22_0 -> m22_1  [key=0, style=solid];
m22_0 -> m22_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>"];
m22_1 -> m22_2  [key=0, style=solid];
m22_1 -> m22_3  [key=0, style=solid];
m22_1 -> m22_5  [key=2, style=dotted];
m22_1 -> m22_6  [key=2, style=dotted];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_5  [key=2, style=dotted];
m22_3 -> m22_8  [key=2, style=dotted];
m22_2 -> m22_4  [key=0, style=solid];
m22_2 -> m22_7  [key=2, style=dotted];
m22_4 -> m22_0  [key=0, style=bold, color=blue];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_2  [key=0, style=solid];
m23_2 -> m23_0  [key=0, style=bold, color=blue];
m23_3 -> m23_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.MySimpleType"];
m25_16 -> m25_17  [key=0, style=solid];
m25_17 -> m25_16  [key=0, style=bold, color=blue];
m25_8 -> m25_9  [key=0, style=solid];
m25_9 -> m25_8  [key=0, style=bold, color=blue];
m25_10 -> m25_11  [key=0, style=solid];
m25_11 -> m25_10  [key=0, style=bold, color=blue];
m25_6 -> m25_7  [key=0, style=solid];
m25_7 -> m25_6  [key=0, style=bold, color=blue];
m25_4 -> m25_5  [key=0, style=solid];
m25_5 -> m25_4  [key=0, style=bold, color=blue];
m25_2 -> m25_3  [key=0, style=solid];
m25_3 -> m25_2  [key=0, style=bold, color=blue];
m25_14 -> m25_15  [key=0, style=solid];
m25_15 -> m25_14  [key=0, style=bold, color=blue];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_0  [key=0, style=bold, color=blue];
m25_12 -> m25_13  [key=0, style=solid];
m25_13 -> m25_12  [key=0, style=bold, color=blue];
m25_18 -> m25_19  [key=0, style=solid];
m25_19 -> m25_18  [key=0, style=bold, color=blue];
m26_4 -> m26_5  [key=0, style=solid];
m26_5 -> m26_6  [key=0, style=solid];
m26_5 -> m26_35  [key=2, style=dotted];
m26_6 -> m26_7  [key=0, style=solid];
m26_6 -> m26_35  [key=2, style=dotted];
m26_7 -> m26_8  [key=0, style=solid];
m26_7 -> m26_35  [key=2, style=dotted];
m26_8 -> m26_9  [key=0, style=solid];
m26_8 -> m26_35  [key=2, style=dotted];
m26_9 -> m26_10  [key=0, style=solid];
m26_9 -> m26_35  [key=2, style=dotted];
m26_10 -> m26_11  [key=0, style=solid];
m26_10 -> m26_35  [key=2, style=dotted];
m26_11 -> m26_12  [key=0, style=solid];
m26_11 -> m26_35  [key=2, style=dotted];
m26_12 -> m26_13  [key=0, style=solid];
m26_12 -> m26_35  [key=2, style=dotted];
m26_13 -> m26_14  [key=0, style=solid];
m26_13 -> m26_15  [key=0, style=solid];
m26_14 -> m26_15  [key=0, style=solid];
m26_14 -> m26_35  [key=2, style=dotted];
m26_15 -> m26_16  [key=0, style=solid];
m26_15 -> m26_35  [key=2, style=dotted];
m26_16 -> m26_17  [key=0, style=solid];
m26_16 -> m26_35  [key=2, style=dotted];
m26_17 -> m26_18  [key=0, style=solid];
m26_17 -> m26_35  [key=2, style=dotted];
m26_18 -> m26_19  [key=0, style=solid];
m26_18 -> m26_35  [key=2, style=dotted];
m26_19 -> m26_20  [key=0, style=solid];
m26_19 -> m26_35  [key=2, style=dotted];
m26_20 -> m26_21  [key=0, style=solid];
m26_20 -> m26_35  [key=2, style=dotted];
m26_21 -> m26_22  [key=0, style=solid];
m26_21 -> m26_35  [key=2, style=dotted];
m26_22 -> m26_23  [key=0, style=solid];
m26_22 -> m26_35  [key=2, style=dotted];
m26_23 -> m26_24  [key=0, style=solid];
m26_23 -> m26_35  [key=2, style=dotted];
m26_24 -> m26_25  [key=0, style=solid];
m26_24 -> m26_35  [key=2, style=dotted];
m26_25 -> m26_26  [key=0, style=solid];
m26_25 -> m26_27  [key=0, style=solid];
m26_26 -> m26_28  [key=0, style=solid];
m26_26 -> m26_35  [key=2, style=dotted];
m26_27 -> m26_28  [key=0, style=solid];
m26_27 -> m26_35  [key=2, style=dotted];
m26_28 -> m26_29  [key=0, style=solid];
m26_28 -> m26_35  [key=2, style=dotted];
m26_29 -> m26_30  [key=0, style=solid];
m26_29 -> m26_35  [key=2, style=dotted];
m26_30 -> m26_31  [key=0, style=solid];
m26_30 -> m26_35  [key=2, style=dotted];
m26_31 -> m26_32  [key=0, style=solid];
m26_31 -> m26_35  [key=2, style=dotted];
m26_32 -> m26_33  [key=0, style=solid];
m26_32 -> m26_35  [key=2, style=dotted];
m26_33 -> m26_34  [key=0, style=solid];
m26_33 -> m26_35  [key=2, style=dotted];
m26_34 -> m26_4  [key=0, style=bold, color=blue];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_0  [key=0, style=bold, color=blue];
m26_2 -> m26_3  [key=0, style=solid];
m26_3 -> m26_2  [key=0, style=bold, color=blue];
m26_36 -> m26_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_7  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_8  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_9  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_10  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_11  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_12  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_13  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_14  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_15  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_16  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_17  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_18  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_19  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_20  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_21  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_22  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_23  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_24  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_25  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_26  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_27  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_28  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_29  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_30  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_31  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_32  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m26_36 -> m26_33  [key=1, style=dashed, color=darkseagreen4, label="Ninject.StandardKernel"];
m27_2 -> m27_3  [key=0, style=solid];
m27_3 -> m27_2  [key=0, style=bold, color=blue];
m27_4 -> m27_5  [key=0, style=solid];
m27_5 -> m27_4  [key=0, style=bold, color=blue];
m27_8 -> m27_9  [key=0, style=solid];
m27_9 -> m27_8  [key=0, style=bold, color=blue];
m27_6 -> m27_7  [key=0, style=solid];
m27_7 -> m27_6  [key=0, style=bold, color=blue];
m27_12 -> m27_13  [key=0, style=solid];
m27_13 -> m27_12  [key=0, style=bold, color=blue];
m27_10 -> m27_11  [key=0, style=solid];
m27_11 -> m27_10  [key=0, style=bold, color=blue];
m27_0 -> m27_1  [key=0, style=solid];
m27_1 -> m27_0  [key=0, style=bold, color=blue];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_2  [key=0, style=solid];
m28_1 -> m28_3  [key=2, style=dotted];
m28_1 -> m28_4  [key=2, style=dotted];
m28_1 -> m28_5  [key=2, style=dotted];
m28_2 -> m28_0  [key=0, style=bold, color=blue];
m28_6 -> m28_7  [key=0, style=solid];
m28_7 -> m28_8  [key=0, style=solid];
m28_7 -> m28_9  [key=2, style=dotted];
m28_7 -> m28_10  [key=2, style=dotted];
m28_8 -> m28_6  [key=0, style=bold, color=blue];
m28_19 -> m28_20  [key=0, style=solid];
m28_20 -> m28_21  [key=0, style=solid];
m28_20 -> m28_9  [key=2, style=dotted];
m28_20 -> m28_23  [key=2, style=dotted];
m28_21 -> m28_22  [key=0, style=solid];
m28_21 -> m28_24  [key=2, style=dotted];
m28_21 -> m28_4  [key=2, style=dotted];
m28_21 -> m28_5  [key=2, style=dotted];
m28_22 -> m28_19  [key=0, style=bold, color=blue];
m28_11 -> m28_12  [key=0, style=solid];
m28_12 -> m28_13  [key=0, style=solid];
m28_12 -> m28_9  [key=2, style=dotted];
m28_12 -> m28_16  [key=2, style=dotted];
m28_12 -> m28_14  [key=1, style=dashed, color=darkseagreen4, label=expected];
m28_13 -> m28_14  [key=0, style=solid];
m28_13 -> m28_4  [key=2, style=dotted];
m28_13 -> m28_17  [key=2, style=dotted];
m28_14 -> m28_15  [key=0, style=solid];
m28_14 -> m28_18  [key=2, style=dotted];
m28_14 -> m28_4  [key=2, style=dotted];
m28_14 -> m28_5  [key=2, style=dotted];
m28_15 -> m28_11  [key=0, style=bold, color=blue];
m28_25 -> m28_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests"];
m28_25 -> m28_7  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests"];
m28_25 -> m28_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests"];
m28_25 -> m28_20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests"];
m30_50 -> m30_51  [key=0, style=solid, color=green];
m30_51 -> m30_52  [key=0, style=solid, color=green];
m30_51 -> m30_3  [key=2, style=dotted, color=green];
m30_51 -> m30_19  [key=2, style=dotted, color=green];
m30_51 -> m30_34  [key=2, style=dotted, color=green];
m30_51 -> m30_35  [key=2, style=dotted, color=green];
m30_51 -> m30_36  [key=2, style=dotted, color=green];
m30_51 -> m30_37  [key=2, style=dotted, color=green];
m30_51 -> m30_20  [key=2, style=dotted, color=green];
m30_52 -> m30_53  [key=0, style=solid];
m30_52 -> m30_4  [key=2, style=dotted];
m30_52 -> m30_21  [key=2, style=dotted];
m30_52 -> m30_38  [key=2, style=dotted];
m30_52 -> m30_54  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_52 -> m30_55  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_52 -> m30_56  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_52 -> m30_57  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_52 -> m30_58  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_53 -> m30_54  [key=0, style=solid];
m30_53 -> m30_5  [key=2, style=dotted];
m30_54 -> m30_55  [key=0, style=solid];
m30_54 -> m30_5  [key=2, style=dotted];
m30_55 -> m30_56  [key=0, style=solid];
m30_55 -> m30_5  [key=2, style=dotted];
m30_56 -> m30_57  [key=0, style=solid];
m30_56 -> m30_5  [key=2, style=dotted];
m30_57 -> m30_58  [key=0, style=solid];
m30_57 -> m30_5  [key=2, style=dotted];
m30_58 -> m30_59  [key=0, style=solid];
m30_58 -> m30_5  [key=2, style=dotted];
m30_59 -> m30_50  [key=0, style=bold, color=blue];
m30_22 -> m30_23  [key=0, style=solid, color=green];
m30_23 -> m30_24  [key=0, style=solid, color=green];
m30_23 -> m30_3  [key=2, style=dotted, color=green];
m30_23 -> m30_19  [key=2, style=dotted, color=green];
m30_23 -> m30_34  [key=2, style=dotted, color=green];
m30_23 -> m30_35  [key=2, style=dotted, color=green];
m30_23 -> m30_36  [key=2, style=dotted, color=green];
m30_23 -> m30_37  [key=2, style=dotted, color=green];
m30_23 -> m30_20  [key=2, style=dotted, color=green];
m30_24 -> m30_25  [key=0, style=solid];
m30_24 -> m30_4  [key=2, style=dotted];
m30_24 -> m30_21  [key=2, style=dotted];
m30_24 -> m30_38  [key=2, style=dotted];
m30_24 -> m30_26  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_24 -> m30_27  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_24 -> m30_28  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_24 -> m30_29  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_24 -> m30_30  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_24 -> m30_31  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_24 -> m30_32  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_25 -> m30_26  [key=0, style=solid];
m30_25 -> m30_5  [key=2, style=dotted];
m30_26 -> m30_27  [key=0, style=solid];
m30_26 -> m30_5  [key=2, style=dotted];
m30_27 -> m30_28  [key=0, style=solid];
m30_27 -> m30_5  [key=2, style=dotted];
m30_28 -> m30_29  [key=0, style=solid];
m30_28 -> m30_5  [key=2, style=dotted];
m30_29 -> m30_30  [key=0, style=solid];
m30_29 -> m30_5  [key=2, style=dotted];
m30_30 -> m30_31  [key=0, style=solid];
m30_30 -> m30_5  [key=2, style=dotted];
m30_31 -> m30_32  [key=0, style=solid];
m30_31 -> m30_5  [key=2, style=dotted];
m30_32 -> m30_33  [key=0, style=solid];
m30_32 -> m30_5  [key=2, style=dotted];
m30_33 -> m30_22  [key=0, style=bold, color=blue];
m30_66 -> m30_67  [key=0, style=solid];
m30_67 -> m30_68  [key=0, style=solid];
m30_67 -> m30_65  [key=2, style=dotted];
m30_67 -> m30_17  [key=2, style=dotted];
m30_67 -> m30_69  [key=1, style=dashed, color=green, label=sut];
m30_67 -> m30_70  [key=1, style=dashed, color=darkseagreen4, label=sut];
m30_68 -> m30_69  [key=0, style=solid, color=green];
m30_69 -> m30_70  [key=0, style=solid, color=green];
m30_69 -> m30_34  [key=2, style=dotted, color=green];
m30_69 -> m30_35  [key=2, style=dotted, color=green];
m30_69 -> m30_36  [key=2, style=dotted, color=green];
m30_69 -> m30_37  [key=2, style=dotted, color=green];
m30_70 -> m30_71  [key=0, style=solid];
m30_70 -> m30_4  [key=2, style=dotted];
m30_70 -> m30_77  [key=2, style=dotted];
m30_70 -> m30_72  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_70 -> m30_73  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_70 -> m30_74  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_70 -> m30_75  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_71 -> m30_72  [key=0, style=solid];
m30_71 -> m30_5  [key=2, style=dotted];
m30_72 -> m30_73  [key=0, style=solid];
m30_72 -> m30_5  [key=2, style=dotted];
m30_73 -> m30_74  [key=0, style=solid];
m30_73 -> m30_5  [key=2, style=dotted];
m30_74 -> m30_75  [key=0, style=solid];
m30_74 -> m30_5  [key=2, style=dotted];
m30_75 -> m30_76  [key=0, style=solid];
m30_75 -> m30_5  [key=2, style=dotted];
m30_76 -> m30_66  [key=0, style=bold, color=blue];
m30_78 -> m30_79  [key=0, style=solid];
m30_79 -> m30_80  [key=0, style=solid];
m30_79 -> m30_65  [key=2, style=dotted];
m30_79 -> m30_17  [key=2, style=dotted];
m30_79 -> m30_81  [key=1, style=dashed, color=green, label=sut];
m30_79 -> m30_82  [key=1, style=dashed, color=darkseagreen4, label=sut];
m30_80 -> m30_81  [key=0, style=solid, color=green];
m30_81 -> m30_82  [key=0, style=solid, color=green];
m30_81 -> m30_34  [key=2, style=dotted, color=green];
m30_81 -> m30_35  [key=2, style=dotted, color=green];
m30_81 -> m30_36  [key=2, style=dotted, color=green];
m30_81 -> m30_37  [key=2, style=dotted, color=green];
m30_82 -> m30_83  [key=0, style=solid];
m30_82 -> m30_4  [key=2, style=dotted];
m30_82 -> m30_21  [key=2, style=dotted];
m30_82 -> m30_84  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_82 -> m30_85  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_82 -> m30_86  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_82 -> m30_87  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_82 -> m30_88  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_83 -> m30_84  [key=0, style=solid];
m30_83 -> m30_5  [key=2, style=dotted];
m30_84 -> m30_85  [key=0, style=solid];
m30_84 -> m30_5  [key=2, style=dotted];
m30_85 -> m30_86  [key=0, style=solid];
m30_85 -> m30_5  [key=2, style=dotted];
m30_86 -> m30_87  [key=0, style=solid];
m30_86 -> m30_5  [key=2, style=dotted];
m30_87 -> m30_88  [key=0, style=solid];
m30_87 -> m30_5  [key=2, style=dotted];
m30_88 -> m30_89  [key=0, style=solid];
m30_88 -> m30_5  [key=2, style=dotted];
m30_89 -> m30_78  [key=0, style=bold, color=blue];
m30_149 -> m30_150  [key=0, style=solid, color=green];
m30_150 -> m30_151  [key=0, style=solid, color=green];
m30_150 -> m30_34  [key=2, style=dotted, color=green];
m30_150 -> m30_35  [key=2, style=dotted, color=green];
m30_150 -> m30_116  [key=2, style=dotted, color=green];
m30_150 -> m30_121  [key=2, style=dotted, color=green];
m30_150 -> m30_118  [key=2, style=dotted, color=green];
m30_151 -> m30_152  [key=0, style=solid];
m30_151 -> m30_163  [key=2, style=dotted];
m30_152 -> m30_153  [key=0, style=solid];
m30_152 -> m30_4  [key=2, style=dotted];
m30_152 -> m30_21  [key=2, style=dotted];
m30_152 -> m30_38  [key=2, style=dotted];
m30_152 -> m30_154  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_152 -> m30_155  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_152 -> m30_156  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_152 -> m30_157  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_152 -> m30_158  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_152 -> m30_159  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_152 -> m30_160  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_152 -> m30_161  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_153 -> m30_154  [key=0, style=solid];
m30_153 -> m30_164  [key=2, style=dotted];
m30_153 -> m30_165  [key=2, style=dotted];
m30_154 -> m30_155  [key=0, style=solid];
m30_154 -> m30_164  [key=2, style=dotted];
m30_154 -> m30_165  [key=2, style=dotted];
m30_155 -> m30_156  [key=0, style=solid];
m30_155 -> m30_5  [key=2, style=dotted];
m30_156 -> m30_157  [key=0, style=solid];
m30_156 -> m30_5  [key=2, style=dotted];
m30_157 -> m30_158  [key=0, style=solid];
m30_157 -> m30_5  [key=2, style=dotted];
m30_158 -> m30_159  [key=0, style=solid];
m30_158 -> m30_5  [key=2, style=dotted];
m30_159 -> m30_160  [key=0, style=solid];
m30_159 -> m30_5  [key=2, style=dotted];
m30_160 -> m30_161  [key=0, style=solid];
m30_160 -> m30_5  [key=2, style=dotted];
m30_161 -> m30_162  [key=0, style=solid];
m30_161 -> m30_5  [key=2, style=dotted];
m30_162 -> m30_149  [key=0, style=bold, color=blue];
m30_193 -> m30_194  [key=0, style=solid, color=green];
m30_194 -> m30_195  [key=0, style=solid, color=green];
m30_194 -> m30_3  [key=2, style=dotted, color=green];
m30_194 -> m30_19  [key=2, style=dotted, color=green];
m30_194 -> m30_34  [key=2, style=dotted, color=green];
m30_194 -> m30_35  [key=2, style=dotted, color=green];
m30_194 -> m30_36  [key=2, style=dotted, color=green];
m30_194 -> m30_37  [key=2, style=dotted, color=green];
m30_194 -> m30_20  [key=2, style=dotted, color=green];
m30_195 -> m30_196  [key=0, style=solid];
m30_195 -> m30_4  [key=2, style=dotted];
m30_195 -> m30_21  [key=2, style=dotted];
m30_195 -> m30_38  [key=2, style=dotted];
m30_195 -> m30_197  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_195 -> m30_198  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_195 -> m30_199  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_195 -> m30_200  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_195 -> m30_201  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_195 -> m30_202  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_195 -> m30_203  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_195 -> m30_204  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_196 -> m30_197  [key=0, style=solid];
m30_196 -> m30_5  [key=2, style=dotted];
m30_197 -> m30_198  [key=0, style=solid];
m30_197 -> m30_5  [key=2, style=dotted];
m30_198 -> m30_199  [key=0, style=solid];
m30_198 -> m30_5  [key=2, style=dotted];
m30_199 -> m30_200  [key=0, style=solid];
m30_199 -> m30_5  [key=2, style=dotted];
m30_200 -> m30_201  [key=0, style=solid];
m30_200 -> m30_5  [key=2, style=dotted];
m30_201 -> m30_202  [key=0, style=solid];
m30_201 -> m30_5  [key=2, style=dotted];
m30_202 -> m30_203  [key=0, style=solid];
m30_202 -> m30_5  [key=2, style=dotted];
m30_203 -> m30_204  [key=0, style=solid];
m30_203 -> m30_5  [key=2, style=dotted];
m30_204 -> m30_205  [key=0, style=solid];
m30_204 -> m30_5  [key=2, style=dotted];
m30_205 -> m30_193  [key=0, style=bold, color=blue];
m30_39 -> m30_40  [key=0, style=solid, color=green];
m30_40 -> m30_41  [key=0, style=solid, color=green];
m30_40 -> m30_3  [key=2, style=dotted, color=green];
m30_40 -> m30_19  [key=2, style=dotted, color=green];
m30_40 -> m30_34  [key=2, style=dotted, color=green];
m30_40 -> m30_35  [key=2, style=dotted, color=green];
m30_40 -> m30_36  [key=2, style=dotted, color=green];
m30_40 -> m30_37  [key=2, style=dotted, color=green];
m30_40 -> m30_20  [key=2, style=dotted, color=green];
m30_41 -> m30_42  [key=0, style=solid];
m30_41 -> m30_4  [key=2, style=dotted];
m30_41 -> m30_21  [key=2, style=dotted];
m30_41 -> m30_38  [key=2, style=dotted];
m30_41 -> m30_43  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_41 -> m30_44  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_41 -> m30_45  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_41 -> m30_46  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_41 -> m30_47  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_41 -> m30_48  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_42 -> m30_43  [key=0, style=solid];
m30_42 -> m30_5  [key=2, style=dotted];
m30_43 -> m30_44  [key=0, style=solid];
m30_43 -> m30_5  [key=2, style=dotted];
m30_44 -> m30_45  [key=0, style=solid];
m30_44 -> m30_5  [key=2, style=dotted];
m30_45 -> m30_46  [key=0, style=solid];
m30_45 -> m30_5  [key=2, style=dotted];
m30_46 -> m30_47  [key=0, style=solid];
m30_46 -> m30_5  [key=2, style=dotted];
m30_47 -> m30_48  [key=0, style=solid];
m30_47 -> m30_5  [key=2, style=dotted];
m30_48 -> m30_49  [key=0, style=solid];
m30_48 -> m30_5  [key=2, style=dotted];
m30_49 -> m30_39  [key=0, style=bold, color=blue];
m30_90 -> m30_91  [key=0, style=solid];
m30_91 -> m30_92  [key=0, style=solid];
m30_91 -> m30_65  [key=2, style=dotted];
m30_91 -> m30_93  [key=1, style=dashed, color=green, label=sut];
m30_91 -> m30_94  [key=1, style=dashed, color=darkseagreen4, label=sut];
m30_92 -> m30_93  [key=0, style=solid, color=green];
m30_93 -> m30_94  [key=0, style=solid, color=green];
m30_93 -> m30_19  [key=2, style=dotted, color=green];
m30_93 -> m30_34  [key=2, style=dotted, color=green];
m30_93 -> m30_35  [key=2, style=dotted, color=green];
m30_93 -> m30_36  [key=2, style=dotted, color=green];
m30_93 -> m30_37  [key=2, style=dotted, color=green];
m30_93 -> m30_20  [key=2, style=dotted, color=green];
m30_94 -> m30_95  [key=0, style=solid];
m30_94 -> m30_4  [key=2, style=dotted];
m30_94 -> m30_21  [key=2, style=dotted];
m30_94 -> m30_96  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_94 -> m30_97  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_94 -> m30_98  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_94 -> m30_99  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_94 -> m30_100  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_95 -> m30_96  [key=0, style=solid];
m30_95 -> m30_5  [key=2, style=dotted];
m30_96 -> m30_97  [key=0, style=solid];
m30_96 -> m30_5  [key=2, style=dotted];
m30_97 -> m30_98  [key=0, style=solid];
m30_97 -> m30_5  [key=2, style=dotted];
m30_98 -> m30_99  [key=0, style=solid];
m30_98 -> m30_5  [key=2, style=dotted];
m30_99 -> m30_100  [key=0, style=solid];
m30_99 -> m30_5  [key=2, style=dotted];
m30_100 -> m30_101  [key=0, style=solid];
m30_100 -> m30_5  [key=2, style=dotted];
m30_101 -> m30_90  [key=0, style=bold, color=blue];
m30_178 -> m30_179  [key=0, style=solid, color=green];
m30_179 -> m30_180  [key=0, style=solid, color=green];
m30_179 -> m30_36  [key=2, style=dotted, color=green];
m30_179 -> m30_191  [key=2, style=dotted, color=green];
m30_180 -> m30_181  [key=0, style=solid];
m30_180 -> m30_34  [key=2, style=dotted];
m30_180 -> m30_192  [key=2, style=dotted];
m30_180 -> m30_125  [key=2, style=dotted];
m30_181 -> m30_182  [key=0, style=solid];
m30_181 -> m30_163  [key=2, style=dotted];
m30_182 -> m30_183  [key=0, style=solid];
m30_182 -> m30_4  [key=2, style=dotted];
m30_182 -> m30_21  [key=2, style=dotted];
m30_182 -> m30_38  [key=2, style=dotted];
m30_182 -> m30_184  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_182 -> m30_185  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_182 -> m30_186  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_182 -> m30_187  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_182 -> m30_188  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_182 -> m30_189  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_183 -> m30_184  [key=0, style=solid];
m30_183 -> m30_164  [key=2, style=dotted];
m30_183 -> m30_165  [key=2, style=dotted];
m30_184 -> m30_185  [key=0, style=solid];
m30_184 -> m30_164  [key=2, style=dotted];
m30_184 -> m30_165  [key=2, style=dotted];
m30_185 -> m30_186  [key=0, style=solid];
m30_185 -> m30_5  [key=2, style=dotted];
m30_186 -> m30_187  [key=0, style=solid];
m30_186 -> m30_5  [key=2, style=dotted];
m30_187 -> m30_188  [key=0, style=solid];
m30_187 -> m30_5  [key=2, style=dotted];
m30_188 -> m30_189  [key=0, style=solid];
m30_188 -> m30_5  [key=2, style=dotted];
m30_189 -> m30_190  [key=0, style=solid];
m30_189 -> m30_5  [key=2, style=dotted];
m30_190 -> m30_178  [key=0, style=bold, color=blue];
m30_0 -> m30_1  [key=0, style=solid];
m30_1 -> m30_2  [key=0, style=solid];
m30_1 -> m30_3  [key=2, style=dotted];
m30_1 -> m30_4  [key=2, style=dotted];
m30_1 -> m30_5  [key=2, style=dotted];
m30_2 -> m30_0  [key=0, style=bold, color=blue];
m30_60 -> m30_61  [key=0, style=solid, color=green];
m30_61 -> m30_62  [key=0, style=solid, color=green];
m30_61 -> m30_65  [key=2, style=dotted, color=green];
m30_61 -> m30_34  [key=2, style=dotted, color=green];
m30_61 -> m30_35  [key=2, style=dotted, color=green];
m30_61 -> m30_36  [key=2, style=dotted, color=green];
m30_61 -> m30_37  [key=2, style=dotted, color=green];
m30_62 -> m30_63  [key=0, style=solid];
m30_62 -> m30_4  [key=2, style=dotted];
m30_62 -> m30_21  [key=2, style=dotted];
m30_62 -> m30_38  [key=2, style=dotted];
m30_63 -> m30_64  [key=0, style=solid];
m30_63 -> m30_5  [key=2, style=dotted];
m30_64 -> m30_60  [key=0, style=bold, color=blue];
m30_206 -> m30_207  [key=0, style=solid, color=green];
m30_207 -> m30_208  [key=0, style=solid, color=green];
m30_207 -> m30_34  [key=2, style=dotted, color=green];
m30_207 -> m30_35  [key=2, style=dotted, color=green];
m30_207 -> m30_36  [key=2, style=dotted, color=green];
m30_208 -> m30_209  [key=0, style=solid];
m30_208 -> m30_218  [key=2, style=dotted];
m30_209 -> m30_210  [key=0, style=solid];
m30_209 -> m30_21  [key=2, style=dotted];
m30_209 -> m30_211  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_209 -> m30_212  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_209 -> m30_213  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_209 -> m30_214  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_209 -> m30_215  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_209 -> m30_216  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_210 -> m30_211  [key=0, style=solid];
m30_210 -> m30_5  [key=2, style=dotted];
m30_211 -> m30_212  [key=0, style=solid];
m30_211 -> m30_5  [key=2, style=dotted];
m30_212 -> m30_213  [key=0, style=solid];
m30_212 -> m30_5  [key=2, style=dotted];
m30_213 -> m30_214  [key=0, style=solid];
m30_213 -> m30_5  [key=2, style=dotted];
m30_214 -> m30_215  [key=0, style=solid];
m30_214 -> m30_5  [key=2, style=dotted];
m30_215 -> m30_216  [key=0, style=solid];
m30_215 -> m30_5  [key=2, style=dotted];
m30_216 -> m30_217  [key=0, style=solid];
m30_216 -> m30_5  [key=2, style=dotted];
m30_217 -> m30_206  [key=0, style=bold, color=blue];
m30_146 -> m30_147  [key=0, style=solid];
m30_128 -> m30_129  [key=0, style=solid];
m30_128 -> m30_131  [key=0, style=solid];
m30_128 -> m30_133  [key=0, style=solid];
m30_128 -> m30_135  [key=0, style=solid];
m30_128 -> m30_137  [key=0, style=solid];
m30_128 -> m30_139  [key=0, style=solid];
m30_128 -> m30_141  [key=0, style=solid];
m30_128 -> m30_143  [key=0, style=solid];
m30_130 -> m30_144  [key=0, style=solid];
m30_132 -> m30_144  [key=0, style=solid];
m30_134 -> m30_144  [key=0, style=solid];
m30_136 -> m30_144  [key=0, style=solid];
m30_138 -> m30_144  [key=0, style=solid];
m30_142 -> m30_144  [key=0, style=solid];
m30_127 -> m30_128  [key=0, style=solid];
m30_127 -> m30_130  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m30_127 -> m30_132  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m30_127 -> m30_134  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m30_127 -> m30_136  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m30_127 -> m30_138  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m30_127 -> m30_142  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m30_129 -> m30_130  [key=0, style=solid];
m30_131 -> m30_132  [key=0, style=solid];
m30_133 -> m30_134  [key=0, style=solid];
m30_135 -> m30_136  [key=0, style=solid];
m30_137 -> m30_138  [key=0, style=solid];
m30_139 -> m30_140  [key=0, style=solid];
m30_141 -> m30_142  [key=0, style=solid];
m30_143 -> m30_144  [key=0, style=solid];
m30_143 -> m30_145  [key=2, style=dotted];
m30_140 -> m30_144  [key=0, style=solid];
m30_144 -> m30_127  [key=0, style=bold, color=blue];
m30_147 -> m30_148  [key=0, style=solid];
m30_148 -> m30_146  [key=0, style=bold, color=blue];
m30_244 -> m30_245  [key=0, style=solid];
m30_245 -> m30_246  [key=0, style=solid, color=green];
m30_245 -> m30_256  [key=2, style=dotted];
m30_245 -> m30_257  [key=2, style=dotted];
m30_245 -> m30_247  [key=1, style=dashed, color=darkseagreen4, label=handlers];
m30_245 -> m30_249  [key=1, style=dashed, color=darkseagreen4, label=handlers];
m30_246 -> m30_247  [key=0, style=solid, color=green];
m30_246 -> m30_34  [key=2, style=dotted, color=green];
m30_246 -> m30_258  [key=2, style=dotted, color=green];
m30_246 -> m30_116  [key=2, style=dotted, color=green];
m30_246 -> m30_248  [key=1, style=dashed, color=green, label=fakeResult];
m30_247 -> m30_248  [key=0, style=solid];
m30_247 -> m30_259  [key=2, style=dotted];
m30_249 -> m30_250  [key=0, style=solid];
m30_249 -> m30_259  [key=2, style=dotted];
m30_248 -> m30_249  [key=0, style=solid];
m30_248 -> m30_163  [key=2, style=dotted];
m30_248 -> m30_250  [key=1, style=dashed, color=darkseagreen4, label=helpText];
m30_250 -> m30_251  [key=0, style=solid];
m30_250 -> m30_4  [key=2, style=dotted];
m30_251 -> m30_252  [key=0, style=solid];
m30_251 -> m30_21  [key=2, style=dotted];
m30_251 -> m30_38  [key=2, style=dotted];
m30_251 -> m30_253  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_251 -> m30_254  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_252 -> m30_253  [key=0, style=solid];
m30_252 -> m30_164  [key=2, style=dotted];
m30_252 -> m30_260  [key=2, style=dotted];
m30_253 -> m30_254  [key=0, style=solid];
m30_253 -> m30_164  [key=2, style=dotted];
m30_253 -> m30_260  [key=2, style=dotted];
m30_254 -> m30_255  [key=0, style=solid];
m30_254 -> m30_164  [key=2, style=dotted];
m30_254 -> m30_260  [key=2, style=dotted];
m30_255 -> m30_244  [key=0, style=bold, color=blue];
m30_219 -> m30_220  [key=0, style=solid, color=green];
m30_220 -> m30_221  [key=0, style=solid, color=green];
m30_220 -> m30_34  [key=2, style=dotted, color=green];
m30_220 -> m30_35  [key=2, style=dotted, color=green];
m30_220 -> m30_116  [key=2, style=dotted, color=green];
m30_221 -> m30_222  [key=0, style=solid];
m30_221 -> m30_163  [key=2, style=dotted];
m30_222 -> m30_223  [key=0, style=solid];
m30_222 -> m30_4  [key=2, style=dotted];
m30_223 -> m30_224  [key=0, style=solid];
m30_223 -> m30_21  [key=2, style=dotted];
m30_223 -> m30_38  [key=2, style=dotted];
m30_223 -> m30_225  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_223 -> m30_226  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_223 -> m30_227  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_223 -> m30_228  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_223 -> m30_229  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_223 -> m30_230  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_223 -> m30_231  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_223 -> m30_232  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_223 -> m30_233  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_223 -> m30_234  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_223 -> m30_235  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_223 -> m30_236  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_223 -> m30_237  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_223 -> m30_238  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_223 -> m30_239  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_223 -> m30_240  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_223 -> m30_241  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_223 -> m30_242  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_224 -> m30_225  [key=0, style=solid];
m30_224 -> m30_164  [key=2, style=dotted];
m30_224 -> m30_165  [key=2, style=dotted];
m30_225 -> m30_226  [key=0, style=solid];
m30_225 -> m30_164  [key=2, style=dotted];
m30_225 -> m30_165  [key=2, style=dotted];
m30_226 -> m30_227  [key=0, style=solid];
m30_226 -> m30_5  [key=2, style=dotted];
m30_227 -> m30_228  [key=0, style=solid];
m30_227 -> m30_5  [key=2, style=dotted];
m30_228 -> m30_229  [key=0, style=solid];
m30_228 -> m30_5  [key=2, style=dotted];
m30_229 -> m30_230  [key=0, style=solid];
m30_229 -> m30_5  [key=2, style=dotted];
m30_230 -> m30_231  [key=0, style=solid];
m30_230 -> m30_5  [key=2, style=dotted];
m30_231 -> m30_232  [key=0, style=solid];
m30_231 -> m30_5  [key=2, style=dotted];
m30_232 -> m30_233  [key=0, style=solid];
m30_232 -> m30_5  [key=2, style=dotted];
m30_233 -> m30_234  [key=0, style=solid];
m30_233 -> m30_5  [key=2, style=dotted];
m30_234 -> m30_235  [key=0, style=solid];
m30_234 -> m30_5  [key=2, style=dotted];
m30_235 -> m30_236  [key=0, style=solid];
m30_235 -> m30_5  [key=2, style=dotted];
m30_236 -> m30_237  [key=0, style=solid];
m30_236 -> m30_5  [key=2, style=dotted];
m30_237 -> m30_238  [key=0, style=solid];
m30_237 -> m30_5  [key=2, style=dotted];
m30_238 -> m30_239  [key=0, style=solid];
m30_238 -> m30_5  [key=2, style=dotted];
m30_239 -> m30_240  [key=0, style=solid];
m30_239 -> m30_5  [key=2, style=dotted];
m30_240 -> m30_241  [key=0, style=solid];
m30_240 -> m30_5  [key=2, style=dotted];
m30_241 -> m30_242  [key=0, style=solid];
m30_241 -> m30_5  [key=2, style=dotted];
m30_242 -> m30_243  [key=0, style=solid];
m30_242 -> m30_5  [key=2, style=dotted];
m30_243 -> m30_219  [key=0, style=bold, color=blue];
m30_6 -> m30_7  [key=0, style=solid];
m30_7 -> m30_8  [key=0, style=solid];
m30_7 -> m30_16  [key=2, style=dotted];
m30_7 -> m30_17  [key=2, style=dotted];
m30_7 -> m30_18  [key=2, style=dotted];
m30_7 -> m30_19  [key=2, style=dotted];
m30_7 -> m30_20  [key=2, style=dotted];
m30_8 -> m30_9  [key=0, style=solid];
m30_8 -> m30_4  [key=2, style=dotted];
m30_8 -> m30_21  [key=2, style=dotted];
m30_8 -> m30_10  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_8 -> m30_11  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_8 -> m30_12  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_8 -> m30_13  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_8 -> m30_14  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_9 -> m30_10  [key=0, style=solid];
m30_9 -> m30_5  [key=2, style=dotted];
m30_10 -> m30_11  [key=0, style=solid];
m30_10 -> m30_5  [key=2, style=dotted];
m30_11 -> m30_12  [key=0, style=solid];
m30_11 -> m30_5  [key=2, style=dotted];
m30_12 -> m30_13  [key=0, style=solid];
m30_12 -> m30_5  [key=2, style=dotted];
m30_13 -> m30_14  [key=0, style=solid];
m30_13 -> m30_5  [key=2, style=dotted];
m30_14 -> m30_15  [key=0, style=solid];
m30_14 -> m30_5  [key=2, style=dotted];
m30_15 -> m30_6  [key=0, style=bold, color=blue];
m30_102 -> m30_103  [key=0, style=solid];
m30_103 -> m30_104  [key=0, style=solid];
m30_103 -> m30_34  [key=2, style=dotted];
m30_103 -> m30_35  [key=2, style=dotted];
m30_103 -> m30_116  [key=2, style=dotted];
m30_103 -> m30_117  [key=2, style=dotted];
m30_103 -> m30_118  [key=2, style=dotted];
m30_103 -> m30_119  [key=2, style=dotted];
m30_103 -> m30_120  [key=2, style=dotted];
m30_103 -> m30_121  [key=2, style=dotted];
m30_103 -> m30_122  [key=2, style=dotted];
m30_103 -> m30_123  [key=2, style=dotted];
m30_103 -> m30_124  [key=2, style=dotted];
m30_103 -> m30_125  [key=2, style=dotted];
m30_103 -> m30_106  [key=1, style=dashed, color=darkseagreen4, label=fakeResult];
m30_104 -> m30_105  [key=0, style=solid];
m30_104 -> m30_128  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m30_104 -> m30_130  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m30_104 -> m30_132  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m30_104 -> m30_134  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m30_104 -> m30_136  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m30_104 -> m30_138  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m30_104 -> m30_142  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m30_104 -> m30_106  [key=1, style=dashed, color=darkseagreen4, label=fakeRenderer];
m30_104 -> m30_104  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<CommandLine.Error, string> fakeRenderer"];
m30_106 -> m30_107  [key=0, style=solid];
m30_106 -> m30_126  [key=2, style=dotted];
m30_105 -> m30_106  [key=0, style=solid];
m30_105 -> m30_105  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string> fakeMutExclRenderer"];
m30_107 -> m30_108  [key=0, style=solid];
m30_107 -> m30_21  [key=2, style=dotted];
m30_107 -> m30_109  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_107 -> m30_110  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_107 -> m30_111  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_107 -> m30_112  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_107 -> m30_113  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_107 -> m30_114  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_108 -> m30_109  [key=0, style=solid];
m30_108 -> m30_5  [key=2, style=dotted];
m30_109 -> m30_110  [key=0, style=solid];
m30_109 -> m30_5  [key=2, style=dotted];
m30_110 -> m30_111  [key=0, style=solid];
m30_110 -> m30_5  [key=2, style=dotted];
m30_111 -> m30_112  [key=0, style=solid];
m30_111 -> m30_5  [key=2, style=dotted];
m30_112 -> m30_113  [key=0, style=solid];
m30_112 -> m30_5  [key=2, style=dotted];
m30_113 -> m30_114  [key=0, style=solid];
m30_113 -> m30_5  [key=2, style=dotted];
m30_114 -> m30_115  [key=0, style=solid];
m30_114 -> m30_5  [key=2, style=dotted];
m30_115 -> m30_102  [key=0, style=bold, color=blue];
m30_166 -> m30_167  [key=0, style=solid, color=green];
m30_167 -> m30_168  [key=0, style=solid, color=green];
m30_167 -> m30_34  [key=2, style=dotted, color=green];
m30_167 -> m30_35  [key=2, style=dotted, color=green];
m30_167 -> m30_125  [key=2, style=dotted, color=green];
m30_168 -> m30_169  [key=0, style=solid];
m30_168 -> m30_163  [key=2, style=dotted];
m30_169 -> m30_170  [key=0, style=solid];
m30_169 -> m30_4  [key=2, style=dotted];
m30_169 -> m30_21  [key=2, style=dotted];
m30_169 -> m30_38  [key=2, style=dotted];
m30_169 -> m30_171  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_169 -> m30_172  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_169 -> m30_173  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_169 -> m30_174  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_169 -> m30_175  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_169 -> m30_176  [key=1, style=dashed, color=darkseagreen4, label=lines];
m30_170 -> m30_171  [key=0, style=solid];
m30_170 -> m30_164  [key=2, style=dotted];
m30_170 -> m30_165  [key=2, style=dotted];
m30_171 -> m30_172  [key=0, style=solid];
m30_171 -> m30_164  [key=2, style=dotted];
m30_171 -> m30_165  [key=2, style=dotted];
m30_172 -> m30_173  [key=0, style=solid];
m30_172 -> m30_5  [key=2, style=dotted];
m30_173 -> m30_174  [key=0, style=solid];
m30_173 -> m30_5  [key=2, style=dotted];
m30_174 -> m30_175  [key=0, style=solid];
m30_174 -> m30_5  [key=2, style=dotted];
m30_175 -> m30_176  [key=0, style=solid];
m30_175 -> m30_5  [key=2, style=dotted];
m30_176 -> m30_177  [key=0, style=solid];
m30_176 -> m30_5  [key=2, style=dotted];
m30_177 -> m30_166  [key=0, style=bold, color=blue];
m32_54 -> m32_18  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Globalization.CultureInfo parsingCulture"];
m32_3 -> m32_28  [key=1, style=dashed, color=green, label="System.Globalization.CultureInfo"];
m32_3 -> m32_19  [key=0, style=solid];
m32_3 -> m32_20  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m32_3 -> m32_24  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>"];
m32_3 -> m32_26  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m32_3 -> m32_66  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m32_3 -> m32_27  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m32_3 -> m32_70  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m32_3 -> m32_74  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m32_3 -> m32_29  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m32_3 -> m32_77  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m32_28 -> m32_28  [key=1, style=dashed, color=green, label=pt];
m32_28 -> m32_29  [key=0, style=solid, color=green];
m32_28 -> m32_49  [key=2, style=dotted, color=green];
m32_28 -> m32_48  [key=2, style=dotted, color=green];
m32_28 -> m32_73  [key=1, style=dashed, color=green, label="lambda expression"];
m32_28 -> m32_30  [key=1, style=dashed, color=green, label=valueSpecProps];
m32_28 -> m32_33  [key=1, style=dashed, color=green, label=valueSpecProps];
m32_26 -> m32_28  [key=1, style=dashed, color=green, label=partitions];
m32_26 -> m32_27  [key=0, style=solid];
m32_26 -> m32_46  [key=2, style=dotted];
m32_26 -> m32_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_26 -> m32_29  [key=1, style=dashed, color=darkseagreen4, label=partitions];
m32_27 -> m32_28  [key=0, style=solid, color=green];
m32_27 -> m32_33  [key=1, style=dashed, color=green, label=optionSpecProps];
m32_27 -> m32_30  [key=1, style=dashed, color=green, label=optionSpecProps];
m32_27 -> m32_27  [key=1, style=dashed, color=darkseagreen4, label=pt];
m32_27 -> m32_47  [key=2, style=dotted];
m32_27 -> m32_48  [key=2, style=dotted];
m32_27 -> m32_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_22 -> m32_28  [key=1, style=dashed, color=green, label=specProps];
m32_22 -> m32_27  [key=1, style=dashed, color=darkseagreen4, label=specProps];
m32_22 -> m32_23  [key=0, style=solid];
m32_22 -> m32_41  [key=2, style=dotted];
m32_22 -> m32_42  [key=2, style=dotted];
m32_22 -> m32_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_29 -> m32_33  [key=1, style=dashed, color=green, label=missingValueErrors];
m32_29 -> m32_30  [key=0, style=solid, color=green];
m32_29 -> m32_29  [key=1, style=dashed, color=darkseagreen4, label=token];
m32_29 -> m32_50  [key=2, style=dotted];
m32_29 -> m32_51  [key=2, style=dotted];
m32_29 -> m32_52  [key=2, style=dotted];
m32_29 -> m32_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_29 -> m32_77  [key=1, style=dashed, color=darkseagreen4, label=token];
m32_30 -> m32_31  [key=0, style=solid, color=green];
m32_30 -> m32_53  [key=2, style=dotted, color=green];
m32_30 -> m32_32  [key=1, style=dashed, color=green, label=specPropsWithValue];
m32_33 -> m32_34  [key=0, style=solid, color=green];
m32_33 -> m32_57  [key=2, style=dotted, color=green];
m32_33 -> m32_58  [key=2, style=dotted, color=green];
m32_24 -> m32_33  [key=1, style=dashed, color=green, label=tokenizerResult];
m32_24 -> m32_25  [key=0, style=solid];
m32_24 -> m32_45  [key=2, style=dotted];
m32_31 -> m32_33  [key=1, style=dashed, color=green, label=instance];
m32_31 -> m32_31  [key=1, style=dashed, color=darkseagreen4, label=instance];
m32_31 -> m32_32  [key=0, style=solid];
m32_31 -> m32_54  [key=2, style=dotted];
m32_31 -> m32_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_31 -> m32_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_31 -> m32_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_31 -> m32_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_31 -> m32_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_31 -> m32_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_32 -> m32_33  [key=0, style=solid, color=green];
m32_32 -> m32_55  [key=2, style=dotted];
m32_32 -> m32_44  [key=2, style=dotted];
m32_32 -> m32_56  [key=2, style=dotted];
m32_32 -> m32_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_19 -> m32_22  [key=1, style=dashed, color=darkseagreen4, label=instance];
m32_19 -> m32_31  [key=1, style=dashed, color=darkseagreen4, label=instance];
m32_19 -> m32_20  [key=0, style=solid];
m32_19 -> m32_35  [key=2, style=dotted];
m32_19 -> m32_21  [key=1, style=dashed, color=darkseagreen4, label=instance];
m32_20 -> m32_22  [key=0, style=solid];
m32_20 -> m32_21  [key=0, style=solid];
m32_20 -> m32_36  [key=2, style=dotted];
m32_20 -> m32_37  [key=2, style=dotted];
m32_20 -> m32_38  [key=2, style=dotted];
m32_23 -> m32_26  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m32_23 -> m32_29  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m32_23 -> m32_24  [key=0, style=solid];
m32_23 -> m32_66  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m32_23 -> m32_23  [key=1, style=dashed, color=darkseagreen4, label=pt];
m32_23 -> m32_43  [key=2, style=dotted];
m32_23 -> m32_44  [key=2, style=dotted];
m32_25 -> m32_26  [key=0, style=solid];
m32_21 -> m32_34  [key=0, style=solid];
m32_21 -> m32_39  [key=2, style=dotted];
m32_21 -> m32_40  [key=2, style=dotted];
m32_34 -> m32_3  [key=0, style=bold, color=blue];
m32_106 -> m32_107  [key=0, style=solid];
m32_4 -> m32_5  [key=0, style=solid, color=green];
m32_4 -> m32_12  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m32_4 -> m32_6  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m32_4 -> m32_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m32_5 -> m32_6  [key=0, style=solid, color=green];
m32_5 -> m32_9  [key=2, style=dotted, color=green];
m32_5 -> m32_11  [key=1, style=dashed, color=green, label="lambda expression"];
m32_6 -> m32_7  [key=0, style=solid, color=green];
m32_6 -> m32_10  [key=2, style=dotted, color=green];
m32_6 -> m32_15  [key=1, style=dashed, color=green, label="lambda expression"];
m32_11 -> m32_12  [key=0, style=solid, color=green];
m32_12 -> m32_13  [key=0, style=solid, color=green];
m32_12 -> m32_14  [key=2, style=dotted, color=green];
m32_13 -> m32_11  [key=0, style=bold, color=blue];
m32_7 -> m32_8  [key=0, style=solid];
m32_15 -> m32_16  [key=0, style=solid];
m32_73 -> m32_74  [key=0, style=solid];
m32_16 -> m32_17  [key=0, style=solid];
m32_16 -> m32_18  [key=2, style=dotted];
m32_66 -> m32_67  [key=0, style=solid];
m32_66 -> m32_68  [key=2, style=dotted];
m32_70 -> m32_71  [key=0, style=solid];
m32_70 -> m32_72  [key=2, style=dotted];
m32_74 -> m32_75  [key=0, style=solid];
m32_74 -> m32_72  [key=2, style=dotted];
m32_77 -> m32_78  [key=0, style=solid];
m32_77 -> m32_79  [key=2, style=dotted];
m32_8 -> m32_4  [key=0, style=bold, color=blue];
m32_17 -> m32_15  [key=0, style=bold, color=blue];
m32_65 -> m32_66  [key=0, style=solid];
m32_69 -> m32_70  [key=0, style=solid];
m32_59 -> m32_60  [key=0, style=solid];
m32_76 -> m32_77  [key=0, style=solid];
m32_75 -> m32_73  [key=0, style=bold, color=blue];
m32_80 -> m32_81  [key=0, style=solid];
m32_84 -> m32_85  [key=0, style=solid];
m32_88 -> m32_89  [key=0, style=solid];
m32_92 -> m32_93  [key=0, style=solid];
m32_95 -> m32_96  [key=0, style=solid];
m32_100 -> m32_101  [key=0, style=solid];
m32_67 -> m32_65  [key=0, style=bold, color=blue];
m32_71 -> m32_69  [key=0, style=bold, color=blue];
m32_78 -> m32_76  [key=0, style=bold, color=blue];
m32_61 -> m32_59  [key=0, style=bold, color=blue];
m32_60 -> m32_61  [key=0, style=solid];
m32_60 -> m32_62  [key=2, style=dotted];
m32_60 -> m32_63  [key=2, style=dotted];
m32_60 -> m32_64  [key=2, style=dotted];
m32_82 -> m32_80  [key=0, style=bold, color=blue];
m32_81 -> m32_82  [key=0, style=solid];
m32_81 -> m32_83  [key=2, style=dotted];
m32_86 -> m32_84  [key=0, style=bold, color=blue];
m32_85 -> m32_86  [key=0, style=solid];
m32_85 -> m32_87  [key=2, style=dotted];
m32_90 -> m32_88  [key=0, style=bold, color=blue];
m32_89 -> m32_90  [key=0, style=solid];
m32_89 -> m32_91  [key=2, style=dotted];
m32_89 -> m32_83  [key=2, style=dotted];
m32_94 -> m32_92  [key=0, style=bold, color=blue];
m32_93 -> m32_94  [key=0, style=solid];
m32_93 -> m32_87  [key=2, style=dotted];
m32_97 -> m32_95  [key=0, style=bold, color=blue];
m32_96 -> m32_97  [key=0, style=solid];
m32_96 -> m32_91  [key=2, style=dotted];
m32_96 -> m32_98  [key=2, style=dotted];
m32_96 -> m32_99  [key=2, style=dotted];
m32_102 -> m32_100  [key=0, style=bold, color=blue];
m32_101 -> m32_102  [key=0, style=solid];
m32_101 -> m32_103  [key=2, style=dotted];
m32_101 -> m32_104  [key=2, style=dotted];
m32_101 -> m32_105  [key=2, style=dotted];
m32_107 -> m32_108  [key=0, style=solid];
m32_108 -> m32_106  [key=0, style=bold, color=blue];
m32_0 -> m32_1  [key=0, style=solid, color=green];
m32_0 -> m32_5  [key=1, style=dashed, color=green, label="System.StringComparer"];
m32_0 -> m32_12  [key=1, style=dashed, color=green, label="System.StringComparer"];
m32_0 -> m32_6  [key=1, style=dashed, color=green, label="System.StringComparer"];
m32_0 -> m32_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m32_0 -> m32_3  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<T> Build"];
m32_1 -> m32_1  [key=3, color=green, style=bold, label="method methodReturn CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>> "];
m32_1 -> m32_2  [key=0, style=solid, color=green];
m32_1 -> m32_3  [key=2, style=dotted, color=green];
m32_1 -> m32_4  [key=1, style=dashed, color=green, label="lambda expression"];
m32_2 -> m32_0  [key=0, style=bold, color=blue];
m32_109 -> m32_5  [key=1, style=dashed, color=green, label="System.StringComparer"];
m32_109 -> m32_12  [key=1, style=dashed, color=green, label="System.StringComparer"];
m32_109 -> m32_6  [key=1, style=dashed, color=green, label="System.StringComparer"];
m32_109 -> m32_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m32_110 -> m32_12  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m32_110 -> m32_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m32_111 -> m32_66  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m32_111 -> m32_77  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m32_112 -> m32_66  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m32_113 -> m32_70  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m32_113 -> m32_74  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m32_114 -> m32_77  [key=1, style=dashed, color=darkseagreen4, label=token];
m33_3 -> m33_4  [key=0, style=solid];
m33_3 -> m33_8  [key=2, style=dotted];
m33_33 -> m33_34  [key=0, style=solid];
m33_35 -> m33_6  [key=2, style=dotted];
m33_35 -> m33_7  [key=2, style=dotted];
m33_35 -> m33_36  [key=0, style=solid];
m33_35 -> m33_37  [key=1, style=dashed, color=darkseagreen4, label=result];
m33_36 -> m33_32  [key=2, style=dotted];
m33_36 -> m33_37  [key=0, style=solid];
m33_37 -> m33_8  [key=2, style=dotted];
m33_37 -> m33_38  [key=0, style=solid];
m33_34 -> m33_35  [key=0, style=solid];
m33_34 -> m33_37  [key=1, style=dashed, color=darkseagreen4, label=expected];
m33_34 -> m33_39  [key=2, style=dotted];
m33_38 -> m33_33  [key=0, style=bold, color=blue];
m33_9 -> m33_10  [key=0, style=solid];
m33_6 -> m33_4  [key=0, style=bold, color=blue];
m33_40 -> m33_41  [key=0, style=solid];
m33_42 -> m33_43  [key=0, style=solid, color=green];
m33_42 -> m33_6  [key=2, style=dotted, color=green];
m33_42 -> m33_7  [key=2, style=dotted, color=green];
m33_42 -> m33_44  [key=1, style=dashed, color=green, label=result];
m33_41 -> m33_42  [key=0, style=solid, color=green];
m33_41 -> m33_46  [key=2, style=dotted];
m33_41 -> m33_44  [key=1, style=dashed, color=darkseagreen4, label=expected];
m33_43 -> m33_32  [key=2, style=dotted];
m33_43 -> m33_44  [key=0, style=solid];
m33_44 -> m33_45  [key=0, style=solid];
m33_44 -> m33_8  [key=2, style=dotted];
m33_45 -> m33_40  [key=0, style=bold, color=blue];
m33_14 -> m33_5  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>"];
m33_15 -> m33_16  [key=0, style=solid, color=green];
m33_15 -> m33_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m33_16 -> m33_17  [key=0, style=solid, color=green];
m33_16 -> m33_14  [key=2, style=dotted, color=green];
m33_16 -> m33_18  [key=1, style=dashed, color=green, label=expectedErrors];
m33_16 -> m33_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m33_17 -> m33_18  [key=0, style=solid, color=green];
m33_17 -> m33_6  [key=2, style=dotted, color=green];
m33_17 -> m33_7  [key=2, style=dotted, color=green];
m33_18 -> m33_19  [key=0, style=solid];
m33_18 -> m33_8  [key=2, style=dotted];
m33_19 -> m33_15  [key=0, style=bold, color=blue];
m33_25 -> m33_26  [key=0, style=solid, color=green];
m33_26 -> m33_27  [key=0, style=solid, color=green];
m33_26 -> m33_31  [key=2, style=dotted, color=green];
m33_26 -> m33_29  [key=1, style=dashed, color=green, label=expected];
m33_27 -> m33_28  [key=0, style=solid, color=green];
m33_27 -> m33_6  [key=2, style=dotted, color=green];
m33_27 -> m33_7  [key=2, style=dotted, color=green];
m33_27 -> m33_29  [key=1, style=dashed, color=green, label=result];
m33_29 -> m33_30  [key=0, style=solid];
m33_29 -> m33_8  [key=2, style=dotted];
m33_28 -> m33_29  [key=0, style=solid, color=green];
m33_28 -> m33_32  [key=2, style=dotted, color=green];
m33_30 -> m33_25  [key=0, style=bold, color=blue];
m33_11 -> m33_12  [key=0, style=solid, color=green];
m33_11 -> m33_6  [key=2, style=dotted, color=green];
m33_11 -> m33_7  [key=2, style=dotted, color=green];
m33_5 -> m33_6  [key=0, style=solid];
m33_5 -> m33_7  [key=2, style=dotted];
m33_5 -> m33_8  [key=2, style=dotted];
m33_5 -> m33_9  [key=2, style=dotted];
m33_5 -> m33_10  [key=2, style=dotted];
m33_5 -> m33_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_4 -> m33_5  [key=0, style=solid];
m33_4 -> m33_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m33_4 -> m33_0  [key=0, style=bold, color=blue];
m33_12 -> m33_13  [key=0, style=solid];
m33_12 -> m33_8  [key=2, style=dotted];
m33_13 -> m33_11  [key=0, style=bold, color=blue];
m33_13 -> m33_9  [key=0, style=bold, color=blue];
m33_10 -> m33_11  [key=0, style=solid, color=green];
m33_10 -> m33_14  [key=2, style=dotted];
m33_10 -> m33_12  [key=1, style=dashed, color=darkseagreen4, label=expectedErrors];
m33_47 -> m33_49  [key=1, style=dashed, color=green, label="string[]"];
m33_47 -> m33_48  [key=0, style=solid];
m33_49 -> m33_50  [key=0, style=solid, color=green];
m33_49 -> m33_6  [key=2, style=dotted, color=green];
m33_49 -> m33_7  [key=2, style=dotted, color=green];
m33_49 -> m33_51  [key=1, style=dashed, color=green, label=result];
m33_48 -> m33_49  [key=0, style=solid, color=green];
m33_48 -> m33_46  [key=2, style=dotted];
m33_48 -> m33_51  [key=1, style=dashed, color=darkseagreen4, label=expected];
m33_50 -> m33_32  [key=2, style=dotted];
m33_50 -> m33_51  [key=0, style=solid];
m33_51 -> m33_52  [key=0, style=solid];
m33_51 -> m33_8  [key=2, style=dotted];
m33_52 -> m33_47  [key=0, style=bold, color=blue];
m33_0 -> m33_1  [key=0, style=solid, color=red];
m33_0 -> m33_5  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>"];
m33_1 -> m33_2  [key=0, style=solid, color=green];
m33_1 -> m33_3  [key=2, style=dotted, color=red];
m33_1 -> m33_4  [key=1, style=dashed, color=red, label="lambda expression"];
m33_1 -> m33_1  [key=1, style=dashed, color=red, label=tseq];
m33_1 -> m33_5  [key=2, style=dotted];
m33_2 -> m33_0  [key=0, style=bold, color=blue];
m33_2 -> m33_3  [key=0, style=solid, color=green];
m33_2 -> m33_6  [key=2, style=dotted, color=green];
m33_2 -> m33_7  [key=2, style=dotted, color=green];
m33_20 -> m33_21  [key=0, style=solid];
m33_22 -> m33_23  [key=0, style=solid, color=green];
m33_22 -> m33_6  [key=2, style=dotted, color=green];
m33_22 -> m33_7  [key=2, style=dotted, color=green];
m33_21 -> m33_22  [key=0, style=solid, color=green];
m33_21 -> m33_14  [key=2, style=dotted];
m33_21 -> m33_23  [key=1, style=dashed, color=darkseagreen4, label=expectedErrors];
m33_23 -> m33_24  [key=0, style=solid];
m33_23 -> m33_8  [key=2, style=dotted];
m33_24 -> m33_20  [key=0, style=bold, color=blue];
m34_0 -> m34_1  [key=0, style=solid];
m34_1 -> m34_2  [key=0, style=solid, color=green];
m34_1 -> m34_6  [key=2, style=dotted];
m34_1 -> m34_3  [key=1, style=dashed, color=darkseagreen4, label=tokenPartitions];
m34_2 -> m34_3  [key=0, style=solid, color=green];
m34_2 -> m34_7  [key=2, style=dotted, color=green];
m34_2 -> m34_8  [key=2, style=dotted, color=green];
m34_2 -> m34_9  [key=2, style=dotted, color=green];
m34_2 -> m34_10  [key=2, style=dotted, color=green];
m34_2 -> m34_11  [key=2, style=dotted, color=green];
m34_2 -> m34_12  [key=2, style=dotted, color=green];
m34_2 -> m34_16  [key=1, style=dashed, color=green, label="lambda expression"];
m34_3 -> m34_4  [key=0, style=solid];
m34_3 -> m34_13  [key=2, style=dotted];
m34_3 -> m34_14  [key=2, style=dotted];
m34_3 -> m34_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m34_3 -> m34_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m34_4 -> m34_5  [key=0, style=solid];
m34_4 -> m34_11  [key=2, style=dotted];
m34_4 -> m34_15  [key=2, style=dotted];
m34_4 -> m34_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m34_5 -> m34_0  [key=0, style=bold, color=blue];
m34_28 -> m34_29  [key=0, style=solid];
m34_16 -> m34_17  [key=0, style=solid, color=green];
m34_20 -> m34_21  [key=0, style=solid];
m34_24 -> m34_25  [key=0, style=solid];
m34_17 -> m34_18  [key=0, style=solid, color=green];
m34_17 -> m34_19  [key=2, style=dotted, color=green];
m34_18 -> m34_16  [key=0, style=bold, color=blue];
m34_21 -> m34_22  [key=0, style=solid];
m34_21 -> m34_23  [key=2, style=dotted];
m34_22 -> m34_20  [key=0, style=bold, color=blue];
m34_25 -> m34_26  [key=0, style=solid];
m34_25 -> m34_27  [key=2, style=dotted];
m34_26 -> m34_24  [key=0, style=bold, color=blue];
m34_29 -> m34_30  [key=0, style=solid];
m34_29 -> m34_31  [key=2, style=dotted];
m34_29 -> m34_32  [key=2, style=dotted];
m34_30 -> m34_28  [key=0, style=bold, color=blue];
m35_12 -> m35_13  [key=0, style=solid];
m35_13 -> m35_14  [key=0, style=solid];
m35_13 -> m35_3  [key=2, style=dotted];
m35_13 -> m35_15  [key=2, style=dotted];
m35_13 -> m35_8  [key=2, style=dotted];
m35_14 -> m35_12  [key=0, style=bold, color=blue];
m35_27 -> m35_28  [key=0, style=solid];
m35_28 -> m35_29  [key=0, style=solid];
m35_28 -> m35_22  [key=2, style=dotted];
m35_28 -> m35_33  [key=1, style=dashed, color=darkseagreen4, label=options];
m35_29 -> m35_30  [key=0, style=solid];
m35_29 -> m35_23  [key=2, style=dotted];
m35_29 -> m35_31  [key=1, style=dashed, color=darkseagreen4, label=values];
m35_29 -> m35_32  [key=1, style=dashed, color=darkseagreen4, label=values];
m35_33 -> m35_34  [key=0, style=solid];
m35_33 -> m35_36  [key=2, style=dotted];
m35_30 -> m35_31  [key=0, style=solid];
m35_30 -> m35_35  [key=2, style=dotted];
m35_31 -> m35_32  [key=0, style=solid];
m35_31 -> m35_35  [key=2, style=dotted];
m35_32 -> m35_33  [key=0, style=solid];
m35_32 -> m35_35  [key=2, style=dotted];
m35_34 -> m35_27  [key=0, style=bold, color=blue];
m35_16 -> m35_17  [key=0, style=solid];
m35_17 -> m35_18  [key=0, style=solid];
m35_17 -> m35_22  [key=2, style=dotted];
m35_18 -> m35_19  [key=0, style=solid];
m35_18 -> m35_23  [key=2, style=dotted];
m35_18 -> m35_20  [key=1, style=dashed, color=darkseagreen4, label=values];
m35_19 -> m35_20  [key=0, style=solid];
m35_19 -> m35_24  [key=2, style=dotted];
m35_19 -> m35_25  [key=2, style=dotted];
m35_20 -> m35_21  [key=0, style=solid];
m35_20 -> m35_8  [key=2, style=dotted];
m35_20 -> m35_24  [key=2, style=dotted];
m35_20 -> m35_26  [key=2, style=dotted];
m35_21 -> m35_16  [key=0, style=bold, color=blue];
m35_4 -> m35_5  [key=0, style=solid];
m35_5 -> m35_6  [key=0, style=solid];
m35_5 -> m35_3  [key=2, style=dotted];
m35_5 -> m35_7  [key=2, style=dotted];
m35_5 -> m35_8  [key=2, style=dotted];
m35_6 -> m35_4  [key=0, style=bold, color=blue];
m35_0 -> m35_1  [key=0, style=solid, color=red];
m35_1 -> m35_2  [key=0, style=solid, color=red];
m35_1 -> m35_3  [key=2, style=dotted, color=red];
m35_2 -> m35_0  [key=0, style=bold, color=blue];
m35_9 -> m35_10  [key=0, style=solid];
m35_10 -> m35_11  [key=0, style=solid];
m35_10 -> m35_3  [key=2, style=dotted];
m35_10 -> m35_7  [key=2, style=dotted];
m35_10 -> m35_8  [key=2, style=dotted];
m35_11 -> m35_9  [key=0, style=bold, color=blue];
m35_37 -> m35_33  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.ValueListAttributeFixture"];
m36_48 -> m36_54  [key=0, style=solid];
m36_48 -> m36_55  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m36_48 -> m36_57  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m36_48 -> m36_59  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m36_48 -> m36_60  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m36_48 -> m36_61  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m36_48 -> m36_64  [key=1, style=dashed, color=red, label="System.Type"];
m36_48 -> m36_66  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m36_48 -> m36_67  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m36_54 -> m36_55  [key=0, style=solid];
m36_54 -> m36_43  [key=2, style=dotted];
m36_55 -> m36_56  [key=0, style=solid];
m36_55 -> m36_57  [key=0, style=solid];
m36_57 -> m36_58  [key=0, style=solid, color=red];
m36_57 -> m36_59  [key=0, style=solid];
m36_59 -> m36_60  [key=0, style=solid];
m36_59 -> m36_64  [key=0, style=solid, color=red];
m36_60 -> m36_61  [key=0, style=solid];
m36_60 -> m36_69  [key=2, style=dotted];
m36_60 -> m36_62  [key=1, style=dashed, color=darkseagreen4, label=gtd];
m36_61 -> m36_62  [key=0, style=solid];
m36_61 -> m36_70  [key=2, style=dotted];
m36_61 -> m36_63  [key=1, style=dashed, color=darkseagreen4, label=argument];
m36_64 -> m36_65  [key=0, style=solid, color=red];
m36_64 -> m36_73  [key=2, style=dotted, color=red];
m36_64 -> m36_67  [key=1, style=dashed, color=red, label=implementation];
m36_66 -> m36_68  [key=0, style=solid];
m36_66 -> m36_74  [key=2, style=dotted];
m36_66 -> m36_75  [key=2, style=dotted];
m36_67 -> m36_68  [key=0, style=solid];
m36_67 -> m36_76  [key=2, style=dotted];
m36_56 -> m36_68  [key=0, style=solid];
m36_58 -> m36_68  [key=0, style=solid, color=red];
m36_62 -> m36_63  [key=0, style=solid];
m36_62 -> m36_64  [key=0, style=solid, color=red];
m36_62 -> m36_71  [key=2, style=dotted];
m36_63 -> m36_68  [key=0, style=solid];
m36_63 -> m36_52  [key=2, style=dotted];
m36_63 -> m36_72  [key=2, style=dotted];
m36_65 -> m36_66  [key=0, style=solid];
m36_65 -> m36_67  [key=0, style=solid];
m36_68 -> m36_48  [key=0, style=bold, color=blue];
m36_52 -> m36_77  [key=0, style=solid];
m36_52 -> m36_78  [key=1, style=dashed, color=red, label="System.Type"];
m36_52 -> m36_82  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m36_77 -> m36_78  [key=0, style=solid, color=red];
m36_77 -> m36_43  [key=2, style=dotted];
m36_78 -> m36_79  [key=0, style=solid, color=red];
m36_78 -> m36_80  [key=2, style=dotted, color=red];
m36_78 -> m36_81  [key=1, style=dashed, color=red, label="lambda expression"];
m36_79 -> m36_52  [key=0, style=bold, color=blue];
m36_45 -> m36_46  [key=0, style=solid];
m36_46 -> m36_47  [key=0, style=solid];
m36_46 -> m36_48  [key=2, style=dotted];
m36_47 -> m36_45  [key=0, style=bold, color=blue];
m36_87 -> m36_88  [key=0, style=solid];
m36_87 -> m36_92  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m36_87 -> m36_93  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m36_88 -> m36_89  [key=0, style=solid];
m36_88 -> m36_99  [key=2, style=dotted];
m36_88 -> m36_90  [key=1, style=dashed, color=darkseagreen4, label=constructor];
m36_92 -> m36_93  [key=0, style=solid];
m36_92 -> m36_94  [key=0, style=solid];
m36_92 -> m36_20  [key=2, style=dotted];
m36_92 -> m36_103  [key=2, style=dotted];
m36_93 -> m36_94  [key=0, style=solid];
m36_93 -> m36_104  [key=2, style=dotted];
m36_89 -> m36_90  [key=0, style=solid];
m36_89 -> m36_100  [key=2, style=dotted];
m36_89 -> m36_80  [key=2, style=dotted];
m36_89 -> m36_101  [key=2, style=dotted];
m36_89 -> m36_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m36_90 -> m36_91  [key=0, style=solid];
m36_90 -> m36_102  [key=2, style=dotted];
m36_90 -> m36_93  [key=1, style=dashed, color=darkseagreen4, label=instance];
m36_90 -> m36_94  [key=1, style=dashed, color=darkseagreen4, label=instance];
m36_91 -> m36_92  [key=0, style=solid];
m36_94 -> m36_98  [key=0, style=solid];
m36_95 -> m36_96  [key=0, style=solid];
m36_96 -> m36_97  [key=0, style=solid];
m36_96 -> m36_105  [key=2, style=dotted];
m36_97 -> m36_98  [key=0, style=solid];
m36_98 -> m36_87  [key=0, style=bold, color=blue];
m36_16 -> m36_17  [key=0, style=solid, color=red];
m36_17 -> m36_18  [key=0, style=solid, color=red];
m36_17 -> m36_12  [key=2, style=dotted, color=red];
m36_18 -> m36_19  [key=0, style=solid];
m36_18 -> m36_20  [key=2, style=dotted];
m36_18 -> m36_21  [key=2, style=dotted];
m36_19 -> m36_16  [key=0, style=bold, color=blue];
m36_117 -> m36_118  [key=0, style=solid];
m36_82 -> m36_83  [key=0, style=solid];
m36_82 -> m36_76  [key=2, style=dotted];
m36_81 -> m36_82  [key=0, style=solid];
m36_83 -> m36_81  [key=0, style=bold, color=blue];
m36_106 -> m36_107  [key=0, style=solid];
m36_107 -> m36_108  [key=0, style=solid];
m36_107 -> m36_48  [key=2, style=dotted];
m36_108 -> m36_106  [key=0, style=bold, color=blue];
m36_118 -> m36_119  [key=0, style=solid];
m36_118 -> m36_100  [key=2, style=dotted];
m36_119 -> m36_117  [key=0, style=bold, color=blue];
m36_0 -> m36_1  [key=0, style=solid];
m36_0 -> m36_6  [key=1, style=dashed, color=darkseagreen4, label=bool];
m36_1 -> m36_2  [key=0, style=solid];
m36_1 -> m36_6  [key=0, style=solid];
m36_6 -> m36_7  [key=0, style=solid];
m36_6 -> m36_11  [key=2, style=dotted];
m36_2 -> m36_3  [key=0, style=solid];
m36_2 -> m36_4  [key=0, style=solid];
m36_3 -> m36_2  [key=0, style=solid];
m36_3 -> m36_8  [key=2, style=dotted];
m36_4 -> m36_5  [key=0, style=solid];
m36_4 -> m36_9  [key=2, style=dotted];
m36_5 -> m36_6  [key=0, style=solid];
m36_5 -> m36_10  [key=2, style=dotted];
m36_7 -> m36_0  [key=0, style=bold, color=blue];
m36_22 -> m36_23  [key=0, style=solid];
m36_23 -> m36_24  [key=0, style=solid];
m36_23 -> m36_25  [key=2, style=dotted];
m36_24 -> m36_22  [key=0, style=bold, color=blue];
m36_76 -> m36_84  [key=0, style=solid, color=red];
m36_76 -> m36_85  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m36_84 -> m36_85  [key=0, style=solid, color=red];
m36_85 -> m36_86  [key=0, style=solid];
m36_85 -> m36_33  [key=2, style=dotted];
m36_85 -> m36_87  [key=2, style=dotted];
m36_86 -> m36_76  [key=0, style=bold, color=blue];
m36_12 -> m36_13  [key=0, style=solid];
m36_13 -> m36_14  [key=0, style=solid];
m36_13 -> m36_15  [key=2, style=dotted];
m36_14 -> m36_12  [key=0, style=bold, color=blue];
m36_99 -> m36_109  [key=0, style=solid];
m36_99 -> m36_111  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m36_109 -> m36_110  [key=0, style=solid];
m36_109 -> m36_114  [key=2, style=dotted];
m36_109 -> m36_115  [key=2, style=dotted];
m36_109 -> m36_73  [key=2, style=dotted];
m36_109 -> m36_117  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m36_109 -> m36_112  [key=1, style=dashed, color=darkseagreen4, label=constructor];
m36_111 -> m36_113  [key=0, style=solid];
m36_111 -> m36_74  [key=2, style=dotted];
m36_111 -> m36_116  [key=2, style=dotted];
m36_110 -> m36_111  [key=0, style=solid];
m36_110 -> m36_112  [key=0, style=solid];
m36_112 -> m36_113  [key=0, style=solid];
m36_113 -> m36_99  [key=0, style=bold, color=blue];
m36_26 -> m36_27  [key=0, style=solid];
m36_27 -> m36_28  [key=0, style=solid];
m36_27 -> m36_29  [key=1, style=dashed, color=darkseagreen4, label=implementation];
m36_27 -> m36_30  [key=1, style=dashed, color=darkseagreen4, label=implementation];
m36_28 -> m36_29  [key=0, style=solid];
m36_28 -> m36_30  [key=0, style=solid];
m36_28 -> m36_33  [key=2, style=dotted];
m36_29 -> m36_30  [key=0, style=solid];
m36_29 -> m36_8  [key=2, style=dotted];
m36_30 -> m36_31  [key=0, style=solid];
m36_30 -> m36_34  [key=2, style=dotted];
m36_31 -> m36_32  [key=0, style=solid];
m36_31 -> m36_35  [key=2, style=dotted];
m36_32 -> m36_26  [key=0, style=bold, color=blue];
m36_49 -> m36_50  [key=0, style=solid];
m36_50 -> m36_51  [key=0, style=solid];
m36_50 -> m36_52  [key=2, style=dotted];
m36_50 -> m36_53  [key=2, style=dotted];
m36_51 -> m36_49  [key=0, style=bold, color=blue];
m36_25 -> m36_36  [key=0, style=solid];
m36_25 -> m36_37  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m36_25 -> m36_41  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m36_36 -> m36_37  [key=0, style=solid];
m36_36 -> m36_43  [key=2, style=dotted];
m36_37 -> m36_38  [key=0, style=solid, color=red];
m36_37 -> m36_41  [key=0, style=solid];
m36_37 -> m36_39  [key=1, style=dashed, color=darkseagreen4, label=implementation];
m36_37 -> m36_40  [key=1, style=dashed, color=darkseagreen4, label=implementation];
m36_41 -> m36_42  [key=0, style=solid];
m36_41 -> m36_44  [key=2, style=dotted];
m36_38 -> m36_39  [key=0, style=solid, color=red];
m36_38 -> m36_40  [key=0, style=solid, color=red];
m36_38 -> m36_33  [key=2, style=dotted, color=red];
m36_39 -> m36_40  [key=0, style=solid];
m36_39 -> m36_8  [key=2, style=dotted];
m36_40 -> m36_37  [key=0, style=solid];
m36_40 -> m36_34  [key=2, style=dotted];
m36_42 -> m36_25  [key=0, style=bold, color=blue];
m36_120 -> m36_1  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_2  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_4  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_6  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_13  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_17  [key=1, style=dashed, color=red, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_18  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_23  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_28  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_29  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_30  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_31  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_37  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_38  [key=1, style=dashed, color=red, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_39  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_40  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_41  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_46  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_50  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_56  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_58  [key=1, style=dashed, color=red, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_63  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_64  [key=1, style=dashed, color=red, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_67  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_78  [key=1, style=dashed, color=red, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_82  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_84  [key=1, style=dashed, color=red, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_85  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_89  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_107  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_91  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_92  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_120 -> m36_93  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Components.ComponentContainer"];
m36_121 -> m36_82  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m37_0 -> m37_1  [key=0, style=solid, color=green];
m37_1 -> m37_2  [key=0, style=solid, color=green];
m37_1 -> m37_3  [key=2, style=dotted, color=green];
m37_1 -> m37_4  [key=2, style=dotted, color=green];
m37_1 -> m37_5  [key=2, style=dotted, color=green];
m37_2 -> m37_0  [key=0, style=bold, color=blue];
m37_6 -> m37_7  [key=0, style=solid, color=green];
m37_7 -> m37_8  [key=0, style=solid, color=green];
m37_7 -> m37_3  [key=2, style=dotted, color=green];
m37_7 -> m37_4  [key=2, style=dotted, color=green];
m37_7 -> m37_9  [key=2, style=dotted, color=green];
m37_8 -> m37_6  [key=0, style=bold, color=blue];
m38_12 -> m38_13  [key=0, style=solid];
m38_13 -> m38_14  [key=0, style=solid];
m38_13 -> m38_3  [key=2, style=dotted];
m38_13 -> m38_4  [key=2, style=dotted];
m38_13 -> m38_5  [key=2, style=dotted];
m38_14 -> m38_12  [key=0, style=bold, color=blue];
m38_15 -> m38_16  [key=0, style=solid, color=green];
m38_16 -> m38_17  [key=0, style=solid, color=green];
m38_16 -> m38_19  [key=2, style=dotted, color=green];
m38_17 -> m38_18  [key=0, style=solid];
m38_17 -> m38_3  [key=2, style=dotted];
m38_17 -> m38_20  [key=2, style=dotted];
m38_17 -> m38_5  [key=2, style=dotted];
m38_17 -> m38_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_18 -> m38_15  [key=0, style=bold, color=blue];
m38_9 -> m38_10  [key=0, style=solid];
m38_10 -> m38_11  [key=0, style=solid];
m38_10 -> m38_3  [key=2, style=dotted];
m38_10 -> m38_4  [key=2, style=dotted];
m38_10 -> m38_5  [key=2, style=dotted];
m38_11 -> m38_9  [key=0, style=bold, color=blue];
m38_29 -> m38_30  [key=0, style=solid];
m38_21 -> m38_22  [key=0, style=solid];
m38_22 -> m38_23  [key=0, style=solid];
m38_23 -> m38_21  [key=0, style=bold, color=blue];
m38_30 -> m38_31  [key=0, style=solid];
m38_31 -> m38_29  [key=0, style=bold, color=blue];
m38_6 -> m38_7  [key=0, style=solid, color=green];
m38_7 -> m38_8  [key=0, style=solid, color=green];
m38_7 -> m38_3  [key=2, style=dotted, color=green];
m38_7 -> m38_4  [key=2, style=dotted, color=green];
m38_7 -> m38_5  [key=2, style=dotted, color=green];
m38_8 -> m38_6  [key=0, style=bold, color=blue];
m38_24 -> m38_25  [key=0, style=solid, color=green];
m38_25 -> m38_26  [key=0, style=solid, color=green];
m38_25 -> m38_28  [key=2, style=dotted, color=green];
m38_26 -> m38_27  [key=0, style=solid];
m38_26 -> m38_3  [key=2, style=dotted];
m38_26 -> m38_20  [key=2, style=dotted];
m38_26 -> m38_5  [key=2, style=dotted];
m38_26 -> m38_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_27 -> m38_24  [key=0, style=bold, color=blue];
m38_0 -> m38_1  [key=0, style=solid];
m38_1 -> m38_2  [key=0, style=solid];
m38_1 -> m38_3  [key=2, style=dotted];
m38_1 -> m38_4  [key=2, style=dotted];
m38_1 -> m38_5  [key=2, style=dotted];
m38_2 -> m38_0  [key=0, style=bold, color=blue];
}
