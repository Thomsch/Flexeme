digraph  {
m0_17 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="Entry CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", span="79-79"];
m0_20 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="return null;", span="84-84"];
m0_19 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="list == null", span="82-82"];
m0_21 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="var map = new OptionMap(list.Count, settings)", span="86-86"];
m0_18 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="var list = ReflectionUtil.RetrievePropertyList<BaseOptionAttribute>(target)", span="81-81"];
m0_25 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="map.RawOptions = target", span="94-94"];
m0_26 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="return map;", span="95-95"];
m0_22 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label=list, span="87-87"];
m0_24 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="91-91"];
m0_23 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="pair.Left != null && pair.Right != null", span="89-89"];
m0_27 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="Exit CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", span="79-79"];
m0_49 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="ParserResultExtensions.cs", label="Entry CommandLine.Internal.OptionMap.SetDefaults()", span="158-158"];
m0_50 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="ParserResultExtensions.cs", label="_map.Values", span="160-160"];
m0_51 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="ParserResultExtensions.cs", label="option.SetDefault(RawOptions)", span="162-162"];
m0_52 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="ParserResultExtensions.cs", label="Exit CommandLine.Internal.OptionMap.SetDefaults()", span="158-158"];
m0_28 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ParserResultExtensions.cs", label="Entry CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="43-43"];
m0_42 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="ParserResultExtensions.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="52-52"];
m0_48 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="ParserResultExtensions.cs", label="Entry CommandLine.Internal.OptionMap.EnforceRequiredRule()", span="166-166"];
m0_55 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="ParserResultExtensions.cs", label="_map.Values", span="169-169"];
m0_57 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="ParserResultExtensions.cs", label="SetParserStateIfNeeded(RawOptions, option, true, null)", span="173-173"];
m0_54 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="ParserResultExtensions.cs", label="bool requiredRulesAllMet = true", span="168-168"];
m0_56 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="ParserResultExtensions.cs", label="option.Required && !option.IsDefined", span="171-171"];
m0_58 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="ParserResultExtensions.cs", label="requiredRulesAllMet = false", span="174-174"];
m0_59 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="ParserResultExtensions.cs", label="return requiredRulesAllMet;", span="177-177"];
m0_60 [cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="ParserResultExtensions.cs", label="Exit CommandLine.Internal.OptionMap.EnforceRequiredRule()", span="166-166"];
m0_8 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="Entry CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="62-62"];
m0_9 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="_settings = settings", span="67-67"];
m0_10 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="IEqualityComparer<string> comparer =\r\n                _settings.CaseSensitive ? StringComparer.Ordinal : StringComparer.OrdinalIgnoreCase", span="69-70"];
m0_11 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="_names = new Dictionary<string, string>(capacity, comparer)", span="71-71"];
m0_12 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="_map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="72-72"];
m0_13 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="_settings.MutuallyExclusive", span="73-73"];
m0_14 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="_mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="75-75"];
m0_15 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="Exit CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="62-62"];
m0_98 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="ParserResultExtensions.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m0_79 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="ParserResultExtensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m0_2 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="ParserResultExtensions.cs", label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", span="47-47"];
m0_3 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="ParserResultExtensions.cs", label="BadOption = option", span="49-49"];
m0_4 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="ParserResultExtensions.cs", label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", span="47-47"];
m0_73 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="ParserResultExtensions.cs", label="Entry CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", span="204-204"];
m0_75 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="ParserResultExtensions.cs", label="!_mutuallyExclusiveSetMap.ContainsKey(setName)", span="207-207"];
m0_76 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="ParserResultExtensions.cs", label="_mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="209-209"];
m0_77 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="ParserResultExtensions.cs", label="_mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="211-211"];
m0_74 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="ParserResultExtensions.cs", label="var setName = option.MutuallyExclusiveSet", span="206-206"];
m0_78 [cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="ParserResultExtensions.cs", label="Exit CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", span="204-204"];
m0_61 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="ParserResultExtensions.cs", label="Entry CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", span="214-214"];
m0_95 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", color=green, community=0, file="ParserResultExtensions.cs", label="0: parserState.Errors.Add(error)", span="242-242"];
m0_87 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="ParserResultExtensions.cs", label="var parserState = (IParserState)property.GetValue(options, null)", span="227-227"];
m0_90 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="ParserResultExtensions.cs", label="var error = new ParsingError\r\n                {\r\n                    BadOption =\r\n                        {\r\n                            ShortName = option.ShortName,\r\n                            LongName = option.LongName\r\n                        }\r\n                }", span="232-239"];
m0_93 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="ParserResultExtensions.cs", label="mutualExclusiveness != null", span="241-241"];
m0_94 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="ParserResultExtensions.cs", label="error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="241-241"];
m0_81 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="ParserResultExtensions.cs", label="var list = ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(options)", span="216-216"];
m0_85 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="ParserResultExtensions.cs", label="property.GetValue(options, null) == null", span="223-223"];
m0_86 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="ParserResultExtensions.cs", label="property.SetValue(options, new CommandLine.ParserState(), null)", span="225-225"];
m0_91 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="ParserResultExtensions.cs", label="required != null", span="240-240"];
m0_92 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="ParserResultExtensions.cs", label="error.ViolatesRequired = required.Value", span="240-240"];
m0_84 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="ParserResultExtensions.cs", label="var property = list[0].Left", span="221-221"];
m0_88 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="ParserResultExtensions.cs", label="parserState == null", span="228-228"];
m0_83 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="ParserResultExtensions.cs", label="return;", span="219-219"];
m0_89 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="ParserResultExtensions.cs", label="return;", span="230-230"];
m0_82 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="ParserResultExtensions.cs", label="list.Count == 0", span="217-217"];
m0_96 [cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="ParserResultExtensions.cs", label="Exit CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", span="214-214"];
m0_29 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="ParserResultExtensions.cs", label="Entry CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", span="43-43"];
m0_44 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="ParserResultExtensions.cs", label="Entry CommandLine.Internal.OptionMap.EnforceRules()", span="153-153"];
m0_45 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", color=green, community=0, file="ParserResultExtensions.cs", label="0: return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="155-155"];
m0_46 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="ParserResultExtensions.cs", label="Exit CommandLine.Internal.OptionMap.EnforceRules()", span="153-153"];
m0_30 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="Entry CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", span="98-98"];
m0_35 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="throw new CommandLineParserException(''Type {0} must have a parameterless constructor or'' +\r\n                        '' be already initialized to be used as a verb command.''.FormatInvariant(verb.Left.PropertyType));", span="111-112"];
m0_34 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="!optionInfo.HasParameterLessCtor && verb.Left.GetValue(target, null) == null", span="109-109"];
m0_31 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="var map = new OptionMap(verbs.Count, settings)", span="101-101"];
m0_32 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label=verbs, span="102-102"];
m0_33 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="var optionInfo = new OptionInfo(verb.Right, verb.Left)\r\n                {\r\n                    HasParameterLessCtor = verb.Left.PropertyType.GetConstructor(Type.EmptyTypes) != null\r\n\r\n                }", span="104-108"];
m0_36 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="map[verb.Right.UniqueName] = optionInfo", span="114-114"];
m0_37 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="map.RawOptions = target", span="116-116"];
m0_38 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="return map;", span="117-117"];
m0_39 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="ParserResultExtensions.cs", label="Exit CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", span="98-98"];
m0_100 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ParserResultExtensions.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m0_40 [cluster="System.Type.GetConstructor(System.Type[])", file="ParserResultExtensions.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m0_47 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="ParserResultExtensions.cs", label="Entry CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", span="180-180"];
m0_68 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="ParserResultExtensions.cs", label="1: info.Occurrence > 1", span="195-195"];
m0_67 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="ParserResultExtensions.cs", label="_mutuallyExclusiveSetMap.Values", span="193-193"];
m0_69 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="ParserResultExtensions.cs", label="0: SetParserStateIfNeeded(RawOptions, info.BadOption, null, true)", span="197-197"];
m0_70 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="ParserResultExtensions.cs", label="0: return false;", span="198-198"];
m0_62 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="ParserResultExtensions.cs", label="!_settings.MutuallyExclusive", span="182-182"];
m0_64 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="ParserResultExtensions.cs", label="_map.Values", span="186-186"];
m0_66 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="ParserResultExtensions.cs", label="BuildMutuallyExclusiveMap(option)", span="190-190"];
m0_71 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="ParserResultExtensions.cs", label="return true;", span="201-201"];
m0_63 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="ParserResultExtensions.cs", label="return true;", span="184-184"];
m0_65 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="ParserResultExtensions.cs", label="option.IsDefined && option.MutuallyExclusiveSet != null", span="188-188"];
m0_72 [cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="ParserResultExtensions.cs", label="Exit CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", span="180-180"];
m0_53 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="ParserResultExtensions.cs", label="Entry CommandLine.Internal.OptionInfo.SetDefault(object)", span="160-160"];
m0_97 [cluster="CommandLine.ParserState.ParserState()", file="ParserResultExtensions.cs", label="Entry CommandLine.ParserState.ParserState()", span="47-47"];
m0_99 [cluster="CommandLine.ParsingError.ParsingError()", file="ParserResultExtensions.cs", label="Entry CommandLine.ParsingError.ParsingError()", span="47-47"];
m0_43 [cluster="string.FormatInvariant(params object[])", file="ParserResultExtensions.cs", label="Entry string.FormatInvariant(params object[])", span="58-58"];
m0_41 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="ParserResultExtensions.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m0_80 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="ParserResultExtensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m0_5 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="ParserResultExtensions.cs", label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="54-54"];
m0_6 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="ParserResultExtensions.cs", label="++_count", span="54-54"];
m0_7 [cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="ParserResultExtensions.cs", label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="54-54"];
m0_16 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", file="ParserResultExtensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m0_102 [file="ParserResultExtensions.cs", label="CommandLine.Internal.OptionMap", span=""];
m0_101 [file="ParserResultExtensions.cs", label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo", span=""];
m1_64 [cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="42-42"];
m1_62 [cluster="string.Substring(int, int)", file="UnParserExtensions.cs", label="Entry string.Substring(int, int)", span="0-0"];
m1_63 [cluster="System.Text.StringBuilder.Append(char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m1_0 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="UnParserExtensions.cs", label="Entry CommandLine.Text.SentenceBuilder.CreateDefault()", span="22-22"];
m1_1 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="UnParserExtensions.cs", label="return new DefaultSentenceBuilder();", span="24-24"];
m1_2 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="UnParserExtensions.cs", label="Exit CommandLine.Text.SentenceBuilder.CreateDefault()", span="22-22"];
m1_47 [cluster="Unk.Select", file="UnParserExtensions.cs", label="Entry Unk.Select", span=""];
m1_49 [cluster="Unk.Join", file="UnParserExtensions.cs", label="Entry Unk.Join", span=""];
m1_58 [cluster="Unk.Distinct", file="UnParserExtensions.cs", label="Entry Unk.Distinct", span=""];
m1_59 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m1_39 [cluster="string.JoinTo(params string[])", file="UnParserExtensions.cs", label="Entry string.JoinTo(params string[])", span="45-45"];
m1_50 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="147-171"];
m1_4 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="63-63"];
m1_5 [cluster="lambda expression", file="UnParserExtensions.cs", label="''Required.''", span="63-63"];
m1_6 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="63-63"];
m1_7 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="71-71"];
m1_8 [cluster="lambda expression", file="UnParserExtensions.cs", label="''ERROR(S):''", span="71-71"];
m1_9 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="71-71"];
m1_10 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="79-81"];
m1_11 [cluster="lambda expression", file="UnParserExtensions.cs", label="isOption\r\n                        ? ''Display this help screen.''\r\n                        : ''Display more information on a specific command.''", span="79-81"];
m1_12 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="79-81"];
m1_13 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="89-89"];
m1_14 [cluster="lambda expression", file="UnParserExtensions.cs", label="''Display version information.''", span="89-89"];
m1_15 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="89-89"];
m1_16 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="97-132"];
m1_17 [cluster="lambda expression", file="UnParserExtensions.cs", label="error.Tag", span="99-99"];
m1_19 [cluster="lambda expression", file="UnParserExtensions.cs", label="return ''Token '''.JoinTo(((BadFormatTokenError)error).Token, ''' is not recognized.'');", span="102-102"];
m1_21 [cluster="lambda expression", file="UnParserExtensions.cs", label="return ''Option '''.JoinTo(((MissingValueOptionError)error).NameInfo.NameText,\r\n                                        ''' has no value.'');", span="104-105"];
m1_23 [cluster="lambda expression", file="UnParserExtensions.cs", label="return ''Option '''.JoinTo(((UnknownOptionError)error).Token, ''' is unknown.'');", span="107-107"];
m1_25 [cluster="lambda expression", file="UnParserExtensions.cs", label="var errMisssing = ((MissingRequiredOptionError)error)", span="109-109"];
m1_28 [cluster="lambda expression", file="UnParserExtensions.cs", label="var badFormat = ((BadFormatConversionError)error)", span="116-116"];
m1_31 [cluster="lambda expression", file="UnParserExtensions.cs", label="var seqOutRange = ((SequenceOutOfRangeError)error)", span="121-121"];
m1_34 [cluster="lambda expression", file="UnParserExtensions.cs", label="return ''Verb '''.JoinTo(((BadVerbSelectedError)error).Token, ''' is not recognized.'');", span="127-127"];
m1_18 [cluster="lambda expression", file="UnParserExtensions.cs", label="ErrorType.BadFormatTokenError", span="101-101"];
m1_20 [cluster="lambda expression", file="UnParserExtensions.cs", label="ErrorType.MissingValueOptionError", span="103-103"];
m1_22 [cluster="lambda expression", file="UnParserExtensions.cs", label="ErrorType.UnknownOptionError", span="106-106"];
m1_24 [cluster="lambda expression", file="UnParserExtensions.cs", label="ErrorType.MissingRequiredOptionError", span="108-108"];
m1_27 [cluster="lambda expression", file="UnParserExtensions.cs", label="ErrorType.BadFormatConversionError", span="115-115"];
m1_30 [cluster="lambda expression", file="UnParserExtensions.cs", label="ErrorType.SequenceOutOfRangeError", span="120-120"];
m1_33 [cluster="lambda expression", file="UnParserExtensions.cs", label="ErrorType.BadVerbSelectedError", span="126-126"];
m1_35 [cluster="lambda expression", file="UnParserExtensions.cs", label="ErrorType.NoVerbSelectedError", span="128-128"];
m1_26 [cluster="lambda expression", file="UnParserExtensions.cs", label="return errMisssing.NameInfo == NameInfo.EmptyName\r\n                                               ? ''A required value not bound to option name is missing.''\r\n                                               : ''Required option '''.JoinTo(errMisssing.NameInfo.NameText, ''' is missing.'');", span="110-112"];
m1_29 [cluster="lambda expression", file="UnParserExtensions.cs", label="return badFormat.NameInfo == NameInfo.EmptyName\r\n                                               ? ''A value not bound to option name is defined with a bad format.''\r\n                                               : ''Option '''.JoinTo(badFormat.NameInfo.NameText, ''' is defined with a bad format.'');", span="117-119"];
m1_32 [cluster="lambda expression", file="UnParserExtensions.cs", label="return seqOutRange.NameInfo == NameInfo.EmptyName\r\n                                               ? ''A sequence value not bound to option name is defined with few items than required.''\r\n                                               : ''A sequence option '''.JoinTo(seqOutRange.NameInfo.NameText,\r\n                                                    ''' is defined with few items than required.'');", span="122-125"];
m1_36 [cluster="lambda expression", file="UnParserExtensions.cs", label="return ''No verb selected.'';", span="129-129"];
m1_37 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="97-132"];
m1_38 [cluster="lambda expression", file="UnParserExtensions.cs", label="throw new InvalidOperationException();", span="131-131"];
m1_41 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="140-173"];
m1_42 [cluster="lambda expression", file="UnParserExtensions.cs", label="var bySet = from e in errors\r\n                                group e by e.SetName into g\r\n                                select new { SetName = g.Key, Errors = g.ToList() }", span="142-144"];
m1_43 [cluster="lambda expression", file="UnParserExtensions.cs", label="var msgs = bySet.Select(\r\n                            set =>\r\n                            {\r\n                                var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select ''''' + e.NameInfo.NameText + ''', '').ToArray());\r\n                                var namesCount = set.Errors.Count();\r\n\r\n                                var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from x in\r\n                                    (from s in bySet where !s.SetName.EndsWith(set.SetName) from e in s.Errors select e)\r\n                                        .Distinct()\r\n                                    select ''''' + x.NameInfo.NameText + ''', '').ToArray());\r\n\r\n                                return\r\n                                    new StringBuilder(''Option'').AppendWhen(namesCount > 1, ''s'')\r\n                                        .Append('': '')\r\n                                        .Append(names.Substring(0, names.Length - 2))\r\n                                        .Append(' ')\r\n                                        .AppendIf(namesCount > 1, ''are'', ''is'')\r\n                                        .Append('' not compatible with: '')\r\n                                        .Append(incompat.Substring(0, incompat.Length - 2))\r\n                                        .Append('.')\r\n                                        .ToString();\r\n                            }).ToArray()", span="146-171"];
m1_53 [cluster="lambda expression", file="UnParserExtensions.cs", label="var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from x in\r\n                                    (from s in bySet where !s.SetName.EndsWith(set.SetName) from e in s.Errors select e)\r\n                                        .Distinct()\r\n                                    select ''''' + x.NameInfo.NameText + ''', '').ToArray())", span="154-159"];
m1_44 [cluster="lambda expression", file="UnParserExtensions.cs", label="return string.Join(Environment.NewLine, msgs);", span="172-172"];
m1_45 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="140-173"];
m1_51 [cluster="lambda expression", file="UnParserExtensions.cs", label="var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select ''''' + e.NameInfo.NameText + ''', '').ToArray())", span="149-151"];
m1_52 [cluster="lambda expression", file="UnParserExtensions.cs", label="var namesCount = set.Errors.Count()", span="152-152"];
m1_54 [cluster="lambda expression", file="UnParserExtensions.cs", label="return\r\n                                    new StringBuilder(''Option'').AppendWhen(namesCount > 1, ''s'')\r\n                                        .Append('': '')\r\n                                        .Append(names.Substring(0, names.Length - 2))\r\n                                        .Append(' ')\r\n                                        .AppendIf(namesCount > 1, ''are'', ''is'')\r\n                                        .Append('' not compatible with: '')\r\n                                        .Append(incompat.Substring(0, incompat.Length - 2))\r\n                                        .Append('.')\r\n                                        .ToString();", span="161-170"];
m1_55 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="147-171"];
m1_48 [cluster="Unk.ToArray", file="UnParserExtensions.cs", label="Entry Unk.ToArray", span=""];
m1_60 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m1_56 [cluster="Unk.Count", file="UnParserExtensions.cs", label="Entry Unk.Count", span=""];
m1_46 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="UnParserExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m1_61 [cluster="System.Text.StringBuilder.Append(string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m1_57 [cluster="Unk.EndsWith", file="UnParserExtensions.cs", label="Entry Unk.EndsWith", span=""];
m1_3 [cluster="CommandLine.Text.SentenceBuilder.DefaultSentenceBuilder.DefaultSentenceBuilder()", file="UnParserExtensions.cs", label="Entry CommandLine.Text.SentenceBuilder.DefaultSentenceBuilder.DefaultSentenceBuilder()", span="57-57"];
m1_65 [cluster="System.Text.StringBuilder.ToString()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m1_40 [cluster="System.InvalidOperationException.InvalidOperationException()", file="UnParserExtensions.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m1_66 [file="UnParserExtensions.cs", label=bySet, span=""];
m0_17 -> m0_20  [color=darkorchid, key=3, label="method methodReturn CommandLine.Internal.OptionMap Create", style=bold];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_21  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
m0_17 -> m0_25  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_20 -> m0_27  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=0, style=solid];
m0_21 -> m0_8  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_24  [color=darkseagreen4, key=1, label=map, style=dashed];
m0_21 -> m0_25  [color=darkseagreen4, key=1, label=map, style=dashed];
m0_21 -> m0_26  [color=darkseagreen4, key=1, label=map, style=dashed];
m0_18 -> m0_28  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_21  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_18 -> m0_22  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_25 -> m0_26  [key=0, style=solid];
m0_26 -> m0_27  [key=0, style=solid];
m0_22 -> m0_25  [key=0, style=solid];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_24  [color=darkseagreen4, key=1, label=pair, style=dashed];
m0_24 -> m0_22  [key=0, style=solid];
m0_24 -> m0_29  [key=2, style=dotted];
m0_23 -> m0_22  [key=0, style=solid];
m0_23 -> m0_24  [key=0, style=solid];
m0_27 -> m0_17  [color=blue, key=0, style=bold];
m0_49 -> m0_50  [key=0, style=solid];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_52  [key=0, style=solid];
m0_51 -> m0_50  [key=0, style=solid];
m0_51 -> m0_53  [key=2, style=dotted];
m0_52 -> m0_49  [color=blue, key=0, style=bold];
m0_42 -> m0_2  [color=darkorchid, key=3, label="Property variable CommandLine.Internal.OptionInfo BadOption", style=bold];
m0_48 -> m0_54  [key=0, style=solid];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_59  [key=0, style=solid];
m0_55 -> m0_57  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_57 -> m0_61  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_54  [color=darkorchid, key=3, label="Local variable bool requiredRulesAllMet", style=bold];
m0_54 -> m0_59  [color=darkseagreen4, key=1, label=requiredRulesAllMet, style=dashed];
m0_56 -> m0_55  [key=0, style=solid];
m0_56 -> m0_57  [key=0, style=solid];
m0_58 -> m0_55  [key=0, style=solid];
m0_58 -> m0_59  [color=darkseagreen4, key=1, label=requiredRulesAllMet, style=dashed];
m0_59 -> m0_60  [key=0, style=solid];
m0_60 -> m0_48  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_11  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_8 -> m0_12  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_8 -> m0_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [color=darkseagreen4, key=1, label=comparer, style=dashed];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_16  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_16  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_16  [key=2, style=dotted];
m0_15 -> m0_8  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_2  [color=blue, key=0, style=bold];
m0_73 -> m0_64  [color=darkorchid, key=3, label="Parameter variable CommandLine.Internal.OptionInfo option", style=bold];
m0_73 -> m0_76  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m0_73 -> m0_74  [key=0, style=solid];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_77  [key=0, style=solid];
m0_75 -> m0_79  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_2  [key=2, style=dotted];
m0_76 -> m0_80  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_5  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_76  [color=darkseagreen4, key=1, label=setName, style=dashed];
m0_74 -> m0_77  [color=darkseagreen4, key=1, label=setName, style=dashed];
m0_78 -> m0_73  [color=blue, key=0, style=bold];
m0_61 -> m0_81  [key=0, style=solid];
m0_61 -> m0_85  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_61 -> m0_86  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_61 -> m0_87  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_61 -> m0_90  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m0_61 -> m0_91  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m0_61 -> m0_92  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m0_61 -> m0_93  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m0_61 -> m0_94  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m0_61 -> m0_55  [color=darkorchid, key=3, label="Parameter variable CommandLine.Internal.OptionInfo option", style=bold];
m0_61 -> m0_42  [color=darkorchid, key=3, label="Parameter variable CommandLine.Internal.OptionInfo option", style=bold];
m0_61 -> m0_54  [color=darkorchid, key=3, label="Parameter variable bool? mutualExclusiveness", style=bold];
m0_61 -> m0_20  [color=darkorchid, key=3, label="Parameter variable bool? mutualExclusiveness", style=bold];
m0_95 -> m0_96  [color=green, key=0, style=solid];
m0_95 -> m0_100  [color=green, key=2, style=dotted];
m0_87 -> m0_95  [color=green, key=1, label=parserState, style=dashed];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_41  [key=2, style=dotted];
m0_90 -> m0_95  [color=green, key=1, label=error, style=dashed];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_99  [key=2, style=dotted];
m0_90 -> m0_92  [color=darkseagreen4, key=1, label=error, style=dashed];
m0_90 -> m0_94  [color=darkseagreen4, key=1, label=error, style=dashed];
m0_93 -> m0_95  [color=green, key=0, style=solid];
m0_93 -> m0_94  [key=0, style=solid];
m0_94 -> m0_95  [color=green, key=0, style=solid];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_28  [key=2, style=dotted];
m0_81 -> m0_84  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_85 -> m0_87  [key=0, style=solid];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_41  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_97  [key=2, style=dotted];
m0_86 -> m0_98  [key=2, style=dotted];
m0_91 -> m0_93  [key=0, style=solid];
m0_91 -> m0_92  [key=0, style=solid];
m0_92 -> m0_93  [key=0, style=solid];
m0_84 -> m0_87  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_86  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_88 -> m0_90  [key=0, style=solid];
m0_88 -> m0_89  [key=0, style=solid];
m0_83 -> m0_96  [key=0, style=solid];
m0_89 -> m0_96  [key=0, style=solid];
m0_82 -> m0_84  [key=0, style=solid];
m0_82 -> m0_83  [key=0, style=solid];
m0_96 -> m0_61  [color=blue, key=0, style=bold];
m0_44 -> m0_45  [color=green, key=0, style=solid];
m0_45 -> m0_46  [color=green, key=0, style=solid];
m0_45 -> m0_47  [color=green, key=2, style=dotted];
m0_45 -> m0_48  [color=green, key=2, style=dotted];
m0_46 -> m0_44  [color=blue, key=0, style=bold];
m0_30 -> m0_34  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_32  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<CommandLine.Internal.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>", style=dashed];
m0_30 -> m0_37  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_35 -> m0_42  [key=2, style=dotted];
m0_35 -> m0_39  [key=0, style=solid];
m0_35 -> m0_43  [key=2, style=dotted];
m0_34 -> m0_41  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_36  [key=0, style=solid];
m0_31 -> m0_8  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_36  [color=darkseagreen4, key=1, label=map, style=dashed];
m0_31 -> m0_37  [color=darkseagreen4, key=1, label=map, style=dashed];
m0_31 -> m0_38  [color=darkseagreen4, key=1, label=map, style=dashed];
m0_32 -> m0_35  [color=darkseagreen4, key=1, label=verb, style=dashed];
m0_32 -> m0_34  [color=darkseagreen4, key=1, label=verb, style=dashed];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_37  [key=0, style=solid];
m0_32 -> m0_36  [color=darkseagreen4, key=1, label=verb, style=dashed];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_29  [key=2, style=dotted];
m0_33 -> m0_40  [key=2, style=dotted];
m0_33 -> m0_36  [color=darkseagreen4, key=1, label=optionInfo, style=dashed];
m0_36 -> m0_32  [key=0, style=solid];
m0_37 -> m0_38  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_39 -> m0_30  [color=blue, key=0, style=bold];
m0_47 -> m0_70  [color=green, key=3, label="method methodReturn bool EnforceMutuallyExclusiveMap", style=bold];
m0_47 -> m0_62  [key=0, style=solid];
m0_47 -> m0_54  [color=darkorchid, key=3, label="method methodReturn bool EnforceMutuallyExclusiveMap", style=bold];
m0_68 -> m0_69  [color=green, key=0, style=solid];
m0_68 -> m0_67  [color=green, key=0, style=solid];
m0_67 -> m0_68  [color=green, key=0, style=solid];
m0_67 -> m0_69  [color=green, key=1, label=info, style=dashed];
m0_67 -> m0_71  [key=0, style=solid];
m0_69 -> m0_70  [color=green, key=0, style=solid];
m0_69 -> m0_61  [color=green, key=2, style=dotted];
m0_70 -> m0_72  [color=green, key=0, style=solid];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_64  [key=0, style=solid];
m0_64 -> m0_67  [key=0, style=solid];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_66  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_66 -> m0_64  [key=0, style=solid];
m0_66 -> m0_73  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_63 -> m0_72  [key=0, style=solid];
m0_65 -> m0_64  [key=0, style=solid];
m0_65 -> m0_66  [key=0, style=solid];
m0_72 -> m0_47  [color=blue, key=0, style=bold];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_5  [color=blue, key=0, style=bold];
m0_102 -> m0_45  [color=green, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_102 -> m0_69  [color=green, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_102 -> m0_9  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_102 -> m0_10  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_102 -> m0_11  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_102 -> m0_12  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_102 -> m0_13  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_102 -> m0_14  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_102 -> m0_50  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_102 -> m0_51  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_102 -> m0_55  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_102 -> m0_57  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_102 -> m0_62  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_102 -> m0_64  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_102 -> m0_66  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_102 -> m0_67  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_102 -> m0_75  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_102 -> m0_76  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_102 -> m0_77  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m0_101 -> m0_3  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo", style=dashed];
m0_101 -> m0_6  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo", style=dashed];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_52  [color=darkseagreen4, key=1, label="?", style=dashed];
m1_50 -> m1_53  [color=darkseagreen4, key=1, label="?", style=dashed];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_4  [color=blue, key=0, style=bold];
m1_7 -> m1_8  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_7  [color=blue, key=0, style=bold];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_10  [color=blue, key=0, style=bold];
m1_13 -> m1_14  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_15 -> m1_13  [color=blue, key=0, style=bold];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_19  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_16 -> m1_21  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_16 -> m1_23  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_16 -> m1_25  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_16 -> m1_28  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_16 -> m1_31  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_16 -> m1_34  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_20  [key=0, style=solid];
m1_17 -> m1_22  [key=0, style=solid];
m1_17 -> m1_24  [key=0, style=solid];
m1_17 -> m1_27  [key=0, style=solid];
m1_17 -> m1_30  [key=0, style=solid];
m1_17 -> m1_33  [key=0, style=solid];
m1_17 -> m1_35  [key=0, style=solid];
m1_19 -> m1_37  [key=0, style=solid];
m1_19 -> m1_39  [key=2, style=dotted];
m1_21 -> m1_37  [key=0, style=solid];
m1_21 -> m1_39  [key=2, style=dotted];
m1_23 -> m1_37  [key=0, style=solid];
m1_23 -> m1_39  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_34 -> m1_37  [key=0, style=solid];
m1_34 -> m1_39  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_26 -> m1_37  [key=0, style=solid];
m1_26 -> m1_39  [key=2, style=dotted];
m1_29 -> m1_37  [key=0, style=solid];
m1_29 -> m1_39  [key=2, style=dotted];
m1_32 -> m1_37  [key=0, style=solid];
m1_32 -> m1_39  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_37 -> m1_16  [color=blue, key=0, style=bold];
m1_38 -> m1_37  [key=0, style=solid];
m1_38 -> m1_40  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_46  [key=2, style=dotted];
m1_42 -> m1_42  [color=darkseagreen4, key=1, label=e, style=dashed];
m1_42 -> m1_53  [color=darkseagreen4, key=1, label=bySet, style=dashed];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_47  [key=2, style=dotted];
m1_43 -> m1_48  [key=2, style=dotted];
m1_43 -> m1_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_57  [key=2, style=dotted];
m1_53 -> m1_58  [key=2, style=dotted];
m1_53 -> m1_48  [key=2, style=dotted];
m1_53 -> m1_49  [key=2, style=dotted];
m1_53 -> m1_53  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_49  [key=2, style=dotted];
m1_45 -> m1_41  [color=blue, key=0, style=bold];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_48  [key=2, style=dotted];
m1_51 -> m1_49  [key=2, style=dotted];
m1_51 -> m1_51  [color=darkseagreen4, key=1, label=e, style=dashed];
m1_51 -> m1_54  [color=darkseagreen4, key=1, label=names, style=dashed];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_56  [key=2, style=dotted];
m1_52 -> m1_54  [color=darkseagreen4, key=1, label=namesCount, style=dashed];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_59  [key=2, style=dotted];
m1_54 -> m1_60  [key=2, style=dotted];
m1_54 -> m1_61  [key=2, style=dotted];
m1_54 -> m1_62  [key=2, style=dotted];
m1_54 -> m1_63  [key=2, style=dotted];
m1_54 -> m1_64  [key=2, style=dotted];
m1_54 -> m1_65  [key=2, style=dotted];
m1_55 -> m1_50  [color=blue, key=0, style=bold];
m1_66 -> m1_53  [color=darkseagreen4, key=1, label=bySet, style=dashed];
}
