digraph  {
n27 [label="Ninject.Planning.Bindings.Binding", span=""];
n0 [cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type)", label="Entry Ninject.Planning.Bindings.Binding.Binding(System.Type)", span="93-93"];
n1 [cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type)", label="Exit Ninject.Planning.Bindings.Binding.Binding(System.Type)", span="93-93"];
n2 [cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", label="Entry Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", span="100-100"];
n3 [cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", label="Ensure.ArgumentNotNull(service, ''service'')", span="102-102"];
n4 [cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", label="Ensure.ArgumentNotNull(metadata, ''metadata'')", span="103-103"];
n5 [cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", label="Service = service", span="105-105"];
n6 [cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", label="Metadata = metadata", span="106-106"];
n12 [cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="24-24"];
n7 [cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", label="Parameters = new List<IParameter>()", span="107-107"];
n8 [cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", label="ActivationActions = new List<Action<IContext>>()", span="108-108"];
n13 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n9 [cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", label="DeactivationActions = new List<Action<IContext>>()", span="109-109"];
n10 [cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", label="ScopeCallback = StandardScopeCallbacks.Singleton", span="110-110"];
n11 [cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", label="Exit Ninject.Planning.Bindings.Binding.Binding(System.Type, Ninject.Planning.Bindings.IBindingMetadata)", span="100-100"];
n14 [cluster="Ninject.Planning.Bindings.Binding.GetProvider(Ninject.Activation.IContext)", label="Entry Ninject.Planning.Bindings.Binding.GetProvider(Ninject.Activation.IContext)", span="118-118"];
n15 [cluster="Ninject.Planning.Bindings.Binding.GetProvider(Ninject.Activation.IContext)", label="Ensure.ArgumentNotNull(context, ''context'')", span="120-120"];
n16 [cluster="Ninject.Planning.Bindings.Binding.GetProvider(Ninject.Activation.IContext)", label="return ProviderCallback(context);", span="121-121"];
n17 [cluster="Ninject.Planning.Bindings.Binding.GetProvider(Ninject.Activation.IContext)", label="Exit Ninject.Planning.Bindings.Binding.GetProvider(Ninject.Activation.IContext)", span="118-118"];
n18 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
n19 [cluster="Ninject.Planning.Bindings.Binding.GetScope(Ninject.Activation.IContext)", label="Entry Ninject.Planning.Bindings.Binding.GetScope(Ninject.Activation.IContext)", span="129-129"];
n20 [cluster="Ninject.Planning.Bindings.Binding.GetScope(Ninject.Activation.IContext)", label="Ensure.ArgumentNotNull(context, ''context'')", span="131-131"];
n21 [cluster="Ninject.Planning.Bindings.Binding.GetScope(Ninject.Activation.IContext)", label="return ScopeCallback(context);", span="132-132"];
n22 [cluster="Ninject.Planning.Bindings.Binding.GetScope(Ninject.Activation.IContext)", label="Exit Ninject.Planning.Bindings.Binding.GetScope(Ninject.Activation.IContext)", span="129-129"];
n23 [cluster="Ninject.Planning.Bindings.Binding.Matches(Ninject.Activation.IRequest)", label="Entry Ninject.Planning.Bindings.Binding.Matches(Ninject.Activation.IRequest)", span="140-140"];
n24 [cluster="Ninject.Planning.Bindings.Binding.Matches(Ninject.Activation.IRequest)", label="Ensure.ArgumentNotNull(request, ''request'')", span="142-142"];
n25 [cluster="Ninject.Planning.Bindings.Binding.Matches(Ninject.Activation.IRequest)", label="return Condition == null || Condition(request);", span="143-143"];
n26 [cluster="Ninject.Planning.Bindings.Binding.Matches(Ninject.Activation.IRequest)", label="Exit Ninject.Planning.Bindings.Binding.Matches(Ninject.Activation.IRequest)", span="140-140"];
d176 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", color=green, community=0, label="2: ResultShouldBeFalse()", span="298-298"];
d292 [label="CommandLine.Tests.CommandLineParserFixture", span=""];
d175 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", label="Result = base.Parser.ParseArguments(new string[] { ''--short'' }, options)", span="296-296"];
d177 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="293-293"];
d74 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
d189 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", color=green, community=0, label="2: var options = new NumberSetOptions()", span="322-322"];
d188 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="320-320"];
d190 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", label="Result = base.Parser.ParseArguments(new string[] { ''--float'' }, options)", span="323-323"];
d94 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", label="Entry CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", span="35-35"];
d3 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", label="base.Parser.ParseArguments(null, new SimpleOptions())", span="51-51"];
d8 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", label="base.Parser.ParseArguments(new string[] { }, null)", span="58-58"];
d12 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", label="Result = base.Parser.ParseArguments(new string[] { ''-s'', ''something'' }, options)", span="65-65"];
d13 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", label="ResultShouldBeTrue()", span="67-67"];
d23 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", label="Result = base.Parser.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="76-77"];
d24 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", label="ResultShouldBeTrue()", span="79-79"];
d33 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", label="Result = base.Parser.ParseArguments(new string[] { ''-ca'', ''-d65'' }, options)", span="90-90"];
d34 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", label="ResultShouldBeTrue()", span="92-92"];
d45 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", label="Result = base.Parser.ParseArguments(new string[] { ''-b'', ''--double=9'' }, options)", span="104-104"];
d46 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", label="ResultShouldBeTrue()", span="106-106"];
d55 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", label="Result = base.Parser.ParseArguments(new string[] {\r\n                                ''-k'', ''string1:stringTwo:stringIII'', ''-s'', ''test-file.txt'' }, options)", span="118-119"];
d56 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", label="ResultShouldBeTrue()", span="121-121"];
d70 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", label="Result = base.Parser.ParseArguments(new string[] { ''-i=10'' }, options)", span="138-138"];
d71 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", label="ResultShouldBeFalse()", span="139-139"];
d77 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", label="Result = base.Parser.ParseArguments(new string[] { ''-s'', ''data.bin'', ''-a'', ''ReadWrite'' }, options)", span="149-149"];
d78 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", label="ResultShouldBeTrue()", span="151-151"];
d88 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", label="Result = base.Parser.ParseArguments(new string[] { ''-d'', ''10,986'' }, options)", span="163-163"];
d89 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", label="ResultShouldBeTrue()", span="165-165"];
d99 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", label="Result = base.Parser.ParseArguments(new string[] { ''--n-double'', ''12,32982'' }, options)", span="177-177"];
d100 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", label="ResultShouldBeTrue()", span="179-179"];
d106 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", label="Result = base.Parser.ParseArguments(new string[] {}, options)", span="189-189"];
d107 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", label="ResultShouldBeTrue()", span="191-191"];
d115 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", label="Result = base.Parser.ParseArguments(new string[] { ''-y'', ''4'', ''5'', ''6'' }, options)", span="201-201"];
d116 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", label="ResultShouldBeTrue()", span="203-203"];
d124 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", label="base.Parser.ParseArguments(new string[] {}, options)", span="214-214"];
d129 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", label="Result = base.Parser.ParseArguments(new string[] { ''-x'' }, options)", span="222-222"];
d130 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", label="ResultShouldBeFalse()", span="224-224"];
d134 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", label="Result = base.Parser.ParseArguments(new string[] { ''--extend'' }, options)", span="231-231"];
d135 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", label="ResultShouldBeFalse()", span="233-233"];
d140 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", label="Result = local.ParseArguments(new string[] { ''-a'', ''alfa'', ''--beta-OPTION'', ''beta'' }, options)", span="243-243"];
d141 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", label="ResultShouldBeTrue()", span="245-245"];
d150 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", label="Result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="255-255"];
d151 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", label="ResultShouldBeFalse()", span="257-257"];
d156 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", label="Result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="265-265"];
d157 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", label="ResultShouldBeTrue()", span="267-267"];
d165 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", label="Result = base.Parser.ParseArguments(new string[] { ''--string'' }, options)", span="278-278"];
d166 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", label="ResultShouldBeFalse()", span="280-280"];
d170 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", label="Result = base.Parser.ParseArguments(new string[] { ''--byte'' }, options)", span="287-287"];
d171 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", label="ResultShouldBeFalse()", span="289-289"];
d180 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", label="Result = base.Parser.ParseArguments(new string[] { ''--int'' }, options)", span="305-305"];
d181 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", label="ResultShouldBeFalse()", span="307-307"];
d185 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", label="Result = base.Parser.ParseArguments(new string[] { ''--long'' }, options)", span="314-314"];
d186 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", label="ResultShouldBeFalse()", span="316-316"];
d191 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", label="ResultShouldBeFalse()", span="325-325"];
d195 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", label="Result = base.Parser.ParseArguments(new string[] { ''--double'' }, options)", span="332-332"];
d196 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", label="ResultShouldBeFalse()", span="334-334"];
d200 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", label="Result = base.Parser.ParseArguments(new string[] { ''--string'', ''-'' }, options)", span="343-343"];
d201 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", label="ResultShouldBeTrue()", span="345-345"];
d206 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", label="Result = base.Parser.ParseArguments(new string[] { ''-sparser.xml'', ''-'', ''--switch'' }, options)", span="353-353"];
d207 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", label="ResultShouldBeTrue()", span="355-355"];
d216 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", label="Result = base.Parser.ParseArguments(new string[] { ''-i'', ''-4096'' }, options)", span="368-368"];
d217 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", label="ResultShouldBeTrue()", span="370-370"];
d222 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="Result = base.Parser.ParseArguments(new string[] { ''-i-4096'' }, options)", span="377-377"];
d223 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="ResultShouldBeTrue()", span="379-379"];
d228 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="Result = base.Parser.ParseArguments(new string[] { ''--int'', ''-4096'' }, options)", span="386-386"];
d229 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="ResultShouldBeTrue()", span="388-388"];
d234 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="Result = base.Parser.ParseArguments(new string[] { ''--int=-4096'' }, options)", span="395-395"];
d235 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="ResultShouldBeTrue()", span="397-397"];
d240 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", label="Result = base.Parser.ParseArguments(new string[] { ''-d'', ''-4096.1024'' }, options)", span="406-406"];
d241 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", label="ResultShouldBeTrue()", span="408-408"];
d246 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", label="Result = base.Parser.ParseArguments(new string[] { ''-d-4096.1024'' }, options)", span="416-416"];
d247 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", label="ResultShouldBeTrue()", span="418-418"];
d252 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", label="Result = base.Parser.ParseArguments(new string[] { ''--double'', ''-4096.1024'' }, options)", span="426-426"];
d253 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", label="ResultShouldBeTrue()", span="428-428"];
d258 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", label="Result = base.Parser.ParseArguments(new string[] { ''--double=-4096.1024'' }, options)", span="436-436"];
d259 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", label="ResultShouldBeTrue()", span="438-438"];
d264 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", label="Result = base.Parser.ParseArguments(new string[] { ''-b'', short.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="448-448"];
d265 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", label="ResultShouldBeFalse()", span="450-450"];
d270 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", label="Result = base.Parser.ParseArguments(new string[] { ''-s'', int.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="457-457"];
d271 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", label="ResultShouldBeFalse()", span="459-459"];
d276 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", label="Result = base.Parser.ParseArguments(new string[] { ''-i'', long.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="466-466"];
d277 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", label="ResultShouldBeFalse()", span="468-468"];
d282 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", label="Result = base.Parser.ParseArguments(new string[] { ''-l'', float.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="475-475"];
d283 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", label="ResultShouldBeFalse()", span="477-477"];
d288 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", label="Result = base.Parser.ParseArguments(new string[] { ''-f'', double.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="484-484"];
d289 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", label="ResultShouldBeFalse()", span="486-486"];
d174 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", label="var options = new NumberSetOptions()", span="295-295"];
d6 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
d173 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="293-293"];
d192 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="320-320"];
d87 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", label="var options = new NumberSetOptions()", span="162-162"];
d98 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", label="var options = new NumberSetOptions()", span="176-176"];
d169 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", label="var options = new NumberSetOptions()", span="286-286"];
d179 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", label="var options = new NumberSetOptions()", span="304-304"];
d184 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", label="var options = new NumberSetOptions()", span="313-313"];
d194 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", label="var options = new NumberSetOptions()", span="331-331"];
d221 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="var options = new NumberSetOptions()", span="376-376"];
d227 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="var options = new NumberSetOptions()", span="385-385"];
d233 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="var options = new NumberSetOptions()", span="394-394"];
d239 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", label="var options = new NumberSetOptions()", span="405-405"];
d245 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", label="var options = new NumberSetOptions()", span="415-415"];
d251 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", label="var options = new NumberSetOptions()", span="425-425"];
d257 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", label="var options = new NumberSetOptions()", span="435-435"];
d263 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", label="var options = new NumberSetOptions()", span="447-447"];
d269 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", label="var options = new NumberSetOptions()", span="456-456"];
d275 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", label="var options = new NumberSetOptions()", span="465-465"];
d281 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", label="var options = new NumberSetOptions()", span="474-474"];
d287 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", label="var options = new NumberSetOptions()", span="483-483"];
d2 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="49-49"];
d4 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="49-49"];
d5 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33"];
d7 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="56-56"];
d9 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="56-56"];
d11 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", label="var options = new SimpleOptions()", span="64-64"];
d14 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", label="options.StringValue.Should().Equal(''something'')", span="68-68"];
d17 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
d22 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", label="var options = new SimpleOptions()", span="75-75"];
d25 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", label="options.StringValue.Should().Equal(''another string'')", span="80-80"];
d32 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", label="var options = new BooleanSetOptions()", span="89-89"];
d35 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", label="options.BooleanThree.Should().Be.True()", span="93-93"];
d44 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", label="var options = new BooleanSetOptions()", span="103-103"];
d47 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", label="options.BooleanTwo.Should().Be.True()", span="107-107"];
d54 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", label="var options = new SimpleOptionsWithOptionList()", span="117-117"];
d57 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", label="options.SearchKeywords[0].Should().Equal(''string1'')", span="122-122"];
d69 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", label="var options = new SimpleOptions()", span="136-136"];
d72 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", label="Console.WriteLine(options)", span="140-140"];
d76 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", label="var options = new SimpleOptionsWithEnum()", span="147-147"];
d79 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", label="options.StringValue.Should().Equal(''data.bin'')", span="152-152"];
d90 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", label="options.DoubleValue.Should().Equal(10.986D)", span="166-166"];
d101 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", label="options.NullableDoubleValue.Should().Equal(12.32982D)", span="180-180"];
d105 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", label="var options = new SimpleOptionsWithDefaults()", span="188-188"];
d108 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", label="options.StringValue.Should().Equal(''str'')", span="192-192"];
d114 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", label="var options = new SimpleOptionsWithDefaultArray()", span="200-200"];
d117 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", label="options.StringArrayValue.Should().Equal(new string[] { ''a'', ''b'', ''c'' })", span="204-204"];
d123 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", label="var options = new SimpleOptionsWithBadDefaults()", span="213-213"];
d125 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", span="211-211"];
d128 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", label="var options = new SimpleOptions()", span="221-221"];
d131 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", label="Exit CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", span="219-219"];
d133 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", label="var options = new SimpleOptions()", span="230-230"];
d136 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", label="Exit CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", span="228-228"];
d138 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", label="ICommandLineParser local = new CommandLineParser()", span="241-241"];
d139 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", label="var options = new MixedCaseOptions()", span="242-242"];
d142 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", label="options.AlfaValue.Should().Equal(''alfa'')", span="246-246"];
d148 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", label="ICommandLineParser local = new CommandLineParser()", span="253-253"];
d149 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", label="var options = new MixedCaseOptions()", span="254-254"];
d152 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", label="Exit CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="251-251"];
d154 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", label="ICommandLineParser local = new CommandLineParser(new CommandLineParserSettings(false))", span="263-263"];
d155 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", label="var options = new MixedCaseOptions()", span="264-264"];
d158 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", label="options.AlfaValue.Should().Equal(''alfa'')", span="268-268"];
d164 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", label="var options = new SimpleOptions()", span="277-277"];
d167 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="275-275"];
d172 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="284-284"];
d182 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="302-302"];
d187 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="311-311"];
d197 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="329-329"];
d199 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", label="var options = new SimpleOptions()", span="342-342"];
d202 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", label="options.StringValue.Should().Equal(''-'')", span="346-346"];
d205 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", label="var options = new SimpleOptionsWithValueList()", span="352-352"];
d208 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", label="options.StringValue.Should().Equal(''parser.xml'')", span="356-356"];
d215 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", label="var options = new SimpleOptions()", span="367-367"];
d218 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", label="options.IntegerValue.Should().Equal(-4096)", span="371-371"];
d224 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="options.IntegerValue.Should().Equal(-4096)", span="380-380"];
d230 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="options.IntegerValue.Should().Equal(-4096)", span="389-389"];
d236 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="options.IntegerValue.Should().Equal(-4096)", span="398-398"];
d242 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", label="options.DoubleValue.Should().Equal(-4096.1024D)", span="409-409"];
d248 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", label="options.DoubleValue.Should().Equal(-4096.1024D)", span="419-419"];
d254 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", label="options.DoubleValue.Should().Equal(-4096.1024D)", span="429-429"];
d260 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", label="options.DoubleValue.Should().Equal(-4096.1024D)", span="439-439"];
d267 [cluster="short.ToString(System.IFormatProvider)", label="Entry short.ToString(System.IFormatProvider)", span="0-0"];
d266 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", span="445-445"];
d273 [cluster="int.ToString(System.IFormatProvider)", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
d272 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", span="454-454"];
d279 [cluster="long.ToString(System.IFormatProvider)", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
d278 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", span="463-463"];
d285 [cluster="float.ToString(System.IFormatProvider)", label="Entry float.ToString(System.IFormatProvider)", span="0-0"];
d284 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", span="472-472"];
d291 [cluster="double.ToString(System.IFormatProvider)", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
d290 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", span="481-481"];
d86 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="161-161"];
d97 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="175-175"];
d168 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="284-284"];
d178 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="302-302"];
d183 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="311-311"];
d193 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="329-329"];
d220 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="374-374"];
d226 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="383-383"];
d232 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="392-392"];
d238 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", span="403-403"];
d244 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", span="413-413"];
d250 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", span="423-423"];
d256 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", span="433-433"];
d262 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", span="445-445"];
d268 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", span="454-454"];
d274 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", span="463-463"];
d280 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", span="472-472"];
d286 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", span="481-481"];
d10 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="62-62"];
d15 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", label="Console.WriteLine(options)", span="69-69"];
d18 [cluster="Unk.Should", label="Entry Unk.Should", span=""];
d19 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
d21 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="73-73"];
d26 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", label="options.IntegerValue.Should().Equal(100)", span="81-81"];
d27 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", label="options.BooleanValue.Should().Be.True()", span="82-82"];
d28 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", label="Console.WriteLine(options)", span="83-83"];
d31 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="87-87"];
d41 [cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", label="Entry CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", span="36-36"];
d36 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", label="options.BooleanOne.Should().Be.True()", span="94-94"];
d37 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", label="options.BooleanTwo.Should().Be.False()", span="95-95"];
d38 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", label="options.NonBooleanValue.Should().Equal(65D)", span="96-96"];
d39 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", label="Console.WriteLine(options)", span="97-97"];
d30 [cluster="Unk.True", label="Entry Unk.True", span=""];
d43 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="101-101"];
d48 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", label="options.BooleanOne.Should().Be.False()", span="108-108"];
d49 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", label="options.BooleanThree.Should().Be.False()", span="109-109"];
d50 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", label="options.NonBooleanValue.Should().Equal(9D)", span="110-110"];
d51 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", label="Console.WriteLine(options)", span="111-111"];
d53 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="115-115"];
d66 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", span="35-35"];
d58 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", label="Console.WriteLine(options.SearchKeywords[0])", span="123-123"];
d59 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", label="options.SearchKeywords[1].Should().Equal(''stringTwo'')", span="124-124"];
d60 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", label="Console.WriteLine(options.SearchKeywords[1])", span="125-125"];
d61 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", label="options.SearchKeywords[2].Should().Equal(''stringIII'')", span="126-126"];
d62 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", label="Console.WriteLine(options.SearchKeywords[2])", span="127-127"];
d63 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", label="options.StringValue.Should().Equal(''test-file.txt'')", span="128-128"];
d64 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", label="Console.WriteLine(options.StringValue)", span="129-129"];
d68 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", label="Entry CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="134-134"];
d73 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", label="Exit CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="134-134"];
d20 [cluster="System.Console.WriteLine(object)", label="Entry System.Console.WriteLine(object)", span="0-0"];
d75 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="145-145"];
d83 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
d80 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", label="options.FileAccess.Should().Equal(FileAccess.ReadWrite)", span="153-153"];
d81 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", label="Console.WriteLine(options)", span="154-154"];
d91 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="168-168"];
d102 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="182-182"];
d104 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", span="186-186"];
d112 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", span="33-33"];
d109 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", label="options.IntegerValue.Should().Equal(9)", span="193-193"];
d110 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", label="options.BooleanValue.Should().Be.True()", span="194-194"];
d113 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", span="198-198"];
d121 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", span="35-35"];
d118 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", label="options.IntegerArrayValue.Should().Equal(new int[] { 4, 5, 6 })", span="205-205"];
d119 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", label="options.DoubleArrayValue.Should().Equal(new double[] { 1.1, 2.2, 3.3 })", span="206-206"];
d122 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", span="211-211"];
d126 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", span="33-33"];
d127 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", label="Entry CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", span="219-219"];
d132 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", label="Entry CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", span="228-228"];
d137 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", label="Entry CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", span="239-239"];
d145 [cluster="CommandLine.CommandLineParser.CommandLineParser()", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="51-51"];
d146 [cluster="CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", label="Entry CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", span="31-31"];
d143 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", label="options.BetaValue.Should().Equal(''beta'')", span="247-247"];
d147 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", label="Entry CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="251-251"];
d153 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", label="Entry CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="261-261"];
d161 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="70-70"];
d162 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="55-55"];
d159 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", label="options.BetaValue.Should().Equal(''beta'')", span="269-269"];
d163 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="275-275"];
d198 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="340-340"];
d203 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="340-340"];
d204 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="350-350"];
d213 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35"];
d209 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", label="options.BooleanValue.Should().Be.True()", span="357-357"];
d210 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", label="options.Items.Count.Should().Equal(1)", span="358-358"];
d211 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", label="options.Items[0].Should().Equal(''-'')", span="359-359"];
d214 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", span="365-365"];
d219 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", span="365-365"];
d225 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="374-374"];
d231 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="383-383"];
d237 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="392-392"];
d243 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", span="403-403"];
d249 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", span="413-413"];
d255 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", span="423-423"];
d261 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", span="433-433"];
d85 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="160-160"];
d93 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
d96 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="174-174"];
d16 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="62-62"];
d29 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="73-73"];
d40 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="87-87"];
d42 [cluster="Unk.False", label="Entry Unk.False", span=""];
d52 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="101-101"];
d65 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="115-115"];
d67 [cluster="System.Console.WriteLine(string)", label="Entry System.Console.WriteLine(string)", span="0-0"];
d82 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="145-145"];
d92 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", span="158-158"];
d103 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", span="172-172"];
d111 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", span="186-186"];
d120 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", span="198-198"];
d144 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", label="Exit CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", span="239-239"];
d160 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", label="Exit CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="261-261"];
d212 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="350-350"];
d84 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", span="158-158"];
d95 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", span="172-172"];
m1_0 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="ImmutableVerbFakes.cs", label="Entry CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", span="13-13"];
m1_1 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="ImmutableVerbFakes.cs", label="this.patch = patch", span="15-15"];
m1_2 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="ImmutableVerbFakes.cs", label="this.force = force", span="16-16"];
m1_3 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="ImmutableVerbFakes.cs", label="this.fileName = fileName", span="17-17"];
m1_4 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="ImmutableVerbFakes.cs", label="Exit CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", span="13-13"];
m1_5 [cluster="CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", file="ImmutableVerbFakes.cs", label="Entry CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", span="38-38"];
m1_6 [cluster="CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", file="ImmutableVerbFakes.cs", label="this.patch = patch", span="40-40"];
m1_7 [cluster="CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", file="ImmutableVerbFakes.cs", label="this.amend = amend", span="41-41"];
m1_8 [cluster="CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", file="ImmutableVerbFakes.cs", label="Exit CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", span="38-38"];
m1_9 [cluster="CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", file="ImmutableVerbFakes.cs", label="Entry CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", span="59-59"];
m1_10 [cluster="CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", file="ImmutableVerbFakes.cs", label="this.noHardLinks = noHardLinks", span="61-61"];
m1_11 [cluster="CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", file="ImmutableVerbFakes.cs", label="this.quiet = quiet", span="62-62"];
m1_12 [cluster="CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", file="ImmutableVerbFakes.cs", label="this.urls = urls", span="63-63"];
m1_13 [cluster="CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", file="ImmutableVerbFakes.cs", label="Exit CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", span="59-59"];
m1_14 [file="ImmutableVerbFakes.cs", label="CommandLine.Tests.Fakes.ImmutableAddOptions", span=""];
m1_15 [file="ImmutableVerbFakes.cs", label="CommandLine.Tests.Fakes.ImmutableCommitOptions", span=""];
m1_16 [file="ImmutableVerbFakes.cs", label="CommandLine.Tests.Fakes.ImmutableCloneOptions", span=""];
m2_6 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="InstanceChooserTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m2_33 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", span="115-115"];
m2_34 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", color=green, community=0, file="InstanceChooserTests.cs", label="1: var expected = new Immutable_Add_Verb(true, default(bool), ''dummy.bin'')", span="118-118"];
m2_35 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", color=green, community=0, file="InstanceChooserTests.cs", label="2: var result = InstanceChooser.Choose(\r\n                new[] { typeof(Immutable_Add_Verb), typeof(Immutable_Commit_Verb), typeof(Immutable_Clone_Verb) },\r\n                new[] { ''add'', ''--patch'', ''dummy.bin'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="121-126"];
m2_37 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="130-130"];
m2_36 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", color=green, community=0, file="InstanceChooserTests.cs", label="2: Assert.IsType<Immutable_Add_Verb>(((Parsed<object>)result).Value)", span="129-129"];
m2_38 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", span="115-115"];
m2_40 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", span="135-135"];
m2_41 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="var expected = new SequenceOptions { LongSequence = new long[] { }, StringSequence = new[] { ''aa'', ''b'' } }", span="138-138"];
m2_42 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs", label="2: var result = InstanceChooser.Choose(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb), typeof(SequenceOptions) },\r\n                new[] { ''sequence'', ''-s'', ''aa'', ''b'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="141-146"];
m2_44 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="150-150"];
m2_43 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Assert.IsType<SequenceOptions>(((Parsed<object>)result).Value)", span="149-149"];
m2_45 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", span="135-135"];
m2_14 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="InstanceChooserTests.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
m2_15 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", span="55-55"];
m2_16 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", color=green, community=0, file="InstanceChooserTests.cs", label="1: var expectedErrors = new[] { new HelpVerbRequestedError(''commit'', typeof(Commit_Verb), true) }", span="58-58"];
m2_17 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", color=green, community=0, file="InstanceChooserTests.cs", label="2: var result = InstanceChooser.Choose(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb) },\r\n                new[] { ''help'', ''commit'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="61-66"];
m2_18 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs", label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="69-69"];
m2_19 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", span="55-55"];
m2_39 [cluster="CommandLine.Tests.Fakes.Immutable_Add_Verb.Immutable_Add_Verb(bool, bool, string)", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Fakes.Immutable_Add_Verb.Immutable_Add_Verb(bool, bool, string)", span="13-13"];
m2_5 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="InstanceChooserTests.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m2_25 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", span="95-95"];
m2_26 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs", label="1: var expected = new Add_Verb { Patch = true, FileName = ''dummy.bin''}", span="98-98"];
m2_27 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs", label="2: var result = InstanceChooser.Choose(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb) },\r\n                new[] { ''add'', ''--patch'', ''dummy.bin'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="101-106"];
m2_29 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="110-110"];
m2_28 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs", label="2: Assert.IsType<Add_Verb>(((Parsed<object>)result).Value)", span="109-109"];
m2_30 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", span="95-95"];
m2_31 [cluster="CommandLine.Tests.Fakes.Add_Verb.Add_Verb()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Fakes.Add_Verb.Add_Verb()", span="7-7"];
m2_0 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", span="15-15"];
m2_1 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="var expectedErrors = new[] { new NoVerbSelectedError() }", span="18-18"];
m2_2 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", color=green, community=0, file="InstanceChooserTests.cs", label="2: var result = InstanceChooser.Choose(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb) },\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="21-26"];
m2_3 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="29-29"];
m2_4 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", span="15-15"];
m2_9 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", span="35-35"];
m2_10 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="var expectedErrors = new[] { new HelpVerbRequestedError(null, null, false) }", span="38-38"];
m2_11 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", color=green, community=0, file="InstanceChooserTests.cs", label="2: var result = InstanceChooser.Choose(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb) },\r\n                new[] { ''help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="41-46"];
m2_12 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="49-49"];
m2_13 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", span="35-35"];
m2_32 [cluster="Unk.>", file="InstanceChooserTests.cs", label="Entry Unk.>", span=""];
m2_20 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="75-75"];
m2_21 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="var expectedErrors = new[] { new HelpVerbRequestedError(null, null, false) }", span="78-78"];
m2_22 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", color=green, community=0, file="InstanceChooserTests.cs", label="2: var result = InstanceChooser.Choose(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb) },\r\n                new[] { ''help'', ''earthunderalienattack'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="81-86"];
m2_23 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="89-89"];
m2_24 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="75-75"];
m2_47 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", span="159-159"];
m2_48 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs", label="var expected = new SequenceOptions { LongSequence = new long[] { }, StringSequence = expectedString }", span="162-162"];
m2_49 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", color=green, community=0, file="InstanceChooserTests.cs", label="2: var result = InstanceChooser.Choose(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb), typeof(SequenceOptions) },\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="165-170"];
m2_51 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="174-174"];
m2_50 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs", label="Assert.IsType<SequenceOptions>(((Parsed<object>)result).Value)", span="173-173"];
m2_52 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", span="159-159"];
m2_7 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceChooserTests.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14"];
m2_46 [cluster="CommandLine.Tests.Fakes.SequenceOptions.SequenceOptions()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Fakes.SequenceOptions.SequenceOptions()", span="51-51"];
m2_8 [cluster="Unk.ShouldBeEquivalentTo", file="InstanceChooserTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m3_56 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="Parser.Default.ParseArguments<Simple_Options>(new[] { ''--stringvalue'', ''value'' })\r\n                .WithParsed(opts => expected = opts.StringValue)\r\n                .WithNotParsed(_ => expected = ''changed'')", span="67-69"];
m3_11 [cluster="Ninject.Planning.Targets.Target<T>.GetCustomAttributes(System.Type, bool)", color=green, community=0, file="ParserResultExtensionsTests.cs", label="0: Ensure.ArgumentNotNull(attributeType, ''attributeType'')", span="101-101"];
m3_12 [cluster="Ninject.Planning.Targets.Target<T>.GetCustomAttributes(System.Type, bool)", color=green, community=0, file="ParserResultExtensionsTests.cs", label="1: return Site.GetCustomAttributes(attributeType, inherit);", span="102-102"];
m3_13 [cluster="Ninject.Planning.Targets.Target<T>.GetCustomAttributes(System.Type, bool)", color=red, community=0, file="ParserResultExtensionsTests.cs", label="2: Exit Ninject.Planning.Targets.Target<T>.GetCustomAttributes(System.Type, bool)", span="99-99"];
m3_14 [cluster="System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type, bool)", file="ParserResultExtensionsTests.cs", label="Entry System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type, bool)", span="0-0"];
m3_15 [cluster="Ninject.Planning.Targets.Target<T>.GetCustomAttributes(bool)", file="ParserResultExtensionsTests.cs", label="Entry Ninject.Planning.Targets.Target<T>.GetCustomAttributes(bool)", span="110-110"];
m3_16 [cluster="CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", span="46-46"];
m3_17 [cluster="CommandLine.ParserResult<object>.WithParsed<T>(System.Action<T>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.ParserResult<object>.WithParsed<T>(System.Action<T>)", span="38-38"];
m3_6 [cluster="Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", file="ParserResultExtensionsTests.cs", label="_isOptional = new Future<bool>(ReadOptionalFromTarget)", span="90-90"];
m3_135 [cluster="CommandLine.Parser.ParseArguments<T1, T2, T3, T4>(System.Collections.Generic.IEnumerable<string>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Parser.ParseArguments<T1, T2, T3, T4>(System.Collections.Generic.IEnumerable<string>)", span="68-68"];
m3_66 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="var expected = ''a default''", span="77-77"];
m3_57 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="''value''.ShouldBeEquivalentTo(expected)", span="71-71"];
m3_58 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", span="64-64"];
m3_59 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="68-68"];
m3_61 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="68-68"];
m3_62 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="69-69"];
m3_63 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''changed''", span="69-69"];
m3_60 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = opts.StringValue", span="68-68"];
m3_64 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="69-69"];
m3_65 [cluster="System.Reflection.ICustomAttributeProvider.GetAttributes<T>()", file="ParserResultExtensionsTests.cs", label="Entry System.Reflection.ICustomAttributeProvider.GetAttributes<T>()", span="19-19"];
m3_67 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="Parser.Default.ParseArguments<Simple_Options>(new[] { ''-i'', ''aaa'' })\r\n                .WithParsed(opts => expected = opts.StringValue)\r\n                .WithNotParsed(_ => expected = ''changed'')", span="78-80"];
m3_68 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="attributes.All(attribute => attribute.Matches(metadata))", span="192-192"];
m3_69 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", span="75-75"];
m3_9 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = opts.StringValue", span="22-22"];
m3_104 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", span="109-109"];
m3_105 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="var expected = Parser.Default.ParseArguments<Simple_Options>(new[] { ''-i'', ''aaa'' })\r\n                .Return(_ => 0, _ => -1)", span="111-112"];
m3_106 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="(-1).ShouldBeEquivalentTo(expected)", span="114-114"];
m3_107 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", span="109-109"];
m3_54 [cluster="Ninject.Planning.Targets.Target<T>.ReadOptionalFromTarget()", file="ParserResultExtensionsTests.cs", label="return Site.HasAttribute<OptionalAttribute>();", span="178-178"];
m3_55 [cluster="Ninject.Planning.Targets.Target<T>.ReadOptionalFromTarget()", file="ParserResultExtensionsTests.cs", label="Exit Ninject.Planning.Targets.Target<T>.ReadOptionalFromTarget()", span="176-176"];
m3_52 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''changed''", span="58-58"];
m3_28 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", color=green, community=0, file="ParserResultExtensionsTests.cs", label="3: return GetValues(service, parent).CastSlow(service).ToArraySlow(service);", span="139-139"];
m3_29 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ParserResultExtensionsTests.cs", label="Type.IsGenericType", span="142-142"];
m3_30 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ParserResultExtensionsTests.cs", label="Type gtd = Type.GetGenericTypeDefinition()", span="144-144"];
m3_31 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ParserResultExtensionsTests.cs", label="Type service = Type.GetGenericArguments()[0]", span="145-145"];
m3_32 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ParserResultExtensionsTests.cs", label="gtd == typeof(List<>) || gtd == typeof(IList<>) || gtd == typeof(ICollection<>)", span="147-147"];
m3_91 [cluster="CommandLine.ParserResult<object>.Return<T1, T2, T3, TResult>(System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.ParserResult<object>.Return<T1, T2, T3, TResult>(System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="160-160"];
m3_163 [cluster="CommandLine.ParserResult<object>.Return<T1, T2, T3, T4, T5, TResult>(System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.ParserResult<object>.Return<T1, T2, T3, T4, T5, TResult>(System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="249-249"];
m3_70 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="79-79"];
m3_179 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="168-168"];
m3_8 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="22-22"];
m3_10 [cluster="Ninject.Planning.Targets.Target<T>.GetCustomAttributes(System.Type, bool)", file="ParserResultExtensionsTests.cs", label="Entry Ninject.Planning.Targets.Target<T>.GetCustomAttributes(System.Type, bool)", span="99-99"];
m3_18 [cluster="System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool)", file="ParserResultExtensionsTests.cs", label="Entry System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool)", span="0-0"];
m3_21 [cluster="Ninject.Planning.Targets.Target<T>.IsDefined(System.Type, bool)", color=green, community=0, file="ParserResultExtensionsTests.cs", label="5: return Site.IsDefined(attributeType, inherit);", span="124-124"];
m3_24 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ParserResultExtensionsTests.cs", label="Entry Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", span="132-132"];
m3_19 [cluster="Ninject.Planning.Targets.Target<T>.IsDefined(System.Type, bool)", color=red, community=0, file="ParserResultExtensionsTests.cs", label="4: Entry Ninject.Planning.Targets.Target<T>.IsDefined(System.Type, bool)", span="121-121"];
m3_20 [cluster="Ninject.Planning.Targets.Target<T>.IsDefined(System.Type, bool)", color=green, community=0, file="ParserResultExtensionsTests.cs", label="0: Ensure.ArgumentNotNull(attributeType, ''attributeType'')", span="123-123"];
m3_22 [cluster="Ninject.Planning.Targets.Target<T>.IsDefined(System.Type, bool)", color=red, community=0, file="ParserResultExtensionsTests.cs", label="0: Exit Ninject.Planning.Targets.Target<T>.IsDefined(System.Type, bool)", span="121-121"];
m3_23 [cluster="System.Reflection.ICustomAttributeProvider.IsDefined(System.Type, bool)", file="ParserResultExtensionsTests.cs", label="Entry System.Reflection.ICustomAttributeProvider.IsDefined(System.Type, bool)", span="0-0"];
m3_25 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", color=red, community=0, file="ParserResultExtensionsTests.cs", label="0: Ensure.ArgumentNotNull(parent, ''parent'')", span="134-134"];
m3_26 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ParserResultExtensionsTests.cs", label="Type.IsArray", span="136-136"];
m3_34 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ParserResultExtensionsTests.cs", label="gtd == typeof(IEnumerable<>)", span="150-150"];
m3_35 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", color=green, community=0, file="ParserResultExtensionsTests.cs", label="1: return GetValues(service, parent).CastSlow(service);", span="151-151"];
m3_36 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ParserResultExtensionsTests.cs", label="return GetValues(Type, parent).FirstOrDefault();", span="154-154"];
m3_42 [cluster="System.Type.GetGenericTypeDefinition()", file="ParserResultExtensionsTests.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m3_45 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="ParserResultExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m3_48 [cluster="Ninject.Planning.Targets.Target<T>.GetValues(System.Type, Ninject.Activation.IContext)", file="ParserResultExtensionsTests.cs", label="var request = parent.Request.CreateChild(service, parent, this)", span="168-168"];
m3_51 [cluster="Ninject.Activation.IRequest.CreateChild(System.Type, Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", file="ParserResultExtensionsTests.cs", label="Entry Ninject.Activation.IRequest.CreateChild(System.Type, Ninject.Activation.IContext, Ninject.Planning.Targets.ITarget)", span="90-90"];
m3_43 [cluster="System.Type.GetGenericArguments()", color=red, community=0, file="ParserResultExtensionsTests.cs", label="1: Entry System.Type.GetGenericArguments()", span="0-0"];
m3_44 [cluster="System.Collections.IEnumerable.ToListSlow(System.Type)", file="ParserResultExtensionsTests.cs", label="Entry System.Collections.IEnumerable.ToListSlow(System.Type)", span="31-31"];
m3_46 [cluster="Ninject.Planning.Targets.Target<T>.GetValues(System.Type, Ninject.Activation.IContext)", color=green, community=0, file="ParserResultExtensionsTests.cs", label="1: Ensure.ArgumentNotNull(service, ''service'')", span="165-165"];
m3_47 [cluster="Ninject.Planning.Targets.Target<T>.GetValues(System.Type, Ninject.Activation.IContext)", color=green, community=0, file="ParserResultExtensionsTests.cs", label="2: Ensure.ArgumentNotNull(parent, ''parent'')", span="166-166"];
m3_49 [cluster="Ninject.Planning.Targets.Target<T>.GetValues(System.Type, Ninject.Activation.IContext)", color=red, community=0, file="ParserResultExtensionsTests.cs", label="2: return parent.Kernel.Resolve(request);", span="169-169"];
m3_50 [cluster="Ninject.Planning.Targets.Target<T>.GetValues(System.Type, Ninject.Activation.IContext)", file="ParserResultExtensionsTests.cs", label="Exit Ninject.Planning.Targets.Target<T>.GetValues(System.Type, Ninject.Activation.IContext)", span="163-163"];
m3_53 [cluster="Ninject.Planning.Targets.Target<T>.ReadOptionalFromTarget()", file="ParserResultExtensionsTests.cs", label="Entry Ninject.Planning.Targets.Target<T>.ReadOptionalFromTarget()", span="176-176"];
m3_73 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="80-80"];
m3_71 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = opts.StringValue", span="79-79"];
m3_72 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="attribute.Matches(metadata)", span="192-192"];
m3_74 [cluster="Ninject.ConstraintAttribute.Matches(Ninject.Planning.Bindings.IBindingMetadata)", file="ParserResultExtensionsTests.cs", label="Entry Ninject.ConstraintAttribute.Matches(Ninject.Planning.Bindings.IBindingMetadata)", span="27-27"];
m3_75 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Ninject.Planning.Targets.Target<T>", span=""];
m3_81 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="89-89"];
m3_84 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="89-89"];
m3_82 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=0, span="89-89"];
m3_83 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="89-89"];
m3_85 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="-1", span="89-89"];
m3_86 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="89-89"];
m3_92 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="100-100"];
m3_95 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="101-101"];
m3_98 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="102-102"];
m3_101 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="103-103"];
m3_93 [cluster="lambda expression", color=red, community=0, file="ParserResultExtensionsTests.cs", label="1: 0", span="100-100"];
m3_94 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="100-100"];
m3_96 [cluster="lambda expression", color=red, community=0, file="ParserResultExtensionsTests.cs", label="1: 1", span="101-101"];
m3_97 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="101-101"];
m3_99 [cluster="lambda expression", color=red, community=0, file="ParserResultExtensionsTests.cs", label="1: 2", span="102-102"];
m3_100 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="102-102"];
m3_102 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=3, span="103-103"];
m3_103 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="103-103"];
m3_108 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="112-112"];
m3_111 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="112-112"];
m3_109 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=0, span="112-112"];
m3_110 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="112-112"];
m3_112 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="-1", span="112-112"];
m3_113 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="112-112"];
m3_118 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="123-123"];
m3_121 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="124-124"];
m3_124 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="125-125"];
m3_127 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="126-126"];
m3_119 [cluster="lambda expression", color=red, community=0, file="ParserResultExtensionsTests.cs", label="1: 0", span="123-123"];
m3_120 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="123-123"];
m3_122 [cluster="lambda expression", color=red, community=0, file="ParserResultExtensionsTests.cs", label="1: 1", span="124-124"];
m3_123 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="124-124"];
m3_125 [cluster="lambda expression", color=red, community=0, file="ParserResultExtensionsTests.cs", label="1: 2", span="125-125"];
m3_126 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="125-125"];
m3_128 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=3, span="126-126"];
m3_129 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="126-126"];
m3_136 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="137-137"];
m3_139 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="138-138"];
m3_142 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="139-139"];
m3_145 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="140-140"];
m3_137 [cluster="lambda expression", color=red, community=0, file="ParserResultExtensionsTests.cs", label="1: expected = ''wrong1''", span="137-137"];
m3_138 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="137-137"];
m3_140 [cluster="lambda expression", color=red, community=0, file="ParserResultExtensionsTests.cs", label="1: expected = ''wrong2''", span="138-138"];
m3_141 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="138-138"];
m3_143 [cluster="lambda expression", color=red, community=0, file="ParserResultExtensionsTests.cs", label="1: expected = ''wrong3''", span="139-139"];
m3_144 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="139-139"];
m3_146 [cluster="lambda expression", color=red, community=0, file="ParserResultExtensionsTests.cs", label="1: expected = opts.FileName", span="140-140"];
m3_147 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="140-140"];
m3_153 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="151-151"];
m3_156 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="152-152"];
m3_154 [cluster="lambda expression", color=red, community=0, file="ParserResultExtensionsTests.cs", label="1: 1", span="151-151"];
m3_155 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="151-151"];
m3_157 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=2, span="152-152"];
m3_158 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="152-152"];
m3_164 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="163-163"];
m3_167 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="164-164"];
m3_170 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="165-165"];
m3_173 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="166-166"];
m3_176 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="167-167"];
m3_165 [cluster="lambda expression", color=red, community=0, file="ParserResultExtensionsTests.cs", label="1: 0", span="163-163"];
m3_166 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="163-163"];
m3_168 [cluster="lambda expression", color=red, community=0, file="ParserResultExtensionsTests.cs", label="1: 1", span="164-164"];
m3_169 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="164-164"];
m3_171 [cluster="lambda expression", color=red, community=0, file="ParserResultExtensionsTests.cs", label="1: 2", span="165-165"];
m3_172 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="165-165"];
m3_174 [cluster="lambda expression", color=red, community=0, file="ParserResultExtensionsTests.cs", label="1: 4", span="166-166"];
m3_175 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="166-166"];
m3_177 [cluster="lambda expression", color=red, community=0, file="ParserResultExtensionsTests.cs", label="1: 3", span="167-167"];
m3_178 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="167-167"];
m3_180 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=5, span="168-168"];
m3_181 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="168-168"];
m3_27 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", color=green, community=0, file="ParserResultExtensionsTests.cs", label="0: Type service = Type.GetElementType()", span="138-138"];
m3_148 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", span="146-146"];
m3_149 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", color=red, community=0, file="ParserResultExtensionsTests.cs", label="2: var expected = Parser.Default.ParseArguments<AddOptions, CommitOptions, CloneOptions, DerivedAddOptions>(\r\n                new[] { ''derivedadd'', ''dummy.bin'' })\r\n                .Return(\r\n                    (BaseFileOptions opts) => 1,\r\n                    errs => 2)", span="148-152"];
m3_150 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", file="ParserResultExtensionsTests.cs", label="1.ShouldBeEquivalentTo(expected)", span="154-154"];
m3_151 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", span="146-146"];
m3_130 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", span="132-132"];
m3_131 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ParserResultExtensionsTests.cs", label="var expected = string.Empty", span="134-134"];
m3_132 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", color=red, community=0, file="ParserResultExtensionsTests.cs", label="2: Parser.Default.ParseArguments<AddOptions, CommitOptions, CloneOptions, DerivedAddOptions>(\r\n                new[] { ''derivedadd'', ''dummy.bin'' })\r\n                .WithParsed<AddOptions>(opts => expected = ''wrong1'')\r\n                .WithParsed<CommitOptions>(opts => expected = ''wrong2'')\r\n                .WithParsed<CloneOptions>(opts => expected = ''wrong3'')\r\n                .WithParsed<BaseFileOptions>(opts => expected = opts.FileName)", span="135-140"];
m3_133 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ParserResultExtensionsTests.cs", label="''dummy.bin''.ShouldBeEquivalentTo(expected)", span="142-142"];
m3_134 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", span="132-132"];
m3_76 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label=attributes, span=""];
m3_77 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="Ninject.Planning.Bindings.IBindingMetadata", span=""];
m3_78 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="0.ShouldBeEquivalentTo(expected)", span="91-91"];
m3_79 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", span="86-86"];
m3_41 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", span="51-51"];
m3_80 [cluster="CommandLine.ParserResult<TSource>.Return<TSource, TResult>(System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.ParserResult<TSource>.Return<TSource, TResult>(System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="78-78"];
m3_114 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", span="118-118"];
m3_115 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", color=red, community=0, file="ParserResultExtensionsTests.cs", label="2: var expected = Parser.Default.ParseArguments<AddOptions, CommitOptions, CloneOptions>(\r\n                new[] { ''undefined'', ''-xyz'' })\r\n                .Return(\r\n                    (AddOptions opts) => 0,\r\n                    (CommitOptions opts) => 1,\r\n                    (CloneOptions opts) => 2,\r\n                    errs => 3)", span="120-126"];
m3_116 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs", label="3.ShouldBeEquivalentTo(expected)", span="128-128"];
m3_117 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", span="118-118"];
m3_33 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", color=green, community=0, file="ParserResultExtensionsTests.cs", label="2: return GetValues(service, parent).CastSlow(service).ToListSlow(service);", span="148-148"];
m3_37 [cluster="Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", file="ParserResultExtensionsTests.cs", label="Exit Ninject.Planning.Targets.Target<T>.ResolveWithin(Ninject.Activation.IContext)", span="132-132"];
m3_38 [cluster="System.Type.GetElementType()", file="ParserResultExtensionsTests.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m3_39 [cluster="Ninject.Planning.Targets.Target<T>.GetValues(System.Type, Ninject.Activation.IContext)", color=red, community=0, file="ParserResultExtensionsTests.cs", label="2: Entry Ninject.Planning.Targets.Target<T>.GetValues(System.Type, Ninject.Activation.IContext)", span="163-163"];
m3_40 [cluster="System.Collections.IEnumerable.CastSlow(System.Type)", file="ParserResultExtensionsTests.cs", label="Entry System.Collections.IEnumerable.CastSlow(System.Type)", span="19-19"];
m3_159 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", span="158-158"];
m3_160 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", color=red, community=0, file="ParserResultExtensionsTests.cs", label="2: var expected = Parser.Default.ParseArguments<AddOptions, CommitOptions, CloneOptions, DerivedAddOptions>(\r\n                new[] { ''derivedadd'', ''dummy.bin'' })\r\n                .Return(\r\n                    (AddOptions opts) => 0,\r\n                    (CommitOptions opts) => 1,\r\n                    (CloneOptions opts) => 2,\r\n                    (BaseFileOptions opts) => 4,\r\n                    (DerivedAddOptions opts) => 3,\r\n                    errs => 5)", span="160-168"];
m3_161 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", file="ParserResultExtensionsTests.cs", label="4.ShouldBeEquivalentTo(expected)", span="170-170"];
m3_162 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", span="158-158"];
m3_0 [cluster="Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", file="ParserResultExtensionsTests.cs", label="Entry Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", span="81-81"];
m3_1 [cluster="Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", file="ParserResultExtensionsTests.cs", label="Ensure.ArgumentNotNull(member, ''member'')", span="83-83"];
m3_2 [cluster="Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", file="ParserResultExtensionsTests.cs", label="Ensure.ArgumentNotNull(site, ''site'')", span="84-84"];
m3_3 [cluster="Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", file="ParserResultExtensionsTests.cs", label="Member = member", span="86-86"];
m3_4 [cluster="Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", file="ParserResultExtensionsTests.cs", label="Site = site", span="87-87"];
m3_5 [cluster="Ninject.Planning.Targets.Target<T>.Target(System.Reflection.MemberInfo, T)", file="ParserResultExtensionsTests.cs", label="_constraint = new Future<Func<IBindingMetadata, bool>>(ReadConstraintFromTarget)", span="89-89"];
m3_152 [cluster="CommandLine.ParserResult<object>.Return<T1, TResult>(System.Func<T1, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.ParserResult<object>.Return<T1, TResult>(System.Func<T1, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="99-99"];
m3_7 [cluster="Unk.ShouldBeEquivalentTo", file="ParserResultExtensionsTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m3_87 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", span="95-95"];
m3_88 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", color=red, community=0, file="ParserResultExtensionsTests.cs", label="2: var expected = Parser.Default.ParseArguments<AddOptions, CommitOptions, CloneOptions>(\r\n                new[] { ''clone'', ''https://value.org/user/file.git'' })\r\n                .Return(\r\n                    (AddOptions opts) => 0,\r\n                    (CommitOptions opts) => 1,\r\n                    (CloneOptions opts) => 2,\r\n                    errs => 3)", span="97-103"];
m3_89 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs", label="2.ShouldBeEquivalentTo(expected)", span="105-105"];
m3_90 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", span="95-95"];
m4_35 [cluster="CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", file="ParserTests.cs", label="Entry CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", span="46-46"];
m4_36 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="52-52"];
m4_37 [cluster="lambda expression", file="ParserTests.cs", label="with.HelpWriter = writer", span="52-52"];
m4_0 [cluster="Ninject.Tests.Unit.StartableStrategyTests.StartableStrategyContext.StartableStrategyContext()", file="ParserTests.cs", label="Entry Ninject.Tests.Unit.StartableStrategyTests.StartableStrategyContext.StartableStrategyContext()", span="15-15"];
m4_2 [cluster="Ninject.Tests.Unit.StartableStrategyTests.StartableStrategyContext.StartableStrategyContext()", file="ParserTests.cs", label="this.strategy = new StartableStrategy()", span="18-18"];
m4_4 [cluster="Mock<IContext>.cstr", file="ParserTests.cs", label="Entry Mock<IContext>.cstr", span=""];
m4_1 [cluster="Ninject.Tests.Unit.StartableStrategyTests.StartableStrategyContext.StartableStrategyContext()", file="ParserTests.cs", label="this.contextMock = new Mock<IContext>()", span="17-17"];
m4_3 [cluster="Ninject.Tests.Unit.StartableStrategyTests.StartableStrategyContext.StartableStrategyContext()", file="ParserTests.cs", label="Exit Ninject.Tests.Unit.StartableStrategyTests.StartableStrategyContext.StartableStrategyContext()", span="15-15"];
m4_5 [cluster="Ninject.Activation.Strategies.StartableStrategy.StartableStrategy()", file="ParserTests.cs", label="Entry Ninject.Activation.Strategies.StartableStrategy.StartableStrategy()", span="14-14"];
m4_6 [cluster="Ninject.Tests.Unit.StartableStrategyTests.WhenActivateIsCalled.StrategyStartsInstanceIfItIsStartable()", file="ParserTests.cs", label="Entry Ninject.Tests.Unit.StartableStrategyTests.WhenActivateIsCalled.StrategyStartsInstanceIfItIsStartable()", span="25-25"];
m4_16 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="var writer = new StringWriter()", span="35-35"];
m4_97 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", span="189-189"];
m4_98 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", color=green, community=0, file="ParserTests.cs", label="2: var expectedOptions = new Commit_Verb() { Message = message }", span="192-192"];
m4_99 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", file="ParserTests.cs", label="var sut = new Parser()", span="193-193"];
m4_102 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", file="ParserTests.cs", label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="202-202"];
m4_100 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", color=green, community=0, file="ParserTests.cs", label="1: var result = sut.ParseArguments(\r\n                args,\r\n                typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb))", span="196-198"];
m4_101 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", color=green, community=0, file="ParserTests.cs", label="2: Assert.IsType<Commit_Verb>(((Parsed<object>)result).Value)", span="201-201"];
m4_103 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", span="189-189"];
m4_191 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", span="332-332"];
m4_194 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", color=green, community=0, file="ParserTests.cs", label="2: sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new string[] { })", span="339-339"];
m4_193 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="336-336"];
m4_195 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="var result = help.ToString()", span="340-340"];
m4_192 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="var help = new StringWriter()", span="335-335"];
m4_196 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="result.Length.Should().BeGreaterThan(0)", span="343-343"];
m4_197 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="344-344"];
m4_199 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="346-346"];
m4_200 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="347-347"];
m4_201 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="lines[3].ShouldBeEquivalentTo(''No verb selected.'')", span="348-348"];
m4_202 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="lines[4].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="349-349"];
m4_203 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="lines[5].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="350-350"];
m4_204 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="lines[6].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="351-351"];
m4_205 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="lines[7].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="352-352"];
m4_206 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="lines[8].ShouldBeEquivalentTo(''version    Display version information.'')", span="353-353"];
m4_198 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="345-345"];
m4_207 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", span="332-332"];
m4_274 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", span="444-444"];
m4_277 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="sut.ParseArguments<Add_Verb_With_Usage_Attribute, Commit_Verb_With_Usage_Attribute, Clone_Verb_With_Usage_Attribute>(\r\n                new[] { ''clone'', ''--badoption=@bad?value'' })", span="451-452"];
m4_276 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="448-448"];
m4_278 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="var result = help.ToString()", span="453-453"];
m4_281 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="458-458"];
m4_282 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="459-459"];
m4_283 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[3].ShouldBeEquivalentTo(''Option 'badoption' is unknown.'')", span="460-460"];
m4_284 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[4].ShouldBeEquivalentTo(''USAGE:'')", span="461-461"];
m4_285 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[5].ShouldBeEquivalentTo(''Cloning quietly:'')", span="462-462"];
m4_286 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[6].ShouldBeEquivalentTo(''git clone --quiet https://github.com/gsscoder/railwaysharp'')", span="463-463"];
m4_287 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[7].ShouldBeEquivalentTo(''Cloning without hard links:'')", span="464-464"];
m4_288 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[8].ShouldBeEquivalentTo(''git clone --no-hardlinks https://github.com/gsscoder/csharpx'')", span="465-465"];
m4_289 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[9].ShouldBeEquivalentTo(''--no-hardlinks    Optimize the cloning process from a repository on a local'')", span="466-466"];
m4_290 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[10].ShouldBeEquivalentTo(''filesystem by copying files.'')", span="467-467"];
m4_291 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[11].ShouldBeEquivalentTo(''-q, --quiet       Suppress summary message.'')", span="468-468"];
m4_292 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[12].ShouldBeEquivalentTo(''--help            Display this help screen.'')", span="469-469"];
m4_293 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[13].ShouldBeEquivalentTo(''--version         Display version information.'')", span="470-470"];
m4_294 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[14].ShouldBeEquivalentTo(''URLS (pos. 0)     A list of url(s) to clone.'')", span="471-471"];
m4_275 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="var help = new StringWriter()", span="447-447"];
m4_280 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="457-457"];
m4_279 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="456-456"];
m4_295 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", span="444-444"];
m4_130 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="265-265"];
m4_132 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="var sut = new Parser()", span="269-269"];
m4_135 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="((NotParsed<Immutable_Simple_Options>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="276-276"];
m4_134 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="((NotParsed<Immutable_Simple_Options>)result).Errors.Should().HaveCount(x => x == 1)", span="275-275"];
m4_131 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="var expectedError = new HelpRequestedError()", span="268-268"];
m4_133 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="var result = sut.ParseArguments<Immutable_Simple_Options>(new[] { ''--help'' })", span="272-272"];
m4_136 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="265-265"];
m4_312 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", span="497-497"];
m4_314 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", color=green, community=0, file="ParserTests.cs", label="2: var result = sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(arguments)", span="505-505"];
m4_313 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", file="ParserTests.cs", label="var sut = new Parser(config => config.IgnoreUnknownArguments = true)", span="502-502"];
m4_315 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", file="ParserTests.cs", label="result.Tag.ShouldBeEquivalentTo(ParserResultType.Parsed)", span="508-508"];
m4_316 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", file="ParserTests.cs", label="result.WithParsed(opts => opts.ShouldBeEquivalentTo(expected))", span="509-509"];
m4_317 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", span="497-497"];
m4_8 [cluster="Ninject.Tests.Unit.StartableStrategyTests.WhenActivateIsCalled.StrategyStartsInstanceIfItIsStartable()", file="ParserTests.cs", label="var reference = new InstanceReference { Instance = instance }", span="28-28"];
m4_67 [cluster="CommandLine.Tests.Fakes.Simple_Options_With_Values.Simple_Options_With_Values()", file="ParserTests.cs", label="Entry CommandLine.Tests.Fakes.Simple_Options_With_Values.Simple_Options_With_Values()", span="6-6"];
m4_147 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="281-281"];
m4_149 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="285-285"];
m4_151 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="var result = help.ToString()", span="289-289"];
m4_148 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="var help = new StringWriter()", span="284-284"];
m4_150 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="sut.ParseArguments<Immutable_Simple_Options>(new[] { ''--help'' })", span="288-288"];
m4_152 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="result.Length.Should().BeGreaterThan(0)", span="292-292"];
m4_153 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="281-281"];
m4_17 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="var sut = new Parser(with => with.HelpWriter = writer)", span="36-36"];
m4_18 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", color=green, community=0, file="ParserTests.cs", label="2: sut.ParseArguments(new string[] { }, typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb))", span="39-39"];
m4_19 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="var text = writer.ToString()", span="42-42"];
m4_20 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="text.Should().NotBeEmpty()", span="43-43"];
m4_21 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="32-32"];
m4_264 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", span="428-428"];
m4_267 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", color=green, community=0, file="ParserTests.cs", label="2: sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new[] { ''commit'', ''--help'' })", span="435-435"];
m4_266 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ParserTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="432-432"];
m4_268 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ParserTests.cs", label="var result = help.ToString()", span="436-436"];
m4_265 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ParserTests.cs", label="var help = new StringWriter()", span="431-431"];
m4_269 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ParserTests.cs", label="result.Length.Should().BeGreaterThan(0)", span="439-439"];
m4_270 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", span="428-428"];
m4_14 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="20-20"];
m4_61 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="112-112"];
m4_63 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs", label="var sut = new Parser(with => with.EnableDashDash = true)", span="122-122"];
m4_65 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs", label="((Parsed<Simple_Options_With_Values>)result).Value.ShouldBeEquivalentTo(expectedOptions)", span="130-130"];
m4_62 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs", label="var expectedOptions = new Simple_Options_With_Values\r\n                                  {\r\n                                      StringValue = ''astring'',\r\n                                      LongValue = 20L,\r\n                                      StringSequence = new[] { ''--aaa'', ''-b'', ''--ccc'' },\r\n                                      IntValue = 30\r\n                                  }", span="115-121"];
m4_64 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs", label="var result =\r\n                sut.ParseArguments<Simple_Options_With_Values>(\r\n                    new[] { ''--stringvalue'', ''astring'', ''--'', ''20'', ''--aaa'', ''-b'', ''--ccc'', ''30'' })", span="125-127"];
m4_66 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="112-112"];
m4_139 [cluster="Unk.ContainSingle", file="ParserTests.cs", label="Entry Unk.ContainSingle", span=""];
m4_60 [cluster="Unk.>", file="ParserTests.cs", label="Entry Unk.>", span=""];
m4_22 [cluster="object.Object()", file="ParserTests.cs", label="Entry object.Object()", span="0-0"];
m4_78 [cluster="CommandLine.Tests.Fakes.Add_Verb.Add_Verb()", file="ParserTests.cs", label="Entry CommandLine.Tests.Fakes.Add_Verb.Add_Verb()", span="7-7"];
m4_108 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", span="207-207"];
m4_110 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", color=green, community=0, file="ParserTests.cs", label="2: var result = sut.ParseArguments(\r\n                new[] { ''clone'', ''-q'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' },\r\n                typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb))", span="213-215"];
m4_109 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", file="ParserTests.cs", label="var sut = Parser.Default", span="210-210"];
m4_111 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", file="ParserTests.cs", label="Assert.IsType<NotParsed<object>>(result)", span="218-218"];
m4_112 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", span="207-207"];
m4_299 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", span="478-478"];
m4_300 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="ParserTests.cs", label="var sut = new Parser(config => config.IgnoreUnknownArguments = true)", span="483-483"];
m4_302 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="ParserTests.cs", label="result.Tag.ShouldBeEquivalentTo(ParserResultType.Parsed)", span="489-489"];
m4_303 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="ParserTests.cs", label="result.WithParsed(opts => opts.ShouldBeEquivalentTo(expected))", span="490-490"];
m4_301 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="ParserTests.cs", label="var result = sut.ParseArguments<Simple_Options>(arguments)", span="486-486"];
m4_304 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", span="478-478"];
m4_113 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="223-223"];
m4_114 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", color=green, community=0, file="ParserTests.cs", label="2: var expectedOptions = new Clone_Verb\r\n                                  {\r\n                                      Quiet = true,\r\n                                      Urls =\r\n                                          new[]\r\n                                          {\r\n                                              ''http://gsscoder.github.com/'',\r\n                                              ''http://yes-to-nooo.github.com/''\r\n                                          }\r\n                                  }", span="226-235"];
m4_115 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="var sut = new Parser()", span="236-236"];
m4_118 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="245-245"];
m4_116 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", color=green, community=0, file="ParserTests.cs", label="1: var result =\r\n                sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(\r\n                    new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' })", span="239-241"];
m4_117 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", color=green, community=0, file="ParserTests.cs", label="2: Assert.IsType<Clone_Verb>(((Parsed<object>)result).Value)", span="244-244"];
m4_119 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="223-223"];
m4_183 [cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="ParserTests.cs", label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15"];
m4_71 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="135-135"];
m4_72 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", color=green, community=0, file="ParserTests.cs", label="2: var expectedOptions = new Add_Verb { Patch = true, FileName = ''--strange-fn'' }", span="138-138"];
m4_73 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label="var sut = new Parser(with => with.EnableDashDash = true)", span="139-139"];
m4_76 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="150-150"];
m4_74 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", color=green, community=0, file="ParserTests.cs", label="1: var result = sut.ParseArguments(\r\n                new[] { ''add'', ''-p'', ''--'', ''--strange-fn'' },\r\n                typeof(Add_Verb),\r\n                typeof(Commit_Verb),\r\n                typeof(Clone_Verb))", span="142-146"];
m4_75 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", color=green, community=0, file="ParserTests.cs", label="2: Assert.IsType<Add_Verb>(((Parsed<object>)result).Value)", span="149-149"];
m4_77 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="135-135"];
m4_55 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", span="98-98"];
m4_58 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", file="ParserTests.cs", label="Assert.IsType<NotParsed<Options_With_Switches>>(result)", span="107-107"];
m4_57 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", file="ParserTests.cs", label="var result = sut.ParseArguments<Options_With_Switches>(new[] { ''-i'', ''-i'', ''-o'', ''file'' })", span="104-104"];
m4_56 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", file="ParserTests.cs", label="var sut = Parser.Default", span="101-101"];
m4_59 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", span="98-98"];
m4_7 [cluster="Ninject.Tests.Unit.StartableStrategyTests.WhenActivateIsCalled.StrategyStartsInstanceIfItIsStartable()", file="ParserTests.cs", label="var instance = new StartableObject()", span="27-27"];
m4_154 [cluster="Unk.BeGreaterThan", file="ParserTests.cs", label="Entry Unk.BeGreaterThan", span=""];
m4_158 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="297-297"];
m4_160 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="var sut = new Parser()", span="301-301"];
m4_163 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="((NotParsed<Simple_Options>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="308-308"];
m4_162 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="((NotParsed<Simple_Options>)result).Errors.Should().HaveCount(x => x == 1)", span="307-307"];
m4_159 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="var expectedError = new VersionRequestedError()", span="300-300"];
m4_161 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="var result = sut.ParseArguments<Simple_Options>(new[] { ''--version'' })", span="304-304"];
m4_164 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="297-297"];
m4_85 [cluster="Unk.RespectingRuntimeTypes", file="ParserTests.cs", label="Entry Unk.RespectingRuntimeTypes", span=""];
m4_129 [cluster="CommandLine.Tests.Fakes.Immutable_Simple_Options.Immutable_Simple_Options(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="ParserTests.cs", label="Entry CommandLine.Tests.Fakes.Immutable_Simple_Options.Immutable_Simple_Options(string, System.Collections.Generic.IEnumerable<int>, bool, long)", span="13-13"];
m4_165 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="ParserTests.cs", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="432-432"];
m4_48 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", span="83-83"];
m4_52 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", file="ParserTests.cs", label="((Parsed<Options_With_Switches>)result).Value.ShouldBeEquivalentTo(expectedOptions)", span="93-93"];
m4_50 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", file="ParserTests.cs", label="var sut = new Parser()", span="87-87"];
m4_49 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", file="ParserTests.cs", label="var expectedOptions = new Options_With_Switches { OutputFile = outputFile }", span="86-86"];
m4_51 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", file="ParserTests.cs", label="var result = sut.ParseArguments<Options_With_Switches>(args)", span="90-90"];
m4_53 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", span="83-83"];
m4_46 [cluster="CommandLine.Parser.Parser()", file="ParserTests.cs", label="Entry CommandLine.Parser.Parser()", span="26-26"];
m4_211 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="358-358"];
m4_214 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", color=green, community=0, file="ParserTests.cs", label="2: sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new[] { ''--help'' })", span="365-365"];
m4_213 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="362-362"];
m4_215 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="var result = help.ToString()", span="366-366"];
m4_212 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="var help = new StringWriter()", span="361-361"];
m4_216 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="369-369"];
m4_218 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="371-371"];
m4_219 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="372-372"];
m4_220 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="373-373"];
m4_221 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="374-374"];
m4_222 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="375-375"];
m4_223 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="376-376"];
m4_217 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="370-370"];
m4_224 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="358-358"];
m4_188 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="326-326"];
m4_26 [cluster="Ninject.Tests.Unit.StartableStrategyTests.WhenDeactivateIsCalled.StrategyStopsInstanceIfItIsStartable()", file="ParserTests.cs", label="this.strategy.Deactivate(this.contextMock.Object, reference)", span="52-52"];
m4_80 [cluster="lambda expression", file="ParserTests.cs", label="with.EnableDashDash = true", span="139-139"];
m4_82 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="150-150"];
m4_94 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="180-180"];
m4_105 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="202-202"];
m4_120 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="245-245"];
m4_209 [cluster="lambda expression", file="ParserTests.cs", label="config.HelpWriter = help", span="336-336"];
m4_226 [cluster="lambda expression", file="ParserTests.cs", label="config.HelpWriter = help", span="362-362"];
m4_239 [cluster="lambda expression", file="ParserTests.cs", label="config.HelpWriter = help", span="387-387"];
m4_272 [cluster="lambda expression", file="ParserTests.cs", label="config.HelpWriter = help", span="432-432"];
m4_322 [cluster="lambda expression", file="ParserTests.cs", label="opts.ShouldBeEquivalentTo(expected)", span="509-509"];
m4_319 [cluster="lambda expression", file="ParserTests.cs", label="config.IgnoreUnknownArguments = true", span="502-502"];
m4_321 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="509-509"];
m4_25 [cluster="Ninject.Tests.Unit.StartableStrategyTests.WhenDeactivateIsCalled.StrategyStopsInstanceIfItIsStartable()", file="ParserTests.cs", label="var reference = new InstanceReference { Instance = instance }", span="50-50"];
m4_27 [cluster="Ninject.Tests.Unit.StartableStrategyTests.WhenDeactivateIsCalled.StrategyStopsInstanceIfItIsStartable()", file="ParserTests.cs", label="instance.WasStopped.Should().BeTrue()", span="54-54"];
m4_38 [cluster="Ninject.Tests.Unit.StartableStrategyTests.StartableObject.Stop()", file="ParserTests.cs", label="Entry Ninject.Tests.Unit.StartableStrategyTests.StartableObject.Stop()", span="77-77"];
m4_79 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="139-139"];
m4_81 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="139-139"];
m4_310 [cluster="lambda expression", file="ParserTests.cs", label="opts.ShouldBeEquivalentTo(expected)", span="490-490"];
m4_84 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="150-150"];
m4_83 [cluster="lambda expression", file="ParserTests.cs", label="o.RespectingRuntimeTypes()", span="150-150"];
m4_96 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="180-180"];
m4_95 [cluster="lambda expression", file="ParserTests.cs", label="o.RespectingRuntimeTypes()", span="180-180"];
m4_107 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="202-202"];
m4_106 [cluster="lambda expression", file="ParserTests.cs", label="o.RespectingRuntimeTypes()", span="202-202"];
m4_122 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="245-245"];
m4_121 [cluster="lambda expression", file="ParserTests.cs", label="o.RespectingRuntimeTypes()", span="245-245"];
m4_208 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="336-336"];
m4_210 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="336-336"];
m4_225 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="362-362"];
m4_227 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="362-362"];
m4_238 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="387-387"];
m4_240 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="387-387"];
m4_271 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="432-432"];
m4_273 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="432-432"];
m4_323 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="509-509"];
m4_318 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="502-502"];
m4_320 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="502-502"];
m4_13 [cluster="Ninject.Activation.InstanceReference.InstanceReference()", file="ParserTests.cs", label="Entry Ninject.Activation.InstanceReference.InstanceReference()", span="16-16"];
m4_69 [cluster="lambda expression", file="ParserTests.cs", label="with.EnableDashDash = true", span="122-122"];
m4_156 [cluster="lambda expression", file="ParserTests.cs", label="config.HelpWriter = help", span="285-285"];
m4_186 [cluster="lambda expression", file="ParserTests.cs", label="config.HelpWriter = help", span="317-317"];
m4_262 [cluster="lambda expression", file="ParserTests.cs", label="config.HelpWriter = help", span="406-406"];
m4_297 [cluster="lambda expression", file="ParserTests.cs", label="config.HelpWriter = help", span="448-448"];
m4_307 [cluster="lambda expression", file="ParserTests.cs", label="config.IgnoreUnknownArguments = true", span="483-483"];
m4_309 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="490-490"];
m4_311 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="490-490"];
m4_241 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="396-396"];
m4_12 [cluster="Ninject.Tests.Unit.StartableStrategyTests.StartableObject.StartableObject()", file="ParserTests.cs", label="Entry Ninject.Tests.Unit.StartableStrategyTests.StartableObject.StartableObject()", span="67-67"];
m4_68 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="122-122"];
m4_70 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="122-122"];
m4_155 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="285-285"];
m4_157 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="285-285"];
m4_185 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="317-317"];
m4_187 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="317-317"];
m4_261 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="406-406"];
m4_263 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="406-406"];
m4_296 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="448-448"];
m4_298 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="448-448"];
m4_306 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="483-483"];
m4_308 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="483-483"];
m4_143 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="276-276"];
m4_140 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="275-275"];
m4_169 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="308-308"];
m4_166 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="307-307"];
m4_144 [cluster="lambda expression", file="ParserTests.cs", label="e.Equals(expectedError)", span="276-276"];
m4_170 [cluster="lambda expression", file="ParserTests.cs", label="e.Equals(expectedError)", span="308-308"];
m4_243 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="396-396"];
m4_242 [cluster="lambda expression", file="ParserTests.cs", label="x == 1", span="396-396"];
m4_145 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="276-276"];
m4_142 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="275-275"];
m4_141 [cluster="lambda expression", file="ParserTests.cs", label="x == 1", span="275-275"];
m4_171 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="308-308"];
m4_168 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="307-307"];
m4_167 [cluster="lambda expression", file="ParserTests.cs", label="x == 1", span="307-307"];
m4_189 [cluster="lambda expression", file="ParserTests.cs", label="x == 1", span="326-326"];
m4_190 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="326-326"];
m4_30 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="var sut = new Parser(with => with.HelpWriter = writer)", span="52-52"];
m4_31 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", color=green, community=0, file="ParserTests.cs", label="2: sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new string[] { })", span="55-55"];
m4_32 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="var text = writer.ToString()", span="58-58"];
m4_33 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="text.Should().NotBeEmpty()", span="59-59"];
m4_34 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="48-48"];
m4_244 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", span="402-402"];
m4_246 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="406-406"];
m4_248 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="var result = help.ToString()", span="410-410"];
m4_251 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="415-415"];
m4_252 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="416-416"];
m4_253 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="lines[3].ShouldBeEquivalentTo(''Option: 'weburl' is not compatible with: 'ftpurl'.'')", span="417-417"];
m4_254 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="lines[4].ShouldBeEquivalentTo(''Option: 'ftpurl' is not compatible with: 'weburl'.'')", span="418-418"];
m4_255 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="lines[5].ShouldBeEquivalentTo(''--weburl     Required.'')", span="419-419"];
m4_256 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="lines[6].ShouldBeEquivalentTo(''--ftpurl     Required.'')", span="420-420"];
m4_257 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="lines[7].ShouldBeEquivalentTo(''-a'')", span="421-421"];
m4_258 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="lines[8].ShouldBeEquivalentTo(''--help       Display this help screen.'')", span="422-422"];
m4_259 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="lines[9].ShouldBeEquivalentTo(''--version    Display version information.'')", span="423-423"];
m4_245 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="var help = new StringWriter()", span="405-405"];
m4_247 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="sut.ParseArguments<Options_With_Two_Option_Required_Set_To_True_And_Two_Sets>(new[] { ''--weburl=value.com'', ''--ftpurl=value.org'' })", span="409-409"];
m4_250 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="414-414"];
m4_249 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="413-413"];
m4_260 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", span="402-402"];
m4_93 [cluster="CommandLine.Tests.Fakes.Clone_Verb.Clone_Verb()", file="ParserTests.cs", label="Entry CommandLine.Tests.Fakes.Clone_Verb.Clone_Verb()", span="36-36"];
m4_28 [cluster="Ninject.Tests.Unit.StartableStrategyTests.WhenDeactivateIsCalled.StrategyStopsInstanceIfItIsStartable()", file="ParserTests.cs", label="Exit Ninject.Tests.Unit.StartableStrategyTests.WhenDeactivateIsCalled.StrategyStopsInstanceIfItIsStartable()", span="47-47"];
m4_29 [cluster="Unk.Deactivate", file="ParserTests.cs", label="Entry Unk.Deactivate", span=""];
m4_23 [cluster="Ninject.Tests.Unit.StartableStrategyTests.WhenDeactivateIsCalled.StrategyStopsInstanceIfItIsStartable()", file="ParserTests.cs", label="Entry Ninject.Tests.Unit.StartableStrategyTests.WhenDeactivateIsCalled.StrategyStopsInstanceIfItIsStartable()", span="47-47"];
m4_15 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="32-32"];
m4_146 [cluster="Unk.Equals", file="ParserTests.cs", label="Entry Unk.Equals", span=""];
m4_24 [cluster="Ninject.Tests.Unit.StartableStrategyTests.WhenDeactivateIsCalled.StrategyStopsInstanceIfItIsStartable()", file="ParserTests.cs", label="var instance = new StartableObject()", span="49-49"];
m4_10 [cluster="System.IO.StringWriter.ToString()", file="ParserTests.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m4_9 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="ParserTests.cs", label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85"];
m4_11 [cluster="Ninject.Tests.Unit.StartableStrategyTests.WhenActivateIsCalled.StrategyStartsInstanceIfItIsStartable()", file="ParserTests.cs", label="Exit Ninject.Tests.Unit.StartableStrategyTests.WhenActivateIsCalled.StrategyStartsInstanceIfItIsStartable()", span="25-25"];
m4_184 [cluster="Unk.StartWithEquivalent", file="ParserTests.cs", label="Entry Unk.StartWithEquivalent", span=""];
m4_138 [cluster="Unk.HaveCount", file="ParserTests.cs", label="Entry Unk.HaveCount", span=""];
m4_39 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options()", span="64-64"];
m4_40 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="var expectedOptions = new Simple_Options { StringValue = ''strvalue'', IntSequence = new[] { 1, 2, 3 } }", span="67-67"];
m4_43 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="Ninject.Tests.Unit.StartableStrategyTests.WhenDeactivateIsCalled", span=""];
m4_41 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="Ninject.Tests.Unit.StartableStrategyTests.StartableStrategyContext", span=""];
m4_42 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="Ninject.Tests.Unit.StartableStrategyTests.WhenActivateIsCalled", span=""];
m4_44 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="Ninject.Tests.Unit.StartableStrategyTests.StartableObject", span=""];
m4_172 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="313-313"];
m4_174 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="317-317"];
m4_176 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="var result = help.ToString()", span="321-321"];
m4_173 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="var help = new StringWriter()", span="316-316"];
m4_175 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="sut.ParseArguments<Simple_Options>(new[] { ''--version'' })", span="320-320"];
m4_177 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="result.Length.Should().BeGreaterThan(0)", span="324-324"];
m4_179 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="lines.Should().HaveCount(x => x == 1)", span="326-326"];
m4_180 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="327-327"];
m4_178 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="325-325"];
m4_181 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="313-313"];
m4_123 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="250-250"];
m4_127 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="((Parsed<Immutable_Simple_Options>)result).Value.ShouldBeEquivalentTo(expectedOptions)", span="260-260"];
m4_125 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="var sut = new Parser()", span="254-254"];
m4_124 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="var expectedOptions = new Immutable_Simple_Options(''strvalue'', new[] { 1, 2, 3 }, default(bool), default(long))", span="253-253"];
m4_126 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="var result = sut.ParseArguments<Immutable_Simple_Options>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="257-257"];
m4_128 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="250-250"];
m4_182 [cluster="string.ToNotEmptyLines()", file="ParserTests.cs", label="Entry string.ToNotEmptyLines()", span="10-10"];
m4_104 [cluster="CommandLine.Tests.Fakes.Commit_Verb.Commit_Verb()", file="ParserTests.cs", label="Entry CommandLine.Tests.Fakes.Commit_Verb.Commit_Verb()", span="22-22"];
m4_54 [cluster="CommandLine.Tests.Fakes.Options_With_Switches.Options_With_Switches()", file="ParserTests.cs", label="Entry CommandLine.Tests.Fakes.Options_With_Switches.Options_With_Switches()", span="4-4"];
m4_305 [cluster="Unk.WithParsed", file="ParserTests.cs", label="Entry Unk.WithParsed", span=""];
m4_86 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="155-155"];
m4_87 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", color=green, community=0, file="ParserTests.cs", label="2: var expectedOptions = new Clone_Verb\r\n                                  {\r\n                                      Quiet = true,\r\n                                      Urls =\r\n                                          new[]\r\n                                          {\r\n                                              ''http://gsscoder.github.com/'',\r\n                                              ''http://yes-to-nooo.github.com/''\r\n                                          }\r\n                                  }", span="158-167"];
m4_88 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="var sut = new Parser()", span="168-168"];
m4_91 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="180-180"];
m4_89 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", color=green, community=0, file="ParserTests.cs", label="1: var result =\r\n                sut.ParseArguments(\r\n                    new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' },\r\n                    typeof(Add_Verb),\r\n                    typeof(Commit_Verb),\r\n                    typeof(Clone_Verb))", span="171-176"];
m4_90 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", color=green, community=0, file="ParserTests.cs", label="2: Assert.IsType<Clone_Verb>(((Parsed<object>)result).Value)", span="179-179"];
m4_92 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="155-155"];
m4_228 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", span="383-383"];
m4_231 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", color=green, community=0, file="ParserTests.cs", label="2: sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new[] { command })", span="390-390"];
m4_230 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="387-387"];
m4_232 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="var result = help.ToString()", span="391-391"];
m4_229 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="var help = new StringWriter()", span="386-386"];
m4_233 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="result.Length.Should().BeGreaterThan(0)", span="394-394"];
m4_234 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="395-395"];
m4_236 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="397-397"];
m4_235 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="lines.Should().HaveCount(x => x == 1)", span="396-396"];
m4_237 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", span="383-383"];
m4_45 [cluster="CommandLine.Tests.Fakes.Simple_Options.Simple_Options()", file="ParserTests.cs", label="Entry CommandLine.Tests.Fakes.Simple_Options.Simple_Options()", span="6-6"];
m4_137 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="ParserTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368"];
m4_47 [cluster="Unk.ShouldBeEquivalentTo", file="ParserTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m4_325 [file="ParserTests.cs", label=writer, span=""];
m4_326 [file="ParserTests.cs", label=writer, span=""];
m4_331 [file="ParserTests.cs", label=help, span=""];
m4_332 [file="ParserTests.cs", label=help, span=""];
m4_333 [file="ParserTests.cs", label=help, span=""];
m4_335 [file="ParserTests.cs", label=help, span=""];
m4_338 [file="ParserTests.cs", label="CommandLine.Tests.Fakes.Commit_Verb", span=""];
m4_337 [file="ParserTests.cs", label="CommandLine.Tests.Fakes.Simple_Options", span=""];
m4_324 [file="ParserTests.cs", label=writer, span=""];
m4_328 [file="ParserTests.cs", label=help, span=""];
m4_330 [file="ParserTests.cs", label=help, span=""];
m4_334 [file="ParserTests.cs", label=help, span=""];
m4_336 [file="ParserTests.cs", label=help, span=""];
m4_327 [file="ParserTests.cs", label=expectedError, span=""];
m4_329 [file="ParserTests.cs", label=expectedError, span=""];
m5_7 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.Add_Verb, string)", color=green, community=0, file="UnParserExtensionsTests.cs", label="2: new Parser()\r\n                .FormatCommandLine(verb)\r\n                .ShouldBeEquivalentTo(result)", span="26-28"];
m5_22 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="config.GroupSwitches = true", span="54-54"];
m5_23 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Exit lambda expression", span="54-54"];
m5_24 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", span="59-59"];
m5_15 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModuleMock(string)", file="UnParserExtensionsTests.cs", label="Exit Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.CreateModuleMock(string)", span="27-27"];
m5_17 [cluster="Unk.SetupGet", file="UnParserExtensionsTests.cs", label="Entry Unk.SetupGet", span=""];
m5_16 [cluster="Mock<INinjectModule>.cstr", file="UnParserExtensionsTests.cs", label="Entry Mock<INinjectModule>.cstr", span=""];
m5_18 [cluster="Unk.Returns", file="UnParserExtensionsTests.cs", label="Entry Unk.Returns", span=""];
m5_4 [cluster="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.Dispose()", file="UnParserExtensionsTests.cs", label="Entry Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext.Dispose()", span="15-15"];
m5_3 [cluster="Ninject.KernelConfiguration.KernelConfiguration(params Ninject.Modules.INinjectModule[])", file="UnParserExtensionsTests.cs", label="Entry Ninject.KernelConfiguration.KernelConfiguration(params Ninject.Modules.INinjectModule[])", span="39-39"];
m5_29 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Entry lambda expression", span="63-63"];
m5_19 [cluster="CommandLine.Tests.Fakes.Options_With_Switches.Options_With_Switches()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Fakes.Options_With_Switches.Options_With_Switches()", span="4-4"];
m5_20 [cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="95-95"];
m5_21 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Entry lambda expression", span="54-54"];
m5_30 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="config.UseEqualToken = true", span="63-63"];
m5_31 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Exit lambda expression", span="63-63"];
m5_5 [cluster="Unk.ShouldBeEquivalentTo", file="UnParserExtensionsTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m5_6 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.Add_Verb, string)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.Add_Verb, string)", span="24-24"];
m5_11 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.Immutable_Simple_Options, string)", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.Immutable_Simple_Options, string)", span="33-33"];
m5_12 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.Options_With_FSharpOption, string)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.Options_With_FSharpOption, string)", span="42-42"];
m5_13 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.Options_With_FSharpOption, string)", file="UnParserExtensionsTests.cs", label="new Parser()\r\n                .FormatCommandLine(options)\r\n                .ShouldBeEquivalentTo(result)", span="44-46"];
m5_14 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.Options_With_FSharpOption, string)", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.Options_With_FSharpOption, string)", span="42-42"];
m5_0 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.Simple_Options, string)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.Simple_Options, string)", span="15-15"];
m5_1 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.Simple_Options, string)", file="UnParserExtensionsTests.cs", label="new Parser()\r\n                .FormatCommandLine(options)\r\n                .ShouldBeEquivalentTo(result)", span="17-19"];
m5_2 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.Simple_Options, string)", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.Simple_Options, string)", span="15-15"];
m5_8 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.Add_Verb, string)", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.Add_Verb, string)", span="24-24"];
m5_9 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.Immutable_Simple_Options, string)", color=red, community=0, file="UnParserExtensionsTests.cs", label="1: Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.Immutable_Simple_Options, string)", span="33-33"];
m5_10 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.Immutable_Simple_Options, string)", file="UnParserExtensionsTests.cs", label="new Parser()\r\n                .FormatCommandLine(options)\r\n                .ShouldBeEquivalentTo(result)", span="35-37"];
m5_28 [cluster="CommandLine.Tests.Fakes.Simple_Options.Simple_Options()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Fakes.Simple_Options.Simple_Options()", span="6-6"];
m5_26 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", file="UnParserExtensionsTests.cs", label="new Parser()\r\n                .FormatCommandLine(options, config => config.UseEqualToken = true)\r\n                .ShouldBeEquivalentTo(''-i 1 2 3 --stringvalue=nospaces -x 123456789'')", span="62-64"];
m5_25 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", file="UnParserExtensionsTests.cs", label="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext", span=""];
m5_27 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", span="59-59"];
n27 -> n5  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.Binding", style=dashed];
n27 -> n6  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.Binding", style=dashed];
n27 -> n7  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.Binding", style=dashed];
n27 -> n8  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.Binding", style=dashed];
n27 -> n9  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.Binding", style=dashed];
n27 -> n10  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.Binding", style=dashed];
n27 -> n16  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.Binding", style=dashed];
n27 -> n21  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.Binding", style=dashed];
n27 -> n25  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.Binding", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n2 -> n4  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBindingMetadata", style=dashed];
n2 -> n5  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n2 -> n6  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBindingMetadata", style=dashed];
n3 -> n4  [key=0, style=solid];
n3 -> n12  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n12  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n13  [key=2, style=dotted];
n8 -> n9  [key=0, style=solid];
n8 -> n13  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n9 -> n13  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n11 -> n2  [color=blue, key=0, style=bold];
n14 -> n15  [key=0, style=solid];
n14 -> n16  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
n15 -> n16  [key=0, style=solid];
n15 -> n12  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=2, style=dotted];
n17 -> n14  [color=blue, key=0, style=bold];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
n20 -> n21  [key=0, style=solid];
n20 -> n12  [key=2, style=dotted];
n21 -> n22  [key=0, style=solid];
n21 -> n18  [key=2, style=dotted];
n22 -> n19  [color=blue, key=0, style=bold];
n23 -> n24  [key=0, style=solid];
n23 -> n25  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
n24 -> n25  [key=0, style=solid];
n24 -> n12  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid];
n25 -> n18  [key=2, style=dotted];
n26 -> n23  [color=blue, key=0, style=bold];
d176 -> d177  [color=green, key=0, style=solid];
d176 -> d74  [color=green, key=2, style=dotted];
d292 -> d176  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d3  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d8  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d12  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d13  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d23  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d24  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d33  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d34  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d45  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d46  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d55  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d56  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d70  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d71  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d77  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d78  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d88  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d89  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d99  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d100  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d106  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d107  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d115  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d116  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d124  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d129  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d130  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d134  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d135  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d140  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d141  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d150  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d151  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d156  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d157  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d165  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d166  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d170  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d171  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d175  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d180  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d181  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d185  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d186  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d190  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d191  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d195  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d196  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d200  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d201  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d206  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d207  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d216  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d217  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d222  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d223  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d228  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d229  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d234  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d235  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d240  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d241  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d246  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d247  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d252  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d253  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d258  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d259  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d264  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d265  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d270  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d271  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d276  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d277  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d282  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d283  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d288  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d292 -> d289  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
d175 -> d176  [color=green, key=0, style=solid];
d175 -> d6  [key=2, style=dotted];
d177 -> d173  [color=blue, key=0, style=bold];
d189 -> d190  [color=green, key=0, style=solid];
d189 -> d94  [color=green, key=2, style=dotted];
d188 -> d189  [color=green, key=0, style=solid];
d190 -> d191  [key=0, style=solid];
d190 -> d6  [key=2, style=dotted];
d3 -> d4  [key=0, style=solid];
d3 -> d5  [key=2, style=dotted];
d3 -> d6  [key=2, style=dotted];
d8 -> d9  [key=0, style=solid];
d8 -> d6  [key=2, style=dotted];
d12 -> d13  [key=0, style=solid];
d12 -> d6  [key=2, style=dotted];
d13 -> d14  [key=0, style=solid];
d13 -> d17  [key=2, style=dotted];
d23 -> d24  [key=0, style=solid];
d23 -> d6  [key=2, style=dotted];
d24 -> d25  [key=0, style=solid];
d24 -> d17  [key=2, style=dotted];
d33 -> d34  [key=0, style=solid];
d33 -> d6  [key=2, style=dotted];
d34 -> d35  [key=0, style=solid];
d34 -> d17  [key=2, style=dotted];
d45 -> d46  [key=0, style=solid];
d45 -> d6  [key=2, style=dotted];
d46 -> d47  [key=0, style=solid];
d46 -> d17  [key=2, style=dotted];
d55 -> d56  [key=0, style=solid];
d55 -> d6  [key=2, style=dotted];
d56 -> d57  [key=0, style=solid];
d56 -> d17  [key=2, style=dotted];
d70 -> d71  [key=0, style=solid];
d70 -> d6  [key=2, style=dotted];
d71 -> d74  [key=2, style=dotted];
d71 -> d72  [key=0, style=solid];
d77 -> d78  [key=0, style=solid];
d77 -> d6  [key=2, style=dotted];
d78 -> d79  [key=0, style=solid];
d78 -> d17  [key=2, style=dotted];
d88 -> d89  [key=0, style=solid];
d88 -> d6  [key=2, style=dotted];
d89 -> d90  [key=0, style=solid];
d89 -> d17  [key=2, style=dotted];
d99 -> d100  [key=0, style=solid];
d99 -> d6  [key=2, style=dotted];
d100 -> d101  [key=0, style=solid];
d100 -> d17  [key=2, style=dotted];
d106 -> d107  [key=0, style=solid];
d106 -> d6  [key=2, style=dotted];
d107 -> d108  [key=0, style=solid];
d107 -> d17  [key=2, style=dotted];
d115 -> d116  [key=0, style=solid];
d115 -> d6  [key=2, style=dotted];
d116 -> d117  [key=0, style=solid];
d116 -> d17  [key=2, style=dotted];
d124 -> d125  [key=0, style=solid];
d124 -> d6  [key=2, style=dotted];
d129 -> d130  [key=0, style=solid];
d129 -> d6  [key=2, style=dotted];
d130 -> d74  [key=2, style=dotted];
d130 -> d131  [key=0, style=solid];
d134 -> d135  [key=0, style=solid];
d134 -> d6  [key=2, style=dotted];
d135 -> d74  [key=2, style=dotted];
d135 -> d136  [key=0, style=solid];
d140 -> d141  [key=0, style=solid];
d140 -> d6  [key=2, style=dotted];
d141 -> d142  [key=0, style=solid];
d141 -> d17  [key=2, style=dotted];
d150 -> d151  [key=0, style=solid];
d150 -> d6  [key=2, style=dotted];
d151 -> d74  [key=2, style=dotted];
d151 -> d152  [key=0, style=solid];
d156 -> d157  [key=0, style=solid];
d156 -> d6  [key=2, style=dotted];
d157 -> d158  [key=0, style=solid];
d157 -> d17  [key=2, style=dotted];
d165 -> d166  [key=0, style=solid];
d165 -> d6  [key=2, style=dotted];
d166 -> d74  [key=2, style=dotted];
d166 -> d167  [key=0, style=solid];
d170 -> d171  [key=0, style=solid];
d170 -> d6  [key=2, style=dotted];
d171 -> d74  [key=2, style=dotted];
d171 -> d172  [key=0, style=solid];
d180 -> d181  [key=0, style=solid];
d180 -> d6  [key=2, style=dotted];
d181 -> d74  [key=2, style=dotted];
d181 -> d182  [key=0, style=solid];
d185 -> d186  [key=0, style=solid];
d185 -> d6  [key=2, style=dotted];
d186 -> d74  [key=2, style=dotted];
d186 -> d187  [key=0, style=solid];
d191 -> d74  [key=2, style=dotted];
d191 -> d192  [key=0, style=solid];
d195 -> d196  [key=0, style=solid];
d195 -> d6  [key=2, style=dotted];
d196 -> d74  [key=2, style=dotted];
d196 -> d197  [key=0, style=solid];
d200 -> d201  [key=0, style=solid];
d200 -> d6  [key=2, style=dotted];
d201 -> d202  [key=0, style=solid];
d201 -> d17  [key=2, style=dotted];
d206 -> d207  [key=0, style=solid];
d206 -> d6  [key=2, style=dotted];
d207 -> d208  [key=0, style=solid];
d207 -> d17  [key=2, style=dotted];
d216 -> d217  [key=0, style=solid];
d216 -> d6  [key=2, style=dotted];
d217 -> d218  [key=0, style=solid];
d217 -> d17  [key=2, style=dotted];
d222 -> d223  [key=0, style=solid];
d222 -> d6  [key=2, style=dotted];
d223 -> d224  [key=0, style=solid];
d223 -> d17  [key=2, style=dotted];
d228 -> d229  [key=0, style=solid];
d228 -> d6  [key=2, style=dotted];
d229 -> d230  [key=0, style=solid];
d229 -> d17  [key=2, style=dotted];
d234 -> d235  [key=0, style=solid];
d234 -> d6  [key=2, style=dotted];
d235 -> d236  [key=0, style=solid];
d235 -> d17  [key=2, style=dotted];
d240 -> d241  [key=0, style=solid];
d240 -> d6  [key=2, style=dotted];
d241 -> d242  [key=0, style=solid];
d241 -> d17  [key=2, style=dotted];
d246 -> d247  [key=0, style=solid];
d246 -> d6  [key=2, style=dotted];
d247 -> d248  [key=0, style=solid];
d247 -> d17  [key=2, style=dotted];
d252 -> d253  [key=0, style=solid];
d252 -> d6  [key=2, style=dotted];
d253 -> d254  [key=0, style=solid];
d253 -> d17  [key=2, style=dotted];
d258 -> d259  [key=0, style=solid];
d258 -> d6  [key=2, style=dotted];
d259 -> d260  [key=0, style=solid];
d259 -> d17  [key=2, style=dotted];
d264 -> d265  [key=0, style=solid];
d264 -> d267  [key=2, style=dotted];
d264 -> d6  [key=2, style=dotted];
d265 -> d74  [key=2, style=dotted];
d265 -> d266  [key=0, style=solid];
d270 -> d271  [key=0, style=solid];
d270 -> d273  [key=2, style=dotted];
d270 -> d6  [key=2, style=dotted];
d271 -> d74  [key=2, style=dotted];
d271 -> d272  [key=0, style=solid];
d276 -> d277  [key=0, style=solid];
d276 -> d279  [key=2, style=dotted];
d276 -> d6  [key=2, style=dotted];
d277 -> d74  [key=2, style=dotted];
d277 -> d278  [key=0, style=solid];
d282 -> d283  [key=0, style=solid];
d282 -> d285  [key=2, style=dotted];
d282 -> d6  [key=2, style=dotted];
d283 -> d74  [key=2, style=dotted];
d283 -> d284  [key=0, style=solid];
d288 -> d289  [key=0, style=solid];
d288 -> d291  [key=2, style=dotted];
d288 -> d6  [key=2, style=dotted];
d289 -> d74  [key=2, style=dotted];
d289 -> d290  [key=0, style=solid];
d174 -> d175  [key=0, style=solid];
d174 -> d94  [key=2, style=dotted];
d173 -> d174  [key=0, style=solid];
d192 -> d188  [color=blue, key=0, style=bold];
d87 -> d94  [key=2, style=dotted];
d87 -> d88  [key=0, style=solid];
d87 -> d90  [color=darkseagreen4, key=1, label=options, style=dashed];
d98 -> d94  [key=2, style=dotted];
d98 -> d99  [key=0, style=solid];
d98 -> d101  [color=darkseagreen4, key=1, label=options, style=dashed];
d169 -> d94  [key=2, style=dotted];
d169 -> d170  [key=0, style=solid];
d179 -> d94  [key=2, style=dotted];
d179 -> d180  [key=0, style=solid];
d184 -> d94  [key=2, style=dotted];
d184 -> d185  [key=0, style=solid];
d194 -> d94  [key=2, style=dotted];
d194 -> d195  [key=0, style=solid];
d221 -> d94  [key=2, style=dotted];
d221 -> d222  [key=0, style=solid];
d221 -> d224  [color=darkseagreen4, key=1, label=options, style=dashed];
d227 -> d94  [key=2, style=dotted];
d227 -> d228  [key=0, style=solid];
d227 -> d230  [color=darkseagreen4, key=1, label=options, style=dashed];
d233 -> d94  [key=2, style=dotted];
d233 -> d234  [key=0, style=solid];
d233 -> d236  [color=darkseagreen4, key=1, label=options, style=dashed];
d239 -> d94  [key=2, style=dotted];
d239 -> d240  [key=0, style=solid];
d239 -> d242  [color=darkseagreen4, key=1, label=options, style=dashed];
d245 -> d94  [key=2, style=dotted];
d245 -> d246  [key=0, style=solid];
d245 -> d248  [color=darkseagreen4, key=1, label=options, style=dashed];
d251 -> d94  [key=2, style=dotted];
d251 -> d252  [key=0, style=solid];
d251 -> d254  [color=darkseagreen4, key=1, label=options, style=dashed];
d257 -> d94  [key=2, style=dotted];
d257 -> d258  [key=0, style=solid];
d257 -> d260  [color=darkseagreen4, key=1, label=options, style=dashed];
d263 -> d94  [key=2, style=dotted];
d263 -> d264  [key=0, style=solid];
d269 -> d94  [key=2, style=dotted];
d269 -> d270  [key=0, style=solid];
d275 -> d94  [key=2, style=dotted];
d275 -> d276  [key=0, style=solid];
d281 -> d94  [key=2, style=dotted];
d281 -> d282  [key=0, style=solid];
d287 -> d94  [key=2, style=dotted];
d287 -> d288  [key=0, style=solid];
d2 -> d3  [key=0, style=solid];
d4 -> d2  [color=blue, key=0, style=bold];
d7 -> d8  [key=0, style=solid];
d9 -> d7  [color=blue, key=0, style=bold];
d11 -> d12  [key=0, style=solid];
d11 -> d5  [key=2, style=dotted];
d11 -> d14  [color=darkseagreen4, key=1, label=options, style=dashed];
d11 -> d15  [color=darkseagreen4, key=1, label=options, style=dashed];
d14 -> d15  [key=0, style=solid];
d14 -> d18  [key=2, style=dotted];
d14 -> d19  [key=2, style=dotted];
d22 -> d23  [key=0, style=solid];
d22 -> d5  [key=2, style=dotted];
d22 -> d25  [color=darkseagreen4, key=1, label=options, style=dashed];
d22 -> d26  [color=darkseagreen4, key=1, label=options, style=dashed];
d22 -> d27  [color=darkseagreen4, key=1, label=options, style=dashed];
d22 -> d28  [color=darkseagreen4, key=1, label=options, style=dashed];
d25 -> d26  [key=0, style=solid];
d25 -> d18  [key=2, style=dotted];
d25 -> d19  [key=2, style=dotted];
d32 -> d33  [key=0, style=solid];
d32 -> d41  [key=2, style=dotted];
d32 -> d35  [color=darkseagreen4, key=1, label=options, style=dashed];
d32 -> d36  [color=darkseagreen4, key=1, label=options, style=dashed];
d32 -> d37  [color=darkseagreen4, key=1, label=options, style=dashed];
d32 -> d38  [color=darkseagreen4, key=1, label=options, style=dashed];
d32 -> d39  [color=darkseagreen4, key=1, label=options, style=dashed];
d35 -> d36  [key=0, style=solid];
d35 -> d18  [key=2, style=dotted];
d35 -> d30  [key=2, style=dotted];
d44 -> d45  [key=0, style=solid];
d44 -> d41  [key=2, style=dotted];
d44 -> d47  [color=darkseagreen4, key=1, label=options, style=dashed];
d44 -> d48  [color=darkseagreen4, key=1, label=options, style=dashed];
d44 -> d49  [color=darkseagreen4, key=1, label=options, style=dashed];
d44 -> d50  [color=darkseagreen4, key=1, label=options, style=dashed];
d44 -> d51  [color=darkseagreen4, key=1, label=options, style=dashed];
d47 -> d48  [key=0, style=solid];
d47 -> d18  [key=2, style=dotted];
d47 -> d30  [key=2, style=dotted];
d54 -> d55  [key=0, style=solid];
d54 -> d66  [key=2, style=dotted];
d54 -> d57  [color=darkseagreen4, key=1, label=options, style=dashed];
d54 -> d58  [color=darkseagreen4, key=1, label=options, style=dashed];
d54 -> d59  [color=darkseagreen4, key=1, label=options, style=dashed];
d54 -> d60  [color=darkseagreen4, key=1, label=options, style=dashed];
d54 -> d61  [color=darkseagreen4, key=1, label=options, style=dashed];
d54 -> d62  [color=darkseagreen4, key=1, label=options, style=dashed];
d54 -> d63  [color=darkseagreen4, key=1, label=options, style=dashed];
d54 -> d64  [color=darkseagreen4, key=1, label=options, style=dashed];
d57 -> d58  [key=0, style=solid];
d57 -> d18  [key=2, style=dotted];
d57 -> d19  [key=2, style=dotted];
d69 -> d70  [key=0, style=solid];
d69 -> d5  [key=2, style=dotted];
d69 -> d72  [color=darkseagreen4, key=1, label=options, style=dashed];
d72 -> d73  [key=0, style=solid];
d72 -> d20  [key=2, style=dotted];
d76 -> d77  [key=0, style=solid];
d76 -> d83  [key=2, style=dotted];
d76 -> d79  [color=darkseagreen4, key=1, label=options, style=dashed];
d76 -> d80  [color=darkseagreen4, key=1, label=options, style=dashed];
d76 -> d81  [color=darkseagreen4, key=1, label=options, style=dashed];
d79 -> d80  [key=0, style=solid];
d79 -> d18  [key=2, style=dotted];
d79 -> d19  [key=2, style=dotted];
d90 -> d91  [key=0, style=solid];
d90 -> d18  [key=2, style=dotted];
d90 -> d19  [key=2, style=dotted];
d101 -> d102  [key=0, style=solid];
d101 -> d18  [key=2, style=dotted];
d101 -> d19  [key=2, style=dotted];
d105 -> d106  [key=0, style=solid];
d105 -> d112  [key=2, style=dotted];
d105 -> d108  [color=darkseagreen4, key=1, label=options, style=dashed];
d105 -> d109  [color=darkseagreen4, key=1, label=options, style=dashed];
d105 -> d110  [color=darkseagreen4, key=1, label=options, style=dashed];
d108 -> d109  [key=0, style=solid];
d108 -> d18  [key=2, style=dotted];
d108 -> d19  [key=2, style=dotted];
d114 -> d115  [key=0, style=solid];
d114 -> d121  [key=2, style=dotted];
d114 -> d117  [color=darkseagreen4, key=1, label=options, style=dashed];
d114 -> d118  [color=darkseagreen4, key=1, label=options, style=dashed];
d114 -> d119  [color=darkseagreen4, key=1, label=options, style=dashed];
d117 -> d118  [key=0, style=solid];
d117 -> d18  [key=2, style=dotted];
d117 -> d19  [key=2, style=dotted];
d123 -> d124  [key=0, style=solid];
d123 -> d126  [key=2, style=dotted];
d125 -> d122  [color=blue, key=0, style=bold];
d128 -> d129  [key=0, style=solid];
d128 -> d5  [key=2, style=dotted];
d131 -> d127  [color=blue, key=0, style=bold];
d133 -> d134  [key=0, style=solid];
d133 -> d5  [key=2, style=dotted];
d136 -> d132  [color=blue, key=0, style=bold];
d138 -> d140  [color=darkseagreen4, key=1, label=local, style=dashed];
d138 -> d139  [key=0, style=solid];
d138 -> d145  [key=2, style=dotted];
d139 -> d140  [key=0, style=solid];
d139 -> d146  [key=2, style=dotted];
d139 -> d142  [color=darkseagreen4, key=1, label=options, style=dashed];
d139 -> d143  [color=darkseagreen4, key=1, label=options, style=dashed];
d142 -> d143  [key=0, style=solid];
d142 -> d18  [key=2, style=dotted];
d142 -> d19  [key=2, style=dotted];
d148 -> d150  [color=darkseagreen4, key=1, label=local, style=dashed];
d148 -> d149  [key=0, style=solid];
d148 -> d145  [key=2, style=dotted];
d149 -> d150  [key=0, style=solid];
d149 -> d146  [key=2, style=dotted];
d152 -> d147  [color=blue, key=0, style=bold];
d154 -> d156  [color=darkseagreen4, key=1, label=local, style=dashed];
d154 -> d155  [key=0, style=solid];
d154 -> d161  [key=2, style=dotted];
d154 -> d162  [key=2, style=dotted];
d155 -> d156  [key=0, style=solid];
d155 -> d146  [key=2, style=dotted];
d155 -> d158  [color=darkseagreen4, key=1, label=options, style=dashed];
d155 -> d159  [color=darkseagreen4, key=1, label=options, style=dashed];
d158 -> d159  [key=0, style=solid];
d158 -> d18  [key=2, style=dotted];
d158 -> d19  [key=2, style=dotted];
d164 -> d165  [key=0, style=solid];
d164 -> d5  [key=2, style=dotted];
d167 -> d163  [color=blue, key=0, style=bold];
d172 -> d168  [color=blue, key=0, style=bold];
d182 -> d178  [color=blue, key=0, style=bold];
d187 -> d183  [color=blue, key=0, style=bold];
d197 -> d193  [color=blue, key=0, style=bold];
d199 -> d200  [key=0, style=solid];
d199 -> d5  [key=2, style=dotted];
d199 -> d202  [color=darkseagreen4, key=1, label=options, style=dashed];
d202 -> d203  [key=0, style=solid];
d202 -> d18  [key=2, style=dotted];
d202 -> d19  [key=2, style=dotted];
d205 -> d206  [key=0, style=solid];
d205 -> d213  [key=2, style=dotted];
d205 -> d208  [color=darkseagreen4, key=1, label=options, style=dashed];
d205 -> d209  [color=darkseagreen4, key=1, label=options, style=dashed];
d205 -> d210  [color=darkseagreen4, key=1, label=options, style=dashed];
d205 -> d211  [color=darkseagreen4, key=1, label=options, style=dashed];
d208 -> d209  [key=0, style=solid];
d208 -> d18  [key=2, style=dotted];
d208 -> d19  [key=2, style=dotted];
d215 -> d216  [key=0, style=solid];
d215 -> d5  [key=2, style=dotted];
d215 -> d218  [color=darkseagreen4, key=1, label=options, style=dashed];
d218 -> d219  [key=0, style=solid];
d218 -> d18  [key=2, style=dotted];
d218 -> d19  [key=2, style=dotted];
d224 -> d225  [key=0, style=solid];
d224 -> d18  [key=2, style=dotted];
d224 -> d19  [key=2, style=dotted];
d230 -> d231  [key=0, style=solid];
d230 -> d18  [key=2, style=dotted];
d230 -> d19  [key=2, style=dotted];
d236 -> d237  [key=0, style=solid];
d236 -> d18  [key=2, style=dotted];
d236 -> d19  [key=2, style=dotted];
d242 -> d243  [key=0, style=solid];
d242 -> d18  [key=2, style=dotted];
d242 -> d19  [key=2, style=dotted];
d248 -> d249  [key=0, style=solid];
d248 -> d18  [key=2, style=dotted];
d248 -> d19  [key=2, style=dotted];
d254 -> d255  [key=0, style=solid];
d254 -> d18  [key=2, style=dotted];
d254 -> d19  [key=2, style=dotted];
d260 -> d261  [key=0, style=solid];
d260 -> d18  [key=2, style=dotted];
d260 -> d19  [key=2, style=dotted];
d266 -> d262  [color=blue, key=0, style=bold];
d272 -> d268  [color=blue, key=0, style=bold];
d278 -> d274  [color=blue, key=0, style=bold];
d284 -> d280  [color=blue, key=0, style=bold];
d290 -> d286  [color=blue, key=0, style=bold];
d86 -> d87  [key=0, style=solid];
d86 -> d93  [key=2, style=dotted];
d97 -> d98  [key=0, style=solid];
d97 -> d93  [key=2, style=dotted];
d168 -> d169  [key=0, style=solid];
d178 -> d179  [key=0, style=solid];
d183 -> d184  [key=0, style=solid];
d193 -> d194  [key=0, style=solid];
d220 -> d221  [key=0, style=solid];
d226 -> d227  [key=0, style=solid];
d232 -> d233  [key=0, style=solid];
d238 -> d239  [key=0, style=solid];
d244 -> d245  [key=0, style=solid];
d250 -> d251  [key=0, style=solid];
d256 -> d257  [key=0, style=solid];
d262 -> d263  [key=0, style=solid];
d268 -> d269  [key=0, style=solid];
d274 -> d275  [key=0, style=solid];
d280 -> d281  [key=0, style=solid];
d286 -> d287  [key=0, style=solid];
d10 -> d11  [key=0, style=solid];
d15 -> d16  [key=0, style=solid];
d15 -> d20  [key=2, style=dotted];
d21 -> d22  [key=0, style=solid];
d26 -> d18  [key=2, style=dotted];
d26 -> d19  [key=2, style=dotted];
d26 -> d27  [key=0, style=solid];
d27 -> d18  [key=2, style=dotted];
d27 -> d28  [key=0, style=solid];
d27 -> d30  [key=2, style=dotted];
d28 -> d29  [key=0, style=solid];
d28 -> d20  [key=2, style=dotted];
d31 -> d32  [key=0, style=solid];
d36 -> d18  [key=2, style=dotted];
d36 -> d37  [key=0, style=solid];
d36 -> d30  [key=2, style=dotted];
d37 -> d18  [key=2, style=dotted];
d37 -> d38  [key=0, style=solid];
d37 -> d42  [key=2, style=dotted];
d38 -> d18  [key=2, style=dotted];
d38 -> d19  [key=2, style=dotted];
d38 -> d39  [key=0, style=solid];
d39 -> d40  [key=0, style=solid];
d39 -> d20  [key=2, style=dotted];
d43 -> d44  [key=0, style=solid];
d48 -> d18  [key=2, style=dotted];
d48 -> d49  [key=0, style=solid];
d48 -> d42  [key=2, style=dotted];
d49 -> d18  [key=2, style=dotted];
d49 -> d50  [key=0, style=solid];
d49 -> d42  [key=2, style=dotted];
d50 -> d18  [key=2, style=dotted];
d50 -> d19  [key=2, style=dotted];
d50 -> d51  [key=0, style=solid];
d51 -> d52  [key=0, style=solid];
d51 -> d20  [key=2, style=dotted];
d53 -> d54  [key=0, style=solid];
d58 -> d59  [key=0, style=solid];
d58 -> d67  [key=2, style=dotted];
d59 -> d18  [key=2, style=dotted];
d59 -> d19  [key=2, style=dotted];
d59 -> d60  [key=0, style=solid];
d60 -> d61  [key=0, style=solid];
d60 -> d67  [key=2, style=dotted];
d61 -> d18  [key=2, style=dotted];
d61 -> d19  [key=2, style=dotted];
d61 -> d62  [key=0, style=solid];
d62 -> d63  [key=0, style=solid];
d62 -> d67  [key=2, style=dotted];
d63 -> d18  [key=2, style=dotted];
d63 -> d19  [key=2, style=dotted];
d63 -> d64  [key=0, style=solid];
d64 -> d65  [key=0, style=solid];
d64 -> d67  [key=2, style=dotted];
d68 -> d69  [key=0, style=solid];
d73 -> d68  [color=blue, key=0, style=bold];
d75 -> d76  [key=0, style=solid];
d80 -> d18  [key=2, style=dotted];
d80 -> d19  [key=2, style=dotted];
d80 -> d81  [key=0, style=solid];
d81 -> d20  [key=2, style=dotted];
d81 -> d82  [key=0, style=solid];
d91 -> d92  [key=0, style=solid];
d102 -> d103  [key=0, style=solid];
d104 -> d105  [key=0, style=solid];
d109 -> d18  [key=2, style=dotted];
d109 -> d19  [key=2, style=dotted];
d109 -> d110  [key=0, style=solid];
d110 -> d18  [key=2, style=dotted];
d110 -> d30  [key=2, style=dotted];
d110 -> d111  [key=0, style=solid];
d113 -> d114  [key=0, style=solid];
d118 -> d18  [key=2, style=dotted];
d118 -> d19  [key=2, style=dotted];
d118 -> d119  [key=0, style=solid];
d119 -> d18  [key=2, style=dotted];
d119 -> d19  [key=2, style=dotted];
d119 -> d120  [key=0, style=solid];
d122 -> d123  [key=0, style=solid];
d127 -> d128  [key=0, style=solid];
d132 -> d133  [key=0, style=solid];
d137 -> d138  [key=0, style=solid];
d143 -> d18  [key=2, style=dotted];
d143 -> d19  [key=2, style=dotted];
d143 -> d144  [key=0, style=solid];
d147 -> d148  [key=0, style=solid];
d153 -> d154  [key=0, style=solid];
d159 -> d18  [key=2, style=dotted];
d159 -> d19  [key=2, style=dotted];
d159 -> d160  [key=0, style=solid];
d163 -> d164  [key=0, style=solid];
d198 -> d199  [key=0, style=solid];
d203 -> d198  [color=blue, key=0, style=bold];
d204 -> d205  [key=0, style=solid];
d209 -> d18  [key=2, style=dotted];
d209 -> d30  [key=2, style=dotted];
d209 -> d210  [key=0, style=solid];
d210 -> d18  [key=2, style=dotted];
d210 -> d19  [key=2, style=dotted];
d210 -> d211  [key=0, style=solid];
d211 -> d18  [key=2, style=dotted];
d211 -> d19  [key=2, style=dotted];
d211 -> d212  [key=0, style=solid];
d214 -> d215  [key=0, style=solid];
d219 -> d214  [color=blue, key=0, style=bold];
d225 -> d220  [color=blue, key=0, style=bold];
d231 -> d226  [color=blue, key=0, style=bold];
d237 -> d232  [color=blue, key=0, style=bold];
d243 -> d238  [color=blue, key=0, style=bold];
d249 -> d244  [color=blue, key=0, style=bold];
d255 -> d250  [color=blue, key=0, style=bold];
d261 -> d256  [color=blue, key=0, style=bold];
d85 -> d86  [key=0, style=solid];
d85 -> d91  [color=darkseagreen4, key=1, label=actualCulture, style=dashed];
d96 -> d97  [key=0, style=solid];
d96 -> d102  [color=darkseagreen4, key=1, label=actualCulture, style=dashed];
d16 -> d10  [color=blue, key=0, style=bold];
d29 -> d21  [color=blue, key=0, style=bold];
d40 -> d31  [color=blue, key=0, style=bold];
d52 -> d43  [color=blue, key=0, style=bold];
d65 -> d53  [color=blue, key=0, style=bold];
d82 -> d75  [color=blue, key=0, style=bold];
d92 -> d84  [color=blue, key=0, style=bold];
d103 -> d95  [color=blue, key=0, style=bold];
d111 -> d104  [color=blue, key=0, style=bold];
d120 -> d113  [color=blue, key=0, style=bold];
d144 -> d137  [color=blue, key=0, style=bold];
d160 -> d153  [color=blue, key=0, style=bold];
d212 -> d204  [color=blue, key=0, style=bold];
d84 -> d85  [key=0, style=solid];
d95 -> d96  [key=0, style=solid];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_0  [color=blue, key=0, style=bold];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_7  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_8 -> m1_5  [color=blue, key=0, style=bold];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_9 -> m1_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_13 -> m1_9  [color=blue, key=0, style=bold];
m1_14 -> m1_1  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableAddOptions", style=dashed];
m1_14 -> m1_2  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableAddOptions", style=dashed];
m1_14 -> m1_3  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableAddOptions", style=dashed];
m1_15 -> m1_6  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableCommitOptions", style=dashed];
m1_15 -> m1_7  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableCommitOptions", style=dashed];
m1_16 -> m1_10  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableCloneOptions", style=dashed];
m1_16 -> m1_11  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableCloneOptions", style=dashed];
m1_16 -> m1_12  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableCloneOptions", style=dashed];
m2_33 -> m2_34  [color=green, key=0, style=solid];
m2_34 -> m2_35  [color=green, key=0, style=solid];
m2_34 -> m2_39  [color=green, key=2, style=dotted];
m2_34 -> m2_37  [color=green, key=1, label=expected, style=dashed];
m2_35 -> m2_36  [color=green, key=0, style=solid];
m2_35 -> m2_6  [color=green, key=2, style=dotted];
m2_35 -> m2_7  [color=green, key=2, style=dotted];
m2_35 -> m2_37  [color=green, key=1, label=result, style=dashed];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_8  [key=2, style=dotted];
m2_36 -> m2_37  [color=green, key=0, style=solid];
m2_36 -> m2_32  [color=green, key=2, style=dotted];
m2_38 -> m2_33  [color=blue, key=0, style=bold];
m2_40 -> m2_41  [key=0, style=solid];
m2_41 -> m2_42  [color=green, key=0, style=solid];
m2_41 -> m2_46  [key=2, style=dotted];
m2_41 -> m2_44  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_42 -> m2_43  [color=green, key=0, style=solid];
m2_42 -> m2_6  [color=green, key=2, style=dotted];
m2_42 -> m2_7  [color=green, key=2, style=dotted];
m2_42 -> m2_44  [color=green, key=1, label=result, style=dashed];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_8  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_32  [key=2, style=dotted];
m2_45 -> m2_40  [color=blue, key=0, style=bold];
m2_15 -> m2_16  [color=green, key=0, style=solid];
m2_16 -> m2_17  [color=green, key=0, style=solid];
m2_16 -> m2_14  [color=green, key=2, style=dotted];
m2_16 -> m2_18  [color=green, key=1, label=expectedErrors, style=dashed];
m2_17 -> m2_18  [color=green, key=0, style=solid];
m2_17 -> m2_6  [color=green, key=2, style=dotted];
m2_17 -> m2_7  [color=green, key=2, style=dotted];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_8  [key=2, style=dotted];
m2_19 -> m2_15  [color=blue, key=0, style=bold];
m2_25 -> m2_26  [color=green, key=0, style=solid];
m2_26 -> m2_27  [color=green, key=0, style=solid];
m2_26 -> m2_31  [color=green, key=2, style=dotted];
m2_26 -> m2_29  [color=green, key=1, label=expected, style=dashed];
m2_27 -> m2_28  [color=green, key=0, style=solid];
m2_27 -> m2_6  [color=green, key=2, style=dotted];
m2_27 -> m2_7  [color=green, key=2, style=dotted];
m2_27 -> m2_29  [color=green, key=1, label=result, style=dashed];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_8  [key=2, style=dotted];
m2_28 -> m2_29  [color=green, key=0, style=solid];
m2_28 -> m2_32  [color=green, key=2, style=dotted];
m2_30 -> m2_25  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [color=green, key=0, style=solid];
m2_1 -> m2_5  [key=2, style=dotted];
m2_1 -> m2_3  [color=darkseagreen4, key=1, label=expectedErrors, style=dashed];
m2_2 -> m2_3  [color=green, key=0, style=solid];
m2_2 -> m2_6  [color=green, key=2, style=dotted];
m2_2 -> m2_7  [color=green, key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_8  [key=2, style=dotted];
m2_4 -> m2_0  [color=blue, key=0, style=bold];
m2_9 -> m2_10  [key=0, style=solid];
m2_10 -> m2_11  [color=green, key=0, style=solid];
m2_10 -> m2_14  [key=2, style=dotted];
m2_10 -> m2_12  [color=darkseagreen4, key=1, label=expectedErrors, style=dashed];
m2_11 -> m2_12  [color=green, key=0, style=solid];
m2_11 -> m2_6  [color=green, key=2, style=dotted];
m2_11 -> m2_7  [color=green, key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_8  [key=2, style=dotted];
m2_13 -> m2_9  [color=blue, key=0, style=bold];
m2_20 -> m2_21  [key=0, style=solid];
m2_21 -> m2_22  [color=green, key=0, style=solid];
m2_21 -> m2_14  [key=2, style=dotted];
m2_21 -> m2_23  [color=darkseagreen4, key=1, label=expectedErrors, style=dashed];
m2_22 -> m2_23  [color=green, key=0, style=solid];
m2_22 -> m2_6  [color=green, key=2, style=dotted];
m2_22 -> m2_7  [color=green, key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_8  [key=2, style=dotted];
m2_24 -> m2_20  [color=blue, key=0, style=bold];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_49  [color=green, key=1, label="string[]", style=dashed];
m2_48 -> m2_49  [color=green, key=0, style=solid];
m2_48 -> m2_46  [key=2, style=dotted];
m2_48 -> m2_51  [color=darkseagreen4, key=1, label=expected, style=dashed];
m2_49 -> m2_50  [color=green, key=0, style=solid];
m2_49 -> m2_6  [color=green, key=2, style=dotted];
m2_49 -> m2_7  [color=green, key=2, style=dotted];
m2_49 -> m2_51  [color=green, key=1, label=result, style=dashed];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_8  [key=2, style=dotted];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_32  [key=2, style=dotted];
m2_52 -> m2_47  [color=blue, key=0, style=bold];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_5  [key=2, style=dotted];
m3_56 -> m3_6  [key=2, style=dotted];
m3_56 -> m3_33  [key=2, style=dotted];
m3_56 -> m3_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_56 -> m3_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_11 -> m3_12  [color=green, key=0, style=solid];
m3_11 -> n12  [color=green, key=2, style=dotted];
m3_12 -> m3_13  [color=green, key=0, style=solid];
m3_12 -> m3_14  [color=green, key=2, style=dotted];
m3_13 -> m3_14  [color=red, key=0, style=solid];
m3_13 -> m3_16  [color=red, key=2, style=dotted];
m3_13 -> m3_17  [color=red, key=2, style=dotted];
m3_13 -> m3_18  [color=red, key=1, label="lambda expression", style=dashed];
m3_13 -> m3_21  [color=red, key=1, label="lambda expression", style=dashed];
m3_13 -> m3_24  [color=red, key=1, label="lambda expression", style=dashed];
m3_13 -> m3_10  [color=blue, key=0, style=bold];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_7  [key=2, style=dotted];
m3_15 -> m3_11  [color=blue, key=0, style=bold];
m3_15 -> m3_16  [key=0, style=solid];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_18  [key=2, style=dotted];
m3_17 -> m3_15  [color=blue, key=0, style=bold];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_9  [key=2, style=dotted];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_29  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_7  [key=2, style=dotted];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_65  [key=2, style=dotted];
m3_58 -> m3_66  [key=2, style=dotted];
m3_58 -> m3_61  [color=darkseagreen4, key=1, label=attributes, style=dashed];
m3_58 -> m3_62  [color=darkseagreen4, key=1, label=attributes, style=dashed];
m3_58 -> m3_63  [color=darkseagreen4, key=1, label=attributes, style=dashed];
m3_58 -> m3_68  [color=darkseagreen4, key=1, label=attributes, style=dashed];
m3_58 -> m3_54  [color=blue, key=0, style=bold];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_61  [key=0, style=solid];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_63  [key=0, style=solid];
m3_61 -> m3_59  [color=blue, key=0, style=bold];
m3_62 -> m3_64  [key=0, style=solid];
m3_62 -> m3_63  [key=0, style=solid];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_68  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBindingMetadata", style=dashed];
m3_63 -> m3_72  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBindingMetadata", style=dashed];
m3_60 -> m3_64  [key=0, style=solid];
m3_60 -> m3_61  [key=0, style=solid];
m3_64 -> m3_57  [color=blue, key=0, style=bold];
m3_64 -> m3_62  [color=blue, key=0, style=bold];
m3_65 -> m3_66  [key=0, style=solid];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_5  [key=2, style=dotted];
m3_67 -> m3_6  [key=2, style=dotted];
m3_67 -> m3_33  [key=2, style=dotted];
m3_67 -> m3_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_67 -> m3_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_68 -> m3_69  [key=0, style=solid];
m3_68 -> m3_7  [key=2, style=dotted];
m3_68 -> m3_20  [key=0, style=solid];
m3_68 -> m3_70  [key=2, style=dotted];
m3_68 -> m3_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_69 -> m3_65  [color=blue, key=0, style=bold];
m3_9 -> m3_10  [key=0, style=solid];
m3_104 -> m3_105  [key=0, style=solid];
m3_105 -> m3_106  [key=0, style=solid];
m3_105 -> m3_5  [key=2, style=dotted];
m3_105 -> m3_80  [key=2, style=dotted];
m3_105 -> m3_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_105 -> m3_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_7  [key=2, style=dotted];
m3_107 -> m3_104  [color=blue, key=0, style=bold];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_56  [key=2, style=dotted];
m3_55 -> m3_56  [key=0, style=solid];
m3_55 -> m3_53  [color=blue, key=0, style=bold];
m3_52 -> m3_53  [key=0, style=solid];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_37  [color=green, key=0, style=solid];
m3_28 -> m3_39  [color=green, key=2, style=dotted];
m3_28 -> m3_40  [color=green, key=2, style=dotted];
m3_28 -> m3_41  [color=green, key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_29  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m3_29 -> m3_36  [key=0, style=solid];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_5  [key=2, style=dotted];
m3_30 -> m3_33  [key=2, style=dotted];
m3_30 -> m3_34  [color=darkseagreen4, key=1, label=gtd, style=dashed];
m3_30 -> m3_32  [color=darkseagreen4, key=1, label=gtd, style=dashed];
m3_30 -> m3_42  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_7  [key=2, style=dotted];
m3_31 -> m3_33  [color=green, key=1, label=service, style=dashed];
m3_31 -> m3_35  [color=green, key=1, label=service, style=dashed];
m3_31 -> m3_43  [key=2, style=dotted];
m3_32 -> m3_28  [color=blue, key=0, style=bold];
m3_32 -> m3_33  [color=green, key=0, style=solid];
m3_32 -> m3_34  [key=0, style=solid];
m3_70 -> m3_71  [key=0, style=solid];
m3_179 -> m3_180  [key=0, style=solid];
m3_8 -> m3_9  [key=0, style=solid];
m3_10 -> m3_8  [color=blue, key=0, style=bold];
m3_10 -> m3_11  [color=green, key=0, style=solid];
m3_10 -> m3_12  [color=green, key=1, label="System.Type", style=dashed];
m3_18 -> m3_19  [color=red, key=0, style=solid];
m3_18 -> m3_68  [key=0, style=solid];
m3_18 -> m3_72  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBindingMetadata", style=dashed];
m3_21 -> m3_22  [color=green, key=0, style=solid];
m3_21 -> m3_72  [key=0, style=solid];
m3_21 -> m3_23  [color=green, key=2, style=dotted];
m3_24 -> m3_25  [color=red, key=0, style=solid];
m3_24 -> m3_28  [color=green, key=1, label="Ninject.Activation.IContext", style=dashed];
m3_24 -> m3_33  [color=green, key=1, label="Ninject.Activation.IContext", style=dashed];
m3_24 -> m3_35  [color=green, key=1, label="Ninject.Activation.IContext", style=dashed];
m3_24 -> m3_36  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m3_19 -> m3_20  [color=green, key=0, style=solid];
m3_19 -> m3_21  [color=green, key=1, label="System.Type", style=dashed];
m3_20 -> m3_18  [color=blue, key=0, style=bold];
m3_20 -> m3_21  [color=green, key=0, style=solid];
m3_20 -> n12  [color=green, key=2, style=dotted];
m3_22 -> m3_23  [color=red, key=0, style=solid];
m3_22 -> m3_19  [color=blue, key=0, style=bold];
m3_23 -> m3_21  [color=blue, key=0, style=bold];
m3_25 -> m3_26  [color=red, key=0, style=solid];
m3_25 -> m3_27  [color=red, key=2, style=dotted];
m3_25 -> n12  [key=2, style=dotted];
m3_26 -> m3_24  [color=blue, key=0, style=bold];
m3_26 -> m3_27  [color=green, key=0, style=solid];
m3_26 -> m3_29  [key=0, style=solid];
m3_34 -> m3_35  [color=green, key=0, style=solid];
m3_34 -> m3_36  [key=0, style=solid];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_37  [color=green, key=0, style=solid];
m3_35 -> m3_39  [color=green, key=2, style=dotted];
m3_35 -> m3_40  [color=green, key=2, style=dotted];
m3_36 -> m3_34  [color=blue, key=0, style=bold];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_39  [key=2, style=dotted];
m3_36 -> m3_45  [key=2, style=dotted];
m3_42 -> m3_43  [color=red, key=0, style=solid];
m3_45 -> m3_46  [color=red, key=0, style=solid];
m3_48 -> m3_49  [color=red, key=0, style=solid];
m3_48 -> m3_51  [key=2, style=dotted];
m3_51 -> m3_52  [key=0, style=solid];
m3_43 -> m3_44  [color=red, key=0, style=solid];
m3_44 -> m3_42  [color=blue, key=0, style=bold];
m3_46 -> m3_47  [color=green, key=0, style=solid];
m3_46 -> n12  [color=green, key=2, style=dotted];
m3_47 -> m3_45  [color=blue, key=0, style=bold];
m3_47 -> m3_48  [color=green, key=0, style=solid];
m3_47 -> n12  [color=green, key=2, style=dotted];
m3_49 -> m3_50  [color=red, key=0, style=solid];
m3_49 -> m3_52  [key=2, style=dotted];
m3_50 -> m3_48  [color=blue, key=0, style=bold];
m3_50 -> m3_39  [color=blue, key=0, style=bold];
m3_53 -> m3_51  [color=blue, key=0, style=bold];
m3_53 -> m3_54  [key=0, style=solid];
m3_73 -> m3_74  [key=0, style=solid];
m3_71 -> m3_72  [key=0, style=solid];
m3_72 -> m3_70  [color=blue, key=0, style=bold];
m3_72 -> m3_23  [key=0, style=solid];
m3_72 -> m3_74  [key=2, style=dotted];
m3_74 -> m3_75  [key=0, style=solid];
m3_75 -> m3_73  [color=blue, key=0, style=bold];
m3_75 -> m3_12  [color=green, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m3_75 -> m3_21  [color=green, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m3_75 -> m3_28  [color=green, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m3_75 -> m3_33  [color=green, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m3_75 -> m3_35  [color=green, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m3_75 -> m3_27  [color=green, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m3_75 -> m3_3  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m3_75 -> m3_4  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m3_75 -> m3_5  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m3_75 -> m3_6  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m3_75 -> m3_16  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m3_75 -> m3_26  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m3_75 -> m3_29  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m3_75 -> m3_30  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m3_75 -> m3_31  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m3_75 -> m3_36  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m3_75 -> m3_48  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m3_75 -> m3_54  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m3_75 -> m3_58  [color=darkseagreen4, key=1, label="Ninject.Planning.Targets.Target<T>", style=dashed];
m3_81 -> m3_82  [key=0, style=solid];
m3_84 -> m3_85  [key=0, style=solid];
m3_82 -> m3_83  [key=0, style=solid];
m3_83 -> m3_81  [color=blue, key=0, style=bold];
m3_85 -> m3_86  [key=0, style=solid];
m3_86 -> m3_84  [color=blue, key=0, style=bold];
m3_92 -> m3_93  [color=red, key=0, style=solid];
m3_95 -> m3_96  [color=red, key=0, style=solid];
m3_98 -> m3_99  [color=red, key=0, style=solid];
m3_101 -> m3_102  [key=0, style=solid];
m3_93 -> m3_94  [color=red, key=0, style=solid];
m3_94 -> m3_92  [color=blue, key=0, style=bold];
m3_96 -> m3_97  [color=red, key=0, style=solid];
m3_97 -> m3_95  [color=blue, key=0, style=bold];
m3_99 -> m3_100  [color=red, key=0, style=solid];
m3_100 -> m3_98  [color=blue, key=0, style=bold];
m3_102 -> m3_103  [key=0, style=solid];
m3_103 -> m3_101  [color=blue, key=0, style=bold];
m3_108 -> m3_109  [key=0, style=solid];
m3_111 -> m3_112  [key=0, style=solid];
m3_109 -> m3_110  [key=0, style=solid];
m3_110 -> m3_108  [color=blue, key=0, style=bold];
m3_112 -> m3_113  [key=0, style=solid];
m3_113 -> m3_111  [color=blue, key=0, style=bold];
m3_118 -> m3_119  [color=red, key=0, style=solid];
m3_121 -> m3_122  [color=red, key=0, style=solid];
m3_124 -> m3_125  [color=red, key=0, style=solid];
m3_127 -> m3_128  [key=0, style=solid];
m3_119 -> m3_120  [color=red, key=0, style=solid];
m3_120 -> m3_118  [color=blue, key=0, style=bold];
m3_122 -> m3_123  [color=red, key=0, style=solid];
m3_123 -> m3_121  [color=blue, key=0, style=bold];
m3_125 -> m3_126  [color=red, key=0, style=solid];
m3_126 -> m3_124  [color=blue, key=0, style=bold];
m3_128 -> m3_129  [key=0, style=solid];
m3_129 -> m3_127  [color=blue, key=0, style=bold];
m3_136 -> m3_137  [color=red, key=0, style=solid];
m3_139 -> m3_140  [color=red, key=0, style=solid];
m3_142 -> m3_143  [color=red, key=0, style=solid];
m3_145 -> m3_146  [color=red, key=0, style=solid];
m3_137 -> m3_138  [color=red, key=0, style=solid];
m3_138 -> m3_136  [color=blue, key=0, style=bold];
m3_140 -> m3_141  [color=red, key=0, style=solid];
m3_141 -> m3_139  [color=blue, key=0, style=bold];
m3_143 -> m3_144  [color=red, key=0, style=solid];
m3_144 -> m3_142  [color=blue, key=0, style=bold];
m3_146 -> m3_147  [color=red, key=0, style=solid];
m3_147 -> m3_145  [color=blue, key=0, style=bold];
m3_153 -> m3_154  [color=red, key=0, style=solid];
m3_156 -> m3_157  [key=0, style=solid];
m3_154 -> m3_155  [color=red, key=0, style=solid];
m3_155 -> m3_153  [color=blue, key=0, style=bold];
m3_157 -> m3_158  [key=0, style=solid];
m3_158 -> m3_156  [color=blue, key=0, style=bold];
m3_164 -> m3_165  [color=red, key=0, style=solid];
m3_167 -> m3_168  [color=red, key=0, style=solid];
m3_170 -> m3_171  [color=red, key=0, style=solid];
m3_173 -> m3_174  [color=red, key=0, style=solid];
m3_176 -> m3_177  [color=red, key=0, style=solid];
m3_165 -> m3_166  [color=red, key=0, style=solid];
m3_166 -> m3_164  [color=blue, key=0, style=bold];
m3_168 -> m3_169  [color=red, key=0, style=solid];
m3_169 -> m3_167  [color=blue, key=0, style=bold];
m3_171 -> m3_172  [color=red, key=0, style=solid];
m3_172 -> m3_170  [color=blue, key=0, style=bold];
m3_174 -> m3_175  [color=red, key=0, style=solid];
m3_175 -> m3_173  [color=blue, key=0, style=bold];
m3_177 -> m3_178  [color=red, key=0, style=solid];
m3_178 -> m3_176  [color=blue, key=0, style=bold];
m3_180 -> m3_181  [key=0, style=solid];
m3_181 -> m3_179  [color=blue, key=0, style=bold];
m3_27 -> m3_28  [color=green, key=0, style=solid];
m3_27 -> m3_38  [color=green, key=2, style=dotted];
m3_148 -> m3_149  [color=red, key=0, style=solid];
m3_149 -> m3_150  [color=red, key=0, style=solid];
m3_149 -> m3_135  [color=red, key=2, style=dotted];
m3_149 -> m3_152  [color=red, key=2, style=dotted];
m3_149 -> m3_153  [color=red, key=1, label="lambda expression", style=dashed];
m3_149 -> m3_156  [color=red, key=1, label="lambda expression", style=dashed];
m3_150 -> m3_151  [key=0, style=solid];
m3_150 -> m3_7  [key=2, style=dotted];
m3_151 -> m3_148  [color=blue, key=0, style=bold];
m3_130 -> m3_131  [key=0, style=solid];
m3_131 -> m3_132  [color=red, key=0, style=solid];
m3_132 -> m3_133  [color=red, key=0, style=solid];
m3_132 -> m3_135  [color=red, key=2, style=dotted];
m3_132 -> m3_17  [color=red, key=2, style=dotted];
m3_132 -> m3_136  [color=red, key=1, label="lambda expression", style=dashed];
m3_132 -> m3_139  [color=red, key=1, label="lambda expression", style=dashed];
m3_132 -> m3_142  [color=red, key=1, label="lambda expression", style=dashed];
m3_132 -> m3_145  [color=red, key=1, label="lambda expression", style=dashed];
m3_133 -> m3_134  [key=0, style=solid];
m3_133 -> m3_7  [key=2, style=dotted];
m3_134 -> m3_130  [color=blue, key=0, style=bold];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_68  [color=darkseagreen4, key=1, label=attributes, style=dashed];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_5  [key=2, style=dotted];
m3_77 -> m3_80  [key=2, style=dotted];
m3_77 -> m3_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_77 -> m3_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_77 -> m3_72  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBindingMetadata", style=dashed];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_7  [key=2, style=dotted];
m3_79 -> m3_76  [color=blue, key=0, style=bold];
m3_41 -> m3_37  [color=blue, key=0, style=bold];
m3_114 -> m3_115  [color=red, key=0, style=solid];
m3_115 -> m3_116  [color=red, key=0, style=solid];
m3_115 -> m3_16  [color=red, key=2, style=dotted];
m3_115 -> m3_91  [color=red, key=2, style=dotted];
m3_115 -> m3_118  [color=red, key=1, label="lambda expression", style=dashed];
m3_115 -> m3_121  [color=red, key=1, label="lambda expression", style=dashed];
m3_115 -> m3_124  [color=red, key=1, label="lambda expression", style=dashed];
m3_115 -> m3_127  [color=red, key=1, label="lambda expression", style=dashed];
m3_116 -> m3_117  [key=0, style=solid];
m3_116 -> m3_7  [key=2, style=dotted];
m3_117 -> m3_114  [color=blue, key=0, style=bold];
m3_33 -> m3_37  [color=green, key=0, style=solid];
m3_33 -> m3_39  [color=green, key=2, style=dotted];
m3_33 -> m3_40  [color=green, key=2, style=dotted];
m3_33 -> m3_44  [color=green, key=2, style=dotted];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_24  [color=blue, key=0, style=bold];
m3_38 -> m3_39  [color=red, key=0, style=solid];
m3_38 -> m3_29  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m3_39 -> m3_40  [color=red, key=0, style=solid];
m3_39 -> m3_16  [color=red, key=2, style=dotted];
m3_39 -> m3_17  [color=red, key=2, style=dotted];
m3_39 -> m3_33  [color=red, key=2, style=dotted];
m3_39 -> m3_42  [color=red, key=1, label="lambda expression", style=dashed];
m3_39 -> m3_45  [color=red, key=1, label="lambda expression", style=dashed];
m3_39 -> m3_48  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_39 -> m3_51  [color=red, key=1, label="lambda expression", style=dashed];
m3_39 -> m3_46  [color=green, key=0, style=solid];
m3_39 -> m3_47  [color=green, key=1, label="Ninject.Activation.IContext", style=dashed];
m3_39 -> m3_49  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_7  [key=2, style=dotted];
m3_159 -> m3_160  [color=red, key=0, style=solid];
m3_160 -> m3_161  [color=red, key=0, style=solid];
m3_160 -> m3_135  [color=red, key=2, style=dotted];
m3_160 -> m3_163  [color=red, key=2, style=dotted];
m3_160 -> m3_164  [color=red, key=1, label="lambda expression", style=dashed];
m3_160 -> m3_167  [color=red, key=1, label="lambda expression", style=dashed];
m3_160 -> m3_170  [color=red, key=1, label="lambda expression", style=dashed];
m3_160 -> m3_173  [color=red, key=1, label="lambda expression", style=dashed];
m3_160 -> m3_176  [color=red, key=1, label="lambda expression", style=dashed];
m3_160 -> m3_179  [color=red, key=1, label="lambda expression", style=dashed];
m3_161 -> m3_162  [key=0, style=solid];
m3_161 -> m3_7  [key=2, style=dotted];
m3_162 -> m3_159  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_2  [color=darkseagreen4, key=1, label=T, style=dashed];
m3_0 -> m3_3  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m3_0 -> m3_4  [color=darkseagreen4, key=1, label=T, style=dashed];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> n12  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_5  [key=2, style=dotted];
m3_2 -> m3_6  [key=2, style=dotted];
m3_2 -> m3_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_2 -> n12  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_7  [key=2, style=dotted];
m3_4 -> m3_0  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_9  [key=2, style=dotted];
m3_7 -> m3_0  [color=blue, key=0, style=bold];
m3_87 -> m3_88  [color=red, key=0, style=solid];
m3_88 -> m3_89  [color=red, key=0, style=solid];
m3_88 -> m3_16  [color=red, key=2, style=dotted];
m3_88 -> m3_91  [color=red, key=2, style=dotted];
m3_88 -> m3_92  [color=red, key=1, label="lambda expression", style=dashed];
m3_88 -> m3_95  [color=red, key=1, label="lambda expression", style=dashed];
m3_88 -> m3_98  [color=red, key=1, label="lambda expression", style=dashed];
m3_88 -> m3_101  [color=red, key=1, label="lambda expression", style=dashed];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_7  [key=2, style=dotted];
m3_90 -> m3_87  [color=blue, key=0, style=bold];
m4_35 -> m4_36  [key=0, style=solid];
m4_36 -> m4_37  [key=0, style=solid];
m4_37 -> m4_35  [color=blue, key=0, style=bold];
m4_37 -> m4_38  [key=0, style=solid];
m4_0 -> m4_1  [key=0, style=solid];
m4_2 -> m4_8  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_13  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_2 -> m4_5  [key=2, style=dotted];
m4_4 -> m4_10  [key=2, style=dotted];
m4_4 -> m4_5  [key=0, style=solid];
m4_1 -> m4_7  [key=2, style=dotted];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_4  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_1 -> m4_13  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_9  [key=2, style=dotted];
m4_3 -> m4_0  [color=blue, key=0, style=bold];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> d30  [key=2, style=dotted];
m4_6 -> m4_0  [color=blue, key=0, style=bold];
m4_6 -> m4_7  [key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_19  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_16 -> m4_7  [key=2, style=dotted];
m4_16 -> m4_26  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_97 -> m4_98  [color=green, key=0, style=solid];
m4_97 -> m4_100  [color=green, key=1, label="string[]", style=dashed];
m4_98 -> m4_99  [color=green, key=0, style=solid];
m4_98 -> m4_104  [color=green, key=2, style=dotted];
m4_98 -> m4_102  [color=green, key=1, label=expectedOptions, style=dashed];
m4_99 -> m4_100  [color=green, key=0, style=solid];
m4_99 -> m4_46  [key=2, style=dotted];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_47  [key=2, style=dotted];
m4_102 -> m4_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_100 -> m4_101  [color=green, key=0, style=solid];
m4_100 -> m4_22  [color=green, key=2, style=dotted];
m4_100 -> m4_102  [color=green, key=1, label=result, style=dashed];
m4_101 -> m4_102  [color=green, key=0, style=solid];
m4_101 -> m4_60  [color=green, key=2, style=dotted];
m4_103 -> m4_97  [color=blue, key=0, style=bold];
m4_191 -> m4_192  [key=0, style=solid];
m4_194 -> m4_195  [color=green, key=0, style=solid];
m4_194 -> m4_35  [color=green, key=2, style=dotted];
m4_193 -> m4_194  [color=green, key=0, style=solid];
m4_193 -> m4_8  [key=2, style=dotted];
m4_193 -> m4_209  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_195 -> m4_196  [key=0, style=solid];
m4_195 -> m4_10  [key=2, style=dotted];
m4_195 -> m4_197  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_192 -> m4_193  [key=0, style=solid];
m4_192 -> m4_195  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_192 -> m4_7  [key=2, style=dotted];
m4_192 -> m4_209  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_196 -> m4_197  [key=0, style=solid];
m4_196 -> m4_23  [key=2, style=dotted];
m4_196 -> m4_154  [key=2, style=dotted];
m4_197 -> m4_198  [key=0, style=solid];
m4_197 -> m4_182  [key=2, style=dotted];
m4_197 -> m4_183  [key=2, style=dotted];
m4_197 -> m4_199  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_197 -> m4_200  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_197 -> m4_201  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_197 -> m4_202  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_197 -> m4_203  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_197 -> m4_204  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_197 -> m4_205  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_197 -> m4_206  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_199 -> m4_47  [key=2, style=dotted];
m4_199 -> m4_200  [key=0, style=solid];
m4_200 -> m4_47  [key=2, style=dotted];
m4_200 -> m4_201  [key=0, style=solid];
m4_201 -> m4_47  [key=2, style=dotted];
m4_201 -> m4_202  [key=0, style=solid];
m4_202 -> m4_47  [key=2, style=dotted];
m4_202 -> m4_203  [key=0, style=solid];
m4_203 -> m4_47  [key=2, style=dotted];
m4_203 -> m4_204  [key=0, style=solid];
m4_204 -> m4_47  [key=2, style=dotted];
m4_204 -> m4_205  [key=0, style=solid];
m4_205 -> m4_47  [key=2, style=dotted];
m4_205 -> m4_206  [key=0, style=solid];
m4_206 -> m4_47  [key=2, style=dotted];
m4_206 -> m4_207  [key=0, style=solid];
m4_198 -> m4_23  [key=2, style=dotted];
m4_198 -> m4_199  [key=0, style=solid];
m4_198 -> m4_184  [key=2, style=dotted];
m4_207 -> m4_191  [color=blue, key=0, style=bold];
m4_274 -> m4_275  [key=0, style=solid];
m4_277 -> m4_35  [key=2, style=dotted];
m4_277 -> m4_278  [key=0, style=solid];
m4_276 -> m4_8  [key=2, style=dotted];
m4_276 -> m4_277  [key=0, style=solid];
m4_276 -> m4_297  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_278 -> m4_10  [key=2, style=dotted];
m4_278 -> m4_279  [key=0, style=solid];
m4_281 -> m4_47  [key=2, style=dotted];
m4_281 -> m4_282  [key=0, style=solid];
m4_282 -> m4_47  [key=2, style=dotted];
m4_282 -> m4_283  [key=0, style=solid];
m4_283 -> m4_47  [key=2, style=dotted];
m4_283 -> m4_284  [key=0, style=solid];
m4_284 -> m4_47  [key=2, style=dotted];
m4_284 -> m4_285  [key=0, style=solid];
m4_285 -> m4_47  [key=2, style=dotted];
m4_285 -> m4_286  [key=0, style=solid];
m4_286 -> m4_47  [key=2, style=dotted];
m4_286 -> m4_287  [key=0, style=solid];
m4_287 -> m4_47  [key=2, style=dotted];
m4_287 -> m4_288  [key=0, style=solid];
m4_288 -> m4_47  [key=2, style=dotted];
m4_288 -> m4_289  [key=0, style=solid];
m4_289 -> m4_47  [key=2, style=dotted];
m4_289 -> m4_290  [key=0, style=solid];
m4_290 -> m4_47  [key=2, style=dotted];
m4_290 -> m4_291  [key=0, style=solid];
m4_291 -> m4_47  [key=2, style=dotted];
m4_291 -> m4_292  [key=0, style=solid];
m4_292 -> m4_47  [key=2, style=dotted];
m4_292 -> m4_293  [key=0, style=solid];
m4_293 -> m4_47  [key=2, style=dotted];
m4_293 -> m4_294  [key=0, style=solid];
m4_294 -> m4_47  [key=2, style=dotted];
m4_294 -> m4_295  [key=0, style=solid];
m4_275 -> m4_7  [key=2, style=dotted];
m4_275 -> m4_276  [key=0, style=solid];
m4_275 -> m4_278  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_275 -> m4_297  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_280 -> m4_23  [key=2, style=dotted];
m4_280 -> m4_281  [key=0, style=solid];
m4_280 -> m4_184  [key=2, style=dotted];
m4_279 -> m4_281  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_279 -> m4_282  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_279 -> m4_283  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_279 -> m4_284  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_279 -> m4_285  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_279 -> m4_286  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_279 -> m4_287  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_279 -> m4_288  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_279 -> m4_289  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_279 -> m4_290  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_279 -> m4_291  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_279 -> m4_292  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_279 -> m4_293  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_279 -> m4_294  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_279 -> m4_182  [key=2, style=dotted];
m4_279 -> m4_183  [key=2, style=dotted];
m4_279 -> m4_280  [key=0, style=solid];
m4_295 -> m4_274  [color=blue, key=0, style=bold];
m4_130 -> m4_131  [key=0, style=solid];
m4_132 -> m4_46  [key=2, style=dotted];
m4_132 -> m4_133  [key=0, style=solid];
m4_135 -> m4_23  [key=2, style=dotted];
m4_135 -> m4_136  [key=0, style=solid];
m4_135 -> m4_139  [key=2, style=dotted];
m4_135 -> m4_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_134 -> m4_23  [key=2, style=dotted];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_138  [key=2, style=dotted];
m4_134 -> m4_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_131 -> m4_132  [key=0, style=solid];
m4_131 -> m4_135  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m4_131 -> m4_137  [key=2, style=dotted];
m4_131 -> m4_144  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m4_133 -> m4_135  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_133 -> m4_134  [key=0, style=solid];
m4_133 -> m4_9  [key=2, style=dotted];
m4_136 -> m4_130  [color=blue, key=0, style=bold];
m4_312 -> m4_314  [color=green, key=1, label="string[]", style=dashed];
m4_312 -> m4_313  [key=0, style=solid];
m4_312 -> m4_316  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Commit_Verb", style=dashed];
m4_312 -> m4_322  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Commit_Verb", style=dashed];
m4_314 -> m4_315  [color=green, key=0, style=solid];
m4_314 -> m4_35  [color=green, key=2, style=dotted];
m4_314 -> m4_316  [color=green, key=1, label=result, style=dashed];
m4_313 -> m4_314  [color=green, key=0, style=solid];
m4_313 -> m4_8  [key=2, style=dotted];
m4_313 -> m4_319  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_315 -> m4_316  [key=0, style=solid];
m4_315 -> m4_47  [key=2, style=dotted];
m4_316 -> m4_317  [key=0, style=solid];
m4_316 -> m4_305  [key=2, style=dotted];
m4_316 -> m4_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_317 -> m4_312  [color=blue, key=0, style=bold];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_13  [key=2, style=dotted];
m4_147 -> m4_148  [key=0, style=solid];
m4_149 -> m4_8  [key=2, style=dotted];
m4_149 -> m4_150  [key=0, style=solid];
m4_149 -> m4_156  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_151 -> m4_10  [key=2, style=dotted];
m4_151 -> m4_152  [key=0, style=solid];
m4_148 -> m4_7  [key=2, style=dotted];
m4_148 -> m4_149  [key=0, style=solid];
m4_148 -> m4_151  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_148 -> m4_156  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_150 -> m4_151  [key=0, style=solid];
m4_150 -> m4_9  [key=2, style=dotted];
m4_152 -> m4_23  [key=2, style=dotted];
m4_152 -> m4_154  [key=2, style=dotted];
m4_152 -> m4_153  [key=0, style=solid];
m4_153 -> m4_147  [color=blue, key=0, style=bold];
m4_17 -> m4_18  [color=green, key=0, style=solid];
m4_17 -> m4_8  [key=2, style=dotted];
m4_17 -> m4_26  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_18 -> m4_19  [color=green, key=0, style=solid];
m4_18 -> m4_22  [color=green, key=2, style=dotted];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_13  [key=2, style=dotted];
m4_19 -> m4_10  [key=2, style=dotted];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_14  [key=2, style=dotted];
m4_20 -> m4_23  [key=2, style=dotted];
m4_20 -> m4_24  [key=2, style=dotted];
m4_21 -> m4_17  [color=blue, key=0, style=bold];
m4_21 -> m4_15  [color=blue, key=0, style=bold];
m4_264 -> m4_265  [key=0, style=solid];
m4_267 -> m4_268  [color=green, key=0, style=solid];
m4_267 -> m4_35  [color=green, key=2, style=dotted];
m4_266 -> m4_267  [color=green, key=0, style=solid];
m4_266 -> m4_8  [key=2, style=dotted];
m4_266 -> m4_272  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_268 -> m4_269  [key=0, style=solid];
m4_268 -> m4_10  [key=2, style=dotted];
m4_265 -> m4_266  [key=0, style=solid];
m4_265 -> m4_268  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_265 -> m4_7  [key=2, style=dotted];
m4_265 -> m4_272  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_269 -> m4_270  [key=0, style=solid];
m4_269 -> m4_23  [key=2, style=dotted];
m4_269 -> m4_154  [key=2, style=dotted];
m4_270 -> m4_264  [color=blue, key=0, style=bold];
m4_14 -> m4_12  [color=blue, key=0, style=bold];
m4_61 -> m4_62  [key=0, style=solid];
m4_63 -> m4_8  [key=2, style=dotted];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_69  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_65 -> m4_47  [key=2, style=dotted];
m4_65 -> m4_66  [key=0, style=solid];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_65  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m4_62 -> m4_67  [key=2, style=dotted];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_9  [key=2, style=dotted];
m4_66 -> m4_61  [color=blue, key=0, style=bold];
m4_108 -> m4_109  [key=0, style=solid];
m4_110 -> m4_111  [color=green, key=0, style=solid];
m4_110 -> m4_22  [color=green, key=2, style=dotted];
m4_109 -> m4_110  [color=green, key=0, style=solid];
m4_111 -> m4_60  [key=2, style=dotted];
m4_111 -> m4_112  [key=0, style=solid];
m4_112 -> m4_108  [color=blue, key=0, style=bold];
m4_299 -> m4_300  [key=0, style=solid];
m4_299 -> m4_310  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Simple_Options", style=dashed];
m4_299 -> m4_303  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Simple_Options", style=dashed];
m4_299 -> m4_301  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m4_300 -> m4_8  [key=2, style=dotted];
m4_300 -> m4_301  [key=0, style=solid];
m4_300 -> m4_307  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_302 -> m4_47  [key=2, style=dotted];
m4_302 -> m4_303  [key=0, style=solid];
m4_303 -> m4_305  [key=2, style=dotted];
m4_303 -> m4_304  [key=0, style=solid];
m4_303 -> m4_309  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_301 -> m4_302  [key=0, style=solid];
m4_301 -> m4_303  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_301 -> m4_9  [key=2, style=dotted];
m4_304 -> m4_299  [color=blue, key=0, style=bold];
m4_113 -> m4_114  [color=green, key=0, style=solid];
m4_114 -> m4_115  [color=green, key=0, style=solid];
m4_114 -> m4_93  [color=green, key=2, style=dotted];
m4_114 -> m4_118  [color=green, key=1, label=expectedOptions, style=dashed];
m4_115 -> m4_116  [color=green, key=0, style=solid];
m4_115 -> m4_46  [key=2, style=dotted];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_47  [key=2, style=dotted];
m4_118 -> m4_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_116 -> m4_117  [color=green, key=0, style=solid];
m4_116 -> m4_35  [color=green, key=2, style=dotted];
m4_116 -> m4_118  [color=green, key=1, label=result, style=dashed];
m4_117 -> m4_118  [color=green, key=0, style=solid];
m4_117 -> m4_60  [color=green, key=2, style=dotted];
m4_119 -> m4_113  [color=blue, key=0, style=bold];
m4_71 -> m4_72  [color=green, key=0, style=solid];
m4_72 -> m4_73  [color=green, key=0, style=solid];
m4_72 -> m4_78  [color=green, key=2, style=dotted];
m4_72 -> m4_76  [color=green, key=1, label=expectedOptions, style=dashed];
m4_73 -> m4_74  [color=green, key=0, style=solid];
m4_73 -> m4_8  [key=2, style=dotted];
m4_73 -> m4_80  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_47  [key=2, style=dotted];
m4_76 -> m4_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_74 -> m4_75  [color=green, key=0, style=solid];
m4_74 -> m4_22  [color=green, key=2, style=dotted];
m4_74 -> m4_76  [color=green, key=1, label=result, style=dashed];
m4_75 -> m4_76  [color=green, key=0, style=solid];
m4_75 -> m4_60  [color=green, key=2, style=dotted];
m4_77 -> m4_71  [color=blue, key=0, style=bold];
m4_55 -> m4_56  [key=0, style=solid];
m4_58 -> m4_60  [key=2, style=dotted];
m4_58 -> m4_59  [key=0, style=solid];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_9  [key=2, style=dotted];
m4_56 -> m4_57  [key=0, style=solid];
m4_59 -> m4_55  [color=blue, key=0, style=bold];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_12  [key=2, style=dotted];
m4_7 -> m4_10  [color=darkseagreen4, key=1, label=instance, style=dashed];
m4_158 -> m4_159  [key=0, style=solid];
m4_160 -> m4_46  [key=2, style=dotted];
m4_160 -> m4_161  [key=0, style=solid];
m4_163 -> m4_23  [key=2, style=dotted];
m4_163 -> m4_164  [key=0, style=solid];
m4_163 -> m4_139  [key=2, style=dotted];
m4_163 -> m4_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_162 -> m4_23  [key=2, style=dotted];
m4_162 -> m4_163  [key=0, style=solid];
m4_162 -> m4_138  [key=2, style=dotted];
m4_162 -> m4_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_159 -> m4_160  [key=0, style=solid];
m4_159 -> m4_163  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m4_159 -> m4_165  [key=2, style=dotted];
m4_159 -> m4_170  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m4_161 -> m4_163  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_161 -> m4_162  [key=0, style=solid];
m4_161 -> m4_9  [key=2, style=dotted];
m4_164 -> m4_158  [color=blue, key=0, style=bold];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_51  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m4_52 -> m4_47  [key=2, style=dotted];
m4_52 -> m4_53  [key=0, style=solid];
m4_50 -> m4_46  [key=2, style=dotted];
m4_50 -> m4_51  [key=0, style=solid];
m4_49 -> m4_52  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_54  [key=2, style=dotted];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_9  [key=2, style=dotted];
m4_53 -> m4_48  [color=blue, key=0, style=bold];
m4_211 -> m4_212  [key=0, style=solid];
m4_214 -> m4_215  [color=green, key=0, style=solid];
m4_214 -> m4_35  [color=green, key=2, style=dotted];
m4_213 -> m4_214  [color=green, key=0, style=solid];
m4_213 -> m4_8  [key=2, style=dotted];
m4_213 -> m4_226  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_215 -> m4_216  [key=0, style=solid];
m4_215 -> m4_10  [key=2, style=dotted];
m4_212 -> m4_213  [key=0, style=solid];
m4_212 -> m4_215  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_212 -> m4_7  [key=2, style=dotted];
m4_212 -> m4_226  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_216 -> m4_217  [key=0, style=solid];
m4_216 -> m4_182  [key=2, style=dotted];
m4_216 -> m4_183  [key=2, style=dotted];
m4_216 -> m4_218  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_216 -> m4_219  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_216 -> m4_220  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_216 -> m4_221  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_216 -> m4_222  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_216 -> m4_223  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_218 -> m4_47  [key=2, style=dotted];
m4_218 -> m4_219  [key=0, style=solid];
m4_219 -> m4_47  [key=2, style=dotted];
m4_219 -> m4_220  [key=0, style=solid];
m4_220 -> m4_47  [key=2, style=dotted];
m4_220 -> m4_221  [key=0, style=solid];
m4_221 -> m4_47  [key=2, style=dotted];
m4_221 -> m4_222  [key=0, style=solid];
m4_222 -> m4_47  [key=2, style=dotted];
m4_222 -> m4_223  [key=0, style=solid];
m4_223 -> m4_47  [key=2, style=dotted];
m4_223 -> m4_224  [key=0, style=solid];
m4_217 -> m4_23  [key=2, style=dotted];
m4_217 -> m4_218  [key=0, style=solid];
m4_217 -> m4_184  [key=2, style=dotted];
m4_224 -> m4_211  [color=blue, key=0, style=bold];
m4_188 -> m4_189  [key=0, style=solid];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_29  [key=2, style=dotted];
m4_80 -> m4_81  [key=0, style=solid];
m4_82 -> m4_83  [key=0, style=solid];
m4_94 -> m4_95  [key=0, style=solid];
m4_105 -> m4_106  [key=0, style=solid];
m4_120 -> m4_121  [key=0, style=solid];
m4_209 -> m4_210  [key=0, style=solid];
m4_226 -> m4_227  [key=0, style=solid];
m4_239 -> m4_240  [key=0, style=solid];
m4_272 -> m4_273  [key=0, style=solid];
m4_322 -> m4_47  [key=2, style=dotted];
m4_322 -> m4_323  [key=0, style=solid];
m4_319 -> m4_320  [key=0, style=solid];
m4_321 -> m4_322  [key=0, style=solid];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_13  [key=2, style=dotted];
m4_27 -> m4_25  [color=blue, key=0, style=bold];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_15  [key=2, style=dotted];
m4_27 -> m4_16  [key=2, style=dotted];
m4_38 -> m4_36  [color=blue, key=0, style=bold];
m4_38 -> m4_39  [key=0, style=solid];
m4_79 -> m4_80  [key=0, style=solid];
m4_81 -> m4_79  [color=blue, key=0, style=bold];
m4_310 -> m4_47  [key=2, style=dotted];
m4_310 -> m4_311  [key=0, style=solid];
m4_84 -> m4_82  [color=blue, key=0, style=bold];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_85  [key=2, style=dotted];
m4_96 -> m4_94  [color=blue, key=0, style=bold];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_85  [key=2, style=dotted];
m4_107 -> m4_105  [color=blue, key=0, style=bold];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_85  [key=2, style=dotted];
m4_122 -> m4_120  [color=blue, key=0, style=bold];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_85  [key=2, style=dotted];
m4_208 -> m4_209  [key=0, style=solid];
m4_210 -> m4_208  [color=blue, key=0, style=bold];
m4_225 -> m4_226  [key=0, style=solid];
m4_227 -> m4_225  [color=blue, key=0, style=bold];
m4_238 -> m4_239  [key=0, style=solid];
m4_240 -> m4_238  [color=blue, key=0, style=bold];
m4_271 -> m4_272  [key=0, style=solid];
m4_273 -> m4_271  [color=blue, key=0, style=bold];
m4_323 -> m4_321  [color=blue, key=0, style=bold];
m4_318 -> m4_319  [key=0, style=solid];
m4_320 -> m4_318  [color=blue, key=0, style=bold];
m4_13 -> m4_14  [key=0, style=solid];
m4_69 -> m4_70  [key=0, style=solid];
m4_156 -> m4_157  [key=0, style=solid];
m4_186 -> m4_187  [key=0, style=solid];
m4_262 -> m4_263  [key=0, style=solid];
m4_297 -> m4_298  [key=0, style=solid];
m4_307 -> m4_308  [key=0, style=solid];
m4_309 -> m4_310  [key=0, style=solid];
m4_311 -> m4_309  [color=blue, key=0, style=bold];
m4_241 -> m4_242  [key=0, style=solid];
m4_12 -> m4_13  [key=0, style=solid];
m4_68 -> m4_69  [key=0, style=solid];
m4_70 -> m4_68  [color=blue, key=0, style=bold];
m4_155 -> m4_156  [key=0, style=solid];
m4_157 -> m4_155  [color=blue, key=0, style=bold];
m4_185 -> m4_186  [key=0, style=solid];
m4_187 -> m4_185  [color=blue, key=0, style=bold];
m4_261 -> m4_262  [key=0, style=solid];
m4_263 -> m4_261  [color=blue, key=0, style=bold];
m4_296 -> m4_297  [key=0, style=solid];
m4_298 -> m4_296  [color=blue, key=0, style=bold];
m4_306 -> m4_307  [key=0, style=solid];
m4_308 -> m4_306  [color=blue, key=0, style=bold];
m4_143 -> m4_144  [key=0, style=solid];
m4_140 -> m4_141  [key=0, style=solid];
m4_169 -> m4_170  [key=0, style=solid];
m4_166 -> m4_167  [key=0, style=solid];
m4_144 -> m4_145  [key=0, style=solid];
m4_144 -> m4_146  [key=2, style=dotted];
m4_170 -> m4_171  [key=0, style=solid];
m4_170 -> m4_146  [key=2, style=dotted];
m4_243 -> m4_241  [color=blue, key=0, style=bold];
m4_242 -> m4_243  [key=0, style=solid];
m4_145 -> m4_143  [color=blue, key=0, style=bold];
m4_142 -> m4_140  [color=blue, key=0, style=bold];
m4_141 -> m4_142  [key=0, style=solid];
m4_171 -> m4_169  [color=blue, key=0, style=bold];
m4_168 -> m4_166  [color=blue, key=0, style=bold];
m4_167 -> m4_168  [key=0, style=solid];
m4_189 -> m4_190  [key=0, style=solid];
m4_190 -> m4_188  [color=blue, key=0, style=bold];
m4_30 -> m4_31  [color=green, key=0, style=solid];
m4_30 -> m4_8  [key=2, style=dotted];
m4_30 -> m4_37  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_31 -> m4_32  [color=green, key=0, style=solid];
m4_31 -> m4_22  [key=2, style=dotted];
m4_31 -> m4_35  [color=green, key=2, style=dotted];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_13  [key=2, style=dotted];
m4_32 -> m4_10  [key=2, style=dotted];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_29  [key=2, style=dotted];
m4_33 -> m4_23  [key=2, style=dotted];
m4_33 -> m4_24  [key=2, style=dotted];
m4_34 -> m4_30  [color=blue, key=0, style=bold];
m4_34 -> m4_28  [color=blue, key=0, style=bold];
m4_244 -> m4_245  [key=0, style=solid];
m4_246 -> m4_8  [key=2, style=dotted];
m4_246 -> m4_247  [key=0, style=solid];
m4_246 -> m4_262  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_248 -> m4_10  [key=2, style=dotted];
m4_248 -> m4_249  [key=0, style=solid];
m4_251 -> m4_47  [key=2, style=dotted];
m4_251 -> m4_252  [key=0, style=solid];
m4_252 -> m4_47  [key=2, style=dotted];
m4_252 -> m4_253  [key=0, style=solid];
m4_253 -> m4_47  [key=2, style=dotted];
m4_253 -> m4_254  [key=0, style=solid];
m4_254 -> m4_47  [key=2, style=dotted];
m4_254 -> m4_255  [key=0, style=solid];
m4_255 -> m4_47  [key=2, style=dotted];
m4_255 -> m4_256  [key=0, style=solid];
m4_256 -> m4_47  [key=2, style=dotted];
m4_256 -> m4_257  [key=0, style=solid];
m4_257 -> m4_47  [key=2, style=dotted];
m4_257 -> m4_258  [key=0, style=solid];
m4_258 -> m4_47  [key=2, style=dotted];
m4_258 -> m4_259  [key=0, style=solid];
m4_259 -> m4_47  [key=2, style=dotted];
m4_259 -> m4_260  [key=0, style=solid];
m4_245 -> m4_7  [key=2, style=dotted];
m4_245 -> m4_246  [key=0, style=solid];
m4_245 -> m4_248  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_245 -> m4_262  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_247 -> m4_248  [key=0, style=solid];
m4_247 -> m4_9  [key=2, style=dotted];
m4_250 -> m4_23  [key=2, style=dotted];
m4_250 -> m4_251  [key=0, style=solid];
m4_250 -> m4_184  [key=2, style=dotted];
m4_249 -> m4_251  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_249 -> m4_252  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_249 -> m4_253  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_249 -> m4_254  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_249 -> m4_255  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_249 -> m4_256  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_249 -> m4_257  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_249 -> m4_258  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_249 -> m4_259  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_249 -> m4_182  [key=2, style=dotted];
m4_249 -> m4_183  [key=2, style=dotted];
m4_249 -> m4_250  [key=0, style=solid];
m4_260 -> m4_244  [color=blue, key=0, style=bold];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_23  [color=blue, key=0, style=bold];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_32  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_29 -> m4_7  [key=2, style=dotted];
m4_29 -> m4_37  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_23 -> m4_24  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_12  [key=2, style=dotted];
m4_24 -> m4_27  [color=darkseagreen4, key=1, label=instance, style=dashed];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_15  [key=2, style=dotted];
m4_10 -> m4_16  [key=2, style=dotted];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_14  [key=2, style=dotted];
m4_11 -> m4_6  [color=blue, key=0, style=bold];
m4_39 -> m4_40  [key=0, style=solid];
m4_40 -> m4_38  [color=blue, key=0, style=bold];
m4_40 -> m4_43  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_45  [key=2, style=dotted];
m4_43 -> m4_47  [key=2, style=dotted];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_26  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.StartableStrategyTests.WhenDeactivateIsCalled", style=dashed];
m4_43 -> m4_33  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.StartableStrategyTests.WhenDeactivateIsCalled", style=dashed];
m4_41 -> m4_46  [key=2, style=dotted];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.StartableStrategyTests.StartableStrategyContext", style=dashed];
m4_41 -> m4_2  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.StartableStrategyTests.StartableStrategyContext", style=dashed];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_9  [key=2, style=dotted];
m4_42 -> m4_20  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.StartableStrategyTests.WhenActivateIsCalled", style=dashed];
m4_44 -> m4_39  [color=blue, key=0, style=bold];
m4_44 -> m4_36  [color=darkseagreen4, key=1, label="Ninject.Tests.Unit.StartableStrategyTests.StartableObject", style=dashed];
m4_172 -> m4_173  [key=0, style=solid];
m4_174 -> m4_8  [key=2, style=dotted];
m4_174 -> m4_175  [key=0, style=solid];
m4_174 -> m4_186  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_176 -> m4_10  [key=2, style=dotted];
m4_176 -> m4_177  [key=0, style=solid];
m4_176 -> m4_178  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_173 -> m4_7  [key=2, style=dotted];
m4_173 -> m4_174  [key=0, style=solid];
m4_173 -> m4_176  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_173 -> m4_186  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_175 -> m4_176  [key=0, style=solid];
m4_175 -> m4_9  [key=2, style=dotted];
m4_177 -> m4_23  [key=2, style=dotted];
m4_177 -> m4_154  [key=2, style=dotted];
m4_177 -> m4_178  [key=0, style=solid];
m4_179 -> m4_23  [key=2, style=dotted];
m4_179 -> m4_180  [key=0, style=solid];
m4_179 -> m4_138  [key=2, style=dotted];
m4_179 -> m4_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_180 -> m4_23  [key=2, style=dotted];
m4_180 -> m4_181  [key=0, style=solid];
m4_180 -> m4_184  [key=2, style=dotted];
m4_178 -> m4_182  [key=2, style=dotted];
m4_178 -> m4_183  [key=2, style=dotted];
m4_178 -> m4_179  [key=0, style=solid];
m4_178 -> m4_180  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_181 -> m4_172  [color=blue, key=0, style=bold];
m4_123 -> m4_124  [key=0, style=solid];
m4_127 -> m4_47  [key=2, style=dotted];
m4_127 -> m4_128  [key=0, style=solid];
m4_125 -> m4_46  [key=2, style=dotted];
m4_125 -> m4_126  [key=0, style=solid];
m4_124 -> m4_127  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_129  [key=2, style=dotted];
m4_126 -> m4_127  [key=0, style=solid];
m4_126 -> m4_9  [key=2, style=dotted];
m4_128 -> m4_123  [color=blue, key=0, style=bold];
m4_86 -> m4_87  [color=green, key=0, style=solid];
m4_87 -> m4_88  [color=green, key=0, style=solid];
m4_87 -> m4_93  [color=green, key=2, style=dotted];
m4_87 -> m4_91  [color=green, key=1, label=expectedOptions, style=dashed];
m4_88 -> m4_89  [color=green, key=0, style=solid];
m4_88 -> m4_46  [key=2, style=dotted];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_47  [key=2, style=dotted];
m4_91 -> m4_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_89 -> m4_90  [color=green, key=0, style=solid];
m4_89 -> m4_22  [color=green, key=2, style=dotted];
m4_89 -> m4_91  [color=green, key=1, label=result, style=dashed];
m4_90 -> m4_91  [color=green, key=0, style=solid];
m4_90 -> m4_60  [color=green, key=2, style=dotted];
m4_92 -> m4_86  [color=blue, key=0, style=bold];
m4_228 -> m4_231  [color=green, key=1, label=string, style=dashed];
m4_228 -> m4_229  [key=0, style=solid];
m4_231 -> m4_232  [color=green, key=0, style=solid];
m4_231 -> m4_35  [color=green, key=2, style=dotted];
m4_230 -> m4_231  [color=green, key=0, style=solid];
m4_230 -> m4_8  [key=2, style=dotted];
m4_230 -> m4_239  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_232 -> m4_233  [key=0, style=solid];
m4_232 -> m4_10  [key=2, style=dotted];
m4_232 -> m4_234  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_229 -> m4_230  [key=0, style=solid];
m4_229 -> m4_232  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_229 -> m4_7  [key=2, style=dotted];
m4_229 -> m4_239  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_233 -> m4_234  [key=0, style=solid];
m4_233 -> m4_23  [key=2, style=dotted];
m4_233 -> m4_154  [key=2, style=dotted];
m4_234 -> m4_235  [key=0, style=solid];
m4_234 -> m4_182  [key=2, style=dotted];
m4_234 -> m4_183  [key=2, style=dotted];
m4_234 -> m4_236  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_236 -> m4_237  [key=0, style=solid];
m4_236 -> m4_23  [key=2, style=dotted];
m4_236 -> m4_184  [key=2, style=dotted];
m4_235 -> m4_23  [key=2, style=dotted];
m4_235 -> m4_236  [key=0, style=solid];
m4_235 -> m4_138  [key=2, style=dotted];
m4_235 -> m4_241  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_237 -> m4_228  [color=blue, key=0, style=bold];
m4_325 -> m4_26  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_326 -> m4_37  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_331 -> m4_209  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_332 -> m4_226  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_333 -> m4_239  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_335 -> m4_272  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_338 -> m4_322  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Commit_Verb", style=dashed];
m4_337 -> m4_310  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Simple_Options", style=dashed];
m4_324 -> m4_13  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_328 -> m4_156  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_330 -> m4_186  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_334 -> m4_262  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_336 -> m4_297  [color=darkseagreen4, key=1, label=help, style=dashed];
m4_327 -> m4_144  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m4_329 -> m4_170  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m5_7 -> m5_8  [color=green, key=0, style=solid];
m5_7 -> m5_3  [color=green, key=2, style=dotted];
m5_7 -> m5_4  [color=green, key=2, style=dotted];
m5_7 -> m5_5  [color=green, key=2, style=dotted];
m5_22 -> m5_23  [key=0, style=solid];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_11  [key=2, style=dotted];
m5_23 -> m5_21  [color=blue, key=0, style=bold];
m5_24 -> m5_22  [color=blue, key=0, style=bold];
m5_24 -> m5_25  [key=0, style=solid];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_11  [color=blue, key=0, style=bold];
m5_17 -> m5_3  [key=2, style=dotted];
m5_17 -> m5_5  [key=2, style=dotted];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_20  [key=2, style=dotted];
m5_17 -> m5_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_19  [key=2, style=dotted];
m5_18 -> m5_15  [color=blue, key=0, style=bold];
m5_4 -> m5_5  [key=0, style=solid];
m5_29 -> m5_30  [key=0, style=solid];
m5_19 -> m5_20  [key=0, style=solid];
m5_20 -> m5_21  [key=0, style=solid];
m5_21 -> m5_19  [color=blue, key=0, style=bold];
m5_21 -> m5_22  [key=0, style=solid];
m5_30 -> m5_31  [key=0, style=solid];
m5_31 -> m5_29  [color=blue, key=0, style=bold];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_7  [key=2, style=dotted];
m5_6 -> m5_4  [color=blue, key=0, style=bold];
m5_6 -> m5_7  [color=green, key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_11 -> m5_9  [color=blue, key=0, style=bold];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_16  [key=2, style=dotted];
m5_12 -> m5_14  [color=darkseagreen4, key=1, label=moduleMock, style=dashed];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_17  [key=2, style=dotted];
m5_13 -> m5_18  [key=2, style=dotted];
m5_13 -> m5_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_13 -> m5_3  [key=2, style=dotted];
m5_13 -> m5_4  [key=2, style=dotted];
m5_13 -> m5_5  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_12  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_1 -> m5_4  [key=2, style=dotted];
m5_1 -> m5_5  [key=2, style=dotted];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_8 -> m5_9  [color=red, key=0, style=solid];
m5_8 -> m5_6  [color=blue, key=0, style=bold];
m5_9 -> m5_10  [color=red, key=0, style=solid];
m5_10 -> m5_8  [color=blue, key=0, style=bold];
m5_10 -> m5_3  [key=2, style=dotted];
m5_10 -> m5_4  [key=2, style=dotted];
m5_10 -> m5_5  [key=2, style=dotted];
m5_10 -> m5_11  [key=0, style=solid];
m5_26 -> m5_3  [key=2, style=dotted];
m5_26 -> m5_5  [key=2, style=dotted];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_20  [key=2, style=dotted];
m5_26 -> m5_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_28  [key=2, style=dotted];
m5_25 -> m5_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext", style=dashed];
m5_25 -> m5_5  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext", style=dashed];
m5_25 -> m5_23  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ModuleLoadingTests.ModuleLoadingContext", style=dashed];
m5_27 -> m5_24  [color=blue, key=0, style=bold];
}
