digraph  {
n5 [label="CommandLine.ValueAttribute", span=""];
n0 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", label="Entry CommandLine.ValueAttribute.ValueAttribute(int)", span="21-21"];
n1 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", label="this.index = index", span="23-23"];
n2 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", label="this.min = -1", span="24-24"];
n3 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", label="this.max = -1", span="25-25"];
n4 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", label="Exit CommandLine.ValueAttribute.ValueAttribute(int)", span="21-21"];
m0_258 [cluster="System.Text.StringBuilder.Append(char)", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m0_102 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="285-285"];
m0_118 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", color=red, community=0, file="ErrorHandling.cs", label="2: parserResult == null", span="287-287"];
m0_120 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", color=red, community=0, file="ErrorHandling.cs", label="2: current == null", span="288-288"];
m0_122 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", color=red, community=0, file="ErrorHandling.cs", label="2: ((NotParsed<T>)parserResult).Errors.OnlyMeaningfulOnes().Empty()", span="290-290"];
m0_123 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", color=red, community=0, file="ErrorHandling.cs", label="7: return current;", span="291-291"];
m0_124 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", color=red, community=0, file="ErrorHandling.cs", label="2: var errors = RenderParsingErrorsTextAsLines(parserResult,\r\n                current.SentenceBuilder.FormatError,\r\n                current.SentenceBuilder.FormatMutuallyExclusiveSetErrors,\r\n                2)", span="293-296"];
m0_126 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", color=red, community=0, file="ErrorHandling.cs", label="7: return current;", span="298-298"];
m0_127 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", color=red, community=0, file="ErrorHandling.cs", label="2: return current\r\n                .AddPreOptionsLine(\r\n                    string.Concat(Environment.NewLine, current.SentenceBuilder.ErrorsHeadingText()))\r\n                .AddPreOptionsLines(errors);", span="300-303"];
m0_119 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", color=red, community=0, file="ErrorHandling.cs", label="2: throw new ArgumentNullException(''parserResult'');", span="287-287"];
m0_121 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", color=red, community=0, file="ErrorHandling.cs", label="2: throw new ArgumentNullException(''current'');", span="288-288"];
m0_125 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", color=red, community=0, file="ErrorHandling.cs", label="2: errors.Empty()", span="297-297"];
m0_128 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="285-285"];
m0_129 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
m0_48 [cluster="System.Collections.Generic.IEnumerable<CommandLine.Error>.OnlyMeaningfulOnes()", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<CommandLine.Error>.OnlyMeaningfulOnes()", span="18-18"];
m0_58 [cluster="Unk.Any", file="ErrorHandling.cs", label="Entry Unk.Any", span=""];
m0_255 [cluster="Unk.FromJustStrict", file="ErrorHandling.cs", label="Entry Unk.FromJustStrict", span=""];
m0_0 [cluster="CommandLine.Text.HelpText.HelpText()", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36"];
m0_1 [cluster="CommandLine.Text.HelpText.HelpText()", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.HelpText()", span="36-36"];
m0_379 [cluster="string.PadRight(int)", file="ErrorHandling.cs", label="Entry string.PadRight(int)", span="0-0"];
m0_460 [cluster="T.ToStringInvariant<T>()", file="ErrorHandling.cs", label="Entry T.ToStringInvariant<T>()", span="15-15"];
m0_324 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="ErrorHandling.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m0_61 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389"];
m0_174 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", color=red, community=0, file="ErrorHandling.cs", label="2: result == null", span="391-391"];
m0_176 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", color=red, community=0, file="ErrorHandling.cs", label="2: return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="393-396"];
m0_175 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", color=red, community=0, file="ErrorHandling.cs", label="2: throw new ArgumentNullException(''result'');", span="391-391"];
m0_177 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389"];
m0_274 [cluster="System.Text.StringBuilder.SafeToString()", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.SafeToString()", span="66-66"];
m0_273 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m0_92 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="ErrorHandling.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m0_90 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m0_402 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
m0_135 [cluster="CommandLine.Text.HelpText.ToString()", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="580-580"];
m0_267 [cluster="CommandLine.Text.HelpText.ToString()", color=red, community=0, file="ErrorHandling.cs", label="2: int ExtraLength = 10", span="582-582"];
m0_268 [cluster="CommandLine.Text.HelpText.ToString()", color=red, community=1, file="ErrorHandling.cs", label="2: return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="583-595"];
m0_269 [cluster="CommandLine.Text.HelpText.ToString()", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.ToString()", span="580-580"];
m0_270 [cluster="string.SafeLength()", file="ErrorHandling.cs", label="Entry string.SafeLength()", span="50-50"];
m0_139 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333"];
m0_140 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", color=red, community=0, file="ErrorHandling.cs", label="1: return AddLine(postOptionsHelp, value);", span="335-335"];
m0_141 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333"];
m0_272 [cluster="string.IsNullOrEmpty(string)", file="ErrorHandling.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m0_474 [cluster="string.ToLowerInvariant()", file="ErrorHandling.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m0_426 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="840-840"];
m0_429 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", color=red, community=0, file="ErrorHandling.cs", label="3: var specLength = 0", span="842-842"];
m0_430 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", color=red, community=0, file="ErrorHandling.cs", label="5: var hasShort = spec.ShortName.Length > 0", span="844-844"];
m0_431 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", color=red, community=0, file="ErrorHandling.cs", label="5: var hasLong = spec.LongName.Length > 0", span="845-845"];
m0_433 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", color=red, community=0, file="ErrorHandling.cs", label="5: spec.MetaValue.Length > 0", span="848-848"];
m0_434 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", color=red, community=0, file="ErrorHandling.cs", label="5: metaLength = spec.MetaValue.Length + 1", span="849-849"];
m0_441 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", color=red, community=0, file="ErrorHandling.cs", label="5: specLength += spec.LongName.Length", span="862-862"];
m0_436 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", color=red, community=0, file="ErrorHandling.cs", label="0: ++specLength", span="853-853"];
m0_446 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", color=red, community=0, file="ErrorHandling.cs", label="3: specLength += 2", span="870-870"];
m0_447 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", color=red, community=0, file="ErrorHandling.cs", label="1: return specLength;", span="872-872"];
m0_435 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", color=red, community=0, file="ErrorHandling.cs", label="0: hasShort", span="851-851"];
m0_445 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", color=red, community=0, file="ErrorHandling.cs", label="3: hasShort && hasLong", span="869-869"];
m0_432 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", color=red, community=0, file="ErrorHandling.cs", label="5: var metaLength = 0", span="847-847"];
m0_440 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", color=red, community=0, file="ErrorHandling.cs", label="5: hasLong", span="860-860"];
m0_439 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", color=red, community=0, file="ErrorHandling.cs", label="3: specLength += metaLength", span="857-857"];
m0_444 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", color=red, community=0, file="ErrorHandling.cs", label="3: specLength += metaLength", span="866-866"];
m0_437 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", color=red, community=0, file="ErrorHandling.cs", label="0: AddDashesToOption", span="854-854"];
m0_438 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", color=red, community=0, file="ErrorHandling.cs", label="0: ++specLength", span="855-855"];
m0_442 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", color=red, community=0, file="ErrorHandling.cs", label="5: AddDashesToOption", span="863-863"];
m0_443 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", color=red, community=0, file="ErrorHandling.cs", label="5: specLength += 2", span="864-864"];
m0_448 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="840-840"];
m0_259 [cluster="CommandLine.Text.Example.GetFormatStylesOrDefault()", file="ErrorHandling.cs", label="Entry CommandLine.Text.Example.GetFormatStylesOrDefault()", span="124-124"];
m0_325 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", color=red, community=1, file="ErrorHandling.cs", label="1: return (from verbTuple in Verb.SelectFromTypes(types)\r\n                    select\r\n                        OptionSpecification.NewSwitch(\r\n                            string.Empty,\r\n                            verbTuple.Item1.Name,\r\n                            false,\r\n                            verbTuple.Item1.HelpText,\r\n                            string.Empty)).Concat(new[] { MakeHelpEntry(), MakeVersionEntry() });", span="665-672"];
m0_187 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="663-663"];
m0_326 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="663-663"];
m0_381 [cluster="string.Trim()", file="ErrorHandling.cs", label="Entry string.Trim()", span="0-0"];
m0_271 [cluster="System.Text.StringBuilder.SafeLength()", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.SafeLength()", span="73-73"];
m0_327 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="ErrorHandling.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m0_380 [cluster="string.FormatInvariant(params object[])", file="ErrorHandling.cs", label="Entry string.FormatInvariant(params object[])", span="25-25"];
m0_23 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ErrorHandling.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m0_299 [cluster="string.Substring(int)", file="ErrorHandling.cs", label="Entry string.Substring(int)", span="0-0"];
m0_200 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458"];
m0_201 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", color=red, community=0, file="ErrorHandling.cs", label="2: return string.Join(\r\n                Environment.NewLine,\r\n                RenderParsingErrorsTextAsLines(parserResult, formatError, formatMutuallyExclusiveSetErrors, indent));", span="464-466"];
m0_202 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458"];
m0_315 [cluster="System.Type.GetUsageData()", file="ErrorHandling.cs", label="Entry System.Type.GetUsageData()", span="38-38"];
m0_401 [cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="18-18"];
m0_59 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m0_256 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ErrorHandling.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="23-23"];
m0_51 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ErrorHandling.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12"];
m0_130 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="477-477"];
m0_204 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", color=red, community=0, file="ErrorHandling.cs", label="2: parserResult == null", span="483-483"];
m0_208 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", color=red, community=0, file="ErrorHandling.cs", label="2: yield break;", span="488-488"];
m0_211 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", color=red, community=0, file="ErrorHandling.cs", label="2: yield return line.ToString();", span="495-495"];
m0_216 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", color=red, community=0, file="ErrorHandling.cs", label="2: yield return line;", span="506-506"];
m0_206 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", color=red, community=0, file="ErrorHandling.cs", label="2: var meaningfulErrors =\r\n                ((NotParsed<T>)parserResult).Errors.OnlyMeaningfulOnes()", span="485-486"];
m0_210 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", color=red, community=0, file="ErrorHandling.cs", label="2: var line = new StringBuilder(indent.Spaces())\r\n                    .Append(formatError(error))", span="493-494"];
m0_212 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", color=red, community=0, file="ErrorHandling.cs", label="2: var mutuallyErrs = \r\n                formatMutuallyExclusiveSetErrors(\r\n                    meaningfulErrors.OfType<MutuallyExclusiveSetError>())", span="498-500"];
m0_205 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", color=red, community=0, file="ErrorHandling.cs", label="2: throw new ArgumentNullException(''parserResult'');", span="483-483"];
m0_207 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", color=red, community=0, file="ErrorHandling.cs", label="2: meaningfulErrors.Empty()", span="487-487"];
m0_209 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", color=red, community=0, file="ErrorHandling.cs", label="2: meaningfulErrors\r\n                .Where(e => e.Tag != ErrorType.MutuallyExclusiveSetError)", span="490-491"];
m0_213 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", color=red, community=0, file="ErrorHandling.cs", label="1: mutuallyErrs.Length > 0", span="501-501"];
m0_214 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", color=red, community=0, file="ErrorHandling.cs", label="2: var lines = mutuallyErrs\r\n                    .Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="503-504"];
m0_215 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", color=red, community=0, file="ErrorHandling.cs", label="6: lines", span="505-505"];
m0_217 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="477-477"];
m0_340 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="720-720"];
m0_348 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="2: optionsHelp.Append(''  '')", span="722-722"];
m0_349 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="2: var name = new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.Tag == SpecificationType.Option,\r\n                    it => it.Append(AddOptionName(maxLength, (OptionSpecification)specification)),\r\n                    it => it.Append(AddValueName(maxLength, (ValueSpecification)specification)))", span="723-727"];
m0_350 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="5: optionsHelp\r\n                .Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())\r\n                .Append(''    '')", span="729-731"];
m0_351 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="0: var optionHelpText = specification.HelpText", span="733-733"];
m0_352 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="0: addEnumValuesToHelpText && specification.EnumValues.Any()", span="735-735"];
m0_353 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="0: optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="736-736"];
m0_354 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="2: specification.DefaultValue.Do(\r\n                defaultValue => optionHelpText = ''(Default: {0}) ''.FormatInvariant(FormatDefaultValue(defaultValue)) + optionHelpText)", span="738-739"];
m0_355 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="5: specification.Required", span="741-741"];
m0_356 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="2: optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="742-742"];
m0_362 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="0: words[i].Length < (widthOfHelpText - wordBuffer)", span="752-752"];
m0_365 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="5: (widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="756-756"];
m0_368 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="2: words[i].Length >= widthOfHelpText && wordBuffer == 0", span="762-762"];
m0_369 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="0: optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="764-764"];
m0_370 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="2: wordBuffer = widthOfHelpText", span="765-765"];
m0_373 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="1: optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="773-774"];
m0_374 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="2: optionHelpText.Length > widthOfHelpText", span="776-776"];
m0_357 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="2: !string.IsNullOrEmpty(optionHelpText)", span="744-744"];
m0_359 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="0: var words = optionHelpText.Split(' ')", span="749-749"];
m0_372 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="2: optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="772-772"];
m0_375 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="2: optionsHelp\r\n                .Append(optionHelpText)\r\n                .Append(Environment.NewLine)\r\n                .AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="779-782"];
m0_358 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="2: var wordBuffer = 0", span="748-748"];
m0_364 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="2: wordBuffer += words[i].Length", span="755-755"];
m0_360 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="0: var i = 0", span="750-750"];
m0_361 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="2: i < words.Length", span="750-750"];
m0_363 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="0: optionsHelp.Append(words[i])", span="754-754"];
m0_371 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="0: i++", span="750-750"];
m0_367 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="2: wordBuffer++", span="759-759"];
m0_366 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="7: optionsHelp.Append('' '')", span="758-758"];
m0_376 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=red, community=0, file="ErrorHandling.cs", label="1: return this;", span="784-784"];
m0_377 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="720-720"];
m0_344 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="703-703"];
m0_307 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="703-703"];
m0_343 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", color=red, community=0, file="ErrorHandling.cs", label="2: return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''version'',\r\n                false,\r\n                sentenceBuilder.VersionCommandText(AddDashesToOption),\r\n                string.Empty);", span="705-710"];
m0_403 [cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="27-27"];
m0_131 [cluster="string.Concat(string, string)", file="ErrorHandling.cs", label="Entry string.Concat(string, string)", span="0-0"];
m0_422 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="829-836"];
m0_63 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="2: license.AddToHelpText(auto, true)", span="220-220"];
m0_67 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="2: usage.AddToHelpText(auto, true)", span="233-233"];
m0_70 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="1: auto.AddPreOptionsLines(lines)", span="236-236"];
m0_62 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="220-220"];
m0_66 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="233-233"];
m0_69 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="236-236"];
m0_73 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="239-239"];
m0_64 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="220-220"];
m0_68 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="233-233"];
m0_71 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="236-236"];
m0_74 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="7: e.Tag == ErrorType.NoVerbSelectedError", span="239-239"];
m0_75 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="239-239"];
m0_100 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="2: DefaultParsingErrorsHandler(parserResult, current)", span="271-271"];
m0_113 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="2: DefaultParsingErrorsHandler(parserResult, current)", span="277-277"];
m0_93 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="267-267"];
m0_96 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="270-270"];
m0_107 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="2: DefaultParsingErrorsHandler(pr, current)", span="276-276"];
m0_99 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="271-271"];
m0_103 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="271-271"];
m0_106 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="276-276"];
m0_109 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="276-276"];
m0_112 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="277-277"];
m0_115 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="277-277"];
m0_94 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="7: e.Tag == ErrorType.VersionRequestedError", span="267-267"];
m0_95 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="267-267"];
m0_97 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="7: e.Tag == ErrorType.HelpVerbRequestedError", span="270-270"];
m0_98 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="270-270"];
m0_101 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="271-271"];
m0_104 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="7: e", span="271-271"];
m0_105 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="271-271"];
m0_108 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="276-276"];
m0_110 [cluster="lambda expression", color=red, community=1, file="ErrorHandling.cs", label="7: e", span="276-276"];
m0_111 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="276-276"];
m0_114 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="277-277"];
m0_116 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="7: e", span="277-277"];
m0_117 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="277-277"];
m0_147 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="345-345"];
m0_148 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="1: AddPreOptionsLine(line)", span="345-345"];
m0_149 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="345-345"];
m0_154 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="356-356"];
m0_155 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="1: AddPostOptionsLine(line)", span="356-356"];
m0_156 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="356-356"];
m0_163 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="368-368"];
m0_164 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="1: AddPreOptionsLine(line)", span="368-368"];
m0_165 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="368-368"];
m0_171 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="380-380"];
m0_172 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="1: AddPostOptionsLine(line)", span="380-380"];
m0_173 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="380-380"];
m0_224 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="491-491"];
m0_225 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="7: e.Tag != ErrorType.MutuallyExclusiveSetError", span="491-491"];
m0_226 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="491-491"];
m0_231 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="518-518"];
m0_232 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="7: example", span="518-518"];
m0_233 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="518-518"];
m0_263 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="1: config.PreferShortName = s.PreferShortName", span="567-567"];
m0_264 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="1: config.GroupSwitches = s.GroupSwitches", span="568-568"];
m0_265 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="7: config.UseEqualToken = s.UseEqualToken", span="569-569"];
m0_262 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="565-570"];
m0_266 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="565-570"];
m0_310 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="642-642"];
m0_311 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="7: v.Index", span="642-642"];
m0_312 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="642-642"];
m0_317 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="651-660"];
m0_318 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="2: var prop = tuple.Item1", span="653-653"];
m0_319 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="2: var attr = tuple.Item2", span="654-654"];
m0_320 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="2: var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null)", span="656-657"];
m0_321 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="2: return Tuple.Create(attr, examples);", span="659-659"];
m0_322 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="651-660"];
m0_338 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="0: AddOption(requiredWord, maxLength, option, remainingSpace)", span="688-688"];
m0_337 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="687-688"];
m0_339 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="687-688"];
m0_384 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="2: it.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="726-726"];
m0_388 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="2: it.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="727-727"];
m0_383 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="726-726"];
m0_387 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="727-727"];
m0_391 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="739-739"];
m0_392 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="2: optionHelpText = ''(Default: {0}) ''.FormatInvariant(FormatDefaultValue(defaultValue)) + optionHelpText", span="739-739"];
m0_385 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="726-726"];
m0_389 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="727-727"];
m0_393 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="739-739"];
m0_399 [cluster="lambda expression", color=red, community=1, file="ErrorHandling.cs", label="2: it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', '')", span="793-797"];
m0_405 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="2: it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="800-803"];
m0_398 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="793-797"];
m0_404 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="800-803"];
m0_400 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="793-797"];
m0_406 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="800-803"];
m0_410 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="2: it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="812-812"];
m0_414 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="0: it.AppendFormat(''value pos. {0}'', specification.Index)", span="813-813"];
m0_409 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="812-812"];
m0_413 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="813-813"];
m0_411 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="812-812"];
m0_415 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="813-813"];
m0_423 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="2: var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec)", span="831-833"];
m0_424 [cluster="lambda expression", color=red, community=0, file="ErrorHandling.cs", label="2: return Math.Max(length, specLength);", span="835-835"];
m0_425 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="829-836"];
m0_397 [cluster="System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49"];
m0_88 [cluster="System.ArgumentException.ArgumentException(string, string)", file="ErrorHandling.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m0_386 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="787-787"];
m0_395 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", color=red, community=0, file="ErrorHandling.cs", label="2: return\r\n                new StringBuilder(maxLength)\r\n                    .MapIf(\r\n                        specification.ShortName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', ''))\r\n                    .MapIf(\r\n                        specification.LongName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue))\r\n                    .ToString();", span="789-804"];
m0_396 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="787-787"];
m0_4 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
m0_5 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
m0_473 [cluster="T.ToStringLocal<T>()", file="ErrorHandling.cs", label="Entry T.ToStringLocal<T>()", span="20-20"];
m0_329 [cluster="Unk.Concat", file="ErrorHandling.cs", label="Entry Unk.Concat", span=""];
m0_476 [cluster="System.Text.StringBuilder.ToString(int, int)", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.ToString(int, int)", span="0-0"];
m0_76 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260"];
m0_77 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", color=red, community=0, file="ErrorHandling.cs", label="2: parserResult.Tag != ParserResultType.NotParsed", span="262-262"];
m0_79 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", color=red, community=0, file="ErrorHandling.cs", label="1: var errors = ((NotParsed<T>)parserResult).Errors", span="265-265"];
m0_83 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", color=red, community=0, file="ErrorHandling.cs", label="1: return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e);", span="271-271"];
m0_86 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", color=red, community=0, file="ErrorHandling.cs", label="2: return err.Matched\r\n                ? AutoBuild(pr, current => DefaultParsingErrorsHandler(pr, current), e => e)\r\n                : AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e, true);", span="275-277"];
m0_78 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", color=red, community=0, file="ErrorHandling.cs", label="2: throw new ArgumentException(''Excepting NotParsed<T> type.'', ''parserResult'');", span="263-263"];
m0_80 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", color=red, community=0, file="ErrorHandling.cs", label="2: errors.Any(e => e.Tag == ErrorType.VersionRequestedError)", span="267-267"];
m0_82 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", color=red, community=0, file="ErrorHandling.cs", label="2: !errors.Any(e => e.Tag == ErrorType.HelpVerbRequestedError)", span="270-270"];
m0_84 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", color=red, community=0, file="ErrorHandling.cs", label="0: var err = errors.OfType<HelpVerbRequestedError>().Single()", span="273-273"];
m0_81 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", color=red, community=0, file="ErrorHandling.cs", label="2: return new HelpText(HeadingInfo.Default).AddPreOptionsLine(Environment.NewLine);", span="268-268"];
m0_85 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", color=red, community=0, file="ErrorHandling.cs", label="2: var pr = new NotParsed<object>(TypeInfo.Create(err.Type), Enumerable.Empty<Error>())", span="274-274"];
m0_87 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260"];
m0_220 [cluster="int.Spaces()", file="ErrorHandling.cs", label="Entry int.Spaces()", span="35-35"];
m0_65 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="ErrorHandling.cs", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155"];
m0_223 [cluster="System.Text.StringBuilder.ToString()", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m0_254 [cluster="CSharpx.Maybe<T>.MatchNothing()", file="ErrorHandling.cs", label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57"];
m0_475 [cluster="System.Text.StringBuilder.StringBuilder()", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m0_166 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsText(string)", span="377-377"];
m0_167 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", color=red, community=0, file="ErrorHandling.cs", label="2: var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="379-379"];
m0_168 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", color=red, community=0, file="ErrorHandling.cs", label="1: lines.ForEach(line => AddPostOptionsLine(line))", span="380-380"];
m0_169 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", color=red, community=0, file="ErrorHandling.cs", label="1: return this;", span="381-381"];
m0_170 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddPostOptionsText(string)", span="377-377"];
m0_60 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="405-405"];
m0_180 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", color=red, community=0, file="ErrorHandling.cs", label="2: types == null", span="407-407"];
m0_182 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", color=red, community=0, file="ErrorHandling.cs", label="0: types.Length == 0", span="408-408"];
m0_184 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", color=red, community=0, file="ErrorHandling.cs", label="2: return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="410-413"];
m0_181 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", color=red, community=0, file="ErrorHandling.cs", label="2: throw new ArgumentNullException(''types'');", span="407-407"];
m0_183 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", color=red, community=0, file="ErrorHandling.cs", label="2: throw new ArgumentOutOfRangeException(''types'');", span="408-408"];
m0_185 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="405-405"];
m0_253 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="648-648"];
m0_313 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", color=red, community=0, file="ErrorHandling.cs", label="1: return type.GetUsageData().Map(\r\n                tuple =>\r\n                {\r\n                    var prop = tuple.Item1;\r\n                    var attr = tuple.Item2;\r\n\r\n                    var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null);\r\n\r\n                    return Tuple.Create(attr, examples);\r\n                });", span="650-660"];
m0_314 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="648-648"];
m0_162 [cluster="string.Split(string[], System.StringSplitOptions)", file="ErrorHandling.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m0_203 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="ErrorHandling.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m0_8 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="82-82"];
m0_9 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.HelpText(string, string)", span="82-82"];
m0_227 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516"];
m0_228 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", color=red, community=0, file="ErrorHandling.cs", label="2: return RenderUsageText(parserResult, example => example);", span="518-518"];
m0_229 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516"];
m0_146 [cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="231-231"];
m0_296 [cluster="string.Split(params char[])", file="ErrorHandling.cs", label="Entry string.Split(params char[])", span="0-0"];
m0_24 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m0_328 [cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", file="ErrorHandling.cs", label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45"];
m0_394 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", span="895-895"];
m0_461 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="value is bool", span="897-897"];
m0_462 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="return value.ToStringLocal().ToLowerInvariant();", span="898-898"];
m0_463 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="value is string", span="900-900"];
m0_464 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="return value.ToStringLocal();", span="901-901"];
m0_465 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="var asEnumerable = value as IEnumerable", span="903-903"];
m0_467 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="return value.ToStringLocal();", span="905-905"];
m0_466 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="asEnumerable == null", span="904-904"];
m0_469 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label=asEnumerable, span="908-908"];
m0_468 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="var builder = new StringBuilder()", span="907-907"];
m0_470 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="builder\r\n                    .Append(item.ToStringLocal())\r\n                    .Append('' '')", span="909-911"];
m0_471 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="return builder.Length > 0\r\n                ? builder.ToString(0, builder.Length - 1)\r\n                : string.Empty;", span="913-915"];
m0_472 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", span="895-895"];
m0_25 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196"];
m0_26 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", color=red, community=0, file="ErrorHandling.cs", label="2: var auto = new HelpText {\r\n                Heading = HeadingInfo.Default,\r\n                Copyright = CopyrightInfo.Default,\r\n                AdditionalNewLineAfterOption = true,\r\n                AddDashesToOption = !verbsIndex\r\n            }", span="202-207"];
m0_28 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", color=red, community=0, file="ErrorHandling.cs", label="2: onError != null && parserResult.Tag == ParserResultType.NotParsed", span="211-211"];
m0_29 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", color=red, community=0, file="ErrorHandling.cs", label="2: errors = ((NotParsed<T>)parserResult).Errors", span="213-213"];
m0_31 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", color=red, community=0, file="ErrorHandling.cs", label="2: auto = onError(auto)", span="216-216"];
m0_34 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", color=red, community=0, file="ErrorHandling.cs", label="2: var usageLines = HelpText.RenderUsageTextAsLines(parserResult, onExample).ToMaybe()", span="223-223"];
m0_41 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", color=red, community=0, file="ErrorHandling.cs", label="1: (verbsIndex && parserResult.TypeInfo.Choices.Any())\r\n                || errors.Any(e => e.Tag == ErrorType.NoVerbSelectedError)", span="238-239"];
m0_43 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", color=red, community=0, file="ErrorHandling.cs", label="1: auto.AddVerbs(parserResult.TypeInfo.Choices.ToArray())", span="242-242"];
m0_44 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", color=red, community=0, file="ErrorHandling.cs", label="2: auto.AddOptions(parserResult)", span="245-245"];
m0_27 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", color=red, community=0, file="ErrorHandling.cs", label="1: var errors = Enumerable.Empty<Error>()", span="209-209"];
m0_32 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", color=red, community=0, file="ErrorHandling.cs", label="2: ReflectionHelper.GetAttribute<AssemblyLicenseAttribute>()\r\n                .Do(license => license.AddToHelpText(auto, true))", span="219-220"];
m0_36 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", color=red, community=0, file="ErrorHandling.cs", label="2: var heading = auto.SentenceBuilder.UsageHeadingText()", span="227-227"];
m0_38 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", color=red, community=0, file="ErrorHandling.cs", label="2: auto.AddPreOptionsLine(heading)", span="229-229"];
m0_39 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", color=red, community=0, file="ErrorHandling.cs", label="2: usageAttr.Do(\r\n                usage => usage.AddToHelpText(auto, true))", span="232-233"];
m0_40 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", color=red, community=0, file="ErrorHandling.cs", label="2: usageLines.Do(\r\n                lines => auto.AddPreOptionsLines(lines))", span="235-236"];
m0_42 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", color=red, community=0, file="ErrorHandling.cs", label="1: auto.AddDashesToOption = false", span="241-241"];
m0_45 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", color=red, community=0, file="ErrorHandling.cs", label="2: return auto;", span="247-247"];
m0_30 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", color=red, community=0, file="ErrorHandling.cs", label="2: errors.OnlyMeaningfulOnes().Any()", span="215-215"];
m0_33 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", color=red, community=0, file="ErrorHandling.cs", label="2: var usageAttr = ReflectionHelper.GetAttribute<AssemblyUsageAttribute>()", span="222-222"];
m0_35 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", color=red, community=0, file="ErrorHandling.cs", label="2: usageAttr.IsJust() || usageLines.IsJust()", span="225-225"];
m0_37 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", color=red, community=0, file="ErrorHandling.cs", label="2: heading.Length > 0", span="228-228"];
m0_46 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196"];
m0_50 [cluster="System.Func<T, TResult>.Invoke(T)", file="ErrorHandling.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m0_47 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ErrorHandling.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m0_218 [cluster="Unk.Where", file="ErrorHandling.cs", label="Entry Unk.Where", span=""];
m0_91 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ErrorHandling.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m0_382 [cluster="string.String(char, int)", file="ErrorHandling.cs", label="Entry string.String(char, int)", span="0-0"];
m0_298 [cluster="System.Math.Min(int, int)", file="ErrorHandling.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m0_309 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m0_412 [cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0"];
m0_257 [cluster="Unk.mapperFunc", file="ErrorHandling.cs", label="Entry Unk.mapperFunc", span=""];
m0_260 [cluster="Unk.Append", file="ErrorHandling.cs", label="Entry Unk.Append", span=""];
m0_54 [cluster="System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()", span="331-331"];
m0_179 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="675-675"];
m0_330 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", color=red, community=0, file="ErrorHandling.cs", label="2: var maxLength = GetMaxLength(specifications)", span="680-680"];
m0_332 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", color=red, community=0, file="ErrorHandling.cs", label="2: var remainingSpace = maximumLength - (maxLength + 6)", span="684-684"];
m0_333 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", color=red, community=0, file="ErrorHandling.cs", label="2: specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="686-688"];
m0_331 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", color=red, community=0, file="ErrorHandling.cs", label="1: optionsHelp = new StringBuilder(BuilderCapacity)", span="682-682"];
m0_334 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", color=red, community=0, file="ErrorHandling.cs", label="1: return this;", span="690-690"];
m0_335 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="675-675"];
m0_222 [cluster="System.Text.StringBuilder.Append(string)", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m0_132 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="311-311"];
m0_133 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", color=red, community=0, file="ErrorHandling.cs", label="2: return info.ToString();", span="313-313"];
m0_134 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="311-311"];
m0_138 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="713-713"];
m0_345 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", color=red, community=0, file="ErrorHandling.cs", label="1: AddLine(preOptionsHelp, value, maximumLength)", span="715-715"];
m0_346 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", color=red, community=0, file="ErrorHandling.cs", label="2: return this;", span="717-717"];
m0_347 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="713-713"];
m0_323 [cluster="System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", file="ErrorHandling.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", span="0-0"];
m0_142 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="819-819"];
m0_416 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", color=red, community=0, file="ErrorHandling.cs", label="1: AddLine(builder, value, MaximumDisplayWidth)", span="821-821"];
m0_417 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", color=red, community=0, file="ErrorHandling.cs", label="2: return this;", span="823-823"];
m0_418 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="819-819"];
m0_2 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48"];
m0_3 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48"];
m0_301 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", color=red, community=0, file="ErrorHandling.cs", label="2: var optionSpecs = specs\r\n                .OfType<OptionSpecification>()\r\n                .Concat(new[] { MakeHelpEntry(), MakeVersionEntry() })", span="637-639"];
m0_178 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="634-634"];
m0_300 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", color=red, community=0, file="ErrorHandling.cs", label="2: var specs = type.GetSpecifications(Specification.FromProperty)", span="636-636"];
m0_302 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", color=red, community=0, file="ErrorHandling.cs", label="2: var valueSpecs = specs\r\n                .OfType<ValueSpecification>()\r\n                .OrderBy(v => v.Index)", span="640-642"];
m0_303 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", color=red, community=0, file="ErrorHandling.cs", label="7: return Enumerable.Empty<Specification>()\r\n                .Concat(optionSpecs)\r\n                .Concat(valueSpecs);", span="643-645"];
m0_304 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="634-634"];
m0_275 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="598-598"];
m0_276 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", color=red, community=0, file="ErrorHandling.cs", label="0: builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="600-600"];
m0_278 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", color=red, community=0, file="ErrorHandling.cs", label="0: var words = value.Split(' ')", span="604-604"];
m0_281 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", color=red, community=0, file="ErrorHandling.cs", label="0: words[i].Length < (maximumLength - wordBuffer)", span="607-607"];
m0_282 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", color=red, community=0, file="ErrorHandling.cs", label="5: builder.Append(words[i])", span="609-609"];
m0_284 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", color=red, community=0, file="ErrorHandling.cs", label="7: (maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="611-611"];
m0_285 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", color=red, community=0, file="ErrorHandling.cs", label="2: builder.Append('' '')", span="613-613"];
m0_287 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", color=red, community=0, file="ErrorHandling.cs", label="0: words[i].Length >= maximumLength && wordBuffer == 0", span="617-617"];
m0_288 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", color=red, community=0, file="ErrorHandling.cs", label="1: builder.Append(words[i].Substring(0, maximumLength))", span="619-619"];
m0_289 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", color=red, community=0, file="ErrorHandling.cs", label="2: wordBuffer = maximumLength", span="620-620"];
m0_291 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", color=red, community=0, file="ErrorHandling.cs", label="2: value = value.Substring(Math.Min(wordBuffer, value.Length))", span="626-626"];
m0_292 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", color=red, community=0, file="ErrorHandling.cs", label="2: builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="627-627"];
m0_293 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", color=red, community=0, file="ErrorHandling.cs", label="2: value.Length > maximumLength", span="629-629"];
m0_294 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", color=red, community=0, file="ErrorHandling.cs", label="2: builder.Append(value)", span="631-631"];
m0_277 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", color=red, community=0, file="ErrorHandling.cs", label="1: var wordBuffer = 0", span="603-603"];
m0_283 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", color=red, community=0, file="ErrorHandling.cs", label="0: wordBuffer += words[i].Length", span="610-610"];
m0_279 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", color=red, community=0, file="ErrorHandling.cs", label="1: var i = 0", span="605-605"];
m0_280 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", color=red, community=0, file="ErrorHandling.cs", label="0: i < words.Length", span="605-605"];
m0_290 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", color=red, community=0, file="ErrorHandling.cs", label="1: i++", span="605-605"];
m0_286 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", color=red, community=0, file="ErrorHandling.cs", label="2: wordBuffer++", span="614-614"];
m0_295 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="598-598"];
m0_10 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95"];
m0_11 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", color=red, community=0, file="ErrorHandling.cs", label="2: sentenceBuilder == null", span="97-97"];
m0_13 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", color=red, community=0, file="ErrorHandling.cs", label="2: heading == null", span="98-98"];
m0_15 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", color=red, community=0, file="ErrorHandling.cs", label="1: copyright == null", span="99-99"];
m0_19 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", color=red, community=0, file="ErrorHandling.cs", label="1: this.sentenceBuilder = sentenceBuilder", span="104-104"];
m0_20 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", color=red, community=0, file="ErrorHandling.cs", label="7: this.heading = heading", span="105-105"];
m0_21 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", color=red, community=0, file="ErrorHandling.cs", label="2: this.copyright = copyright", span="106-106"];
m0_12 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", color=red, community=0, file="ErrorHandling.cs", label="2: throw new ArgumentNullException(''sentenceBuilder'');", span="97-97"];
m0_14 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", color=red, community=0, file="ErrorHandling.cs", label="2: throw new ArgumentNullException(''heading'');", span="98-98"];
m0_16 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", color=red, community=0, file="ErrorHandling.cs", label="2: throw new ArgumentNullException(''copyright'');", span="99-99"];
m0_17 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", color=red, community=0, file="ErrorHandling.cs", label="2: preOptionsHelp = new StringBuilder(BuilderCapacity)", span="101-101"];
m0_18 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", color=red, community=0, file="ErrorHandling.cs", label="2: postOptionsHelp = new StringBuilder(BuilderCapacity)", span="102-102"];
m0_22 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95"];
m0_390 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="807-807"];
m0_407 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", color=red, community=0, file="ErrorHandling.cs", label="2: return new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.MetaName.Length > 0,\r\n                    it => it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index),\r\n                    it => it.AppendFormat(''value pos. {0}'', specification.Index))\r\n                .AppendFormatWhen(\r\n                    specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                .ToString();", span="809-816"];
m0_408 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="807-807"];
m0_72 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="343-343"];
m0_143 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", color=red, community=0, file="ErrorHandling.cs", label="1: lines.ForEach(line => AddPreOptionsLine(line))", span="345-345"];
m0_144 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", color=red, community=0, file="ErrorHandling.cs", label="2: return this;", span="346-346"];
m0_145 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="343-343"];
m0_428 [cluster="System.Math.Max(int, int)", file="ErrorHandling.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m0_221 [cluster="Unk.formatError", file="ErrorHandling.cs", label="Entry Unk.formatError", span=""];
m0_336 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="826-826"];
m0_419 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", color=red, community=0, file="ErrorHandling.cs", label="2: return specifications.Aggregate(0,\r\n                (length, spec) =>\r\n                    {\r\n                        var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec);\r\n\r\n                        return Math.Max(length, specLength);\r\n                    });", span="828-836"];
m0_420 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="826-826"];
m0_378 [cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41"];
m0_186 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="ErrorHandling.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m0_342 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="693-693"];
m0_306 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="693-693"];
m0_341 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", color=red, community=0, file="ErrorHandling.cs", label="2: return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''help'',\r\n                false,\r\n                sentenceBuilder.HelpCommandText(AddDashesToOption),\r\n                string.Empty);", span="695-700"];
m0_297 [cluster="string.Substring(int, int)", file="ErrorHandling.cs", label="Entry string.Substring(int, int)", span="0-0"];
m0_188 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="422-422"];
m0_189 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", color=red, community=0, file="ErrorHandling.cs", label="2: result == null", span="424-424"];
m0_191 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", color=red, community=0, file="ErrorHandling.cs", label="2: return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="426-429"];
m0_190 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", color=red, community=0, file="ErrorHandling.cs", label="0: throw new ArgumentNullException(''result'');", span="424-424"];
m0_192 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="422-422"];
m0_427 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="875-875"];
m0_449 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", color=red, community=0, file="ErrorHandling.cs", label="4: var specLength = 0", span="877-877"];
m0_450 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", color=red, community=0, file="ErrorHandling.cs", label="5: var hasMeta = spec.MetaName.Length > 0", span="879-879"];
m0_452 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="ErrorHandling.cs", label="spec.MetaValue.Length > 0", span="882-882"];
m0_453 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="ErrorHandling.cs", label="metaLength = spec.MetaValue.Length + 1", span="883-883"];
m0_455 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="ErrorHandling.cs", label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="886-886"];
m0_456 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="ErrorHandling.cs", label="specLength += spec.Index.ToStringInvariant().Length + 11", span="888-888"];
m0_451 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", color=red, community=0, file="ErrorHandling.cs", label="1: var metaLength = 0", span="881-881"];
m0_454 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="ErrorHandling.cs", label=hasMeta, span="885-885"];
m0_457 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="ErrorHandling.cs", label="specLength += metaLength", span="890-890"];
m0_458 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="ErrorHandling.cs", label="return specLength;", span="892-892"];
m0_459 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="875-875"];
m0_57 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322"];
m0_136 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", color=red, community=0, file="ErrorHandling.cs", label="1: return AddPreOptionsLine(value, MaximumDisplayWidth);", span="324-324"];
m0_137 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322"];
m0_316 [cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", file="ErrorHandling.cs", label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="265-265"];
m0_305 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="ErrorHandling.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m0_49 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m0_56 [cluster="System.Func<TResult>.Invoke()", file="ErrorHandling.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m0_193 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="439-439"];
m0_194 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", color=red, community=0, file="ErrorHandling.cs", label="2: types == null", span="441-441"];
m0_196 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", color=red, community=0, file="ErrorHandling.cs", label="0: types.Length == 0", span="442-442"];
m0_198 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", color=red, community=0, file="ErrorHandling.cs", label="2: return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="444-447"];
m0_195 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", color=red, community=0, file="ErrorHandling.cs", label="2: throw new ArgumentNullException(''types'');", span="441-441"];
m0_197 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", color=red, community=0, file="ErrorHandling.cs", label="2: throw new ArgumentOutOfRangeException(''types'');", span="442-442"];
m0_199 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="439-439"];
m0_150 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="354-354"];
m0_151 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", color=red, community=0, file="ErrorHandling.cs", label="1: lines.ForEach(line => AddPostOptionsLine(line))", span="356-356"];
m0_152 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", color=red, community=0, file="ErrorHandling.cs", label="2: return this;", span="357-357"];
m0_153 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="354-354"];
m0_52 [cluster="CSharpx.Maybe<T>.Do<T>(System.Action<T>)", file="ErrorHandling.cs", label="Entry CSharpx.Maybe<T>.Do<T>(System.Action<T>)", span="300-300"];
m0_157 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsText(string)", span="365-365"];
m0_158 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", color=red, community=0, file="ErrorHandling.cs", label="2: var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="367-367"];
m0_159 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", color=red, community=0, file="ErrorHandling.cs", label="1: lines.ForEach(line => AddPreOptionsLine(line))", span="368-368"];
m0_160 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", color=red, community=0, file="ErrorHandling.cs", label="2: return this;", span="369-369"];
m0_161 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsText(string)", span="365-365"];
m0_6 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70"];
m0_7 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70"];
m0_230 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="528-528"];
m0_234 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", color=red, community=0, file="ErrorHandling.cs", label="2: return string.Join(Environment.NewLine, RenderUsageTextAsLines(parserResult, mapperFunc));", span="530-530"];
m0_235 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="528-528"];
m0_53 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="540-540"];
m0_236 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", color=red, community=0, file="ErrorHandling.cs", label="2: parserResult == null", span="542-542"];
m0_240 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", color=red, community=0, file="ErrorHandling.cs", label="2: yield break;", span="546-546"];
m0_247 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", color=red, community=0, file="ErrorHandling.cs", label="2: yield return exampleText.ToString();", span="557-557"];
m0_251 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", color=red, community=0, file="ErrorHandling.cs", label="2: yield return commandLine.ToString();", span="571-571"];
m0_238 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", color=red, community=0, file="ErrorHandling.cs", label="2: var usage = GetUsageFromType(parserResult.TypeInfo.Current)", span="544-544"];
m0_245 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", color=red, community=0, file="ErrorHandling.cs", label="2: var example = mapperFunc(e)", span="554-554"];
m0_237 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", color=red, community=0, file="ErrorHandling.cs", label="2: throw new ArgumentNullException(''parserResult'');", span="542-542"];
m0_239 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", color=red, community=0, file="ErrorHandling.cs", label="2: usage.MatchNothing()", span="545-545"];
m0_241 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", color=red, community=0, file="ErrorHandling.cs", label="2: var usageTuple = usage.FromJustStrict()", span="548-548"];
m0_242 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", color=red, community=0, file="ErrorHandling.cs", label="2: var examples = usageTuple.Item2", span="549-549"];
m0_243 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", color=red, community=0, file="ErrorHandling.cs", label="2: var appAlias = usageTuple.Item1.ApplicationAlias ?? ReflectionHelper.GetAssemblyName()", span="550-550"];
m0_244 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", color=red, community=0, file="ErrorHandling.cs", label="2: examples", span="552-552"];
m0_250 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", color=red, community=0, file="ErrorHandling.cs", label="2: var commandLine = new StringBuilder(2.Spaces())\r\n                        .Append(appAlias)\r\n                        .Append(' ')\r\n                        .Append(Parser.Default.FormatCommandLine(example.Sample,\r\n                            config =>\r\n                            {\r\n                                config.PreferShortName = s.PreferShortName;\r\n                                config.GroupSwitches = s.GroupSwitches;\r\n                                config.UseEqualToken = s.UseEqualToken;\r\n                            }))", span="561-570"];
m0_246 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", color=red, community=0, file="ErrorHandling.cs", label="2: var exampleText = new StringBuilder(example.HelpText)\r\n                    .Append(':')", span="555-556"];
m0_248 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", color=red, community=0, file="ErrorHandling.cs", label="2: var styles = example.GetFormatStylesOrDefault()", span="558-558"];
m0_249 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", color=red, community=0, file="ErrorHandling.cs", label="2: styles", span="559-559"];
m0_252 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="540-540"];
m0_421 [cluster="Unk.Aggregate", file="ErrorHandling.cs", label="Entry Unk.Aggregate", span=""];
m0_261 [cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="ErrorHandling.cs", label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="95-95"];
m0_219 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m0_89 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="ErrorHandling.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m0_55 [cluster="CSharpx.Maybe<T>.IsJust<T>()", file="ErrorHandling.cs", label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326"];
m0_308 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m0_477 [file="ErrorHandling.cs", label="CommandLine.Text.HelpText", span=""];
m0_478 [file="ErrorHandling.cs", label=auto, span=""];
m0_479 [file="ErrorHandling.cs", label="CommandLine.ParserResult<T>", span=""];
m0_480 [file="ErrorHandling.cs", label=pr, span=""];
m0_481 [file="ErrorHandling.cs", label=s, span=""];
m0_482 [file="ErrorHandling.cs", label=string, span=""];
m0_483 [file="ErrorHandling.cs", label=maxLength, span=""];
m0_484 [file="ErrorHandling.cs", label=remainingSpace, span=""];
m0_485 [file="ErrorHandling.cs", label=int, span=""];
m0_486 [file="ErrorHandling.cs", label="CommandLine.Core.Specification", span=""];
m0_487 [file="ErrorHandling.cs", label=optionHelpText, span=""];
m0_488 [file="ErrorHandling.cs", label="CommandLine.Core.OptionSpecification", span=""];
m0_489 [file="ErrorHandling.cs", label="CommandLine.Core.ValueSpecification", span=""];
m3_66 [cluster="Unk.SingleOrDefault", file="InstanceChooser.cs", label="Entry Unk.SingleOrDefault", span=""];
m3_28 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="95-95"];
m3_77 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="InstanceChooser.cs", label="return new NotParsed<object>(new NullInstance(), types, errors);", span="97-97"];
m3_78 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="95-95"];
m3_46 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35"];
m3_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
m3_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="InstanceChooser.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46"];
m3_45 [cluster="Unk.>", file="InstanceChooser.cs", label="Entry Unk.>", span=""];
m3_49 [cluster="Unk.MakeNotParsed", file="InstanceChooser.cs", label="Entry Unk.MakeNotParsed", span=""];
m3_44 [cluster="Unk.Any", file="InstanceChooser.cs", label="Entry Unk.Any", span=""];
m3_18 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceChooser.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m3_31 [cluster="System.Func<T, TResult>.Invoke(T)", file="InstanceChooser.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m3_79 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceChooser.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="136-136"];
m3_36 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="61-61"];
m3_42 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="return verbs.Any(a => nameComparer.Equals(a.Item1.Name, arguments.First()))\r\n                ? InstanceBuilder.Build(\r\n                    Maybe.Just<Func<object>>(\r\n                        () =>\r\n                            verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First()))\r\n                                .Item2.AutoDefault()),\r\n                    tokenizer,\r\n                    arguments.Skip(1),\r\n                    nameComparer,\r\n                    parsingCulture)\r\n                : MakeNotParsed(verbs.Select(v => v.Item2), new BadVerbSelectedError(arguments.First()));", span="68-78"];
m3_43 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="61-61"];
m3_48 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="InstanceChooser.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357"];
m3_68 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="InstanceChooser.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
m3_14 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceChooser.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m3_35 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="InstanceChooser.cs", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="432-432"];
m3_40 [cluster="System.StringComparer.Equals(string, string)", file="InstanceChooser.cs", label="Entry System.StringComparer.Equals(string, string)", span="0-0"];
m3_56 [cluster="Unk.Single", file="InstanceChooser.cs", label="Entry Unk.Single", span=""];
m3_67 [cluster="Unk.ToMaybe", file="InstanceChooser.cs", label="Entry Unk.ToMaybe", span=""];
m3_41 [cluster="string.Concat(string, string)", file="InstanceChooser.cs", label="Entry string.Concat(string, string)", span="0-0"];
m3_73 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="90-90"];
m3_5 [cluster="lambda expression", file="InstanceChooser.cs", label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="22-22"];
m3_12 [cluster="lambda expression", file="InstanceChooser.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="22-22"];
m3_6 [cluster="lambda expression", file="InstanceChooser.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="23-23"];
m3_16 [cluster="lambda expression", file="InstanceChooser.cs", label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="23-23"];
m3_4 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="20-25"];
m3_11 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="22-22"];
m3_7 [cluster="lambda expression", file="InstanceChooser.cs", label="return explodedTokens;", span="24-24"];
m3_15 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="23-23"];
m3_8 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="20-25"];
m3_13 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="22-22"];
m3_17 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="23-23"];
m3_38 [cluster="lambda expression", file="InstanceChooser.cs", label="nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="47-48"];
m3_37 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="46-48"];
m3_39 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="46-48"];
m3_51 [cluster="lambda expression", file="InstanceChooser.cs", label="nameComparer.Equals(a.Item1.Name, arguments.First())", span="68-68"];
m3_54 [cluster="lambda expression", file="InstanceChooser.cs", label="verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First()))\r\n                                .Item2.AutoDefault()", span="72-73"];
m3_59 [cluster="lambda expression", file="InstanceChooser.cs", label="nameComparer.Equals(v.Item1.Name, arguments.First())", span="72-72"];
m3_50 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="68-68"];
m3_53 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="71-73"];
m3_61 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="78-78"];
m3_52 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="68-68"];
m3_55 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="71-73"];
m3_58 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="72-72"];
m3_60 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="72-72"];
m3_62 [cluster="lambda expression", file="InstanceChooser.cs", label="v.Item2", span="78-78"];
m3_63 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="78-78"];
m3_71 [cluster="lambda expression", file="InstanceChooser.cs", label="nameComparer.Equals(v.Item1.Name, verb)", span="87-87"];
m3_70 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="87-87"];
m3_72 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="87-87"];
m3_74 [cluster="lambda expression", file="InstanceChooser.cs", label="new HelpVerbRequestedError(v.Item1.Name, v.Item2, true)", span="90-90"];
m3_75 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="90-90"];
m3_29 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m3_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m3_34 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="81-81"];
m3_64 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="InstanceChooser.cs", label="return verb.Length > 0\r\n                ? verbs.SingleOrDefault(v => nameComparer.Equals(v.Item1.Name, verb))\r\n                        .ToMaybe()\r\n                        .Return(\r\n                            v => new HelpVerbRequestedError(v.Item1.Name, v.Item2, true),\r\n                            new HelpVerbRequestedError(null, null, false))\r\n                : new HelpVerbRequestedError(null, null, false);", span="86-92"];
m3_65 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="81-81"];
m3_47 [cluster="Unk.Select", file="InstanceChooser.cs", label="Entry Unk.Select", span=""];
m3_27 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="InstanceChooser.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m3_0 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="13-13"];
m3_1 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="return Choose(\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                types,\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="19-29"];
m3_2 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="13-13"];
m3_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceChooser.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13"];
m3_3 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="32-32"];
m3_19 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="arguments.Empty()", span="39-39"];
m3_20 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="return MakeNotParsed(types, new NoVerbSelectedError());", span="41-41"];
m3_21 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="var firstArg = arguments.First()", span="44-44"];
m3_22 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Func<string, bool> preprocCompare = command =>\r\n                    nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="46-48"];
m3_23 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="var verbs = Verb.SelectFromTypes(types)", span="50-50"];
m3_24 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="return preprocCompare(''help'')\r\n                ? MakeNotParsed(types,\r\n                    MakeHelpVerbRequestedError(verbs,\r\n                        arguments.Skip(1).SingleOrDefault() ?? string.Empty, nameComparer))\r\n                : preprocCompare(''version'')\r\n                    ? MakeNotParsed(types, new VersionRequestedError())\r\n                    : MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture);", span="52-58"];
m3_25 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="32-32"];
m3_69 [cluster="Unk.Return", file="InstanceChooser.cs", label="Entry Unk.Return", span=""];
m3_57 [cluster="Unk.AutoDefault", file="InstanceChooser.cs", label="Entry Unk.AutoDefault", span=""];
m3_80 [cluster="CommandLine.NullInstance.NullInstance()", file="InstanceChooser.cs", label="Entry CommandLine.NullInstance.NullInstance()", span="9-9"];
m3_30 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="InstanceChooser.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m3_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m3_76 [cluster="HelpVerbRequestedError.cstr", file="InstanceChooser.cs", label="Entry HelpVerbRequestedError.cstr", span=""];
m3_81 [file="InstanceChooser.cs", label="System.StringComparer", span=""];
m3_82 [file="InstanceChooser.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m3_83 [file="InstanceChooser.cs", label="System.StringComparer", span=""];
m3_84 [file="InstanceChooser.cs", label=firstArg, span=""];
m3_85 [file="InstanceChooser.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m3_86 [file="InstanceChooser.cs", label="System.StringComparer", span=""];
m3_87 [file="InstanceChooser.cs", label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span=""];
m3_88 [file="InstanceChooser.cs", label=string, span=""];
m3_89 [file="InstanceChooser.cs", label="System.StringComparer", span=""];
m5_13 [cluster="Unk.Where", file="OptionMapperTests.cs", label="Entry Unk.Where", span=""];
m5_12 [cluster="Unk.Create", file="OptionMapperTests.cs", label="Entry Unk.Create", span=""];
m5_6 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="OptionMapperTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m5_11 [cluster="Unk.Single", file="OptionMapperTests.cs", label="Entry Unk.Single", span=""];
m5_15 [cluster="Unk.NotNull", file="OptionMapperTests.cs", label="Entry Unk.NotNull", span=""];
m5_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m5_27 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="13-13"];
m5_0 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Entry CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="17-17"];
m5_1 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var tokenPartitions = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''x'', new [] { ''true'' })\r\n                }", span="20-23"];
m5_2 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var specProps = new[]\r\n                {\r\n                    SpecificationProperty.Create(\r\n                        new OptionSpecification(''x'', string.Empty, false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '\0', Maybe.Nothing<object>(), string.Empty, string.Empty, new List<string>(), typeof(bool), TargetType.Switch), \r\n                        typeof(FakeOptions).GetProperties().Single(p => p.Name.Equals(''BoolValue'', StringComparison.Ordinal)),\r\n                        Maybe.Nothing<object>())\r\n                }", span="24-30"];
m5_3 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var result = OptionMapper.MapValues(\r\n                specProps.Where(pt => pt.Specification.IsOption()),\r\n                tokenPartitions,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture),\r\n                StringComparer.InvariantCulture)", span="33-37"];
m5_4 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", color=red, community=1, file="OptionMapperTests.cs", label="2: Assert.NotNull(((Ok<IEnumerable<SpecificationProperty>, Error>)result).Value.Success.Single(\r\n                a => a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value))", span="40-43"];
m5_5 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Exit CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="17-17"];
m5_28 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="41-43"];
m5_16 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="28-28"];
m5_20 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="34-34"];
m5_24 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="36-36"];
m5_17 [cluster="lambda expression", file="OptionMapperTests.cs", label="p.Name.Equals(''BoolValue'', StringComparison.Ordinal)", span="28-28"];
m5_18 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="28-28"];
m5_21 [cluster="lambda expression", file="OptionMapperTests.cs", label="pt.Specification.IsOption()", span="34-34"];
m5_22 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="34-34"];
m5_25 [cluster="lambda expression", file="OptionMapperTests.cs", label="TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture)", span="36-36"];
m5_26 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="36-36"];
m5_29 [cluster="lambda expression", file="OptionMapperTests.cs", label="a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value", span="41-43"];
m5_30 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="41-43"];
m5_31 [cluster="string.Equals(string)", file="OptionMapperTests.cs", label="Entry string.Equals(string)", span="0-0"];
m5_8 [cluster="CSharpx.Maybe.Nothing<T>()", file="OptionMapperTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="75-75"];
m5_19 [cluster="string.Equals(string, System.StringComparison)", file="OptionMapperTests.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m5_23 [cluster="CommandLine.Core.Specification.IsOption()", file="OptionMapperTests.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m5_14 [cluster="Unk.MapValues", file="OptionMapperTests.cs", label="Entry Unk.MapValues", span=""];
m5_10 [cluster="System.Type.GetProperties()", file="OptionMapperTests.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m5_9 [cluster="System.Collections.Generic.List<T>.List()", file="OptionMapperTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m7_66 [cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="42-42"];
m7_64 [cluster="string.Substring(int, int)", file="SentenceBuilder.cs", label="Entry string.Substring(int, int)", span="0-0"];
m7_65 [cluster="System.Text.StringBuilder.Append(char)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m7_48 [cluster="Unk.Select", file="SentenceBuilder.cs", label="Entry Unk.Select", span=""];
m7_50 [cluster="Unk.Join", file="SentenceBuilder.cs", label="Entry Unk.Join", span=""];
m7_61 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m7_63 [cluster="System.Text.StringBuilder.Append(string)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m7_60 [cluster="Unk.Distinct", file="SentenceBuilder.cs", label="Entry Unk.Distinct", span=""];
m7_57 [cluster="Unk.JoinTo", file="SentenceBuilder.cs", label="Entry Unk.JoinTo", span=""];
m7_42 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="128-162"];
m7_44 [cluster="lambda expression", color=green, community=0, file="SentenceBuilder.cs", label="2: var msgs = bySet.Select(\r\n                            set =>\r\n                            {\r\n                                var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select '''''.JoinTo(e.NameInfo.NameText, ''', '')).ToArray());\r\n                                var namesCount = set.Errors.Count();\r\n\r\n                                var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from x in\r\n                                    (from s in bySet where !s.SetName.EndsWith(set.SetName) from e in s.Errors select e)\r\n                                        .Distinct()\r\n                                    select '''''.JoinTo(x.NameInfo.NameText, ''', '')).ToArray());\r\n\r\n                                return\r\n                                    new StringBuilder(''Option'')\r\n                                            .AppendWhen(namesCount > 1, ''s'')\r\n                                            .Append('': '')\r\n                                            .Append(names.Substring(0, names.Length - 2))\r\n                                            .Append(' ')\r\n                                            .AppendIf(namesCount > 1, ''are'', ''is'')\r\n                                            .Append('' not compatible with: '')\r\n                                            .Append(incompat.Substring(0, incompat.Length - 2))\r\n                                            .Append('.')\r\n                                        .ToString();\r\n                            }).ToArray()", span="134-160"];
m7_43 [cluster="lambda expression", file="SentenceBuilder.cs", label="var bySet = from e in errors\r\n                                group e by e.SetName into g\r\n                                select new { SetName = g.Key, Errors = g.ToList() }", span="130-132"];
m7_45 [cluster="lambda expression", file="SentenceBuilder.cs", label="return string.Join(Environment.NewLine, msgs);", span="161-161"];
m7_51 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="135-160"];
m7_55 [cluster="lambda expression", color=green, community=0, file="SentenceBuilder.cs", label="1: return\r\n                                    new StringBuilder(''Option'')\r\n                                            .AppendWhen(namesCount > 1, ''s'')\r\n                                            .Append('': '')\r\n                                            .Append(names.Substring(0, names.Length - 2))\r\n                                            .Append(' ')\r\n                                            .AppendIf(namesCount > 1, ''are'', ''is'')\r\n                                            .Append('' not compatible with: '')\r\n                                            .Append(incompat.Substring(0, incompat.Length - 2))\r\n                                            .Append('.')\r\n                                        .ToString();", span="149-159"];
m7_54 [cluster="lambda expression", file="SentenceBuilder.cs", label="var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from x in\r\n                                    (from s in bySet where !s.SetName.EndsWith(set.SetName) from e in s.Errors select e)\r\n                                        .Distinct()\r\n                                    select '''''.JoinTo(x.NameInfo.NameText, ''', '')).ToArray())", span="142-147"];
m7_52 [cluster="lambda expression", file="SentenceBuilder.cs", label="var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select '''''.JoinTo(e.NameInfo.NameText, ''', '')).ToArray())", span="137-139"];
m7_53 [cluster="lambda expression", file="SentenceBuilder.cs", label="var namesCount = set.Errors.Count()", span="140-140"];
m7_56 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="135-160"];
m7_46 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="128-162"];
m7_49 [cluster="Unk.ToArray", file="SentenceBuilder.cs", label="Entry Unk.ToArray", span=""];
m7_62 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m7_58 [cluster="Unk.Count", file="SentenceBuilder.cs", label="Entry Unk.Count", span=""];
m7_67 [cluster="System.Text.StringBuilder.ToString()", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m7_3 [cluster="CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", file="SentenceBuilder.cs", label="Entry CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", span="61-61"];
m7_59 [cluster="Unk.EndsWith", file="SentenceBuilder.cs", label="Entry Unk.EndsWith", span=""];
m7_0 [cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", file="SentenceBuilder.cs", label="Entry CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", span="45-45"];
m7_1 [cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", file="SentenceBuilder.cs", label="Assumes.NotNullOrEmpty(longName, ''longName'')", span="48-48"];
m7_2 [cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", file="SentenceBuilder.cs", label="Exit CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", span="45-45"];
m7_47 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="SentenceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m7_68 [file="SentenceBuilder.cs", label=bySet, span=""];
m10_14 [cluster="Unk.Create", file="Tokenizer.cs", label="Entry Unk.Create", span=""];
m10_4 [cluster="Unk.SingleOrDefault", file="Tokenizer.cs", label="Entry Unk.SingleOrDefault", span=""];
m10_10 [cluster="Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", file="Tokenizer.cs", label="Exit Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", span="52-52"];
m10_6 [cluster="Unk.Map", file="Tokenizer.cs", label="Entry Unk.Map", span=""];
m10_5 [cluster="Unk.ToMaybe", file="Tokenizer.cs", label="Entry Unk.ToMaybe", span=""];
m10_0 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Tokenizer.cs", label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12"];
m10_1 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Tokenizer.cs", label="var info = specifications.SingleOrDefault(a => name.MatchName(a.ShortName, a.LongName, comparer))\r\n                .ToMaybe()\r\n                    .Map(\r\n                        s => TypeDescriptor.Create(s.TargetType, s.Max))", span="17-20"];
m10_2 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Tokenizer.cs", label="return info;", span="21-21"];
m10_3 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Tokenizer.cs", label="Exit CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12"];
m10_11 [cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", file="Tokenizer.cs", label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", span="27-27"];
m10_8 [cluster="Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", file="Tokenizer.cs", label="Entry Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", span="52-52"];
m10_7 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="17-17"];
m10_9 [cluster="Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", color=green, community=0, file="Tokenizer.cs", label="2: return Configurator.NumberToWordsConverter.ConvertToOrdinal(number);", span="54-54"];
m10_12 [cluster="lambda expression", file="Tokenizer.cs", label="TypeDescriptor.Create(s.TargetType, s.Max)", span="20-20"];
m10_13 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="20-20"];
m10_15 [file="Tokenizer.cs", label=string, span=""];
m10_16 [file="Tokenizer.cs", label="System.StringComparer", span=""];
m12_36 [cluster="CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="ValueMapper.cs", label="Entry CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="126-126"];
m12_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
m12_0 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="Entry CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="14-14"];
m12_1 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="var propAndErrors = MapValuesImpl(specProps, values, converter)", span="19-19"];
m12_2 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", color=red, community=1, file="ValueMapper.cs", label="2: return Result.Succeed(\r\n                propAndErrors.Select(pe => pe.Item1),\r\n                propAndErrors.Select(pe => pe.Item2)\r\n                    .OfType<Just<Error>>().Select(e => e.Value)\r\n                );", span="21-25"];
m12_3 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="Exit CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="14-14"];
m12_71 [cluster="CSharpx.Maybe<T>.FromJust<T>(System.Exception)", file="ValueMapper.cs", label="Entry CSharpx.Maybe<T>.FromJust<T>(System.Exception)", span="160-160"];
m12_6 [cluster="Unk.>", file="ValueMapper.cs", label="Entry Unk.>", span=""];
m12_4 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="Entry CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="28-28"];
m12_17 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="specProps.Empty()", span="33-33"];
m12_18 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="yield break;", span="35-35"];
m12_22 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="yield return\r\n                    Tuple.Create(pt, pt.Specification.MakeErrorInCaseOfMinConstraint());", span="41-42"];
m12_23 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="yield break;", span="43-43"];
m12_26 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="yield return\r\n                    Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                        pt, Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName)));", span="51-53"];
m12_27 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="yield break;", span="54-54"];
m12_28 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="yield return\r\n                converter(taken, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                    .Return(\r\n                        converted => Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>()),\r\n                        Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                            pt, Maybe.Just<Error>(new BadFormatConversionError(NameInfo.EmptyName))));", span="57-62"];
m12_30 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="yield return value;", span="66-66"];
m12_19 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="var pt = specProps.First()", span="37-37"];
m12_20 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="var taken = values.Take(pt.Specification.CountOfMaxNumberOfValues().Return(n => n, values.Count()))", span="38-38"];
m12_24 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="var next = specProps.Skip(1).FirstOrDefault(s => s.Specification.IsValue()).ToMaybe()", span="46-46"];
m12_25 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="pt.Specification.Max.IsJust()\r\n                && next.IsNothing()\r\n                && values.Skip(taken.Count()).Any()", span="47-49"];
m12_29 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="MapValuesImpl(specProps.Skip(1), values.Skip(taken.Count()), converter)", span="64-64"];
m12_21 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="taken.Empty()", span="39-39"];
m12_31 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="Exit CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="28-28"];
m12_34 [cluster="CommandLine.Core.Specification.CountOfMaxNumberOfValues()", file="ValueMapper.cs", label="Entry CommandLine.Core.Specification.CountOfMaxNumberOfValues()", span="70-70"];
m12_56 [cluster="CommandLine.Core.Specification.IsValue()", file="ValueMapper.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m12_42 [cluster="Unk.ToMaybe", file="ValueMapper.cs", label="Entry Unk.ToMaybe", span=""];
m12_45 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m12_46 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="ValueMapper.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335"];
m12_39 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="ValueMapper.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m12_57 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="60-60"];
m12_8 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="22-22"];
m12_11 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="23-23"];
m12_14 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="24-24"];
m12_9 [cluster="lambda expression", file="ValueMapper.cs", label="pe.Item1", span="22-22"];
m12_10 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="22-22"];
m12_12 [cluster="lambda expression", file="ValueMapper.cs", label="pe.Item2", span="23-23"];
m12_13 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="23-23"];
m12_15 [cluster="lambda expression", file="ValueMapper.cs", label="e.Value", span="24-24"];
m12_16 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="24-24"];
m12_58 [cluster="lambda expression", file="ValueMapper.cs", label="Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>())", span="60-60"];
m12_50 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="38-38"];
m12_53 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="46-46"];
m12_51 [cluster="lambda expression", file="ValueMapper.cs", label=n, span="38-38"];
m12_52 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="38-38"];
m12_54 [cluster="lambda expression", file="ValueMapper.cs", label="s.Specification.IsValue()", span="46-46"];
m12_55 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="46-46"];
m12_59 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="60-60"];
m12_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m12_47 [cluster="CSharpx.Maybe.Just<T>(T)", file="ValueMapper.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="80-80"];
m12_60 [cluster="CommandLine.Core.SpecificationProperty.WithValue(CSharpx.Maybe<object>)", file="ValueMapper.cs", label="Entry CommandLine.Core.SpecificationProperty.WithValue(CSharpx.Maybe<object>)", span="18-18"];
m12_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m12_37 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m12_48 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="ValueMapper.cs", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m12_72 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ValueMapper.cs", label="Entry CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="86-86"];
m12_73 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ValueMapper.cs", label="return specification.Min.IsJust()\r\n                ? Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName))\r\n                : Maybe.Nothing<Error>();", span="88-90"];
m12_74 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ValueMapper.cs", label="Exit CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="86-86"];
m12_5 [cluster="Unk.Select", file="ValueMapper.cs", label="Entry Unk.Select", span=""];
m12_49 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="ValueMapper.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="324-324"];
m12_38 [cluster="CommandLine.Core.Specification.MakeErrorInCaseOfMinConstraint()", file="ValueMapper.cs", label="Entry CommandLine.Core.Specification.MakeErrorInCaseOfMinConstraint()", span="86-86"];
m12_61 [cluster="CSharpx.Maybe.Nothing<T>()", file="ValueMapper.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="75-75"];
m12_44 [cluster="CSharpx.Maybe<T>.IsNothing<T>()", file="ValueMapper.cs", label="Entry CSharpx.Maybe<T>.IsNothing<T>()", span="170-170"];
m12_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m12_62 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="Entry CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="70-70"];
m12_63 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="specification.TargetType", span="72-72"];
m12_67 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="specification.Max.IsJust()", span="77-77"];
m12_68 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="return Maybe.Just(specification.Max.FromJust());", span="79-79"];
m12_64 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="TargetType.Scalar", span="74-74"];
m12_66 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="TargetType.Sequence", span="76-76"];
m12_65 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="return Maybe.Just(1);", span="75-75"];
m12_69 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="return Maybe.Nothing<int>();", span="83-83"];
m12_70 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="Exit CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="70-70"];
m12_41 [cluster="Unk.FirstOrDefault", file="ValueMapper.cs", label="Entry Unk.FirstOrDefault", span=""];
m12_43 [cluster="CSharpx.Maybe<T>.IsJust<T>()", file="ValueMapper.cs", label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="175-175"];
m12_7 [cluster="Unk.Succeed", file="ValueMapper.cs", label="Entry Unk.Succeed", span=""];
m12_75 [file="ValueMapper.cs", label=pt, span=""];
n5 -> n1  [color=darkseagreen4, key=1, label="CommandLine.ValueAttribute", style=dashed];
n5 -> n2  [color=darkseagreen4, key=1, label="CommandLine.ValueAttribute", style=dashed];
n5 -> n3  [color=darkseagreen4, key=1, label="CommandLine.ValueAttribute", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n4 -> n0  [color=blue, key=0, style=bold];
m0_102 -> m0_118  [color=red, key=0, style=solid];
m0_102 -> m0_120  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_102 -> m0_122  [color=red, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_102 -> m0_123  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_102 -> m0_124  [color=red, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_102 -> m0_126  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_102 -> m0_127  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_118 -> m0_119  [color=red, key=0, style=solid];
m0_118 -> m0_120  [color=red, key=0, style=solid];
m0_120 -> m0_121  [color=red, key=0, style=solid];
m0_120 -> m0_122  [color=red, key=0, style=solid];
m0_122 -> m0_123  [color=red, key=0, style=solid];
m0_122 -> m0_124  [color=red, key=0, style=solid];
m0_122 -> m0_48  [color=red, key=2, style=dotted];
m0_122 -> m0_129  [color=red, key=2, style=dotted];
m0_123 -> m0_128  [color=red, key=0, style=solid];
m0_124 -> m0_125  [color=red, key=0, style=solid];
m0_124 -> m0_130  [color=red, key=2, style=dotted];
m0_124 -> m0_127  [color=red, key=1, label=errors, style=dashed];
m0_126 -> m0_128  [color=red, key=0, style=solid];
m0_127 -> m0_128  [color=red, key=0, style=solid];
m0_127 -> m0_56  [color=red, key=2, style=dotted];
m0_127 -> m0_131  [color=red, key=2, style=dotted];
m0_127 -> m0_57  [color=red, key=2, style=dotted];
m0_127 -> m0_72  [color=red, key=2, style=dotted];
m0_119 -> m0_128  [color=red, key=0, style=solid];
m0_119 -> m0_23  [color=red, key=2, style=dotted];
m0_121 -> m0_128  [color=red, key=0, style=solid];
m0_121 -> m0_23  [color=red, key=2, style=dotted];
m0_125 -> m0_126  [color=red, key=0, style=solid];
m0_125 -> m0_127  [color=red, key=0, style=solid];
m0_125 -> m0_129  [color=red, key=2, style=dotted];
m0_128 -> m0_102  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_61 -> m0_174  [color=red, key=0, style=solid];
m0_61 -> m0_176  [color=red, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_174 -> m0_175  [color=red, key=0, style=solid];
m0_174 -> m0_176  [color=red, key=0, style=solid];
m0_176 -> m0_177  [color=red, key=0, style=solid];
m0_176 -> m0_178  [color=red, key=2, style=dotted];
m0_176 -> m0_56  [color=red, key=2, style=dotted];
m0_176 -> m0_179  [color=red, key=2, style=dotted];
m0_175 -> m0_177  [color=red, key=0, style=solid];
m0_175 -> m0_23  [color=red, key=2, style=dotted];
m0_177 -> m0_61  [color=blue, key=0, style=bold];
m0_135 -> m0_267  [color=red, key=0, style=solid];
m0_267 -> m0_268  [color=red, key=0, style=solid];
m0_268 -> m0_269  [color=red, key=0, style=solid];
m0_268 -> m0_24  [color=red, key=2, style=dotted];
m0_268 -> m0_270  [color=red, key=2, style=dotted];
m0_268 -> m0_271  [color=red, key=2, style=dotted];
m0_268 -> m0_222  [color=red, key=2, style=dotted];
m0_268 -> m0_272  [color=red, key=2, style=dotted];
m0_268 -> m0_273  [color=red, key=2, style=dotted];
m0_268 -> m0_223  [color=red, key=2, style=dotted];
m0_268 -> m0_274  [color=red, key=2, style=dotted];
m0_269 -> m0_135  [color=blue, key=0, style=bold];
m0_139 -> m0_140  [color=red, key=0, style=solid];
m0_140 -> m0_141  [color=red, key=0, style=solid];
m0_140 -> m0_142  [color=red, key=2, style=dotted];
m0_141 -> m0_139  [color=blue, key=0, style=bold];
m0_426 -> m0_429  [color=red, key=0, style=solid];
m0_426 -> m0_430  [color=red, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m0_426 -> m0_431  [color=red, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m0_426 -> m0_433  [color=red, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m0_426 -> m0_434  [color=red, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m0_426 -> m0_441  [color=red, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m0_429 -> m0_430  [color=red, key=0, style=solid];
m0_429 -> m0_436  [color=red, key=1, label=specLength, style=dashed];
m0_429 -> m0_441  [color=red, key=1, label=specLength, style=dashed];
m0_429 -> m0_446  [color=red, key=1, label=specLength, style=dashed];
m0_429 -> m0_447  [color=red, key=1, label=specLength, style=dashed];
m0_430 -> m0_431  [color=red, key=0, style=solid];
m0_430 -> m0_435  [color=red, key=1, label=hasShort, style=dashed];
m0_430 -> m0_445  [color=red, key=1, label=hasShort, style=dashed];
m0_431 -> m0_432  [color=red, key=0, style=solid];
m0_431 -> m0_440  [color=red, key=1, label=hasLong, style=dashed];
m0_431 -> m0_445  [color=red, key=1, label=hasLong, style=dashed];
m0_433 -> m0_434  [color=red, key=0, style=solid];
m0_433 -> m0_435  [color=red, key=0, style=solid];
m0_434 -> m0_435  [color=red, key=0, style=solid];
m0_434 -> m0_439  [color=red, key=1, label=metaLength, style=dashed];
m0_434 -> m0_444  [color=red, key=1, label=metaLength, style=dashed];
m0_441 -> m0_442  [color=red, key=0, style=solid];
m0_441 -> m0_441  [color=red, key=1, label=specLength, style=dashed];
m0_441 -> m0_443  [color=red, key=1, label=specLength, style=dashed];
m0_441 -> m0_444  [color=red, key=1, label=specLength, style=dashed];
m0_436 -> m0_437  [color=red, key=0, style=solid];
m0_436 -> m0_436  [color=red, key=1, label=specLength, style=dashed];
m0_436 -> m0_438  [color=red, key=1, label=specLength, style=dashed];
m0_436 -> m0_439  [color=red, key=1, label=specLength, style=dashed];
m0_446 -> m0_447  [color=red, key=0, style=solid];
m0_446 -> m0_446  [color=red, key=1, label=specLength, style=dashed];
m0_447 -> m0_448  [color=red, key=0, style=solid];
m0_435 -> m0_436  [color=red, key=0, style=solid];
m0_435 -> m0_440  [color=red, key=0, style=solid];
m0_445 -> m0_446  [color=red, key=0, style=solid];
m0_445 -> m0_447  [color=red, key=0, style=solid];
m0_432 -> m0_433  [color=red, key=0, style=solid];
m0_432 -> m0_439  [color=red, key=1, label=metaLength, style=dashed];
m0_432 -> m0_444  [color=red, key=1, label=metaLength, style=dashed];
m0_440 -> m0_441  [color=red, key=0, style=solid];
m0_440 -> m0_445  [color=red, key=0, style=solid];
m0_439 -> m0_440  [color=red, key=0, style=solid];
m0_439 -> m0_439  [color=red, key=1, label=specLength, style=dashed];
m0_439 -> m0_441  [color=red, key=1, label=specLength, style=dashed];
m0_439 -> m0_446  [color=red, key=1, label=specLength, style=dashed];
m0_439 -> m0_447  [color=red, key=1, label=specLength, style=dashed];
m0_444 -> m0_445  [color=red, key=0, style=solid];
m0_444 -> m0_444  [color=red, key=1, label=specLength, style=dashed];
m0_444 -> m0_446  [color=red, key=1, label=specLength, style=dashed];
m0_444 -> m0_447  [color=red, key=1, label=specLength, style=dashed];
m0_437 -> m0_438  [color=red, key=0, style=solid];
m0_437 -> m0_439  [color=red, key=0, style=solid];
m0_438 -> m0_439  [color=red, key=0, style=solid];
m0_438 -> m0_438  [color=red, key=1, label=specLength, style=dashed];
m0_442 -> m0_443  [color=red, key=0, style=solid];
m0_442 -> m0_444  [color=red, key=0, style=solid];
m0_443 -> m0_444  [color=red, key=0, style=solid];
m0_443 -> m0_443  [color=red, key=1, label=specLength, style=dashed];
m0_448 -> m0_426  [color=blue, key=0, style=bold];
m0_325 -> m0_326  [color=red, key=0, style=solid];
m0_325 -> m0_327  [color=red, key=2, style=dotted];
m0_325 -> m0_328  [color=red, key=2, style=dotted];
m0_325 -> m0_306  [color=red, key=2, style=dotted];
m0_325 -> m0_307  [color=red, key=2, style=dotted];
m0_325 -> m0_329  [color=red, key=2, style=dotted];
m0_325 -> m0_325  [color=red, key=1, label=verbTuple, style=dashed];
m0_187 -> m0_325  [color=red, key=0, style=solid];
m0_326 -> m0_187  [color=blue, key=0, style=bold];
m0_200 -> m0_201  [color=red, key=0, style=solid];
m0_201 -> m0_202  [color=red, key=0, style=solid];
m0_201 -> m0_130  [color=red, key=2, style=dotted];
m0_201 -> m0_203  [color=red, key=2, style=dotted];
m0_202 -> m0_200  [color=blue, key=0, style=bold];
m0_130 -> m0_204  [color=red, key=0, style=solid];
m0_130 -> m0_208  [color=red, key=0, style=bold];
m0_130 -> m0_211  [color=red, key=0, style=bold];
m0_130 -> m0_216  [color=red, key=0, style=bold];
m0_130 -> m0_206  [color=red, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_130 -> m0_210  [color=red, key=1, label="System.Func<CommandLine.Error, string>", style=dashed];
m0_130 -> m0_212  [color=red, key=1, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>", style=dashed];
m0_204 -> m0_205  [color=red, key=0, style=solid];
m0_204 -> m0_206  [color=red, key=0, style=solid];
m0_208 -> m0_209  [color=red, key=0, style=solid];
m0_211 -> m0_209  [color=red, key=0, style=solid];
m0_211 -> m0_223  [color=red, key=2, style=dotted];
m0_216 -> m0_215  [color=red, key=0, style=solid];
m0_206 -> m0_207  [color=red, key=0, style=solid];
m0_206 -> m0_48  [color=red, key=2, style=dotted];
m0_206 -> m0_209  [color=red, key=1, label=meaningfulErrors, style=dashed];
m0_206 -> m0_212  [color=red, key=1, label=meaningfulErrors, style=dashed];
m0_210 -> m0_211  [color=red, key=0, style=solid];
m0_210 -> m0_219  [color=red, key=2, style=dotted];
m0_210 -> m0_220  [color=red, key=2, style=dotted];
m0_210 -> m0_221  [color=red, key=2, style=dotted];
m0_210 -> m0_222  [color=red, key=2, style=dotted];
m0_212 -> m0_213  [color=red, key=0, style=solid];
m0_212 -> m0_89  [color=red, key=2, style=dotted];
m0_212 -> m0_50  [color=red, key=2, style=dotted];
m0_212 -> m0_214  [color=red, key=1, label=mutuallyErrs, style=dashed];
m0_205 -> m0_217  [color=red, key=0, style=solid];
m0_205 -> m0_23  [color=red, key=2, style=dotted];
m0_207 -> m0_208  [color=red, key=0, style=solid];
m0_207 -> m0_209  [color=red, key=0, style=solid];
m0_207 -> m0_129  [color=red, key=2, style=dotted];
m0_209 -> m0_210  [color=red, key=0, style=solid];
m0_209 -> m0_212  [color=red, key=0, style=solid];
m0_209 -> m0_218  [color=red, key=2, style=dotted];
m0_209 -> m0_224  [color=red, key=1, label="lambda expression", style=dashed];
m0_213 -> m0_214  [color=red, key=0, style=solid];
m0_213 -> m0_217  [color=red, key=0, style=solid];
m0_214 -> m0_215  [color=red, key=0, style=solid];
m0_214 -> m0_162  [color=red, key=2, style=dotted];
m0_215 -> m0_216  [color=red, key=0, style=solid];
m0_215 -> m0_217  [color=red, key=0, style=solid];
m0_217 -> m0_130  [color=blue, key=0, style=bold];
m0_340 -> m0_348  [color=red, key=0, style=solid];
m0_340 -> m0_349  [color=red, key=1, label=int, style=dashed];
m0_340 -> m0_384  [color=red, key=1, label=int, style=dashed];
m0_340 -> m0_388  [color=red, key=1, label=int, style=dashed];
m0_340 -> m0_350  [color=red, key=1, label=int, style=dashed];
m0_340 -> m0_351  [color=red, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_340 -> m0_352  [color=red, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_340 -> m0_353  [color=red, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_340 -> m0_354  [color=red, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_340 -> m0_355  [color=red, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_340 -> m0_356  [color=red, key=1, label=string, style=dashed];
m0_340 -> m0_362  [color=red, key=1, label=int, style=dashed];
m0_340 -> m0_365  [color=red, key=1, label=int, style=dashed];
m0_340 -> m0_368  [color=red, key=1, label=int, style=dashed];
m0_340 -> m0_369  [color=red, key=1, label=int, style=dashed];
m0_340 -> m0_370  [color=red, key=1, label=int, style=dashed];
m0_340 -> m0_373  [color=red, key=1, label=int, style=dashed];
m0_340 -> m0_374  [color=red, key=1, label=int, style=dashed];
m0_348 -> m0_349  [color=red, key=0, style=solid];
m0_348 -> m0_222  [color=red, key=2, style=dotted];
m0_349 -> m0_350  [color=red, key=0, style=solid];
m0_349 -> m0_24  [color=red, key=2, style=dotted];
m0_349 -> m0_378  [color=red, key=2, style=dotted];
m0_349 -> m0_383  [color=red, key=1, label="lambda expression", style=dashed];
m0_349 -> m0_387  [color=red, key=1, label="lambda expression", style=dashed];
m0_350 -> m0_351  [color=red, key=0, style=solid];
m0_350 -> m0_223  [color=red, key=2, style=dotted];
m0_350 -> m0_379  [color=red, key=2, style=dotted];
m0_350 -> m0_222  [color=red, key=2, style=dotted];
m0_351 -> m0_352  [color=red, key=0, style=solid];
m0_351 -> m0_353  [color=red, key=1, label=optionHelpText, style=dashed];
m0_351 -> m0_354  [color=red, key=1, label=optionHelpText, style=dashed];
m0_352 -> m0_353  [color=red, key=0, style=solid];
m0_352 -> m0_354  [color=red, key=0, style=solid];
m0_352 -> m0_49  [color=red, key=2, style=dotted];
m0_353 -> m0_354  [color=red, key=0, style=solid];
m0_353 -> m0_203  [color=red, key=2, style=dotted];
m0_353 -> m0_353  [color=red, key=1, label=optionHelpText, style=dashed];
m0_354 -> m0_355  [color=red, key=0, style=solid];
m0_354 -> m0_52  [color=red, key=2, style=dotted];
m0_354 -> m0_391  [color=red, key=1, label="lambda expression", style=dashed];
m0_354 -> m0_392  [color=red, key=1, label=optionHelpText, style=dashed];
m0_354 -> m0_356  [color=red, key=1, label=optionHelpText, style=dashed];
m0_354 -> m0_357  [color=red, key=1, label=optionHelpText, style=dashed];
m0_354 -> m0_359  [color=red, key=1, label=optionHelpText, style=dashed];
m0_354 -> m0_372  [color=red, key=1, label=optionHelpText, style=dashed];
m0_354 -> m0_375  [color=red, key=1, label=optionHelpText, style=dashed];
m0_355 -> m0_356  [color=red, key=0, style=solid];
m0_355 -> m0_357  [color=red, key=0, style=solid];
m0_356 -> m0_357  [color=red, key=0, style=solid];
m0_356 -> m0_380  [color=red, key=2, style=dotted];
m0_356 -> m0_356  [color=red, key=1, label=optionHelpText, style=dashed];
m0_356 -> m0_359  [color=red, key=1, label=optionHelpText, style=dashed];
m0_356 -> m0_372  [color=red, key=1, label=optionHelpText, style=dashed];
m0_356 -> m0_375  [color=red, key=1, label=optionHelpText, style=dashed];
m0_362 -> m0_363  [color=red, key=0, style=solid];
m0_362 -> m0_368  [color=red, key=0, style=solid];
m0_365 -> m0_366  [color=red, key=0, style=solid];
m0_365 -> m0_371  [color=red, key=0, style=solid];
m0_368 -> m0_369  [color=red, key=0, style=solid];
m0_368 -> m0_372  [color=red, key=0, style=solid];
m0_369 -> m0_370  [color=red, key=0, style=solid];
m0_369 -> m0_297  [color=red, key=2, style=dotted];
m0_369 -> m0_222  [color=red, key=2, style=dotted];
m0_370 -> m0_372  [color=red, key=0, style=solid];
m0_373 -> m0_374  [color=red, key=0, style=solid];
m0_373 -> m0_382  [color=red, key=2, style=dotted];
m0_373 -> m0_273  [color=red, key=2, style=dotted];
m0_374 -> m0_357  [color=red, key=0, style=solid];
m0_374 -> m0_375  [color=red, key=0, style=solid];
m0_357 -> m0_358  [color=red, key=0, style=solid];
m0_357 -> m0_375  [color=red, key=0, style=solid];
m0_357 -> m0_272  [color=red, key=2, style=dotted];
m0_359 -> m0_360  [color=red, key=0, style=solid];
m0_359 -> m0_296  [color=red, key=2, style=dotted];
m0_359 -> m0_361  [color=red, key=1, label=words, style=dashed];
m0_359 -> m0_362  [color=red, key=1, label=words, style=dashed];
m0_359 -> m0_363  [color=red, key=1, label=words, style=dashed];
m0_359 -> m0_364  [color=red, key=1, label=words, style=dashed];
m0_359 -> m0_365  [color=red, key=1, label=words, style=dashed];
m0_359 -> m0_368  [color=red, key=1, label=words, style=dashed];
m0_359 -> m0_369  [color=red, key=1, label=words, style=dashed];
m0_372 -> m0_373  [color=red, key=0, style=solid];
m0_372 -> m0_298  [color=red, key=2, style=dotted];
m0_372 -> m0_299  [color=red, key=2, style=dotted];
m0_372 -> m0_381  [color=red, key=2, style=dotted];
m0_372 -> m0_372  [color=red, key=1, label=optionHelpText, style=dashed];
m0_372 -> m0_374  [color=red, key=1, label=optionHelpText, style=dashed];
m0_372 -> m0_375  [color=red, key=1, label=optionHelpText, style=dashed];
m0_375 -> m0_376  [color=red, key=0, style=solid];
m0_375 -> m0_222  [color=red, key=2, style=dotted];
m0_375 -> m0_273  [color=red, key=2, style=dotted];
m0_358 -> m0_359  [color=red, key=0, style=solid];
m0_358 -> m0_362  [color=red, key=1, label=wordBuffer, style=dashed];
m0_358 -> m0_364  [color=red, key=1, label=wordBuffer, style=dashed];
m0_358 -> m0_368  [color=red, key=1, label=wordBuffer, style=dashed];
m0_358 -> m0_372  [color=red, key=1, label=wordBuffer, style=dashed];
m0_364 -> m0_365  [color=red, key=0, style=solid];
m0_364 -> m0_364  [color=red, key=1, label=wordBuffer, style=dashed];
m0_364 -> m0_367  [color=red, key=1, label=wordBuffer, style=dashed];
m0_364 -> m0_372  [color=red, key=1, label=wordBuffer, style=dashed];
m0_360 -> m0_361  [color=red, key=0, style=solid];
m0_360 -> m0_362  [color=red, key=1, label=i, style=dashed];
m0_360 -> m0_363  [color=red, key=1, label=i, style=dashed];
m0_360 -> m0_364  [color=red, key=1, label=i, style=dashed];
m0_360 -> m0_365  [color=red, key=1, label=i, style=dashed];
m0_360 -> m0_368  [color=red, key=1, label=i, style=dashed];
m0_360 -> m0_369  [color=red, key=1, label=i, style=dashed];
m0_360 -> m0_371  [color=red, key=1, label=i, style=dashed];
m0_361 -> m0_362  [color=red, key=0, style=solid];
m0_361 -> m0_372  [color=red, key=0, style=solid];
m0_363 -> m0_364  [color=red, key=0, style=solid];
m0_363 -> m0_222  [color=red, key=2, style=dotted];
m0_371 -> m0_361  [color=red, key=0, style=solid];
m0_371 -> m0_371  [color=red, key=1, label=i, style=dashed];
m0_367 -> m0_371  [color=red, key=0, style=solid];
m0_367 -> m0_367  [color=red, key=1, label=wordBuffer, style=dashed];
m0_367 -> m0_372  [color=red, key=1, label=wordBuffer, style=dashed];
m0_366 -> m0_367  [color=red, key=0, style=solid];
m0_366 -> m0_222  [color=red, key=2, style=dotted];
m0_376 -> m0_377  [color=red, key=0, style=solid];
m0_377 -> m0_340  [color=blue, key=0, style=bold];
m0_344 -> m0_307  [color=blue, key=0, style=bold];
m0_307 -> m0_343  [color=red, key=0, style=solid];
m0_343 -> m0_344  [color=red, key=0, style=solid];
m0_343 -> m0_50  [color=red, key=2, style=dotted];
m0_343 -> m0_328  [color=red, key=2, style=dotted];
m0_422 -> m0_423  [color=red, key=0, style=solid];
m0_422 -> m0_424  [color=red, key=1, label=int, style=dashed];
m0_63 -> m0_64  [color=red, key=0, style=solid];
m0_63 -> m0_65  [color=red, key=2, style=dotted];
m0_67 -> m0_68  [color=red, key=0, style=solid];
m0_67 -> m0_65  [color=red, key=2, style=dotted];
m0_70 -> m0_71  [color=red, key=0, style=solid];
m0_70 -> m0_72  [color=red, key=2, style=dotted];
m0_62 -> m0_63  [color=red, key=0, style=solid];
m0_66 -> m0_67  [color=red, key=0, style=solid];
m0_69 -> m0_70  [color=red, key=0, style=solid];
m0_73 -> m0_74  [color=red, key=0, style=solid];
m0_64 -> m0_62  [color=blue, key=0, style=bold];
m0_68 -> m0_66  [color=blue, key=0, style=bold];
m0_71 -> m0_69  [color=blue, key=0, style=bold];
m0_74 -> m0_75  [color=red, key=0, style=solid];
m0_75 -> m0_73  [color=blue, key=0, style=bold];
m0_100 -> m0_101  [color=red, key=0, style=solid];
m0_100 -> m0_102  [color=red, key=2, style=dotted];
m0_113 -> m0_114  [color=red, key=0, style=solid];
m0_113 -> m0_102  [color=red, key=2, style=dotted];
m0_93 -> m0_94  [color=red, key=0, style=solid];
m0_96 -> m0_97  [color=red, key=0, style=solid];
m0_107 -> m0_108  [color=red, key=0, style=solid];
m0_107 -> m0_102  [color=red, key=2, style=dotted];
m0_99 -> m0_100  [color=red, key=0, style=solid];
m0_103 -> m0_104  [color=red, key=0, style=solid];
m0_106 -> m0_107  [color=red, key=0, style=solid];
m0_109 -> m0_110  [color=red, key=0, style=solid];
m0_112 -> m0_113  [color=red, key=0, style=solid];
m0_115 -> m0_116  [color=red, key=0, style=solid];
m0_94 -> m0_95  [color=red, key=0, style=solid];
m0_95 -> m0_93  [color=blue, key=0, style=bold];
m0_97 -> m0_98  [color=red, key=0, style=solid];
m0_98 -> m0_96  [color=blue, key=0, style=bold];
m0_101 -> m0_99  [color=blue, key=0, style=bold];
m0_104 -> m0_105  [color=red, key=0, style=solid];
m0_105 -> m0_103  [color=blue, key=0, style=bold];
m0_108 -> m0_106  [color=blue, key=0, style=bold];
m0_110 -> m0_111  [color=red, key=0, style=solid];
m0_111 -> m0_109  [color=blue, key=0, style=bold];
m0_114 -> m0_112  [color=blue, key=0, style=bold];
m0_116 -> m0_117  [color=red, key=0, style=solid];
m0_117 -> m0_115  [color=blue, key=0, style=bold];
m0_147 -> m0_148  [color=red, key=0, style=solid];
m0_148 -> m0_149  [color=red, key=0, style=solid];
m0_148 -> m0_57  [color=red, key=2, style=dotted];
m0_149 -> m0_147  [color=blue, key=0, style=bold];
m0_154 -> m0_155  [color=red, key=0, style=solid];
m0_155 -> m0_156  [color=red, key=0, style=solid];
m0_155 -> m0_139  [color=red, key=2, style=dotted];
m0_156 -> m0_154  [color=blue, key=0, style=bold];
m0_163 -> m0_164  [color=red, key=0, style=solid];
m0_164 -> m0_165  [color=red, key=0, style=solid];
m0_164 -> m0_57  [color=red, key=2, style=dotted];
m0_165 -> m0_163  [color=blue, key=0, style=bold];
m0_171 -> m0_172  [color=red, key=0, style=solid];
m0_172 -> m0_173  [color=red, key=0, style=solid];
m0_172 -> m0_139  [color=red, key=2, style=dotted];
m0_173 -> m0_171  [color=blue, key=0, style=bold];
m0_224 -> m0_225  [color=red, key=0, style=solid];
m0_225 -> m0_226  [color=red, key=0, style=solid];
m0_226 -> m0_224  [color=blue, key=0, style=bold];
m0_231 -> m0_232  [color=red, key=0, style=solid];
m0_232 -> m0_233  [color=red, key=0, style=solid];
m0_233 -> m0_231  [color=blue, key=0, style=bold];
m0_263 -> m0_264  [color=red, key=0, style=solid];
m0_264 -> m0_265  [color=red, key=0, style=solid];
m0_265 -> m0_266  [color=red, key=0, style=solid];
m0_262 -> m0_263  [color=red, key=0, style=solid];
m0_262 -> m0_264  [color=red, key=1, label="CommandLine.UnParserSettings", style=dashed];
m0_262 -> m0_265  [color=red, key=1, label="CommandLine.UnParserSettings", style=dashed];
m0_266 -> m0_262  [color=blue, key=0, style=bold];
m0_310 -> m0_311  [color=red, key=0, style=solid];
m0_311 -> m0_312  [color=red, key=0, style=solid];
m0_312 -> m0_310  [color=blue, key=0, style=bold];
m0_317 -> m0_318  [color=red, key=0, style=solid];
m0_317 -> m0_319  [color=red, key=1, label="System.Tuple<System.Reflection.PropertyInfo, CommandLine.Text.UsageAttribute>", style=dashed];
m0_318 -> m0_319  [color=red, key=0, style=solid];
m0_318 -> m0_320  [color=red, key=1, label=prop, style=dashed];
m0_319 -> m0_320  [color=red, key=0, style=solid];
m0_319 -> m0_321  [color=red, key=1, label=attr, style=dashed];
m0_320 -> m0_321  [color=red, key=0, style=solid];
m0_320 -> m0_323  [color=red, key=2, style=dotted];
m0_321 -> m0_322  [color=red, key=0, style=solid];
m0_321 -> m0_324  [color=red, key=2, style=dotted];
m0_322 -> m0_317  [color=blue, key=0, style=bold];
m0_338 -> m0_339  [color=red, key=0, style=solid];
m0_338 -> m0_340  [color=red, key=2, style=dotted];
m0_337 -> m0_338  [color=red, key=0, style=solid];
m0_339 -> m0_337  [color=blue, key=0, style=bold];
m0_384 -> m0_385  [color=red, key=0, style=solid];
m0_384 -> m0_386  [color=red, key=2, style=dotted];
m0_384 -> m0_222  [color=red, key=2, style=dotted];
m0_388 -> m0_389  [color=red, key=0, style=solid];
m0_388 -> m0_390  [color=red, key=2, style=dotted];
m0_388 -> m0_222  [color=red, key=2, style=dotted];
m0_383 -> m0_384  [color=red, key=0, style=solid];
m0_387 -> m0_388  [color=red, key=0, style=solid];
m0_391 -> m0_392  [color=red, key=0, style=solid];
m0_392 -> m0_393  [color=red, key=0, style=solid];
m0_392 -> m0_394  [color=red, key=2, style=dotted];
m0_392 -> m0_380  [color=red, key=2, style=dotted];
m0_392 -> m0_392  [color=red, key=1, label=optionHelpText, style=dashed];
m0_385 -> m0_383  [color=blue, key=0, style=bold];
m0_389 -> m0_387  [color=blue, key=0, style=bold];
m0_393 -> m0_391  [color=blue, key=0, style=bold];
m0_399 -> m0_400  [color=red, key=0, style=solid];
m0_399 -> m0_401  [color=red, key=2, style=dotted];
m0_399 -> m0_402  [color=red, key=2, style=dotted];
m0_399 -> m0_403  [color=red, key=2, style=dotted];
m0_399 -> m0_273  [color=red, key=2, style=dotted];
m0_405 -> m0_406  [color=red, key=0, style=solid];
m0_405 -> m0_273  [color=red, key=2, style=dotted];
m0_405 -> m0_402  [color=red, key=2, style=dotted];
m0_405 -> m0_403  [color=red, key=2, style=dotted];
m0_398 -> m0_399  [color=red, key=0, style=solid];
m0_404 -> m0_405  [color=red, key=0, style=solid];
m0_400 -> m0_398  [color=blue, key=0, style=bold];
m0_406 -> m0_404  [color=blue, key=0, style=bold];
m0_410 -> m0_411  [color=red, key=0, style=solid];
m0_410 -> m0_412  [color=red, key=2, style=dotted];
m0_414 -> m0_415  [color=red, key=0, style=solid];
m0_414 -> m0_402  [color=red, key=2, style=dotted];
m0_409 -> m0_410  [color=red, key=0, style=solid];
m0_413 -> m0_414  [color=red, key=0, style=solid];
m0_411 -> m0_409  [color=blue, key=0, style=bold];
m0_415 -> m0_413  [color=blue, key=0, style=bold];
m0_423 -> m0_424  [color=red, key=0, style=solid];
m0_423 -> m0_426  [color=red, key=2, style=dotted];
m0_423 -> m0_427  [color=red, key=2, style=dotted];
m0_424 -> m0_425  [color=red, key=0, style=solid];
m0_424 -> m0_428  [color=red, key=2, style=dotted];
m0_425 -> m0_422  [color=blue, key=0, style=bold];
m0_386 -> m0_395  [color=red, key=0, style=solid];
m0_386 -> m0_399  [color=red, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m0_386 -> m0_405  [color=red, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m0_395 -> m0_396  [color=red, key=0, style=solid];
m0_395 -> m0_24  [color=red, key=2, style=dotted];
m0_395 -> m0_397  [color=red, key=2, style=dotted];
m0_395 -> m0_223  [color=red, key=2, style=dotted];
m0_395 -> m0_398  [color=red, key=1, label="lambda expression", style=dashed];
m0_395 -> m0_404  [color=red, key=1, label="lambda expression", style=dashed];
m0_396 -> m0_386  [color=blue, key=0, style=bold];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_4  [color=blue, key=0, style=bold];
m0_76 -> m0_77  [color=red, key=0, style=solid];
m0_76 -> m0_79  [color=red, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_76 -> m0_83  [color=red, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_76 -> m0_100  [color=red, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_76 -> m0_86  [color=red, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_76 -> m0_113  [color=red, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_77 -> m0_78  [color=red, key=0, style=solid];
m0_77 -> m0_79  [color=red, key=0, style=solid];
m0_79 -> m0_80  [color=red, key=0, style=solid];
m0_79 -> m0_82  [color=red, key=1, label=errors, style=dashed];
m0_79 -> m0_84  [color=red, key=1, label=errors, style=dashed];
m0_83 -> m0_87  [color=red, key=0, style=solid];
m0_83 -> m0_25  [color=red, key=2, style=dotted];
m0_83 -> m0_99  [color=red, key=1, label="lambda expression", style=dashed];
m0_83 -> m0_103  [color=red, key=1, label="lambda expression", style=dashed];
m0_86 -> m0_87  [color=red, key=0, style=solid];
m0_86 -> m0_25  [color=red, key=2, style=dotted];
m0_86 -> m0_106  [color=red, key=1, label="lambda expression", style=dashed];
m0_86 -> m0_109  [color=red, key=1, label="lambda expression", style=dashed];
m0_86 -> m0_112  [color=red, key=1, label="lambda expression", style=dashed];
m0_86 -> m0_115  [color=red, key=1, label="lambda expression", style=dashed];
m0_78 -> m0_87  [color=red, key=0, style=solid];
m0_78 -> m0_88  [color=red, key=2, style=dotted];
m0_80 -> m0_81  [color=red, key=0, style=solid];
m0_80 -> m0_82  [color=red, key=0, style=solid];
m0_80 -> m0_58  [color=red, key=2, style=dotted];
m0_80 -> m0_93  [color=red, key=1, label="lambda expression", style=dashed];
m0_82 -> m0_83  [color=red, key=0, style=solid];
m0_82 -> m0_84  [color=red, key=0, style=solid];
m0_82 -> m0_58  [color=red, key=2, style=dotted];
m0_82 -> m0_96  [color=red, key=1, label="lambda expression", style=dashed];
m0_84 -> m0_85  [color=red, key=0, style=solid];
m0_84 -> m0_89  [color=red, key=2, style=dotted];
m0_84 -> m0_90  [color=red, key=2, style=dotted];
m0_84 -> m0_86  [color=red, key=1, label=err, style=dashed];
m0_81 -> m0_87  [color=red, key=0, style=solid];
m0_81 -> m0_4  [color=red, key=2, style=dotted];
m0_81 -> m0_57  [color=red, key=2, style=dotted];
m0_85 -> m0_86  [color=red, key=0, style=solid];
m0_85 -> m0_91  [color=red, key=2, style=dotted];
m0_85 -> m0_92  [color=red, key=2, style=dotted];
m0_85 -> m0_47  [color=red, key=2, style=dotted];
m0_85 -> m0_107  [color=red, key=1, label=pr, style=dashed];
m0_87 -> m0_76  [color=blue, key=0, style=bold];
m0_166 -> m0_167  [color=red, key=0, style=solid];
m0_167 -> m0_168  [color=red, key=0, style=solid];
m0_167 -> m0_162  [color=red, key=2, style=dotted];
m0_168 -> m0_169  [color=red, key=0, style=solid];
m0_168 -> m0_146  [color=red, key=2, style=dotted];
m0_168 -> m0_171  [color=red, key=1, label="lambda expression", style=dashed];
m0_169 -> m0_170  [color=red, key=0, style=solid];
m0_170 -> m0_166  [color=blue, key=0, style=bold];
m0_60 -> m0_180  [color=red, key=0, style=solid];
m0_60 -> m0_182  [color=red, key=1, label="params System.Type[]", style=dashed];
m0_60 -> m0_184  [color=red, key=1, label="params System.Type[]", style=dashed];
m0_180 -> m0_181  [color=red, key=0, style=solid];
m0_180 -> m0_182  [color=red, key=0, style=solid];
m0_182 -> m0_183  [color=red, key=0, style=solid];
m0_182 -> m0_184  [color=red, key=0, style=solid];
m0_184 -> m0_185  [color=red, key=0, style=solid];
m0_184 -> m0_187  [color=red, key=2, style=dotted];
m0_184 -> m0_56  [color=red, key=2, style=dotted];
m0_184 -> m0_179  [color=red, key=2, style=dotted];
m0_181 -> m0_185  [color=red, key=0, style=solid];
m0_181 -> m0_23  [color=red, key=2, style=dotted];
m0_183 -> m0_185  [color=red, key=0, style=solid];
m0_183 -> m0_186  [color=red, key=2, style=dotted];
m0_185 -> m0_60  [color=blue, key=0, style=bold];
m0_253 -> m0_313  [color=red, key=0, style=solid];
m0_313 -> m0_314  [color=red, key=0, style=solid];
m0_313 -> m0_315  [color=red, key=2, style=dotted];
m0_313 -> m0_316  [color=red, key=2, style=dotted];
m0_313 -> m0_317  [color=red, key=1, label="lambda expression", style=dashed];
m0_314 -> m0_253  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_8  [color=blue, key=0, style=bold];
m0_227 -> m0_228  [color=red, key=0, style=solid];
m0_228 -> m0_229  [color=red, key=0, style=solid];
m0_228 -> m0_230  [color=red, key=2, style=dotted];
m0_228 -> m0_231  [color=red, key=1, label="lambda expression", style=dashed];
m0_229 -> m0_227  [color=blue, key=0, style=bold];
m0_394 -> m0_461  [key=0, style=solid];
m0_394 -> m0_462  [color=darkseagreen4, key=1, label=T, style=dashed];
m0_394 -> m0_463  [color=darkseagreen4, key=1, label=T, style=dashed];
m0_394 -> m0_464  [color=darkseagreen4, key=1, label=T, style=dashed];
m0_394 -> m0_465  [color=darkseagreen4, key=1, label=T, style=dashed];
m0_394 -> m0_467  [color=darkseagreen4, key=1, label=T, style=dashed];
m0_461 -> m0_462  [key=0, style=solid];
m0_461 -> m0_463  [key=0, style=solid];
m0_462 -> m0_472  [key=0, style=solid];
m0_462 -> m0_473  [key=2, style=dotted];
m0_462 -> m0_474  [key=2, style=dotted];
m0_463 -> m0_464  [key=0, style=solid];
m0_463 -> m0_465  [key=0, style=solid];
m0_464 -> m0_472  [key=0, style=solid];
m0_464 -> m0_473  [key=2, style=dotted];
m0_465 -> m0_466  [key=0, style=solid];
m0_465 -> m0_469  [color=darkseagreen4, key=1, label=asEnumerable, style=dashed];
m0_467 -> m0_472  [key=0, style=solid];
m0_467 -> m0_473  [key=2, style=dotted];
m0_466 -> m0_467  [key=0, style=solid];
m0_466 -> m0_468  [key=0, style=solid];
m0_469 -> m0_470  [key=0, style=solid];
m0_469 -> m0_471  [key=0, style=solid];
m0_468 -> m0_469  [key=0, style=solid];
m0_468 -> m0_475  [key=2, style=dotted];
m0_468 -> m0_470  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_468 -> m0_471  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_470 -> m0_469  [key=0, style=solid];
m0_470 -> m0_473  [key=2, style=dotted];
m0_470 -> m0_222  [key=2, style=dotted];
m0_471 -> m0_472  [key=0, style=solid];
m0_471 -> m0_476  [key=2, style=dotted];
m0_472 -> m0_394  [color=blue, key=0, style=bold];
m0_25 -> m0_26  [color=red, key=0, style=solid];
m0_25 -> m0_28  [color=red, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_25 -> m0_29  [color=red, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_25 -> m0_31  [color=red, key=1, label="System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>", style=dashed];
m0_25 -> m0_34  [color=red, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_25 -> m0_41  [color=red, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_25 -> m0_43  [color=red, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_25 -> m0_44  [color=red, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_26 -> m0_27  [color=red, key=0, style=solid];
m0_26 -> m0_0  [color=red, key=2, style=dotted];
m0_26 -> m0_31  [color=red, key=1, label=auto, style=dashed];
m0_26 -> m0_32  [color=red, key=1, label=auto, style=dashed];
m0_26 -> m0_63  [color=red, key=1, label=auto, style=dashed];
m0_26 -> m0_36  [color=red, key=1, label=auto, style=dashed];
m0_26 -> m0_38  [color=red, key=1, label=auto, style=dashed];
m0_26 -> m0_39  [color=red, key=1, label=auto, style=dashed];
m0_26 -> m0_67  [color=red, key=1, label=auto, style=dashed];
m0_26 -> m0_40  [color=red, key=1, label=auto, style=dashed];
m0_26 -> m0_70  [color=red, key=1, label=auto, style=dashed];
m0_26 -> m0_42  [color=red, key=1, label=auto, style=dashed];
m0_26 -> m0_43  [color=red, key=1, label=auto, style=dashed];
m0_26 -> m0_44  [color=red, key=1, label=auto, style=dashed];
m0_26 -> m0_45  [color=red, key=1, label=auto, style=dashed];
m0_28 -> m0_29  [color=red, key=0, style=solid];
m0_28 -> m0_32  [color=red, key=0, style=solid];
m0_29 -> m0_30  [color=red, key=0, style=solid];
m0_29 -> m0_41  [color=red, key=1, label=errors, style=dashed];
m0_31 -> m0_32  [color=red, key=0, style=solid];
m0_31 -> m0_50  [color=red, key=2, style=dotted];
m0_31 -> m0_31  [color=red, key=1, label=auto, style=dashed];
m0_31 -> m0_63  [color=red, key=1, label=auto, style=dashed];
m0_31 -> m0_36  [color=red, key=1, label=auto, style=dashed];
m0_31 -> m0_38  [color=red, key=1, label=auto, style=dashed];
m0_31 -> m0_39  [color=red, key=1, label=auto, style=dashed];
m0_31 -> m0_67  [color=red, key=1, label=auto, style=dashed];
m0_31 -> m0_40  [color=red, key=1, label=auto, style=dashed];
m0_31 -> m0_70  [color=red, key=1, label=auto, style=dashed];
m0_31 -> m0_42  [color=red, key=1, label=auto, style=dashed];
m0_31 -> m0_43  [color=red, key=1, label=auto, style=dashed];
m0_31 -> m0_44  [color=red, key=1, label=auto, style=dashed];
m0_31 -> m0_45  [color=red, key=1, label=auto, style=dashed];
m0_34 -> m0_35  [color=red, key=0, style=solid];
m0_34 -> m0_53  [color=red, key=2, style=dotted];
m0_34 -> m0_54  [color=red, key=2, style=dotted];
m0_34 -> m0_40  [color=red, key=1, label=usageLines, style=dashed];
m0_41 -> m0_42  [color=red, key=0, style=solid];
m0_41 -> m0_44  [color=red, key=0, style=solid];
m0_41 -> m0_49  [color=red, key=2, style=dotted];
m0_41 -> m0_58  [color=red, key=2, style=dotted];
m0_41 -> m0_73  [color=red, key=1, label="lambda expression", style=dashed];
m0_43 -> m0_45  [color=red, key=0, style=solid];
m0_43 -> m0_59  [color=red, key=2, style=dotted];
m0_43 -> m0_60  [color=red, key=2, style=dotted];
m0_44 -> m0_45  [color=red, key=0, style=solid];
m0_44 -> m0_61  [color=red, key=2, style=dotted];
m0_27 -> m0_28  [color=red, key=0, style=solid];
m0_27 -> m0_47  [color=red, key=2, style=dotted];
m0_27 -> m0_41  [color=red, key=1, label=errors, style=dashed];
m0_32 -> m0_33  [color=red, key=0, style=solid];
m0_32 -> m0_51  [color=red, key=2, style=dotted];
m0_32 -> m0_52  [color=red, key=2, style=dotted];
m0_32 -> m0_62  [color=red, key=1, label="lambda expression", style=dashed];
m0_36 -> m0_37  [color=red, key=0, style=solid];
m0_36 -> m0_56  [color=red, key=2, style=dotted];
m0_36 -> m0_38  [color=red, key=1, label=heading, style=dashed];
m0_38 -> m0_39  [color=red, key=0, style=solid];
m0_38 -> m0_57  [color=red, key=2, style=dotted];
m0_39 -> m0_40  [color=red, key=0, style=solid];
m0_39 -> m0_52  [color=red, key=2, style=dotted];
m0_39 -> m0_66  [color=red, key=1, label="lambda expression", style=dashed];
m0_40 -> m0_41  [color=red, key=0, style=solid];
m0_40 -> m0_52  [color=red, key=2, style=dotted];
m0_40 -> m0_69  [color=red, key=1, label="lambda expression", style=dashed];
m0_42 -> m0_43  [color=red, key=0, style=solid];
m0_45 -> m0_46  [color=red, key=0, style=solid];
m0_30 -> m0_31  [color=red, key=0, style=solid];
m0_30 -> m0_32  [color=red, key=0, style=solid];
m0_30 -> m0_48  [color=red, key=2, style=dotted];
m0_30 -> m0_49  [color=red, key=2, style=dotted];
m0_33 -> m0_34  [color=red, key=0, style=solid];
m0_33 -> m0_51  [color=red, key=2, style=dotted];
m0_33 -> m0_35  [color=red, key=1, label=usageAttr, style=dashed];
m0_33 -> m0_39  [color=red, key=1, label=usageAttr, style=dashed];
m0_35 -> m0_36  [color=red, key=0, style=solid];
m0_35 -> m0_39  [color=red, key=0, style=solid];
m0_35 -> m0_55  [color=red, key=2, style=dotted];
m0_37 -> m0_38  [color=red, key=0, style=solid];
m0_37 -> m0_39  [color=red, key=0, style=solid];
m0_46 -> m0_25  [color=blue, key=0, style=bold];
m0_179 -> m0_330  [color=red, key=0, style=solid];
m0_179 -> m0_332  [color=red, key=1, label=int, style=dashed];
m0_179 -> m0_333  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m0_179 -> m0_338  [color=red, key=1, label=string, style=dashed];
m0_330 -> m0_331  [color=red, key=0, style=solid];
m0_330 -> m0_336  [color=red, key=2, style=dotted];
m0_330 -> m0_332  [color=red, key=1, label=maxLength, style=dashed];
m0_330 -> m0_333  [color=red, key=1, label=maxLength, style=dashed];
m0_330 -> m0_338  [color=red, key=1, label=maxLength, style=dashed];
m0_332 -> m0_333  [color=red, key=0, style=solid];
m0_332 -> m0_338  [color=red, key=1, label=remainingSpace, style=dashed];
m0_333 -> m0_334  [color=red, key=0, style=solid];
m0_333 -> m0_146  [color=red, key=2, style=dotted];
m0_333 -> m0_337  [color=red, key=1, label="lambda expression", style=dashed];
m0_331 -> m0_332  [color=red, key=0, style=solid];
m0_331 -> m0_24  [color=red, key=2, style=dotted];
m0_334 -> m0_335  [color=red, key=0, style=solid];
m0_335 -> m0_179  [color=blue, key=0, style=bold];
m0_132 -> m0_133  [color=red, key=0, style=solid];
m0_133 -> m0_134  [color=red, key=0, style=solid];
m0_133 -> m0_135  [color=red, key=2, style=dotted];
m0_134 -> m0_132  [color=blue, key=0, style=bold];
m0_138 -> m0_345  [color=red, key=0, style=solid];
m0_345 -> m0_346  [color=red, key=0, style=solid];
m0_345 -> m0_275  [color=red, key=2, style=dotted];
m0_346 -> m0_347  [color=red, key=0, style=solid];
m0_347 -> m0_138  [color=blue, key=0, style=bold];
m0_142 -> m0_416  [color=red, key=0, style=solid];
m0_416 -> m0_417  [color=red, key=0, style=solid];
m0_416 -> m0_275  [color=red, key=2, style=dotted];
m0_417 -> m0_418  [color=red, key=0, style=solid];
m0_418 -> m0_142  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_2  [color=blue, key=0, style=bold];
m0_301 -> m0_302  [color=red, key=0, style=solid];
m0_301 -> m0_89  [color=red, key=2, style=dotted];
m0_301 -> m0_306  [color=red, key=2, style=dotted];
m0_301 -> m0_307  [color=red, key=2, style=dotted];
m0_301 -> m0_308  [color=red, key=2, style=dotted];
m0_301 -> m0_303  [color=red, key=1, label=optionSpecs, style=dashed];
m0_178 -> m0_300  [color=red, key=0, style=solid];
m0_300 -> m0_301  [color=red, key=0, style=solid];
m0_300 -> m0_305  [color=red, key=2, style=dotted];
m0_300 -> m0_302  [color=red, key=1, label=specs, style=dashed];
m0_302 -> m0_303  [color=red, key=0, style=solid];
m0_302 -> m0_89  [color=red, key=2, style=dotted];
m0_302 -> m0_309  [color=red, key=2, style=dotted];
m0_302 -> m0_310  [color=red, key=1, label="lambda expression", style=dashed];
m0_303 -> m0_304  [color=red, key=0, style=solid];
m0_303 -> m0_47  [color=red, key=2, style=dotted];
m0_303 -> m0_308  [color=red, key=2, style=dotted];
m0_304 -> m0_178  [color=blue, key=0, style=bold];
m0_275 -> m0_276  [color=red, key=0, style=solid];
m0_275 -> m0_278  [color=red, key=1, label=string, style=dashed];
m0_275 -> m0_281  [color=red, key=1, label=int, style=dashed];
m0_275 -> m0_282  [color=red, key=1, label="System.Text.StringBuilder", style=dashed];
m0_275 -> m0_284  [color=red, key=1, label=int, style=dashed];
m0_275 -> m0_285  [color=red, key=1, label="System.Text.StringBuilder", style=dashed];
m0_275 -> m0_287  [color=red, key=1, label=int, style=dashed];
m0_275 -> m0_288  [color=red, key=1, label="System.Text.StringBuilder", style=dashed];
m0_275 -> m0_289  [color=red, key=1, label=int, style=dashed];
m0_275 -> m0_291  [color=red, key=1, label=string, style=dashed];
m0_275 -> m0_292  [color=red, key=1, label="System.Text.StringBuilder", style=dashed];
m0_275 -> m0_293  [color=red, key=1, label=int, style=dashed];
m0_275 -> m0_294  [color=red, key=1, label="System.Text.StringBuilder", style=dashed];
m0_276 -> m0_277  [color=red, key=0, style=solid];
m0_276 -> m0_273  [color=red, key=2, style=dotted];
m0_278 -> m0_279  [color=red, key=0, style=solid];
m0_278 -> m0_296  [color=red, key=2, style=dotted];
m0_278 -> m0_280  [color=red, key=1, label=words, style=dashed];
m0_278 -> m0_281  [color=red, key=1, label=words, style=dashed];
m0_278 -> m0_282  [color=red, key=1, label=words, style=dashed];
m0_278 -> m0_283  [color=red, key=1, label=words, style=dashed];
m0_278 -> m0_284  [color=red, key=1, label=words, style=dashed];
m0_278 -> m0_287  [color=red, key=1, label=words, style=dashed];
m0_278 -> m0_288  [color=red, key=1, label=words, style=dashed];
m0_281 -> m0_282  [color=red, key=0, style=solid];
m0_281 -> m0_287  [color=red, key=0, style=solid];
m0_282 -> m0_283  [color=red, key=0, style=solid];
m0_282 -> m0_222  [color=red, key=2, style=dotted];
m0_284 -> m0_285  [color=red, key=0, style=solid];
m0_284 -> m0_290  [color=red, key=0, style=solid];
m0_285 -> m0_286  [color=red, key=0, style=solid];
m0_285 -> m0_222  [color=red, key=2, style=dotted];
m0_287 -> m0_288  [color=red, key=0, style=solid];
m0_287 -> m0_291  [color=red, key=0, style=solid];
m0_288 -> m0_289  [color=red, key=0, style=solid];
m0_288 -> m0_297  [color=red, key=2, style=dotted];
m0_288 -> m0_222  [color=red, key=2, style=dotted];
m0_289 -> m0_291  [color=red, key=0, style=solid];
m0_291 -> m0_292  [color=red, key=0, style=solid];
m0_291 -> m0_298  [color=red, key=2, style=dotted];
m0_291 -> m0_299  [color=red, key=2, style=dotted];
m0_291 -> m0_291  [color=red, key=1, label=string, style=dashed];
m0_291 -> m0_293  [color=red, key=1, label=string, style=dashed];
m0_291 -> m0_294  [color=red, key=1, label=string, style=dashed];
m0_292 -> m0_293  [color=red, key=0, style=solid];
m0_292 -> m0_273  [color=red, key=2, style=dotted];
m0_293 -> m0_276  [color=red, key=0, style=solid];
m0_293 -> m0_294  [color=red, key=0, style=solid];
m0_294 -> m0_295  [color=red, key=0, style=solid];
m0_294 -> m0_222  [color=red, key=2, style=dotted];
m0_277 -> m0_278  [color=red, key=0, style=solid];
m0_277 -> m0_281  [color=red, key=1, label=wordBuffer, style=dashed];
m0_277 -> m0_283  [color=red, key=1, label=wordBuffer, style=dashed];
m0_277 -> m0_287  [color=red, key=1, label=wordBuffer, style=dashed];
m0_277 -> m0_291  [color=red, key=1, label=wordBuffer, style=dashed];
m0_283 -> m0_284  [color=red, key=0, style=solid];
m0_283 -> m0_283  [color=red, key=1, label=wordBuffer, style=dashed];
m0_283 -> m0_286  [color=red, key=1, label=wordBuffer, style=dashed];
m0_283 -> m0_291  [color=red, key=1, label=wordBuffer, style=dashed];
m0_279 -> m0_280  [color=red, key=0, style=solid];
m0_279 -> m0_281  [color=red, key=1, label=i, style=dashed];
m0_279 -> m0_282  [color=red, key=1, label=i, style=dashed];
m0_279 -> m0_283  [color=red, key=1, label=i, style=dashed];
m0_279 -> m0_284  [color=red, key=1, label=i, style=dashed];
m0_279 -> m0_287  [color=red, key=1, label=i, style=dashed];
m0_279 -> m0_288  [color=red, key=1, label=i, style=dashed];
m0_279 -> m0_290  [color=red, key=1, label=i, style=dashed];
m0_280 -> m0_281  [color=red, key=0, style=solid];
m0_280 -> m0_291  [color=red, key=0, style=solid];
m0_290 -> m0_280  [color=red, key=0, style=solid];
m0_290 -> m0_290  [color=red, key=1, label=i, style=dashed];
m0_286 -> m0_290  [color=red, key=0, style=solid];
m0_286 -> m0_286  [color=red, key=1, label=wordBuffer, style=dashed];
m0_286 -> m0_291  [color=red, key=1, label=wordBuffer, style=dashed];
m0_295 -> m0_275  [color=blue, key=0, style=bold];
m0_10 -> m0_11  [color=red, key=0, style=solid];
m0_10 -> m0_13  [color=red, key=1, label=string, style=dashed];
m0_10 -> m0_15  [color=red, key=1, label=string, style=dashed];
m0_10 -> m0_19  [color=red, key=1, label="CommandLine.Text.SentenceBuilder", style=dashed];
m0_10 -> m0_20  [color=red, key=1, label=string, style=dashed];
m0_10 -> m0_21  [color=red, key=1, label=string, style=dashed];
m0_11 -> m0_12  [color=red, key=0, style=solid];
m0_11 -> m0_13  [color=red, key=0, style=solid];
m0_13 -> m0_14  [color=red, key=0, style=solid];
m0_13 -> m0_15  [color=red, key=0, style=solid];
m0_15 -> m0_16  [color=red, key=0, style=solid];
m0_15 -> m0_17  [color=red, key=0, style=solid];
m0_19 -> m0_20  [color=red, key=0, style=solid];
m0_20 -> m0_21  [color=red, key=0, style=solid];
m0_21 -> m0_22  [color=red, key=0, style=solid];
m0_12 -> m0_22  [color=red, key=0, style=solid];
m0_12 -> m0_23  [color=red, key=2, style=dotted];
m0_14 -> m0_22  [color=red, key=0, style=solid];
m0_14 -> m0_23  [color=red, key=2, style=dotted];
m0_16 -> m0_22  [color=red, key=0, style=solid];
m0_16 -> m0_23  [color=red, key=2, style=dotted];
m0_17 -> m0_18  [color=red, key=0, style=solid];
m0_17 -> m0_24  [color=red, key=2, style=dotted];
m0_18 -> m0_19  [color=red, key=0, style=solid];
m0_18 -> m0_24  [color=red, key=2, style=dotted];
m0_22 -> m0_10  [color=blue, key=0, style=bold];
m0_390 -> m0_407  [color=red, key=0, style=solid];
m0_390 -> m0_410  [color=red, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m0_390 -> m0_414  [color=red, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m0_407 -> m0_408  [color=red, key=0, style=solid];
m0_407 -> m0_24  [color=red, key=2, style=dotted];
m0_407 -> m0_378  [color=red, key=2, style=dotted];
m0_407 -> m0_403  [color=red, key=2, style=dotted];
m0_407 -> m0_223  [color=red, key=2, style=dotted];
m0_407 -> m0_409  [color=red, key=1, label="lambda expression", style=dashed];
m0_407 -> m0_413  [color=red, key=1, label="lambda expression", style=dashed];
m0_408 -> m0_390  [color=blue, key=0, style=bold];
m0_72 -> m0_143  [color=red, key=0, style=solid];
m0_143 -> m0_144  [color=red, key=0, style=solid];
m0_143 -> m0_146  [color=red, key=2, style=dotted];
m0_143 -> m0_147  [color=red, key=1, label="lambda expression", style=dashed];
m0_144 -> m0_145  [color=red, key=0, style=solid];
m0_145 -> m0_72  [color=blue, key=0, style=bold];
m0_336 -> m0_419  [color=red, key=0, style=solid];
m0_419 -> m0_420  [color=red, key=0, style=solid];
m0_419 -> m0_421  [color=red, key=2, style=dotted];
m0_419 -> m0_422  [color=red, key=1, label="lambda expression", style=dashed];
m0_420 -> m0_336  [color=blue, key=0, style=bold];
m0_342 -> m0_306  [color=blue, key=0, style=bold];
m0_306 -> m0_341  [color=red, key=0, style=solid];
m0_341 -> m0_342  [color=red, key=0, style=solid];
m0_341 -> m0_50  [color=red, key=2, style=dotted];
m0_341 -> m0_328  [color=red, key=2, style=dotted];
m0_188 -> m0_189  [color=red, key=0, style=solid];
m0_188 -> m0_191  [color=red, key=1, label=int, style=dashed];
m0_189 -> m0_190  [color=red, key=0, style=solid];
m0_189 -> m0_191  [color=red, key=0, style=solid];
m0_191 -> m0_192  [color=red, key=0, style=solid];
m0_191 -> m0_178  [color=red, key=2, style=dotted];
m0_191 -> m0_56  [color=red, key=2, style=dotted];
m0_191 -> m0_179  [color=red, key=2, style=dotted];
m0_190 -> m0_192  [color=red, key=0, style=solid];
m0_190 -> m0_23  [color=red, key=2, style=dotted];
m0_192 -> m0_188  [color=blue, key=0, style=bold];
m0_427 -> m0_449  [color=red, key=0, style=solid];
m0_427 -> m0_450  [color=red, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m0_427 -> m0_452  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m0_427 -> m0_453  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m0_427 -> m0_455  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m0_427 -> m0_456  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m0_449 -> m0_450  [color=red, key=0, style=solid];
m0_449 -> m0_455  [color=red, key=1, label=specLength, style=dashed];
m0_449 -> m0_456  [color=red, key=1, label=specLength, style=dashed];
m0_450 -> m0_451  [color=red, key=0, style=solid];
m0_450 -> m0_454  [color=red, key=1, label=hasMeta, style=dashed];
m0_452 -> m0_453  [key=0, style=solid];
m0_452 -> m0_454  [key=0, style=solid];
m0_453 -> m0_454  [key=0, style=solid];
m0_453 -> m0_457  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
m0_455 -> m0_457  [key=0, style=solid];
m0_455 -> m0_460  [key=2, style=dotted];
m0_455 -> m0_455  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m0_456 -> m0_457  [key=0, style=solid];
m0_456 -> m0_460  [key=2, style=dotted];
m0_456 -> m0_456  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m0_451 -> m0_452  [color=red, key=0, style=solid];
m0_451 -> m0_457  [color=red, key=1, label=metaLength, style=dashed];
m0_454 -> m0_455  [key=0, style=solid];
m0_454 -> m0_456  [key=0, style=solid];
m0_457 -> m0_458  [key=0, style=solid];
m0_457 -> m0_457  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m0_458 -> m0_459  [key=0, style=solid];
m0_459 -> m0_427  [color=blue, key=0, style=bold];
m0_57 -> m0_136  [color=red, key=0, style=solid];
m0_136 -> m0_137  [color=red, key=0, style=solid];
m0_136 -> m0_138  [color=red, key=2, style=dotted];
m0_137 -> m0_57  [color=blue, key=0, style=bold];
m0_193 -> m0_194  [color=red, key=0, style=solid];
m0_193 -> m0_196  [color=red, key=1, label="params System.Type[]", style=dashed];
m0_193 -> m0_198  [color=red, key=1, label=int, style=dashed];
m0_194 -> m0_195  [color=red, key=0, style=solid];
m0_194 -> m0_196  [color=red, key=0, style=solid];
m0_196 -> m0_197  [color=red, key=0, style=solid];
m0_196 -> m0_198  [color=red, key=0, style=solid];
m0_198 -> m0_199  [color=red, key=0, style=solid];
m0_198 -> m0_187  [color=red, key=2, style=dotted];
m0_198 -> m0_56  [color=red, key=2, style=dotted];
m0_198 -> m0_179  [color=red, key=2, style=dotted];
m0_195 -> m0_199  [color=red, key=0, style=solid];
m0_195 -> m0_23  [color=red, key=2, style=dotted];
m0_197 -> m0_199  [color=red, key=0, style=solid];
m0_197 -> m0_186  [color=red, key=2, style=dotted];
m0_199 -> m0_193  [color=blue, key=0, style=bold];
m0_150 -> m0_151  [color=red, key=0, style=solid];
m0_151 -> m0_152  [color=red, key=0, style=solid];
m0_151 -> m0_146  [color=red, key=2, style=dotted];
m0_151 -> m0_154  [color=red, key=1, label="lambda expression", style=dashed];
m0_152 -> m0_153  [color=red, key=0, style=solid];
m0_153 -> m0_150  [color=blue, key=0, style=bold];
m0_157 -> m0_158  [color=red, key=0, style=solid];
m0_158 -> m0_159  [color=red, key=0, style=solid];
m0_158 -> m0_162  [color=red, key=2, style=dotted];
m0_159 -> m0_160  [color=red, key=0, style=solid];
m0_159 -> m0_146  [color=red, key=2, style=dotted];
m0_159 -> m0_163  [color=red, key=1, label="lambda expression", style=dashed];
m0_160 -> m0_161  [color=red, key=0, style=solid];
m0_161 -> m0_157  [color=blue, key=0, style=bold];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_6  [color=blue, key=0, style=bold];
m0_230 -> m0_234  [color=red, key=0, style=solid];
m0_234 -> m0_235  [color=red, key=0, style=solid];
m0_234 -> m0_53  [color=red, key=2, style=dotted];
m0_234 -> m0_203  [color=red, key=2, style=dotted];
m0_235 -> m0_230  [color=blue, key=0, style=bold];
m0_53 -> m0_236  [color=red, key=0, style=solid];
m0_53 -> m0_240  [color=red, key=0, style=bold];
m0_53 -> m0_247  [color=red, key=0, style=bold];
m0_53 -> m0_251  [color=red, key=0, style=bold];
m0_53 -> m0_238  [color=red, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_53 -> m0_245  [color=red, key=1, label="System.Func<CommandLine.Text.Example, CommandLine.Text.Example>", style=dashed];
m0_236 -> m0_237  [color=red, key=0, style=solid];
m0_236 -> m0_238  [color=red, key=0, style=solid];
m0_240 -> m0_241  [color=red, key=0, style=solid];
m0_247 -> m0_248  [color=red, key=0, style=solid];
m0_247 -> m0_223  [color=red, key=2, style=dotted];
m0_251 -> m0_249  [color=red, key=0, style=solid];
m0_251 -> m0_223  [color=red, key=2, style=dotted];
m0_238 -> m0_239  [color=red, key=0, style=solid];
m0_238 -> m0_253  [color=red, key=2, style=dotted];
m0_238 -> m0_241  [color=red, key=1, label=usage, style=dashed];
m0_245 -> m0_246  [color=red, key=0, style=solid];
m0_245 -> m0_257  [color=red, key=2, style=dotted];
m0_245 -> m0_248  [color=red, key=1, label=example, style=dashed];
m0_245 -> m0_250  [color=red, key=1, label=example, style=dashed];
m0_237 -> m0_252  [color=red, key=0, style=solid];
m0_237 -> m0_23  [color=red, key=2, style=dotted];
m0_239 -> m0_240  [color=red, key=0, style=solid];
m0_239 -> m0_241  [color=red, key=0, style=solid];
m0_239 -> m0_254  [color=red, key=2, style=dotted];
m0_241 -> m0_242  [color=red, key=0, style=solid];
m0_241 -> m0_255  [color=red, key=2, style=dotted];
m0_241 -> m0_243  [color=red, key=1, label=usageTuple, style=dashed];
m0_242 -> m0_243  [color=red, key=0, style=solid];
m0_242 -> m0_244  [color=red, key=1, label=examples, style=dashed];
m0_243 -> m0_244  [color=red, key=0, style=solid];
m0_243 -> m0_256  [color=red, key=2, style=dotted];
m0_243 -> m0_250  [color=red, key=1, label=appAlias, style=dashed];
m0_244 -> m0_245  [color=red, key=0, style=solid];
m0_244 -> m0_252  [color=red, key=0, style=solid];
m0_250 -> m0_251  [color=red, key=0, style=solid];
m0_250 -> m0_219  [color=red, key=2, style=dotted];
m0_250 -> m0_220  [color=red, key=2, style=dotted];
m0_250 -> m0_260  [color=red, key=2, style=dotted];
m0_250 -> m0_258  [color=red, key=2, style=dotted];
m0_250 -> m0_261  [color=red, key=2, style=dotted];
m0_250 -> m0_222  [color=red, key=2, style=dotted];
m0_250 -> m0_262  [color=red, key=1, label="lambda expression", style=dashed];
m0_246 -> m0_247  [color=red, key=0, style=solid];
m0_246 -> m0_219  [color=red, key=2, style=dotted];
m0_246 -> m0_258  [color=red, key=2, style=dotted];
m0_248 -> m0_249  [color=red, key=0, style=solid];
m0_248 -> m0_259  [color=red, key=2, style=dotted];
m0_249 -> m0_250  [color=red, key=0, style=solid];
m0_249 -> m0_244  [color=red, key=0, style=solid];
m0_249 -> m0_263  [color=red, key=1, label=s, style=dashed];
m0_249 -> m0_264  [color=red, key=1, label=s, style=dashed];
m0_249 -> m0_265  [color=red, key=1, label=s, style=dashed];
m0_252 -> m0_53  [color=blue, key=0, style=bold];
m0_477 -> m0_17  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_18  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_19  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_20  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_21  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_136  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_140  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_143  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_148  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_144  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_151  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_155  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_152  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_159  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_164  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_160  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_168  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_172  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_169  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_176  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_184  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_191  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_198  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_268  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_301  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_325  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_330  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_331  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_333  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_338  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_334  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_341  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_343  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_345  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_346  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_348  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_349  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_384  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_388  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_350  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_352  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_363  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_366  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_369  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_373  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_375  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_376  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_395  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_399  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_405  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_416  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_417  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_419  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_423  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_437  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_477 -> m0_442  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_478 -> m0_63  [color=red, key=1, label=auto, style=dashed];
m0_478 -> m0_67  [color=red, key=1, label=auto, style=dashed];
m0_478 -> m0_70  [color=red, key=1, label=auto, style=dashed];
m0_479 -> m0_100  [color=red, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_479 -> m0_113  [color=red, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_480 -> m0_107  [color=red, key=1, label=pr, style=dashed];
m0_481 -> m0_263  [color=red, key=1, label=s, style=dashed];
m0_481 -> m0_264  [color=red, key=1, label=s, style=dashed];
m0_481 -> m0_265  [color=red, key=1, label=s, style=dashed];
m0_482 -> m0_338  [color=red, key=1, label=string, style=dashed];
m0_483 -> m0_338  [color=red, key=1, label=maxLength, style=dashed];
m0_484 -> m0_338  [color=red, key=1, label=remainingSpace, style=dashed];
m0_485 -> m0_384  [color=red, key=1, label=int, style=dashed];
m0_485 -> m0_388  [color=red, key=1, label=int, style=dashed];
m0_486 -> m0_384  [color=red, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_486 -> m0_388  [color=red, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_487 -> m0_392  [color=red, key=1, label=optionHelpText, style=dashed];
m0_488 -> m0_399  [color=red, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m0_488 -> m0_405  [color=red, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m0_489 -> m0_410  [color=red, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m0_489 -> m0_414  [color=red, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m3_28 -> m3_77  [key=0, style=solid];
m3_28 -> m3_34  [color=darkorchid, key=3, label="Parameter variable CommandLine.Error[] errors", style=bold];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_79  [key=2, style=dotted];
m3_77 -> m3_80  [key=2, style=dotted];
m3_78 -> m3_28  [color=blue, key=0, style=bold];
m3_10 -> m3_10  [color=darkorchid, key=3, label="Local variable System.Func<string, bool> preprocCompare", style=bold];
m3_36 -> m3_42  [key=0, style=solid];
m3_36 -> m3_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_36 -> m3_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m3_36 -> m3_59  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_44  [key=2, style=dotted];
m3_42 -> m3_45  [key=2, style=dotted];
m3_42 -> m3_32  [key=2, style=dotted];
m3_42 -> m3_46  [key=2, style=dotted];
m3_42 -> m3_47  [key=2, style=dotted];
m3_42 -> m3_48  [key=2, style=dotted];
m3_42 -> m3_29  [key=2, style=dotted];
m3_42 -> m3_49  [key=2, style=dotted];
m3_42 -> m3_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_42 -> m3_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_42 -> m3_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_43 -> m3_36  [color=blue, key=0, style=bold];
m3_73 -> m3_74  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_9  [key=2, style=dotted];
m3_5 -> m3_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_14  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_10  [key=2, style=dotted];
m3_6 -> m3_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_18  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m3_4 -> m3_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m3_4 -> m3_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m3_11 -> m3_12  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_15 -> m3_16  [key=0, style=solid];
m3_8 -> m3_4  [color=blue, key=0, style=bold];
m3_13 -> m3_11  [color=blue, key=0, style=bold];
m3_17 -> m3_15  [color=blue, key=0, style=bold];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_40  [key=2, style=dotted];
m3_38 -> m3_41  [key=2, style=dotted];
m3_37 -> m3_38  [key=0, style=solid];
m3_39 -> m3_37  [color=blue, key=0, style=bold];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_29  [key=2, style=dotted];
m3_51 -> m3_40  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_56  [key=2, style=dotted];
m3_54 -> m3_57  [key=2, style=dotted];
m3_54 -> m3_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_29  [key=2, style=dotted];
m3_59 -> m3_40  [key=2, style=dotted];
m3_50 -> m3_51  [key=0, style=solid];
m3_53 -> m3_54  [key=0, style=solid];
m3_61 -> m3_62  [key=0, style=solid];
m3_52 -> m3_50  [color=blue, key=0, style=bold];
m3_55 -> m3_53  [color=blue, key=0, style=bold];
m3_58 -> m3_59  [key=0, style=solid];
m3_60 -> m3_58  [color=blue, key=0, style=bold];
m3_62 -> m3_63  [key=0, style=solid];
m3_63 -> m3_61  [color=blue, key=0, style=bold];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_40  [key=2, style=dotted];
m3_70 -> m3_71  [key=0, style=solid];
m3_72 -> m3_70  [color=blue, key=0, style=bold];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_76  [key=2, style=dotted];
m3_75 -> m3_73  [color=blue, key=0, style=bold];
m3_34 -> m3_64  [key=0, style=solid];
m3_34 -> m3_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_66  [key=2, style=dotted];
m3_64 -> m3_67  [key=2, style=dotted];
m3_64 -> m3_68  [key=2, style=dotted];
m3_64 -> m3_69  [key=2, style=dotted];
m3_64 -> m3_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_64 -> m3_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_65 -> m3_34  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_0 -> m3_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_0 -> m3_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_0 -> m3_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_0 -> m3_3  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<object> Choose", style=bold];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_1 -> m3_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1 -> m3_1  [color=darkorchid, key=3, label="method methodReturn RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error> ", style=bold];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_3 -> m3_19  [key=0, style=solid];
m3_3 -> m3_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m3_3 -> m3_21  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_3 -> m3_22  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_3 -> m3_38  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_3 -> m3_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m3_3 -> m3_24  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", style=dashed];
m3_3 -> m3_28  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<object> Choose", style=bold];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_21  [key=0, style=solid];
m3_19 -> m3_26  [key=2, style=dotted];
m3_20 -> m3_25  [key=0, style=solid];
m3_20 -> m3_27  [key=2, style=dotted];
m3_20 -> m3_28  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_29  [key=2, style=dotted];
m3_21 -> m3_38  [color=darkseagreen4, key=1, label=firstArg, style=dashed];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_22 -> m3_24  [color=darkseagreen4, key=1, label=preprocCompare, style=dashed];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_30  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_31  [key=2, style=dotted];
m3_24 -> m3_32  [key=2, style=dotted];
m3_24 -> m3_33  [key=2, style=dotted];
m3_24 -> m3_34  [key=2, style=dotted];
m3_24 -> m3_28  [key=2, style=dotted];
m3_24 -> m3_35  [key=2, style=dotted];
m3_24 -> m3_36  [key=2, style=dotted];
m3_25 -> m3_3  [color=blue, key=0, style=bold];
m3_81 -> m3_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_81 -> m3_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_81 -> m3_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_81 -> m3_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_82 -> m3_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m3_82 -> m3_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m3_83 -> m3_38  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_84 -> m3_38  [color=darkseagreen4, key=1, label=firstArg, style=dashed];
m3_85 -> m3_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_85 -> m3_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_85 -> m3_59  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_86 -> m3_51  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_86 -> m3_54  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_86 -> m3_59  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_87 -> m3_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m3_88 -> m3_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_89 -> m3_71  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_6  [key=2, style=dotted];
m5_1 -> m5_3  [color=darkseagreen4, key=1, label=tokenPartitions, style=dashed];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_7  [key=2, style=dotted];
m5_2 -> m5_8  [key=2, style=dotted];
m5_2 -> m5_9  [key=2, style=dotted];
m5_2 -> m5_10  [key=2, style=dotted];
m5_2 -> m5_11  [key=2, style=dotted];
m5_2 -> m5_12  [key=2, style=dotted];
m5_2 -> m5_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3 -> m5_4  [color=red, key=0, style=solid];
m5_3 -> m5_13  [key=2, style=dotted];
m5_3 -> m5_14  [key=2, style=dotted];
m5_3 -> m5_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3 -> m5_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_4 -> m5_5  [color=red, key=0, style=solid];
m5_4 -> m5_11  [color=red, key=2, style=dotted];
m5_4 -> m5_15  [color=red, key=2, style=dotted];
m5_4 -> m5_28  [color=red, key=1, label="lambda expression", style=dashed];
m5_5 -> m5_0  [color=blue, key=0, style=bold];
m5_28 -> m5_29  [key=0, style=solid];
m5_16 -> m5_17  [key=0, style=solid];
m5_20 -> m5_21  [key=0, style=solid];
m5_24 -> m5_25  [key=0, style=solid];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_19  [key=2, style=dotted];
m5_18 -> m5_16  [color=blue, key=0, style=bold];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_23  [key=2, style=dotted];
m5_22 -> m5_20  [color=blue, key=0, style=bold];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_27  [key=2, style=dotted];
m5_26 -> m5_24  [color=blue, key=0, style=bold];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_23  [key=2, style=dotted];
m5_29 -> m5_31  [key=2, style=dotted];
m5_30 -> m5_28  [color=blue, key=0, style=bold];
m7_42 -> m7_43  [key=0, style=solid];
m7_44 -> m7_45  [color=green, key=0, style=solid];
m7_44 -> m7_48  [color=green, key=2, style=dotted];
m7_44 -> m7_49  [color=green, key=2, style=dotted];
m7_44 -> m7_51  [color=green, key=1, label="lambda expression", style=dashed];
m7_43 -> m7_44  [color=green, key=0, style=solid];
m7_43 -> m7_43  [color=darkseagreen4, key=1, label=e, style=dashed];
m7_43 -> m7_47  [key=2, style=dotted];
m7_43 -> m7_54  [color=darkseagreen4, key=1, label=bySet, style=dashed];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_50  [key=2, style=dotted];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_53  [color=darkseagreen4, key=1, label="?", style=dashed];
m7_51 -> m7_54  [color=darkseagreen4, key=1, label="?", style=dashed];
m7_55 -> m7_56  [color=green, key=0, style=solid];
m7_55 -> m7_61  [color=green, key=2, style=dotted];
m7_55 -> m7_62  [color=green, key=2, style=dotted];
m7_55 -> m7_63  [color=green, key=2, style=dotted];
m7_55 -> m7_64  [color=green, key=2, style=dotted];
m7_55 -> m7_65  [color=green, key=2, style=dotted];
m7_55 -> m7_66  [color=green, key=2, style=dotted];
m7_55 -> m7_67  [color=green, key=2, style=dotted];
m7_54 -> m7_55  [color=green, key=0, style=solid];
m7_54 -> m7_49  [key=2, style=dotted];
m7_54 -> m7_54  [color=darkseagreen4, key=1, label=s, style=dashed];
m7_54 -> m7_59  [key=2, style=dotted];
m7_54 -> m7_60  [key=2, style=dotted];
m7_54 -> m7_57  [key=2, style=dotted];
m7_54 -> m7_50  [key=2, style=dotted];
m7_52 -> m7_55  [color=green, key=1, label=names, style=dashed];
m7_52 -> m7_49  [key=2, style=dotted];
m7_52 -> m7_52  [color=darkseagreen4, key=1, label=e, style=dashed];
m7_52 -> m7_53  [key=0, style=solid];
m7_52 -> m7_57  [key=2, style=dotted];
m7_52 -> m7_50  [key=2, style=dotted];
m7_53 -> m7_55  [color=green, key=1, label=namesCount, style=dashed];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_58  [key=2, style=dotted];
m7_56 -> m7_51  [color=blue, key=0, style=bold];
m7_46 -> m7_42  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=2, style=dotted];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m7_68 -> m7_54  [color=darkseagreen4, key=1, label=bySet, style=dashed];
m10_10 -> m10_8  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_4  [key=2, style=dotted];
m10_1 -> m10_5  [key=2, style=dotted];
m10_1 -> m10_6  [key=2, style=dotted];
m10_1 -> m10_7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1 -> m10_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_2 -> m10_3  [key=0, style=solid];
m10_3 -> m10_0  [color=blue, key=0, style=bold];
m10_11 -> m10_12  [key=0, style=solid];
m10_8 -> m10_9  [color=green, key=0, style=solid];
m10_8 -> m10_10  [key=2, style=dotted];
m10_7 -> m10_8  [key=0, style=solid];
m10_9 -> m10_7  [color=blue, key=0, style=bold];
m10_9 -> m10_10  [color=green, key=0, style=solid];
m10_9 -> m10_11  [color=green, key=2, style=dotted];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_14  [key=2, style=dotted];
m10_13 -> m10_11  [color=blue, key=0, style=bold];
m10_15 -> m10_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_16 -> m10_8  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m12_32 -> m12_32  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>> converter", style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [color=red, key=0, style=solid];
m12_1 -> m12_4  [key=2, style=dotted];
m12_2 -> m12_3  [color=red, key=0, style=solid];
m12_2 -> m12_5  [color=red, key=2, style=dotted];
m12_2 -> m12_6  [color=red, key=2, style=dotted];
m12_2 -> m12_7  [color=red, key=2, style=dotted];
m12_2 -> m12_8  [color=red, key=1, label="lambda expression", style=dashed];
m12_2 -> m12_11  [color=red, key=1, label="lambda expression", style=dashed];
m12_2 -> m12_14  [color=red, key=1, label="lambda expression", style=dashed];
m12_3 -> m12_0  [color=blue, key=0, style=bold];
m12_4 -> m12_17  [key=0, style=solid];
m12_4 -> m12_18  [color=crimson, key=0, style=bold];
m12_4 -> m12_22  [color=crimson, key=0, style=bold];
m12_4 -> m12_23  [color=crimson, key=0, style=bold];
m12_4 -> m12_26  [color=crimson, key=0, style=bold];
m12_4 -> m12_27  [color=crimson, key=0, style=bold];
m12_4 -> m12_28  [color=crimson, key=0, style=bold];
m12_4 -> m12_30  [color=crimson, key=0, style=bold];
m12_4 -> m12_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m12_4 -> m12_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m12_4 -> m12_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m12_4 -> m12_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m12_4 -> m12_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m12_17 -> m12_18  [key=0, style=solid];
m12_17 -> m12_19  [key=0, style=solid];
m12_17 -> m12_32  [key=2, style=dotted];
m12_18 -> m12_19  [key=0, style=solid];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_38  [key=2, style=dotted];
m12_22 -> m12_39  [key=2, style=dotted];
m12_23 -> m12_24  [key=0, style=solid];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_46  [key=2, style=dotted];
m12_26 -> m12_47  [key=2, style=dotted];
m12_26 -> m12_39  [key=2, style=dotted];
m12_27 -> m12_28  [key=0, style=solid];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_48  [key=2, style=dotted];
m12_28 -> m12_49  [key=2, style=dotted];
m12_28 -> m12_47  [key=2, style=dotted];
m12_28 -> m12_39  [key=2, style=dotted];
m12_28 -> m12_36  [key=2, style=dotted];
m12_28 -> m12_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_30 -> m12_29  [key=0, style=solid];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> m12_33  [key=2, style=dotted];
m12_19 -> m12_22  [color=darkseagreen4, key=1, label=pt, style=dashed];
m12_19 -> m12_25  [color=darkseagreen4, key=1, label=pt, style=dashed];
m12_19 -> m12_26  [color=darkseagreen4, key=1, label=pt, style=dashed];
m12_19 -> m12_28  [color=darkseagreen4, key=1, label=pt, style=dashed];
m12_19 -> m12_58  [color=darkseagreen4, key=1, label=pt, style=dashed];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_34  [key=2, style=dotted];
m12_20 -> m12_35  [key=2, style=dotted];
m12_20 -> m12_36  [key=2, style=dotted];
m12_20 -> m12_37  [key=2, style=dotted];
m12_20 -> m12_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_20 -> m12_25  [color=darkseagreen4, key=1, label=taken, style=dashed];
m12_20 -> m12_28  [color=darkseagreen4, key=1, label=taken, style=dashed];
m12_20 -> m12_29  [color=darkseagreen4, key=1, label=taken, style=dashed];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_40  [key=2, style=dotted];
m12_24 -> m12_41  [key=2, style=dotted];
m12_24 -> m12_42  [key=2, style=dotted];
m12_24 -> m12_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_28  [key=0, style=solid];
m12_25 -> m12_43  [key=2, style=dotted];
m12_25 -> m12_44  [key=2, style=dotted];
m12_25 -> m12_35  [key=2, style=dotted];
m12_25 -> m12_40  [key=2, style=dotted];
m12_25 -> m12_45  [key=2, style=dotted];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_31  [key=0, style=solid];
m12_29 -> m12_40  [key=2, style=dotted];
m12_29 -> m12_35  [key=2, style=dotted];
m12_29 -> m12_4  [key=2, style=dotted];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_24  [key=0, style=solid];
m12_21 -> m12_32  [key=2, style=dotted];
m12_31 -> m12_4  [color=blue, key=0, style=bold];
m12_57 -> m12_58  [key=0, style=solid];
m12_8 -> m12_9  [key=0, style=solid];
m12_11 -> m12_12  [key=0, style=solid];
m12_14 -> m12_15  [key=0, style=solid];
m12_9 -> m12_10  [key=0, style=solid];
m12_10 -> m12_8  [color=blue, key=0, style=bold];
m12_12 -> m12_13  [key=0, style=solid];
m12_13 -> m12_11  [color=blue, key=0, style=bold];
m12_15 -> m12_16  [key=0, style=solid];
m12_16 -> m12_14  [color=blue, key=0, style=bold];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_47  [key=2, style=dotted];
m12_58 -> m12_60  [key=2, style=dotted];
m12_58 -> m12_61  [key=2, style=dotted];
m12_58 -> m12_39  [key=2, style=dotted];
m12_50 -> m12_51  [key=0, style=solid];
m12_53 -> m12_54  [key=0, style=solid];
m12_51 -> m12_52  [key=0, style=solid];
m12_52 -> m12_50  [color=blue, key=0, style=bold];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_56  [key=2, style=dotted];
m12_55 -> m12_53  [color=blue, key=0, style=bold];
m12_59 -> m12_57  [color=blue, key=0, style=bold];
m12_72 -> m12_73  [key=0, style=solid];
m12_73 -> m12_74  [key=0, style=solid];
m12_73 -> m12_43  [key=2, style=dotted];
m12_73 -> m12_46  [key=2, style=dotted];
m12_73 -> m12_47  [key=2, style=dotted];
m12_73 -> m12_61  [key=2, style=dotted];
m12_74 -> m12_72  [color=blue, key=0, style=bold];
m12_62 -> m12_63  [key=0, style=solid];
m12_62 -> m12_67  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m12_62 -> m12_68  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m12_63 -> m12_64  [key=0, style=solid];
m12_63 -> m12_66  [key=0, style=solid];
m12_67 -> m12_68  [key=0, style=solid];
m12_67 -> m12_69  [key=0, style=solid];
m12_67 -> m12_43  [key=2, style=dotted];
m12_68 -> m12_70  [key=0, style=solid];
m12_68 -> m12_71  [key=2, style=dotted];
m12_68 -> m12_47  [key=2, style=dotted];
m12_64 -> m12_65  [key=0, style=solid];
m12_66 -> m12_67  [key=0, style=solid];
m12_65 -> m12_70  [key=0, style=solid];
m12_65 -> m12_47  [key=2, style=dotted];
m12_69 -> m12_70  [key=0, style=solid];
m12_69 -> m12_61  [key=2, style=dotted];
m12_70 -> m12_62  [color=blue, key=0, style=bold];
m12_75 -> m12_58  [color=darkseagreen4, key=1, label=pt, style=dashed];
}
