digraph  {
n5 [label="CommandLine.ValueAttribute", span=""];
n0 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", label="Entry CommandLine.ValueAttribute.ValueAttribute(int)", span="21-21"];
n1 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", label="this.index = index", span="23-23"];
n2 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", label="this.min = -1", span="24-24"];
n3 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", label="this.max = -1", span="25-25"];
n4 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", label="Exit CommandLine.ValueAttribute.ValueAttribute(int)", span="21-21"];
m0_258 [cluster="System.Text.StringBuilder.Append(char)", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m0_102 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="285-285"];
m0_128 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="285-285"];
m0_129 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
m0_48 [cluster="System.Collections.Generic.IEnumerable<CommandLine.Error>.OnlyMeaningfulOnes()", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<CommandLine.Error>.OnlyMeaningfulOnes()", span="18-18"];
m0_58 [cluster="Unk.Any", file="ErrorHandling.cs", label="Entry Unk.Any", span=""];
m0_255 [cluster="Unk.FromJustStrict", file="ErrorHandling.cs", label="Entry Unk.FromJustStrict", span=""];
m0_0 [cluster="CommandLine.Text.HelpText.HelpText()", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36"];
m0_1 [cluster="CommandLine.Text.HelpText.HelpText()", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.HelpText()", span="36-36"];
m0_379 [cluster="string.PadRight(int)", file="ErrorHandling.cs", label="Entry string.PadRight(int)", span="0-0"];
m0_460 [cluster="T.ToStringInvariant<T>()", file="ErrorHandling.cs", label="Entry T.ToStringInvariant<T>()", span="15-15"];
m0_324 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="ErrorHandling.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m0_61 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389"];
m0_177 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389"];
m0_274 [cluster="System.Text.StringBuilder.SafeToString()", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.SafeToString()", span="66-66"];
m0_273 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m0_92 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="ErrorHandling.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m0_90 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m0_402 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
m0_135 [cluster="CommandLine.Text.HelpText.ToString()", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="580-580"];
m0_269 [cluster="CommandLine.Text.HelpText.ToString()", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.ToString()", span="580-580"];
m0_270 [cluster="string.SafeLength()", file="ErrorHandling.cs", label="Entry string.SafeLength()", span="50-50"];
m0_139 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333"];
m0_141 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333"];
m0_272 [cluster="string.IsNullOrEmpty(string)", file="ErrorHandling.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m0_474 [cluster="string.ToLowerInvariant()", file="ErrorHandling.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m0_426 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="840-840"];
m0_448 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="840-840"];
m0_259 [cluster="CommandLine.Text.Example.GetFormatStylesOrDefault()", file="ErrorHandling.cs", label="Entry CommandLine.Text.Example.GetFormatStylesOrDefault()", span="124-124"];
m0_187 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="663-663"];
m0_326 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="663-663"];
m0_381 [cluster="string.Trim()", file="ErrorHandling.cs", label="Entry string.Trim()", span="0-0"];
m0_271 [cluster="System.Text.StringBuilder.SafeLength()", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.SafeLength()", span="73-73"];
m0_327 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="ErrorHandling.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m0_380 [cluster="string.FormatInvariant(params object[])", file="ErrorHandling.cs", label="Entry string.FormatInvariant(params object[])", span="25-25"];
m0_23 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ErrorHandling.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m0_299 [cluster="string.Substring(int)", file="ErrorHandling.cs", label="Entry string.Substring(int)", span="0-0"];
m0_200 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458"];
m0_202 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458"];
m0_315 [cluster="System.Type.GetUsageData()", file="ErrorHandling.cs", label="Entry System.Type.GetUsageData()", span="38-38"];
m0_401 [cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="18-18"];
m0_59 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m0_256 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ErrorHandling.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="23-23"];
m0_51 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ErrorHandling.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12"];
m0_130 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="477-477"];
m0_217 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="477-477"];
m0_340 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="720-720"];
m0_377 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="720-720"];
m0_344 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="703-703"];
m0_307 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="703-703"];
m0_403 [cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="27-27"];
m0_131 [cluster="string.Concat(string, string)", file="ErrorHandling.cs", label="Entry string.Concat(string, string)", span="0-0"];
m0_422 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="829-836"];
m0_62 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="220-220"];
m0_66 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="233-233"];
m0_69 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="236-236"];
m0_73 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="239-239"];
m0_64 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="220-220"];
m0_68 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="233-233"];
m0_71 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="236-236"];
m0_75 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="239-239"];
m0_93 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="267-267"];
m0_96 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="270-270"];
m0_99 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="271-271"];
m0_103 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="271-271"];
m0_106 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="276-276"];
m0_109 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="276-276"];
m0_112 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="277-277"];
m0_115 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="277-277"];
m0_95 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="267-267"];
m0_98 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="270-270"];
m0_101 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="271-271"];
m0_105 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="271-271"];
m0_108 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="276-276"];
m0_111 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="276-276"];
m0_114 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="277-277"];
m0_117 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="277-277"];
m0_147 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="345-345"];
m0_149 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="345-345"];
m0_154 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="356-356"];
m0_156 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="356-356"];
m0_163 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="368-368"];
m0_165 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="368-368"];
m0_171 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="380-380"];
m0_173 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="380-380"];
m0_224 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="491-491"];
m0_226 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="491-491"];
m0_231 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="518-518"];
m0_233 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="518-518"];
m0_262 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="565-570"];
m0_266 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="565-570"];
m0_310 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="642-642"];
m0_312 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="642-642"];
m0_317 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="651-660"];
m0_322 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="651-660"];
m0_337 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="687-688"];
m0_339 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="687-688"];
m0_383 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="726-726"];
m0_387 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="727-727"];
m0_391 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="739-739"];
m0_385 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="726-726"];
m0_389 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="727-727"];
m0_393 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="739-739"];
m0_398 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="793-797"];
m0_404 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="800-803"];
m0_400 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="793-797"];
m0_406 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="800-803"];
m0_409 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="812-812"];
m0_413 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="813-813"];
m0_411 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="812-812"];
m0_415 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="813-813"];
m0_425 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="829-836"];
m0_397 [cluster="System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49"];
m0_88 [cluster="System.ArgumentException.ArgumentException(string, string)", file="ErrorHandling.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m0_386 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="787-787"];
m0_396 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="787-787"];
m0_4 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
m0_5 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
m0_473 [cluster="T.ToStringLocal<T>()", file="ErrorHandling.cs", label="Entry T.ToStringLocal<T>()", span="20-20"];
m0_329 [cluster="Unk.Concat", file="ErrorHandling.cs", label="Entry Unk.Concat", span=""];
m0_476 [cluster="System.Text.StringBuilder.ToString(int, int)", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.ToString(int, int)", span="0-0"];
m0_76 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260"];
m0_87 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260"];
m0_220 [cluster="int.Spaces()", file="ErrorHandling.cs", label="Entry int.Spaces()", span="35-35"];
m0_65 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="ErrorHandling.cs", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155"];
m0_223 [cluster="System.Text.StringBuilder.ToString()", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m0_254 [cluster="CSharpx.Maybe<T>.MatchNothing()", file="ErrorHandling.cs", label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57"];
m0_475 [cluster="System.Text.StringBuilder.StringBuilder()", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m0_166 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsText(string)", span="377-377"];
m0_170 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddPostOptionsText(string)", span="377-377"];
m0_60 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="405-405"];
m0_185 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="405-405"];
m0_253 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="648-648"];
m0_314 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="648-648"];
m0_162 [cluster="string.Split(string[], System.StringSplitOptions)", file="ErrorHandling.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m0_203 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="ErrorHandling.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m0_8 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="82-82"];
m0_9 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.HelpText(string, string)", span="82-82"];
m0_227 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516"];
m0_229 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516"];
m0_146 [cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="231-231"];
m0_296 [cluster="string.Split(params char[])", file="ErrorHandling.cs", label="Entry string.Split(params char[])", span="0-0"];
m0_24 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m0_328 [cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", file="ErrorHandling.cs", label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45"];
m0_394 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", span="895-895"];
m0_461 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="value is bool", span="897-897"];
m0_462 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="return value.ToStringLocal().ToLowerInvariant();", span="898-898"];
m0_463 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="value is string", span="900-900"];
m0_464 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="return value.ToStringLocal();", span="901-901"];
m0_465 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="var asEnumerable = value as IEnumerable", span="903-903"];
m0_467 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="return value.ToStringLocal();", span="905-905"];
m0_466 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="asEnumerable == null", span="904-904"];
m0_469 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label=asEnumerable, span="908-908"];
m0_468 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="var builder = new StringBuilder()", span="907-907"];
m0_470 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="builder\r\n                    .Append(item.ToStringLocal())\r\n                    .Append('' '')", span="909-911"];
m0_471 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="return builder.Length > 0\r\n                ? builder.ToString(0, builder.Length - 1)\r\n                : string.Empty;", span="913-915"];
m0_472 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", span="895-895"];
m0_25 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196"];
m0_46 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196"];
m0_50 [cluster="System.Func<T, TResult>.Invoke(T)", file="ErrorHandling.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m0_47 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ErrorHandling.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m0_218 [cluster="Unk.Where", file="ErrorHandling.cs", label="Entry Unk.Where", span=""];
m0_91 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ErrorHandling.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m0_382 [cluster="string.String(char, int)", file="ErrorHandling.cs", label="Entry string.String(char, int)", span="0-0"];
m0_298 [cluster="System.Math.Min(int, int)", file="ErrorHandling.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m0_309 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m0_412 [cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0"];
m0_257 [cluster="Unk.mapperFunc", file="ErrorHandling.cs", label="Entry Unk.mapperFunc", span=""];
m0_260 [cluster="Unk.Append", file="ErrorHandling.cs", label="Entry Unk.Append", span=""];
m0_54 [cluster="System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()", span="331-331"];
m0_179 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="675-675"];
m0_335 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="675-675"];
m0_222 [cluster="System.Text.StringBuilder.Append(string)", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m0_132 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="311-311"];
m0_134 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="311-311"];
m0_138 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="713-713"];
m0_347 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="713-713"];
m0_323 [cluster="System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", file="ErrorHandling.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", span="0-0"];
m0_142 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="819-819"];
m0_418 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="819-819"];
m0_2 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48"];
m0_3 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48"];
m0_178 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="634-634"];
m0_304 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="634-634"];
m0_275 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="598-598"];
m0_295 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="598-598"];
m0_10 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95"];
m0_22 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95"];
m0_390 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="807-807"];
m0_408 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="807-807"];
m0_72 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="343-343"];
m0_145 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="343-343"];
m0_428 [cluster="System.Math.Max(int, int)", file="ErrorHandling.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m0_221 [cluster="Unk.formatError", file="ErrorHandling.cs", label="Entry Unk.formatError", span=""];
m0_336 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="826-826"];
m0_420 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="826-826"];
m0_378 [cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41"];
m0_186 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="ErrorHandling.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m0_342 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="693-693"];
m0_306 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="693-693"];
m0_297 [cluster="string.Substring(int, int)", file="ErrorHandling.cs", label="Entry string.Substring(int, int)", span="0-0"];
m0_188 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="422-422"];
m0_192 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="422-422"];
m0_427 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="875-875"];
m0_452 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="ErrorHandling.cs", label="spec.MetaValue.Length > 0", span="882-882"];
m0_453 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="ErrorHandling.cs", label="metaLength = spec.MetaValue.Length + 1", span="883-883"];
m0_455 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="ErrorHandling.cs", label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="886-886"];
m0_456 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="ErrorHandling.cs", label="specLength += spec.Index.ToStringInvariant().Length + 11", span="888-888"];
m0_454 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="ErrorHandling.cs", label=hasMeta, span="885-885"];
m0_457 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="ErrorHandling.cs", label="specLength += metaLength", span="890-890"];
m0_458 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="ErrorHandling.cs", label="return specLength;", span="892-892"];
m0_459 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="875-875"];
m0_57 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322"];
m0_137 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322"];
m0_316 [cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", file="ErrorHandling.cs", label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="265-265"];
m0_305 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="ErrorHandling.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m0_49 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m0_56 [cluster="System.Func<TResult>.Invoke()", file="ErrorHandling.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m0_193 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="439-439"];
m0_199 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="439-439"];
m0_150 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="354-354"];
m0_153 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="354-354"];
m0_52 [cluster="CSharpx.Maybe<T>.Do<T>(System.Action<T>)", file="ErrorHandling.cs", label="Entry CSharpx.Maybe<T>.Do<T>(System.Action<T>)", span="300-300"];
m0_157 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsText(string)", span="365-365"];
m0_161 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsText(string)", span="365-365"];
m0_6 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70"];
m0_7 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70"];
m0_230 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="528-528"];
m0_235 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="528-528"];
m0_53 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="540-540"];
m0_252 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="ErrorHandling.cs", label="Exit CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="540-540"];
m0_421 [cluster="Unk.Aggregate", file="ErrorHandling.cs", label="Entry Unk.Aggregate", span=""];
m0_261 [cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="ErrorHandling.cs", label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="95-95"];
m0_219 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="ErrorHandling.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m0_89 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="ErrorHandling.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m0_55 [cluster="CSharpx.Maybe<T>.IsJust<T>()", file="ErrorHandling.cs", label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326"];
m0_308 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m0_477 [file="ErrorHandling.cs", label="CommandLine.Text.HelpText", span=""];
m0_478 [file="ErrorHandling.cs", label=auto, span=""];
m0_479 [file="ErrorHandling.cs", label="CommandLine.ParserResult<T>", span=""];
m0_480 [file="ErrorHandling.cs", label=pr, span=""];
m0_481 [file="ErrorHandling.cs", label=s, span=""];
m0_482 [file="ErrorHandling.cs", label=string, span=""];
m0_483 [file="ErrorHandling.cs", label=maxLength, span=""];
m0_484 [file="ErrorHandling.cs", label=remainingSpace, span=""];
m0_485 [file="ErrorHandling.cs", label=int, span=""];
m0_486 [file="ErrorHandling.cs", label="CommandLine.Core.Specification", span=""];
m0_487 [file="ErrorHandling.cs", label=optionHelpText, span=""];
m0_488 [file="ErrorHandling.cs", label="CommandLine.Core.OptionSpecification", span=""];
m0_489 [file="ErrorHandling.cs", label="CommandLine.Core.ValueSpecification", span=""];
m3_66 [cluster="Unk.SingleOrDefault", file="InstanceChooser.cs", label="Entry Unk.SingleOrDefault", span=""];
m3_28 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="95-95"];
m3_77 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="InstanceChooser.cs", label="return new NotParsed<object>(new NullInstance(), types, errors);", span="97-97"];
m3_78 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="95-95"];
m3_46 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35"];
m3_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
m3_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="InstanceChooser.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46"];
m3_45 [cluster="Unk.>", file="InstanceChooser.cs", label="Entry Unk.>", span=""];
m3_49 [cluster="Unk.MakeNotParsed", file="InstanceChooser.cs", label="Entry Unk.MakeNotParsed", span=""];
m3_44 [cluster="Unk.Any", file="InstanceChooser.cs", label="Entry Unk.Any", span=""];
m3_18 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceChooser.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m3_31 [cluster="System.Func<T, TResult>.Invoke(T)", file="InstanceChooser.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m3_79 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceChooser.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="136-136"];
m3_36 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="61-61"];
m3_42 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="return verbs.Any(a => nameComparer.Equals(a.Item1.Name, arguments.First()))\r\n                ? InstanceBuilder.Build(\r\n                    Maybe.Just<Func<object>>(\r\n                        () =>\r\n                            verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First()))\r\n                                .Item2.AutoDefault()),\r\n                    tokenizer,\r\n                    arguments.Skip(1),\r\n                    nameComparer,\r\n                    parsingCulture)\r\n                : MakeNotParsed(verbs.Select(v => v.Item2), new BadVerbSelectedError(arguments.First()));", span="68-78"];
m3_43 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="61-61"];
m3_48 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="InstanceChooser.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357"];
m3_68 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="InstanceChooser.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
m3_14 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceChooser.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m3_35 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="InstanceChooser.cs", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="432-432"];
m3_40 [cluster="System.StringComparer.Equals(string, string)", file="InstanceChooser.cs", label="Entry System.StringComparer.Equals(string, string)", span="0-0"];
m3_56 [cluster="Unk.Single", file="InstanceChooser.cs", label="Entry Unk.Single", span=""];
m3_67 [cluster="Unk.ToMaybe", file="InstanceChooser.cs", label="Entry Unk.ToMaybe", span=""];
m3_41 [cluster="string.Concat(string, string)", file="InstanceChooser.cs", label="Entry string.Concat(string, string)", span="0-0"];
m3_73 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="90-90"];
m3_5 [cluster="lambda expression", file="InstanceChooser.cs", label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="22-22"];
m3_12 [cluster="lambda expression", file="InstanceChooser.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="22-22"];
m3_6 [cluster="lambda expression", file="InstanceChooser.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="23-23"];
m3_16 [cluster="lambda expression", file="InstanceChooser.cs", label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="23-23"];
m3_4 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="20-25"];
m3_11 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="22-22"];
m3_7 [cluster="lambda expression", file="InstanceChooser.cs", label="return explodedTokens;", span="24-24"];
m3_15 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="23-23"];
m3_8 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="20-25"];
m3_13 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="22-22"];
m3_17 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="23-23"];
m3_38 [cluster="lambda expression", file="InstanceChooser.cs", label="nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="47-48"];
m3_37 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="46-48"];
m3_39 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="46-48"];
m3_51 [cluster="lambda expression", file="InstanceChooser.cs", label="nameComparer.Equals(a.Item1.Name, arguments.First())", span="68-68"];
m3_54 [cluster="lambda expression", file="InstanceChooser.cs", label="verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First()))\r\n                                .Item2.AutoDefault()", span="72-73"];
m3_59 [cluster="lambda expression", file="InstanceChooser.cs", label="nameComparer.Equals(v.Item1.Name, arguments.First())", span="72-72"];
m3_50 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="68-68"];
m3_53 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="71-73"];
m3_61 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="78-78"];
m3_52 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="68-68"];
m3_55 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="71-73"];
m3_58 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="72-72"];
m3_60 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="72-72"];
m3_62 [cluster="lambda expression", file="InstanceChooser.cs", label="v.Item2", span="78-78"];
m3_63 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="78-78"];
m3_71 [cluster="lambda expression", file="InstanceChooser.cs", label="nameComparer.Equals(v.Item1.Name, verb)", span="87-87"];
m3_70 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="87-87"];
m3_72 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="87-87"];
m3_74 [cluster="lambda expression", file="InstanceChooser.cs", label="new HelpVerbRequestedError(v.Item1.Name, v.Item2, true)", span="90-90"];
m3_75 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="90-90"];
m3_29 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m3_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m3_34 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="81-81"];
m3_64 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="InstanceChooser.cs", label="return verb.Length > 0\r\n                ? verbs.SingleOrDefault(v => nameComparer.Equals(v.Item1.Name, verb))\r\n                        .ToMaybe()\r\n                        .Return(\r\n                            v => new HelpVerbRequestedError(v.Item1.Name, v.Item2, true),\r\n                            new HelpVerbRequestedError(null, null, false))\r\n                : new HelpVerbRequestedError(null, null, false);", span="86-92"];
m3_65 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="81-81"];
m3_47 [cluster="Unk.Select", file="InstanceChooser.cs", label="Entry Unk.Select", span=""];
m3_27 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="InstanceChooser.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m3_0 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="13-13"];
m3_1 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="return Choose(\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                types,\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="19-29"];
m3_2 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="13-13"];
m3_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceChooser.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13"];
m3_3 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="32-32"];
m3_19 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="arguments.Empty()", span="39-39"];
m3_20 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="return MakeNotParsed(types, new NoVerbSelectedError());", span="41-41"];
m3_21 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="var firstArg = arguments.First()", span="44-44"];
m3_22 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Func<string, bool> preprocCompare = command =>\r\n                    nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="46-48"];
m3_23 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="var verbs = Verb.SelectFromTypes(types)", span="50-50"];
m3_24 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="return preprocCompare(''help'')\r\n                ? MakeNotParsed(types,\r\n                    MakeHelpVerbRequestedError(verbs,\r\n                        arguments.Skip(1).SingleOrDefault() ?? string.Empty, nameComparer))\r\n                : preprocCompare(''version'')\r\n                    ? MakeNotParsed(types, new VersionRequestedError())\r\n                    : MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture);", span="52-58"];
m3_25 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="32-32"];
m3_69 [cluster="Unk.Return", file="InstanceChooser.cs", label="Entry Unk.Return", span=""];
m3_57 [cluster="Unk.AutoDefault", file="InstanceChooser.cs", label="Entry Unk.AutoDefault", span=""];
m3_80 [cluster="CommandLine.NullInstance.NullInstance()", file="InstanceChooser.cs", label="Entry CommandLine.NullInstance.NullInstance()", span="9-9"];
m3_30 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="InstanceChooser.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m3_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m3_76 [cluster="HelpVerbRequestedError.cstr", file="InstanceChooser.cs", label="Entry HelpVerbRequestedError.cstr", span=""];
m3_81 [file="InstanceChooser.cs", label="System.StringComparer", span=""];
m3_82 [file="InstanceChooser.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m3_83 [file="InstanceChooser.cs", label="System.StringComparer", span=""];
m3_84 [file="InstanceChooser.cs", label=firstArg, span=""];
m3_85 [file="InstanceChooser.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m3_86 [file="InstanceChooser.cs", label="System.StringComparer", span=""];
m3_87 [file="InstanceChooser.cs", label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span=""];
m3_88 [file="InstanceChooser.cs", label=string, span=""];
m3_89 [file="InstanceChooser.cs", label="System.StringComparer", span=""];
m5_13 [cluster="Unk.Where", file="OptionMapperTests.cs", label="Entry Unk.Where", span=""];
m5_12 [cluster="Unk.Create", file="OptionMapperTests.cs", label="Entry Unk.Create", span=""];
m5_6 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="OptionMapperTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m5_11 [cluster="Unk.Single", file="OptionMapperTests.cs", label="Entry Unk.Single", span=""];
m5_15 [cluster="Unk.NotNull", file="OptionMapperTests.cs", label="Entry Unk.NotNull", span=""];
m5_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m5_27 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="13-13"];
m5_0 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Entry CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="17-17"];
m5_1 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var tokenPartitions = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''x'', new [] { ''true'' })\r\n                }", span="20-23"];
m5_2 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var specProps = new[]\r\n                {\r\n                    SpecificationProperty.Create(\r\n                        new OptionSpecification(''x'', string.Empty, false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '\0', Maybe.Nothing<object>(), string.Empty, string.Empty, new List<string>(), typeof(bool), TargetType.Switch), \r\n                        typeof(FakeOptions).GetProperties().Single(p => p.Name.Equals(''BoolValue'', StringComparison.Ordinal)),\r\n                        Maybe.Nothing<object>())\r\n                }", span="24-30"];
m5_3 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var result = OptionMapper.MapValues(\r\n                specProps.Where(pt => pt.Specification.IsOption()),\r\n                tokenPartitions,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture),\r\n                StringComparer.InvariantCulture)", span="33-37"];
m5_5 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Exit CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="17-17"];
m5_28 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="41-43"];
m5_16 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="28-28"];
m5_20 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="34-34"];
m5_24 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="36-36"];
m5_17 [cluster="lambda expression", file="OptionMapperTests.cs", label="p.Name.Equals(''BoolValue'', StringComparison.Ordinal)", span="28-28"];
m5_18 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="28-28"];
m5_21 [cluster="lambda expression", file="OptionMapperTests.cs", label="pt.Specification.IsOption()", span="34-34"];
m5_22 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="34-34"];
m5_25 [cluster="lambda expression", file="OptionMapperTests.cs", label="TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture)", span="36-36"];
m5_26 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="36-36"];
m5_29 [cluster="lambda expression", file="OptionMapperTests.cs", label="a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value", span="41-43"];
m5_30 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="41-43"];
m5_31 [cluster="string.Equals(string)", file="OptionMapperTests.cs", label="Entry string.Equals(string)", span="0-0"];
m5_8 [cluster="CSharpx.Maybe.Nothing<T>()", file="OptionMapperTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="75-75"];
m5_19 [cluster="string.Equals(string, System.StringComparison)", file="OptionMapperTests.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m5_23 [cluster="CommandLine.Core.Specification.IsOption()", file="OptionMapperTests.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m5_14 [cluster="Unk.MapValues", file="OptionMapperTests.cs", label="Entry Unk.MapValues", span=""];
m5_10 [cluster="System.Type.GetProperties()", file="OptionMapperTests.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m5_9 [cluster="System.Collections.Generic.List<T>.List()", file="OptionMapperTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m7_66 [cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="42-42"];
m7_64 [cluster="string.Substring(int, int)", file="SentenceBuilder.cs", label="Entry string.Substring(int, int)", span="0-0"];
m7_65 [cluster="System.Text.StringBuilder.Append(char)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m7_48 [cluster="Unk.Select", file="SentenceBuilder.cs", label="Entry Unk.Select", span=""];
m7_50 [cluster="Unk.Join", file="SentenceBuilder.cs", label="Entry Unk.Join", span=""];
m7_61 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m7_63 [cluster="System.Text.StringBuilder.Append(string)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m7_60 [cluster="Unk.Distinct", file="SentenceBuilder.cs", label="Entry Unk.Distinct", span=""];
m7_57 [cluster="Unk.JoinTo", file="SentenceBuilder.cs", label="Entry Unk.JoinTo", span=""];
m7_42 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="128-162"];
m7_44 [cluster="lambda expression", color=green, community=0, file="SentenceBuilder.cs", label="var msgs = bySet.Select(\r\n                            set =>\r\n                            {\r\n                                var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select '''''.JoinTo(e.NameInfo.NameText, ''', '')).ToArray());\r\n                                var namesCount = set.Errors.Count();\r\n\r\n                                var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from x in\r\n                                    (from s in bySet where !s.SetName.EndsWith(set.SetName) from e in s.Errors select e)\r\n                                        .Distinct()\r\n                                    select '''''.JoinTo(x.NameInfo.NameText, ''', '')).ToArray());\r\n\r\n                                return\r\n                                    new StringBuilder(''Option'')\r\n                                            .AppendWhen(namesCount > 1, ''s'')\r\n                                            .Append('': '')\r\n                                            .Append(names.Substring(0, names.Length - 2))\r\n                                            .Append(' ')\r\n                                            .AppendIf(namesCount > 1, ''are'', ''is'')\r\n                                            .Append('' not compatible with: '')\r\n                                            .Append(incompat.Substring(0, incompat.Length - 2))\r\n                                            .Append('.')\r\n                                        .ToString();\r\n                            }).ToArray()", prediction=0, span="134-160"];
m7_43 [cluster="lambda expression", file="SentenceBuilder.cs", label="var bySet = from e in errors\r\n                                group e by e.SetName into g\r\n                                select new { SetName = g.Key, Errors = g.ToList() }", span="130-132"];
m7_45 [cluster="lambda expression", file="SentenceBuilder.cs", label="return string.Join(Environment.NewLine, msgs);", span="161-161"];
m7_51 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="135-160"];
m7_55 [cluster="lambda expression", color=green, community=0, file="SentenceBuilder.cs", label="return\r\n                                    new StringBuilder(''Option'')\r\n                                            .AppendWhen(namesCount > 1, ''s'')\r\n                                            .Append('': '')\r\n                                            .Append(names.Substring(0, names.Length - 2))\r\n                                            .Append(' ')\r\n                                            .AppendIf(namesCount > 1, ''are'', ''is'')\r\n                                            .Append('' not compatible with: '')\r\n                                            .Append(incompat.Substring(0, incompat.Length - 2))\r\n                                            .Append('.')\r\n                                        .ToString();", prediction=1, span="149-159"];
m7_54 [cluster="lambda expression", file="SentenceBuilder.cs", label="var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from x in\r\n                                    (from s in bySet where !s.SetName.EndsWith(set.SetName) from e in s.Errors select e)\r\n                                        .Distinct()\r\n                                    select '''''.JoinTo(x.NameInfo.NameText, ''', '')).ToArray())", span="142-147"];
m7_52 [cluster="lambda expression", file="SentenceBuilder.cs", label="var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select '''''.JoinTo(e.NameInfo.NameText, ''', '')).ToArray())", span="137-139"];
m7_53 [cluster="lambda expression", file="SentenceBuilder.cs", label="var namesCount = set.Errors.Count()", span="140-140"];
m7_56 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="135-160"];
m7_46 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="128-162"];
m7_49 [cluster="Unk.ToArray", file="SentenceBuilder.cs", label="Entry Unk.ToArray", span=""];
m7_62 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m7_58 [cluster="Unk.Count", file="SentenceBuilder.cs", label="Entry Unk.Count", span=""];
m7_67 [cluster="System.Text.StringBuilder.ToString()", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m7_3 [cluster="CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", file="SentenceBuilder.cs", label="Entry CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", span="61-61"];
m7_59 [cluster="Unk.EndsWith", file="SentenceBuilder.cs", label="Entry Unk.EndsWith", span=""];
m7_0 [cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", file="SentenceBuilder.cs", label="Entry CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", span="45-45"];
m7_1 [cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", file="SentenceBuilder.cs", label="Assumes.NotNullOrEmpty(longName, ''longName'')", span="48-48"];
m7_2 [cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", file="SentenceBuilder.cs", label="Exit CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", span="45-45"];
m7_47 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="SentenceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m7_68 [file="SentenceBuilder.cs", label=bySet, span=""];
m10_14 [cluster="Unk.Create", file="Tokenizer.cs", label="Entry Unk.Create", span=""];
m10_4 [cluster="Unk.SingleOrDefault", file="Tokenizer.cs", label="Entry Unk.SingleOrDefault", span=""];
m10_10 [cluster="Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", file="Tokenizer.cs", label="Exit Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", span="52-52"];
m10_6 [cluster="Unk.Map", file="Tokenizer.cs", label="Entry Unk.Map", span=""];
m10_5 [cluster="Unk.ToMaybe", file="Tokenizer.cs", label="Entry Unk.ToMaybe", span=""];
m10_0 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Tokenizer.cs", label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12"];
m10_1 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Tokenizer.cs", label="var info = specifications.SingleOrDefault(a => name.MatchName(a.ShortName, a.LongName, comparer))\r\n                .ToMaybe()\r\n                    .Map(\r\n                        s => TypeDescriptor.Create(s.TargetType, s.Max))", span="17-20"];
m10_2 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Tokenizer.cs", label="return info;", span="21-21"];
m10_3 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Tokenizer.cs", label="Exit CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12"];
m10_11 [cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", file="Tokenizer.cs", label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", span="27-27"];
m10_8 [cluster="Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", file="Tokenizer.cs", label="Entry Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", span="52-52"];
m10_7 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="17-17"];
m10_9 [cluster="Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", color=green, community=0, file="Tokenizer.cs", label="return Configurator.NumberToWordsConverter.ConvertToOrdinal(number);", prediction=2, span="54-54"];
m10_12 [cluster="lambda expression", file="Tokenizer.cs", label="TypeDescriptor.Create(s.TargetType, s.Max)", span="20-20"];
m10_13 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="20-20"];
m10_15 [file="Tokenizer.cs", label=string, span=""];
m10_16 [file="Tokenizer.cs", label="System.StringComparer", span=""];
m12_36 [cluster="CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="ValueMapper.cs", label="Entry CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="126-126"];
m12_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
m12_0 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="Entry CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="14-14"];
m12_1 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="var propAndErrors = MapValuesImpl(specProps, values, converter)", span="19-19"];
m12_3 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="Exit CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="14-14"];
m12_71 [cluster="CSharpx.Maybe<T>.FromJust<T>(System.Exception)", file="ValueMapper.cs", label="Entry CSharpx.Maybe<T>.FromJust<T>(System.Exception)", span="160-160"];
m12_6 [cluster="Unk.>", file="ValueMapper.cs", label="Entry Unk.>", span=""];
m12_4 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="Entry CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="28-28"];
m12_17 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="specProps.Empty()", span="33-33"];
m12_18 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="yield break;", span="35-35"];
m12_22 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="yield return\r\n                    Tuple.Create(pt, pt.Specification.MakeErrorInCaseOfMinConstraint());", span="41-42"];
m12_23 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="yield break;", span="43-43"];
m12_26 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="yield return\r\n                    Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                        pt, Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName)));", span="51-53"];
m12_27 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="yield break;", span="54-54"];
m12_28 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="yield return\r\n                converter(taken, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                    .Return(\r\n                        converted => Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>()),\r\n                        Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                            pt, Maybe.Just<Error>(new BadFormatConversionError(NameInfo.EmptyName))));", span="57-62"];
m12_30 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="yield return value;", span="66-66"];
m12_19 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="var pt = specProps.First()", span="37-37"];
m12_20 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="var taken = values.Take(pt.Specification.CountOfMaxNumberOfValues().Return(n => n, values.Count()))", span="38-38"];
m12_24 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="var next = specProps.Skip(1).FirstOrDefault(s => s.Specification.IsValue()).ToMaybe()", span="46-46"];
m12_25 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="pt.Specification.Max.IsJust()\r\n                && next.IsNothing()\r\n                && values.Skip(taken.Count()).Any()", span="47-49"];
m12_29 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="MapValuesImpl(specProps.Skip(1), values.Skip(taken.Count()), converter)", span="64-64"];
m12_21 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="taken.Empty()", span="39-39"];
m12_31 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="Exit CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="28-28"];
m12_34 [cluster="CommandLine.Core.Specification.CountOfMaxNumberOfValues()", file="ValueMapper.cs", label="Entry CommandLine.Core.Specification.CountOfMaxNumberOfValues()", span="70-70"];
m12_56 [cluster="CommandLine.Core.Specification.IsValue()", file="ValueMapper.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m12_42 [cluster="Unk.ToMaybe", file="ValueMapper.cs", label="Entry Unk.ToMaybe", span=""];
m12_45 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m12_46 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="ValueMapper.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335"];
m12_39 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="ValueMapper.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m12_57 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="60-60"];
m12_8 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="22-22"];
m12_11 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="23-23"];
m12_14 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="24-24"];
m12_9 [cluster="lambda expression", file="ValueMapper.cs", label="pe.Item1", span="22-22"];
m12_10 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="22-22"];
m12_12 [cluster="lambda expression", file="ValueMapper.cs", label="pe.Item2", span="23-23"];
m12_13 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="23-23"];
m12_15 [cluster="lambda expression", file="ValueMapper.cs", label="e.Value", span="24-24"];
m12_16 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="24-24"];
m12_58 [cluster="lambda expression", file="ValueMapper.cs", label="Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>())", span="60-60"];
m12_50 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="38-38"];
m12_53 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="46-46"];
m12_51 [cluster="lambda expression", file="ValueMapper.cs", label=n, span="38-38"];
m12_52 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="38-38"];
m12_54 [cluster="lambda expression", file="ValueMapper.cs", label="s.Specification.IsValue()", span="46-46"];
m12_55 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="46-46"];
m12_59 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="60-60"];
m12_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m12_47 [cluster="CSharpx.Maybe.Just<T>(T)", file="ValueMapper.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="80-80"];
m12_60 [cluster="CommandLine.Core.SpecificationProperty.WithValue(CSharpx.Maybe<object>)", file="ValueMapper.cs", label="Entry CommandLine.Core.SpecificationProperty.WithValue(CSharpx.Maybe<object>)", span="18-18"];
m12_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m12_37 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m12_48 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="ValueMapper.cs", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m12_72 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ValueMapper.cs", label="Entry CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="86-86"];
m12_73 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ValueMapper.cs", label="return specification.Min.IsJust()\r\n                ? Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName))\r\n                : Maybe.Nothing<Error>();", span="88-90"];
m12_74 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ValueMapper.cs", label="Exit CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="86-86"];
m12_5 [cluster="Unk.Select", file="ValueMapper.cs", label="Entry Unk.Select", span=""];
m12_49 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="ValueMapper.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="324-324"];
m12_38 [cluster="CommandLine.Core.Specification.MakeErrorInCaseOfMinConstraint()", file="ValueMapper.cs", label="Entry CommandLine.Core.Specification.MakeErrorInCaseOfMinConstraint()", span="86-86"];
m12_61 [cluster="CSharpx.Maybe.Nothing<T>()", file="ValueMapper.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="75-75"];
m12_44 [cluster="CSharpx.Maybe<T>.IsNothing<T>()", file="ValueMapper.cs", label="Entry CSharpx.Maybe<T>.IsNothing<T>()", span="170-170"];
m12_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m12_62 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="Entry CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="70-70"];
m12_63 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="specification.TargetType", span="72-72"];
m12_67 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="specification.Max.IsJust()", span="77-77"];
m12_68 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="return Maybe.Just(specification.Max.FromJust());", span="79-79"];
m12_64 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="TargetType.Scalar", span="74-74"];
m12_66 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="TargetType.Sequence", span="76-76"];
m12_65 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="return Maybe.Just(1);", span="75-75"];
m12_69 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="return Maybe.Nothing<int>();", span="83-83"];
m12_70 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="Exit CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="70-70"];
m12_41 [cluster="Unk.FirstOrDefault", file="ValueMapper.cs", label="Entry Unk.FirstOrDefault", span=""];
m12_43 [cluster="CSharpx.Maybe<T>.IsJust<T>()", file="ValueMapper.cs", label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="175-175"];
m12_7 [cluster="Unk.Succeed", file="ValueMapper.cs", label="Entry Unk.Succeed", span=""];
m12_75 [file="ValueMapper.cs", label=pt, span=""];
m0_394 -> m0_462  [color=darkseagreen4, key=1, label=T, style=dashed];
m0_394 -> m0_463  [color=darkseagreen4, key=1, label=T, style=dashed];
m0_394 -> m0_464  [color=darkseagreen4, key=1, label=T, style=dashed];
m0_394 -> m0_467  [color=darkseagreen4, key=1, label=T, style=dashed];
m0_465 -> m0_469  [color=darkseagreen4, key=1, label=asEnumerable, style=dashed];
m0_468 -> m0_470  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_468 -> m0_471  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_427 -> m0_452  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m3_36 -> m3_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_36 -> m3_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m3_36 -> m3_59  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_42 -> m3_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_42 -> m3_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_42 -> m3_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_5 -> m3_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_6 -> m3_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_4 -> m3_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m3_4 -> m3_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m3_54 -> m3_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_34 -> m3_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_64 -> m3_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_64 -> m3_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_0 -> m3_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_0 -> m3_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_1 -> m3_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_3 -> m3_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m3_3 -> m3_38  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_3 -> m3_24  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", style=dashed];
m3_21 -> m3_38  [color=darkseagreen4, key=1, label=firstArg, style=dashed];
m3_22 -> m3_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_22 -> m3_24  [color=darkseagreen4, key=1, label=preprocCompare, style=dashed];
m3_81 -> m3_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_81 -> m3_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_82 -> m3_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m3_82 -> m3_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m3_83 -> m3_38  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_84 -> m3_38  [color=darkseagreen4, key=1, label=firstArg, style=dashed];
m3_85 -> m3_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_85 -> m3_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_85 -> m3_59  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_86 -> m3_51  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_86 -> m3_54  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_86 -> m3_59  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_87 -> m3_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m3_88 -> m3_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_89 -> m3_71  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_2 -> m5_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3 -> m5_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_3 -> m5_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_44 -> m7_51  [color=green, key=1, label="lambda expression", style=dashed];
m7_52 -> m7_55  [color=green, key=1, label=names, style=dashed];
m7_53 -> m7_55  [color=green, key=1, label=namesCount, style=dashed];
m10_0 -> m10_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_1 -> m10_7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1 -> m10_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_15 -> m10_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_16 -> m10_8  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m12_4 -> m12_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m12_4 -> m12_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m12_28 -> m12_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_19 -> m12_22  [color=darkseagreen4, key=1, label=pt, style=dashed];
m12_19 -> m12_25  [color=darkseagreen4, key=1, label=pt, style=dashed];
m12_19 -> m12_26  [color=darkseagreen4, key=1, label=pt, style=dashed];
m12_19 -> m12_28  [color=darkseagreen4, key=1, label=pt, style=dashed];
m12_19 -> m12_58  [color=darkseagreen4, key=1, label=pt, style=dashed];
m12_20 -> m12_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_20 -> m12_25  [color=darkseagreen4, key=1, label=taken, style=dashed];
m12_20 -> m12_28  [color=darkseagreen4, key=1, label=taken, style=dashed];
m12_20 -> m12_29  [color=darkseagreen4, key=1, label=taken, style=dashed];
m12_24 -> m12_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_62 -> m12_67  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m12_62 -> m12_68  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m12_75 -> m12_58  [color=darkseagreen4, key=1, label=pt, style=dashed];
}
