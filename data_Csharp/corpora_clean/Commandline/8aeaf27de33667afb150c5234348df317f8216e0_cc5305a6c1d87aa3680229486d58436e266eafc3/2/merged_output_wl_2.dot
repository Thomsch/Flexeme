digraph  {
d1 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", color=green, community=0, label="0: StringValue = stringValue", span="10-10"];
d6 [label="CommandLine.Tests.Fakes.FakeImmutableOptions", span=""];
d0 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", label="Entry CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", span="8-8"];
d2 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", color=green, community=0, label="0: IntSequence = intSequence", span="11-11"];
d3 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", color=green, community=0, label="0: BoolValue = boolValue", span="12-12"];
d4 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", color=green, community=0, label="1: LongValue = longValue", span="13-13"];
d5 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", label="Exit CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", span="8-8"];
m0_2 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14"];
m0_3 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35"];
m0_4 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="22-29"];
m0_62 [cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="InstanceBuilder.cs", label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="34-34"];
m0_43 [cluster="Unk.ThrowingValidate", file="InstanceBuilder.cs", label="Entry Unk.ThrowingValidate", span=""];
m0_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="44-44"];
m0_98 [cluster="string.MatchName(string, string, System.StringComparer)", file="InstanceBuilder.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m0_52 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m0_68 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m0_91 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12"];
m0_105 [cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="InstanceBuilder.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149"];
m0_61 [cluster="T.cstr", file="InstanceBuilder.cs", label="Entry T.cstr", span=""];
m0_6 [cluster="lambda expression", file="InstanceBuilder.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="25-27"];
m0_120 [cluster="CommandLine.Infrastructure.Maybe<T>.MatchNothing()", file="InstanceBuilder.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.MatchNothing()", span="26-26"];
m0_18 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m0_55 [cluster="CommandLine.Core.Specification.IsValue()", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m0_65 [cluster="System.Reflection.MethodBase.GetParameters()", file="InstanceBuilder.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m0_71 [cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="40-40"];
m0_73 [cluster="Unk.Create", file="InstanceBuilder.cs", label="Entry Unk.Create", span=""];
m0_109 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="InstanceBuilder.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="134-134"];
m0_51 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="InstanceBuilder.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m0_79 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21"];
m0_14 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m0_5 [cluster="lambda expression", file="InstanceBuilder.cs", label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="24-24"];
m0_64 [cluster="Unk.GetConstructor", file="InstanceBuilder.cs", label="Entry Unk.GetConstructor", span=""];
m0_57 [cluster="Unk.Single", file="InstanceBuilder.cs", label="Entry Unk.Single", span=""];
m0_42 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="InstanceBuilder.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="13-13"];
m0_50 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceBuilder.cs", label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="100-100"];
m0_83 [cluster="System.Func<TResult>.Invoke()", file="InstanceBuilder.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m0_113 [cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="InstanceBuilder.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="144-144"];
m0_45 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m0_15 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="27-27"];
m0_74 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="42-43"];
m0_80 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="55-55"];
m0_95 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="80-80"];
m0_96 [cluster="lambda expression", color=green, community=0, file="InstanceBuilder.cs", label="0: token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="80-80"];
m0_97 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="80-80"];
m0_99 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="88-88"];
m0_127 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="109-109"];
m0_130 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="110-110"];
m0_102 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="92-92"];
m0_106 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="93-93"];
m0_110 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="95-95"];
m0_114 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="96-96"];
m0_117 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="98-100"];
m0_121 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="101-101"];
m0_75 [cluster="lambda expression", color=green, community=1, file="InstanceBuilder.cs", label="0: SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>())", span="42-43"];
m0_76 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="42-43"];
m0_81 [cluster="lambda expression", color=green, community=0, file="InstanceBuilder.cs", label="0: f()", span="55-55"];
m0_82 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="55-55"];
m0_100 [cluster="lambda expression", color=green, community=0, file="InstanceBuilder.cs", label="0: f()", span="88-88"];
m0_101 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="88-88"];
m0_103 [cluster="lambda expression", color=green, community=0, file="InstanceBuilder.cs", label="0: sp.Value.IsJust()", span="92-92"];
m0_104 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="92-92"];
m0_107 [cluster="lambda expression", color=green, community=0, file="InstanceBuilder.cs", label="0: sp.Value.FromJust()", span="93-93"];
m0_108 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="93-93"];
m0_111 [cluster="lambda expression", color=green, community=0, file="InstanceBuilder.cs", label="0: sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust()", span="95-95"];
m0_112 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="95-95"];
m0_115 [cluster="lambda expression", color=green, community=0, file="InstanceBuilder.cs", label="0: sp.Specification.DefaultValue.FromJust()", span="96-96"];
m0_116 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="96-96"];
m0_118 [cluster="lambda expression", color=green, community=1, file="InstanceBuilder.cs", label="0: sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing()", span="98-100"];
m0_119 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="98-100"];
m0_122 [cluster="lambda expression", color=green, community=0, file="InstanceBuilder.cs", label="0: sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray()", span="101-101"];
m0_123 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="101-101"];
m0_128 [cluster="lambda expression", color=green, community=0, file="InstanceBuilder.cs", label="1: v", span="109-109"];
m0_129 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="109-109"];
m0_131 [cluster="lambda expression", color=green, community=0, file="InstanceBuilder.cs", label="1: d", span="110-110"];
m0_132 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="110-110"];
m0_85 [cluster="lambda expression", file="InstanceBuilder.cs", label="TypeLookup.FindTypeDescriptor(name, optionSpecs, nameComparer)", span="65-65"];
m0_89 [cluster="lambda expression", file="InstanceBuilder.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="70-70"];
m0_93 [cluster="lambda expression", file="InstanceBuilder.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="76-76"];
m0_88 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="70-70"];
m0_92 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="76-76"];
m0_84 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="65-65"];
m0_12 [cluster="lambda expression", file="InstanceBuilder.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="24-24"];
m0_16 [cluster="lambda expression", file="InstanceBuilder.cs", label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="27-27"];
m0_86 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="65-65"];
m0_90 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="70-70"];
m0_94 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="76-76"];
m0_11 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="24-24"];
m0_13 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="24-24"];
m0_7 [cluster="lambda expression", file="InstanceBuilder.cs", label="return explodedTokens;", span="28-28"];
m0_17 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="27-27"];
m0_8 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="22-29"];
m0_46 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m0_47 [cluster="System.StringComparer.Equals(string, string)", file="InstanceBuilder.cs", label="Entry System.StringComparer.Equals(string, string)", span="0-0"];
m0_70 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m0_56 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="InstanceBuilder.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="265-265"];
m0_125 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m0_60 [cluster="Unk.IsTypeMutable", file="InstanceBuilder.cs", label="Entry Unk.IsTypeMutable", span=""];
m0_72 [cluster="Unk.Concat", file="InstanceBuilder.cs", label="Entry Unk.Concat", span=""];
m0_126 [cluster="System.Type.CreateEmptyArray()", file="InstanceBuilder.cs", label="Entry System.Type.CreateEmptyArray()", span="77-77"];
m0_67 [cluster="System.Type.GetDefaultValue()", file="InstanceBuilder.cs", label="Entry System.Type.GetDefaultValue()", span="82-82"];
m0_66 [cluster="string.ToLower()", file="InstanceBuilder.cs", label="Entry string.ToLower()", span="0-0"];
m0_124 [cluster="System.Type.GetGenericArguments()", file="InstanceBuilder.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m0_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m0_77 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="82-82"];
m0_53 [cluster="CommandLine.Core.Specification.IsOption()", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m0_78 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="InstanceBuilder.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m0_44 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="InstanceBuilder.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m0_0 [cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", file="InstanceBuilder.cs", label="Entry Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", span="7-7"];
m0_1 [cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", file="InstanceBuilder.cs", label="Exit Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", span="7-7"];
m0_19 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=1, file="InstanceBuilder.cs", label="0: var specProps = typeof(T).GetSpecifications(pi => SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>()))", span="42-43"];
m0_20 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var specs = from pt in specProps select pt.Specification", span="45-45"];
m0_27 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var optionSpecProps = OptionMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                partitions.Options,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                nameComparer)", span="67-71"];
m0_28 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var valueSpecProps = ValueMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                    partitions.Values,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture))", span="73-76"];
m0_36 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="InstanceBuilder.cs", label="0: var ctor = t.GetConstructor((from p in specProps select p.Specification.ConversionType).ToArray())", span="106-106"];
m0_37 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=1, file="InstanceBuilder.cs", label="0: var values = (from prms in ctor.GetParameters()\r\n                              join sp in specProps on prms.Name.ToLower() equals sp.Property.Name.ToLower()\r\n                              select sp.Value.Return(v => v,\r\n                                    sp.Specification.DefaultValue.Return(d => d,\r\n                                        sp.Specification.ConversionType.GetDefaultValue()))).ToArray()", span="107-111"];
m0_23 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="InstanceBuilder.cs", label="0: return ParserResult.Create(\r\n                    ParserResultType.Options,\r\n                    factory.Return(f => f(), default(T)) ,\r\n                    new[] { new HelpRequestedError() });", span="53-56"];
m0_22 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="arguments.Any() && nameComparer.Equals(''--help'', arguments.First())", span="51-51"];
m0_29 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="InstanceBuilder.cs", label="0: var missingValueErrors = from token in partitions.Errors\r\n                                     select new MissingValueOptionError(\r\n                                         optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer)).FromOptionSpecification())", span="78-80"];
m0_26 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var partitions = TokenPartitioner.Partition(\r\n                tokens,\r\n                name => TypeLookup.FindTypeDescriptor(name, optionSpecs, nameComparer))", span="63-65"];
m0_21 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var optionSpecs = specs\r\n                .ThrowingValidate(SpecificationGuards.Lookup)\r\n                .OfType<OptionSpecification>()", span="47-49"];
m0_30 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var specPropsWithValue = optionSpecProps.Value.Concat(valueSpecProps.Value)", span="82-82"];
m0_40 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="return ParserResult.Create(\r\n                ParserResultType.Options,\r\n                instance,\r\n                tokenizerResult.Errors\r\n                    .Concat(missingValueErrors)\r\n                    .Concat(optionSpecProps.Errors)\r\n                    .Concat(valueSpecProps.Errors)\r\n                    .Concat(validationErrors));", span="118-125"];
m0_33 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="InstanceBuilder.cs", label="0: instance = factory.Return(f => f(), new T())", span="88-88"];
m0_32 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="InstanceBuilder.cs", label="0: ReflectionHelper.IsTypeMutable(typeof(T))", span="86-86"];
m0_34 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=1, file="InstanceBuilder.cs", label="0: instance = instance\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsJust(),\r\n                        sp => sp.Value.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                        sp => sp.Specification.DefaultValue.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing(),\r\n                        sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray())", span="90-101"];
m0_35 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="InstanceBuilder.cs", label="0: var t = typeof(T)", span="105-105"];
m0_38 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="InstanceBuilder.cs", label="0: instance = (T)ctor.Invoke(values)", span="112-112"];
m0_31 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="InstanceBuilder.cs", label="0: T instance", span="84-84"];
m0_39 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var validationErrors = specPropsWithValue.Validate(\r\n                SpecificationPropertyRules.Lookup(tokens))", span="115-116"];
m0_24 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var tokenizerResult = tokenizer(arguments, optionSpecs)", span="59-59"];
m0_25 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var tokens = tokenizerResult.Value", span="61-61"];
m0_41 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35"];
m0_69 [cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="InstanceBuilder.cs", label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0"];
m0_87 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12"];
m0_63 [cluster="Unk.ToArray", file="InstanceBuilder.cs", label="Entry Unk.ToArray", span=""];
m0_49 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="InstanceBuilder.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="353-353"];
m0_58 [cluster="Unk.FromOptionSpecification", file="InstanceBuilder.cs", label="Entry Unk.FromOptionSpecification", span=""];
m0_48 [cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="InstanceBuilder.cs", label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="100-100"];
m0_59 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m0_54 [cluster="Unk.MapValues", file="InstanceBuilder.cs", label="Entry Unk.MapValues", span=""];
m0_135 [file="InstanceBuilder.cs", label="System.StringComparer", span=""];
m0_138 [file="InstanceBuilder.cs", label=token, span=""];
m0_136 [file="InstanceBuilder.cs", label=optionSpecs, span=""];
m0_137 [file="InstanceBuilder.cs", label="System.Globalization.CultureInfo", span=""];
m0_133 [file="InstanceBuilder.cs", label="System.StringComparer", span=""];
m0_134 [file="InstanceBuilder.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m1_51 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="ReflectionExtensions.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m1_53 [cluster="System.Func<TResult>.Invoke()", file="ReflectionExtensions.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m1_50 [cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="ReflectionExtensions.cs", label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0"];
m1_45 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", span="82-82"];
m1_46 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", color=green, community=1, file="ReflectionExtensions.cs", label="0: var e = Expression.Lambda<Func<object>>(\r\n                Expression.Convert(\r\n                    Expression.Default(type),\r\n                    typeof(object)))", span="84-87"];
m1_47 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="0: return e.Compile()();", span="88-88"];
m1_48 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", span="82-82"];
m1_49 [cluster="System.Linq.Expressions.Expression.Default(System.Type)", file="ReflectionExtensions.cs", label="Entry System.Linq.Expressions.Expression.Default(System.Type)", span="0-0"];
m1_52 [cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="ReflectionExtensions.cs", label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0"];
m2_9 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m2_20 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="32-32"];
m2_21 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="ReflectionHelper.cs", label="return type.FullName.StartsWith(\r\n                ''Microsoft.FSharp.Core.FSharpOption`1'', StringComparison.Ordinal);", span="34-35"];
m2_22 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="32-32"];
m2_1 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="12-12"];
m2_0 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="9-9"];
m2_2 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="var attributes = assembly.GetCustomAttributes(typeof(TAttribute), false)", span="13-13"];
m2_3 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="return attributes.Length > 0\r\n                ? Maybe.Just((TAttribute)attributes[0])\r\n                : Maybe.Nothing<TAttribute>();", span="15-17"];
m2_4 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="9-9"];
m2_8 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
m2_7 [cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0"];
m2_6 [cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0"];
m2_5 [cluster="System.Reflection.Assembly.GetEntryAssembly()", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetEntryAssembly()", span="0-0"];
m2_14 [cluster="System.Reflection.Assembly.GetName()", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetName()", span="0-0"];
m2_16 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs", label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="28-28"];
m2_15 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", span="26-26"];
m2_17 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs", label="return assembly.GetName().Version.ToStringInvariant();", span="29-29"];
m2_18 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", span="26-26"];
m2_19 [cluster="T.ToStringInvariant<T>()", file="ReflectionHelper.cs", label="Entry T.ToStringInvariant<T>()", span="14-14"];
m2_23 [cluster="string.StartsWith(string, System.StringComparison)", file="ReflectionHelper.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m2_11 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs", label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="22-22"];
m2_10 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="20-20"];
m2_12 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs", label="return assembly.GetName().Name;", span="23-23"];
m2_13 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="20-20"];
d1 -> d2  [color=green, key=0, style=solid];
d6 -> d1  [color=green, key=1, label="CommandLine.Tests.Fakes.FakeImmutableOptions", style=dashed];
d6 -> d2  [color=green, key=1, label="CommandLine.Tests.Fakes.FakeImmutableOptions", style=dashed];
d6 -> d3  [color=green, key=1, label="CommandLine.Tests.Fakes.FakeImmutableOptions", style=dashed];
d6 -> d4  [color=green, key=1, label="CommandLine.Tests.Fakes.FakeImmutableOptions", style=dashed];
d0 -> d1  [color=green, key=0, style=solid];
d0 -> d2  [color=green, key=1, label="System.Collections.Generic.IEnumerable<int>", style=dashed];
d0 -> d3  [color=green, key=1, label=bool, style=dashed];
d0 -> d4  [color=green, key=1, label=long, style=dashed];
d2 -> d3  [color=green, key=0, style=solid];
d3 -> d4  [color=green, key=0, style=solid];
d4 -> d5  [color=green, key=0, style=solid];
d5 -> d0  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [key=2, style=dotted];
m0_3 -> m0_6  [key=2, style=dotted];
m0_3 -> m0_19  [color=green, key=0, style=solid];
m0_3 -> m0_23  [color=green, key=1, label="CommandLine.Infrastructure.Maybe<System.Func<T>>", style=dashed];
m0_3 -> m0_29  [color=green, key=1, label="System.StringComparer", style=dashed];
m0_3 -> m0_96  [color=green, key=1, label="System.StringComparer", style=dashed];
m0_3 -> m0_33  [color=green, key=1, label="CommandLine.Infrastructure.Maybe<System.Func<T>>", style=dashed];
m0_3 -> m0_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_3 -> m0_24  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>", style=dashed];
m0_3 -> m0_26  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_3 -> m0_85  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_3 -> m0_27  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_3 -> m0_89  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_3 -> m0_28  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_3 -> m0_93  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_4 -> m0_2  [color=blue, key=0, style=bold];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_4 -> m0_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_4 -> m0_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_10  [key=2, style=dotted];
m0_6 -> m0_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_9  [key=2, style=dotted];
m0_5 -> m0_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_15 -> m0_16  [key=0, style=solid];
m0_74 -> m0_75  [color=green, key=0, style=solid];
m0_80 -> m0_81  [color=green, key=0, style=solid];
m0_95 -> m0_96  [color=green, key=0, style=solid];
m0_96 -> m0_97  [color=green, key=0, style=solid];
m0_96 -> m0_98  [color=green, key=2, style=dotted];
m0_97 -> m0_95  [color=blue, key=0, style=bold];
m0_99 -> m0_100  [color=green, key=0, style=solid];
m0_127 -> m0_128  [color=green, key=0, style=solid];
m0_130 -> m0_131  [color=green, key=0, style=solid];
m0_102 -> m0_103  [color=green, key=0, style=solid];
m0_106 -> m0_107  [color=green, key=0, style=solid];
m0_110 -> m0_111  [color=green, key=0, style=solid];
m0_114 -> m0_115  [color=green, key=0, style=solid];
m0_117 -> m0_118  [color=green, key=0, style=solid];
m0_121 -> m0_122  [color=green, key=0, style=solid];
m0_75 -> m0_76  [color=green, key=0, style=solid];
m0_75 -> m0_77  [color=green, key=2, style=dotted];
m0_75 -> m0_78  [color=green, key=2, style=dotted];
m0_75 -> m0_79  [color=green, key=2, style=dotted];
m0_76 -> m0_74  [color=blue, key=0, style=bold];
m0_81 -> m0_82  [color=green, key=0, style=solid];
m0_81 -> m0_83  [color=green, key=2, style=dotted];
m0_82 -> m0_80  [color=blue, key=0, style=bold];
m0_100 -> m0_101  [color=green, key=0, style=solid];
m0_100 -> m0_83  [color=green, key=2, style=dotted];
m0_101 -> m0_99  [color=blue, key=0, style=bold];
m0_103 -> m0_104  [color=green, key=0, style=solid];
m0_103 -> m0_105  [color=green, key=2, style=dotted];
m0_104 -> m0_102  [color=blue, key=0, style=bold];
m0_107 -> m0_108  [color=green, key=0, style=solid];
m0_107 -> m0_109  [color=green, key=2, style=dotted];
m0_108 -> m0_106  [color=blue, key=0, style=bold];
m0_111 -> m0_112  [color=green, key=0, style=solid];
m0_111 -> m0_113  [color=green, key=2, style=dotted];
m0_111 -> m0_105  [color=green, key=2, style=dotted];
m0_112 -> m0_110  [color=blue, key=0, style=bold];
m0_115 -> m0_116  [color=green, key=0, style=solid];
m0_115 -> m0_109  [color=green, key=2, style=dotted];
m0_116 -> m0_114  [color=blue, key=0, style=bold];
m0_118 -> m0_119  [color=green, key=0, style=solid];
m0_118 -> m0_113  [color=green, key=2, style=dotted];
m0_118 -> m0_120  [color=green, key=2, style=dotted];
m0_119 -> m0_117  [color=blue, key=0, style=bold];
m0_122 -> m0_123  [color=green, key=0, style=solid];
m0_122 -> m0_124  [color=green, key=2, style=dotted];
m0_122 -> m0_125  [color=green, key=2, style=dotted];
m0_122 -> m0_126  [color=green, key=2, style=dotted];
m0_123 -> m0_121  [color=blue, key=0, style=bold];
m0_128 -> m0_129  [color=green, key=0, style=solid];
m0_129 -> m0_127  [color=blue, key=0, style=bold];
m0_131 -> m0_132  [color=green, key=0, style=solid];
m0_132 -> m0_130  [color=blue, key=0, style=bold];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_87  [key=2, style=dotted];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_91  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_91  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_92 -> m0_93  [key=0, style=solid];
m0_84 -> m0_85  [key=0, style=solid];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_14  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [key=2, style=dotted];
m0_86 -> m0_84  [color=blue, key=0, style=bold];
m0_90 -> m0_88  [color=blue, key=0, style=bold];
m0_94 -> m0_92  [color=blue, key=0, style=bold];
m0_11 -> m0_12  [key=0, style=solid];
m0_13 -> m0_11  [color=blue, key=0, style=bold];
m0_7 -> m0_8  [key=0, style=solid];
m0_17 -> m0_15  [color=blue, key=0, style=bold];
m0_8 -> m0_4  [color=blue, key=0, style=bold];
m0_0 -> m0_3  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<T> Build", style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_0 -> m0_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_0 -> m0_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_0 -> m0_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_1 -> m0_3  [key=2, style=dotted];
m0_1 -> m0_1  [color=darkorchid, key=3, label="method methodReturn CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>> ", style=bold];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_19 -> m0_20  [color=green, key=0, style=solid];
m0_19 -> m0_42  [color=green, key=2, style=dotted];
m0_19 -> m0_74  [color=green, key=1, label="lambda expression", style=dashed];
m0_19 -> m0_27  [color=green, key=1, label=specProps, style=dashed];
m0_19 -> m0_28  [color=green, key=1, label=specProps, style=dashed];
m0_19 -> m0_36  [color=green, key=1, label=specProps, style=dashed];
m0_19 -> m0_37  [color=green, key=1, label=specProps, style=dashed];
m0_20 -> m0_20  [color=darkseagreen4, key=1, label=pt, style=dashed];
m0_20 -> m0_21  [key=0, style=solid];
m0_27 -> m0_27  [color=darkseagreen4, key=1, label=pt, style=dashed];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_53  [key=2, style=dotted];
m0_27 -> m0_54  [key=2, style=dotted];
m0_27 -> m0_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_27 -> m0_30  [color=darkseagreen4, key=1, label=optionSpecProps, style=dashed];
m0_27 -> m0_40  [color=darkseagreen4, key=1, label=optionSpecProps, style=dashed];
m0_28 -> m0_29  [color=green, key=0, style=solid];
m0_28 -> m0_28  [color=darkseagreen4, key=1, label=pt, style=dashed];
m0_28 -> m0_55  [key=2, style=dotted];
m0_28 -> m0_54  [key=2, style=dotted];
m0_28 -> m0_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_28 -> m0_30  [color=darkseagreen4, key=1, label=valueSpecProps, style=dashed];
m0_28 -> m0_40  [color=darkseagreen4, key=1, label=valueSpecProps, style=dashed];
m0_36 -> m0_36  [color=green, key=1, label=p, style=dashed];
m0_36 -> m0_37  [color=green, key=0, style=solid];
m0_36 -> m0_63  [color=green, key=2, style=dotted];
m0_36 -> m0_64  [color=green, key=2, style=dotted];
m0_36 -> m0_38  [color=green, key=1, label=ctor, style=dashed];
m0_37 -> m0_37  [color=green, key=1, label=prms, style=dashed];
m0_37 -> m0_38  [color=green, key=0, style=solid];
m0_37 -> m0_65  [color=green, key=2, style=dotted];
m0_37 -> m0_66  [color=green, key=2, style=dotted];
m0_37 -> m0_67  [color=green, key=2, style=dotted];
m0_37 -> m0_48  [color=green, key=2, style=dotted];
m0_37 -> m0_68  [color=green, key=2, style=dotted];
m0_37 -> m0_127  [color=green, key=1, label="lambda expression", style=dashed];
m0_37 -> m0_130  [color=green, key=1, label="lambda expression", style=dashed];
m0_23 -> m0_41  [color=green, key=0, style=solid];
m0_23 -> m0_48  [color=green, key=2, style=dotted];
m0_23 -> m0_49  [color=green, key=2, style=dotted];
m0_23 -> m0_50  [color=green, key=2, style=dotted];
m0_23 -> m0_80  [color=green, key=1, label="lambda expression", style=dashed];
m0_22 -> m0_23  [color=green, key=0, style=solid];
m0_22 -> m0_24  [key=0, style=solid];
m0_22 -> m0_45  [key=2, style=dotted];
m0_22 -> m0_46  [key=2, style=dotted];
m0_22 -> m0_47  [key=2, style=dotted];
m0_29 -> m0_29  [color=green, key=1, label=token, style=dashed];
m0_29 -> m0_30  [color=green, key=0, style=solid];
m0_29 -> m0_56  [color=green, key=2, style=dotted];
m0_29 -> m0_57  [color=green, key=2, style=dotted];
m0_29 -> m0_58  [color=green, key=2, style=dotted];
m0_29 -> m0_95  [color=green, key=1, label="lambda expression", style=dashed];
m0_29 -> m0_96  [color=green, key=1, label=token, style=dashed];
m0_29 -> m0_40  [color=green, key=1, label=missingValueErrors, style=dashed];
m0_26 -> m0_29  [color=green, key=1, label=partitions, style=dashed];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_28  [color=darkseagreen4, key=1, label=partitions, style=dashed];
m0_26 -> m0_52  [key=2, style=dotted];
m0_26 -> m0_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_21 -> m0_29  [color=green, key=1, label=optionSpecs, style=dashed];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_26  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m0_21 -> m0_43  [key=2, style=dotted];
m0_21 -> m0_44  [key=2, style=dotted];
m0_21 -> m0_24  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m0_21 -> m0_85  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m0_30 -> m0_31  [color=green, key=0, style=solid];
m0_30 -> m0_34  [color=green, key=1, label=specPropsWithValue, style=dashed];
m0_30 -> m0_59  [key=2, style=dotted];
m0_30 -> m0_39  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_72  [key=2, style=dotted];
m0_40 -> m0_73  [key=2, style=dotted];
m0_33 -> m0_34  [color=green, key=0, style=solid];
m0_33 -> m0_61  [color=green, key=2, style=dotted];
m0_33 -> m0_48  [color=green, key=2, style=dotted];
m0_33 -> m0_99  [color=green, key=1, label="lambda expression", style=dashed];
m0_32 -> m0_33  [color=green, key=0, style=solid];
m0_32 -> m0_35  [color=green, key=0, style=solid];
m0_32 -> m0_60  [color=green, key=2, style=dotted];
m0_34 -> m0_34  [color=green, key=1, label=instance, style=dashed];
m0_34 -> m0_39  [color=green, key=0, style=solid];
m0_34 -> m0_62  [color=green, key=2, style=dotted];
m0_34 -> m0_102  [color=green, key=1, label="lambda expression", style=dashed];
m0_34 -> m0_106  [color=green, key=1, label="lambda expression", style=dashed];
m0_34 -> m0_110  [color=green, key=1, label="lambda expression", style=dashed];
m0_34 -> m0_114  [color=green, key=1, label="lambda expression", style=dashed];
m0_34 -> m0_117  [color=green, key=1, label="lambda expression", style=dashed];
m0_34 -> m0_121  [color=green, key=1, label="lambda expression", style=dashed];
m0_34 -> m0_40  [color=green, key=1, label=instance, style=dashed];
m0_35 -> m0_36  [color=green, key=0, style=solid];
m0_38 -> m0_39  [color=green, key=0, style=solid];
m0_38 -> m0_69  [color=green, key=2, style=dotted];
m0_38 -> m0_40  [color=green, key=1, label=instance, style=dashed];
m0_31 -> m0_32  [color=green, key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_70  [key=2, style=dotted];
m0_39 -> m0_71  [key=2, style=dotted];
m0_24 -> m0_40  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_51  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_39  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m0_41 -> m0_3  [color=blue, key=0, style=bold];
m0_135 -> m0_96  [color=green, key=1, label="System.StringComparer", style=dashed];
m0_135 -> m0_85  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_138 -> m0_96  [color=green, key=1, label=token, style=dashed];
m0_136 -> m0_85  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m0_137 -> m0_89  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_137 -> m0_93  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_133 -> m0_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_133 -> m0_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_133 -> m0_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_133 -> m0_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_134 -> m0_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_134 -> m0_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_45 -> m1_46  [color=green, key=0, style=solid];
m1_46 -> m1_47  [color=green, key=0, style=solid];
m1_46 -> m1_49  [color=green, key=2, style=dotted];
m1_46 -> m1_50  [color=green, key=2, style=dotted];
m1_46 -> m1_51  [color=green, key=2, style=dotted];
m1_47 -> m1_48  [color=green, key=0, style=solid];
m1_47 -> m1_52  [color=green, key=2, style=dotted];
m1_47 -> m1_53  [color=green, key=2, style=dotted];
m1_48 -> m1_45  [color=blue, key=0, style=bold];
m2_20 -> m2_21  [key=0, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_23  [key=2, style=dotted];
m2_22 -> m2_20  [color=blue, key=0, style=bold];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_5  [key=2, style=dotted];
m2_1 -> m2_6  [key=2, style=dotted];
m2_0 -> m2_1  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_7  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_8  [key=2, style=dotted];
m2_3 -> m2_9  [key=2, style=dotted];
m2_4 -> m2_0  [color=blue, key=0, style=bold];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_5  [key=2, style=dotted];
m2_16 -> m2_6  [key=2, style=dotted];
m2_15 -> m2_16  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_14  [key=2, style=dotted];
m2_17 -> m2_19  [key=2, style=dotted];
m2_18 -> m2_15  [color=blue, key=0, style=bold];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_5  [key=2, style=dotted];
m2_11 -> m2_6  [key=2, style=dotted];
m2_10 -> m2_11  [key=0, style=solid];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_14  [key=2, style=dotted];
m2_13 -> m2_10  [color=blue, key=0, style=bold];
}
