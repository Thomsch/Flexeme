digraph  {
m0_66 [cluster="Unk.SingleOrDefault", file="InstanceChooser.cs", label="Entry Unk.SingleOrDefault", span=""];
m0_28 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="95-95"];
m0_77 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="InstanceChooser.cs", label="return new NotParsed<object>(new NullInstance(), types, errors);", span="97-97"];
m0_78 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="95-95"];
m0_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="57-57"];
m0_45 [cluster="Unk.>", file="InstanceChooser.cs", label="Entry Unk.>", span=""];
m0_49 [cluster="Unk.MakeNotParsed", file="InstanceChooser.cs", label="Entry Unk.MakeNotParsed", span=""];
m0_44 [cluster="Unk.Any", file="InstanceChooser.cs", label="Entry Unk.Any", span=""];
m0_18 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceChooser.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m0_31 [cluster="System.Func<T, TResult>.Invoke(T)", file="InstanceChooser.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m0_79 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceChooser.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="136-136"];
m0_48 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="InstanceChooser.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357"];
m0_68 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="InstanceChooser.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
m0_3 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="32-32"];
m0_24 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=1, file="InstanceChooser.cs", label="1: return preprocCompare(''help'')\r\n                ? MakeNotParsed(types,\r\n                    MakeHelpVerbRequestedError(verbs,\r\n                        arguments.Skip(1).SingleOrDefault() ?? string.Empty, nameComparer))\r\n                : preprocCompare(''version'')\r\n                    ? MakeNotParsed(types, new VersionRequestedError())\r\n                    : MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture);", span="52-58"];
m0_22 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Func<string, bool> preprocCompare = command =>\r\n                    nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="46-48"];
m0_23 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="var verbs = Verb.SelectFromTypes(types)", span="50-50"];
m0_19 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="arguments.Empty()", span="39-39"];
m0_20 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="return MakeNotParsed(types, new NoVerbSelectedError());", span="41-41"];
m0_21 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="var firstArg = arguments.First()", span="44-44"];
m0_25 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="32-32"];
m0_14 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceChooser.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m0_35 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="InstanceChooser.cs", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="432-432"];
m0_40 [cluster="System.StringComparer.Equals(string, string)", file="InstanceChooser.cs", label="Entry System.StringComparer.Equals(string, string)", span="0-0"];
m0_67 [cluster="Unk.ToMaybe", file="InstanceChooser.cs", label="Entry Unk.ToMaybe", span=""];
m0_56 [cluster="Unk.Single", file="InstanceChooser.cs", label="Entry Unk.Single", span=""];
m0_41 [cluster="string.Concat(string, string)", file="InstanceChooser.cs", label="Entry string.Concat(string, string)", span="0-0"];
m0_15 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="23-23"];
m0_70 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="87-87"];
m0_73 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="90-90"];
m0_71 [cluster="lambda expression", color=green, community=0, file="InstanceChooser.cs", label="1: nameComparer.Equals(v.Item1.Name, verb)", span="87-87"];
m0_72 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="87-87"];
m0_74 [cluster="lambda expression", color=green, community=0, file="InstanceChooser.cs", label="0: new HelpVerbRequestedError(v.Item1.Name, v.Item2, true)", span="90-90"];
m0_75 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="90-90"];
m0_38 [cluster="lambda expression", file="InstanceChooser.cs", label="nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="47-48"];
m0_51 [cluster="lambda expression", file="InstanceChooser.cs", label="nameComparer.Equals(a.Item1.Name, arguments.First())", span="68-68"];
m0_54 [cluster="lambda expression", file="InstanceChooser.cs", label="verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First()))\r\n                                .Item2.AutoDefault()", span="72-73"];
m0_59 [cluster="lambda expression", file="InstanceChooser.cs", label="nameComparer.Equals(v.Item1.Name, arguments.First())", span="72-72"];
m0_5 [cluster="lambda expression", file="InstanceChooser.cs", label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="22-22"];
m0_12 [cluster="lambda expression", file="InstanceChooser.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="22-22"];
m0_6 [cluster="lambda expression", file="InstanceChooser.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="23-23"];
m0_16 [cluster="lambda expression", file="InstanceChooser.cs", label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="23-23"];
m0_4 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="20-25"];
m0_37 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="46-48"];
m0_39 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="46-48"];
m0_50 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="68-68"];
m0_53 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="71-73"];
m0_61 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="78-78"];
m0_52 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="68-68"];
m0_55 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="71-73"];
m0_58 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="72-72"];
m0_60 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="72-72"];
m0_11 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="22-22"];
m0_13 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="22-22"];
m0_7 [cluster="lambda expression", file="InstanceChooser.cs", label="return explodedTokens;", span="24-24"];
m0_17 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="23-23"];
m0_8 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="20-25"];
m0_62 [cluster="lambda expression", file="InstanceChooser.cs", label="v.Item2", span="78-78"];
m0_63 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="78-78"];
m0_29 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m0_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m0_34 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="81-81"];
m0_64 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", color=green, community=1, file="InstanceChooser.cs", label="1: return verb.Length > 0\r\n                ? verbs.SingleOrDefault(v => nameComparer.Equals(v.Item1.Name, verb))\r\n                        .ToMaybe()\r\n                        .Return(\r\n                            v => new HelpVerbRequestedError(v.Item1.Name, v.Item2, true),\r\n                            new HelpVerbRequestedError(null, null, false))\r\n                : new HelpVerbRequestedError(null, null, false);", span="86-92"];
m0_65 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="81-81"];
m0_47 [cluster="Unk.Select", file="InstanceChooser.cs", label="Entry Unk.Select", span=""];
m0_27 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="InstanceChooser.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m0_0 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="13-13"];
m0_1 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="return Choose(\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                types,\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="19-29"];
m0_2 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="13-13"];
m0_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceChooser.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="12-12"];
m0_69 [cluster="Unk.Return", file="InstanceChooser.cs", label="Entry Unk.Return", span=""];
m0_36 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="61-61"];
m0_42 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="return verbs.Any(a => nameComparer.Equals(a.Item1.Name, arguments.First()))\r\n                ? InstanceBuilder.Build(\r\n                    Maybe.Just<Func<object>>(\r\n                        () =>\r\n                            verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First()))\r\n                                .Item2.AutoDefault()),\r\n                    tokenizer,\r\n                    arguments.Skip(1),\r\n                    nameComparer,\r\n                    parsingCulture)\r\n                : MakeNotParsed(verbs.Select(v => v.Item2), new BadVerbSelectedError(arguments.First()));", span="68-78"];
m0_43 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="61-61"];
m0_46 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35"];
m0_57 [cluster="Unk.AutoDefault", file="InstanceChooser.cs", label="Entry Unk.AutoDefault", span=""];
m0_80 [cluster="CommandLine.NullInstance.NullInstance()", file="InstanceChooser.cs", label="Entry CommandLine.NullInstance.NullInstance()", span="9-9"];
m0_30 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="InstanceChooser.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m0_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", file="InstanceChooser.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", span="45-45"];
m0_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m0_76 [cluster="HelpVerbRequestedError.cstr", file="InstanceChooser.cs", label="Entry HelpVerbRequestedError.cstr", span=""];
m0_88 [file="InstanceChooser.cs", label=string, span=""];
m0_89 [file="InstanceChooser.cs", label="System.StringComparer", span=""];
m0_83 [file="InstanceChooser.cs", label="System.StringComparer", span=""];
m0_84 [file="InstanceChooser.cs", label=firstArg, span=""];
m0_85 [file="InstanceChooser.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m0_86 [file="InstanceChooser.cs", label="System.StringComparer", span=""];
m0_87 [file="InstanceChooser.cs", label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span=""];
m0_81 [file="InstanceChooser.cs", label="System.StringComparer", span=""];
m0_82 [file="InstanceChooser.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m1_37 [cluster="string.Equals(string, System.StringComparison)", file="StringExtensions.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m1_34 [cluster="CommandLine.Infrastructure.StringExtensions.IsBooleanString(string)", file="StringExtensions.cs", label="Entry CommandLine.Infrastructure.StringExtensions.IsBooleanString(string)", span="55-55"];
m1_35 [cluster="CommandLine.Infrastructure.StringExtensions.IsBooleanString(string)", color=green, community=0, file="StringExtensions.cs", label="1: return value.Equals(''true'', StringComparison.OrdinalIgnoreCase)\r\n                || value.Equals(''false'', StringComparison.OrdinalIgnoreCase);", span="57-58"];
m1_36 [cluster="CommandLine.Infrastructure.StringExtensions.IsBooleanString(string)", file="StringExtensions.cs", label="Exit CommandLine.Infrastructure.StringExtensions.IsBooleanString(string)", span="55-55"];
m1_38 [cluster="CommandLine.Infrastructure.StringExtensions.ToBoolean(string)", file="StringExtensions.cs", label="Entry CommandLine.Infrastructure.StringExtensions.ToBoolean(string)", span="61-61"];
m1_39 [cluster="CommandLine.Infrastructure.StringExtensions.ToBoolean(string)", color=green, community=0, file="StringExtensions.cs", label="0: return value.Equals(''true'', StringComparison.OrdinalIgnoreCase);", span="63-63"];
m1_40 [cluster="CommandLine.Infrastructure.StringExtensions.ToBoolean(string)", file="StringExtensions.cs", label="Exit CommandLine.Infrastructure.StringExtensions.ToBoolean(string)", span="61-61"];
m0_28 -> m0_34  [color=darkorchid, key=3, label="Parameter variable CommandLine.Error[] errors", style=bold];
m0_28 -> m0_77  [key=0, style=solid];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_79  [key=2, style=dotted];
m0_77 -> m0_80  [key=2, style=dotted];
m0_78 -> m0_28  [color=blue, key=0, style=bold];
m0_3 -> m0_24  [color=green, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>", style=dashed];
m0_3 -> m0_19  [key=0, style=solid];
m0_3 -> m0_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m0_3 -> m0_21  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_3 -> m0_22  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_3 -> m0_38  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_3 -> m0_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m0_3 -> m0_28  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<object> Choose", style=bold];
m0_24 -> m0_25  [color=green, key=0, style=solid];
m0_24 -> m0_31  [color=green, key=2, style=dotted];
m0_24 -> m0_32  [color=green, key=2, style=dotted];
m0_24 -> m0_33  [color=green, key=2, style=dotted];
m0_24 -> m0_34  [color=green, key=2, style=dotted];
m0_24 -> m0_28  [color=green, key=2, style=dotted];
m0_24 -> m0_35  [color=green, key=2, style=dotted];
m0_24 -> m0_36  [color=green, key=2, style=dotted];
m0_22 -> m0_24  [color=green, key=1, label=preprocCompare, style=dashed];
m0_22 -> m0_22  [color=darkorchid, key=3, label="Local variable System.Func<string, bool> preprocCompare", style=bold];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_23 -> m0_24  [color=green, key=0, style=solid];
m0_23 -> m0_30  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=0, style=solid];
m0_19 -> m0_26  [key=2, style=dotted];
m0_20 -> m0_25  [key=0, style=solid];
m0_20 -> m0_28  [key=2, style=dotted];
m0_20 -> m0_27  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_29  [key=2, style=dotted];
m0_21 -> m0_38  [color=darkseagreen4, key=1, label=firstArg, style=dashed];
m0_25 -> m0_3  [color=blue, key=0, style=bold];
m0_15 -> m0_16  [key=0, style=solid];
m0_70 -> m0_71  [color=green, key=0, style=solid];
m0_73 -> m0_74  [color=green, key=0, style=solid];
m0_71 -> m0_72  [color=green, key=0, style=solid];
m0_71 -> m0_40  [color=green, key=2, style=dotted];
m0_72 -> m0_70  [color=blue, key=0, style=bold];
m0_74 -> m0_75  [color=green, key=0, style=solid];
m0_74 -> m0_76  [color=green, key=2, style=dotted];
m0_75 -> m0_73  [color=blue, key=0, style=bold];
m0_38 -> m0_40  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_41  [key=2, style=dotted];
m0_51 -> m0_40  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_29  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_56  [key=2, style=dotted];
m0_54 -> m0_57  [key=2, style=dotted];
m0_54 -> m0_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_59 -> m0_40  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_29  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_9  [key=2, style=dotted];
m0_5 -> m0_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_14  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_10  [key=2, style=dotted];
m0_6 -> m0_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_4 -> m0_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_4 -> m0_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_37 -> m0_38  [key=0, style=solid];
m0_39 -> m0_37  [color=blue, key=0, style=bold];
m0_50 -> m0_51  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_61 -> m0_62  [key=0, style=solid];
m0_52 -> m0_50  [color=blue, key=0, style=bold];
m0_55 -> m0_53  [color=blue, key=0, style=bold];
m0_58 -> m0_59  [key=0, style=solid];
m0_60 -> m0_58  [color=blue, key=0, style=bold];
m0_11 -> m0_12  [key=0, style=solid];
m0_13 -> m0_11  [color=blue, key=0, style=bold];
m0_7 -> m0_8  [key=0, style=solid];
m0_17 -> m0_15  [color=blue, key=0, style=bold];
m0_8 -> m0_4  [color=blue, key=0, style=bold];
m0_62 -> m0_63  [key=0, style=solid];
m0_63 -> m0_61  [color=blue, key=0, style=bold];
m0_34 -> m0_64  [color=green, key=0, style=solid];
m0_34 -> m0_71  [color=green, key=1, label=string, style=dashed];
m0_64 -> m0_65  [color=green, key=0, style=solid];
m0_64 -> m0_66  [color=green, key=2, style=dotted];
m0_64 -> m0_67  [color=green, key=2, style=dotted];
m0_64 -> m0_68  [color=green, key=2, style=dotted];
m0_64 -> m0_69  [color=green, key=2, style=dotted];
m0_64 -> m0_70  [color=green, key=1, label="lambda expression", style=dashed];
m0_64 -> m0_73  [color=green, key=1, label="lambda expression", style=dashed];
m0_65 -> m0_34  [color=blue, key=0, style=bold];
m0_0 -> m0_3  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<object> Choose", style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_0 -> m0_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_0 -> m0_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_0 -> m0_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_1 -> m0_3  [key=2, style=dotted];
m0_1 -> m0_1  [color=darkorchid, key=3, label="method methodReturn CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>> ", style=bold];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_36 -> m0_42  [key=0, style=solid];
m0_36 -> m0_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_36 -> m0_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m0_36 -> m0_59  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_42 -> m0_32  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_44  [key=2, style=dotted];
m0_42 -> m0_45  [key=2, style=dotted];
m0_42 -> m0_46  [key=2, style=dotted];
m0_42 -> m0_47  [key=2, style=dotted];
m0_42 -> m0_48  [key=2, style=dotted];
m0_42 -> m0_29  [key=2, style=dotted];
m0_42 -> m0_49  [key=2, style=dotted];
m0_42 -> m0_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_42 -> m0_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_42 -> m0_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_43 -> m0_36  [color=blue, key=0, style=bold];
m0_88 -> m0_71  [color=green, key=1, label=string, style=dashed];
m0_89 -> m0_71  [color=green, key=1, label="System.StringComparer", style=dashed];
m0_83 -> m0_38  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_84 -> m0_38  [color=darkseagreen4, key=1, label=firstArg, style=dashed];
m0_85 -> m0_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_85 -> m0_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_85 -> m0_59  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_86 -> m0_51  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_86 -> m0_54  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_86 -> m0_59  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_87 -> m0_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m0_81 -> m0_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_81 -> m0_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_81 -> m0_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_81 -> m0_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_82 -> m0_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_82 -> m0_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_34 -> m1_35  [color=green, key=0, style=solid];
m1_35 -> m1_36  [color=green, key=0, style=solid];
m1_35 -> m1_37  [color=green, key=2, style=dotted];
m1_36 -> m1_34  [color=blue, key=0, style=bold];
m1_38 -> m1_39  [color=green, key=0, style=solid];
m1_39 -> m1_40  [color=green, key=0, style=solid];
m1_39 -> m1_37  [color=green, key=2, style=dotted];
m1_40 -> m1_38  [color=blue, key=0, style=bold];
}
