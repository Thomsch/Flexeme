digraph  {
n26 [label="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext", span=""];
n27 [label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", span=""];
n0 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", label="Entry Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", span="11-11"];
n1 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", label="kernel = new StandardKernel()", span="13-13"];
n2 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", label="Exit Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", span="11-11"];
n3 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="36-36"];
n4 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", label="Entry Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", span="20-20"];
n5 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", label="kernel.Bind<IWeapon>().To<Sword>()", span="22-22"];
n6 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", label="var warrior = new ExternalWarrior()", span="24-24"];
n11 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="27-27"];
n12 [cluster="Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", label="Entry Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", span="40-40"];
n7 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", label="kernel.Inject(warrior)", span="25-25"];
n13 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalWarrior.ExternalWarrior()", label="Entry Ninject.Tests.Integration.ExternalInjectionTests.ExternalWarrior.ExternalWarrior()", span="43-43"];
n8 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", label="warrior.Weapon.ShouldNotBeNull()", span="27-27"];
n9 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", label="warrior.Weapon.ShouldBeInstanceOf<Sword>()", span="28-28"];
n14 [cluster="Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", label="Entry Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", span="264-264"];
n15 [cluster="Unk.ShouldNotBeNull", label="Entry Unk.ShouldNotBeNull", span=""];
n10 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", label="Exit Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", span="20-20"];
n16 [cluster="Unk.>", label="Entry Unk.>", span=""];
n17 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", label="Entry Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", span="32-32"];
n18 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", label="var instance = new NotifiesWhenDisposed()", span="34-34"];
n19 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", label="kernel.Inject(instance)", span="36-36"];
n23 [cluster="Ninject.Tests.Fakes.NotifiesWhenDisposed.NotifiesWhenDisposed()", label="Entry Ninject.Tests.Fakes.NotifiesWhenDisposed.NotifiesWhenDisposed()", span="5-5"];
n21 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", label="instance.IsDisposed.ShouldBeFalse()", span="39-39"];
n20 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", label="kernel.Dispose()", span="37-37"];
n24 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="29-29"];
n22 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", label="Exit Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", span="32-32"];
n25 [cluster="Unk.ShouldBeFalse", label="Entry Unk.ShouldBeFalse", span=""];
d5 [cluster="CommandLine.Tests.ArgumentParserFixture.Get_next_input_values()", color=green, community=0, label="ae.Current.Should().Equal(''two'')", prediction=0, span="50-50"];
d1 [cluster="CommandLine.Tests.ArgumentParserFixture.Get_next_input_values()", label="var ae = new StringArrayEnumerator(new string[] { ''--optarr'', ''one'', ''two'', ''--plain'', ''3'' })", span="43-43"];
d4 [cluster="CommandLine.Tests.ArgumentParserFixture.Get_next_input_values()", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'' }, items)", span="49-49"];
d6 [cluster="CommandLine.Tests.ArgumentParserFixture.Get_next_input_values()", label="Exit CommandLine.Tests.ArgumentParserFixture.Get_next_input_values()", span="41-41"];
d11 [cluster="Unk.Should", label="Entry Unk.Should", span=""];
d12 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
d0 [cluster="CommandLine.Tests.ArgumentParserFixture.Get_next_input_values()", label="Entry CommandLine.Tests.ArgumentParserFixture.Get_next_input_values()", span="41-41"];
d2 [cluster="CommandLine.Tests.ArgumentParserFixture.Get_next_input_values()", label="ae.MoveNext()", span="45-45"];
d7 [cluster="CommandLine.Internal.StringArrayEnumerator.StringArrayEnumerator(string[])", label="Entry CommandLine.Internal.StringArrayEnumerator.StringArrayEnumerator(string[])", span="41-41"];
d3 [cluster="CommandLine.Tests.ArgumentParserFixture.Get_next_input_values()", label="var items = ArgumentParser.PublicWrapperOfGetNextInputValues(ae)", span="47-47"];
d13 [label="CommandLine.Tests.ArgumentParserFixture", span=""];
d10 [cluster="Unk.ElementsShouldBeEqual", label="Entry Unk.ElementsShouldBeEqual", span=""];
d8 [cluster="CommandLine.Internal.StringArrayEnumerator.MoveNext()", label="Entry CommandLine.Internal.StringArrayEnumerator.MoveNext()", span="81-81"];
d9 [cluster="Unk.PublicWrapperOfGetNextInputValues", label="Entry Unk.PublicWrapperOfGetNextInputValues", span=""];
m1_7 [cluster="Unk.Should", file="BaseFixture.cs", label="Entry Unk.Should", span=""];
m1_9 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48"];
m1_10 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", color=green, community=0, file="BaseFixture.cs", label="expected.Length.Should().Equal(actual.Count)", prediction=1, span="50-50"];
m1_12 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="i < expected.Length", span="51-51"];
m1_13 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", color=green, community=0, file="BaseFixture.cs", label="expected[i].Should().Equal(actual[i])", prediction=2, span="53-53"];
m1_11 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="int i = 0", span="51-51"];
m1_14 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="i++", span="51-51"];
m1_15 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="Exit CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48"];
m1_0 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="39-39"];
m1_1 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", color=green, community=0, file="BaseFixture.cs", label="expected.Length.Should().Equal(actual.Length)", prediction=3, span="41-41"];
m1_3 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="i < expected.Length", span="42-42"];
m1_4 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", color=green, community=0, file="BaseFixture.cs", label="expected[i].Should().Equal(actual[i])", prediction=4, span="44-44"];
m1_2 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="int i = 0", span="42-42"];
m1_5 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="i++", span="42-42"];
m1_6 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="Exit CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="39-39"];
m2_70 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", span="75-75"];
m2_229 [cluster="CommandLine.CommandLineParserSettings.Dispose()", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParserSettings.Dispose()", span="163-163"];
m2_139 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.OptionInfo.CreateInstance(object)", span="245-245"];
m2_4 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(bool)", span="58-58"];
m2_5 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", file="CommandLineParser.cs", label="_settings = new CommandLineParserSettings(false, false, Console.Error)", span="61-61"];
m2_6 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser(bool)", span="58-58"];
m2_134 [cluster="CommandLine.ParserContext.HasNoArguments()", file="CommandLineParser.cs", label="Entry CommandLine.ParserContext.HasNoArguments()", span="60-60"];
m2_71 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="CommandLineParser.cs", label="Entry CommandLine.Internal.OptionMap.SetDefaults()", span="156-156"];
m2_197 [cluster="object.HasVerbHelp()", file="CommandLineParser.cs", label="Entry object.HasVerbHelp()", span="43-43"];
m2_230 [cluster="CommandLine.CommandLineParser.~CommandLineParser()", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.~CommandLineParser()", span="531-531"];
m2_231 [cluster="CommandLine.CommandLineParser.~CommandLineParser()", file="CommandLineParser.cs", label="Dispose(false)", span="533-533"];
m2_232 [cluster="CommandLine.CommandLineParser.~CommandLineParser()", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.~CommandLineParser()", span="531-531"];
m2_136 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", span="94-94"];
m2_3 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="45-45"];
m2_41 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLineParser.cs", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="100-100"];
m2_161 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="CommandLineParser.cs", label="Entry CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", span="85-85"];
m2_78 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="482-482"];
m2_203 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="!options.CanReceiveParserState()", span="484-484"];
m2_205 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="var property = ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(options)[0].Left", span="488-488"];
m2_206 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="property.GetValue(options, null) == null", span="490-490"];
m2_207 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="property.SetValue(options, new ParserState(), null)", span="493-493"];
m2_208 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="var parserState = (IParserState) property.GetValue(options, null)", span="495-495"];
m2_209 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label=errors, span="496-496"];
m2_204 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="return;", span="486-486"];
m2_210 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="parserState.Errors.Add(error)", span="498-498"];
m2_211 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="482-482"];
m2_19 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="115-115"];
m2_20 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="117-117"];
m2_21 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="118-118"];
m2_22 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="_settings.HelpWriter = helpWriter", span="120-120"];
m2_23 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="return DoParseArguments(args, options);", span="121-121"];
m2_24 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="115-115"];
m2_173 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", span="414-414"];
m2_174 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="416-416"];
m2_175 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="417-417"];
m2_176 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="_settings.HelpWriter = helpWriter", span="419-419"];
m2_177 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="return DoParseArgumentsStrict(args, options, DefaultExitCodeFail);", span="421-421"];
m2_178 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", span="414-414"];
m2_191 [cluster="System.Environment.Exit(int)", file="CommandLineParser.cs", label="Entry System.Environment.Exit(int)", span="0-0"];
m2_79 [cluster="CommandLine.Internal.Target.AddValueItemIfAllowed(string)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.Target.AddValueItemIfAllowed(string)", span="50-50"];
m2_138 [cluster="CommandLine.Internal.OptionInfo.GetValue(object)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.OptionInfo.GetValue(object)", span="240-240"];
m2_47 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", span="154-154"];
m2_49 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="var optionMap = OptionMap.Create(context.Target, _settings)", span="157-157"];
m2_58 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="var result = parser.Parse(arguments, optionMap, context.Target)", span="172-172"];
m2_60 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="SetParserStateIfNeeded(context.Target, parser.PostParsingState)", span="175-175"];
m2_67 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="hadError |= !optionMap.EnforceRules()", span="194-194"];
m2_50 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="optionMap.SetDefaults()", span="158-158"];
m2_53 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="arguments.MoveNext()", span="162-162"];
m2_54 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="var argument = arguments.Current", span="164-164"];
m2_63 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="arguments.MoveNext()", span="182-182"];
m2_55 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="string.IsNullOrEmpty(argument)", span="165-165"];
m2_56 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="var parser = ArgumentParser.Create(argument, _settings.IgnoreUnknownArguments)", span="169-169"];
m2_57 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="parser != null", span="170-170"];
m2_59 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="(result & PresentParserState.Failure) == PresentParserState.Failure", span="173-173"];
m2_62 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="(result & PresentParserState.MoveOnNextElement) == PresentParserState.MoveOnNextElement", span="180-180"];
m2_61 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="hadError = true", span="176-176"];
m2_66 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="hadError = true", span="189-189"];
m2_68 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="return !hadError;", span="196-196"];
m2_69 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", span="154-154"];
m2_202 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", file="CommandLineParser.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", span="248-248"];
m2_39 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="199-199"];
m2_81 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="var caseSensitive = _settings.CaseSensitive", span="201-201"];
m2_82 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label=args, span="202-202"];
m2_83 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="helpOption.ShortName != null", span="204-204"];
m2_84 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="ArgumentParser.CompareShort(arg, helpOption.ShortName, caseSensitive)", span="206-206"];
m2_86 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="string.IsNullOrEmpty(helpOption.LongName)", span="211-211"];
m2_87 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="ArgumentParser.CompareLong(arg, helpOption.LongName, caseSensitive)", span="215-215"];
m2_89 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="return false;", span="220-220"];
m2_85 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="return true;", span="208-208"];
m2_88 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="return true;", span="217-217"];
m2_90 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="199-199"];
m2_133 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLineParser.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38"];
m2_168 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", span="392-392"];
m2_169 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="394-394"];
m2_170 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="395-395"];
m2_171 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="return DoParseArgumentsStrict(args, options, exitCode);", span="397-397"];
m2_172 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", span="392-392"];
m2_167 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", span="449-449"];
m2_185 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="!DoParseArguments(args, options)", span="451-451"];
m2_186 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="InvokeAutoBuildIfNeeded(options)", span="453-453"];
m2_187 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="Environment.Exit(exitCode)", span="456-456"];
m2_188 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="return true;", span="464-464"];
m2_189 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", span="449-449"];
m2_12 [cluster="CommandLine.Utils.Assumes.NotNull<T>(T, string, string)", file="CommandLineParser.cs", label="Entry CommandLine.Utils.Assumes.NotNull<T>(T, string, string)", span="45-45"];
m2_76 [cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.ArgumentParser.Create(string, bool)", span="52-52"];
m2_135 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="336-336"];
m2_154 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="CommandLineParser.cs", label="string helpText", span="338-338"];
m2_155 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="CommandLineParser.cs", label="verb == null", span="339-339"];
m2_156 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="CommandLineParser.cs", label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, null, out helpText)", span="341-341"];
m2_157 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="CommandLineParser.cs", label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, verb, out helpText)", span="345-345"];
m2_158 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="CommandLineParser.cs", label="_settings.HelpWriter != null", span="347-347"];
m2_159 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="CommandLineParser.cs", label="_settings.HelpWriter.Write(helpText)", span="349-349"];
m2_160 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="336-336"];
m2_140 [cluster="CommandLine.ParserContext.ToCoreInstance(CommandLine.Internal.OptionInfo)", file="CommandLineParser.cs", label="Entry CommandLine.ParserContext.ToCoreInstance(CommandLine.Internal.OptionInfo)", span="48-48"];
m2_93 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", span="232-232"];
m2_94 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", file="CommandLineParser.cs", label="found = false", span="234-234"];
m2_95 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", file="CommandLineParser.cs", label="string.IsNullOrEmpty(verb)", span="235-235"];
m2_96 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", file="CommandLineParser.cs", label="return target;", span="237-237"];
m2_97 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", file="CommandLineParser.cs", label="var pair = ReflectionUtil.RetrieveOptionProperty<VerbOptionAttribute>(target, verb)", span="239-239"];
m2_99 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", file="CommandLineParser.cs", label="return found ? pair.Left.GetValue(target, null) : target;", span="241-241"];
m2_98 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", file="CommandLineParser.cs", label="found = pair != null", span="240-240"];
m2_100 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", span="232-232"];
m2_162 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", span="372-372"];
m2_163 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", file="CommandLineParser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="374-374"];
m2_164 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", file="CommandLineParser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="375-375"];
m2_165 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", file="CommandLineParser.cs", label="return DoParseArgumentsStrict(args, options, DefaultExitCodeFail);", span="377-377"];
m2_166 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", span="372-372"];
m2_199 [cluster="lambda expression", file="CommandLineParser.cs", label="Entry lambda expression", span="478-478"];
m2_200 [cluster="lambda expression", file="CommandLineParser.cs", label="HelpText.DefaultParsingErrorsHandler(options, current)", span="478-478"];
m2_201 [cluster="lambda expression", file="CommandLineParser.cs", label="Exit lambda expression", span="478-478"];
m2_214 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="CommandLineParser.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m2_38 [cluster="CommandLine.ParserContext.ParserContext(string[], object)", file="CommandLineParser.cs", label="Entry CommandLine.ParserContext.ParserContext(string[], object)", span="42-42"];
m2_103 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", span="252-252"];
m2_104 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", file="CommandLineParser.cs", label="string.IsNullOrEmpty(verb) || (verb.Length > 0 && verb[0] == '-')", span="254-254"];
m2_108 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", file="CommandLineParser.cs", label="return string.Compare(_context.FirstArgument, verb, _settings.StringComparison) == 0;", span="262-262"];
m2_105 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", file="CommandLineParser.cs", label="return false;", span="256-256"];
m2_106 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", file="CommandLineParser.cs", label="!_context.HasAtLeastOneArgument()", span="258-258"];
m2_107 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", file="CommandLineParser.cs", label="return false;", span="260-260"];
m2_109 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", span="252-252"];
m2_46 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", span="265-265"];
m2_112 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="var verbs = ReflectionUtil.RetrievePropertyList<VerbOptionAttribute>(context.Target)", span="267-267"];
m2_113 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="var helpInfo = ReflectionUtil.RetrieveMethod<HelpVerbOptionAttribute>(context.Target)", span="268-268"];
m2_114 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="context.HasNoArguments()", span="269-269"];
m2_116 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="DisplayHelpVerbText(context.Target, helpInfo, null)", span="273-273"];
m2_118 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="var optionMap = OptionMap.Create(context.Target, verbs, _settings)", span="277-277"];
m2_119 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="TryParseHelpVerb(context.Arguments, context.Target, helpInfo, optionMap)", span="279-279"];
m2_121 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="var verbOption = optionMap[context.FirstArgument]", span="284-284"];
m2_124 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="DisplayHelpVerbText(context.Target, helpInfo, null)", span="290-290"];
m2_126 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="verbOption.GetValue(context.Target) == null", span="294-294"];
m2_127 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="verbOption.CreateInstance(context.Target)", span="297-297"];
m2_128 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="var verbResult = DoParseArgumentsCore(context.ToCoreInstance(verbOption))", span="299-299"];
m2_130 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="DisplayHelpVerbText(context.Target, helpInfo, context.FirstArgument)", span="303-303"];
m2_115 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="helpInfo != null || _settings.HelpWriter != null", span="271-271"];
m2_123 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="helpInfo != null", span="288-288"];
m2_117 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="return false;", span="275-275"];
m2_120 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="return false;", span="282-282"];
m2_122 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="verbOption == null", span="286-286"];
m2_125 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="return false;", span="292-292"];
m2_129 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="!verbResult", span="300-300"];
m2_131 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="return verbResult;", span="305-305"];
m2_132 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", span="265-265"];
m2_110 [cluster="CommandLine.ParserContext.HasAtLeastOneArgument()", file="CommandLineParser.cs", label="Entry CommandLine.ParserContext.HasAtLeastOneArgument()", span="65-65"];
m2_91 [cluster="CommandLine.Internal.ArgumentParser.CompareShort(string, char?, bool)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.ArgumentParser.CompareShort(string, char?, bool)", span="94-94"];
m2_196 [cluster="object.HasHelp()", file="CommandLineParser.cs", label="Entry object.HasHelp()", span="38-38"];
m2_45 [cluster="object.HasVerbs()", file="CommandLineParser.cs", label="Entry object.HasVerbs()", span="33-33"];
m2_74 [cluster="CommandLine.Internal.IArgumentEnumerator.MoveNext()", file="CommandLineParser.cs", label="Entry CommandLine.Internal.IArgumentEnumerator.MoveNext()", span="38-38"];
m2_80 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="CommandLineParser.cs", label="Entry CommandLine.Internal.OptionMap.EnforceRules()", span="151-151"];
m2_0 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="51-51"];
m2_1 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParser.cs", label="_settings = new CommandLineParserSettings()", span="53-53"];
m2_2 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser()", span="51-51"];
m2_8 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="70-70"];
m2_9 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="Assumes.NotNull(settings, ''settings'', SR.ArgumentNullException_CommandLineParserSettingsInstanceCannotBeNull)", span="72-72"];
m2_10 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="_settings = settings", span="73-73"];
m2_11 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="70-70"];
m2_190 [cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", span="467-467"];
m2_192 [cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", file="CommandLineParser.cs", label="_settings.HelpWriter == null ||\r\n                options.HasHelp() ||\r\n                options.HasVerbHelp()", span="469-471"];
m2_194 [cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", file="CommandLineParser.cs", label="_settings.HelpWriter.Write(HelpText.AutoBuild(options,\r\n                current => HelpText.DefaultParsingErrorsHandler(options, current), options.HasVerbs()))", span="477-478"];
m2_193 [cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", file="CommandLineParser.cs", label="return;", span="473-473"];
m2_195 [cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", span="467-467"];
m2_215 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="CommandLineParser.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m2_221 [cluster="System.GC.SuppressFinalize(object)", file="CommandLineParser.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m2_75 [cluster="string.IsNullOrEmpty(string)", file="CommandLineParser.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m2_40 [cluster="CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)", span="147-147"];
m2_43 [cluster="CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)", file="CommandLineParser.cs", label="return context.Target.HasVerbs() ?\r\n                DoParseArgumentsVerbs(context) :\r\n                DoParseArgumentsCore(context);", span="149-151"];
m2_44 [cluster="CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)", span="147-147"];
m2_212 [cluster="object.CanReceiveParserState()", file="CommandLineParser.cs", label="Entry object.CanReceiveParserState()", span="48-48"];
m2_220 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.Dispose(bool)", span="512-512"];
m2_222 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label=_disposed, span="514-514"];
m2_224 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label=disposing, span="518-518"];
m2_223 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="return;", span="516-516"];
m2_225 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="_settings != null", span="520-520"];
m2_226 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="_settings.Dispose()", span="522-522"];
m2_227 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="_disposed = true", span="524-524"];
m2_228 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.Dispose(bool)", span="512-512"];
m2_216 [cluster="CommandLine.CommandLineParser.Dispose()", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.Dispose()", span="505-505"];
m2_217 [cluster="CommandLine.CommandLineParser.Dispose()", file="CommandLineParser.cs", label="Dispose(true)", span="507-507"];
m2_218 [cluster="CommandLine.CommandLineParser.Dispose()", file="CommandLineParser.cs", label="GC.SuppressFinalize(this)", span="509-509"];
m2_219 [cluster="CommandLine.CommandLineParser.Dispose()", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.Dispose()", span="505-505"];
m2_77 [cluster="CommandLine.Internal.ArgumentParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.ArgumentParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", span="43-43"];
m2_92 [cluster="CommandLine.Internal.ArgumentParser.CompareLong(string, string, bool)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.ArgumentParser.CompareLong(string, string, bool)", span="100-100"];
m2_198 [cluster="CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.ParsingErrorsHandler, bool)", file="CommandLineParser.cs", label="Entry CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.ParsingErrorsHandler, bool)", span="209-209"];
m2_37 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLineParser.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="72-72"];
m2_137 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", span="308-308"];
m2_141 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="var helpWriter = _settings.HelpWriter", span="310-310"];
m2_142 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="helpInfo != null && helpWriter != null", span="311-311"];
m2_143 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="string.Compare(args[0], helpInfo.Right.LongName, _settings.StringComparison) == 0", span="313-313"];
m2_144 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="var verb = args.Length > 1 ? args[1] : null", span="316-316"];
m2_146 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="var verbOption = optionMap[verb]", span="319-319"];
m2_148 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="verbOption.GetValue(options) == null", span="322-322"];
m2_149 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="verbOption.CreateInstance(options)", span="325-325"];
m2_150 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="DisplayHelpVerbText(options, helpInfo, verb)", span="329-329"];
m2_152 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="return false;", span="333-333"];
m2_145 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="verb != null", span="317-317"];
m2_147 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="verbOption != null", span="320-320"];
m2_151 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="return true;", span="330-330"];
m2_153 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", span="308-308"];
m2_72 [cluster="CommandLine.Internal.Target.Target(object)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.Target.Target(object)", span="38-38"];
m2_213 [cluster="CommandLine.ParserState.ParserState()", file="CommandLineParser.cs", label="Entry CommandLine.ParserState.ParserState()", span="39-39"];
m2_7 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="105-105"];
m2_111 [cluster="string.Compare(string, string, System.StringComparison)", file="CommandLineParser.cs", label="Entry string.Compare(string, string, System.StringComparison)", span="0-0"];
m2_179 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", span="439-439"];
m2_180 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", file="CommandLineParser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="441-441"];
m2_181 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", file="CommandLineParser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="442-442"];
m2_182 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", file="CommandLineParser.cs", label="_settings.HelpWriter = helpWriter", span="444-444"];
m2_183 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", file="CommandLineParser.cs", label="return DoParseArgumentsStrict(args, options, exitCode);", span="446-446"];
m2_184 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", span="439-439"];
m2_101 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="CommandLineParser.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="171-171"];
m2_18 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="124-124"];
m2_25 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="126-126"];
m2_27 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="_context = new ParserContext(args, options)", span="129-129"];
m2_29 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="ParseHelp(args, pair.Right) || !DoParseArgumentsDispatcher(_context)", span="134-134"];
m2_31 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="137-137"];
m2_26 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="var helpWriter = _settings.HelpWriter", span="127-127"];
m2_28 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="pair != null && helpWriter != null", span="131-131"];
m2_32 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="helpWriter.Write(helpText)", span="138-138"];
m2_35 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="return DoParseArgumentsDispatcher(_context);", span="144-144"];
m2_30 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="string helpText", span="136-136"];
m2_34 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="return true;", span="141-141"];
m2_33 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="return false;", span="139-139"];
m2_36 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="124-124"];
m2_102 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="CommandLineParser.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m2_42 [cluster="System.IO.TextWriter.Write(string)", file="CommandLineParser.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m2_13 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="94-94"];
m2_14 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLineParser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="96-96"];
m2_15 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLineParser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="97-97"];
m2_16 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLineParser.cs", label="return DoParseArguments(args, options);", span="99-99"];
m2_17 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="94-94"];
m2_233 [file="CommandLineParser.cs", label="CommandLine.CommandLineParser", span=""];
m2_234 [file="CommandLineParser.cs", label=object, span=""];
m3_117 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.Dispose(bool)", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.PropertyInjectionTests.Dispose(bool)", span="193-193"];
m3_118 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.Dispose(bool)", file="CommandLineParserBaseFixture.cs", label="disposing && !IsDisposed", span="195-195"];
m3_121 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.Dispose(bool)", file="CommandLineParserBaseFixture.cs", label="base.Dispose(disposing)", span="200-200"];
m3_119 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.Dispose(bool)", file="CommandLineParserBaseFixture.cs", label="this.kernel.Dispose()", span="197-197"];
m3_120 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.Dispose(bool)", file="CommandLineParserBaseFixture.cs", label="this.kernel = null", span="198-198"];
m3_122 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.Dispose(bool)", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.PropertyInjectionTests.Dispose(bool)", span="193-193"];
m3_19 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="CommandLine.Tests.CommandLineParserBaseFixture", span=""];
m3_20 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Settings.InjectNonPublic = true", span="46-46"];
m3_21 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Settings.InjectParentPrivateProperties = true", span="47-47"];
m3_23 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="var warrior = this.kernel.Get<IWarrior>()", span="51-51"];
m3_25 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.WithPropertyValueTests.PropertyValuesOverrideDefaultBinding()", span="44-44"];
m3_7 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="51-51"];
m3_13 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", span="34-34"];
m3_39 [cluster="Ninject.Parameters.PropertyValue.PropertyValue(string, System.Func<Ninject.Activation.IContext, object>)", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Parameters.PropertyValue.PropertyValue(string, System.Func<Ninject.Activation.IContext, object>)", span="35-35"];
m3_124 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", span="37-37"];
m3_5 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", color=green, community=0, file="CommandLineParserBaseFixture.cs", label="Parser = new CommandLineParser()", prediction=5, span="55-55"];
m3_18 [cluster="Unk.False", file="CommandLineParserBaseFixture.cs", label="Entry Unk.False", span=""];
m3_74 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", span="110-110"];
m3_75 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Settings.InjectNonPublic = true", span="112-112"];
m3_76 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Settings.InjectParentPrivateProperties = true", span="113-113"];
m3_77 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="var warrior = this.kernel.Get<OwnStyleNinja>()", span="114-114"];
m3_78 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="warrior.ShouldNotBeNull()", span="116-116"];
m3_79 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="warrior.OffHandWeapon.ShouldNotBeNull()", span="117-117"];
m3_80 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="warrior.SecondaryWeapon.ShouldNotBeNull()", span="118-118"];
m3_81 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="warrior.SecretWeaponAccessor.ShouldNotBeNull()", span="119-119"];
m3_82 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="warrior.VerySecretWeaponAccessor.ShouldNotBeNull()", span="120-120"];
m3_83 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", span="110-110"];
m3_8 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="34-34"];
m3_9 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateWarrior(Ninject.Tests.Fakes.IWarrior)", color=green, community=0, file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.PropertyInjectionTests.ValidateWarrior(Ninject.Tests.Fakes.IWarrior)", prediction=6, span="177-177"];
m3_10 [cluster="lambda expression", color=green, community=0, file="CommandLineParserBaseFixture.cs", label="Entry lambda expression", prediction=6, span="28-28"];
m3_11 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="context.Kernel.Get<IWeapon>()", span="28-28"];
m3_14 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Bind<IWarrior>().To<FootSoldier>()\r\n                .WithPropertyValue(''Weapon'', this.kernel.Get<IWeapon>())", span="36-37"];
m3_15 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", color=green, community=0, file="CommandLineParserBaseFixture.cs", label="var warrior = this.kernel.Get<IWarrior>()", prediction=8, span="38-38"];
m3_16 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", color=green, community=0, file="CommandLineParserBaseFixture.cs", label="ValidateWarrior(warrior)", prediction=6, span="39-39"];
m3_17 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", span="34-34"];
m3_30 [cluster="Ninject.Tests.Fakes.Sword.Sword()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4"];
m3_85 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", span="124-124"];
m3_86 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Settings.InjectNonPublic = true", span="126-126"];
m3_87 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Settings.InjectParentPrivateProperties = true", span="127-127"];
m3_88 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="var warrior = this.kernel.Get<FatherStyleNinja>()", span="128-128"];
m3_89 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="warrior.ShouldNotBeNull()", span="130-130"];
m3_90 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="warrior.OffHandWeapon.ShouldNotBeNull()", span="131-131"];
m3_91 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="warrior.SecondaryWeapon.ShouldNotBeNull()", span="132-132"];
m3_92 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="warrior.SecretWeaponAccessor.ShouldNotBeNull()", span="133-133"];
m3_93 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="warrior.VerySecretWeaponAccessor.ShouldNotBeNull()", span="134-134"];
m3_94 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", span="124-124"];
m3_102 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.SetUp()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.PropertyInjectionTests.SetUp()", span="171-171"];
m3_103 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.SetUp()", file="CommandLineParserBaseFixture.cs", label="this.kernel = new StandardKernel()", span="173-173"];
m3_104 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.SetUp()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Bind<IWeapon>().To<Shuriken>()", span="174-174"];
m3_105 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.SetUp()", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.PropertyInjectionTests.SetUp()", span="171-171"];
m3_106 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="30-30"];
m3_4 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", span="25-25"];
m3_6 [cluster="Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", span="42-42"];
m3_60 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="Entry lambda expression", span="86-86"];
m3_12 [cluster="Unk.Should", file="CommandLineParserBaseFixture.cs", label="Entry Unk.Should", span=""];
m3_27 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="Entry lambda expression", span="49-49"];
m3_31 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="Entry lambda expression", span="50-50"];
m3_28 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="new Sword()", span="49-49"];
m3_29 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="Exit lambda expression", span="49-49"];
m3_33 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="Exit lambda expression", span="50-50"];
m3_41 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="Entry lambda expression", span="64-64"];
m3_43 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="Exit lambda expression", span="64-64"];
m3_57 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="Entry lambda expression", span="85-85"];
m3_58 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="new Sword()", span="85-85"];
m3_59 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="Exit lambda expression", span="85-85"];
m3_61 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="new Sword()", span="86-86"];
m3_62 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="Exit lambda expression", span="86-86"];
m3_50 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.WithParameterTests.PropertyValuesOverrideDefaultBinding()", span="80-80"];
m3_51 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Settings.InjectNonPublic = true", span="82-82"];
m3_52 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Settings.InjectParentPrivateProperties = true", span="83-83"];
m3_53 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Bind<IWarrior>().To<Ninja>()\r\n                .WithParameter(new PropertyValue(''SecondaryWeapon'', context => new Sword()))\r\n                .WithParameter(new PropertyValue(''VerySecretWeapon'', context => new Sword()))", span="84-86"];
m3_54 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="var warrior = this.kernel.Get<IWarrior>()", span="87-87"];
m3_55 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="ValidateNinjaWarriorWithOverides(warrior)", span="88-88"];
m3_56 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.WithParameterTests.PropertyValuesOverrideDefaultBinding()", span="80-80"];
m3_97 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.FatherStyleNinja.FatherStyleNinja(Ninject.Tests.Fakes.IWeapon)", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.FatherStyleNinja.FatherStyleNinja(Ninject.Tests.Fakes.IWeapon)", span="153-153"];
m3_98 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.FatherStyleNinja.FatherStyleNinja(Ninject.Tests.Fakes.IWeapon)", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.FatherStyleNinja.FatherStyleNinja(Ninject.Tests.Fakes.IWeapon)", span="153-153"];
m3_107 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateWarrior(Ninject.Tests.Fakes.IWarrior)", file="CommandLineParserBaseFixture.cs", label="warrior.ShouldBeInstanceOf<FootSoldier>()", span="179-179"];
m3_108 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateWarrior(Ninject.Tests.Fakes.IWarrior)", file="CommandLineParserBaseFixture.cs", label="warrior.Weapon.ShouldNotBeNull()", span="180-180"];
m3_109 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateWarrior(Ninject.Tests.Fakes.IWarrior)", file="CommandLineParserBaseFixture.cs", label="warrior.Weapon.ShouldBeInstanceOf<Shuriken>()", span="181-181"];
m3_110 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateWarrior(Ninject.Tests.Fakes.IWarrior)", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.PropertyInjectionTests.ValidateWarrior(Ninject.Tests.Fakes.IWarrior)", span="177-177"];
m3_63 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", span="97-97"];
m3_64 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Settings.InjectNonPublic = true", span="99-99"];
m3_65 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Bind<IWarrior>().To<Ninja>()", span="100-100"];
m3_66 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", file="CommandLineParserBaseFixture.cs", label="var warrior = this.kernel.Get<IWarrior>()", span="101-101"];
m3_67 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", file="CommandLineParserBaseFixture.cs", label="Assert.IsType<Ninja>(warrior)", span="102-102"];
m3_68 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", file="CommandLineParserBaseFixture.cs", label="Assert.IsType<Shuriken>(warrior.Weapon)", span="103-103"];
m3_69 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", file="CommandLineParserBaseFixture.cs", label="Ninja ninja = warrior as Ninja", span="104-104"];
m3_70 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", file="CommandLineParserBaseFixture.cs", label="Assert.IsType<Shuriken>(ninja.SecondaryWeapon)", span="105-105"];
m3_71 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", file="CommandLineParserBaseFixture.cs", label="Assert.IsType<Shuriken>(ninja.VerySecretWeaponAccessor)", span="106-106"];
m3_72 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", span="97-97"];
m3_0 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", span="25-25"];
m3_1 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Bind<IWarrior>().To<FootSoldier>()\r\n                .WithPropertyValue(''Weapon'', context => context.Kernel.Get<IWeapon>())", span="27-28"];
m3_2 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", file="CommandLineParserBaseFixture.cs", label="var warrior = this.kernel.Get<IWarrior>()", span="29-29"];
m3_3 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", file="CommandLineParserBaseFixture.cs", label="ValidateWarrior(warrior)", span="30-30"];
m3_95 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OwnStyleNinja.OwnStyleNinja(Ninject.Tests.Fakes.IWeapon)", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OwnStyleNinja.OwnStyleNinja(Ninject.Tests.Fakes.IWeapon)", span="139-139"];
m3_96 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OwnStyleNinja.OwnStyleNinja(Ninject.Tests.Fakes.IWeapon)", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OwnStyleNinja.OwnStyleNinja(Ninject.Tests.Fakes.IWeapon)", span="139-139"];
m3_49 [cluster="Ninject.Parameters.PropertyValue.PropertyValue(string, object)", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Parameters.PropertyValue.PropertyValue(string, object)", span="28-28"];
m3_26 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateNinjaWarriorWithOverides(Ninject.Tests.Fakes.IWarrior)", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.PropertyInjectionTests.ValidateNinjaWarriorWithOverides(Ninject.Tests.Fakes.IWarrior)", span="184-184"];
m3_111 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateNinjaWarriorWithOverides(Ninject.Tests.Fakes.IWarrior)", file="CommandLineParserBaseFixture.cs", label="warrior.ShouldBeInstanceOf<Ninja>()", span="186-186"];
m3_112 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateNinjaWarriorWithOverides(Ninject.Tests.Fakes.IWarrior)", file="CommandLineParserBaseFixture.cs", label="warrior.Weapon.ShouldBeInstanceOf<Shuriken>()", span="187-187"];
m3_113 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateNinjaWarriorWithOverides(Ninject.Tests.Fakes.IWarrior)", file="CommandLineParserBaseFixture.cs", label="Ninja ninja = warrior as Ninja", span="188-188"];
m3_114 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateNinjaWarriorWithOverides(Ninject.Tests.Fakes.IWarrior)", file="CommandLineParserBaseFixture.cs", label="ninja.SecondaryWeapon.ShouldBeInstanceOf<Sword>()", span="189-189"];
m3_115 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateNinjaWarriorWithOverides(Ninject.Tests.Fakes.IWarrior)", file="CommandLineParserBaseFixture.cs", label="ninja.VerySecretWeaponAccessor.ShouldBeInstanceOf<Sword>()", span="190-190"];
m3_116 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateNinjaWarriorWithOverides(Ninject.Tests.Fakes.IWarrior)", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.PropertyInjectionTests.ValidateNinjaWarriorWithOverides(Ninject.Tests.Fakes.IWarrior)", span="184-184"];
m3_44 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", span="70-70"];
m3_45 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Bind<IWarrior>().To<FootSoldier>()\r\n                .WithParameter(new PropertyValue(''Weapon'', this.kernel.Get<IWeapon>()))", span="72-73"];
m3_46 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", file="CommandLineParserBaseFixture.cs", label="var warrior = this.kernel.Get<IWarrior>()", span="74-74"];
m3_47 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", file="CommandLineParserBaseFixture.cs", label="ValidateWarrior(warrior)", span="75-75"];
m3_48 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", span="70-70"];
m3_40 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithParameter(Ninject.Parameters.IParameter)", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithParameter(Ninject.Parameters.IParameter)", span="262-262"];
m3_84 [cluster="Unk.ShouldNotBeNull", file="CommandLineParserBaseFixture.cs", label="Entry Unk.ShouldNotBeNull", span=""];
m3_34 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", span="61-61"];
m3_38 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", span="61-61"];
m3_123 [cluster="System.IDisposable.Dispose()", file="CommandLineParserBaseFixture.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m3_99 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.PropertyInjectionTests()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.PropertyInjectionTests.PropertyInjectionTests()", span="165-165"];
m3_100 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.PropertyInjectionTests()", file="CommandLineParserBaseFixture.cs", label="this.SetUp()", span="167-167"];
m3_101 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.PropertyInjectionTests()", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.PropertyInjectionTests.PropertyInjectionTests()", span="165-165"];
m3_125 [file="CommandLineParserBaseFixture.cs", label="Ninject.Tests.Integration.WithPropertyValueTests", span=""];
m3_126 [file="CommandLineParserBaseFixture.cs", label="Ninject.Tests.Integration.WithParameterTests", span=""];
m3_127 [file="CommandLineParserBaseFixture.cs", label="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied", span=""];
m3_128 [file="CommandLineParserBaseFixture.cs", label="Ninject.Tests.Integration.PropertyInjectionTests", span=""];
m4_21 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", span="67-67"];
m4_22 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new NullableTypesOptions()", prediction=10, span="69-69"];
m4_23 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-int'' }, options)", span="70-70"];
m4_24 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", prediction=11, span="72-72"];
m4_25 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", span="67-67"];
m4_11 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLineParserFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1427-1427"];
m4_46 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", span="110-110"];
m4_47 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="CommandLineParserFixture.cs", label="var options = new NullableTypesOptions()", span="112-112"];
m4_48 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-d9.999'' }, options)", prediction=12, span="113-113"];
m4_50 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(9.999, options.DoubleValue)", span="116-116"];
m4_51 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="options = new NullableTypesOptions()", prediction=13, span="118-118"];
m4_52 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="CommandLineParserFixture.cs", label="result = base.Parser.ParseArguments(new string[] { }, options)", span="119-119"];
m4_54 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="Assert.IsNull(options.DoubleValue)", prediction=13, span="122-122"];
m4_53 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", prediction=11, span="121-121"];
m4_55 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", span="110-110"];
m4_26 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", span="76-76"];
m4_27 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new NullableTypesOptions()", prediction=16, span="78-78"];
m4_28 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--enum=ReadWrite'' }, options)", prediction=17, span="79-79"];
m4_31 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="options = new NullableTypesOptions()", prediction=18, span="84-84"];
m4_32 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="CommandLineParserFixture.cs", label="result = base.Parser.ParseArguments(new string[] { }, options)", span="85-85"];
m4_34 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="Assert.IsNull(options.EnumValue)", prediction=18, span="88-88"];
m4_33 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", prediction=11, span="87-87"];
m4_35 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", span="76-76"];
m4_36 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", span="92-92"];
m4_37 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new NullableTypesOptions()", prediction=21, span="94-94"];
m4_39 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="97-97"];
m4_40 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", span="92-92"];
m4_14 [cluster="Unk.IsNull", file="CommandLineParserFixture.cs", label="Entry Unk.IsNull", span=""];
m4_0 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", span="42-42"];
m4_1 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="CommandLineParserFixture.cs", label="var options = new NullableTypesOptions()", span="44-44"];
m4_2 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-i'', ''99'' }, options)", prediction=22, span="45-45"];
m4_5 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="options = new NullableTypesOptions()", prediction=23, span="50-50"];
m4_7 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", prediction=11, span="53-53"];
m4_9 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", span="42-42"];
m4_61 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", span="135-135"];
m4_62 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new NullableTypesOptions()", prediction=25, span="137-137"];
m4_63 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-d'' }, options)", prediction=26, span="138-138"];
m4_64 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="140-140"];
m4_65 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", span="135-135"];
m4_10 [cluster="CommandLine.Tests.Mocks.NullableTypesOptions.NullableTypesOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.NullableTypesOptions.NullableTypesOptions()", span="35-35"];
m4_13 [cluster="Unk.AreEqual", file="CommandLineParserFixture.cs", label="Entry Unk.AreEqual", span=""];
m4_15 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", span="58-58"];
m4_16 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new NullableTypesOptions()", prediction=27, span="60-60"];
m4_17 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-i'', ''string-value'' }, options)", prediction=28, span="61-61"];
m4_18 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", prediction=11, span="63-63"];
m4_19 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", span="58-58"];
m4_20 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", span="50-50"];
m4_41 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", span="101-101"];
m4_42 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new NullableTypesOptions()", prediction=30, span="103-103"];
m4_43 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--enum'' }, options)", prediction=31, span="104-104"];
m4_44 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", prediction=11, span="106-106"];
m4_45 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", span="101-101"];
m4_56 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", span="126-126"];
m4_57 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new NullableTypesOptions()", prediction=33, span="128-128"];
m4_58 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--double'', ''9,999'' }, options)", span="129-129"];
m4_59 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="131-131"];
m4_60 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", span="126-126"];
m4_66 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", span="144-144"];
m4_67 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="CommandLineParserFixture.cs", label="var options = new NullableTypesOptions()", span="146-146"];
m4_68 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--string'', ''alone'' }, options)", span="147-147"];
m4_69 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", prediction=11, span="149-149"];
m4_71 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="CommandLineParserFixture.cs", label="options = new NullableTypesOptions()", prediction=35, span="152-152"];
m4_72 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="CommandLineParserFixture.cs", label="result = base.Parser.ParseArguments(\r\n                new string[] { ''-d1.789'', ''--int'', ''10099'', ''-stogether'', ''--enum'', ''Read'' }, options)", prediction=36, span="153-154"];
m4_74 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="CommandLineParserFixture.cs", label="Assert.AreEqual(1.789, options.DoubleValue)", prediction=35, span="157-157"];
m4_75 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="CommandLineParserFixture.cs", label="Assert.AreEqual(10099, options.IntegerValue)", prediction=35, span="158-158"];
m4_76 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''together'', options.StringValue)", span="159-159"];
m4_77 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(FileAccess.Read, options.EnumValue)", span="160-160"];
m4_73 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="156-156"];
m4_78 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", span="144-144"];
m4_12 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", span="45-45"];
m4_79 [file="CommandLineParserFixture.cs", label="CommandLine.Tests.NullableTypesParsingFixture", span=""];
m5_12 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m5_17 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", span="54-54"];
m5_18 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="var writer = new StringWriter()", span="56-56"];
m5_23 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="bool success = parser.ParseArguments(new string[] { ''--help'' }, options)", span="62-62"];
m5_19 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="var settings = new CommandLineParserSettings()", span="57-57"];
m5_20 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="settings.HelpWriter = writer", span="58-58"];
m5_21 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="ICommandLineParser parser = new CommandLineParser(settings)", span="59-59"];
m5_22 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="var options = new SimpleOptionsWithHelpOption()", span="60-60"];
m5_26 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", span="54-54"];
m5_0 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.Setting_help_writer_using_constructor()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.Setting_help_writer_using_constructor()", span="40-40"];
m5_1 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.Setting_help_writer_using_constructor()", file="CommandLineParserSettingsFixture.cs", label="var writer = new StringWriter()", span="42-42"];
m5_2 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.Setting_help_writer_using_constructor()", file="CommandLineParserSettingsFixture.cs", label="ICommandLineParser parser = new CommandLineParser(new CommandLineParserSettings(writer))", span="43-43"];
m5_6 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.Setting_help_writer_using_constructor()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="writer.ToString().Should().Equal(''MockOptions::GetUsage()'')", prediction=39, span="49-49"];
m5_3 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.Setting_help_writer_using_constructor()", file="CommandLineParserSettingsFixture.cs", label="var options = new SimpleOptionsWithHelpOption()", span="44-44"];
m5_4 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.Setting_help_writer_using_constructor()", file="CommandLineParserSettingsFixture.cs", label="bool success = parser.ParseArguments(new string[] {''--help''}, options)", span="46-46"];
m5_5 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.Setting_help_writer_using_constructor()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="success.Should().Be.False()", prediction=40, span="48-48"];
m5_7 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.Setting_help_writer_using_constructor()", file="CommandLineParserSettingsFixture.cs", label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.Setting_help_writer_using_constructor()", span="40-40"];
m5_11 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.SimpleOptionsWithHelpOption()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.SimpleOptionsWithHelpOption()", span="33-33"];
m5_14 [cluster="Unk.False", file="CommandLineParserSettingsFixture.cs", label="Entry Unk.False", span=""];
m5_8 [cluster="System.IO.StringWriter.StringWriter()", file="CommandLineParserSettingsFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m5_15 [cluster="System.IO.StringWriter.ToString()", file="CommandLineParserSettingsFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m5_28 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", span="69-69"];
m5_29 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="var writer = new StringWriter()", span="71-71"];
m5_32 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="bool success = parser.ParseArguments(new string[] { ''--help'' }, options, writer)", span="75-75"];
m5_30 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="ICommandLineParser parser = new CommandLineParser(new CommandLineParserSettings())", span="72-72"];
m5_31 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="var options = new SimpleOptionsWithHelpOption()", span="73-73"];
m5_35 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", span="69-69"];
m5_36 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="64-64"];
m5_9 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="70-70"];
m5_27 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="45-45"];
m5_10 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="66-66"];
m5_13 [cluster="Unk.Should", file="CommandLineParserSettingsFixture.cs", label="Entry Unk.Should", span=""];
m7_13 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m7_2 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", span="54-54"];
m7_3 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="var yearsPart = new StringBuilder(years.Length * 4)", span="56-56"];
m7_4 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label=years, span="58-58"];
m7_7 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="yearsPart.Append(string.Concat(''''', y))", span="62-62"];
m7_8 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="yearsPart.Append(y)", span="64-64"];
m7_9 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="yearsPart.Append('', '')", span="65-65"];
m7_10 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="yearsPart.Remove(yearsPart.Length - 2, 2)", span="67-67"];
m7_11 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="return yearsPart.ToString();", span="69-69"];
m7_5 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="string y = year.ToString(CultureInfo.InvariantCulture)", span="60-60"];
m7_6 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="y.Length == 2", span="61-61"];
m7_12 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", span="54-54"];
m7_44 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", span="115-115"];
m7_46 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", span="115-115"];
m7_47 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", span="121-121"];
m7_48 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", color=green, community=0, file="CopyrightInfoFixture.cs", label="var info = new CopyleftInfo(true, ''Free Company, Inc.'', 96, 97, 98, 2005)", prediction=41, span="123-123"];
m7_50 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", span="121-121"];
m7_40 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", span="108-108"];
m7_42 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", span="108-108"];
m7_19 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", span="75-75"];
m7_20 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(false, ''Authors, Inc.'', 2007)", span="77-77"];
m7_22 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", span="75-75"];
m7_27 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Upper_symbol_two_consecutive_years()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.Upper_symbol_two_consecutive_years()", span="83-83"];
m7_28 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Upper_symbol_two_consecutive_years()", file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(true, ''X & Y Group'', 2006, 2007)", span="85-85"];
m7_29 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Upper_symbol_two_consecutive_years()", color=green, community=0, file="CopyrightInfoFixture.cs", label="copyright.ToString().Should().Equal(''Copyright (C) 2006, 2007 X & Y Group'')", prediction=42, span="87-87"];
m7_30 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Upper_symbol_two_consecutive_years()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.Upper_symbol_two_consecutive_years()", span="83-83"];
m7_36 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", span="99-99"];
m7_37 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(''CommandLine, Ltd'', 1999, 2003, 2004, 2007)", span="101-101"];
m7_39 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", span="99-99"];
m7_0 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", span="44-44"];
m7_1 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", span="44-44"];
m7_15 [cluster="string.Concat(string, string)", file="CopyrightInfoFixture.cs", label="Entry string.Concat(string, string)", span="0-0"];
m7_35 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="83-83"];
m7_51 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Should_not_grow_when_converted_to_string()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.Should_not_grow_when_converted_to_string()", span="128-128"];
m7_52 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Should_not_grow_when_converted_to_string()", color=green, community=0, file="CopyrightInfoFixture.cs", label="var info = new CopyrightInfo (''ManOnTheMoon, Inc.'', 2019)", prediction=43, span="130-130"];
m7_53 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Should_not_grow_when_converted_to_string()", file="CopyrightInfoFixture.cs", label="int i=0", span="132-132"];
m7_54 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Should_not_grow_when_converted_to_string()", file="CopyrightInfoFixture.cs", label="i<10", span="132-132"];
m7_56 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Should_not_grow_when_converted_to_string()", file="CopyrightInfoFixture.cs", label="i++", span="132-132"];
m7_57 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Should_not_grow_when_converted_to_string()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.Should_not_grow_when_converted_to_string()", span="128-128"];
m7_31 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Default_symbol_two_non_consecutive_years()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.Default_symbol_two_non_consecutive_years()", span="91-91"];
m7_32 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Default_symbol_two_non_consecutive_years()", file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(''W & Z, Inc.'', 2005, 2007)", span="93-93"];
m7_33 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Default_symbol_two_non_consecutive_years()", color=green, community=0, file="CopyrightInfoFixture.cs", label="copyright.ToString().Should().Equal(''Copyright (C) 2005 - 2007 W & Z, Inc.'')", prediction=44, span="95-95"];
m7_34 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Default_symbol_two_non_consecutive_years()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.Default_symbol_two_non_consecutive_years()", span="91-91"];
m7_17 [cluster="System.Text.StringBuilder.Remove(int, int)", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m7_23 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="97-97"];
m7_43 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="70-70"];
m7_24 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.ToString()", span="113-113"];
m7_18 [cluster="System.Text.StringBuilder.ToString()", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m7_16 [cluster="System.Text.StringBuilder.Append(string)", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m7_14 [cluster="int.ToString(System.IFormatProvider)", file="CopyrightInfoFixture.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m7_26 [cluster="Unk.Equal", file="CopyrightInfoFixture.cs", label="Entry Unk.Equal", span=""];
m8_47 [cluster="CommandLine.Internal.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="EnumeratorsFixture.cs", label="Entry CommandLine.Internal.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="37-37"];
m8_23 [cluster="Unk.False", file="EnumeratorsFixture.cs", label="Entry Unk.False", span=""];
m8_26 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Tests.EnumeratorsFixture.CharIteration()", span="68-68"];
m8_27 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="IArgumentEnumerator e = new OneCharStringEnumerator(''abcd'')", span="70-70"];
m8_28 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="71-71"];
m8_33 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="78-78"];
m8_38 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="85-85"];
m8_43 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="92-92"];
m8_46 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="Exit CommandLine.Tests.EnumeratorsFixture.CharIteration()", span="68-68"];
m8_0 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Tests.EnumeratorsFixture.StringIteration()", span="40-40"];
m8_1 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="string valueOne = ''one''", span="42-42"];
m8_5 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="IArgumentEnumerator e = new StringArrayEnumerator(values)", span="47-47"];
m8_6 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="48-48"];
m8_2 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="string valueTwo = ''two''", span="43-43"];
m8_10 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="54-54"];
m8_3 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="string valueThree = ''three''", span="44-44"];
m8_14 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="60-60"];
m8_4 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="string[] values = { valueOne, valueTwo, valueThree }", span="46-46"];
m8_18 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="Exit CommandLine.Tests.EnumeratorsFixture.StringIteration()", span="40-40"];
m8_20 [cluster="CommandLine.Internal.IArgumentEnumerator.MoveNext()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Internal.IArgumentEnumerator.MoveNext()", span="38-38"];
m8_25 [cluster="Unk.True", file="EnumeratorsFixture.cs", label="Entry Unk.True", span=""];
m8_48 [cluster="CommandLine.Internal.IArgumentEnumerator.GetRemainingFromNext()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Internal.IArgumentEnumerator.GetRemainingFromNext()", span="33-33"];
m8_24 [cluster="Unk.Null", file="EnumeratorsFixture.cs", label="Entry Unk.Null", span=""];
m8_22 [cluster="Unk.Equal", file="EnumeratorsFixture.cs", label="Entry Unk.Equal", span=""];
m8_21 [cluster="Unk.Should", file="EnumeratorsFixture.cs", label="Entry Unk.Should", span=""];
m9_0 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.Only_program_name()", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.Tests.HeadingInfoFixture.Only_program_name()", span="41-41"];
m9_1 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.Only_program_name()", file="HeadingInfoFixture.cs", label="var hi = new HeadingInfo(''myprog'')", span="43-43"];
m9_2 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.Only_program_name()", file="HeadingInfoFixture.cs", label="string s = hi", span="44-44"];
m9_5 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.Only_program_name()", file="HeadingInfoFixture.cs", label="hi.WriteMessage(''a message'', sw)", span="49-49"];
m9_3 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.Only_program_name()", color=green, community=0, file="HeadingInfoFixture.cs", label="s.Should().Equal(''myprog'')", prediction=45, span="46-46"];
m9_4 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.Only_program_name()", file="HeadingInfoFixture.cs", label="var sw = new StringWriter()", span="48-48"];
m9_6 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.Only_program_name()", color=green, community=0, file="HeadingInfoFixture.cs", label="sw.ToString().Should().Equal(''myprog: a message'' + Environment.NewLine)", prediction=46, span="51-51"];
m9_7 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.Only_program_name()", file="HeadingInfoFixture.cs", label="Exit CommandLine.Text.Tests.HeadingInfoFixture.Only_program_name()", span="41-41"];
m9_11 [cluster="System.IO.StringWriter.StringWriter()", file="HeadingInfoFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m9_13 [cluster="System.IO.StringWriter.ToString()", file="HeadingInfoFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m9_22 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="62-62"];
m9_8 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="50-50"];
m9_14 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", span="55-55"];
m9_16 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="string s = hi", span="58-58"];
m9_18 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="var sw = new StringWriter()", span="62-62"];
m9_19 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="hi.WriteMessage(''hello unit-test'', sw)", span="63-63"];
m9_15 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="var hi = new HeadingInfo(''myecho'', ''2.5'')", span="57-57"];
m9_21 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="Exit CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", span="55-55"];
m9_12 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="106-106"];
m9_9 [cluster="Unk.Should", file="HeadingInfoFixture.cs", label="Entry Unk.Should", span=""];
m10_25 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="64-64"];
m10_40 [cluster="Unk.True", file="HelpOptionAttributeFixture.cs", label="Entry Unk.True", span=""];
m10_26 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m10_39 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m10_15 [cluster="CommandLine.Text.HelpText.AddOptions(object)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="367-367"];
m10_41 [cluster="System.Console.Write(string)", file="HelpOptionAttributeFixture.cs", label="Entry System.Console.Write(string)", span="0-0"];
m10_24 [cluster="System.IO.StringWriter.StringWriter()", file="HelpOptionAttributeFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m10_14 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="342-342"];
m10_16 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", span="74-74"];
m10_17 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="var options = new MockOptions()", span="76-76"];
m10_18 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="var writer = new StringWriter()", span="77-77"];
m10_22 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", span="74-74"];
m10_11 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="83-83"];
m10_23 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.MockOptions()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.MockOptions()", span="43-43"];
m10_27 [cluster="System.IO.StringWriter.ToString()", file="HelpOptionAttributeFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m10_12 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="62-62"];
m10_13 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="70-70"];
m10_42 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.Explicit_help_activation()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.HelpOptionAttributeFixture.Explicit_help_activation()", span="102-102"];
m10_43 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.Explicit_help_activation()", file="HelpOptionAttributeFixture.cs", label="var options = new MockOptions()", span="104-104"];
m10_44 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.Explicit_help_activation()", file="HelpOptionAttributeFixture.cs", label="var writer = new StringWriter()", span="105-105"];
m10_45 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.Explicit_help_activation()", color=green, community=0, file="HelpOptionAttributeFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                    new string[] { ''--help'' }, options, writer)", prediction=47, span="107-108"];
m10_47 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.Explicit_help_activation()", file="HelpOptionAttributeFixture.cs", label="string helpText = writer.ToString()", span="112-112"];
m10_46 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.Explicit_help_activation()", color=green, community=0, file="HelpOptionAttributeFixture.cs", label="ResultShouldBeFalse()", prediction=48, span="110-110"];
m10_48 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.Explicit_help_activation()", color=green, community=0, file="HelpOptionAttributeFixture.cs", label="(helpText.Length > 0).Should().Be.True()", prediction=49, span="113-113"];
m10_49 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.Explicit_help_activation()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.HelpOptionAttributeFixture.Explicit_help_activation()", span="102-102"];
m10_30 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", span="87-87"];
m10_31 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="var options = new MockOptions()", span="89-89"];
m10_32 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="var writer = new StringWriter()", span="90-90"];
m10_35 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="string helpText = writer.ToString()", span="97-97"];
m10_37 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Console.Write(helpText)", span="100-100"];
m10_38 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", span="87-87"];
m10_0 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", span="58-58"];
m10_1 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="var help = new HelpText(new HeadingInfo(''MyProgram'', ''1.0''))", span="60-60"];
m10_2 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.Copyright = new CopyrightInfo(''Authors, Inc.'', 2007)", span="61-61"];
m10_3 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddPreOptionsLine(''This software is under the terms of the XYZ License'')", span="62-62"];
m10_4 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddPreOptionsLine(''(http://license-text.org/show.cgi?xyz).'')", span="63-63"];
m10_5 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddPreOptionsLine(''Usage: myprog --input equations-file.xml -o result-file.xml'')", span="64-64"];
m10_6 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddPreOptionsLine(''       myprog -i equations-file.xml --paralell'')", span="65-65"];
m10_7 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddPreOptionsLine(''       myprog -i equations-file.xml -vo result-file.xml'')", span="66-66"];
m10_8 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddOptions(this)", span="67-67"];
m10_9 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="return help;", span="68-68"];
m10_10 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", span="58-58"];
m10_29 [cluster="Unk.Equal", file="HelpOptionAttributeFixture.cs", label="Entry Unk.Equal", span=""];
m10_50 [file="HelpOptionAttributeFixture.cs", label="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions", span=""];
m10_51 [file="HelpOptionAttributeFixture.cs", label="CommandLine.Tests.HelpOptionAttributeFixture", span=""];
m11_133 [cluster="string.Format(System.IFormatProvider, string, object)", file="HelpTextFixture.cs", label="Entry string.Format(System.IFormatProvider, string, object)", span="0-0"];
m11_66 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="193-193"];
m11_70 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", color=green, community=0, file="HelpTextFixture.cs", label="string[] lines = help.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", prediction=50, span="199-199"];
m11_77 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="193-193"];
m11_178 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="407-407"];
m11_179 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", color=green, community=0, file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", prediction=51, span="409-409"];
m11_180 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-i0'' }, options)", span="411-412"];
m11_182 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="407-407"];
m11_183 [cluster="CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_mutual_exclusiveness()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_mutual_exclusiveness()", span="410-410"];
m11_184 [cluster="CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_mutual_exclusiveness()", color=green, community=0, file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", prediction=52, span="412-412"];
m11_185 [cluster="CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_mutual_exclusiveness()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''0'', ''-ap'' }, options)", span="414-415"];
m11_187 [cluster="CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_mutual_exclusiveness()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_mutual_exclusiveness()", span="410-410"];
m11_162 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="45-45"];
m11_203 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", span="453-453"];
m11_204 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="string optionHelp = null", span="456-456"];
m11_205 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="e.Option.ShortName.Value", span="458-458"];
m11_210 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="e.Option.Required", span="469-469"];
m11_212 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="e.Option.HelpText = optionHelp", span="474-474"];
m11_206 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="'v'", span="460-460"];
m11_208 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="'i'", span="464-464"];
m11_207 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Kommentar umfassend Operationen.''", span="461-461"];
m11_209 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Gibt den Eingang an zu bearbeitenden Datei.''", span="465-465"];
m11_211 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Erforderlich. '' + optionHelp", span="471-471"];
m11_213 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", span="453-453"];
m11_134 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="273-273"];
m11_135 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", color=green, community=0, file="HelpTextFixture.cs", label="var local = new HelpText {\r\n                AddDashesToOption = true,\r\n                Heading = new HeadingInfo(''AddOptionsWithDashes''),\r\n                Copyright = new CopyrightInfo(''Author'', DateTime.Now.Year)\r\n            }", prediction=53, span="275-279"];
m11_136 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsSimple())", span="280-280"];
m11_137 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="282-282"];
m11_139 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="286-286"];
m11_138 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="284-284"];
m11_141 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="273-273"];
m11_166 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="385-385"];
m11_167 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", color=green, community=0, file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", prediction=54, span="387-387"];
m11_168 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''abc'' }, options)", span="389-390"];
m11_170 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="385-385"];
m11_160 [cluster="CommandLine.Tests.Mocks.RPEOptions.RPEOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Mocks.RPEOptions.RPEOptions()", span="6-6"];
m11_201 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="115-115"];
m11_146 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", span="291-291"];
m11_147 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", color=green, community=0, file="HelpTextFixture.cs", label="var sw = new StringWriter()", prediction=55, span="293-293"];
m11_148 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="var options = new RPEOptions()", span="294-294"];
m11_149 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="var parser = new CommandLineParser(new CommandLineParserSettings {\r\n                MutuallyExclusive = true, CaseSensitive = true, HelpWriter = sw})", span="295-296"];
m11_152 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", color=green, community=0, file="HelpTextFixture.cs", label="var outsw = sw.ToString()", prediction=56, span="301-301"];
m11_150 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="var result = parser.ParseArguments(new string[] {''--option-b'', ''hello'', ''-cWORLD''}, options)", span="297-297"];
m11_153 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="Console.WriteLine(outsw)", span="303-303"];
m11_154 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="var lines = outsw.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="305-305"];
m11_157 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", color=green, community=0, file="HelpTextFixture.cs", label="lines[2].Should().Equal(''-a required option is missing.'')", prediction=57, span="309-309"];
m11_158 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", span="291-291"];
m11_189 [cluster="CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_format_and_mutual_exclusiveness()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_format_and_mutual_exclusiveness()", span="421-421"];
m11_190 [cluster="CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_format_and_mutual_exclusiveness()", color=green, community=0, file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", prediction=58, span="423-423"];
m11_191 [cluster="CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_format_and_mutual_exclusiveness()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''zero'', ''-pa'' }, options)", span="425-426"];
m11_193 [cluster="CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_format_and_mutual_exclusiveness()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_format_and_mutual_exclusiveness()", span="421-421"];
m11_21 [cluster="CommandLine.Text.HelpText.AddOptions(object)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="367-367"];
m11_79 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="209-209"];
m11_80 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", color=green, community=0, file="HelpTextFixture.cs", label="var local = new HelpText(''Heading Info.'')", prediction=59, span="211-211"];
m11_81 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.MaximumDisplayWidth = 40", span="212-212"];
m11_82 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')", span="213-213"];
m11_83 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptions())", span="214-214"];
m11_84 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="215-215"];
m11_85 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="217-217"];
m11_86 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="219-219"];
m11_93 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="209-209"];
m11_129 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="53-53"];
m11_142 [cluster="CommandLine.Text.Tests.HelpTextFixture.Create_basic_instance()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.Create_basic_instance()", span="283-283"];
m11_143 [cluster="CommandLine.Text.Tests.HelpTextFixture.Create_basic_instance()", color=green, community=0, file="HelpTextFixture.cs", label="var local = new HelpText()", prediction=60, span="285-285"];
m11_145 [cluster="CommandLine.Text.Tests.HelpTextFixture.Create_basic_instance()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.Create_basic_instance()", span="283-283"];
m11_20 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="342-342"];
m11_159 [cluster="System.IO.StringWriter.StringWriter()", file="HelpTextFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m11_53 [cluster="CommandLine.Text.Tests.HelpTextFixture.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", color=green, community=0, file="HelpTextFixture.cs", label="_helpText.MaximumDisplayWidth = 40", prediction=61, span="171-171"];
m11_171 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", span="98-98"];
m11_35 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", color=green, community=0, file="HelpTextFixture.cs", label="string help = local.ToString()", prediction=62, span="158-158"];
m11_34 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''This is a second post-options line.'')", span="156-156"];
m11_36 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", color=green, community=0, file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", prediction=63, span="160-160"];
m11_33 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''This is a first post-options line.'')", span="155-155"];
m11_27 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", span="140-140"];
m11_32 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptions())", span="154-154"];
m11_28 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="149-149"];
m11_29 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="var local = new HelpText(''Heading Info.'')", span="151-151"];
m11_30 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''This is a first pre-options line.'')", span="152-152"];
m11_31 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''This is a second pre-options line.'')", span="153-153"];
m11_112 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="250-250"];
m11_113 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", color=green, community=0, file="HelpTextFixture.cs", label="var year = DateTime.Now.Year", prediction=64, span="252-252"];
m11_114 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="var local = new HelpText()", span="253-253"];
m11_116 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.Copyright = new CopyrightInfo(''Author'', year)", span="255-255"];
m11_122 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="264-264"];
m11_115 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.Heading = new HeadingInfo(''Parameterless Constructor Test.'')", span="254-254"];
m11_117 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="256-256"];
m11_118 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsSimple())", span="257-257"];
m11_119 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="258-258"];
m11_120 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="260-260"];
m11_121 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="262-262"];
m11_128 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="250-250"];
m11_19 [cluster="string.Concat(string, string)", file="HelpTextFixture.cs", label="Entry string.Concat(string, string)", span="0-0"];
m11_94 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", span="221-221"];
m11_95 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", color=green, community=0, file="HelpTextFixture.cs", label="var local = new HelpText(''Customizing Test.'')", prediction=65, span="223-223"];
m11_96 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="local.FormatOptionHelpText += new EventHandler<FormatOptionHelpTextEventArgs>(CustomizeOptionsFormat_FormatOptionHelpText)", span="224-224"];
m11_97 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="225-225"];
m11_98 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsWithDescription())", span="226-226"];
m11_99 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="227-227"];
m11_100 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="229-229"];
m11_101 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="231-231"];
m11_102 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="233-233"];
m11_105 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", color=green, community=0, file="HelpTextFixture.cs", label="lines[3].Should().Equal(''  v, verbose       Kommentar umfassend Operationen.'')", prediction=66, span="236-236"];
m11_106 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", color=green, community=0, file="HelpTextFixture.cs", label="lines[4].Should().Equal(''  i, input-file    Erforderlich. Gibt den Eingang an zu bearbeitenden Datei.'')", prediction=66, span="237-237"];
m11_107 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", color=green, community=0, file="HelpTextFixture.cs", label="lines[6].Should().Equal(''Post-Options.'')", prediction=66, span="238-238"];
m11_108 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", span="221-221"];
m11_22 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="134-134"];
m11_24 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="134-134"];
m11_14 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="83-83"];
m11_16 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="HelpTextFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="83-83"];
m11_65 [cluster="Unk.ToString", file="HelpTextFixture.cs", label="Entry Unk.ToString", span=""];
m11_110 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", span="65-65"];
m11_17 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText(object, int)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText(object, int)", span="429-429"];
m11_42 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="588-588"];
m11_164 [cluster="Unk.False", file="HelpTextFixture.cs", label="Entry Unk.False", span=""];
m11_165 [cluster="System.IO.StringWriter.ToString()", file="HelpTextFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m11_44 [cluster="CommandLine.Text.Tests.HelpTextFixture.Meta_value()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.Meta_value()", span="158-158"];
m11_49 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", color=green, community=0, file="HelpTextFixture.cs", label="string help = local.ToString()", prediction=69, span="171-171"];
m11_48 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsWithMetaValue())", span="169-169"];
m11_47 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="HelpTextFixture.cs", label="var local = new HelpText(''Meta Value.'')", span="168-168"];
m11_45 [cluster="Unk.Equal", file="HelpTextFixture.cs", label="Entry Unk.Equal", span=""];
m11_46 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MetaValue()", span="166-166"];
m11_50 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="172-172"];
m11_52 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.MetaValue()", span="166-166"];
m11_54 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", color=green, community=0, file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", prediction=70, span="177-177"];
m11_58 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new[] {Environment.NewLine}, StringSplitOptions.None)", span="183-183"];
m11_25 [cluster="Unk.AddPreOptionsLine", file="HelpTextFixture.cs", label="Entry Unk.AddPreOptionsLine", span=""];
m11_15 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="62-62"];
m11_64 [cluster="Unk.AddOptions", file="HelpTextFixture.cs", label="Entry Unk.AddOptions", span=""];
m11_173 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="396-396"];
m11_174 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", color=green, community=0, file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", prediction=71, span="398-398"];
m11_175 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-j0'' }, options)", span="400-401"];
m11_177 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="396-396"];
m11_131 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="70-70"];
m11_130 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="50-50"];
m11_41 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m11_161 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="70-70"];
m11_202 [cluster="Unk.Exactly", file="HelpTextFixture.cs", label="Entry Unk.Exactly", span=""];
m11_18 [cluster="string.IsNullOrEmpty(string)", file="HelpTextFixture.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m11_172 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="66-66"];
m11_109 [cluster="EventHandler<FormatOptionHelpTextEventArgs>.cstr", file="HelpTextFixture.cs", label="Entry EventHandler<FormatOptionHelpTextEventArgs>.cstr", span=""];
m11_200 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", span="35-35"];
m11_194 [cluster="CommandLine.Text.Tests.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", span="433-433"];
m11_195 [cluster="CommandLine.Text.Tests.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", color=green, community=0, file="HelpTextFixture.cs", label="var options = new ComplexOptions()", prediction=72, span="435-435"];
m11_196 [cluster="CommandLine.Text.Tests.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", file="HelpTextFixture.cs", label="var writer = new StringWriter()", span="436-436"];
m11_197 [cluster="CommandLine.Text.Tests.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", file="HelpTextFixture.cs", label="new CommandLineParser(new CommandLineParserSettings(false,  false, writer)).ParseArguments(new string[0], options, writer)", span="438-438"];
m11_199 [cluster="CommandLine.Text.Tests.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", span="433-433"];
m11_0 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="107-107"];
m11_1 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="var help = new HelpText(new HeadingInfo(''unittest'', ''1.9''))", span="109-109"];
m11_2 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AdditionalNewLineAfterOption = true", span="110-110"];
m11_3 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.Copyright = new CopyrightInfo(''CommandLine.dll Author'', 2005, 2011)", span="111-111"];
m11_4 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="string errors = help.RenderParsingErrorsText(this, 2)", span="114-114"];
m11_6 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(string.Concat(Environment.NewLine, ''ERROR(S):''))", span="117-117"];
m11_7 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(errors)", span="118-118"];
m11_8 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''This is free software. You may redistribute copies of it under the terms of'')", span="121-121"];
m11_9 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''the MIT License <http://www.opensource.org/licenses/mit-license.php>.'')", span="122-122"];
m11_10 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''Usage: Please run the unit...'')", span="123-123"];
m11_11 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddOptions(this)", span="124-124"];
m11_12 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="return help;", span="126-126"];
m11_5 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="!string.IsNullOrEmpty(errors)", span="115-115"];
m11_13 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="107-107"];
m11_111 [cluster="System.Console.WriteLine(string)", file="HelpTextFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m11_40 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", span="47-47"];
m11_78 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", span="83-83"];
m11_39 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="149-149"];
m11_132 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", span="92-92"];
m11_188 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="105-105"];
m11_43 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m11_163 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="94-94"];
m11_214 [file="HelpTextFixture.cs", label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", span=""];
m11_215 [file="HelpTextFixture.cs", label="CommandLine.Text.Tests.HelpTextFixture", span=""];
m12_15 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs", label="Entry CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", span="56-56"];
m12_0 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs", label="Entry CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", span="43-43"];
m12_7 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs", label="Exit CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", span="43-43"];
m12_9 [cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="MultiLineTextAttributeFixture.cs", label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0"];
m12_10 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="MultiLineTextAttributeFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m12_8 [cluster="object.GetType()", file="MultiLineTextAttributeFixture.cs", label="Entry object.GetType()", span="0-0"];
m12_14 [cluster="string.Split(string[], System.StringSplitOptions)", file="MultiLineTextAttributeFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m12_11 [cluster="Unk.Should", file="MultiLineTextAttributeFixture.cs", label="Entry Unk.Should", span=""];
m12_13 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="MultiLineTextAttributeFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m12_17 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.Assembly_usage_should_offer_read_only_property_named_value()", color=green, community=0, file="MultiLineTextAttributeFixture.cs", label="IEnumerable<AssemblyUsageAttribute> usageAttributes = this.GetType().Assembly.GetCustomAttributes(typeof(AssemblyUsageAttribute), false) as AssemblyUsageAttribute[]", prediction=73, span="58-58"];
m12_18 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.Assembly_usage_should_offer_read_only_property_named_value()", color=green, community=0, file="MultiLineTextAttributeFixture.cs", label="usageAttributes.Count().Should().Be(1)", prediction=74, span="60-60"];
m12_19 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.Assembly_usage_should_offer_read_only_property_named_value()", color=green, community=0, file="MultiLineTextAttributeFixture.cs", label="usageAttributes.Single().Value.Should().Be(@''[no usage, this is a dll]'' + Environment.NewLine)", prediction=73, span="61-61"];
m12_20 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.Assembly_usage_should_offer_read_only_property_named_value()", file="MultiLineTextAttributeFixture.cs", label="CommandLine.Text.Tests.MultiLineTextAttributeFixture", span=""];
m13_18 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsUsingInstance()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="var proof = new Random().Next(int.MaxValue)", prediction=76, span="60-60"];
m13_19 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsUsingInstance()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithVerbs()", span="61-61"];
m13_21 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsUsingInstance()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="options.CommitVerb.CreationProof = proof", prediction=77, span="63-63"];
m13_22 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsUsingInstance()", file="MutuallyExclusiveParsingFixture.cs", label="Result = Parser.ParseArguments(new string[] { ''commit'', ''--amend'' }, options)", span="65-65"];
m13_38 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="72-72"];
m13_6 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="options.AddVerb.CreationProof.Should().Be.Null()", prediction=78, span="52-52"];
m13_13 [cluster="CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", span="35-35"];
m13_15 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m13_17 [cluster="Unk.Equal", file="MutuallyExclusiveParsingFixture.cs", label="Entry Unk.Equal", span=""];
m13_24 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", span="65-65"];
m13_23 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", prediction=79, span="64-64"];
m13_25 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithDefaultSet()", span="67-67"];
m13_49 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSetAndOneOption.OptionsWithMultipleSetAndOneOption()", file="MutuallyExclusiveParsingFixture.cs", label="CommandLine.Tests.VerbsFixture", span=""];
m13_30 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", prediction=80, span="65-65"];
m13_31 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", span="76-76"];
m13_32 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithMultipleSet()", prediction=81, span="78-78"];
m13_7 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", file="MutuallyExclusiveParsingFixture.cs", label="options.AddVerb.Patch.Should().Be.True()", span="53-53"];
m13_8 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="options.AddVerb.FileName[0].Should().Equal(''untracked.bin'')", prediction=78, span="54-54"];
m13_12 [cluster="Unk.Null", file="MutuallyExclusiveParsingFixture.cs", label="Entry Unk.Null", span=""];
m13_37 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", span="76-76"];
m13_39 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", span="87-87"];
m13_40 [cluster="System.IO.StringWriter.ToString()", file="MutuallyExclusiveParsingFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m13_42 [cluster="CommandLine.Tests.VerbsFixture.FailedVerbParsingPrintsParticularHelpScreen()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithVerbs()", prediction=83, span="89-89"];
m13_43 [cluster="CommandLine.Tests.VerbsFixture.FailedVerbParsingPrintsParticularHelpScreen()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="var testWriter = new StringWriter()", prediction=84, span="90-90"];
m13_14 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m13_2 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="options.AddVerb.Should().Be.Null()", prediction=85, span="45-45"];
m13_4 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeTrue()", span="48-48"];
m13_5 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", file="MutuallyExclusiveParsingFixture.cs", label="options.AddVerb.Should().Not.Be.Null()", span="51-51"];
m13_44 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", span="96-96"];
m13_45 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithMultipleSetAndOneOption()", prediction=86, span="98-98"];
m13_48 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", span="96-96"];
m13_0 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", span="38-38"];
m13_1 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", span="38-38"];
m13_50 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", span="105-105"];
m13_51 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithMultipleSetAndOneOption()", span="107-107"];
m13_57 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", span="105-105"];
m13_58 [file="MutuallyExclusiveParsingFixture.cs", label="CommandLine.Tests.MutuallyExclusiveParsingFixture", span=""];
m14_38 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", prediction=87, span="80-80"];
m14_39 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", span="96-96"];
m14_40 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", prediction=88, span="98-98"];
m14_29 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--enum=ReadWrite'' }, options)", prediction=89, span="79-79"];
m14_30 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeTrue()", span="81-81"];
m14_32 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="options = new NullableTypesOptions()", prediction=90, span="84-84"];
m14_34 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="ResultShouldBeTrue()", prediction=91, span="87-87"];
m14_18 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i'', ''string-value'' }, options)", span="61-61"];
m14_19 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="ResultShouldBeFalse()", prediction=91, span="63-63"];
m14_22 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", span="67-67"];
m14_58 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", prediction=93, span="114-114"];
m14_59 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", prediction=91, span="130-130"];
m14_60 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", prediction=95, span="132-132"];
m14_14 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m14_24 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-int'' }, options)", prediction=96, span="70-70"];
m14_25 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeFalse()", span="72-72"];
m14_28 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="78-78"];
m14_23 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", prediction=97, span="69-69"];
m14_43 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="103-103"];
m14_12 [cluster="CommandLine.Tests.Mocks.NullableTypesOptions.NullableTypesOptions()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.NullableTypesOptions.NullableTypesOptions()", span="35-35"];
m14_48 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", prediction=98, span="105-105"];
m14_49 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", span="114-114"];
m14_54 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="options = new NullableTypesOptions()", prediction=99, span="122-122"];
m14_50 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="116-116"];
m14_44 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--enum'' }, options)", prediction=100, span="104-104"];
m14_45 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeFalse()", span="106-106"];
m14_17 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", prediction=101, span="60-60"];
m14_16 [cluster="Unk.Equal", file="NullableTypesParsingFixture.cs", label="Entry Unk.Equal", span=""];
m14_63 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="137-137"];
m14_13 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m14_64 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-d'' }, options)", span="138-138"];
m14_65 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="ResultShouldBeFalse()", prediction=91, span="140-140"];
m14_68 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", prediction=103, span="146-146"];
m14_0 [cluster="CommandLine.Tests.NullableTypesParsingFixture.NullableTypesParsingFixture()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.NullableTypesParsingFixture()", span="41-41"];
m14_2 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", prediction=91, span="46-46"];
m14_1 [cluster="CommandLine.Tests.NullableTypesParsingFixture.NullableTypesParsingFixture()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.NullableTypesParsingFixture()", span="41-41"];
m14_3 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="48-48"];
m14_7 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="options = new NullableTypesOptions()", prediction=105, span="54-54"];
m14_69 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", span="148-148"];
m14_70 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", prediction=106, span="150-150"];
m14_74 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="options = new NullableTypesOptions()", prediction=107, span="156-156"];
m14_11 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", span="46-46"];
m14_81 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", span="148-148"];
m14_82 [file="NullableTypesParsingFixture.cs", label="CommandLine.Tests.NullableTypesParsingFixture", span=""];
m15_75 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", span="138-138"];
m15_77 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", prediction=108, span="154-154"];
m15_76 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m15_78 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="156-156"];
m15_165 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", span="324-324"];
m15_166 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", span="37-37"];
m15_167 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", span="331-331"];
m15_12 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--strarr'', ''alfa'', ''beta'', ''gamma'' }, options)", span="56-56"];
m15_13 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", prediction=109, span="58-58"];
m15_16 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", span="63-63"];
m15_17 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", prediction=110, span="65-65"];
m15_56 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-shere'', ''-i999'', ''--strarr=0'', ''1'', ''2'', ''3'', ''4'', ''5'', ''6'', ''7'', ''8'', ''9'' , ''--switch'', ''f1.xml'', ''f2.xml''}, options)", prediction=111, span="122-123"];
m15_57 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", prediction=112, span="125-125"];
m15_58 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="options.StringValue.Should().Equal(''here'')", prediction=112, span="126-126"];
m15_61 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="options.BooleanValue.Should().Be.True()", prediction=112, span="129-129"];
m15_62 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''f1.xml'', ''f2.xml'' }, options.Items)", prediction=112, span="130-130"];
m15_64 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''f1.xml'', ''f2.xml'' }, options.Items)", span="134-134"];
m15_65 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", span="123-123"];
m15_66 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_no_value_to_a_string_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_no_value_to_a_string_array_option_fails()", span="134-134"];
m15_83 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-y'', ''one'', ''2'', ''3'' }, options)", prediction=116, span="163-163"];
m15_84 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", prediction=117, span="165-165"];
m15_87 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", prediction=118, span="170-170"];
m15_89 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--intarr'', ''1'', ''two'', ''3'' }, options)", prediction=119, span="173-173"];
m15_90 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="175-175"];
m15_93 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", prediction=120, span="180-180"];
m15_96 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="187-187"];
m15_18 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-zapple'', ''kiwi'' }, options)", span="66-66"];
m15_19 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", prediction=121, span="68-68"];
m15_20 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''apple'', ''kiwi'' }, options.StringArrayValue)", prediction=110, span="69-69"];
m15_22 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", span="73-73"];
m15_23 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", prediction=123, span="75-75"];
m15_55 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArrayAndValueList()", prediction=112, span="121-121"];
m15_97 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-y'' }, options)", prediction=125, span="188-188"];
m15_98 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="190-190"];
m15_99 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", prediction=126, span="192-192"];
m15_101 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="195-195"];
m15_104 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_double_array_option_using_short_name()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", prediction=127, span="203-203"];
m15_68 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", prediction=128, span="138-138"];
m15_67 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48"];
m15_69 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="140-140"];
m15_72 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="145-145"];
m15_109 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, 2.3, .9 }, options.DoubleArrayValue)", span="211-211"];
m15_110 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", prediction=129, span="205-205"];
m15_111 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", prediction=130, span="217-217"];
m15_115 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="227-227"];
m15_112 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", prediction=112, span="219-219"];
m15_117 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", prediction=112, span="229-229"];
m15_116 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="228-228"];
m15_118 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="231-231"];
m15_122 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", prediction=112, span="240-240"];
m15_121 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="239-239"];
m15_123 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="241-241"];
m15_127 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="251-251"];
m15_124 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", prediction=134, span="243-243"];
m15_128 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="252-252"];
m15_175 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", prediction=135, span="345-345"];
m15_176 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", span="351-351"];
m15_178 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", prediction=136, span="354-354"];
m15_177 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="353-353"];
m15_179 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="355-355"];
m15_182 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { 1.2, 1.23, 1.234 }, options.DoubleArrayValue)", span="359-359"];
m15_169 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", span="331-331"];
m15_170 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", span="338-338"];
m15_172 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_integer_with_long_name()", file="OptionArrayAttributeParsingFixture.cs", label="base.Parser.ParseArguments(new string[] { ''--bintarr'', ''1'', ''2'', ''3'' }, new SimpleOptionsWithBadOptionArray())", span="339-339"];
m15_185 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new OptionsWithUIntArray()", span="361-361"];
m15_46 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-i'', ''191919'', ''-z'', ''one'', ''two'', ''three'', ''--switch'', ''--string=near'' }, options)", span="108-109"];
m15_47 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", prediction=112, span="111-111"];
m15_50 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="options.BooleanValue.Should().Be.True()", prediction=112, span="114-114"];
m15_51 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="options.StringValue.Should().Equal(''near'')", prediction=112, span="115-115"];
m15_54 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", span="119-119"];
m15_10 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", span="53-53"];
m15_163 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_short_name()", span="319-319"];
m15_195 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array_using_short_names()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new OptionsWithUIntArray()", span="379-379"];
m15_129 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="253-253"];
m15_131 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", prediction=140, span="257-257"];
m15_130 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", span="217-217"];
m15_132 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="259-259"];
m15_135 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="268-268"];
m15_137 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="270-270"];
m15_139 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="273-273"];
m15_144 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", prediction=112, span="284-284"];
m15_143 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="283-283"];
m15_145 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", prediction=112, span="285-285"];
m15_149 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="296-296"];
m15_150 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="297-297"];
m15_146 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", prediction=112, span="287-287"];
m15_152 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", prediction=112, span="299-299"];
m15_153 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="301-301"];
m15_158 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="314-314"];
m15_136 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="269-269"];
m15_157 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="313-313"];
m15_160 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="316-316"];
m15_24 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--strarr=apple'', ''kiwi'' }, options)", prediction=145, span="76-76"];
m15_25 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="78-78"];
m15_26 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''apple'', ''kiwi'' }, options.StringArrayValue)", prediction=123, span="79-79"];
m15_28 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_after()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_after()", span="83-83"];
m15_29 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_after()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="85-85"];
m15_162 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_short_name()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="base.Parser.ParseArguments(new string[] { ''-v'', ''a'', ''b'', ''c'' }, new SimpleOptionsWithBadOptionArray())", prediction=147, span="321-321"];
m15_2 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-z'', ''alfa'', ''beta'', ''gamma'' }, options)", prediction=148, span="46-46"];
m15_3 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="48-48"];
m15_4 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''alfa'', ''beta'', ''gamma'' }, options.StringArrayValue)", prediction=149, span="49-49"];
m15_6 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithArray.SimpleOptionsWithArray()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithArray.SimpleOptionsWithArray()", span="35-35"];
m15_7 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", span="47-47"];
m15_44 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'' }, options.StringArrayValue)", span="105-105"];
m15_45 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", span="98-98"];
m15_30 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", prediction=150, span="87-87"];
m15_31 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="89-89"];
m15_34 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'' }, options.StringArrayValue)", span="93-93"];
m15_184 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", span="351-351"];
m15_186 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", prediction=151, span="367-367"];
m15_187 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="var options = new OptionsWithUIntArray()", prediction=152, span="369-369"];
m15_191 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new uint[] {10, 20, 30, 40}, options.ArrayOne)", span="379-379"];
m15_192 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new uint[] {11, 22, 33, 44}, options.ArrayTwo)", span="380-380"];
m15_194 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", span="367-367"];
m15_201 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new uint[] {10, 20, 30, 40}, options.ArrayOne)", prediction=112, span="397-397"];
m15_197 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="var options = new OptionsWithUIntArray()", prediction=112, span="387-387"];
m15_196 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", span="385-385"];
m15_202 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new uint[] {11, 22, 33, 44}, options.ArrayTwo)", span="398-398"];
m15_204 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", span="385-385"];
m15_39 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-s'', ''before'', ''-z'', ''one'', ''two'', ''three'' }, options)", span="97-97"];
m15_40 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", prediction=155, span="99-99"];
m15_9 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m15_11 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="55-55"];
m15_105 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", span="205-205"];
m15_106 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="207-207"];
m15_173 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", span="345-345"];
m15_81 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", span="160-160"];
m15_82 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", prediction=156, span="162-162"];
m15_8 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithArray.SimpleOptionsWithArray()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithArray.SimpleOptionsWithArray()", span="35-35"];
m15_183 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="361-361"];
m15_0 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.OptionArrayAttributeParsingFixture()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.OptionArrayAttributeParsingFixture()", span="42-42"];
m15_1 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.OptionArrayAttributeParsingFixture()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.OptionArrayAttributeParsingFixture()", span="42-42"];
m15_37 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", span="94-94"];
m15_38 [cluster="Unk.Equal", file="OptionArrayAttributeParsingFixture.cs", label="Entry Unk.Equal", span=""];
m15_36 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", span="87-87"];
m15_205 [file="OptionArrayAttributeParsingFixture.cs", label="CommandLine.Tests.OptionArrayAttributeParsingFixture", span=""];
m16_86 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="OptionInfo.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="65-65"];
m16_90 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.CreateInstance(object)", span="245-245"];
m16_91 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", file="OptionInfo.cs", label="_property.SetValue(target, Activator.CreateInstance(_property.PropertyType), null)", span="249-249"];
m16_92 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", file="OptionInfo.cs", label=Exception, span="251-251"];
m16_93 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", file="OptionInfo.cs", label="throw new CommandLineParserException(SR.CommandLineParserException_CannotCreateInstanceForVerbCommand, e);", span="253-253"];
m16_94 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.CreateInstance(object)", span="245-245"];
m16_78 [cluster="string.Split(params char[])", file="OptionInfo.cs", label="Entry string.Split(params char[])", span="0-0"];
m16_26 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="87-87"];
m16_23 [cluster="CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", file="OptionInfo.cs", label="Entry CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", span="207-207"];
m16_87 [cluster="CommandLine.Internal.OptionInfo.GetValue(object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.GetValue(object)", span="240-240"];
m16_88 [cluster="CommandLine.Internal.OptionInfo.GetValue(object)", file="OptionInfo.cs", label="return _property.GetValue(target, null);", span="242-242"];
m16_89 [cluster="CommandLine.Internal.OptionInfo.GetValue(object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.GetValue(object)", span="240-240"];
m16_27 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="var elementType = _property.PropertyType.GetElementType()", span="89-89"];
m16_25 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", span="107-107"];
m16_55 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", span="107-107"];
m16_39 [cluster="System.Array.CreateInstance(System.Type, int)", file="OptionInfo.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m16_42 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="OptionInfo.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m16_41 [cluster="System.Array.SetValue(object, int)", file="OptionInfo.cs", label="Entry System.Array.SetValue(object, int)", span="0-0"];
m16_40 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="OptionInfo.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m16_17 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="OptionInfo.cs", label="return SetValueList(value, options);", span="78-78"];
m16_15 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetValue(string, object)", span="74-74"];
m16_16 [cluster="CommandLine.Internal.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="Entry CommandLine.Internal.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo)", span="45-45"];
m16_18 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="OptionInfo.cs", label="ReflectionUtil.IsNullableType(_property.PropertyType)", span="80-80"];
m16_21 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", color=green, community=0, file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetValue(string, object)", prediction=157, span="74-74"];
m16_22 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", color=green, community=0, file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetValueList(string, object)", prediction=157, span="152-152"];
m16_24 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", span="128-128"];
m16_62 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", span="128-128"];
m16_65 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetValue(bool, object)", span="146-146"];
m16_66 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs", label="_property.SetValue(options, value, null)", span="148-148"];
m16_67 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs", label="return true;", span="149-149"];
m16_68 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetValue(bool, object)", span="146-146"];
m16_0 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", span="45-45"];
m16_1 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="attribute == null", span="47-47"];
m16_3 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="property == null", span="51-51"];
m16_5 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_required = attribute.Required", span="55-55"];
m16_6 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_shortName = attribute.ShortName", span="57-57"];
m16_7 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_longName = attribute.LongName", span="58-58"];
m16_8 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="59-59"];
m16_9 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_defaultValue = attribute.DefaultValue", span="60-60"];
m16_10 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_hasDefaultValue = attribute.HasDefaultValue", span="61-61"];
m16_11 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_attribute = attribute", span="62-62"];
m16_12 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_property = property", span="62-62"];
m16_2 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="throw new ArgumentNullException(''attribute'', SR.ArgumentNullException_AttributeCannotBeNull);", span="49-49"];
m16_4 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="throw new ArgumentNullException(''property'', SR.ArgumentNullException_PropertyCannotBeNull);", span="53-53"];
m16_13 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", prediction=157, span="45-45"];
m16_79 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="OptionInfo.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m16_95 [cluster="System.Activator.CreateInstance(System.Type)", file="OptionInfo.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m16_56 [cluster="System.Enum.Parse(System.Type, string, bool)", file="OptionInfo.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m16_38 [cluster="System.Type.GetElementType()", file="OptionInfo.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m16_63 [cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", file="OptionInfo.cs", label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0"];
m16_76 [cluster="System.Collections.Generic.List<T>.List()", file="OptionInfo.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m16_14 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="OptionInfo.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m16_64 [cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", file="OptionInfo.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0"];
m16_80 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetDefault(object)", span="164-164"];
m16_81 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label=_hasDefaultValue, span="166-166"];
m16_82 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label="_property.SetValue(options, _defaultValue, null)", span="170-170"];
m16_83 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label=Exception, span="172-172"];
m16_84 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label="throw new CommandLineParserException(''Bad default value.'', e);", span="174-174"];
m16_85 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetDefault(object)", span="164-164"];
m16_69 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="_property.SetValue(options, new List<string>(), null)", span="154-154"];
m16_70 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="var fieldRef = (IList<string>)_property.GetValue(options, null)", span="155-155"];
m16_71 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="var values = value.Split(((OptionListAttribute)_attribute).Separator)", span="156-156"];
m16_73 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="fieldRef.Add(item)", span="159-159"];
m16_72 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label=values, span="157-157"];
m16_74 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="return true;", span="161-161"];
m16_75 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetValueList(string, object)", span="152-152"];
m16_28 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="var array = Array.CreateInstance(elementType, values.Count)", span="90-90"];
m16_31 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="array.SetValue(Convert.ChangeType(values[i], elementType, Thread.CurrentThread.CurrentCulture), i)", span="96-96"];
m16_32 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="_property.SetValue(options, array, null)", span="97-97"];
m16_29 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="int i = 0", span="92-92"];
m16_30 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="i < array.Length", span="92-92"];
m16_35 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="i++", span="92-92"];
m16_36 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="return true;", span="104-104"];
m16_33 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label=FormatException, span="99-99"];
m16_34 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="return false;", span="101-101"];
m16_37 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="87-87"];
m16_77 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="OptionInfo.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m16_96 [file="OptionInfo.cs", label="CommandLine.Internal.OptionInfo", span=""];
m17_19 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", span="64-64"];
m17_20 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="var oa = new OptionAttribute(shortName, longName)", span="66-66"];
m17_21 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="var oi = oa.CreateOptionInfo()", span="67-67"];
m17_22 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="_optionMap[oa.UniqueName] = oi", span="68-68"];
m17_24 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="_names.Add(oa.UniqueName)", span="70-70"];
m17_23 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="_options.Add(oi)", span="69-69"];
m17_25 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", span="64-64"];
m17_27 [cluster="CommandLine.Tests.OptionMapFixture.Manage_options()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.Manage_options()", span="93-93"];
m17_28 [cluster="CommandLine.Tests.OptionMapFixture.Manage_options()", color=green, community=0, file="OptionMapFixture.cs", label="_optionMap = null", prediction=160, span="95-95"];
m17_31 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", color=green, community=0, file="OptionMapFixture.cs", label="_omBuilder.Options[0].Should().Be.SameAs(_optionMap[_omBuilder.Names[0]])", prediction=161, span="101-101"];
m17_32 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", color=green, community=0, file="OptionMapFixture.cs", label="_omBuilder.Options[1].Should().Be.SameAs(_optionMap[_omBuilder.Names[1]])", prediction=162, span="102-102"];
m17_33 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", file="OptionMapFixture.cs", label="_omBuilder.Options[2].Should().Be.SameAs(_optionMap[_omBuilder.Names[2]])", span="103-103"];
m17_44 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", color=green, community=0, file="OptionMapFixture.cs", label="longOi.Should().Be.Null()", prediction=163, span="117-117"];
m17_47 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", span="118-118"];
m17_6 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="OptionMapFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="55-55"];
m17_5 [cluster="OptionMap.cstr", file="OptionMapFixture.cs", label="Entry OptionMap.cstr", span=""];
m17_8 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", span="55-55"];
m17_9 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="var oa = new OptionAttribute(longName)", span="57-57"];
m17_10 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="var oi = oa.CreateOptionInfo()", span="58-58"];
m17_11 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="_optionMap[oa.UniqueName] = oi", span="59-59"];
m17_13 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="_names.Add(oa.UniqueName)", span="61-61"];
m17_12 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="_options.Add(oi)", span="60-60"];
m17_14 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", span="55-55"];
m17_34 [cluster="CommandLine.Tests.OptionMapFixture.ShutdownInstance()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.ShutdownInstance()", span="104-104"];
m17_36 [cluster="CommandLine.Tests.OptionMapFixture.ShutdownInstance()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.ShutdownInstance()", span="104-104"];
m17_48 [cluster="Unk.Null", file="OptionMapFixture.cs", label="Entry Unk.Null", span=""];
m17_0 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", span="48-48"];
m17_1 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="_optionMap = new OptionMap(capacity, new CommandLineParserSettings(true))", span="50-50"];
m17_2 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="_options = new List<OptionInfo>(capacity)", span="51-51"];
m17_3 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="_names = new List<string>(capacity)", span="52-52"];
m17_4 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", span="48-48"];
m17_53 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", span="131-131"];
m17_54 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="map == null", span="133-133"];
m17_62 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="map[attribute1.UniqueName] = option1", span="146-146"];
m17_63 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="map[attribute2.UniqueName] = option2", span="147-147"];
m17_64 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="map[attribute3.UniqueName] = option3", span="148-148"];
m17_65 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache != null", span="150-150"];
m17_66 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache[attribute1.UniqueName] = option1", span="152-152"];
m17_67 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache[attribute1.UniqueName] = option2", span="153-153"];
m17_68 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache[attribute2.UniqueName]= option3", span="154-154"];
m17_69 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="return map;", span="157-157"];
m17_55 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="map = new OptionMap (3, new CommandLineParserSettings (true))", span="135-135"];
m17_56 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="var attribute1 = new OptionAttribute('p', ''pretend'')", span="138-138"];
m17_57 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="var attribute2 = new OptionAttribute(''newuse'')", span="139-139"];
m17_59 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="var option1 = attribute1.CreateOptionInfo()", span="142-142"];
m17_58 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="var attribute3 = new OptionAttribute('D', null)", span="140-140"];
m17_60 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="var option2 = attribute2.CreateOptionInfo()", span="143-143"];
m17_61 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="var option3 = attribute3.CreateOptionInfo()", span="144-144"];
m17_70 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", span="131-131"];
m17_15 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionMapFixture.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string)", span="54-54"];
m17_16 [cluster="Unk.CreateOptionInfo", file="OptionMapFixture.cs", label="Entry Unk.CreateOptionInfo", span=""];
m17_43 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", color=green, community=1, file="OptionMapFixture.cs", label="var longOi = _optionMap[''nomorebugshere'']", prediction=164, span="116-116"];
m17_17 [cluster="Unk.Add", file="OptionMapFixture.cs", label="Entry Unk.Add", span=""];
m17_26 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionMapFixture.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char, string)", span="64-64"];
m17_18 [cluster="System.Collections.Generic.List<T>.Add(T)", file="OptionMapFixture.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m17_49 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", span="125-125"];
m17_52 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", span="125-125"];
m17_7 [cluster="System.Collections.Generic.List<T>.List(int)", file="OptionMapFixture.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m17_37 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.ManageOptions()", span="110-110"];
m17_41 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.ManageOptions()", span="110-110"];
m17_71 [file="OptionMapFixture.cs", label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", span=""];
m18_2 [cluster="CommandLine.Internal.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo)", file="PropertyWriter.cs", label="Entry CommandLine.Internal.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo)", span="45-45"];
m18_3 [cluster="CommandLine.Internal.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo)", color=green, community=0, file="PropertyWriter.cs", label="Property = property", prediction=165, span="47-47"];
m18_4 [cluster="CommandLine.Internal.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo)", file="PropertyWriter.cs", label="Exit CommandLine.Internal.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo)", span="45-45"];
m18_30 [cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", file="PropertyWriter.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0"];
m18_5 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", file="PropertyWriter.cs", label="Entry CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", span="52-52"];
m18_6 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label="Property.PropertyType.IsEnum", prediction=166, span="56-56"];
m18_7 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label="Property.SetValue(target, Enum.Parse(Property.PropertyType, value, true), null)", prediction=166, span="58-58"];
m18_8 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label="Property.SetValue(target, Convert.ChangeType(value, Property.PropertyType, Thread.CurrentThread.CurrentCulture), null)", prediction=166, span="62-62"];
m18_9 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label=InvalidCastException, prediction=169, span="65-65"];
m18_11 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label=FormatException, prediction=170, span="66-66"];
m18_13 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label=ArgumentException, prediction=171, span="67-67"];
m18_15 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label=OverflowException, prediction=172, span="68-68"];
m18_17 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label="return true;", prediction=173, span="69-69"];
m18_10 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label="return false;", prediction=174, span="65-65"];
m18_12 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label="return false;", prediction=175, span="66-66"];
m18_14 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label="return false;", prediction=176, span="67-67"];
m18_16 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label="return false;", prediction=177, span="68-68"];
m18_18 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", file="PropertyWriter.cs", label="Exit CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", span="52-52"];
m18_22 [cluster="CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", file="PropertyWriter.cs", label="Entry CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", span="73-73"];
m18_23 [cluster="CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", color=green, community=0, file="PropertyWriter.cs", label="var nc = new NullableConverter(Property.PropertyType)", prediction=178, span="75-75"];
m18_24 [cluster="CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", color=green, community=0, file="PropertyWriter.cs", label="Property.SetValue(target, nc.ConvertFromString(null, Thread.CurrentThread.CurrentCulture, value), null)", prediction=166, span="79-79"];
m18_25 [cluster="CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", color=green, community=0, file="PropertyWriter.cs", label=Exception, prediction=180, span="84-84"];
m18_27 [cluster="CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", color=green, community=0, file="PropertyWriter.cs", label="return true;", prediction=181, span="88-88"];
m18_26 [cluster="CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", color=green, community=0, file="PropertyWriter.cs", label="return false;", prediction=182, span="86-86"];
m18_28 [cluster="CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", file="PropertyWriter.cs", label="Exit CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", span="73-73"];
m18_20 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="PropertyWriter.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m18_19 [cluster="System.Enum.Parse(System.Type, string, bool)", file="PropertyWriter.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m18_21 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="PropertyWriter.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m18_29 [cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", file="PropertyWriter.cs", label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0"];
m18_31 [file="PropertyWriter.cs", label="CommandLine.Internal.PropertyWriter", span=""];
m19_25 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="72-72"];
m19_26 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="var key = new Pair<Type, object>(typeof(Pair<MethodInfo, TAttribute>), target)", span="75-75"];
m19_29 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="var info = target.GetType().GetMethods()", span="79-79"];
m19_27 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="var cached = ReflectionCache.Instance[key]", span="76-76"];
m19_35 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="ReflectionCache.Instance[key] = data", span="89-89"];
m19_28 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="cached == null", span="77-77"];
m19_38 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="return (Pair<MethodInfo, TAttribute>) cached;", span="96-96"];
m19_30 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label=info, span="80-80"];
m19_31 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="!method.IsStatic", span="82-82"];
m19_37 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="return null;", span="94-94"];
m19_32 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="Attribute attribute =\r\n                            Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="84-85"];
m19_34 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="var data = new Pair<MethodInfo, TAttribute>(method, (TAttribute) attribute)", span="88-88"];
m19_33 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="attribute != null", span="86-86"];
m19_36 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="return data;", span="90-90"];
m19_39 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="Exit CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="72-72"];
m19_104 [cluster="System.Type.GetGenericTypeDefinition()", file="ReflectionUtil.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m19_0 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38"];
m19_1 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="ReflectionUtil.cs", label="var key = new Pair<Type, object>(typeof(Pair<PropertyInfo, TAttribute>), target)", prediction=183, span="41-41"];
m19_5 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="target != null", span="46-46"];
m19_6 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="var propertiesInfo = target.GetType().GetProperties()", span="48-48"];
m19_2 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="ReflectionUtil.cs", label="var cached = ReflectionCache.Instance[key]", prediction=184, span="42-42"];
m19_14 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="ReflectionCache.Instance[key] = list", span="66-66"];
m19_3 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="ReflectionUtil.cs", label="cached == null", prediction=185, span="43-43"];
m19_16 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="return (IList<Pair<PropertyInfo, TAttribute>>)cached;", span="69-69"];
m19_4 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="IList<Pair<PropertyInfo, TAttribute>> list = new List<Pair<PropertyInfo, TAttribute>>()", span="45-45"];
m19_13 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="list.Add(new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute))", span="60-60"];
m19_15 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="return list;", span="67-67"];
m19_7 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label=propertiesInfo, span="50-50"];
m19_8 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="property != null && (property.CanRead && property.CanWrite)", span="52-52"];
m19_9 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="var setMethod = property.GetSetMethod()", span="54-54"];
m19_11 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="57-57"];
m19_10 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="setMethod != null && !setMethod.IsStatic", span="55-55"];
m19_12 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="attribute != null", span="58-58"];
m19_17 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="Exit CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38"];
m19_41 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="99-99"];
m19_42 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="var key = new Pair<Type, object>(typeof(TAttribute), target)", span="102-102"];
m19_45 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="var info = target.GetType().GetMethods()", span="106-106"];
m19_43 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="var cached = ReflectionCache.Instance[key]", span="103-103"];
m19_51 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="ReflectionCache.Instance[key] = data", span="116-116"];
m19_44 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="cached == null", span="104-104"];
m19_54 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="return (TAttribute) cached;", span="123-123"];
m19_46 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label=info, span="107-107"];
m19_47 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="!method.IsStatic", span="109-109"];
m19_53 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="return null;", span="121-121"];
m19_48 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="Attribute attribute =\r\n                            Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="111-112"];
m19_49 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="attribute != null", span="113-113"];
m19_50 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="var data = (TAttribute) attribute", span="115-115"];
m19_52 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="return data;", span="117-117"];
m19_55 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="Exit CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="99-99"];
m19_23 [cluster="System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", file="ReflectionUtil.cs", label="Entry System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", span="0-0"];
m19_79 [cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="ReflectionUtil.cs", label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0"];
m19_101 [cluster="CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", span="207-207"];
m19_102 [cluster="CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", file="ReflectionUtil.cs", label="return type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>);", span="209-209"];
m19_103 [cluster="CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", file="ReflectionUtil.cs", label="Exit CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", span="207-207"];
m19_100 [cluster="string.CompareOrdinal(string, string)", file="ReflectionUtil.cs", label="Entry string.CompareOrdinal(string, string)", span="0-0"];
m19_22 [cluster="System.Reflection.PropertyInfo.GetSetMethod()", file="ReflectionUtil.cs", label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0"];
m19_24 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ReflectionUtil.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m19_73 [cluster="CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", span="157-157"];
m19_74 [cluster="CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs", label="object[] a = AssemblyFromWhichToPullInformation.GetCustomAttributes(typeof(TAttribute), false)", span="160-160"];
m19_75 [cluster="CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs", label="a.Length <= 0", span="161-161"];
m19_77 [cluster="CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs", label="return (TAttribute)a[0];", span="163-163"];
m19_76 [cluster="CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs", label="return null;", span="161-161"];
m19_78 [cluster="CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs", label="Exit CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", span="157-157"];
m19_20 [cluster="object.GetType()", file="ReflectionUtil.cs", label="Entry object.GetType()", span="0-0"];
m19_40 [cluster="System.Type.GetMethods()", file="ReflectionUtil.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m19_80 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="171-171"];
m19_81 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="var key = new Pair<Type, object>(typeof(Pair<PropertyInfo, BaseOptionAttribute>), target)", span="174-174"];
m19_85 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=green, community=0, file="ReflectionUtil.cs", label="target == null", prediction=186, span="179-179"];
m19_87 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="var propertiesInfo = target.GetType().GetProperties()", span="183-183"];
m19_94 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="optionAttr != null && string.CompareOrdinal(uniqueName, optionAttr.UniqueName) == 0", span="194-194"];
m19_82 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="var cached = ReflectionCache.Instance[key]", span="175-175"];
m19_96 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="ReflectionCache.Instance[key] = found", span="197-197"];
m19_83 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="cached == null", span="176-176"];
m19_98 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="return (Pair<PropertyInfo, TAttribute>) cached;", span="204-204"];
m19_84 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=green, community=0, file="ReflectionUtil.cs", label="Pair<PropertyInfo, TAttribute> found = null", prediction=187, span="178-178"];
m19_86 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="return null;", span="181-181"];
m19_88 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label=propertiesInfo, span="185-185"];
m19_89 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="property != null && (property.CanRead && property.CanWrite)", span="187-187"];
m19_90 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="var setMethod = property.GetSetMethod()", span="189-189"];
m19_92 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="192-192"];
m19_95 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="found = new Pair<PropertyInfo, TAttribute>(property, (TAttribute) attribute)", span="196-196"];
m19_91 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="setMethod != null && !setMethod.IsStatic", span="190-190"];
m19_93 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="var optionAttr = (TAttribute) attribute", span="193-193"];
m19_97 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="return found;", span="198-198"];
m19_99 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="Exit CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="171-171"];
m19_56 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="126-126"];
m19_57 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="var key = new Pair<Type, object>(typeof(IList<TAttribute>), target)", span="129-129"];
m19_61 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="var info = target.GetType().GetProperties()", span="134-134"];
m19_58 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="var cached = ReflectionCache.Instance[key]", span="130-130"];
m19_69 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="ReflectionCache.Instance[key] = list", span="151-151"];
m19_59 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="cached == null", span="131-131"];
m19_71 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="return (IList<TAttribute>) cached;", span="154-154"];
m19_60 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="IList<TAttribute> list = new List<TAttribute>()", span="133-133"];
m19_68 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="list.Add((TAttribute) attribute)", span="146-146"];
m19_70 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="return list;", span="152-152"];
m19_62 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label=info, span="136-136"];
m19_63 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="property != null && (property.CanRead && property.CanWrite)", span="138-138"];
m19_64 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="var setMethod = property.GetSetMethod()", span="140-140"];
m19_66 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="143-143"];
m19_65 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="setMethod != null && !setMethod.IsStatic", span="141-141"];
m19_67 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="attribute != null", span="144-144"];
m19_72 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="Exit CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="126-126"];
m19_18 [cluster="CommandLine.Utils.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="37-37"];
m19_21 [cluster="System.Type.GetProperties()", file="ReflectionUtil.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m19_19 [cluster="System.Collections.Generic.List<T>.List()", file="ReflectionUtil.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m20_6 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="ReflectionUtilFixture.cs", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="76-76"];
m20_7 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="ReflectionUtilFixture.cs", label="text = null", span="79-79"];
m20_8 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="ReflectionUtilFixture.cs", label="var method = pair.Left", span="81-81"];
m20_11 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="ReflectionUtilFixture.cs", label="text = (string)method.Invoke(target, null)", span="85-85"];
m20_9 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="ReflectionUtilFixture.cs", label="!CheckMethodSignature(method)", span="82-82"];
m20_10 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="ReflectionUtilFixture.cs", label="throw new MemberAccessException();", span="83-83"];
m20_12 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="ReflectionUtilFixture.cs", label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="76-76"];
m20_13 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="ReflectionUtilFixture.cs", label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="88-88"];
m20_16 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="ReflectionUtilFixture.cs", label="return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", span="90-90"];
m20_17 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="ReflectionUtilFixture.cs", label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="88-88"];
m20_15 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="ReflectionUtilFixture.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m20_0 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="ReflectionUtilFixture.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="48-48"];
m20_1 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="ReflectionUtilFixture.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="48-48"];
m20_2 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="ReflectionUtilFixture.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="59-59"];
m20_3 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="ReflectionUtilFixture.cs", label="base.ShortName = shortName", span="61-61"];
m20_4 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="ReflectionUtilFixture.cs", label="base.LongName = longName", span="62-62"];
m20_5 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="ReflectionUtilFixture.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="59-59"];
m20_14 [cluster="System.MemberAccessException.MemberAccessException()", file="ReflectionUtilFixture.cs", label="Entry System.MemberAccessException.MemberAccessException()", span="0-0"];
m20_18 [cluster="System.Reflection.MethodBase.GetParameters()", file="ReflectionUtilFixture.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m20_19 [file="ReflectionUtilFixture.cs", label="CommandLine.HelpOptionAttribute", span=""];
m23_10 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="SingletonFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m23_14 [cluster="System.Console.WriteLine(object)", file="SingletonFixture.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m23_0 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", file="SingletonFixture.cs", label="Entry CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", span="41-41"];
m23_1 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", file="SingletonFixture.cs", label="var options = new SimpleOptions()", span="43-43"];
m23_7 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", file="SingletonFixture.cs", label="Console.WriteLine(options)", span="51-51"];
m23_2 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", file="SingletonFixture.cs", label="bool result = CommandLineParser.Default.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="44-45"];
m23_8 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", file="SingletonFixture.cs", label="Exit CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", span="41-41"];
m23_20 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="SingletonFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="35-35"];
m23_12 [cluster="Unk.True", file="SingletonFixture.cs", label="Entry Unk.True", span=""];
m23_15 [cluster="CommandLine.Tests.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", file="SingletonFixture.cs", label="Entry CommandLine.Tests.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", span="55-55"];
m23_16 [cluster="CommandLine.Tests.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", file="SingletonFixture.cs", label="var options = new OptionsWithMultipleSet()", span="57-57"];
m23_17 [cluster="CommandLine.Tests.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", file="SingletonFixture.cs", label="bool result = CommandLineParser.Default.ParseArguments(\r\n                new string[] { ''-r1'', ''-g2'', ''-b3'', ''-h4'', ''-s5'', ''-v6'' }, options)", span="58-59"];
m23_18 [cluster="CommandLine.Tests.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", color=green, community=0, file="SingletonFixture.cs", label="result.Should().Be.True()", prediction=188, span="61-61"];
m23_19 [cluster="CommandLine.Tests.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", file="SingletonFixture.cs", label="Exit CommandLine.Tests.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", span="55-55"];
m23_9 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="SingletonFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33"];
m23_11 [cluster="Unk.Should", file="SingletonFixture.cs", label="Entry Unk.Should", span=""];
m24_15 [cluster="CommandLine.ICommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", file="StrictFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", span="107-107"];
m24_36 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="Entry CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", span="86-86"];
m24_37 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", color=green, community=0, file="StrictFixture.cs", label="var options = new OptionsWithVerbsNoHelp()", prediction=189, span="88-88"];
m24_38 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="var testWriter = new StringWriter()", span="89-89"];
m24_39 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", color=green, community=0, file="StrictFixture.cs", label="Result = Parser.ParseArgumentsStrict(new string[] { ''bad'', ''input'' }, options, testWriter)", prediction=190, span="91-91"];
m24_41 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="var helpText = testWriter.ToString()", span="95-95"];
m24_42 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="Console.WriteLine(helpText)", span="96-96"];
m24_43 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", color=green, community=0, file="StrictFixture.cs", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", prediction=191, span="97-97"];
m24_44 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", color=green, community=0, file="StrictFixture.cs", label="lines.Should().Count.Exactly(8)", prediction=192, span="99-99"];
m24_45 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", color=green, community=0, file="StrictFixture.cs", label="lines[5].Trim().Should().Equal(''add       Add file contents to the index.'')", prediction=191, span="101-101"];
m24_48 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="Exit CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", span="86-86"];
m24_49 [cluster="CommandLine.Tests.Mocks.OptionsWithVerbsNoHelp.OptionsWithVerbsNoHelp()", file="StrictFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithVerbsNoHelp.OptionsWithVerbsNoHelp()", span="108-108"];
m24_35 [cluster="CommandLine.Tests.Mocks.SimpleOptionsForStrict.SimpleOptionsForStrict()", file="StrictFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsForStrict.SimpleOptionsForStrict()", span="31-31"];
m24_16 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="StrictFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m24_14 [cluster="System.IO.StringWriter.StringWriter()", file="StrictFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m24_24 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", file="StrictFixture.cs", label="Entry CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", span="67-67"];
m24_26 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", color=green, community=0, file="StrictFixture.cs", label="var testWriter = new StringWriter()", prediction=194, span="70-70"];
m24_25 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", file="StrictFixture.cs", label="var options = new SimpleOptionsForStrict()", span="69-69"];
m24_29 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", color=green, community=0, file="StrictFixture.cs", label="var helpText = testWriter.ToString()", prediction=195, span="76-76"];
m24_30 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", color=green, community=0, file="StrictFixture.cs", label="Console.WriteLine(helpText)", prediction=196, span="77-77"];
m24_31 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", color=green, community=0, file="StrictFixture.cs", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", prediction=197, span="78-78"];
m24_34 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", file="StrictFixture.cs", label="Exit CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", span="67-67"];
m24_17 [cluster="System.IO.StringWriter.ToString()", file="StrictFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m24_0 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", file="StrictFixture.cs", label="Entry CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", span="46-46"];
m24_1 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", color=green, community=0, file="StrictFixture.cs", label="var options = new SimpleOptions()", prediction=198, span="48-48"];
m24_2 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", file="StrictFixture.cs", label="var testWriter = new StringWriter()", span="49-49"];
m24_5 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", color=green, community=0, file="StrictFixture.cs", label="var helpText = testWriter.ToString()", prediction=199, span="55-55"];
m24_4 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", color=green, community=0, file="StrictFixture.cs", label="ResultShouldBeFalse()", prediction=200, span="53-53"];
m24_6 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", file="StrictFixture.cs", label="Console.WriteLine(helpText)", span="56-56"];
m24_7 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", color=green, community=0, file="StrictFixture.cs", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", prediction=201, span="57-57"];
m24_11 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", color=green, community=0, file="StrictFixture.cs", label="lines[7].Trim().Should().Equal(''--switch'')", prediction=201, span="63-63"];
m24_12 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", file="StrictFixture.cs", label="Exit CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", span="46-46"];
m24_61 [cluster="CommandLine.Tests.Mocks.OptionsWithVerbs.OptionsWithVerbs()", file="StrictFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithVerbs.OptionsWithVerbs()", span="79-79"];
m24_21 [cluster="Unk.Exactly", file="StrictFixture.cs", label="Entry Unk.Exactly", span=""];
m24_50 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", file="StrictFixture.cs", label="Entry CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", span="107-107"];
m24_51 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", color=green, community=0, file="StrictFixture.cs", label="var options = new OptionsWithVerbs()", prediction=203, span="109-109"];
m24_52 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", color=green, community=0, file="StrictFixture.cs", label="var testWriter = new StringWriter()", prediction=204, span="110-110"];
m24_55 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", file="StrictFixture.cs", label="var helpText = testWriter.ToString()", span="116-116"];
m24_57 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", file="StrictFixture.cs", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="118-118"];
m24_56 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", file="StrictFixture.cs", label="Console.WriteLine(helpText)", span="117-117"];
m24_60 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", file="StrictFixture.cs", label="Exit CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", span="107-107"];
m24_13 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="StrictFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33"];
m24_18 [cluster="System.Console.WriteLine(string)", file="StrictFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m24_22 [cluster="string.Trim()", file="StrictFixture.cs", label="Entry string.Trim()", span="0-0"];
m24_23 [cluster="Unk.Equal", file="StrictFixture.cs", label="Entry Unk.Equal", span=""];
m24_19 [cluster="string.Split(string[], System.StringSplitOptions)", file="StrictFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m24_62 [file="StrictFixture.cs", label="CommandLine.Tests.StrictFixture", span=""];
m25_0 [cluster="CommandLine.Internal.Target.Target()", file="Target.cs", label="Entry CommandLine.Internal.Target.Target()", span="36-36"];
m25_1 [cluster="CommandLine.Internal.Target.Target()", file="Target.cs", label="Exit CommandLine.Internal.Target.Target()", span="36-36"];
m25_2 [cluster="CommandLine.Internal.Target.Target(object)", file="Target.cs", label="Entry CommandLine.Internal.Target.Target(object)", span="38-38"];
m25_7 [cluster="CommandLine.Internal.Target.Target(object)", file="Target.cs", label="Exit CommandLine.Internal.Target.Target(object)", span="38-38"];
m25_8 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="Target.cs", label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="91-91"];
m25_16 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="Target.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m25_9 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="Target.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="82-82"];
m25_10 [cluster="CommandLine.Internal.Target.AddValueItemIfAllowed(string)", file="Target.cs", label="Entry CommandLine.Internal.Target.AddValueItemIfAllowed(string)", span="50-50"];
m25_15 [cluster="CommandLine.Internal.Target.AddValueItemIfAllowed(string)", file="Target.cs", label="Exit CommandLine.Internal.Target.AddValueItemIfAllowed(string)", span="50-50"];
m25_17 [file="Target.cs", label="CommandLine.Internal.Target", span=""];
m26_7 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="TargetExtensions.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="72-72"];
m26_11 [cluster="CommandLine.Utils.TargetExtensions.CanReceiveParserState(object)", file="TargetExtensions.cs", label="Entry CommandLine.Utils.TargetExtensions.CanReceiveParserState(object)", span="48-48"];
m26_12 [cluster="CommandLine.Utils.TargetExtensions.CanReceiveParserState(object)", file="TargetExtensions.cs", label="return ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(target).Count > 0;", span="50-50"];
m26_13 [cluster="CommandLine.Utils.TargetExtensions.CanReceiveParserState(object)", file="TargetExtensions.cs", label="Exit CommandLine.Utils.TargetExtensions.CanReceiveParserState(object)", span="48-48"];
m26_8 [cluster="CommandLine.Utils.TargetExtensions.HasVerbHelp(object)", file="TargetExtensions.cs", label="Entry CommandLine.Utils.TargetExtensions.HasVerbHelp(object)", span="43-43"];
m26_9 [cluster="CommandLine.Utils.TargetExtensions.HasVerbHelp(object)", file="TargetExtensions.cs", label="return ReflectionUtil.RetrieveMethod<HelpVerbOptionAttribute>(target) != null;", span="45-45"];
m26_10 [cluster="CommandLine.Utils.TargetExtensions.HasVerbHelp(object)", file="TargetExtensions.cs", label="Exit CommandLine.Utils.TargetExtensions.HasVerbHelp(object)", span="43-43"];
m26_3 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="TargetExtensions.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38"];
m26_17 [cluster="CommandLine.Internal.ValueMapper.ValueMapper(object)", file="TargetExtensions.cs", label="Entry CommandLine.Internal.ValueMapper.ValueMapper(object)", span="43-43"];
m26_0 [cluster="CommandLine.Utils.TargetExtensions.HasVerbs(object)", file="TargetExtensions.cs", label="Entry CommandLine.Utils.TargetExtensions.HasVerbs(object)", span="33-33"];
m26_1 [cluster="CommandLine.Utils.TargetExtensions.HasVerbs(object)", file="TargetExtensions.cs", label="return ReflectionUtil.RetrievePropertyList<VerbOptionAttribute>(target).Count > 0;", span="35-35"];
m26_2 [cluster="CommandLine.Utils.TargetExtensions.HasVerbs(object)", file="TargetExtensions.cs", label="Exit CommandLine.Utils.TargetExtensions.HasVerbs(object)", span="33-33"];
m26_4 [cluster="CommandLine.Utils.TargetExtensions.HasHelp(object)", file="TargetExtensions.cs", label="Entry CommandLine.Utils.TargetExtensions.HasHelp(object)", span="38-38"];
m26_5 [cluster="CommandLine.Utils.TargetExtensions.HasHelp(object)", file="TargetExtensions.cs", label="return ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(target) != null;", span="40-40"];
m26_6 [cluster="CommandLine.Utils.TargetExtensions.HasHelp(object)", file="TargetExtensions.cs", label="Exit CommandLine.Utils.TargetExtensions.HasHelp(object)", span="38-38"];
m26_14 [cluster="CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", file="TargetExtensions.cs", label="Entry CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", span="56-56"];
m26_15 [cluster="CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", color=green, community=0, file="TargetExtensions.cs", label="return new ValueMapper(target);", prediction=205, span="58-58"];
m26_16 [cluster="CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", file="TargetExtensions.cs", label="Exit CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", span="56-56"];
m27_20 [cluster="CommandLine.Tests.Mocks.OptionsOfPlugInX.OptionsOfPlugInX()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsOfPlugInX.OptionsOfPlugInX()", span="41-41"];
m27_18 [cluster="Unk.True", file="UnknownArgumentsFixture.cs", label="Entry Unk.True", span=""];
m27_15 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="45-45"];
m27_14 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="70-70"];
m27_0 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", span="42-42"];
m27_2 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var appOptions = new OptionsForAppWithPlugIns()", span="45-45"];
m27_7 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var plugInXOptions = new OptionsOfPlugInX()", span="53-53"];
m27_4 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var result1 = parser.ParseArguments(args, appOptions)", span="48-48"];
m27_8 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var result2 = parser.ParseArguments(args, plugInXOptions)", span="54-54"];
m27_1 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="string[] args = { ''--plugin'', ''addonX'', ''--filename'', ''input.dat'' }", span="44-44"];
m27_3 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var parser = new CommandLineParser(new CommandLineParserSettings {\r\n                IgnoreUnknownArguments = true, CaseSensitive = true })", span="46-47"];
m27_12 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="Exit CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", span="42-42"];
m27_17 [cluster="Unk.Should", file="UnknownArgumentsFixture.cs", label="Entry Unk.Should", span=""];
m27_13 [cluster="CommandLine.Tests.Mocks.OptionsForAppWithPlugIns.OptionsForAppWithPlugIns()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsForAppWithPlugIns.OptionsForAppWithPlugIns()", span="35-35"];
m27_16 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="94-94"];
m28_3 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="59-59"];
m28_4 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs", label="concreteType == null", span="62-62"];
m28_6 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs", label="!typeof(IList<string>).IsAssignableFrom(concreteType)", span="63-63"];
m28_8 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs", label="_concreteType = concreteType", span="67-67"];
m28_5 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs", label="throw new ArgumentNullException(''concreteType'');", span="62-62"];
m28_7 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs", label="throw new CommandLineParserException(SR.CommandLineParserException_IncompatibleTypes);", span="65-65"];
m28_9 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs", label="Exit CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="59-59"];
m28_34 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ValueListAttribute.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38"];
m28_25 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="91-91"];
m28_26 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="93-93"];
m28_27 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="list == null || list.Count == 0", span="94-94"];
m28_29 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="list.Count > 1", span="95-95"];
m28_31 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="var pairZero = list[0]", span="96-96"];
m28_28 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="return null;", span="94-94"];
m28_30 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="throw new InvalidOperationException();", span="95-95"];
m28_32 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="return pairZero.Right;", span="97-97"];
m28_33 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="Exit CommandLine.ValueListAttribute.GetAttribute(object)", span="91-91"];
m28_13 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="82-82"];
m28_14 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="Type concreteType", span="84-84"];
m28_15 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="var property = GetProperty(target, out concreteType)", span="85-85"];
m28_18 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="property.SetValue(target, Activator.CreateInstance(concreteType), null)", span="87-87"];
m28_19 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="return (IList<string>)property.GetValue(target, null);", span="88-88"];
m28_16 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="property == null || concreteType == null", span="86-86"];
m28_17 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="return null;", span="86-86"];
m28_20 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="Exit CommandLine.ValueListAttribute.GetReference(object)", span="82-82"];
m28_21 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="Entry CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="100-100"];
m28_36 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="concreteType = null", span="102-102"];
m28_37 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="103-103"];
m28_38 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="list == null || list.Count == 0", span="104-104"];
m28_40 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="list.Count > 1", span="105-105"];
m28_42 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="var pairZero = list[0]", span="106-106"];
m28_39 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="return null;", span="104-104"];
m28_41 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="throw new InvalidOperationException();", span="105-105"];
m28_43 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="concreteType = pairZero.Right.ConcreteType", span="107-107"];
m28_44 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="return pairZero.Left;", span="108-108"];
m28_45 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="Exit CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="100-100"];
m28_0 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="ValueListAttribute.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute()", span="49-49"];
m28_1 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="ValueListAttribute.cs", label="MaximumElements = -1", span="51-51"];
m28_2 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="ValueListAttribute.cs", label="Exit CommandLine.ValueListAttribute.ValueListAttribute()", span="49-49"];
m28_22 [cluster="System.Activator.CreateInstance(System.Type)", file="ValueListAttribute.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m28_23 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="ValueListAttribute.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m28_10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ValueListAttribute.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m28_11 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ValueListAttribute.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m28_12 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="ValueListAttribute.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="54-54"];
m28_24 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="ValueListAttribute.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m28_35 [cluster="System.InvalidOperationException.InvalidOperationException()", file="ValueListAttribute.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m28_46 [file="ValueListAttribute.cs", label="CommandLine.ValueListAttribute", span=""];
m29_15 [cluster="CommandLine.Tests.ValueListAttributeFixture.MockSpecializedList.MockSpecializedList()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.MockSpecializedList.MockSpecializedList()", span="41-41"];
m29_27 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", span="89-89"];
m29_28 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", color=green, community=0, file="ValueListAttributeFixture.cs", label="var options = new MockOptions()", prediction=206, span="91-91"];
m29_29 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="var values = ValueListAttribute.GetReference(options)", span="93-93"];
m29_33 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''value0'', ''value1'', ''value2'' }, options.Values)", span="98-98"];
m29_30 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="values.Add(''value0'')", span="94-94"];
m29_31 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="values.Add(''value1'')", span="95-95"];
m29_32 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="values.Add(''value2'')", span="96-96"];
m29_34 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", span="89-89"];
m29_4 [cluster="CommandLine.Tests.ValueListAttributeFixture.Will_throw_exception_if_concrete_type_is_incompatible()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.Will_throw_exception_if_concrete_type_is_incompatible()", span="59-59"];
m29_6 [cluster="CommandLine.Tests.ValueListAttributeFixture.Will_throw_exception_if_concrete_type_is_incompatible()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.Will_throw_exception_if_concrete_type_is_incompatible()", span="59-59"];
m29_3 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttributeFixture.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="59-59"];
m29_0 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", span="54-54"];
m29_2 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", span="54-54"];
m29_22 [cluster="CommandLine.Tests.ValueListAttributeFixture.MockOptions.MockOptions()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.MockOptions.MockOptions()", span="45-45"];
m29_8 [cluster="object.GetType()", file="ValueListAttributeFixture.cs", label="Entry object.GetType()", span="0-0"];
m29_25 [cluster="Unk.Null", file="ValueListAttributeFixture.cs", label="Entry Unk.Null", span=""];
m29_12 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", span="73-73"];
m29_13 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", color=green, community=0, file="ValueListAttributeFixture.cs", label="new ValueListAttribute(new MockSpecializedList().GetType())", prediction=207, span="75-75"];
m29_14 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", span="73-73"];
m29_16 [cluster="CommandLine.Tests.ValueListAttributeFixture.Get_generic_list_of_string_interface_reference()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.Get_generic_list_of_string_interface_reference()", span="77-77"];
m29_17 [cluster="CommandLine.Tests.ValueListAttributeFixture.Get_generic_list_of_string_interface_reference()", color=green, community=0, file="ValueListAttributeFixture.cs", label="var options = new MockOptions()", prediction=208, span="79-79"];
m29_18 [cluster="CommandLine.Tests.ValueListAttributeFixture.Get_generic_list_of_string_interface_reference()", file="ValueListAttributeFixture.cs", label="IList<string> values = ValueListAttribute.GetReference(options)", span="81-81"];
m29_21 [cluster="CommandLine.Tests.ValueListAttributeFixture.Get_generic_list_of_string_interface_reference()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.Get_generic_list_of_string_interface_reference()", span="77-77"];
m29_35 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ValueListAttributeFixture.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m29_9 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", span="67-67"];
m29_10 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", color=green, community=0, file="ValueListAttributeFixture.cs", label="new ValueListAttribute(new List<string>().GetType())", prediction=209, span="69-69"];
m29_11 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", span="67-67"];
m29_7 [cluster="System.Collections.Generic.List<T>.List()", file="ValueListAttributeFixture.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m29_23 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttributeFixture.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="82-82"];
m29_26 [cluster="Unk.Equal", file="ValueListAttributeFixture.cs", label="Entry Unk.Equal", span=""];
m29_36 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48"];
m29_37 [file="ValueListAttributeFixture.cs", label="CommandLine.Tests.ValueListAttributeFixture", span=""];
m30_38 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", span="76-76"];
m30_39 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", prediction=210, span="64-64"];
m30_40 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", prediction=211, span="86-86"];
m30_41 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="var options = new OptionsWithValueListMaximumZero()", span="88-88"];
m30_18 [cluster="Unk.True", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.True", span=""];
m30_19 [cluster="System.Console.WriteLine(object)", file="ValueListAttributeParsingFixture.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m30_21 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="var options = new OptionsWithValueListMaximumThree()", prediction=212, span="63-63"];
m30_20 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", span="61-61"];
m30_47 [cluster="CommandLine.Tests.Mocks.OptionsWithValueListMaximumZero.OptionsWithValueListMaximumZero()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithValueListMaximumZero.OptionsWithValueListMaximumZero()", span="36-36"];
m30_49 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", prediction=211, span="97-97"];
m30_48 [cluster="Unk.Zero", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.Zero", span=""];
m30_50 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs", label="var options = new OptionsWithValueListMaximumZero()", span="99-99"];
m30_0 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", span="41-41"];
m30_1 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithValueList()", span="43-43"];
m30_15 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m30_29 [cluster="CommandLine.Tests.Mocks.OptionsWithValueListMaximumThree.OptionsWithValueListMaximumThree()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithValueListMaximumThree.OptionsWithValueListMaximumThree()", span="35-35"];
m30_30 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", span="61-61"];
m30_2 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", prediction=211, span="45-45"];
m30_3 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithValueList()", span="47-47"];
m30_32 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.Value_list_with_max_elem_outside_bounds()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.Value_list_with_max_elem_outside_bounds()", span="74-74"];
m30_53 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", span="97-97"];
m30_11 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="Console.WriteLine(options)", span="57-57"];
m30_12 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", span="45-45"];
m30_14 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m30_33 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.Value_list_with_max_elem_outside_bounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="var options = new OptionsWithValueListMaximumThree()", prediction=215, span="76-76"];
m30_34 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.Value_list_with_max_elem_outside_bounds()", file="ValueListAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                    new string[] { ''file.a'', ''file.b'', ''file.c'', ''file.d'' }, options)", span="77-78"];
m30_35 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.Value_list_with_max_elem_outside_bounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="ResultShouldBeFalse()", prediction=211, span="80-80"];
m30_13 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35"];
m30_45 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="Console.WriteLine(options)", span="93-93"];
m30_31 [cluster="CommandLine.Tests.Mocks.OptionsWithValueListMaximumThree.OptionsWithValueListMaximumThree()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithValueListMaximumThree.OptionsWithValueListMaximumThree()", span="35-35"];
m30_17 [cluster="Unk.Equal", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.Equal", span=""];
m30_46 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", span="86-86"];
m30_54 [file="ValueListAttributeParsingFixture.cs", label="CommandLine.Tests.ValueListAttributeParsingFixture", span=""];
m31_23 [cluster="CommandLine.Internal.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo)", file="ValueMapper.cs", label="Entry CommandLine.Internal.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo)", span="45-45"];
m31_35 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ValueMapper.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38"];
m31_26 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", file="ValueMapper.cs", label="Entry CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", span="52-52"];
m31_8 [cluster="CommandLine.Internal.ValueMapper.InitializeValueOption()", file="ValueMapper.cs", label="Entry CommandLine.Internal.ValueMapper.InitializeValueOption()", span="89-89"];
m31_33 [cluster="CommandLine.Internal.ValueMapper.InitializeValueOption()", color=green, community=0, file="ValueMapper.cs", label="_valueOptionAttributeList = ReflectionUtil.RetrievePropertyList<ValueOptionAttribute>(_target)", prediction=217, span="91-91"];
m31_34 [cluster="CommandLine.Internal.ValueMapper.InitializeValueOption()", file="ValueMapper.cs", label="Exit CommandLine.Internal.ValueMapper.InitializeValueOption()", span="89-89"];
m31_16 [cluster="CommandLine.Internal.ValueMapper.MapValueItem(string)", file="ValueMapper.cs", label="Entry CommandLine.Internal.ValueMapper.MapValueItem(string)", span="66-66"];
m31_17 [cluster="CommandLine.Internal.ValueMapper.MapValueItem(string)", color=green, community=0, file="ValueMapper.cs", label="IsValueOptionDefined &&\r\n                _valueOptionIndex < _valueOptionAttributeList.Count", prediction=218, span="68-69"];
m31_18 [cluster="CommandLine.Internal.ValueMapper.MapValueItem(string)", color=green, community=0, file="ValueMapper.cs", label="var valueOption = _valueOptionAttributeList[_valueOptionIndex++]", prediction=219, span="71-71"];
m31_21 [cluster="CommandLine.Internal.ValueMapper.MapValueItem(string)", color=green, community=0, file="ValueMapper.cs", label="return IsValueListDefined && AddValueItem(item);", prediction=218, span="77-77"];
m31_20 [cluster="CommandLine.Internal.ValueMapper.MapValueItem(string)", color=green, community=0, file="ValueMapper.cs", label="return ReflectionUtil.IsNullableType(propertyWriter.Property.PropertyType) ?\r\n                    propertyWriter.WriteNullable(item, _target) :\r\n                    propertyWriter.WriteScalar(item, _target);", prediction=218, span="73-75"];
m31_19 [cluster="CommandLine.Internal.ValueMapper.MapValueItem(string)", color=green, community=0, file="ValueMapper.cs", label="var propertyWriter = new PropertyWriter(valueOption.Left)", prediction=222, span="72-72"];
m31_22 [cluster="CommandLine.Internal.ValueMapper.MapValueItem(string)", file="ValueMapper.cs", label="Exit CommandLine.Internal.ValueMapper.MapValueItem(string)", span="66-66"];
m31_2 [cluster="CommandLine.Internal.ValueMapper.ValueMapper(object)", file="ValueMapper.cs", label="Entry CommandLine.Internal.ValueMapper.ValueMapper(object)", span="43-43"];
m31_3 [cluster="CommandLine.Internal.ValueMapper.ValueMapper(object)", color=green, community=0, file="ValueMapper.cs", label="_target = target", prediction=223, span="45-45"];
m31_4 [cluster="CommandLine.Internal.ValueMapper.ValueMapper(object)", color=green, community=0, file="ValueMapper.cs", label="InitializeValueList()", prediction=218, span="46-46"];
m31_5 [cluster="CommandLine.Internal.ValueMapper.ValueMapper(object)", color=green, community=0, file="ValueMapper.cs", label="InitializeValueOption()", prediction=218, span="47-47"];
m31_6 [cluster="CommandLine.Internal.ValueMapper.ValueMapper(object)", file="ValueMapper.cs", label="Exit CommandLine.Internal.ValueMapper.ValueMapper(object)", span="43-43"];
m31_31 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueMapper.cs", label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="92-92"];
m31_15 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ValueMapper.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m31_32 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueMapper.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="83-83"];
m31_7 [cluster="CommandLine.Internal.ValueMapper.InitializeValueList()", file="ValueMapper.cs", label="Entry CommandLine.Internal.ValueMapper.InitializeValueList()", span="80-80"];
m31_27 [cluster="CommandLine.Internal.ValueMapper.InitializeValueList()", color=green, community=0, file="ValueMapper.cs", label="_valueListAttribute = ValueListAttribute.GetAttribute(_target)", prediction=226, span="82-82"];
m31_28 [cluster="CommandLine.Internal.ValueMapper.InitializeValueList()", color=green, community=0, file="ValueMapper.cs", label=IsValueListDefined, prediction=218, span="83-83"];
m31_29 [cluster="CommandLine.Internal.ValueMapper.InitializeValueList()", color=green, community=0, file="ValueMapper.cs", label="_valueList = ValueListAttribute.GetReference(_target)", prediction=228, span="85-85"];
m31_30 [cluster="CommandLine.Internal.ValueMapper.InitializeValueList()", file="ValueMapper.cs", label="Exit CommandLine.Internal.ValueMapper.InitializeValueList()", span="80-80"];
m31_9 [cluster="CommandLine.Internal.ValueMapper.AddValueItem(string)", file="ValueMapper.cs", label="Entry CommandLine.Internal.ValueMapper.AddValueItem(string)", span="56-56"];
m31_10 [cluster="CommandLine.Internal.ValueMapper.AddValueItem(string)", color=green, community=0, file="ValueMapper.cs", label="_valueListAttribute.MaximumElements == 0 || _valueList.Count == _valueListAttribute.MaximumElements", prediction=218, span="58-58"];
m31_11 [cluster="CommandLine.Internal.ValueMapper.AddValueItem(string)", color=green, community=0, file="ValueMapper.cs", label="return false;", prediction=230, span="60-60"];
m31_12 [cluster="CommandLine.Internal.ValueMapper.AddValueItem(string)", color=green, community=0, file="ValueMapper.cs", label="_valueList.Add(item)", prediction=218, span="62-62"];
m31_13 [cluster="CommandLine.Internal.ValueMapper.AddValueItem(string)", color=green, community=0, file="ValueMapper.cs", label="return true;", prediction=232, span="63-63"];
m31_14 [cluster="CommandLine.Internal.ValueMapper.AddValueItem(string)", file="ValueMapper.cs", label="Exit CommandLine.Internal.ValueMapper.AddValueItem(string)", span="56-56"];
m31_25 [cluster="CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", file="ValueMapper.cs", label="Entry CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", span="73-73"];
m31_24 [cluster="CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", file="ValueMapper.cs", label="Entry CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", span="207-207"];
m31_36 [file="ValueMapper.cs", label="CommandLine.Internal.ValueMapper", span=""];
m32_11 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m32_38 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Between_value_options_order_matters()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueOptionAttributeParsingFixture.Between_value_options_order_matters()", span="65-65"];
m32_39 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Between_value_options_order_matters()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithValueOptionAndValueList()", prediction=233, span="67-67"];
m32_40 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Between_value_options_order_matters()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                new string[] { ''4321'', ''ofvalueoption'', ''-1234'', ''forvaluelist1'', ''forvaluelist2'', ''forvaluelist3'' }, options)", prediction=234, span="68-69"];
m32_41 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Between_value_options_order_matters()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="ResultShouldBeFalse()", prediction=235, span="71-71"];
m32_42 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Between_value_options_order_matters()", file="ValueOptionAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueOptionAttributeParsingFixture.Between_value_options_order_matters()", span="65-65"];
m32_43 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m32_0 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", span="17-17"];
m32_1 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithValueOption()", prediction=236, span="19-19"];
m32_2 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                new string[] { ''--switch'', ''file.ext'', ''1000'', ''0.1234'', ''-s'', ''out.ext'' }, options)", prediction=237, span="20-21"];
m32_4 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="options.BooleanValue.Should().Be.True()", prediction=236, span="25-25"];
m32_5 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="options.StringItem.Should().Equal(''file.ext'')", prediction=236, span="26-26"];
m32_6 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="options.IntegerItem.Should().Equal(1000)", prediction=236, span="27-27"];
m32_7 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="options.NullableDoubleItem.Should().Equal(0.1234D)", prediction=236, span="28-28"];
m32_8 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="options.StringValue.Should().Equal(''out.ext'')", prediction=236, span="29-29"];
m32_3 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="ResultShouldBeTrue()", prediction=235, span="23-23"];
m32_9 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", file="ValueOptionAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", span="17-17"];
m32_10 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueOption.SimpleOptionsWithValueOption()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueOption.SimpleOptionsWithValueOption()", span="35-35"];
m32_14 [cluster="Unk.True", file="ValueOptionAttributeParsingFixture.cs", label="Entry Unk.True", span=""];
m32_16 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", span="33-33"];
m32_17 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithValueOption()", prediction=244, span="35-35"];
m32_18 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                new string[] { ''--switch'' }, options)", prediction=245, span="36-37"];
m32_20 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="options.BooleanValue.Should().Be.True()", prediction=244, span="41-41"];
m32_21 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="options.StringItem.Should().Be.Null()", prediction=244, span="42-42"];
m32_22 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="options.IntegerItem.Should().Equal(0)", prediction=244, span="43-43"];
m32_23 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="options.NullableDoubleItem.Should().Be.Null()", prediction=244, span="44-44"];
m32_19 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="ResultShouldBeTrue()", prediction=235, span="39-39"];
m32_24 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", file="ValueOptionAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", span="33-33"];
m32_37 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueOptionAndValueList.SimpleOptionsWithValueOptionAndValueList()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueOptionAndValueList.SimpleOptionsWithValueOptionAndValueList()", span="35-35"];
m32_25 [cluster="Unk.Null", file="ValueOptionAttributeParsingFixture.cs", label="Entry Unk.Null", span=""];
m32_13 [cluster="Unk.Should", file="ValueOptionAttributeParsingFixture.cs", label="Entry Unk.Should", span=""];
m32_26 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", span="48-48"];
m32_27 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithValueOptionAndValueList()", prediction=251, span="50-50"];
m32_28 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                new string[] { ''ofvalueoption'', ''-1234'', ''4321'', ''forvaluelist1'', ''forvaluelist2'', ''forvaluelist3'' }, options)", prediction=252, span="51-52"];
m32_30 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="options.StringItem.Should().Equal(''ofvalueoption'')", prediction=251, span="56-56"];
m32_31 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="options.NullableInteger.Should().Equal(-1234)", prediction=251, span="57-57"];
m32_32 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="options.UnsignedIntegerItem.Should().Equal(4321U)", prediction=251, span="58-58"];
m32_33 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="options.Items[0].Should().Equal(''forvaluelist1'')", prediction=251, span="59-59"];
m32_34 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="options.Items[1].Should().Equal(''forvaluelist2'')", prediction=251, span="60-60"];
m32_35 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="options.Items[2].Should().Equal(''forvaluelist3'')", prediction=251, span="61-61"];
m32_29 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="ResultShouldBeTrue()", prediction=235, span="54-54"];
m32_36 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", file="ValueOptionAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", span="48-48"];
m32_12 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m32_44 [file="ValueOptionAttributeParsingFixture.cs", label="CommandLine.Tests.ValueOptionAttributeParsingFixture", span=""];
m33_24 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="var options = new OptionsWithVerbs()", span="66-66"];
m33_15 [cluster="CommandLine.Tests.ValueListAttributeFixture.MockSpecializedList.MockSpecializedList()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.MockSpecializedList.MockSpecializedList()", span="41-41"];
m33_37 [cluster="CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="CommandLine.Tests.ValueListAttributeFixture", span=""];
m33_38 [cluster="CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", color=green, community=0, file="VerbsFixture.cs", label="var options = new OptionsWithVerbs()", prediction=260, span="86-86"];
m33_39 [cluster="CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="var testWriter = new StringWriter()", span="87-87"];
m33_40 [cluster="CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="Result = Parser.ParseArguments(new string[] {}, options, testWriter)", span="88-88"];
m33_45 [cluster="CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", color=green, community=0, file="VerbsFixture.cs", label="var helpText = testWriter.ToString()", prediction=261, span="96-96"];
m33_44 [cluster="CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", color=green, community=0, file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''clone'').Should().Be.False()", prediction=262, span="94-94"];
m33_46 [cluster="CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", color=green, community=0, file="VerbsFixture.cs", label="helpText.Should().Equal(''verbs help index'')", prediction=263, span="97-97"];
m33_42 [cluster="CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", color=green, community=0, file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''add'').Should().Be.False()", prediction=262, span="92-92"];
m33_41 [cluster="CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="ResultShouldBeFalse()", span="90-90"];
m33_43 [cluster="CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''commit'').Should().Be.False()", span="93-93"];
m33_47 [cluster="CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", span="84-84"];
m33_4 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs", label="ResultShouldBeTrue()", span="49-49"];
m33_6 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_create_instance()", color=green, community=0, file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''commit'').Should().Be.False()", prediction=262, span="52-52"];
m33_49 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="VerbsFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="64-64"];
m33_52 [cluster="CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", span="101-101"];
m33_54 [cluster="CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", color=green, community=0, file="VerbsFixture.cs", label="var testWriter = new StringWriter()", prediction=266, span="104-104"];
m33_53 [cluster="CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="var options = new OptionsWithVerbs()", span="103-103"];
m33_55 [cluster="CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", color=green, community=0, file="VerbsFixture.cs", label="Result = Parser.ParseArguments(new string[] {''clone'', ''--no_hardlinks''}, options, testWriter)", prediction=267, span="105-105"];
m33_60 [cluster="CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="var helpText = testWriter.ToString()", span="114-114"];
m33_56 [cluster="CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="ResultShouldBeFalse()", span="107-107"];
m33_58 [cluster="CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", color=green, community=0, file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''commit'').Should().Be.False()", prediction=262, span="110-110"];
m33_57 [cluster="CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''add'').Should().Be.False()", span="109-109"];
m33_59 [cluster="CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", color=green, community=0, file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''clone'').Should().Be.True()", prediction=262, span="112-112"];
m33_61 [cluster="CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", color=green, community=0, file="VerbsFixture.cs", label="helpText.Should().Equal(''help for: clone'')", prediction=270, span="115-115"];
m33_62 [cluster="CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", span="101-101"];
m33_17 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="VerbsFixture.cs", label="var options = new MockOptions()", span="81-81"];
m33_3 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_create_instance()", color=green, community=0, file="VerbsFixture.cs", label="Result = Parser.ParseArguments(new string[] {''add'', ''-p'', ''untracked.bin''} , options)", prediction=271, span="47-47"];
m33_50 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m33_22 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", span="63-63"];
m33_48 [cluster="System.IO.StringWriter.StringWriter()", file="VerbsFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m33_27 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="Result = Parser.ParseArguments(new string[] { ''commit'', ''--amend'' }, options)", span="70-70"];
m33_28 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", color=green, community=0, file="VerbsFixture.cs", label="ResultShouldBeTrue()", prediction=262, span="72-72"];
m33_29 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", color=green, community=0, file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''add'').Should().Be.False()", prediction=262, span="74-74"];
m33_33 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="options.CommitVerb.Amend.Should().Be.True()", span="80-80"];
m33_31 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", color=green, community=0, file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''clone'').Should().Be.False()", prediction=262, span="76-76"];
m33_32 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="options.CommitVerb.CreationProof.Should().Equal(proof)", span="79-79"];
m33_34 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", span="63-63"];
m33_8 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs", label="options.AddVerb.Should().Not.Be.Null()", span="56-56"];
m33_35 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="VerbsFixture.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m33_25 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="options.CommitVerb.Should().Not.Be.Null()", span="67-67"];
m33_36 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="VerbsFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48"];
m33_0 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", span="54-54"];
m33_2 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", color=green, community=0, file="VerbsFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", prediction=275, span="54-54"];
m33_9 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", color=green, community=0, file="VerbsFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", prediction=276, span="67-67"];
m33_10 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", color=green, community=0, file="VerbsFixture.cs", label="new ValueListAttribute(new List<string>().GetType())", prediction=277, span="69-69"];
m33_11 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", color=green, community=0, file="VerbsFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", prediction=278, span="67-67"];
m33_7 [cluster="System.Collections.Generic.List<T>.List()", color=green, community=0, file="VerbsFixture.cs", label="Entry System.Collections.Generic.List<T>.List()", prediction=262, span="0-0"];
m33_12 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", span="73-73"];
m33_16 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", span="79-79"];
m33_20 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="VerbsFixture.cs", label="values.GetType().Should().Equal(typeof(List<string>))", span="85-85"];
m33_51 [cluster="System.IO.StringWriter.ToString()", file="VerbsFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m33_21 [cluster="Unk.Equal", file="VerbsFixture.cs", label="Entry Unk.Equal", span=""];
m33_26 [cluster="Unk.Equal", color=green, community=0, file="VerbsFixture.cs", label="Entry Unk.Equal", prediction=280, span=""];
m33_23 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="VerbsFixture.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="1459-1459"];
m33_71 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_null_or_empty_verb()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_null_or_empty_verb()", span="132-132"];
m33_72 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_null_or_empty_verb()", color=green, community=0, file="VerbsFixture.cs", label="var options = new OptionsWithVerbs()", prediction=281, span="134-134"];
m33_73 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_null_or_empty_verb()", color=green, community=0, file="VerbsFixture.cs", label="Result = Parser.ParseArguments(new string[] {''commit'', ''--amend''}, options)", prediction=282, span="135-135"];
m33_74 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_null_or_empty_verb()", file="VerbsFixture.cs", label="ResultShouldBeTrue()", span="137-137"];
m33_75 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_null_or_empty_verb()", color=green, community=0, file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(null).Should().Be.False()", prediction=262, span="139-139"];
m33_76 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_null_or_empty_verb()", color=green, community=0, file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked('''').Should().Be.False()", prediction=262, span="140-140"];
m33_77 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_null_or_empty_verb()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_null_or_empty_verb()", span="132-132"];
m33_14 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", span="73-73"];
m33_78 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", span="144-144"];
m33_80 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", color=green, community=0, file="VerbsFixture.cs", label="Result = Parser.ParseArguments(new string[] {''commit'', ''--amend''}, options)", prediction=285, span="147-147"];
m33_79 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", file="VerbsFixture.cs", label="var options = new OptionsWithVerbs()", span="146-146"];
m33_81 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", color=green, community=0, file="VerbsFixture.cs", label="ResultShouldBeTrue()", prediction=262, span="149-149"];
m33_82 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''--commit'').Should().Be.False()", span="151-151"];
m33_84 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", color=green, community=0, file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''-c'').Should().Be.False()", prediction=262, span="153-153"];
m33_83 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''-commit'').Should().Be.False()", span="152-152"];
m33_85 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", color=green, community=0, file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''---commit'').Should().Be.False()", prediction=262, span="154-154"];
m33_86 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''--amend'').Should().Be.False()", span="155-155"];
m33_87 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''-a'').Should().Be.False()", span="156-156"];
m33_88 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", span="144-144"];
m33_63 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_empty_arguments()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_empty_arguments()", span="119-119"];
m33_64 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_empty_arguments()", color=green, community=0, file="VerbsFixture.cs", label="var options = new OptionsWithVerbs()", prediction=289, span="121-121"];
m33_65 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_empty_arguments()", file="VerbsFixture.cs", label="Result = Parser.ParseArguments(new string[] {}, options)", span="122-122"];
m33_66 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_empty_arguments()", color=green, community=0, file="VerbsFixture.cs", label="ResultShouldBeFalse()", prediction=262, span="124-124"];
m33_67 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_empty_arguments()", file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''add'').Should().Be.False()", span="126-126"];
m33_68 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_empty_arguments()", file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''commit'').Should().Be.False()", span="127-127"];
m33_69 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_empty_arguments()", file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''clone'').Should().Be.False()", span="128-128"];
m33_70 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_empty_arguments()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_empty_arguments()", span="119-119"];
m33_89 [file="VerbsFixture.cs", label="CommandLine.Tests.VerbsFixture", span=""];
m34_0 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_parsing_prints_help_index()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_parsing_prints_help_index()", span="43-43"];
m34_1 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_parsing_prints_help_index()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="DoCoreTestForIndex(new string[] {})", prediction=291, span="45-45"];
m34_2 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_parsing_prints_help_index()", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_parsing_prints_help_index()", span="43-43"];
m34_3 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", span="94-94"];
m34_41 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="var options = new OptionsWithVerbsHelp()", span="96-96"];
m34_42 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="var testWriter = new StringWriter()", span="97-97"];
m34_45 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="var helpText = testWriter.ToString()", span="102-102"];
m34_46 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="Console.WriteLine(helpText)", span="103-103"];
m34_47 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", color=green, community=0, file="VerbsHelpTextFixture.cs", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", prediction=292, span="104-104"];
m34_48 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", color=green, community=0, file="VerbsHelpTextFixture.cs", label="lines[5].Trim().Should().Equal(''add       Add file contents to the index.'')", prediction=293, span="106-106"];
m34_50 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", color=green, community=0, file="VerbsHelpTextFixture.cs", label="lines[7].Trim().Should().Equal(''clone     Clone a repository into a new directory.'')", prediction=292, span="108-108"];
m34_51 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", span="94-94"];
m34_22 [cluster="CommandLine.Tests.Mocks.OptionsWithVerbsHelp.OptionsWithVerbsHelp()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithVerbsHelp.OptionsWithVerbsHelp()", span="80-80"];
m34_24 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="64-64"];
m34_25 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m34_23 [cluster="System.IO.StringWriter.StringWriter()", file="VerbsHelpTextFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m34_32 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", span="80-80"];
m34_33 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="VerbsHelpTextFixture.cs", label="var options = new OptionsWithVerbsHelp()", span="82-82"];
m34_34 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="var testWriter = new StringWriter()", prediction=295, span="83-83"];
m34_35 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="Result = Parser.ParseArguments(new string[] {''help'', ''add''}, options, testWriter)", prediction=296, span="84-84"];
m34_37 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="var helpText = testWriter.ToString()", prediction=297, span="88-88"];
m34_38 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="Console.WriteLine(helpText)", prediction=298, span="89-89"];
m34_39 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", prediction=299, span="90-90"];
m34_40 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", span="80-80"];
m34_4 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpPrintsHelpIndex()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpPrintsHelpIndex()", span="49-49"];
m34_5 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpPrintsHelpIndex()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="DoCoreTestForIndex(new string[] {''help''})", prediction=291, span="51-51"];
m34_6 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpPrintsHelpIndex()", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpPrintsHelpIndex()", span="49-49"];
m34_7 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_bad_help_prints_help_index()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_bad_help_prints_help_index()", span="55-55"];
m34_8 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_bad_help_prints_help_index()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="DoCoreTestForIndex(new string[] { ''help'', ''undefined'' })", prediction=291, span="57-57"];
m34_9 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_bad_help_prints_help_index()", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_bad_help_prints_help_index()", span="55-55"];
m34_10 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", span="61-61"];
m34_11 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="var options = new OptionsWithVerbsHelp()", prediction=302, span="63-63"];
m34_12 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="var testWriter = new StringWriter()", span="64-64"];
m34_15 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="var helpText = testWriter.ToString()", prediction=303, span="69-69"];
m34_14 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="ResultShouldBeFalse()", prediction=291, span="67-67"];
m34_16 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="Console.WriteLine(helpText)", span="70-70"];
m34_17 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", prediction=305, span="71-71"];
m34_21 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", span="61-61"];
m34_26 [cluster="System.IO.StringWriter.ToString()", file="VerbsHelpTextFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m34_27 [cluster="System.Console.WriteLine(string)", file="VerbsHelpTextFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m34_29 [cluster="string.Trim()", file="VerbsHelpTextFixture.cs", label="Entry string.Trim()", span="0-0"];
m34_31 [cluster="Unk.Equal", file="VerbsHelpTextFixture.cs", label="Entry Unk.Equal", span=""];
m34_28 [cluster="string.Split(string[], System.StringSplitOptions)", file="VerbsHelpTextFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m34_52 [file="VerbsHelpTextFixture.cs", label="CommandLine.Text.Tests.VerbsHelpTextFixture", span=""];
n27 -> n5  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", style=dashed];
n27 -> n7  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", style=dashed];
n27 -> n19  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", style=dashed];
n27 -> n20  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", style=dashed];
n6 -> n8  [color=darkseagreen4, key=1, label=warrior, style=dashed];
n6 -> n9  [color=darkseagreen4, key=1, label=warrior, style=dashed];
n18 -> n21  [color=darkseagreen4, key=1, label=instance, style=dashed];
d1 -> d5  [color=green, key=1, label=ae, style=dashed];
d13 -> d4  [color=darkseagreen4, key=1, label="CommandLine.Tests.ArgumentParserFixture", style=dashed];
m1_9 -> m1_12  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_9 -> m1_13  [color=green, key=1, label="string[]", style=dashed];
m1_11 -> m1_13  [color=green, key=1, label=i, style=dashed];
m1_11 -> m1_14  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_14 -> m1_14  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="T[]", style=dashed];
m1_0 -> m1_4  [color=green, key=1, label="T[]", style=dashed];
m1_2 -> m1_4  [color=green, key=1, label=i, style=dashed];
m1_2 -> m1_5  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_5 -> m1_5  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_78 -> m2_206  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_78 -> m2_207  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_78 -> m2_209  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.ParsingError>", style=dashed];
m2_205 -> m2_207  [color=darkseagreen4, key=1, label=property, style=dashed];
m2_208 -> m2_210  [color=darkseagreen4, key=1, label=parserState, style=dashed];
m2_19 -> m2_21  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_19 -> m2_23  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_173 -> m2_175  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_173 -> m2_177  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_47 -> m2_60  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
m2_58 -> m2_62  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_56 -> m2_60  [color=darkseagreen4, key=1, label=parser, style=dashed];
m2_39 -> m2_82  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_39 -> m2_83  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m2_39 -> m2_84  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m2_39 -> m2_86  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m2_39 -> m2_87  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m2_81 -> m2_84  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
m2_81 -> m2_87  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
m2_82 -> m2_84  [color=darkseagreen4, key=1, label=arg, style=dashed];
m2_82 -> m2_87  [color=darkseagreen4, key=1, label=arg, style=dashed];
m2_168 -> m2_170  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_168 -> m2_171  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_167 -> m2_186  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_167 -> m2_187  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_135 -> m2_155  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_135 -> m2_156  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_135 -> m2_157  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_156 -> m2_159  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m2_157 -> m2_159  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m2_93 -> m2_95  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_93 -> m2_96  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_93 -> m2_99  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_97 -> m2_99  [color=darkseagreen4, key=1, label=pair, style=dashed];
m2_98 -> m2_100  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m2_162 -> m2_164  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_162 -> m2_165  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_103 -> m2_108  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_46 -> m2_114  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
m2_46 -> m2_116  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
m2_46 -> m2_119  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
m2_46 -> m2_124  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
m2_46 -> m2_126  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
m2_46 -> m2_127  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
m2_46 -> m2_130  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
m2_113 -> m2_115  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m2_113 -> m2_116  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m2_113 -> m2_119  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m2_113 -> m2_123  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m2_113 -> m2_124  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m2_113 -> m2_130  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m2_121 -> m2_126  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m2_121 -> m2_127  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m2_128 -> m2_131  [color=darkseagreen4, key=1, label=verbResult, style=dashed];
m2_190 -> m2_194  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_190 -> m2_200  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_194 -> m2_199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_220 -> m2_224  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_137 -> m2_142  [color=darkseagreen4, key=1, label="CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>", style=dashed];
m2_137 -> m2_143  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_137 -> m2_148  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_137 -> m2_149  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_137 -> m2_150  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_144 -> m2_150  [color=darkseagreen4, key=1, label=verb, style=dashed];
m2_146 -> m2_148  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m2_146 -> m2_149  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m2_179 -> m2_181  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_179 -> m2_183  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_18 -> m2_29  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_18 -> m2_31  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_25 -> m2_28  [color=darkseagreen4, key=1, label=pair, style=dashed];
m2_25 -> m2_29  [color=darkseagreen4, key=1, label=pair, style=dashed];
m2_25 -> m2_31  [color=darkseagreen4, key=1, label=pair, style=dashed];
m2_26 -> m2_28  [color=darkseagreen4, key=1, label=helpWriter, style=dashed];
m2_26 -> m2_32  [color=darkseagreen4, key=1, label=helpWriter, style=dashed];
m2_13 -> m2_15  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_13 -> m2_16  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_233 -> m2_16  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_23  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_29  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_35  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_43  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_106  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_108  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_115  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_116  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_119  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_124  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_130  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_143  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_150  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_158  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_159  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_165  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_171  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_177  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_183  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_185  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_186  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_192  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_194  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_217  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_218  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_222  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_225  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_226  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_231  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_234 -> m2_200  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_117 -> m3_121  [color=darkseagreen4, key=1, label=bool, style=dashed];
m3_19 -> m3_9  [color=green, key=1, label="CommandLine.Tests.CommandLineParserBaseFixture", style=dashed];
m3_19 -> m3_10  [color=green, key=1, label="CommandLine.Tests.CommandLineParserBaseFixture", style=dashed];
m3_19 -> m3_16  [color=green, key=1, label="CommandLine.Tests.CommandLineParserBaseFixture", style=dashed];
m3_77 -> m3_79  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m3_77 -> m3_80  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m3_77 -> m3_81  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m3_77 -> m3_82  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m3_9 -> m3_108  [color=darkseagreen4, key=1, label="Ninject.Tests.Fakes.IWarrior", style=dashed];
m3_9 -> m3_109  [color=darkseagreen4, key=1, label="Ninject.Tests.Fakes.IWarrior", style=dashed];
m3_88 -> m3_90  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m3_88 -> m3_91  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m3_88 -> m3_92  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m3_88 -> m3_93  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m3_66 -> m3_68  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m3_69 -> m3_71  [color=darkseagreen4, key=1, label=ninja, style=dashed];
m3_1 -> m3_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_26 -> m3_112  [color=darkseagreen4, key=1, label="Ninject.Tests.Fakes.IWarrior", style=dashed];
m3_113 -> m3_115  [color=darkseagreen4, key=1, label=ninja, style=dashed];
m3_125 -> m3_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithPropertyValueTests", style=dashed];
m3_125 -> m3_3  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithPropertyValueTests", style=dashed];
m3_125 -> m3_14  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithPropertyValueTests", style=dashed];
m3_125 -> m3_16  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithPropertyValueTests", style=dashed];
m3_126 -> m3_45  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithParameterTests", style=dashed];
m3_126 -> m3_47  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithParameterTests", style=dashed];
m3_126 -> m3_53  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithParameterTests", style=dashed];
m3_126 -> m3_55  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithParameterTests", style=dashed];
m3_127 -> m3_65  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied", style=dashed];
m3_128 -> m3_100  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.PropertyInjectionTests", style=dashed];
m3_128 -> m3_104  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.PropertyInjectionTests", style=dashed];
m3_128 -> m3_118  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.PropertyInjectionTests", style=dashed];
m3_128 -> m3_119  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.PropertyInjectionTests", style=dashed];
m3_128 -> m3_121  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.PropertyInjectionTests", style=dashed];
m4_47 -> m4_50  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_51 -> m4_54  [color=green, key=1, label=options, style=dashed];
m4_31 -> m4_34  [color=green, key=1, label=options, style=dashed];
m4_71 -> m4_74  [color=green, key=1, label=options, style=dashed];
m4_71 -> m4_75  [color=green, key=1, label=options, style=dashed];
m4_71 -> m4_76  [color=green, key=1, label=options, style=dashed];
m4_71 -> m4_77  [color=green, key=1, label=options, style=dashed];
m4_79 -> m4_7  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_18  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_24  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_33  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_39  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_44  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_53  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_59  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_64  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_69  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_73  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_1 -> m5_6  [color=green, key=1, label=writer, style=dashed];
m7_2 -> m7_4  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m7_3 -> m7_7  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m7_3 -> m7_8  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m7_3 -> m7_9  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m7_3 -> m7_10  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m7_3 -> m7_11  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m7_5 -> m7_7  [color=darkseagreen4, key=1, label=y, style=dashed];
m7_5 -> m7_8  [color=darkseagreen4, key=1, label=y, style=dashed];
m7_53 -> m7_56  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_56 -> m7_56  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_27 -> m8_33  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_27 -> m8_38  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_27 -> m8_43  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_5 -> m8_10  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_5 -> m8_14  [color=darkseagreen4, key=1, label=e, style=dashed];
m9_1 -> m9_5  [color=darkseagreen4, key=1, label=hi, style=dashed];
m9_4 -> m9_6  [color=green, key=1, label=sw, style=dashed];
m9_15 -> m9_19  [color=darkseagreen4, key=1, label=hi, style=dashed];
m10_35 -> m10_37  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m10_1 -> m10_3  [color=darkseagreen4, key=1, label=help, style=dashed];
m10_1 -> m10_4  [color=darkseagreen4, key=1, label=help, style=dashed];
m10_1 -> m10_5  [color=darkseagreen4, key=1, label=help, style=dashed];
m10_1 -> m10_6  [color=darkseagreen4, key=1, label=help, style=dashed];
m10_1 -> m10_7  [color=darkseagreen4, key=1, label=help, style=dashed];
m10_1 -> m10_8  [color=darkseagreen4, key=1, label=help, style=dashed];
m10_1 -> m10_9  [color=darkseagreen4, key=1, label=help, style=dashed];
m10_50 -> m10_8  [color=darkseagreen4, key=1, label="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions", style=dashed];
m10_51 -> m10_46  [color=green, key=1, label="CommandLine.Tests.HelpOptionAttributeFixture", style=dashed];
m11_203 -> m11_205  [color=darkseagreen4, key=1, label="CommandLine.Text.FormatOptionHelpTextEventArgs", style=dashed];
m11_203 -> m11_210  [color=darkseagreen4, key=1, label="CommandLine.Text.FormatOptionHelpTextEventArgs", style=dashed];
m11_154 -> m11_157  [color=green, key=1, label=lines, style=dashed];
m11_80 -> m11_82  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_80 -> m11_83  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_80 -> m11_84  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_27 -> m11_33  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_27 -> m11_30  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_27 -> m11_31  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_27 -> m11_32  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_29 -> m11_31  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_29 -> m11_32  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_29 -> m11_33  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_29 -> m11_34  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_114 -> m11_117  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_114 -> m11_118  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_114 -> m11_119  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_95 -> m11_97  [color=green, key=1, label=local, style=dashed];
m11_95 -> m11_98  [color=green, key=1, label=local, style=dashed];
m11_95 -> m11_99  [color=green, key=1, label=local, style=dashed];
m11_102 -> m11_105  [color=green, key=1, label=lines, style=dashed];
m11_102 -> m11_106  [color=green, key=1, label=lines, style=dashed];
m11_102 -> m11_107  [color=green, key=1, label=lines, style=dashed];
m11_195 -> m11_197  [color=green, key=1, label=options, style=dashed];
m11_1 -> m11_6  [color=darkseagreen4, key=1, label=help, style=dashed];
m11_1 -> m11_7  [color=darkseagreen4, key=1, label=help, style=dashed];
m11_1 -> m11_8  [color=darkseagreen4, key=1, label=help, style=dashed];
m11_1 -> m11_9  [color=darkseagreen4, key=1, label=help, style=dashed];
m11_1 -> m11_10  [color=darkseagreen4, key=1, label=help, style=dashed];
m11_1 -> m11_11  [color=darkseagreen4, key=1, label=help, style=dashed];
m11_1 -> m11_12  [color=darkseagreen4, key=1, label=help, style=dashed];
m11_4 -> m11_7  [color=darkseagreen4, key=1, label=errors, style=dashed];
m11_214 -> m11_11  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", style=dashed];
m12_17 -> m12_19  [color=green, key=1, label=usageAttributes, style=dashed];
m13_18 -> m13_24  [color=green, key=1, label=proof, style=dashed];
m13_19 -> m13_24  [color=darkseagreen4, key=1, label=options, style=dashed];
m13_49 -> m13_23  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m13_49 -> m13_4  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m13_49 -> m13_44  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m13_42 -> m13_44  [color=green, key=1, label=options, style=dashed];
m13_1 -> m13_6  [color=green, key=1, label=options, style=dashed];
m13_1 -> m13_8  [color=green, key=1, label=options, style=dashed];
m13_1 -> m13_5  [color=darkseagreen4, key=1, label=options, style=dashed];
m13_1 -> m13_7  [color=darkseagreen4, key=1, label=options, style=dashed];
m14_82 -> m14_2  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_19  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_34  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_59  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_65  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_25  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_30  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_39  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_45  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_49  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_69  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m15_78 -> m15_81  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_13 -> m15_16  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_17 -> m15_20  [color=green, key=1, label=options, style=dashed];
m15_57 -> m15_62  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_57 -> m15_64  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_19 -> m15_22  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_23 -> m15_26  [color=green, key=1, label=options, style=dashed];
m15_55 -> m15_58  [color=green, key=1, label=options, style=dashed];
m15_55 -> m15_61  [color=green, key=1, label=options, style=dashed];
m15_55 -> m15_62  [color=green, key=1, label=options, style=dashed];
m15_110 -> m15_115  [color=green, key=1, label=options, style=dashed];
m15_112 -> m15_115  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_112 -> m15_116  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_112 -> m15_117  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_116 -> m15_121  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_118 -> m15_121  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_118 -> m15_122  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_118 -> m15_123  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_122 -> m15_127  [color=green, key=1, label=options, style=dashed];
m15_124 -> m15_127  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_124 -> m15_128  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_124 -> m15_129  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_179 -> m15_182  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_185 -> m15_191  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_47 -> m15_51  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_195 -> m15_201  [color=green, key=1, label=options, style=dashed];
m15_130 -> m15_135  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_130 -> m15_136  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_132 -> m15_135  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_132 -> m15_136  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_132 -> m15_137  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_137 -> m15_143  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_139 -> m15_143  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_139 -> m15_144  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_139 -> m15_145  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_144 -> m15_149  [color=green, key=1, label=options, style=dashed];
m15_144 -> m15_150  [color=green, key=1, label=options, style=dashed];
m15_146 -> m15_149  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_146 -> m15_150  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_146 -> m15_152  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_153 -> m15_157  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_153 -> m15_158  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_153 -> m15_160  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_25 -> m15_28  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_3 -> m15_6  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_45 -> m15_50  [color=green, key=1, label=options, style=dashed];
m15_45 -> m15_51  [color=green, key=1, label=options, style=dashed];
m15_31 -> m15_34  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_187 -> m15_191  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_187 -> m15_192  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_197 -> m15_201  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_197 -> m15_202  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_40 -> m15_44  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_106 -> m15_109  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_1 -> m15_4  [color=green, key=1, label=options, style=dashed];
m15_205 -> m15_6  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_16  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_22  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_28  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_34  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_44  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_51  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_62  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_64  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_81  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_109  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_115  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_116  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_117  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_121  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_122  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_123  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_127  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_128  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_129  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_135  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_136  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_137  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_143  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_144  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_145  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_149  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_150  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_152  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_157  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_158  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_160  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_182  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_191  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_192  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_201  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_202  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m16_26 -> m16_31  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m16_26 -> m16_32  [color=darkseagreen4, key=1, label=object, style=dashed];
m16_27 -> m16_31  [color=darkseagreen4, key=1, label=elementType, style=dashed];
m16_17 -> m16_21  [color=green, key=1, label=string, style=dashed];
m16_17 -> m16_22  [color=green, key=1, label=string, style=dashed];
m16_17 -> m16_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_15 -> m16_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_0 -> m16_3  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m16_80 -> m16_82  [color=darkseagreen4, key=1, label=object, style=dashed];
m16_70 -> m16_73  [color=darkseagreen4, key=1, label=fieldRef, style=dashed];
m16_28 -> m16_30  [color=darkseagreen4, key=1, label=array, style=dashed];
m16_28 -> m16_31  [color=darkseagreen4, key=1, label=array, style=dashed];
m16_28 -> m16_32  [color=darkseagreen4, key=1, label=array, style=dashed];
m16_29 -> m16_31  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_29 -> m16_35  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_35 -> m16_35  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_96 -> m16_16  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_17  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_18  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_32  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_66  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_69  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_81  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_82  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_88  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_91  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_13  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_21  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_22  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m17_20 -> m17_24  [color=darkseagreen4, key=1, label=oa, style=dashed];
m17_21 -> m17_23  [color=darkseagreen4, key=1, label=oi, style=dashed];
m17_9 -> m17_13  [color=darkseagreen4, key=1, label=oa, style=dashed];
m17_10 -> m17_12  [color=darkseagreen4, key=1, label=oi, style=dashed];
m17_53 -> m17_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>", style=dashed];
m17_53 -> m17_68  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>", style=dashed];
m17_53 -> m17_69  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_53 -> m17_70  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_55 -> m17_69  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_55 -> m17_70  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_57 -> m17_68  [color=darkseagreen4, key=1, label=attribute2, style=dashed];
m17_61 -> m17_68  [color=darkseagreen4, key=1, label=option3, style=dashed];
m17_71 -> m17_12  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m17_71 -> m17_13  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m17_71 -> m17_23  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m17_71 -> m17_24  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m18_5 -> m18_7  [color=green, key=1, label=string, style=dashed];
m18_5 -> m18_8  [color=green, key=1, label=string, style=dashed];
m18_22 -> m18_24  [color=green, key=1, label=string, style=dashed];
m18_31 -> m18_6  [color=green, key=1, label="CommandLine.Internal.PropertyWriter", style=dashed];
m18_31 -> m18_7  [color=green, key=1, label="CommandLine.Internal.PropertyWriter", style=dashed];
m18_31 -> m18_8  [color=green, key=1, label="CommandLine.Internal.PropertyWriter", style=dashed];
m18_31 -> m18_24  [color=green, key=1, label="CommandLine.Internal.PropertyWriter", style=dashed];
m19_27 -> m19_38  [color=darkseagreen4, key=1, label=cached, style=dashed];
m19_30 -> m19_32  [color=darkseagreen4, key=1, label=method, style=dashed];
m19_34 -> m19_36  [color=darkseagreen4, key=1, label=data, style=dashed];
m19_0 -> m19_5  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_2 -> m19_16  [color=green, key=1, label=cached, style=dashed];
m19_4 -> m19_13  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_4 -> m19_15  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_7 -> m19_13  [color=darkseagreen4, key=1, label=property, style=dashed];
m19_11 -> m19_13  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m19_43 -> m19_54  [color=darkseagreen4, key=1, label=cached, style=dashed];
m19_46 -> m19_48  [color=darkseagreen4, key=1, label=method, style=dashed];
m19_50 -> m19_52  [color=darkseagreen4, key=1, label=data, style=dashed];
m19_74 -> m19_77  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_80 -> m19_85  [color=green, key=1, label=object, style=dashed];
m19_80 -> m19_94  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_82 -> m19_98  [color=darkseagreen4, key=1, label=cached, style=dashed];
m19_95 -> m19_97  [color=darkseagreen4, key=1, label=found, style=dashed];
m19_58 -> m19_71  [color=darkseagreen4, key=1, label=cached, style=dashed];
m19_60 -> m19_68  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_60 -> m19_70  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_66 -> m19_68  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m23_1 -> m23_7  [color=darkseagreen4, key=1, label=options, style=dashed];
m24_43 -> m24_45  [color=green, key=1, label=lines, style=dashed];
m24_7 -> m24_11  [color=green, key=1, label=lines, style=dashed];
m24_62 -> m24_4  [color=green, key=1, label="CommandLine.Tests.StrictFixture", style=dashed];
m28_3 -> m28_6  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m28_26 -> m28_29  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_13 -> m28_18  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_13 -> m28_19  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_15 -> m28_18  [color=darkseagreen4, key=1, label=concreteType, style=dashed];
m28_15 -> m28_19  [color=darkseagreen4, key=1, label=property, style=dashed];
m28_37 -> m28_40  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_42 -> m28_44  [color=darkseagreen4, key=1, label=pairZero, style=dashed];
m28_43 -> m28_45  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m29_28 -> m29_33  [color=darkseagreen4, key=1, label=options, style=dashed];
m29_29 -> m29_31  [color=darkseagreen4, key=1, label=values, style=dashed];
m29_29 -> m29_32  [color=darkseagreen4, key=1, label=values, style=dashed];
m29_37 -> m29_33  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeFixture", style=dashed];
m30_41 -> m30_45  [color=darkseagreen4, key=1, label=options, style=dashed];
m30_21 -> m30_29  [color=darkseagreen4, key=1, label=options, style=dashed];
m30_3 -> m30_11  [color=darkseagreen4, key=1, label=options, style=dashed];
m30_54 -> m30_2  [color=green, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_35  [color=green, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_40  [color=green, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_49  [color=green, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_20  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m31_16 -> m31_20  [color=green, key=1, label=string, style=dashed];
m31_16 -> m31_21  [color=green, key=1, label=string, style=dashed];
m31_9 -> m31_12  [color=green, key=1, label=string, style=dashed];
m31_36 -> m31_4  [color=green, key=1, label="CommandLine.Internal.ValueMapper", style=dashed];
m31_36 -> m31_5  [color=green, key=1, label="CommandLine.Internal.ValueMapper", style=dashed];
m31_36 -> m31_10  [color=green, key=1, label="CommandLine.Internal.ValueMapper", style=dashed];
m31_36 -> m31_12  [color=green, key=1, label="CommandLine.Internal.ValueMapper", style=dashed];
m31_36 -> m31_17  [color=green, key=1, label="CommandLine.Internal.ValueMapper", style=dashed];
m31_36 -> m31_20  [color=green, key=1, label="CommandLine.Internal.ValueMapper", style=dashed];
m31_36 -> m31_21  [color=green, key=1, label="CommandLine.Internal.ValueMapper", style=dashed];
m31_36 -> m31_28  [color=green, key=1, label="CommandLine.Internal.ValueMapper", style=dashed];
m32_1 -> m32_4  [color=green, key=1, label=options, style=dashed];
m32_1 -> m32_5  [color=green, key=1, label=options, style=dashed];
m32_1 -> m32_6  [color=green, key=1, label=options, style=dashed];
m32_1 -> m32_7  [color=green, key=1, label=options, style=dashed];
m32_1 -> m32_8  [color=green, key=1, label=options, style=dashed];
m32_17 -> m32_20  [color=green, key=1, label=options, style=dashed];
m32_17 -> m32_21  [color=green, key=1, label=options, style=dashed];
m32_17 -> m32_22  [color=green, key=1, label=options, style=dashed];
m32_17 -> m32_23  [color=green, key=1, label=options, style=dashed];
m32_27 -> m32_30  [color=green, key=1, label=options, style=dashed];
m32_27 -> m32_31  [color=green, key=1, label=options, style=dashed];
m32_27 -> m32_32  [color=green, key=1, label=options, style=dashed];
m32_27 -> m32_33  [color=green, key=1, label=options, style=dashed];
m32_27 -> m32_34  [color=green, key=1, label=options, style=dashed];
m32_27 -> m32_35  [color=green, key=1, label=options, style=dashed];
m32_44 -> m32_3  [color=green, key=1, label="CommandLine.Tests.ValueOptionAttributeParsingFixture", style=dashed];
m32_44 -> m32_19  [color=green, key=1, label="CommandLine.Tests.ValueOptionAttributeParsingFixture", style=dashed];
m32_44 -> m32_29  [color=green, key=1, label="CommandLine.Tests.ValueOptionAttributeParsingFixture", style=dashed];
m32_44 -> m32_41  [color=green, key=1, label="CommandLine.Tests.ValueOptionAttributeParsingFixture", style=dashed];
m33_24 -> m33_26  [color=green, key=1, label=options, style=dashed];
m33_24 -> m33_32  [color=darkseagreen4, key=1, label=options, style=dashed];
m33_24 -> m33_33  [color=darkseagreen4, key=1, label=options, style=dashed];
m33_37 -> m33_33  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeFixture", style=dashed];
m33_28 -> m33_33  [color=darkseagreen4, key=1, label=options, style=dashed];
m33_23 -> m33_26  [color=green, key=1, label=proof, style=dashed];
m33_23 -> m33_32  [color=darkseagreen4, key=1, label=proof, style=dashed];
m33_89 -> m33_6  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_7  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_28  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_29  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_31  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_42  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_44  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_58  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_59  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_66  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_75  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_76  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_81  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_84  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_85  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_4  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_41  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_43  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_56  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_57  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_67  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_68  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_69  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_74  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_82  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_83  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_86  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_87  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m34_47 -> m34_50  [color=green, key=1, label=lines, style=dashed];
m34_52 -> m34_1  [color=green, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
m34_52 -> m34_5  [color=green, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
m34_52 -> m34_8  [color=green, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
m34_52 -> m34_14  [color=green, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
}
