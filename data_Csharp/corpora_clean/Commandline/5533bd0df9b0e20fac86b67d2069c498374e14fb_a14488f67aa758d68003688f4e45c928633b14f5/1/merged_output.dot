digraph  {
n0 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityTests()", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityTests()", span="7-7"];
n1 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityTests()", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityTests()", span="7-7"];
n2 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", span="24-24"];
n3 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", label="Assert.Equal(expected, word.ToQuantity(quatity))", span="26-26"];
n4 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", span="24-24"];
n5 [cluster="string.ToQuantity(int, Humanizer.ShowQuantityAs)", label="Entry string.ToQuantity(int, Humanizer.ShowQuantityAs)", span="45-45"];
n6 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
n7 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="41-41"];
n8 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.None))", span="43-43"];
n9 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="41-41"];
n10 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="58-58"];
n11 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.Numeric))", span="61-61"];
n12 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="58-58"];
n13 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", span="77-77"];
n14 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.Words))", span="79-79"];
n15 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", span="77-77"];
m0_0 [cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.NumberToWordsTests()", file="NameLookup.cs", label="Entry Humanizer.Tests.Localisation.es.NumberToWordsTests.NumberToWordsTests()", span="7-7"];
m0_1 [cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.NumberToWordsTests()", file="NameLookup.cs", label="Exit Humanizer.Tests.Localisation.es.NumberToWordsTests.NumberToWordsTests()", span="7-7"];
m0_5 [cluster="int.ToWords()", file="NameLookup.cs", label="Entry int.ToWords()", span="32-32"];
m0_7 [cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToOrdinalWords(int, string, Humanizer.GrammaticalGender)", file="NameLookup.cs", label="Entry Humanizer.Tests.Localisation.es.NumberToWordsTests.ToOrdinalWords(int, string, Humanizer.GrammaticalGender)", span="56-56"];
m0_8 [cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToOrdinalWords(int, string, Humanizer.GrammaticalGender)", file="NameLookup.cs", label="Assert.Equal(words, number.ToOrdinalWords(gender))", span="58-58"];
m0_9 [cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToOrdinalWords(int, string, Humanizer.GrammaticalGender)", file="NameLookup.cs", label="Exit Humanizer.Tests.Localisation.es.NumberToWordsTests.ToOrdinalWords(int, string, Humanizer.GrammaticalGender)", span="56-56"];
m0_2 [cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWords(int, string)", file="NameLookup.cs", label="Entry Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWords(int, string)", span="45-45"];
m0_3 [cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWords(int, string)", file="NameLookup.cs", label="Assert.Equal(expected, number.ToWords())", span="47-47"];
m0_4 [cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWords(int, string)", file="NameLookup.cs", label="Exit Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWords(int, string)", span="45-45"];
m0_10 [cluster="int.ToOrdinalWords(Humanizer.GrammaticalGender)", file="NameLookup.cs", label="Entry int.ToOrdinalWords(Humanizer.GrammaticalGender)", span="79-79"];
m1_0 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="ParserResult.cs", label="Entry CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="22-22"];
m1_1 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="ParserResult.cs", label="string.IsNullOrEmpty(helpText)", span="24-24"];
m1_3 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", color=red, community=0, file="ParserResult.cs", label="-1: formatStyles == null", span="25-25"];
m1_5 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", color=red, community=0, file="ParserResult.cs", label="-1: sample == null", span="26-26"];
m1_7 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="ParserResult.cs", label="this.helpText = helpText", span="28-28"];
m1_8 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="ParserResult.cs", label="this.formatStyles = formatStyles", span="29-29"];
m1_9 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="ParserResult.cs", label="this.sample = sample", span="30-30"];
m1_2 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="ParserResult.cs", label="throw new ArgumentException(''helpText can't be null or empty'', ''helpText'');", span="24-24"];
m1_4 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", color=red, community=0, file="ParserResult.cs", label="-1: throw new ArgumentNullException(''formatStyles'');", span="25-25"];
m1_6 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", color=red, community=0, file="ParserResult.cs", label="-1: throw new ArgumentNullException(''sample'');", span="26-26"];
m1_10 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="ParserResult.cs", label="Exit CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="22-22"];
m1_16 [cluster="CommandLine.Text.Example.Example(string, object)", file="ParserResult.cs", label="Entry CommandLine.Text.Example.Example(string, object)", span="38-38"];
m1_17 [cluster="CommandLine.Text.Example.Example(string, object)", file="ParserResult.cs", label="Exit CommandLine.Text.Example.Example(string, object)", span="38-38"];
m1_24 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", file="ParserResult.cs", label="Entry CommandLine.Text.Example.Equals(CommandLine.Text.Example)", span="88-88"];
m1_30 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", file="ParserResult.cs", label="other == null", span="90-90"];
m1_32 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", file="ParserResult.cs", label="return HelpText.Equals(other.HelpText)\r\n                && FormatStyles.SequenceEqual(other.FormatStyles)\r\n                && Sample.Equals(other.Sample);", span="95-97"];
m1_31 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", file="ParserResult.cs", label="return false;", span="92-92"];
m1_33 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", file="ParserResult.cs", label="Exit CommandLine.Text.Example.Equals(CommandLine.Text.Example)", span="88-88"];
m1_26 [cluster="CommandLine.Text.Example.GetHashCode()", file="ParserResult.cs", label="Entry CommandLine.Text.Example.GetHashCode()", span="78-78"];
m1_27 [cluster="CommandLine.Text.Example.GetHashCode()", file="ParserResult.cs", label="return new { HelpText, FormatStyles, Sample }.GetHashCode();", span="80-80"];
m1_28 [cluster="CommandLine.Text.Example.GetHashCode()", file="ParserResult.cs", label="Exit CommandLine.Text.Example.GetHashCode()", span="78-78"];
m1_14 [cluster="CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", file="ParserResult.cs", label="Entry CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", span="33-33"];
m1_15 [cluster="CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", file="ParserResult.cs", label="Exit CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", span="33-33"];
m1_25 [cluster="object.Equals(object)", file="ParserResult.cs", label="Entry object.Equals(object)", span="0-0"];
m1_40 [cluster="CommandLine.UnParserSettings.UnParserSettings()", file="ParserResult.cs", label="Entry CommandLine.UnParserSettings.UnParserSettings()", span="15-15"];
m1_39 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ParserResult.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m1_36 [cluster="CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", file="ParserResult.cs", label="Entry CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", span="103-103"];
m1_37 [cluster="CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", file="ParserResult.cs", label="return example.FormatStyles.Any()\r\n                ? example.FormatStyles\r\n                : new[] { new UnParserSettings { Consumed = true } };", span="105-107"];
m1_38 [cluster="CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", file="ParserResult.cs", label="Exit CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", span="103-103"];
m1_34 [cluster="string.Equals(string)", file="ParserResult.cs", label="Entry string.Equals(string)", span="0-0"];
m1_11 [cluster="string.IsNullOrEmpty(string)", file="ParserResult.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_12 [cluster="System.ArgumentException.ArgumentException(string, string)", file="ParserResult.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m1_35 [cluster="Unk.SequenceEqual", file="ParserResult.cs", label="Entry Unk.SequenceEqual", span=""];
m1_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ParserResult.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_18 [cluster="CommandLine.Text.Example.Equals(object)", file="ParserResult.cs", label="Entry CommandLine.Text.Example.Equals(object)", span="63-63"];
m1_19 [cluster="CommandLine.Text.Example.Equals(object)", file="ParserResult.cs", label="var other = obj as Example", span="65-65"];
m1_22 [cluster="CommandLine.Text.Example.Equals(object)", file="ParserResult.cs", label="return base.Equals(obj);", span="71-71"];
m1_20 [cluster="CommandLine.Text.Example.Equals(object)", file="ParserResult.cs", label="other != null", span="66-66"];
m1_21 [cluster="CommandLine.Text.Example.Equals(object)", file="ParserResult.cs", label="return Equals(other);", span="68-68"];
m1_23 [cluster="CommandLine.Text.Example.Equals(object)", file="ParserResult.cs", label="Exit CommandLine.Text.Example.Equals(object)", span="63-63"];
m1_29 [cluster="object.GetHashCode()", file="ParserResult.cs", label="Entry object.GetHashCode()", span="0-0"];
m1_41 [file="ParserResult.cs", label="CommandLine.Text.Example", span=""];
m2_9 [cluster="string.Substring(int, int)", file="ReflectionExtensions.cs", label="Entry string.Substring(int, int)", span="0-0"];
m2_0 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ReflectionExtensions.cs", label="Entry Humanizer.FixedLengthTruncator.Truncate(string, int, string)", span="7-7"];
m2_1 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ReflectionExtensions.cs", label="value == null", span="9-9"];
m2_3 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ReflectionExtensions.cs", label="value.Length == 0", span="12-12"];
m2_4 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ReflectionExtensions.cs", label="return value;", span="13-13"];
m2_5 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ReflectionExtensions.cs", label="truncationString == null || truncationString.Length > length", span="15-15"];
m2_6 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ReflectionExtensions.cs", label="return value.Substring(0, length);", span="16-16"];
m2_7 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ReflectionExtensions.cs", label="return value.Length > length ? value.Substring(0, length - truncationString.Length) + truncationString : value;", span="18-18"];
m2_2 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ReflectionExtensions.cs", label="return null;", span="10-10"];
m2_8 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ReflectionExtensions.cs", label="Exit Humanizer.FixedLengthTruncator.Truncate(string, int, string)", span="7-7"];
m5_26 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", file="Tokenizer.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", span="110-110"];
m5_27 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", file="Tokenizer.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedNumberOfWords))", span="112-112"];
m5_28 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", file="Tokenizer.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", span="110-110"];
m5_19 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", file="Tokenizer.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", span="80-80"];
m5_20 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", file="Tokenizer.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedLength))", span="82-82"];
m5_21 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", file="Tokenizer.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", span="80-80"];
m5_5 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", file="Tokenizer.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", span="26-26"];
m5_6 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", file="Tokenizer.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedLength))", span="28-28"];
m5_7 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", file="Tokenizer.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", span="26-26"];
m5_23 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", file="Tokenizer.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", span="95-95"];
m5_24 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", file="Tokenizer.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedNumberOfCharacters))", span="97-97"];
m5_25 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", file="Tokenizer.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", span="95-95"];
m5_8 [cluster="string.Truncate(int, Humanizer.ITruncator)", file="Tokenizer.cs", label="Entry string.Truncate(int, Humanizer.ITruncator)", span="27-27"];
m5_3 [cluster="string.Truncate(int)", file="Tokenizer.cs", label="Entry string.Truncate(int)", span="15-15"];
m5_0 [cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", file="Tokenizer.cs", label="Entry Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", span="14-14"];
m5_1 [cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", color=red, community=0, file="Tokenizer.cs", label="-1: Assert.Equal(expectedOutput, input.Truncate(length))", span="16-16"];
m5_2 [cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", file="Tokenizer.cs", label="Exit Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", span="14-14"];
m5_18 [cluster="string.Truncate(int, string)", file="Tokenizer.cs", label="Entry string.Truncate(int, string)", span="39-39"];
m5_22 [cluster="string.Truncate(int, string, Humanizer.ITruncator)", file="Tokenizer.cs", label="Entry string.Truncate(int, string, Humanizer.ITruncator)", span="52-52"];
m5_15 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", file="Tokenizer.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", span="65-65"];
m5_16 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", file="Tokenizer.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString))", span="67-67"];
m5_17 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", file="Tokenizer.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", span="65-65"];
m5_9 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", file="Tokenizer.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", span="38-38"];
m5_10 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", file="Tokenizer.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedNumberOfCharacters))", span="40-40"];
m5_11 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", file="Tokenizer.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", span="38-38"];
m5_12 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", file="Tokenizer.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", span="51-51"];
m5_13 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", file="Tokenizer.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedNumberOfWords))", span="53-53"];
m5_14 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", file="Tokenizer.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", span="51-51"];
m7_46 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="TypeLookup.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="90-90"];
m7_47 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="TypeLookup.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptionsWithHelpTextEnum())\r\n                .AddPostOptionsLine(''post-options'')", span="94-97"];
m7_48 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="TypeLookup.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="101-101"];
m7_49 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="TypeLookup.cs", label="Assert.Equal(''pre-options'', lines[0])", span="102-102"];
m7_50 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="TypeLookup.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="103-103"];
m7_51 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="TypeLookup.cs", label="Assert.Equal(''--shape          Define a enum value here.'', lines[2])", span="104-104"];
m7_52 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="TypeLookup.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[3])", span="105-105"];
m7_53 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="TypeLookup.cs", label="Assert.Equal(''post-options'', lines[4])", span="106-106"];
m7_54 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="TypeLookup.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="90-90"];
m7_16 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="TypeLookup.cs", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="79-79"];
m7_22 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="TypeLookup.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46"];
m7_23 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="TypeLookup.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptions())\r\n                .AddPostOptionsLine(''post-options'')", span="50-53"];
m7_24 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="TypeLookup.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="57-57"];
m7_25 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="TypeLookup.cs", label="Assert.Equal(''pre-options'', lines[0])", span="58-58"];
m7_26 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="TypeLookup.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="59-59"];
m7_27 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="TypeLookup.cs", label="Assert.Equal(''-i               Define a int sequence here.'', lines[2])", span="60-60"];
m7_28 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="TypeLookup.cs", label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[3])", span="61-61"];
m7_29 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="TypeLookup.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="62-62"];
m7_30 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="TypeLookup.cs", label="Assert.Equal(''post-options'', lines[5])", span="63-63"];
m7_31 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="TypeLookup.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46"];
m7_62 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="TypeLookup.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="126-126"];
m7_63 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="TypeLookup.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="130-130"];
m7_64 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="TypeLookup.cs", label="sut.MaximumDisplayWidth = 40", span="131-131"];
m7_65 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="TypeLookup.cs", label="sut.AddOptions(new FakeOptionsWithLongDescription())", span="132-132"];
m7_66 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="TypeLookup.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="135-135"];
m7_67 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="TypeLookup.cs", label="lines[2].Should().Be(''  v, verbose    This is the description'')", span="136-136"];
m7_68 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="TypeLookup.cs", label="lines[3].Should().Be(''                of the verbosity to '')", span="138-138"];
m7_69 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="TypeLookup.cs", label="lines[4].Should().Be(''                test out the wrapping '')", span="139-139"];
m7_70 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="TypeLookup.cs", label="lines[5].Should().Be(''                capabilities of the '')", span="140-140"];
m7_71 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="TypeLookup.cs", label="lines[6].Should().Be(''                Help Text.'')", span="141-141"];
m7_72 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="TypeLookup.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="126-126"];
m7_77 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="TypeLookup.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="146-146"];
m7_78 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="TypeLookup.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="150-150"];
m7_79 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="TypeLookup.cs", label="sut.MaximumDisplayWidth = 40", span="151-151"];
m7_80 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="TypeLookup.cs", label="sut.AddOptions(new FakeOptionsWithLongDescriptionAndNoSpaces())", span="152-152"];
m7_81 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="TypeLookup.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="155-155"];
m7_82 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="TypeLookup.cs", label="lines[2].Should().Be(''  v, verbose    Before '')", span="156-156"];
m7_83 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="TypeLookup.cs", label="lines[3].Should().Be(''                012345678901234567890123'')", span="157-157"];
m7_84 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="TypeLookup.cs", label="lines[4].Should().Be(''                After'')", span="158-158"];
m7_85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="TypeLookup.cs", label="lines[5].Should().Be(''  input-file    Before '')", span="159-159"];
m7_86 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="TypeLookup.cs", label="lines[6].Should().Be(''                012345678901234567890123'')", span="160-160"];
m7_87 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="TypeLookup.cs", label="lines[7].Should().Be(''                456789 After'')", span="161-161"];
m7_88 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="TypeLookup.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="146-146"];
m7_196 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="TypeLookup.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m7_170 [cluster="Unk.True", file="TypeLookup.cs", label="Entry Unk.True", span=""];
m7_119 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="TypeLookup.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="192-192"];
m7_153 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="252-252"];
m7_154 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="var fakeResult = new ParserResult<FakeOptions>(\r\n                ParserResultType.Options,\r\n                new FakeOptions(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="255-263"];
m7_155 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="266-266"];
m7_156 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="269-269"];
m7_157 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="271-271"];
m7_158 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="272-272"];
m7_159 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''ERROR(S):'', lines[2])", span="273-273"];
m7_160 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''Token 'badtoken' is not recognized.'', lines[3])", span="274-274"];
m7_161 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''A sequence option 'i' is defined with few items than required.'', lines[4])", span="275-275"];
m7_162 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[5])", span="276-276"];
m7_163 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''-i               Define a int sequence here.'', lines[6])", span="277-277"];
m7_164 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[7])", span="278-278"];
m7_165 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[8])", span="279-279"];
m7_166 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="252-252"];
m7_169 [cluster="string.StartsWith(string, System.StringComparison)", file="TypeLookup.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m7_35 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="TypeLookup.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="68-68"];
m7_36 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="TypeLookup.cs", label="var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptionsWithHelpTextEnum())\r\n                .AddPostOptionsLine(''post-options'')", span="72-75"];
m7_37 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="TypeLookup.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="79-79"];
m7_38 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="TypeLookup.cs", label="Assert.Equal(''pre-options'', lines[0])", span="80-80"];
m7_39 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="TypeLookup.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="81-81"];
m7_40 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="TypeLookup.cs", label="Assert.Equal(''--shape          Define a enum value here. Valid values: Circle, Square,'', lines[2])", span="82-82"];
m7_41 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="TypeLookup.cs", label="Assert.Equal(''Triangle'', lines[3])", span="83-83"];
m7_42 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="TypeLookup.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="84-84"];
m7_43 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="TypeLookup.cs", label="Assert.Equal(''post-options'', lines[5])", span="85-85"];
m7_44 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="TypeLookup.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="68-68"];
m7_123 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="TypeLookup.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="287-287"];
m7_45 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithHelpTextEnum.FakeOptionsWithHelpTextEnum()", file="TypeLookup.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithHelpTextEnum.FakeOptionsWithHelpTextEnum()", span="11-11"];
m7_90 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="TypeLookup.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="166-166"];
m7_91 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="TypeLookup.cs", label="var sut = new HelpText(''Heading Info.'')", span="170-170"];
m7_92 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="TypeLookup.cs", label="sut.MaximumDisplayWidth = 40", span="171-171"];
m7_93 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="TypeLookup.cs", label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new FakeOptionsForHelp())\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="172-174"];
m7_94 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="TypeLookup.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="177-177"];
m7_95 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="TypeLookup.cs", label="lines[1].Should().Be(''Before '')", span="178-178"];
m7_96 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="TypeLookup.cs", label="lines[2].Should().Be(''0123456789012345678901234567890123456789'')", span="179-179"];
m7_97 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="TypeLookup.cs", label="lines[3].Should().Be(''012 After'')", span="180-180"];
m7_98 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="TypeLookup.cs", label="lines[lines.Length - 3].Should().Be(''Before '')", span="181-181"];
m7_99 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="TypeLookup.cs", label="lines[lines.Length - 2].Should().Be(''0123456789012345678901234567890123456789'')", span="182-182"];
m7_100 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="TypeLookup.cs", label="lines[lines.Length - 1].Should().Be('' After'')", span="183-183"];
m7_101 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="TypeLookup.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="166-166"];
m7_0 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="TypeLookup.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
m7_1 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", color=red, community=0, file="TypeLookup.cs", label="-1: Assert.Equal(string.Empty, new HelpText().ToString())", span="18-18"];
m7_2 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="TypeLookup.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
m7_183 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="312-312"];
m7_184 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="315-316"];
m7_185 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="var fakeResult = new ParserResult<object>(\r\n                ParserResultType.Verbs,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(null, null, false)\r\n                    },\r\n                Maybe.Just(verbTypes))", span="317-324"];
m7_186 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="327-327"];
m7_187 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="330-330"];
m7_188 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="332-332"];
m7_189 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="333-333"];
m7_190 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''add       Add file contents to the index.'', lines[2])", span="334-334"];
m7_191 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''commit    Record changes to the repository.'', lines[3])", span="335-335"];
m7_192 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''clone     Clone a repository into a new directory.'', lines[4])", span="336-336"];
m7_193 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''help      Display more information on a specific command.'', lines[5])", span="337-337"];
m7_194 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="312-312"];
m7_131 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", file="TypeLookup.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", span="422-422"];
m7_152 [cluster="System.InvalidOperationException.InvalidOperationException()", file="TypeLookup.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m7_34 [cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="TypeLookup.cs", label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15"];
m7_195 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="TypeLookup.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m7_127 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="TypeLookup.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="342-342"];
m7_3 [cluster="CommandLine.Text.HelpText.HelpText()", file="TypeLookup.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="33-33"];
m7_55 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="TypeLookup.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="111-111"];
m7_56 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="TypeLookup.cs", label="var sut = new HelpText(''Meta Value.'')\r\n                .AddOptions(new FakeOptionsWithMetaValue())", span="115-116"];
m7_57 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="TypeLookup.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="119-119"];
m7_58 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="TypeLookup.cs", label="Assert.Equal(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'', lines[2])", span="121-121"];
m7_59 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="TypeLookup.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="111-111"];
m7_19 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="TypeLookup.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="346-346"];
m7_129 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="TypeLookup.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="368-368"];
m7_61 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", file="TypeLookup.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", span="4-4"];
m7_125 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="TypeLookup.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="320-320"];
m7_132 [cluster="lambda expression", file="TypeLookup.cs", label="Entry lambda expression", span="209-232"];
m7_133 [cluster="lambda expression", file="TypeLookup.cs", label="err.Tag", span="211-211"];
m7_135 [cluster="lambda expression", file="TypeLookup.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="214-214"];
m7_137 [cluster="lambda expression", file="TypeLookup.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="216-216"];
m7_139 [cluster="lambda expression", file="TypeLookup.cs", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="218-218"];
m7_141 [cluster="lambda expression", file="TypeLookup.cs", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="220-220"];
m7_143 [cluster="lambda expression", file="TypeLookup.cs", label="return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;", span="222-222"];
m7_145 [cluster="lambda expression", file="TypeLookup.cs", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="224-224"];
m7_149 [cluster="lambda expression", file="TypeLookup.cs", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="228-228"];
m7_134 [cluster="lambda expression", file="TypeLookup.cs", label="ErrorType.BadFormatTokenError", span="213-213"];
m7_136 [cluster="lambda expression", file="TypeLookup.cs", label="ErrorType.MissingValueOptionError", span="215-215"];
m7_138 [cluster="lambda expression", file="TypeLookup.cs", label="ErrorType.UnknownOptionError", span="217-217"];
m7_140 [cluster="lambda expression", file="TypeLookup.cs", label="ErrorType.MissingRequiredOptionError", span="219-219"];
m7_142 [cluster="lambda expression", file="TypeLookup.cs", label="ErrorType.MutuallyExclusiveSetError", span="221-221"];
m7_144 [cluster="lambda expression", file="TypeLookup.cs", label="ErrorType.SequenceOutOfRangeError", span="223-223"];
m7_146 [cluster="lambda expression", file="TypeLookup.cs", label="ErrorType.NoVerbSelectedError", span="225-225"];
m7_148 [cluster="lambda expression", file="TypeLookup.cs", label="ErrorType.BadVerbSelectedError", span="227-227"];
m7_150 [cluster="lambda expression", file="TypeLookup.cs", label="throw new InvalidOperationException();", span="230-230"];
m7_147 [cluster="lambda expression", file="TypeLookup.cs", label="return ''ERR no-verb-selected'';", span="226-226"];
m7_151 [cluster="lambda expression", file="TypeLookup.cs", label="Exit lambda expression", span="209-232"];
m7_182 [cluster="ParserResult<object>.cstr", file="TypeLookup.cs", label="Entry ParserResult<object>.cstr", span=""];
m7_60 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="TypeLookup.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="56-56"];
m7_120 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="TypeLookup.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="265-265"];
m7_75 [cluster="Unk.Should", file="TypeLookup.cs", label="Entry Unk.Should", span=""];
m7_117 [cluster="ParserResult<NullInstance>.cstr", file="TypeLookup.cs", label="Entry ParserResult<NullInstance>.cstr", span=""];
m7_76 [cluster="Unk.Be", file="TypeLookup.cs", label="Entry Unk.Be", span=""];
m7_4 [cluster="CommandLine.Text.HelpText.ToString()", file="TypeLookup.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="450-450"];
m7_33 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", file="TypeLookup.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(T)", span="366-366"];
m7_197 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="TypeLookup.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
m7_102 [cluster="CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", file="TypeLookup.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", span="4-4"];
m7_126 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="TypeLookup.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="406-406"];
m7_17 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="TypeLookup.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="26-26"];
m7_89 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", file="TypeLookup.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", span="31-31"];
m7_122 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="TypeLookup.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="276-276"];
m7_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeLookup.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="59-59"];
m7_168 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="TypeLookup.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="276-276"];
m7_20 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="TypeLookup.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="356-356"];
m7_124 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="TypeLookup.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="298-298"];
m7_21 [cluster="string.ToNotEmptyLines()", file="TypeLookup.cs", label="Entry string.ToNotEmptyLines()", span="10-10"];
m7_118 [cluster="CommandLine.NullInstance.NullInstance()", file="TypeLookup.cs", label="Entry CommandLine.NullInstance.NullInstance()", span="9-9"];
m7_130 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="TypeLookup.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m7_121 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="TypeLookup.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m7_32 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="TypeLookup.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m7_6 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="TypeLookup.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m7_7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="TypeLookup.cs", label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31"];
m7_8 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="TypeLookup.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34"];
m7_9 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="TypeLookup.cs", label="Assert.Equal(''Unit-tests 2.0'', lines[0])", span="36-36"];
m7_10 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="TypeLookup.cs", label="Assert.Equal(''Copyright (C) 2005 - 2013 Author'', lines[1])", span="37-37"];
m7_11 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="TypeLookup.cs", label="Assert.Equal(''pre-options line 1'', lines[2])", span="38-38"];
m7_12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="TypeLookup.cs", label="Assert.Equal(''pre-options line 2'', lines[3])", span="39-39"];
m7_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="TypeLookup.cs", label="Assert.Equal(''post-options line 1'', lines[4])", span="40-40"];
m7_14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="TypeLookup.cs", label="Assert.Equal(''post-options line 2'', lines[5])", span="41-41"];
m7_15 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="TypeLookup.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m7_103 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="189-189"];
m7_104 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="var fakeResult = new ParserResult<NullInstance>(\r\n                ParserResultType.Options,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new MutuallyExclusiveSetError(new NameInfo(''z'', '''')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="192-208"];
m7_105 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.MutuallyExclusiveSetError:\r\n                            return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="209-232"];
m7_106 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, 2)", span="235-235"];
m7_107 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="var lines = errorsText.ToNotEmptyLines()", span="238-238"];
m7_108 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''  ERR badtoken'', lines[0])", span="240-240"];
m7_109 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''  ERR x, switch'', lines[1])", span="241-241"];
m7_110 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''  ERR unknown'', lines[2])", span="242-242"];
m7_111 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''  ERR missing'', lines[3])", span="243-243"];
m7_112 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''  ERR z'', lines[4])", span="244-244"];
m7_113 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''  ERR s, sequence'', lines[5])", span="245-245"];
m7_114 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''  ERR no-verb-selected'', lines[6])", span="246-246"];
m7_115 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''  ERR badverb'', lines[7])", span="247-247"];
m7_116 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="189-189"];
m7_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="284-284"];
m7_172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="var fakeResult = new ParserResult<object>(\r\n                ParserResultType.Verbs,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="287-294"];
m7_173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="297-297"];
m7_174 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="300-300"];
m7_175 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="302-302"];
m7_176 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="303-303"];
m7_177 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''-p, --patch    Use the interactive patch selection interface to chose which'', lines[2])", span="304-304"];
m7_178 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''changes to commit.'', lines[3])", span="305-305"];
m7_179 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''--amend        Used to amend the tip of the current branch.'', lines[4])", span="306-306"];
m7_180 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Assert.Equal(''--help         Display this help screen.'', lines[5])", span="307-307"];
m7_181 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="TypeLookup.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="284-284"];
m7_167 [cluster="ParserResult<FakeOptions>.cstr", file="TypeLookup.cs", label="Entry ParserResult<FakeOptions>.cstr", span=""];
m7_128 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="TypeLookup.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="353-353"];
m7_74 [cluster="string.Split(string[], System.StringSplitOptions)", file="TypeLookup.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m7_73 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", file="TypeLookup.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", span="22-22"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=2, style=dotted];
n3 -> n6  [key=2, style=dotted];
n4 -> n2  [color=blue, key=0, style=bold];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n8 -> n5  [key=2, style=dotted];
n8 -> n6  [key=2, style=dotted];
n9 -> n7  [color=blue, key=0, style=bold];
n10 -> n11  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n11 -> n5  [key=2, style=dotted];
n11 -> n6  [key=2, style=dotted];
n12 -> n10  [color=blue, key=0, style=bold];
n13 -> n14  [key=0, style=solid];
n14 -> n15  [key=0, style=solid];
n14 -> n5  [key=2, style=dotted];
n14 -> n6  [key=2, style=dotted];
n15 -> n13  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_7 -> m0_8  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_10  [key=2, style=dotted];
m0_8 -> n6  [key=2, style=dotted];
m0_9 -> m0_7  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [key=2, style=dotted];
m0_3 -> n6  [key=2, style=dotted];
m0_4 -> m0_2  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>", style=dashed];
m1_0 -> m1_5  [color=red, key=1, label=object, style=dashed];
m1_0 -> m1_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_0 -> m1_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>", style=dashed];
m1_0 -> m1_9  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [color=red, key=0, style=solid];
m1_1 -> m1_11  [key=2, style=dotted];
m1_3 -> m1_4  [color=red, key=0, style=solid];
m1_3 -> m1_5  [color=red, key=0, style=solid];
m1_5 -> m1_6  [color=red, key=0, style=solid];
m1_5 -> m1_7  [color=red, key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_2 -> m1_10  [key=0, style=solid];
m1_2 -> m1_12  [key=2, style=dotted];
m1_4 -> m1_10  [color=red, key=0, style=solid];
m1_4 -> m1_13  [color=red, key=2, style=dotted];
m1_6 -> m1_10  [color=red, key=0, style=solid];
m1_6 -> m1_13  [color=red, key=2, style=dotted];
m1_10 -> m1_0  [color=blue, key=0, style=bold];
m1_16 -> m1_17  [key=0, style=solid];
m1_17 -> m1_16  [color=blue, key=0, style=bold];
m1_24 -> m1_30  [key=0, style=solid];
m1_24 -> m1_32  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m1_24 -> m1_19  [color=darkorchid, key=3, label="Parameter variable CommandLine.Text.Example other", style=bold];
m1_24 -> m1_31  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_32  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_34  [key=2, style=dotted];
m1_32 -> m1_35  [key=2, style=dotted];
m1_32 -> m1_25  [key=2, style=dotted];
m1_31 -> m1_33  [key=0, style=solid];
m1_33 -> m1_24  [color=blue, key=0, style=bold];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [key=2, style=dotted];
m1_28 -> m1_26  [color=blue, key=0, style=bold];
m1_14 -> m1_15  [key=0, style=solid];
m1_15 -> m1_14  [color=blue, key=0, style=bold];
m1_36 -> m1_37  [key=0, style=solid];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_39  [key=2, style=dotted];
m1_37 -> m1_40  [key=2, style=dotted];
m1_38 -> m1_36  [color=blue, key=0, style=bold];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_22  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_18 -> m1_24  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [color=darkseagreen4, key=1, label=other, style=dashed];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_25  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=0, style=solid];
m1_21 -> m1_24  [key=2, style=dotted];
m1_23 -> m1_18  [color=blue, key=0, style=bold];
m1_41 -> m1_7  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m1_41 -> m1_8  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m1_41 -> m1_9  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m1_41 -> m1_21  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m1_41 -> m1_22  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m1_41 -> m1_27  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m1_41 -> m1_32  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_0 -> m2_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_0 -> m2_5  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_0 -> m2_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_0 -> m2_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_0 -> m2_2  [color=darkorchid, key=3, label="method methodReturn string Truncate", style=bold];
m2_0 -> m2_0  [color=darkorchid, key=3, label="method methodReturn string Truncate", style=bold];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_5  [key=0, style=solid];
m2_4 -> m2_8  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [key=0, style=solid];
m2_6 -> m2_8  [key=0, style=solid];
m2_6 -> m2_9  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_9  [key=2, style=dotted];
m2_2 -> m2_8  [key=0, style=solid];
m2_8 -> m2_0  [color=blue, key=0, style=bold];
m5_26 -> m5_27  [key=0, style=solid];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_22  [key=2, style=dotted];
m5_27 -> n6  [key=2, style=dotted];
m5_28 -> m5_26  [color=blue, key=0, style=bold];
m5_19 -> m5_20  [key=0, style=solid];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_22  [key=2, style=dotted];
m5_20 -> n6  [key=2, style=dotted];
m5_21 -> m5_19  [color=blue, key=0, style=bold];
m5_5 -> m5_6  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_8  [key=2, style=dotted];
m5_6 -> n6  [key=2, style=dotted];
m5_7 -> m5_5  [color=blue, key=0, style=bold];
m5_23 -> m5_24  [key=0, style=solid];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_22  [key=2, style=dotted];
m5_24 -> n6  [key=2, style=dotted];
m5_25 -> m5_23  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [color=red, key=0, style=solid];
m5_1 -> m5_2  [color=red, key=0, style=solid];
m5_1 -> m5_3  [color=red, key=2, style=dotted];
m5_1 -> n6  [color=red, key=2, style=dotted];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_15 -> m5_16  [key=0, style=solid];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_18  [key=2, style=dotted];
m5_16 -> n6  [key=2, style=dotted];
m5_17 -> m5_15  [color=blue, key=0, style=bold];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_8  [key=2, style=dotted];
m5_10 -> n6  [key=2, style=dotted];
m5_11 -> m5_9  [color=blue, key=0, style=bold];
m5_12 -> m5_13  [key=0, style=solid];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_8  [key=2, style=dotted];
m5_13 -> n6  [key=2, style=dotted];
m5_14 -> m5_12  [color=blue, key=0, style=bold];
m7_46 -> m7_47  [key=0, style=solid];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_3  [key=2, style=dotted];
m7_47 -> m7_19  [key=2, style=dotted];
m7_47 -> m7_45  [key=2, style=dotted];
m7_47 -> m7_33  [key=2, style=dotted];
m7_47 -> m7_20  [key=2, style=dotted];
m7_48 -> m7_49  [key=0, style=solid];
m7_48 -> m7_4  [key=2, style=dotted];
m7_48 -> m7_21  [key=2, style=dotted];
m7_48 -> m7_34  [key=2, style=dotted];
m7_48 -> m7_50  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_48 -> m7_51  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_48 -> m7_52  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_48 -> m7_53  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_49 -> m7_50  [key=0, style=solid];
m7_49 -> n6  [key=2, style=dotted];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> n6  [key=2, style=dotted];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> n6  [key=2, style=dotted];
m7_52 -> m7_53  [key=0, style=solid];
m7_52 -> n6  [key=2, style=dotted];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> n6  [key=2, style=dotted];
m7_54 -> m7_46  [color=blue, key=0, style=bold];
m7_22 -> m7_23  [key=0, style=solid];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_3  [key=2, style=dotted];
m7_23 -> m7_19  [key=2, style=dotted];
m7_23 -> m7_32  [key=2, style=dotted];
m7_23 -> m7_33  [key=2, style=dotted];
m7_23 -> m7_20  [key=2, style=dotted];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_4  [key=2, style=dotted];
m7_24 -> m7_21  [key=2, style=dotted];
m7_24 -> m7_34  [key=2, style=dotted];
m7_24 -> m7_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_24 -> m7_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_24 -> m7_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_24 -> m7_29  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_24 -> m7_30  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_25 -> m7_26  [key=0, style=solid];
m7_25 -> n6  [key=2, style=dotted];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> n6  [key=2, style=dotted];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> n6  [key=2, style=dotted];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> n6  [key=2, style=dotted];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> n6  [key=2, style=dotted];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> n6  [key=2, style=dotted];
m7_31 -> m7_22  [color=blue, key=0, style=bold];
m7_62 -> m7_63  [key=0, style=solid];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_60  [key=2, style=dotted];
m7_63 -> m7_17  [key=2, style=dotted];
m7_63 -> m7_65  [color=darkseagreen4, key=1, label=sut, style=dashed];
m7_63 -> m7_66  [color=darkseagreen4, key=1, label=sut, style=dashed];
m7_64 -> m7_65  [key=0, style=solid];
m7_65 -> m7_66  [key=0, style=solid];
m7_65 -> m7_73  [key=2, style=dotted];
m7_65 -> m7_33  [key=2, style=dotted];
m7_66 -> m7_67  [key=0, style=solid];
m7_66 -> m7_4  [key=2, style=dotted];
m7_66 -> m7_74  [key=2, style=dotted];
m7_66 -> m7_68  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_66 -> m7_69  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_66 -> m7_70  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_66 -> m7_71  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> m7_75  [key=2, style=dotted];
m7_67 -> m7_76  [key=2, style=dotted];
m7_68 -> m7_69  [key=0, style=solid];
m7_68 -> m7_75  [key=2, style=dotted];
m7_68 -> m7_76  [key=2, style=dotted];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_75  [key=2, style=dotted];
m7_69 -> m7_76  [key=2, style=dotted];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_75  [key=2, style=dotted];
m7_70 -> m7_76  [key=2, style=dotted];
m7_71 -> m7_72  [key=0, style=solid];
m7_71 -> m7_75  [key=2, style=dotted];
m7_71 -> m7_76  [key=2, style=dotted];
m7_72 -> m7_62  [color=blue, key=0, style=bold];
m7_77 -> m7_78  [key=0, style=solid];
m7_78 -> m7_79  [key=0, style=solid];
m7_78 -> m7_60  [key=2, style=dotted];
m7_78 -> m7_17  [key=2, style=dotted];
m7_78 -> m7_80  [color=darkseagreen4, key=1, label=sut, style=dashed];
m7_78 -> m7_81  [color=darkseagreen4, key=1, label=sut, style=dashed];
m7_79 -> m7_80  [key=0, style=solid];
m7_80 -> m7_81  [key=0, style=solid];
m7_80 -> m7_89  [key=2, style=dotted];
m7_80 -> m7_33  [key=2, style=dotted];
m7_81 -> m7_82  [key=0, style=solid];
m7_81 -> m7_4  [key=2, style=dotted];
m7_81 -> m7_74  [key=2, style=dotted];
m7_81 -> m7_83  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_81 -> m7_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_81 -> m7_85  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_81 -> m7_86  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_81 -> m7_87  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_82 -> m7_83  [key=0, style=solid];
m7_82 -> m7_75  [key=2, style=dotted];
m7_82 -> m7_76  [key=2, style=dotted];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_75  [key=2, style=dotted];
m7_83 -> m7_76  [key=2, style=dotted];
m7_84 -> m7_85  [key=0, style=solid];
m7_84 -> m7_75  [key=2, style=dotted];
m7_84 -> m7_76  [key=2, style=dotted];
m7_85 -> m7_86  [key=0, style=solid];
m7_85 -> m7_75  [key=2, style=dotted];
m7_85 -> m7_76  [key=2, style=dotted];
m7_86 -> m7_87  [key=0, style=solid];
m7_86 -> m7_75  [key=2, style=dotted];
m7_86 -> m7_76  [key=2, style=dotted];
m7_87 -> m7_88  [key=0, style=solid];
m7_87 -> m7_75  [key=2, style=dotted];
m7_87 -> m7_76  [key=2, style=dotted];
m7_88 -> m7_77  [color=blue, key=0, style=bold];
m7_153 -> m7_154  [key=0, style=solid];
m7_154 -> m7_155  [key=0, style=solid];
m7_154 -> m7_167  [key=2, style=dotted];
m7_154 -> m7_32  [key=2, style=dotted];
m7_154 -> m7_119  [key=2, style=dotted];
m7_154 -> m7_125  [key=2, style=dotted];
m7_154 -> m7_121  [key=2, style=dotted];
m7_154 -> m7_130  [key=2, style=dotted];
m7_155 -> m7_156  [key=0, style=solid];
m7_155 -> m7_168  [key=2, style=dotted];
m7_156 -> m7_157  [key=0, style=solid];
m7_156 -> m7_4  [key=2, style=dotted];
m7_156 -> m7_21  [key=2, style=dotted];
m7_156 -> m7_34  [key=2, style=dotted];
m7_156 -> m7_158  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_156 -> m7_159  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_156 -> m7_160  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_156 -> m7_161  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_156 -> m7_162  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_156 -> m7_163  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_156 -> m7_164  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_156 -> m7_165  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_157 -> m7_158  [key=0, style=solid];
m7_157 -> m7_169  [key=2, style=dotted];
m7_157 -> m7_170  [key=2, style=dotted];
m7_158 -> m7_159  [key=0, style=solid];
m7_158 -> m7_169  [key=2, style=dotted];
m7_158 -> m7_170  [key=2, style=dotted];
m7_159 -> m7_160  [key=0, style=solid];
m7_159 -> n6  [key=2, style=dotted];
m7_160 -> m7_161  [key=0, style=solid];
m7_160 -> n6  [key=2, style=dotted];
m7_161 -> m7_162  [key=0, style=solid];
m7_161 -> n6  [key=2, style=dotted];
m7_162 -> m7_163  [key=0, style=solid];
m7_162 -> n6  [key=2, style=dotted];
m7_163 -> m7_164  [key=0, style=solid];
m7_163 -> n6  [key=2, style=dotted];
m7_164 -> m7_165  [key=0, style=solid];
m7_164 -> n6  [key=2, style=dotted];
m7_165 -> m7_166  [key=0, style=solid];
m7_165 -> n6  [key=2, style=dotted];
m7_166 -> m7_153  [color=blue, key=0, style=bold];
m7_35 -> m7_36  [key=0, style=solid];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_3  [key=2, style=dotted];
m7_36 -> m7_19  [key=2, style=dotted];
m7_36 -> m7_45  [key=2, style=dotted];
m7_36 -> m7_33  [key=2, style=dotted];
m7_36 -> m7_20  [key=2, style=dotted];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_4  [key=2, style=dotted];
m7_37 -> m7_21  [key=2, style=dotted];
m7_37 -> m7_34  [key=2, style=dotted];
m7_37 -> m7_39  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_37 -> m7_40  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_37 -> m7_41  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_37 -> m7_42  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_37 -> m7_43  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> n6  [key=2, style=dotted];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> n6  [key=2, style=dotted];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> n6  [key=2, style=dotted];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> n6  [key=2, style=dotted];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> n6  [key=2, style=dotted];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> n6  [key=2, style=dotted];
m7_44 -> m7_35  [color=blue, key=0, style=bold];
m7_45 -> m7_121  [color=darkorchid, key=3, label="method methodReturn CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor> FindTypeDescriptor", style=bold];
m7_90 -> m7_91  [key=0, style=solid];
m7_91 -> m7_92  [key=0, style=solid];
m7_91 -> m7_60  [key=2, style=dotted];
m7_91 -> m7_93  [color=darkseagreen4, key=1, label=sut, style=dashed];
m7_91 -> m7_94  [color=darkseagreen4, key=1, label=sut, style=dashed];
m7_92 -> m7_93  [key=0, style=solid];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_19  [key=2, style=dotted];
m7_93 -> m7_102  [key=2, style=dotted];
m7_93 -> m7_33  [key=2, style=dotted];
m7_93 -> m7_20  [key=2, style=dotted];
m7_94 -> m7_95  [key=0, style=solid];
m7_94 -> m7_4  [key=2, style=dotted];
m7_94 -> m7_74  [key=2, style=dotted];
m7_94 -> m7_96  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_94 -> m7_97  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_94 -> m7_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_94 -> m7_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_94 -> m7_100  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_95 -> m7_96  [key=0, style=solid];
m7_95 -> m7_75  [key=2, style=dotted];
m7_95 -> m7_76  [key=2, style=dotted];
m7_96 -> m7_97  [key=0, style=solid];
m7_96 -> m7_75  [key=2, style=dotted];
m7_96 -> m7_76  [key=2, style=dotted];
m7_97 -> m7_98  [key=0, style=solid];
m7_97 -> m7_75  [key=2, style=dotted];
m7_97 -> m7_76  [key=2, style=dotted];
m7_98 -> m7_99  [key=0, style=solid];
m7_98 -> m7_75  [key=2, style=dotted];
m7_98 -> m7_76  [key=2, style=dotted];
m7_99 -> m7_100  [key=0, style=solid];
m7_99 -> m7_75  [key=2, style=dotted];
m7_99 -> m7_76  [key=2, style=dotted];
m7_100 -> m7_101  [key=0, style=solid];
m7_100 -> m7_75  [key=2, style=dotted];
m7_100 -> m7_76  [key=2, style=dotted];
m7_101 -> m7_90  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [color=red, key=0, style=solid];
m7_1 -> m7_2  [color=red, key=0, style=solid];
m7_1 -> m7_3  [color=red, key=2, style=dotted];
m7_1 -> m7_4  [color=red, key=2, style=dotted];
m7_1 -> n6  [color=red, key=2, style=dotted];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m7_183 -> m7_184  [key=0, style=solid];
m7_184 -> m7_185  [key=0, style=solid];
m7_184 -> m7_195  [key=2, style=dotted];
m7_184 -> m7_196  [key=2, style=dotted];
m7_185 -> m7_186  [key=0, style=solid];
m7_185 -> m7_182  [key=2, style=dotted];
m7_185 -> m7_118  [key=2, style=dotted];
m7_185 -> m7_129  [key=2, style=dotted];
m7_185 -> m7_197  [key=2, style=dotted];
m7_186 -> m7_187  [key=0, style=solid];
m7_186 -> m7_168  [key=2, style=dotted];
m7_187 -> m7_188  [key=0, style=solid];
m7_187 -> m7_4  [key=2, style=dotted];
m7_187 -> m7_21  [key=2, style=dotted];
m7_187 -> m7_34  [key=2, style=dotted];
m7_187 -> m7_189  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_187 -> m7_190  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_187 -> m7_191  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_187 -> m7_192  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_187 -> m7_193  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_188 -> m7_189  [key=0, style=solid];
m7_188 -> m7_169  [key=2, style=dotted];
m7_188 -> m7_170  [key=2, style=dotted];
m7_189 -> m7_190  [key=0, style=solid];
m7_189 -> m7_169  [key=2, style=dotted];
m7_189 -> m7_170  [key=2, style=dotted];
m7_190 -> m7_191  [key=0, style=solid];
m7_190 -> n6  [key=2, style=dotted];
m7_191 -> m7_192  [key=0, style=solid];
m7_191 -> n6  [key=2, style=dotted];
m7_192 -> m7_193  [key=0, style=solid];
m7_192 -> n6  [key=2, style=dotted];
m7_193 -> m7_194  [key=0, style=solid];
m7_193 -> n6  [key=2, style=dotted];
m7_194 -> m7_183  [color=blue, key=0, style=bold];
m7_55 -> m7_56  [key=0, style=solid];
m7_56 -> m7_57  [key=0, style=solid];
m7_56 -> m7_60  [key=2, style=dotted];
m7_56 -> m7_61  [key=2, style=dotted];
m7_56 -> m7_33  [key=2, style=dotted];
m7_57 -> m7_58  [key=0, style=solid];
m7_57 -> m7_4  [key=2, style=dotted];
m7_57 -> m7_21  [key=2, style=dotted];
m7_57 -> m7_34  [key=2, style=dotted];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> n6  [key=2, style=dotted];
m7_59 -> m7_55  [color=blue, key=0, style=bold];
m7_132 -> m7_133  [key=0, style=solid];
m7_132 -> m7_135  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m7_132 -> m7_137  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m7_132 -> m7_139  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m7_132 -> m7_141  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m7_132 -> m7_143  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m7_132 -> m7_145  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m7_132 -> m7_149  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m7_133 -> m7_134  [key=0, style=solid];
m7_133 -> m7_136  [key=0, style=solid];
m7_133 -> m7_138  [key=0, style=solid];
m7_133 -> m7_140  [key=0, style=solid];
m7_133 -> m7_142  [key=0, style=solid];
m7_133 -> m7_144  [key=0, style=solid];
m7_133 -> m7_146  [key=0, style=solid];
m7_133 -> m7_148  [key=0, style=solid];
m7_133 -> m7_150  [key=0, style=solid];
m7_135 -> m7_151  [key=0, style=solid];
m7_137 -> m7_151  [key=0, style=solid];
m7_139 -> m7_151  [key=0, style=solid];
m7_141 -> m7_151  [key=0, style=solid];
m7_143 -> m7_151  [key=0, style=solid];
m7_145 -> m7_151  [key=0, style=solid];
m7_149 -> m7_151  [key=0, style=solid];
m7_134 -> m7_135  [key=0, style=solid];
m7_136 -> m7_137  [key=0, style=solid];
m7_138 -> m7_139  [key=0, style=solid];
m7_140 -> m7_141  [key=0, style=solid];
m7_142 -> m7_143  [key=0, style=solid];
m7_144 -> m7_145  [key=0, style=solid];
m7_146 -> m7_147  [key=0, style=solid];
m7_148 -> m7_149  [key=0, style=solid];
m7_150 -> m7_151  [key=0, style=solid];
m7_150 -> m7_152  [key=2, style=dotted];
m7_147 -> m7_151  [key=0, style=solid];
m7_151 -> m7_132  [color=blue, key=0, style=bold];
m7_6 -> m7_7  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_16  [key=2, style=dotted];
m7_7 -> m7_17  [key=2, style=dotted];
m7_7 -> m7_18  [key=2, style=dotted];
m7_7 -> m7_19  [key=2, style=dotted];
m7_7 -> m7_20  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_4  [key=2, style=dotted];
m7_8 -> m7_21  [key=2, style=dotted];
m7_8 -> m7_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_8 -> m7_11  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_8 -> m7_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_8 -> m7_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_8 -> m7_14  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> n6  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> n6  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> n6  [key=2, style=dotted];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> n6  [key=2, style=dotted];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> n6  [key=2, style=dotted];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> n6  [key=2, style=dotted];
m7_15 -> m7_6  [color=blue, key=0, style=bold];
m7_103 -> m7_104  [key=0, style=solid];
m7_104 -> m7_105  [key=0, style=solid];
m7_104 -> m7_117  [key=2, style=dotted];
m7_104 -> m7_118  [key=2, style=dotted];
m7_104 -> m7_119  [key=2, style=dotted];
m7_104 -> m7_120  [key=2, style=dotted];
m7_104 -> m7_121  [key=2, style=dotted];
m7_104 -> m7_122  [key=2, style=dotted];
m7_104 -> m7_123  [key=2, style=dotted];
m7_104 -> m7_124  [key=2, style=dotted];
m7_104 -> m7_125  [key=2, style=dotted];
m7_104 -> m7_126  [key=2, style=dotted];
m7_104 -> m7_127  [key=2, style=dotted];
m7_104 -> m7_128  [key=2, style=dotted];
m7_104 -> m7_129  [key=2, style=dotted];
m7_104 -> m7_130  [key=2, style=dotted];
m7_104 -> m7_106  [color=darkseagreen4, key=1, label=fakeResult, style=dashed];
m7_105 -> m7_106  [key=0, style=solid];
m7_105 -> m7_133  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m7_105 -> m7_135  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m7_105 -> m7_137  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m7_105 -> m7_139  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m7_105 -> m7_141  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m7_105 -> m7_143  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m7_105 -> m7_145  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m7_105 -> m7_149  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m7_106 -> m7_107  [key=0, style=solid];
m7_106 -> m7_131  [key=2, style=dotted];
m7_107 -> m7_108  [key=0, style=solid];
m7_107 -> m7_21  [key=2, style=dotted];
m7_107 -> m7_109  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_107 -> m7_110  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_107 -> m7_111  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_107 -> m7_112  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_107 -> m7_113  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_107 -> m7_114  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_107 -> m7_115  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_108 -> m7_109  [key=0, style=solid];
m7_108 -> n6  [key=2, style=dotted];
m7_109 -> m7_110  [key=0, style=solid];
m7_109 -> n6  [key=2, style=dotted];
m7_110 -> m7_111  [key=0, style=solid];
m7_110 -> n6  [key=2, style=dotted];
m7_111 -> m7_112  [key=0, style=solid];
m7_111 -> n6  [key=2, style=dotted];
m7_112 -> m7_113  [key=0, style=solid];
m7_112 -> n6  [key=2, style=dotted];
m7_113 -> m7_114  [key=0, style=solid];
m7_113 -> n6  [key=2, style=dotted];
m7_114 -> m7_115  [key=0, style=solid];
m7_114 -> n6  [key=2, style=dotted];
m7_115 -> m7_116  [key=0, style=solid];
m7_115 -> n6  [key=2, style=dotted];
m7_116 -> m7_103  [color=blue, key=0, style=bold];
m7_171 -> m7_172  [key=0, style=solid];
m7_172 -> m7_173  [key=0, style=solid];
m7_172 -> m7_182  [key=2, style=dotted];
m7_172 -> m7_118  [key=2, style=dotted];
m7_172 -> m7_129  [key=2, style=dotted];
m7_172 -> m7_130  [key=2, style=dotted];
m7_173 -> m7_174  [key=0, style=solid];
m7_173 -> m7_168  [key=2, style=dotted];
m7_174 -> m7_175  [key=0, style=solid];
m7_174 -> m7_4  [key=2, style=dotted];
m7_174 -> m7_21  [key=2, style=dotted];
m7_174 -> m7_34  [key=2, style=dotted];
m7_174 -> m7_176  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_174 -> m7_177  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_174 -> m7_178  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_174 -> m7_179  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_174 -> m7_180  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_175 -> m7_176  [key=0, style=solid];
m7_175 -> m7_169  [key=2, style=dotted];
m7_175 -> m7_170  [key=2, style=dotted];
m7_176 -> m7_177  [key=0, style=solid];
m7_176 -> m7_169  [key=2, style=dotted];
m7_176 -> m7_170  [key=2, style=dotted];
m7_177 -> m7_178  [key=0, style=solid];
m7_177 -> n6  [key=2, style=dotted];
m7_178 -> m7_179  [key=0, style=solid];
m7_178 -> n6  [key=2, style=dotted];
m7_179 -> m7_180  [key=0, style=solid];
m7_179 -> n6  [key=2, style=dotted];
m7_180 -> m7_181  [key=0, style=solid];
m7_180 -> n6  [key=2, style=dotted];
m7_181 -> m7_171  [color=blue, key=0, style=bold];
}
