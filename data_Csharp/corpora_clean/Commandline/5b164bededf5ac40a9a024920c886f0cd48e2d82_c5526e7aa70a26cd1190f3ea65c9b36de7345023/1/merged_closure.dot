digraph  {
n369 [label="CommandLine.Text.HelpText", span=""];
n370 [label="CommandLine.ParserResult<T>", span=""];
n371 [label=pr, span=""];
n372 [label="System.Func<CommandLine.Error, string>", span=""];
n373 [label=int, span=""];
n374 [label=text, span=""];
n375 [label=string, span=""];
n376 [label=maxLength, span=""];
n377 [label=remainingSpace, span=""];
n0 [cluster="CommandLine.Text.HelpText.HelpText()", label="Entry CommandLine.Text.HelpText.HelpText()", span="34-34"];
n1 [cluster="CommandLine.Text.HelpText.HelpText()", label="Exit CommandLine.Text.HelpText.HelpText()", span="34-34"];
n2 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="46-46"];
n3 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="46-46"];
n4 [cluster="CommandLine.Text.HelpText.HelpText(string)", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="57-57"];
n5 [cluster="CommandLine.Text.HelpText.HelpText(string)", label="Exit CommandLine.Text.HelpText.HelpText(string)", span="57-57"];
n6 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="68-68"];
n7 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="68-68"];
n8 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="80-80"];
n9 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", label="Exit CommandLine.Text.HelpText.HelpText(string, string)", span="80-80"];
n10 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="93-93"];
n11 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="sentenceBuilder == null", span="95-95"];
n13 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="heading == null", span="96-96"];
n15 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="copyright == null", span="97-97"];
n19 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="this.sentenceBuilder = sentenceBuilder", span="102-102"];
n20 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="this.heading = heading", span="103-103"];
n21 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="this.copyright = copyright", span="104-104"];
n12 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="throw new ArgumentNullException(''sentenceBuilder'');", span="95-95"];
n14 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="throw new ArgumentNullException(''heading'');", span="96-96"];
n16 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="throw new ArgumentNullException(''copyright'');", span="97-97"];
n17 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="preOptionsHelp = new StringBuilder(BuilderCapacity)", span="99-99"];
n18 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="postOptionsHelp = new StringBuilder(BuilderCapacity)", span="100-100"];
n24 [cluster="System.Text.StringBuilder.StringBuilder(int)", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
n22 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="93-93"];
n23 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n25 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", span="199-199"];
n26 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="var auto = new HelpText {\r\n                Heading = HeadingInfo.Default,\r\n                Copyright = CopyrightInfo.Default,\r\n                AdditionalNewLineAfterOption = true,\r\n                AddDashesToOption = !verbsIndex\r\n            }", span="204-209"];
n28 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="onError != null && parserResult.Tag == ParserResultType.NotParsed", span="213-213"];
n29 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="errors = ((NotParsed<T>)parserResult).Errors", span="215-215"];
n31 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="auto = onError(auto)", span="219-219"];
n38 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="(verbsIndex && parserResult.VerbTypes.Any()) || errors.Any(e => e.Tag == ErrorType.NoVerbSelectedError)", span="235-235"];
n40 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="auto.AddVerbs(parserResult.VerbTypes.ToArray())", span="238-238"];
n41 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="auto.AddOptions(parserResult.Value)", span="242-242"];
n27 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="var errors = Enumerable.Empty<Error>()", span="211-211"];
n34 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="license.FromJust().AddToHelpText(auto, true)", span="226-226"];
n37 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="usage.FromJust().AddToHelpText(auto, true)", span="232-232"];
n39 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="auto.AddDashesToOption = false", span="237-237"];
n42 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="return auto;", span="245-245"];
n44 [cluster="System.Linq.Enumerable.Empty<TResult>()", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
n32 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="var license = ReflectionHelper.GetAttribute<AssemblyLicenseAttribute>()", span="223-223"];
n30 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="FilterMeaningfulErrors(errors).Any()", span="217-217"];
n45 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="Entry CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="477-477"];
n46 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
n47 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
n33 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="license.IsJust()", span="224-224"];
n48 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12"];
n35 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="var usage = ReflectionHelper.GetAttribute<AssemblyUsageAttribute>()", span="229-229"];
n49 [cluster="CSharpx.Maybe<T>.IsJust<T>()", label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="175-175"];
n50 [cluster="CSharpx.Maybe<T>.FromJust<T>(System.Exception)", label="Entry CSharpx.Maybe<T>.FromJust<T>(System.Exception)", span="160-160"];
n51 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155"];
n36 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="usage.IsJust()", span="230-230"];
n52 [cluster="Unk.Any", label="Entry Unk.Any", span=""];
n56 [cluster="lambda expression", label="Entry lambda expression", span="235-235"];
n53 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
n54 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="372-372"];
n55 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", label="Entry CommandLine.Text.HelpText.AddOptions<T>(T)", span="356-356"];
n43 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", span="199-199"];
n57 [cluster="lambda expression", label="e.Tag == ErrorType.NoVerbSelectedError", span="235-235"];
n58 [cluster="lambda expression", label="Exit lambda expression", span="235-235"];
n59 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="258-258"];
n60 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="parserResult.Tag != ParserResultType.NotParsed", span="260-260"];
n62 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="var errors = ((NotParsed<T>)parserResult).Errors", span="265-265"];
n66 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current));", span="274-274"];
n86 [cluster="lambda expression", label="DefaultParsingErrorsHandler(parserResult, current)", span="274-274"];
n71 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), true);", span="284-284"];
n93 [cluster="lambda expression", label="DefaultParsingErrorsHandler(parserResult, current)", span="284-284"];
n61 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="throw new InvalidOperationException();", span="262-262"];
n63 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="errors.Any(e => e.Tag == ErrorType.VersionRequestedError)", span="267-267"];
n65 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="!errors.Any(e => e.Tag == ErrorType.HelpVerbRequestedError)", span="272-272"];
n67 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="var err = errors.OfType<HelpVerbRequestedError>().Single()", span="277-277"];
n64 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="return new HelpText(HeadingInfo.Default).AddPreOptionsLine(Environment.NewLine);", span="269-269"];
n79 [cluster="lambda expression", label="Entry lambda expression", span="267-267"];
n82 [cluster="lambda expression", label="Entry lambda expression", span="272-272"];
n68 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="err.Matched", span="278-278"];
n75 [cluster="System.Collections.IEnumerable.OfType<TResult>()", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
n76 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
n69 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="var pr = new NotParsed<object>(err.Type.AutoDefault(), Enumerable.Empty<Error>())", span="280-280"];
n70 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="return AutoBuild(pr, current => DefaultParsingErrorsHandler(pr, current));", span="281-281"];
n77 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="142-142"];
n78 [cluster="System.Type.AutoDefault()", label="Entry System.Type.AutoDefault()", span="138-138"];
n90 [cluster="lambda expression", label="DefaultParsingErrorsHandler(pr, current)", span="281-281"];
n72 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="258-258"];
n85 [cluster="lambda expression", label="Entry lambda expression", span="274-274"];
n89 [cluster="lambda expression", label="Entry lambda expression", span="281-281"];
n92 [cluster="lambda expression", label="Entry lambda expression", span="284-284"];
n73 [cluster="System.InvalidOperationException.InvalidOperationException()", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
n74 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="336-336"];
n80 [cluster="lambda expression", label="e.Tag == ErrorType.VersionRequestedError", span="267-267"];
n81 [cluster="lambda expression", label="Exit lambda expression", span="267-267"];
n83 [cluster="lambda expression", label="e.Tag == ErrorType.HelpVerbRequestedError", span="272-272"];
n84 [cluster="lambda expression", label="Exit lambda expression", span="272-272"];
n87 [cluster="lambda expression", label="Exit lambda expression", span="274-274"];
n88 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="292-292"];
n91 [cluster="lambda expression", label="Exit lambda expression", span="281-281"];
n94 [cluster="lambda expression", label="Exit lambda expression", span="284-284"];
n95 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="parserResult == null", span="294-294"];
n97 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="current == null", span="295-295"];
n99 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors).Empty()", span="297-297"];
n100 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="return current;", span="299-299"];
n101 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="var errors = RenderParsingErrorsText(parserResult,\r\n                current.SentenceBuilder.FormatError,\r\n                current.SentenceBuilder.FormatMutuallyExclusiveSetErrors,\r\n                2)", span="302-305"];
n103 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="return current;", span="308-308"];
n108 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="return current;", span="318-318"];
n96 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="throw new ArgumentNullException(''parserResult'');", span="294-294"];
n98 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="throw new ArgumentNullException(''current'');", span="295-295"];
n110 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
n102 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="string.IsNullOrEmpty(errors)", span="306-306"];
n111 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="422-422"];
n112 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n113 [cluster="System.Func<TResult>.Invoke()", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
n114 [cluster="string.Concat(string, string)", label="Entry string.Concat(string, string)", span="0-0"];
n115 [cluster="string.Split(string[], System.StringSplitOptions)", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
n109 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="Exit CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="292-292"];
n116 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="326-326"];
n117 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", label="return info.ToString();", span="328-328"];
n118 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="326-326"];
n119 [cluster="CommandLine.Text.HelpText.ToString()", label="Entry CommandLine.Text.HelpText.ToString()", span="459-459"];
n120 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", label="return AddPreOptionsLine(value, MaximumDisplayWidth);", span="338-338"];
n121 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="336-336"];
n122 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="584-584"];
n123 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="346-346"];
n124 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", label="return AddLine(postOptionsHelp, value);", span="348-348"];
n125 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", label="Exit CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="346-346"];
n126 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="704-704"];
n127 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", label="Equals(options, default(T))", span="358-358"];
n129 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", label="return AddOptionsImpl(\r\n                this.GetSpecificationsFromType(options),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="360-363"];
n128 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", label="throw new ArgumentNullException(''options'');", span="358-358"];
n131 [cluster="object.Equals(object, object)", label="Entry object.Equals(object, object)", span="0-0"];
n130 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", label="Exit CommandLine.Text.HelpText.AddOptions<T>(T)", span="356-356"];
n132 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", label="Entry CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", span="520-520"];
n133 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="546-546"];
n134 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="types == null", span="374-374"];
n136 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="types.Length == 0", span="375-375"];
n138 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="return AddOptionsImpl(\r\n                this.AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="377-380"];
n135 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="throw new ArgumentNullException(''types'');", span="374-374"];
n137 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="throw new ArgumentOutOfRangeException(''types'');", span="375-375"];
n139 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="372-372"];
n141 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", label="Entry CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="534-534"];
n140 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
n142 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, T)", label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, T)", span="389-389"];
n143 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, T)", label="Equals(options, default(T))", span="391-391"];
n145 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, T)", label="return AddOptionsImpl(\r\n                this.GetSpecificationsFromType(options),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="393-396"];
n144 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, T)", label="throw new ArgumentNullException(''options'');", span="391-391"];
n146 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, T)", label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, T)", span="389-389"];
n147 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="406-406"];
n148 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="types == null", span="408-408"];
n150 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="types.Length == 0", span="409-409"];
n152 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="return AddOptionsImpl(this.AdaptVerbsToSpecifications(types), SentenceBuilder.RequiredWord(), maximumLength);", span="411-411"];
n149 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="throw new ArgumentNullException(''types'');", span="408-408"];
n151 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="throw new ArgumentOutOfRangeException(''types'');", span="409-409"];
n153 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="406-406"];
n154 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="parserResult == null", span="428-428"];
n156 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="var meaningfulErrors =\r\n                FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors)", span="430-431"];
n160 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="meaningfulErrors\r\n                .Where(e => e.Tag != ErrorType.MutuallyExclusiveSetError)\r\n                .ForEach(\r\n                    error =>\r\n                        {\r\n                            var line = new StringBuilder(indent.Spaces())\r\n                                .Append(formatError(error)); \r\n                            text.AppendLine(line.ToString());\r\n                        })", span="438-446"];
n173 [cluster="lambda expression", label="var line = new StringBuilder(indent.Spaces())\r\n                                .Append(formatError(error))", span="443-444"];
n161 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="text.AppendIfNotEmpty(\r\n                formatMutuallyExclusiveSetErrors(\r\n                    meaningfulErrors.OfType<MutuallyExclusiveSetError>()))", span="448-450"];
n155 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="throw new ArgumentNullException(''parserResult'');", span="428-428"];
n157 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="meaningfulErrors.Empty()", span="432-432"];
n158 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="return string.Empty;", span="434-434"];
n159 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="var text = new StringBuilder()", span="437-437"];
n164 [cluster="System.Text.StringBuilder.StringBuilder()", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
n174 [cluster="lambda expression", label="text.AppendLine(line.ToString())", span="445-445"];
n162 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="return text.ToString();", span="452-452"];
n165 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
n166 [cluster="Unk.ForEach", label="Entry Unk.ForEach", span=""];
n169 [cluster="lambda expression", label="Entry lambda expression", span="439-439"];
n172 [cluster="lambda expression", label="Entry lambda expression", span="441-446"];
n167 [cluster="System.Text.StringBuilder.AppendIfNotEmpty(params string[])", label="Entry System.Text.StringBuilder.AppendIfNotEmpty(params string[])", span="47-47"];
n163 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="Exit CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="422-422"];
n168 [cluster="System.Text.StringBuilder.ToString()", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
n170 [cluster="lambda expression", label="e.Tag != ErrorType.MutuallyExclusiveSetError", span="439-439"];
n171 [cluster="lambda expression", label="Exit lambda expression", span="439-439"];
n176 [cluster="System.Text.StringBuilder.StringBuilder(string)", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
n177 [cluster="int.Spaces()", label="Entry int.Spaces()", span="30-30"];
n178 [cluster="Unk.formatError", label="Entry Unk.formatError", span=""];
n179 [cluster="System.Text.StringBuilder.Append(string)", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
n175 [cluster="lambda expression", label="Exit lambda expression", span="441-446"];
n180 [cluster="System.Text.StringBuilder.AppendLine(string)", label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0"];
n181 [cluster="CommandLine.Text.HelpText.ToString()", label="int ExtraLength = 10", span="461-461"];
n182 [cluster="CommandLine.Text.HelpText.ToString()", label="return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="462-474"];
n183 [cluster="CommandLine.Text.HelpText.ToString()", label="Exit CommandLine.Text.HelpText.ToString()", span="459-459"];
n184 [cluster="string.SafeLength()", label="Entry string.SafeLength()", span="40-40"];
n185 [cluster="System.Text.StringBuilder.SafeLength()", label="Entry System.Text.StringBuilder.SafeLength()", span="64-64"];
n186 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
n187 [cluster="System.Text.StringBuilder.SafeToString()", label="Entry System.Text.StringBuilder.SafeToString()", span="59-59"];
n188 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="return errors.Where(e => e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError);", span="479-479"];
n189 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="Exit CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="477-477"];
n190 [cluster="lambda expression", label="Entry lambda expression", span="479-479"];
n191 [cluster="lambda expression", label="e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError", span="479-479"];
n192 [cluster="lambda expression", label="Exit lambda expression", span="479-479"];
n193 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="482-482"];
n194 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="484-484"];
n196 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="var words = value.Split(new[] { ' ' })", span="488-488"];
n199 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="words[i].Length < (maximumLength - wordBuffer)", span="491-491"];
n200 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append(words[i])", span="493-493"];
n202 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="(maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="495-495"];
n203 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append('' '')", span="497-497"];
n205 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="words[i].Length >= maximumLength && wordBuffer == 0", span="501-501"];
n206 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append(words[i].Substring(0, maximumLength))", span="503-503"];
n207 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="wordBuffer = maximumLength", span="504-504"];
n209 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="value = value.Substring(Math.Min(wordBuffer, value.Length))", span="512-512"];
n210 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="513-513"];
n211 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="value.Length > maximumLength", span="515-515"];
n212 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append(value)", span="517-517"];
n195 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="var wordBuffer = 0", span="487-487"];
n201 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="wordBuffer += words[i].Length", span="494-494"];
n197 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="var i = 0", span="489-489"];
n214 [cluster="string.Split(params char[])", label="Entry string.Split(params char[])", span="0-0"];
n198 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="i < words.Length", span="489-489"];
n208 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="i++", span="489-489"];
n204 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="wordBuffer++", span="498-498"];
n215 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
n216 [cluster="System.Math.Min(int, int)", label="Entry System.Math.Min(int, int)", span="0-0"];
n217 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
n213 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="482-482"];
n218 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", label="var type = options.GetType()", span="522-522"];
n219 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", label="var optionSpecs = type.GetSpecifications(Specification.FromProperty)\r\n                    .OfType<OptionSpecification>()\r\n                    .Concat(new[] { this.MakeHelpEntry(), this.MakeVersionEntry() })", span="523-525"];
n223 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n220 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", label="var valueSpecs = type.GetSpecifications(Specification.FromProperty)\r\n                .OfType<ValueSpecification>()\r\n                .OrderBy(v => v.Index)", span="526-528"];
n224 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="14-14"];
n225 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", label="Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="564-564"];
n226 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", label="Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="574-574"];
n227 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
n221 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", label="return Enumerable.Empty<Specification>()\r\n                .Concat(optionSpecs)\r\n                .Concat(valueSpecs);", span="529-531"];
n228 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
n229 [cluster="lambda expression", label="Entry lambda expression", span="528-528"];
n222 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", label="Exit CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", span="520-520"];
n230 [cluster="lambda expression", label="v.Index", span="528-528"];
n231 [cluster="lambda expression", label="Exit lambda expression", span="528-528"];
n232 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", label="return (from verbTuple in Verb.SelectFromTypes(types)\r\n                    select\r\n                        OptionSpecification.NewSwitch(\r\n                            string.Empty,\r\n                            verbTuple.Item1.Name,\r\n                            false,\r\n                            verbTuple.Item1.HelpText,\r\n                            string.Empty)).Concat(new[] { this.MakeHelpEntry(), this.MakeVersionEntry() });", span="536-543"];
n233 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", label="Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="534-534"];
n234 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
n235 [cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45"];
n236 [cluster="Unk.Concat", label="Entry Unk.Concat", span=""];
n237 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="var maxLength = GetMaxLength(specifications)", span="551-551"];
n239 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="var remainingSpace = maximumLength - (maxLength + 6)", span="555-555"];
n240 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="557-559"];
n246 [cluster="lambda expression", label="AddOption(requiredWord, maxLength, option, remainingSpace)", span="559-559"];
n238 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="optionsHelp = new StringBuilder(BuilderCapacity)", span="553-553"];
n243 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="711-711"];
n241 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="return this;", span="561-561"];
n244 [cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="251-251"];
n245 [cluster="lambda expression", label="Entry lambda expression", span="558-559"];
n242 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="546-546"];
n247 [cluster="lambda expression", label="Exit lambda expression", span="558-559"];
n248 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="591-591"];
n249 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''help'',\r\n                false,\r\n                sentenceBuilder.HelpCommandText(AddDashesToOption),\r\n                string.Empty);", span="566-571"];
n250 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="564-564"];
n251 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''version'',\r\n                false,\r\n                sentenceBuilder.VersionCommandText(AddDashesToOption),\r\n                string.Empty);", span="576-581"];
n252 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="574-574"];
n253 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="AddLine(preOptionsHelp, value, maximumLength)", span="586-586"];
n254 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="return this;", span="588-588"];
n255 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="584-584"];
n256 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(''  '')", span="593-593"];
n257 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var name = new StringBuilder(maxLength)", span="594-594"];
n258 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="specification.Tag == SpecificationType.Option", span="595-595"];
n259 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="name.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="597-597"];
n260 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="name.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="601-601"];
n261 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())", span="604-604"];
n263 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var optionHelpText = specification.HelpText", span="607-607"];
n264 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="addEnumValuesToHelpText && specification.EnumValues.Any()", span="609-609"];
n265 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="611-611"];
n266 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="specification.DefaultValue.IsJust()", span="614-614"];
n267 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText = ''(Default: {0}) ''.FormatLocal(specification.DefaultValue.FromJust()) + optionHelpText", span="616-616"];
n268 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="specification.Required", span="619-619"];
n269 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="621-621"];
n275 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="words[i].Length < (widthOfHelpText - wordBuffer)", span="632-632"];
n278 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="(widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="636-636"];
n281 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="words[i].Length >= widthOfHelpText && wordBuffer == 0", span="642-642"];
n282 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="644-644"];
n283 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="wordBuffer = widthOfHelpText", span="645-645"];
n286 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="655-656"];
n287 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText.Length > widthOfHelpText", span="658-658"];
n294 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="687-687"];
n293 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="668-668"];
n262 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(''    '')", span="606-606"];
n295 [cluster="string.PadRight(int)", label="Entry string.PadRight(int)", span="0-0"];
n270 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="!string.IsNullOrEmpty(optionHelpText)", span="624-624"];
n272 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var words = optionHelpText.Split(new[] { ' ' })", span="629-629"];
n285 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="654-654"];
n288 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(optionHelpText)", span="661-661"];
n296 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
n297 [cluster="string.FormatLocal(params object[])", label="Entry string.FormatLocal(params object[])", span="25-25"];
n298 [cluster="string.FormatInvariant(params object[])", label="Entry string.FormatInvariant(params object[])", span="20-20"];
n271 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var wordBuffer = 0", span="628-628"];
n277 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="wordBuffer += words[i].Length", span="635-635"];
n273 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var i = 0", span="630-630"];
n274 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="i < words.Length", span="630-630"];
n276 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(words[i])", span="634-634"];
n284 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="i++", span="630-630"];
n280 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="wordBuffer++", span="639-639"];
n279 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append('' '')", span="638-638"];
n299 [cluster="string.Trim()", label="Entry string.Trim()", span="0-0"];
n300 [cluster="string.String(char, int)", label="Entry string.String(char, int)", span="0-0"];
n289 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(Environment.NewLine)", span="662-662"];
n290 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="663-663"];
n291 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="return this;", span="665-665"];
n292 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="591-591"];
n301 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="var optionName = new StringBuilder(maxLength)", span="670-670"];
n302 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="specification.ShortName.Length > 0", span="671-671"];
n304 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="optionName.AppendFormat(''{0}'', specification.ShortName)", span="674-674"];
n305 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="optionName.AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)", span="675-675"];
n306 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="optionName.AppendWhen(specification.LongName.Length > 0, '', '')", span="676-676"];
n307 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="specification.LongName.Length > 0", span="678-678"];
n309 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="optionName.AppendFormat(''{0}'', specification.LongName)", span="681-681"];
n310 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="optionName.AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="682-682"];
n303 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="optionName.AppendWhen(addDashesToOption, '-')", span="673-673"];
n308 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="optionName.AppendWhen(addDashesToOption, ''--'')", span="680-680"];
n311 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="return optionName.ToString();", span="684-684"];
n313 [cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])", label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="21-21"];
n314 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
n315 [cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="33-33"];
n312 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="668-668"];
n316 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="var valueName = new StringBuilder(maxLength)", span="689-689"];
n317 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="specification.MetaName.Length > 0", span="691-691"];
n318 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="valueName.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="693-693"];
n319 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="valueName.AppendFormat(''value pos. {0}'', specification.Index)", span="697-697"];
n320 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="valueName.AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)", span="699-699"];
n321 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="return valueName.ToString();", span="701-701"];
n323 [cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0"];
n322 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="687-687"];
n324 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="AddLine(builder, value, MaximumDisplayWidth)", span="706-706"];
n325 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="return this;", span="708-708"];
n326 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="704-704"];
n327 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", label="return specifications.Aggregate(0,\r\n                (length, spec) =>\r\n                    {\r\n                        var specLength = spec.Tag == SpecificationType.Option\r\n                            ? this.GetMaxOptionLength((OptionSpecification)spec)\r\n                            : this.GetMaxValueLength((ValueSpecification)spec);\r\n\r\n                        return Math.Max(length, specLength);\r\n                    });", span="713-721"];
n328 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="711-711"];
n329 [cluster="Unk.Aggregate", label="Entry Unk.Aggregate", span=""];
n330 [cluster="lambda expression", label="Entry lambda expression", span="714-721"];
n331 [cluster="lambda expression", label="var specLength = spec.Tag == SpecificationType.Option\r\n                            ? this.GetMaxOptionLength((OptionSpecification)spec)\r\n                            : this.GetMaxValueLength((ValueSpecification)spec)", span="716-718"];
n332 [cluster="lambda expression", label="return Math.Max(length, specLength);", span="720-720"];
n334 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="725-725"];
n335 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="768-768"];
n333 [cluster="lambda expression", label="Exit lambda expression", span="714-721"];
n336 [cluster="System.Math.Max(int, int)", label="Entry System.Math.Max(int, int)", span="0-0"];
n337 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var specLength = 0", span="727-727"];
n338 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var hasShort = spec.ShortName.Length > 0", span="729-729"];
n339 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var hasLong = spec.LongName.Length > 0", span="730-730"];
n341 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="spec.MetaValue.Length > 0", span="733-733"];
n342 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="metaLength = spec.MetaValue.Length + 1", span="735-735"];
n349 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += spec.LongName.Length", span="751-751"];
n344 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="++specLength", span="740-740"];
n354 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += 2", span="762-762"];
n355 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="return specLength;", span="765-765"];
n343 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=hasShort, span="738-738"];
n353 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="hasShort && hasLong", span="760-760"];
n340 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var metaLength = 0", span="732-732"];
n348 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=hasLong, span="749-749"];
n347 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += metaLength", span="746-746"];
n352 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += metaLength", span="757-757"];
n345 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=AddDashesToOption, span="741-741"];
n346 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="++specLength", span="743-743"];
n350 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=AddDashesToOption, span="752-752"];
n351 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += 2", span="754-754"];
n356 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="725-725"];
n357 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="var specLength = 0", span="770-770"];
n358 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="var hasMeta = spec.MetaName.Length > 0", span="772-772"];
n360 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="spec.MetaValue.Length > 0", span="775-775"];
n361 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="metaLength = spec.MetaValue.Length + 1", span="777-777"];
n363 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="782-782"];
n364 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="specLength += spec.Index.ToStringInvariant().Length + 11", span="786-786"];
n359 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="var metaLength = 0", span="774-774"];
n362 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label=hasMeta, span="780-780"];
n365 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="specLength += metaLength", span="789-789"];
n368 [cluster="T.ToStringInvariant<T>()", label="Entry T.ToStringInvariant<T>()", span="15-15"];
n366 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="return specLength;", span="791-791"];
n367 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="768-768"];
n369 -> n120  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n124  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n129  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n138  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n145  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n152  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n182  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n232  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n240  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n246  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n241  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n249  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n251  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n253  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n254  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n256  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n259  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n260  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n261  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n262  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n264  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n276  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n279  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n282  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n286  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n288  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n289  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n290  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n291  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n303  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n308  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n324  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n325  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n345  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n350  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n370 -> n86  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n370 -> n93  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n371 -> n90  [color=darkseagreen4, key=1, label=pr, style=dashed];
n374 -> n174  [color=darkseagreen4, key=1, label=text, style=dashed];
n375 -> n246  [color=darkseagreen4, key=1, label=string, style=dashed];
n376 -> n246  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
n377 -> n246  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
n10 -> n13  [color=darkseagreen4, key=1, label=string, style=dashed];
n10 -> n15  [color=darkseagreen4, key=1, label=string, style=dashed];
n25 -> n28  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n25 -> n38  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n25 -> n40  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n25 -> n41  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n26 -> n34  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n37  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n40  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n41  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n42  [color=darkseagreen4, key=1, label=auto, style=dashed];
n29 -> n38  [color=darkseagreen4, key=1, label=errors, style=dashed];
n31 -> n34  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n37  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n40  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n41  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n42  [color=darkseagreen4, key=1, label=auto, style=dashed];
n38 -> n56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n27 -> n38  [color=darkseagreen4, key=1, label=errors, style=dashed];
n32 -> n34  [color=darkseagreen4, key=1, label=license, style=dashed];
n35 -> n37  [color=darkseagreen4, key=1, label=usage, style=dashed];
n54 -> n136  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
n54 -> n138  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
n55 -> n129  [color=darkseagreen4, key=1, label=T, style=dashed];
n59 -> n66  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n59 -> n86  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n59 -> n71  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n59 -> n93  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n62 -> n65  [color=darkseagreen4, key=1, label=errors, style=dashed];
n66 -> n85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n71 -> n92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n63 -> n79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n65 -> n82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n69 -> n90  [color=darkseagreen4, key=1, label=pr, style=dashed];
n70 -> n89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n88 -> n97  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n88 -> n99  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n88 -> n100  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n88 -> n103  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n88 -> n108  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n111 -> n156  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n111 -> n161  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>", style=dashed];
n133 -> n240  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
n133 -> n246  [color=darkseagreen4, key=1, label=string, style=dashed];
n142 -> n145  [color=darkseagreen4, key=1, label=int, style=dashed];
n147 -> n150  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
n147 -> n152  [color=darkseagreen4, key=1, label=int, style=dashed];
n156 -> n161  [color=darkseagreen4, key=1, label=meaningfulErrors, style=dashed];
n160 -> n169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n160 -> n172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n159 -> n174  [color=darkseagreen4, key=1, label=text, style=dashed];
n159 -> n161  [color=darkseagreen4, key=1, label=text, style=dashed];
n159 -> n162  [color=darkseagreen4, key=1, label=text, style=dashed];
n188 -> n190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n193 -> n199  [color=darkseagreen4, key=1, label=int, style=dashed];
n193 -> n200  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
n193 -> n202  [color=darkseagreen4, key=1, label=int, style=dashed];
n193 -> n203  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
n193 -> n205  [color=darkseagreen4, key=1, label=int, style=dashed];
n193 -> n206  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
n193 -> n210  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
n193 -> n211  [color=darkseagreen4, key=1, label=int, style=dashed];
n193 -> n212  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
n196 -> n198  [color=darkseagreen4, key=1, label=words, style=dashed];
n196 -> n199  [color=darkseagreen4, key=1, label=words, style=dashed];
n196 -> n200  [color=darkseagreen4, key=1, label=words, style=dashed];
n196 -> n202  [color=darkseagreen4, key=1, label=words, style=dashed];
n196 -> n205  [color=darkseagreen4, key=1, label=words, style=dashed];
n196 -> n206  [color=darkseagreen4, key=1, label=words, style=dashed];
n209 -> n211  [color=darkseagreen4, key=1, label=string, style=dashed];
n209 -> n212  [color=darkseagreen4, key=1, label=string, style=dashed];
n195 -> n199  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n195 -> n205  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n201 -> n204  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n197 -> n199  [color=darkseagreen4, key=1, label=i, style=dashed];
n197 -> n200  [color=darkseagreen4, key=1, label=i, style=dashed];
n197 -> n202  [color=darkseagreen4, key=1, label=i, style=dashed];
n197 -> n205  [color=darkseagreen4, key=1, label=i, style=dashed];
n197 -> n206  [color=darkseagreen4, key=1, label=i, style=dashed];
n197 -> n208  [color=darkseagreen4, key=1, label=i, style=dashed];
n208 -> n208  [color=darkseagreen4, key=1, label=i, style=dashed];
n204 -> n204  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n219 -> n221  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
n220 -> n229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n232 -> n232  [color=darkseagreen4, key=1, label=verbTuple, style=dashed];
n237 -> n240  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
n237 -> n246  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
n239 -> n246  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
n240 -> n245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n248 -> n258  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n248 -> n259  [color=darkseagreen4, key=1, label=int, style=dashed];
n248 -> n260  [color=darkseagreen4, key=1, label=int, style=dashed];
n248 -> n261  [color=darkseagreen4, key=1, label=int, style=dashed];
n248 -> n264  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n248 -> n266  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n248 -> n268  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n248 -> n275  [color=darkseagreen4, key=1, label=int, style=dashed];
n248 -> n278  [color=darkseagreen4, key=1, label=int, style=dashed];
n248 -> n281  [color=darkseagreen4, key=1, label=int, style=dashed];
n248 -> n282  [color=darkseagreen4, key=1, label=int, style=dashed];
n248 -> n286  [color=darkseagreen4, key=1, label=int, style=dashed];
n248 -> n287  [color=darkseagreen4, key=1, label=int, style=dashed];
n257 -> n259  [color=darkseagreen4, key=1, label=name, style=dashed];
n257 -> n260  [color=darkseagreen4, key=1, label=name, style=dashed];
n257 -> n261  [color=darkseagreen4, key=1, label=name, style=dashed];
n263 -> n270  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n263 -> n288  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n265 -> n270  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n265 -> n288  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n267 -> n270  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n267 -> n288  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n269 -> n288  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n294 -> n317  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n294 -> n318  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n294 -> n319  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n294 -> n320  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n293 -> n302  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n293 -> n304  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n293 -> n305  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n293 -> n306  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n293 -> n307  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n293 -> n309  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n293 -> n310  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n272 -> n274  [color=darkseagreen4, key=1, label=words, style=dashed];
n272 -> n275  [color=darkseagreen4, key=1, label=words, style=dashed];
n272 -> n276  [color=darkseagreen4, key=1, label=words, style=dashed];
n272 -> n278  [color=darkseagreen4, key=1, label=words, style=dashed];
n272 -> n281  [color=darkseagreen4, key=1, label=words, style=dashed];
n272 -> n282  [color=darkseagreen4, key=1, label=words, style=dashed];
n285 -> n287  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n285 -> n288  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n271 -> n275  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n271 -> n281  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n277 -> n280  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n273 -> n275  [color=darkseagreen4, key=1, label=i, style=dashed];
n273 -> n276  [color=darkseagreen4, key=1, label=i, style=dashed];
n273 -> n278  [color=darkseagreen4, key=1, label=i, style=dashed];
n273 -> n281  [color=darkseagreen4, key=1, label=i, style=dashed];
n273 -> n282  [color=darkseagreen4, key=1, label=i, style=dashed];
n273 -> n284  [color=darkseagreen4, key=1, label=i, style=dashed];
n284 -> n284  [color=darkseagreen4, key=1, label=i, style=dashed];
n280 -> n280  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n301 -> n303  [color=darkseagreen4, key=1, label=optionName, style=dashed];
n301 -> n304  [color=darkseagreen4, key=1, label=optionName, style=dashed];
n301 -> n305  [color=darkseagreen4, key=1, label=optionName, style=dashed];
n301 -> n306  [color=darkseagreen4, key=1, label=optionName, style=dashed];
n301 -> n308  [color=darkseagreen4, key=1, label=optionName, style=dashed];
n301 -> n309  [color=darkseagreen4, key=1, label=optionName, style=dashed];
n301 -> n310  [color=darkseagreen4, key=1, label=optionName, style=dashed];
n301 -> n311  [color=darkseagreen4, key=1, label=optionName, style=dashed];
n316 -> n318  [color=darkseagreen4, key=1, label=valueName, style=dashed];
n316 -> n319  [color=darkseagreen4, key=1, label=valueName, style=dashed];
n316 -> n320  [color=darkseagreen4, key=1, label=valueName, style=dashed];
n316 -> n321  [color=darkseagreen4, key=1, label=valueName, style=dashed];
n327 -> n330  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n330 -> n332  [color=darkseagreen4, key=1, label=int, style=dashed];
n334 -> n341  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n335 -> n360  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n337 -> n344  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n337 -> n355  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n338 -> n343  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
n338 -> n353  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
n339 -> n348  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
n339 -> n353  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
n344 -> n344  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n344 -> n346  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n347 -> n355  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n352 -> n355  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n346 -> n346  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n358 -> n362  [color=darkseagreen4, key=1, label=hasMeta, style=dashed];
}
