digraph  {
n41 [label="CommandLine.Text.Example", span=""];
n0 [label="Entry CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="18-18", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
n1 [label="string.IsNullOrEmpty(helpText)", span="20-20", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
n3 [label="formatStyles == null", span="21-21", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
n5 [label="sample == null", span="22-22", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
n7 [label="this.helpText = helpText", span="24-24", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
n8 [label="this.formatStyles = formatStyles", span="25-25", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
n9 [label="this.sample = sample", span="26-26", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
n2 [label="throw new ArgumentException(''helpText can't be null or empty'', ''helpText'');", span="20-20", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
n11 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
n4 [label="throw new ArgumentNullException(''formatStyles'');", span="21-21", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
n6 [label="throw new ArgumentNullException(''sample'');", span="22-22", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
n10 [label="Exit CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="18-18", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
n12 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)"];
n13 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n14 [label="Entry CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", span="29-29", cluster="CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)"];
n15 [label="Exit CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", span="29-29", cluster="CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)"];
n16 [label="Entry CommandLine.Text.Example.Example(string, object)", span="34-34", cluster="CommandLine.Text.Example.Example(string, object)"];
n17 [label="Exit CommandLine.Text.Example.Example(string, object)", span="34-34", cluster="CommandLine.Text.Example.Example(string, object)"];
n18 [label="Entry CommandLine.Text.Example.Equals(object)", span="59-59", cluster="CommandLine.Text.Example.Equals(object)"];
n19 [label="var other = obj as Example", span="61-61", cluster="CommandLine.Text.Example.Equals(object)"];
n22 [label="return base.Equals(obj);", span="67-67", cluster="CommandLine.Text.Example.Equals(object)"];
n20 [label="other != null", span="62-62", cluster="CommandLine.Text.Example.Equals(object)"];
n21 [label="return Equals(other);", span="64-64", cluster="CommandLine.Text.Example.Equals(object)"];
n23 [label="Exit CommandLine.Text.Example.Equals(object)", span="59-59", cluster="CommandLine.Text.Example.Equals(object)"];
n24 [label="Entry CommandLine.Text.Example.Equals(CommandLine.Text.Example)", span="84-84", cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)"];
n25 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)"];
n26 [label="Entry CommandLine.Text.Example.GetHashCode()", span="74-74", cluster="CommandLine.Text.Example.GetHashCode()"];
n27 [label="return new { HelpText, FormatStyles, Sample }.GetHashCode();", span="76-76", cluster="CommandLine.Text.Example.GetHashCode()"];
n28 [label="Exit CommandLine.Text.Example.GetHashCode()", span="74-74", cluster="CommandLine.Text.Example.GetHashCode()"];
n29 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()"];
n30 [label="other == null", span="86-86", cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)"];
n32 [label="return HelpText.Equals(other.HelpText)\r\n                && FormatStyles.SequenceEqual(other.FormatStyles)\r\n                && Sample.Equals(other.Sample);", span="91-93", cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)"];
n31 [label="return false;", span="88-88", cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)"];
n33 [label="Exit CommandLine.Text.Example.Equals(CommandLine.Text.Example)", span="84-84", cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)"];
n34 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)"];
n35 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual"];
n36 [label="Entry CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", span="111-111", cluster="CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)"];
n37 [label="return example.FormatStyles.Any()\r\n                ? example.FormatStyles\r\n                : new[] { new UnParserSettings { Consumed = true } };", span="113-115", cluster="CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)"];
n38 [label="Exit CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", span="111-111", cluster="CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)"];
n39 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()"];
n40 [label="Entry CommandLine.UnParserSettings.UnParserSettings()", span="15-15", cluster="CommandLine.UnParserSettings.UnParserSettings()"];
m1_223 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="HelpText.cs"];
m1_91 [label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="276-276", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m1_107 [label="parserResult == null", span="278-278", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m1_109 [label="current == null", span="279-279", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m1_111 [label="FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors).Empty()", span="281-281", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m1_112 [label="return current;", span="282-282", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m1_113 [label="var errors = RenderParsingErrorsText(parserResult,\r\n                current.SentenceBuilder.FormatError,\r\n                current.SentenceBuilder.FormatMutuallyExclusiveSetErrors,\r\n                2)", span="284-287", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m1_115 [label="return current;", span="289-289", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m1_116 [label="current.AddPreOptionsLine(\r\n                string.Concat(Environment.NewLine, current.SentenceBuilder.ErrorsHeadingText()))", span="291-292", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m1_118 [label="lines.ForEach(\r\n                line => current.AddPreOptionsLine(line))", span="295-296", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m1_119 [label="return current;", span="298-298", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m1_108 [label="throw new ArgumentNullException(''parserResult'');", span="278-278", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m1_110 [label="throw new ArgumentNullException(''current'');", span="279-279", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m1_114 [label="string.IsNullOrEmpty(errors)", span="288-288", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m1_117 [label="var lines = errors.Split(\r\n                new[] { Environment.NewLine }, StringSplitOptions.None)", span="293-294", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m1_120 [label="Exit CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="276-276", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m1_121 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31", cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="HelpText.cs"];
m1_51 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="HelpText.cs"];
m1_193 [label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0", cluster="System.Text.StringBuilder.AppendLine(string)", file="HelpText.cs"];
m1_0 [label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36", cluster="CommandLine.Text.HelpText.HelpText()", file="HelpText.cs"];
m1_1 [label="Exit CommandLine.Text.HelpText.HelpText()", span="36-36", cluster="CommandLine.Text.HelpText.HelpText()", file="HelpText.cs"];
m1_348 [label="Entry string.PadRight(int)", span="0-0", cluster="string.PadRight(int)", file="HelpText.cs"];
m1_430 [label="Entry T.ToStringInvariant<T>()", span="15-15", cluster="T.ToStringInvariant<T>()", file="HelpText.cs"];
m1_293 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="HelpText.cs"];
m1_54 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="336-336", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m1_142 [label="Entry CommandLine.Text.HelpText.AddPreOptionsText(string)", span="331-331", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs"];
m1_144 [label="lines.ForEach(line => AddPreOptionsLine(line))", span="334-334", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs", color=green, community=0];
m1_143 [label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="333-333", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs"];
m1_145 [label="return this;", span="335-335", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs", color=green, community=0];
m1_238 [label="Entry System.Text.StringBuilder.SafeToString()", span="66-66", cluster="System.Text.StringBuilder.SafeToString()", file="HelpText.cs"];
m1_237 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9", cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="HelpText.cs"];
m1_81 [label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29", cluster="CommandLine.TypeInfo.Create(System.Type)", file="HelpText.cs"];
m1_79 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="HelpText.cs"];
m1_372 [label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="HelpText.cs"];
m1_180 [label="Entry System.Text.StringBuilder.AppendIfNotEmpty(params string[])", span="57-57", cluster="System.Text.StringBuilder.AppendIfNotEmpty(params string[])", file="HelpText.cs"];
m1_134 [label="Entry CommandLine.Text.HelpText.ToString()", span="496-496", cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs"];
m1_232 [label="int ExtraLength = 10", span="498-498", cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs"];
m1_233 [label="return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="499-511", cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs"];
m1_234 [label="Exit CommandLine.Text.HelpText.ToString()", span="496-496", cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs"];
m1_235 [label="Entry string.SafeLength()", span="40-40", cluster="string.SafeLength()", file="HelpText.cs"];
m1_138 [label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="326-326", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpText.cs"];
m1_139 [label="return AddLine(postOptionsHelp, value);", span="328-328", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpText.cs"];
m1_140 [label="Exit CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="326-326", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpText.cs"];
m1_221 [label="Entry CSharpx.Maybe<T>.FromJust<T>()", span="342-342", cluster="CSharpx.Maybe<T>.FromJust<T>()", file="HelpText.cs"];
m1_396 [label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="768-768", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_399 [label="var specLength = 0", span="770-770", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_400 [label="var hasShort = spec.ShortName.Length > 0", span="772-772", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_401 [label="var hasLong = spec.LongName.Length > 0", span="773-773", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_403 [label="spec.MetaValue.Length > 0", span="776-776", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_404 [label="metaLength = spec.MetaValue.Length + 1", span="777-777", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_411 [label="specLength += spec.LongName.Length", span="790-790", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_406 [label="++specLength", span="781-781", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_416 [label="specLength += 2", span="798-798", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_417 [label="return specLength;", span="800-800", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_405 [label=hasShort, span="779-779", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_415 [label="hasShort && hasLong", span="797-797", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_402 [label="var metaLength = 0", span="775-775", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_410 [label=hasLong, span="788-788", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_409 [label="specLength += metaLength", span="785-785", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_414 [label="specLength += metaLength", span="794-794", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_407 [label=AddDashesToOption, span="782-782", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_408 [label="++specLength", span="783-783", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_412 [label=AddDashesToOption, span="791-791", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_413 [label="specLength += 2", span="792-792", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_418 [label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="768-768", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_224 [label="Entry CommandLine.Text.Example.GetFormatStylesOrDefault()", span="111-111", cluster="CommandLine.Text.Example.GetFormatStylesOrDefault()", file="HelpText.cs"];
m1_294 [label="return (from verbTuple in Verb.SelectFromTypes(types)\r\n                    select\r\n                        OptionSpecification.NewSwitch(\r\n                            string.Empty,\r\n                            verbTuple.Item1.Name,\r\n                            false,\r\n                            verbTuple.Item1.HelpText,\r\n                            string.Empty)).Concat(new[] { MakeHelpEntry(), MakeVersionEntry() });", span="593-600", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs"];
m1_155 [label="Entry lambda expression", span="341-341", cluster="lambda expression", file="HelpText.cs"];
m1_295 [label="Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="591-591", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs"];
m1_351 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()", file="HelpText.cs"];
m1_236 [label="Entry System.Text.StringBuilder.SafeLength()", span="73-73", cluster="System.Text.StringBuilder.SafeLength()", file="HelpText.cs"];
m1_296 [label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs"];
m1_350 [label="Entry string.FormatInvariant(params object[])", span="20-20", cluster="string.FormatInvariant(params object[])", file="HelpText.cs"];
m1_23 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="HelpText.cs"];
m1_268 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="HelpText.cs"];
m1_122 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="403-403", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m1_168 [label="parserResult == null", span="409-409", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m1_170 [label="var meaningfulErrors =\r\n                FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors)", span="411-412", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m1_174 [label="meaningfulErrors\r\n                .Where(e => e.Tag != ErrorType.MutuallyExclusiveSetError)\r\n                .ForEach(\r\n                    error =>\r\n                        {\r\n                            var line = new StringBuilder(indent.Spaces())\r\n                                .Append(formatError(error)); \r\n                            text.AppendLine(line.ToString());\r\n                        })", span="417-425", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m1_175 [label="return text.AppendIfNotEmpty(\r\n                formatMutuallyExclusiveSetErrors(\r\n                    meaningfulErrors.OfType<MutuallyExclusiveSetError>()))\r\n                .ToString();", span="427-430", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m1_169 [label="throw new ArgumentNullException(''parserResult'');", span="409-409", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m1_171 [label="meaningfulErrors.Empty()", span="413-413", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m1_172 [label="return string.Empty;", span="414-414", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m1_173 [label="var text = new StringBuilder()", span="416-416", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m1_176 [label="Exit CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="403-403", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m1_44 [label="Entry CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="514-514", cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpText.cs"];
m1_239 [label="return errors.Where(e => e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError);", span="516-516", cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpText.cs"];
m1_240 [label="Exit CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="514-514", cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpText.cs"];
m1_284 [label="Entry System.Type.GetUsageData()", span="39-39", cluster="System.Type.GetUsageData()", file="HelpText.cs"];
m1_371 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="18-18", cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])", file="HelpText.cs"];
m1_52 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="HelpText.cs"];
m1_222 [label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="23-23", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="HelpText.cs"];
m1_47 [label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="HelpText.cs"];
m1_309 [label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="648-648", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_317 [label="optionsHelp.Append(''  '')", span="650-650", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_318 [label="var name = new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.Tag == SpecificationType.Option,\r\n                    it => it.Append(AddOptionName(maxLength, (OptionSpecification)specification)),\r\n                    it => it.Append(AddValueName(maxLength, (ValueSpecification)specification)))", span="651-655", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_319 [label="optionsHelp\r\n                .Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())\r\n                .Append(''    '')", span="657-659", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_320 [label="var optionHelpText = specification.HelpText", span="661-661", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_321 [label="addEnumValuesToHelpText && specification.EnumValues.Any()", span="663-663", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_322 [label="optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="664-664", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_323 [label="specification.DefaultValue.Do(\r\n                defaultValue => optionHelpText = ''(Default: {0}) ''.FormatLocal(defaultValue) + optionHelpText)", span="666-667", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_324 [label="specification.Required", span="669-669", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_325 [label="optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="670-670", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_331 [label="words[i].Length < (widthOfHelpText - wordBuffer)", span="680-680", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_334 [label="(widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="684-684", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_337 [label="words[i].Length >= widthOfHelpText && wordBuffer == 0", span="690-690", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_338 [label="optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="692-692", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_339 [label="wordBuffer = widthOfHelpText", span="693-693", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_342 [label="optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="701-702", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_343 [label="optionHelpText.Length > widthOfHelpText", span="704-704", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_326 [label="!string.IsNullOrEmpty(optionHelpText)", span="672-672", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_328 [label="var words = optionHelpText.Split(' ')", span="677-677", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_341 [label="optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="700-700", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_344 [label="optionsHelp\r\n                .Append(optionHelpText)\r\n                .Append(Environment.NewLine)\r\n                .AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="707-710", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_327 [label="var wordBuffer = 0", span="676-676", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_333 [label="wordBuffer += words[i].Length", span="683-683", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_329 [label="var i = 0", span="678-678", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_330 [label="i < words.Length", span="678-678", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_332 [label="optionsHelp.Append(words[i])", span="682-682", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_340 [label="i++", span="678-678", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_336 [label="wordBuffer++", span="687-687", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_335 [label="optionsHelp.Append('' '')", span="686-686", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_345 [label="return this;", span="712-712", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_346 [label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="648-648", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m1_313 [label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="631-631", cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="HelpText.cs"];
m1_276 [label="Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="631-631", cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="HelpText.cs"];
m1_312 [label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''version'',\r\n                false,\r\n                sentenceBuilder.VersionCommandText(AddDashesToOption),\r\n                string.Empty);", span="633-638", cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="HelpText.cs"];
m1_373 [label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="27-27", cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", file="HelpText.cs"];
m1_125 [label="Entry string.Concat(string, string)", span="0-0", cluster="string.Concat(string, string)", file="HelpText.cs"];
m1_56 [label="license.AddToHelpText(auto, true)", span="220-220", cluster="lambda expression", file="HelpText.cs"];
m1_60 [label="usage.AddToHelpText(auto, true)", span="223-223", cluster="lambda expression", file="HelpText.cs"];
m1_55 [label="Entry lambda expression", span="220-220", cluster="lambda expression", file="HelpText.cs"];
m1_59 [label="Entry lambda expression", span="223-223", cluster="lambda expression", file="HelpText.cs"];
m1_62 [label="Entry lambda expression", span="230-230", cluster="lambda expression", file="HelpText.cs"];
m1_57 [label="Exit lambda expression", span="220-220", cluster="lambda expression", file="HelpText.cs"];
m1_61 [label="Exit lambda expression", span="223-223", cluster="lambda expression", file="HelpText.cs"];
m1_63 [label="e.Tag == ErrorType.NoVerbSelectedError", span="230-230", cluster="lambda expression", file="HelpText.cs", color=green, community=0];
m1_64 [label="Exit lambda expression", span="230-230", cluster="lambda expression", file="HelpText.cs"];
m1_89 [label="DefaultParsingErrorsHandler(parserResult, current)", span="262-262", cluster="lambda expression", file="HelpText.cs"];
m1_102 [label="DefaultParsingErrorsHandler(parserResult, current)", span="268-268", cluster="lambda expression", file="HelpText.cs"];
m1_82 [label="Entry lambda expression", span="258-258", cluster="lambda expression", file="HelpText.cs"];
m1_85 [label="Entry lambda expression", span="261-261", cluster="lambda expression", file="HelpText.cs"];
m1_96 [label="DefaultParsingErrorsHandler(pr, current)", span="267-267", cluster="lambda expression", file="HelpText.cs"];
m1_88 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="HelpText.cs"];
m1_92 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="HelpText.cs"];
m1_95 [label="Entry lambda expression", span="267-267", cluster="lambda expression", file="HelpText.cs"];
m1_98 [label="Entry lambda expression", span="267-267", cluster="lambda expression", file="HelpText.cs"];
m1_101 [label="Entry lambda expression", span="268-268", cluster="lambda expression", file="HelpText.cs"];
m1_104 [label="Entry lambda expression", span="268-268", cluster="lambda expression", file="HelpText.cs"];
m1_83 [label="e.Tag == ErrorType.VersionRequestedError", span="258-258", cluster="lambda expression", file="HelpText.cs"];
m1_84 [label="Exit lambda expression", span="258-258", cluster="lambda expression", file="HelpText.cs"];
m1_86 [label="e.Tag == ErrorType.HelpVerbRequestedError", span="261-261", cluster="lambda expression", file="HelpText.cs"];
m1_87 [label="Exit lambda expression", span="261-261", cluster="lambda expression", file="HelpText.cs"];
m1_90 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="HelpText.cs"];
m1_93 [label=e, span="262-262", cluster="lambda expression", file="HelpText.cs"];
m1_94 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="HelpText.cs"];
m1_97 [label="Exit lambda expression", span="267-267", cluster="lambda expression", file="HelpText.cs"];
m1_99 [label=e, span="267-267", cluster="lambda expression", file="HelpText.cs"];
m1_100 [label="Exit lambda expression", span="267-267", cluster="lambda expression", file="HelpText.cs"];
m1_103 [label="Exit lambda expression", span="268-268", cluster="lambda expression", file="HelpText.cs"];
m1_105 [label=e, span="268-268", cluster="lambda expression", file="HelpText.cs"];
m1_106 [label="Exit lambda expression", span="268-268", cluster="lambda expression", file="HelpText.cs"];
m1_129 [label="current.AddPreOptionsLine(line)", span="296-296", cluster="lambda expression", file="HelpText.cs"];
m1_128 [label="Entry lambda expression", span="296-296", cluster="lambda expression", file="HelpText.cs"];
m1_130 [label="Exit lambda expression", span="296-296", cluster="lambda expression", file="HelpText.cs"];
m1_186 [label="var line = new StringBuilder(indent.Spaces())\r\n                                .Append(formatError(error))", span="422-423", cluster="lambda expression", file="HelpText.cs"];
m1_187 [label="text.AppendLine(line.ToString())", span="424-424", cluster="lambda expression", file="HelpText.cs"];
m1_182 [label="Entry lambda expression", span="418-418", cluster="lambda expression", file="HelpText.cs"];
m1_185 [label="Entry lambda expression", span="420-425", cluster="lambda expression", file="HelpText.cs"];
m1_183 [label="e.Tag != ErrorType.MutuallyExclusiveSetError", span="418-418", cluster="lambda expression", file="HelpText.cs"];
m1_184 [label="Exit lambda expression", span="418-418", cluster="lambda expression", file="HelpText.cs"];
m1_188 [label="Exit lambda expression", span="420-425", cluster="lambda expression", file="HelpText.cs"];
m1_197 [label="Entry lambda expression", span="441-441", cluster="lambda expression", file="HelpText.cs"];
m1_198 [label=example, span="441-441", cluster="lambda expression", file="HelpText.cs"];
m1_199 [label="Exit lambda expression", span="441-441", cluster="lambda expression", file="HelpText.cs"];
m1_228 [label="config.PreferShortName = s.PreferShortName", span="479-479", cluster="lambda expression", file="HelpText.cs"];
m1_229 [label="config.GroupSwitches = s.GroupSwitches", span="480-480", cluster="lambda expression", file="HelpText.cs"];
m1_230 [label="config.UseEqualToken = s.UseEqualToken", span="481-481", cluster="lambda expression", file="HelpText.cs"];
m1_227 [label="Entry lambda expression", span="477-482", cluster="lambda expression", file="HelpText.cs"];
m1_231 [label="Exit lambda expression", span="477-482", cluster="lambda expression", file="HelpText.cs"];
m1_241 [label="Entry lambda expression", span="516-516", cluster="lambda expression", file="HelpText.cs"];
m1_242 [label="e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError", span="516-516", cluster="lambda expression", file="HelpText.cs"];
m1_243 [label="Exit lambda expression", span="516-516", cluster="lambda expression", file="HelpText.cs"];
m1_279 [label="Entry lambda expression", span="563-563", cluster="lambda expression", file="HelpText.cs"];
m1_280 [label="v.Index", span="563-563", cluster="lambda expression", file="HelpText.cs"];
m1_281 [label="Exit lambda expression", span="563-563", cluster="lambda expression", file="HelpText.cs"];
m1_286 [label="Entry lambda expression", span="572-588", cluster="lambda expression", file="HelpText.cs"];
m1_287 [label="var prop = tuple.Item1", span="574-574", cluster="lambda expression", file="HelpText.cs"];
m1_288 [label="var attr = tuple.Item2", span="575-575", cluster="lambda expression", file="HelpText.cs"];
m1_289 [label="var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null)", span="577-578", cluster="lambda expression", file="HelpText.cs"];
m1_290 [label="return Tuple.Create(attr, examples);", span="587-587", cluster="lambda expression", file="HelpText.cs"];
m1_291 [label="Exit lambda expression", span="572-588", cluster="lambda expression", file="HelpText.cs"];
m1_307 [label="AddOption(requiredWord, maxLength, option, remainingSpace)", span="616-616", cluster="lambda expression", file="HelpText.cs"];
m1_306 [label="Entry lambda expression", span="615-616", cluster="lambda expression", file="HelpText.cs"];
m1_308 [label="Exit lambda expression", span="615-616", cluster="lambda expression", file="HelpText.cs"];
m1_354 [label="it.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="654-654", cluster="lambda expression", file="HelpText.cs"];
m1_358 [label="it.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="655-655", cluster="lambda expression", file="HelpText.cs"];
m1_353 [label="Entry lambda expression", span="654-654", cluster="lambda expression", file="HelpText.cs"];
m1_357 [label="Entry lambda expression", span="655-655", cluster="lambda expression", file="HelpText.cs"];
m1_361 [label="Entry lambda expression", span="667-667", cluster="lambda expression", file="HelpText.cs"];
m1_362 [label="optionHelpText = ''(Default: {0}) ''.FormatLocal(defaultValue) + optionHelpText", span="667-667", cluster="lambda expression", file="HelpText.cs"];
m1_355 [label="Exit lambda expression", span="654-654", cluster="lambda expression", file="HelpText.cs"];
m1_359 [label="Exit lambda expression", span="655-655", cluster="lambda expression", file="HelpText.cs"];
m1_363 [label="Exit lambda expression", span="667-667", cluster="lambda expression", file="HelpText.cs"];
m1_369 [label="it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', '')", span="721-725", cluster="lambda expression", file="HelpText.cs"];
m1_375 [label="it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="728-731", cluster="lambda expression", file="HelpText.cs"];
m1_368 [label="Entry lambda expression", span="721-725", cluster="lambda expression", file="HelpText.cs"];
m1_374 [label="Entry lambda expression", span="728-731", cluster="lambda expression", file="HelpText.cs"];
m1_370 [label="Exit lambda expression", span="721-725", cluster="lambda expression", file="HelpText.cs"];
m1_376 [label="Exit lambda expression", span="728-731", cluster="lambda expression", file="HelpText.cs"];
m1_380 [label="it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="740-740", cluster="lambda expression", file="HelpText.cs"];
m1_384 [label="it.AppendFormat(''value pos. {0}'', specification.Index)", span="741-741", cluster="lambda expression", file="HelpText.cs"];
m1_379 [label="Entry lambda expression", span="740-740", cluster="lambda expression", file="HelpText.cs"];
m1_383 [label="Entry lambda expression", span="741-741", cluster="lambda expression", file="HelpText.cs"];
m1_381 [label="Exit lambda expression", span="740-740", cluster="lambda expression", file="HelpText.cs"];
m1_385 [label="Exit lambda expression", span="741-741", cluster="lambda expression", file="HelpText.cs"];
m1_392 [label="Entry lambda expression", span="757-764", cluster="lambda expression", file="HelpText.cs"];
m1_393 [label="var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec)", span="759-761", cluster="lambda expression", file="HelpText.cs"];
m1_394 [label="return Math.Max(length, specLength);", span="763-763", cluster="lambda expression", file="HelpText.cs"];
m1_395 [label="Exit lambda expression", span="757-764", cluster="lambda expression", file="HelpText.cs"];
m1_147 [label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="603-603", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs"];
m1_148 [label="types == null", span="355-355", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", color=green, community=0, file="HelpText.cs"];
m1_149 [label="throw new ArgumentNullException(''types'');", span="355-355", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs"];
m1_156 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="370-370", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", color=green, community=0, file="HelpText.cs"];
m1_157 [label="result == null", span="372-372", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs"];
m1_367 [label="Entry System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49", cluster="System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="HelpText.cs"];
m1_77 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="HelpText.cs"];
m1_356 [label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="715-715", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_365 [label="return\r\n                new StringBuilder(maxLength)\r\n                    .MapIf(\r\n                        specification.ShortName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', ''))\r\n                    .MapIf(\r\n                        specification.LongName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue))\r\n                    .ToString();", span="717-732", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_366 [label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="715-715", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m1_4 [label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59", cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpText.cs"];
m1_5 [label="Exit CommandLine.Text.HelpText.HelpText(string)", span="59-59", cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpText.cs"];
m1_298 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="HelpText.cs"];
m1_65 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="251-251", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m1_66 [label="parserResult.Tag != ParserResultType.NotParsed", span="253-253", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m1_68 [label="var errors = ((NotParsed<T>)parserResult).Errors", span="256-256", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m1_72 [label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e);", span="262-262", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m1_75 [label="return err.Matched\r\n                ? AutoBuild(pr, current => DefaultParsingErrorsHandler(pr, current), e => e)\r\n                : AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e, true);", span="266-268", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m1_67 [label="throw new ArgumentException(''Excepting NotParsed<T> type.'', ''parserResult'');", span="254-254", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m1_69 [label="errors.Any(e => e.Tag == ErrorType.VersionRequestedError)", span="258-258", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m1_71 [label="!errors.Any(e => e.Tag == ErrorType.HelpVerbRequestedError)", span="261-261", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m1_73 [label="var err = errors.OfType<HelpVerbRequestedError>().Single()", span="264-264", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m1_70 [label="return new HelpText(HeadingInfo.Default).AddPreOptionsLine(Environment.NewLine);", span="259-259", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m1_74 [label="var pr = new NotParsed<object>(TypeInfo.Create(err.Type), Enumerable.Empty<Error>())", span="265-265", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m1_76 [label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="251-251", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m1_190 [label="Entry int.Spaces()", span="30-30", cluster="int.Spaces()", file="HelpText.cs"];
m1_58 [label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155", cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="HelpText.cs"];
m1_181 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="HelpText.cs"];
m1_220 [label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57", cluster="CSharpx.Maybe<T>.MatchNothing()", file="HelpText.cs"];
m1_177 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="HelpText.cs"];
m1_150 [label="types.Length == 0", span="356-356", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs"];
m1_151 [label="throw new ArgumentOutOfRangeException(''types'');", span="356-356", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", color=green, community=0, file="HelpText.cs"];
m1_152 [label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="358-361", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", color=green, community=0, file="HelpText.cs"];
m1_153 [label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="353-353", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", color=green, community=0, file="HelpText.cs"];
m1_154 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="HelpText.cs"];
m1_53 [label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="353-353", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs"];
m1_219 [label="Entry CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="569-569", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="HelpText.cs"];
m1_282 [label="return type.GetUsageData().Map(\r\n                tuple =>\r\n                {\r\n                    var prop = tuple.Item1;\r\n                    var attr = tuple.Item2;\r\n\r\n                    var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null);\r\n                    //var groups = attr.Groups;\r\n\r\n                    //return examples.Select(example => groups.ContainsKey(example.Group)\r\n                    //    ? example.WithGroupDescription(groups[example.Group])\r\n                    //    : example)\r\n                    //        .OrderBy(x => x.Group)\r\n                    //        .ThenBy(x => x.GroupDescription)\r\n                    //    .Memorize();\r\n                    return Tuple.Create(attr, examples);\r\n                });", span="571-588", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", color=red, community=0, file="HelpText.cs"];
m1_283 [label="Exit CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="569-569", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="HelpText.cs"];
m1_126 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)", file="HelpText.cs"];
m1_349 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs"];
m1_8 [label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="82-82", cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="HelpText.cs"];
m1_9 [label="Exit CommandLine.Text.HelpText.HelpText(string, string)", span="82-82", cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="HelpText.cs"];
m1_194 [label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="439-439", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m1_195 [label="return RenderUsageText(parserResult, example => example);", span="441-441", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m1_196 [label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="439-439", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m1_127 [label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="231-231", cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", file="HelpText.cs"];
m1_265 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="HelpText.cs"];
m1_24 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)", file="HelpText.cs"];
m1_297 [label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45", cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", file="HelpText.cs"];
m1_25 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m1_26 [label="var auto = new HelpText {\r\n                Heading = HeadingInfo.Default,\r\n                Copyright = CopyrightInfo.Default,\r\n                AdditionalNewLineAfterOption = true,\r\n                AddDashesToOption = !verbsIndex\r\n            }", span="202-207", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m1_28 [label="onError != null && parserResult.Tag == ParserResultType.NotParsed", span="211-211", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m1_29 [label="errors = ((NotParsed<T>)parserResult).Errors", span="213-213", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m1_31 [label="auto = onError(auto)", span="216-216", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m1_34 [label="var usageText = HelpText.RenderUsageText(parserResult, onExample)", span="225-225", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m1_37 [label="(verbsIndex && parserResult.TypeInfo.Choices.Any())\r\n                || errors.Any(e => e.Tag == ErrorType.NoVerbSelectedError)", span="229-230", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", color=green, community=0];
m1_39 [label="auto.AddVerbs(parserResult.TypeInfo.Choices.ToArray())", span="233-233", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m1_40 [label="auto.AddOptions(parserResult)", span="236-236", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m1_27 [label="var errors = Enumerable.Empty<Error>()", span="209-209", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m1_32 [label="ReflectionHelper.GetAttribute<AssemblyLicenseAttribute>()\r\n                .Do(license => license.AddToHelpText(auto, true))", span="219-220", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m1_33 [label="ReflectionHelper.GetAttribute<AssemblyUsageAttribute>()\r\n                .Do(usage => usage.AddToHelpText(auto, true))", span="222-223", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m1_36 [label="auto.AddPreOptionsLine(usageText)", span="227-227", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", color=green, community=0, file="HelpText.cs"];
m1_38 [label="auto.AddDashesToOption = false", span="232-232", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m1_41 [label="return auto;", span="238-238", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m1_30 [label="FilterMeaningfulErrors(errors).Any()", span="215-215", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m1_35 [label="usageText.Length > 0", span="226-226", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", color=green, community=0, file="HelpText.cs"];
m1_42 [label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m1_46 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="HelpText.cs"];
m1_43 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpText.cs"];
m1_178 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="HelpText.cs"];
m1_80 [label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163", cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpText.cs"];
m1_352 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="HelpText.cs"];
m1_267 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)", file="HelpText.cs"];
m1_278 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="HelpText.cs"];
m1_382 [label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", file="HelpText.cs"];
m1_299 [label="var maxLength = GetMaxLength(specifications)", span="608-608", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs"];
m1_301 [label="var remainingSpace = maximumLength - (maxLength + 6)", span="612-612", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs"];
m1_302 [label="specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="614-616", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs"];
m1_300 [label="optionsHelp = new StringBuilder(BuilderCapacity)", span="610-610", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs"];
m1_303 [label="return this;", span="618-618", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs"];
m1_304 [label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="603-603", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs"];
m1_192 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="HelpText.cs"];
m1_131 [label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="306-306", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="HelpText.cs"];
m1_132 [label="return info.ToString();", span="308-308", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="HelpText.cs"];
m1_133 [label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="306-306", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="HelpText.cs"];
m1_137 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="641-641", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs"];
m1_314 [label="AddLine(preOptionsHelp, value, maximumLength)", span="643-643", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs"];
m1_315 [label="return this;", span="645-645", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs"];
m1_316 [label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="641-641", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs"];
m1_226 [label="Entry System.Text.StringBuilder.Append(object)", span="0-0", cluster="System.Text.StringBuilder.Append(object)", file="HelpText.cs"];
m1_292 [label="Entry System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", file="HelpText.cs"];
m1_141 [label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="747-747", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs"];
m1_386 [label="AddLine(builder, value, MaximumDisplayWidth)", span="749-749", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs"];
m1_387 [label="return this;", span="751-751", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs"];
m1_388 [label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="747-747", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs"];
m1_2 [label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="HelpText.cs"];
m1_3 [label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="HelpText.cs"];
m1_270 [label="var optionSpecs = specs\r\n                .OfType<OptionSpecification>()\r\n                .Concat(new[] { MakeHelpEntry(), MakeVersionEntry() })", span="558-560", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs"];
m1_146 [label="Exit CommandLine.Text.HelpText.AddPreOptionsText(string)", span="331-331", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs"];
m1_269 [label="var specs = type.GetSpecifications(Specification.FromProperty)", span="557-557", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs"];
m1_271 [label="var valueSpecs = specs\r\n                .OfType<ValueSpecification>()\r\n                .OrderBy(v => v.Index)", span="561-563", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs"];
m1_272 [label="return Enumerable.Empty<Specification>()\r\n                .Concat(optionSpecs)\r\n                .Concat(valueSpecs);", span="564-566", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs"];
m1_273 [label="Exit CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="555-555", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs"];
m1_244 [label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="519-519", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m1_245 [label="builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="521-521", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m1_247 [label="var words = value.Split(' ')", span="525-525", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m1_250 [label="words[i].Length < (maximumLength - wordBuffer)", span="528-528", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m1_251 [label="builder.Append(words[i])", span="530-530", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m1_253 [label="(maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="532-532", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m1_254 [label="builder.Append('' '')", span="534-534", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m1_256 [label="words[i].Length >= maximumLength && wordBuffer == 0", span="538-538", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m1_257 [label="builder.Append(words[i].Substring(0, maximumLength))", span="540-540", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m1_258 [label="wordBuffer = maximumLength", span="541-541", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m1_260 [label="value = value.Substring(Math.Min(wordBuffer, value.Length))", span="547-547", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m1_261 [label="builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="548-548", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m1_262 [label="value.Length > maximumLength", span="550-550", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m1_263 [label="builder.Append(value)", span="552-552", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m1_246 [label="var wordBuffer = 0", span="524-524", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m1_252 [label="wordBuffer += words[i].Length", span="531-531", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m1_248 [label="var i = 0", span="526-526", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m1_249 [label="i < words.Length", span="526-526", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m1_259 [label="i++", span="526-526", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m1_255 [label="wordBuffer++", span="535-535", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m1_264 [label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="519-519", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m1_10 [label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m1_11 [label="sentenceBuilder == null", span="97-97", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m1_13 [label="heading == null", span="98-98", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m1_15 [label="copyright == null", span="99-99", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m1_19 [label="this.sentenceBuilder = sentenceBuilder", span="104-104", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m1_20 [label="this.heading = heading", span="105-105", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m1_21 [label="this.copyright = copyright", span="106-106", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m1_12 [label="throw new ArgumentNullException(''sentenceBuilder'');", span="97-97", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m1_14 [label="throw new ArgumentNullException(''heading'');", span="98-98", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m1_16 [label="throw new ArgumentNullException(''copyright'');", span="99-99", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m1_17 [label="preOptionsHelp = new StringBuilder(BuilderCapacity)", span="101-101", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m1_18 [label="postOptionsHelp = new StringBuilder(BuilderCapacity)", span="102-102", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m1_22 [label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m1_360 [label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="735-735", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m1_377 [label="return new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.MetaName.Length > 0,\r\n                    it => it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index),\r\n                    it => it.AppendFormat(''value pos. {0}'', specification.Index))\r\n                .AppendFormatWhen(\r\n                    specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                .ToString();", span="737-744", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m1_378 [label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="735-735", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m1_398 [label="Entry System.Math.Max(int, int)", span="0-0", cluster="System.Math.Max(int, int)", file="HelpText.cs"];
m1_191 [label="Entry Unk.formatError", span="", cluster="Unk.formatError", file="HelpText.cs"];
m1_305 [label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="754-754", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="HelpText.cs"];
m1_389 [label="return specifications.Aggregate(0,\r\n                (length, spec) =>\r\n                    {\r\n                        var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec);\r\n\r\n                        return Math.Max(length, specLength);\r\n                    });", span="756-764", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="HelpText.cs"];
m1_390 [label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="754-754", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="HelpText.cs"];
m1_347 [label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41", cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="HelpText.cs"];
m1_311 [label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="621-621", cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="HelpText.cs"];
m1_275 [label="Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="621-621", cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="HelpText.cs"];
m1_310 [label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''help'',\r\n                false,\r\n                sentenceBuilder.HelpCommandText(AddDashesToOption),\r\n                string.Empty);", span="623-628", cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="HelpText.cs"];
m1_266 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="HelpText.cs"];
m1_364 [label="Entry string.FormatLocal(params object[])", span="25-25", cluster="string.FormatLocal(params object[])", file="HelpText.cs"];
m1_159 [label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="374-377", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs"];
m1_158 [label="throw new ArgumentNullException(''result'');", span="372-372", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs"];
m1_160 [label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="370-370", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs"];
m1_397 [label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="803-803", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m1_419 [label="var specLength = 0", span="805-805", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m1_420 [label="var hasMeta = spec.MetaName.Length > 0", span="807-807", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m1_422 [label="spec.MetaValue.Length > 0", span="810-810", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m1_423 [label="metaLength = spec.MetaValue.Length + 1", span="811-811", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m1_425 [label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="814-814", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m1_426 [label="specLength += spec.Index.ToStringInvariant().Length + 11", span="816-816", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m1_421 [label="var metaLength = 0", span="809-809", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m1_424 [label=hasMeta, span="813-813", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m1_427 [label="specLength += metaLength", span="818-818", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m1_428 [label="return specLength;", span="820-820", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m1_429 [label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="803-803", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m1_50 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="316-316", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpText.cs"];
m1_135 [label="return AddPreOptionsLine(value, MaximumDisplayWidth);", span="318-318", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpText.cs"];
m1_136 [label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="316-316", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpText.cs"];
m1_285 [label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="265-265", cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", file="HelpText.cs"];
m1_274 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="17-17", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="HelpText.cs"];
m1_45 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="HelpText.cs"];
m1_124 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="HelpText.cs"];
m1_161 [label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="387-387", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs"];
m1_162 [label="types == null", span="389-389", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs"];
m1_164 [label="types.Length == 0", span="390-390", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs"];
m1_166 [label="return AddOptionsImpl(AdaptVerbsToSpecifications(types), SentenceBuilder.RequiredWord(), maximumLength);", span="392-392", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs"];
m1_163 [label="throw new ArgumentNullException(''types'');", span="389-389", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs"];
m1_165 [label="throw new ArgumentOutOfRangeException(''types'');", span="390-390", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs"];
m1_167 [label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="387-387", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs"];
m1_48 [label="Entry CSharpx.Maybe<T>.Do<T>(System.Action<T>)", span="300-300", cluster="CSharpx.Maybe<T>.Do<T>(System.Action<T>)", file="HelpText.cs"];
m1_6 [label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="HelpText.cs"];
m1_7 [label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="HelpText.cs"];
m1_49 [label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="451-451", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m1_200 [label="parserResult == null", span="453-453", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m1_202 [label="var usage = GetUsageFromType(parserResult.TypeInfo.Current)", span="455-455", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m1_210 [label="var example = mapperFunc(e)", span="466-466", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m1_201 [label="throw new ArgumentNullException(''parserResult'');", span="453-453", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m1_203 [label="usage.MatchNothing()", span="456-456", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m1_205 [label="var usageTuple = usage.FromJust()", span="459-459", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m1_204 [label="return string.Empty;", span="457-457", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m1_206 [label="var examples = usageTuple.Item2", span="460-460", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m1_207 [label="var appAlias = usageTuple.Item1.ApplicationAlias ?? ReflectionHelper.GetAssemblyName()", span="461-461", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m1_209 [label=examples, span="464-464", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m1_208 [label="var text = new StringBuilder(BuilderCapacity)", span="463-463", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m1_214 [label="var commandLine = new StringBuilder(2.Spaces())\r\n                        .Append(appAlias)\r\n                        .Append(' ')\r\n                        .Append(Parser.Default.FormatCommandLine(example.Sample,\r\n                            config =>\r\n                                {\r\n                                    config.PreferShortName = s.PreferShortName;\r\n                                    config.GroupSwitches = s.GroupSwitches;\r\n                                    config.UseEqualToken = s.UseEqualToken;\r\n                                }))\r\n                        .Append(Environment.NewLine)", span="473-483", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m1_216 [label="text.Append(exampleText)", span="486-486", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m1_217 [label="return text.ToString();", span="489-489", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m1_211 [label="var exampleText = new StringBuilder(example.HelpText)\r\n                    .Append(':')\r\n                    .Append(Environment.NewLine)", span="467-469", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m1_212 [label="var styles = example.GetFormatStylesOrDefault()", span="470-470", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m1_215 [label="exampleText.Append(commandLine)", span="484-484", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m1_213 [label=styles, span="471-471", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m1_218 [label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="451-451", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m1_179 [label="Entry Unk.ForEach", span="", cluster="Unk.ForEach", file="HelpText.cs"];
m1_391 [label="Entry Unk.Aggregate", span="", cluster="Unk.Aggregate", file="HelpText.cs"];
m1_225 [label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="87-87", cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="HelpText.cs"];
m1_189 [label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(string)", file="HelpText.cs"];
m1_78 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="HelpText.cs"];
m1_277 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpText.cs"];
m1_431 [label="CommandLine.Text.HelpText", span="", file="HelpText.cs"];
m1_432 [label=auto, span="", file="HelpText.cs"];
m1_433 [label="CommandLine.ParserResult<T>", span="", file="HelpText.cs"];
m1_434 [label=pr, span="", file="HelpText.cs"];
m1_435 [label="CommandLine.Text.HelpText", span="", file="HelpText.cs"];
m1_436 [label="System.Func<CommandLine.Error, string>", span="", file="HelpText.cs"];
m1_437 [label=int, span="", file="HelpText.cs"];
m1_438 [label=text, span="", file="HelpText.cs"];
m1_439 [label=s, span="", file="HelpText.cs"];
m1_440 [label=string, span="", file="HelpText.cs"];
m1_441 [label=maxLength, span="", file="HelpText.cs"];
m1_442 [label=remainingSpace, span="", file="HelpText.cs"];
m1_443 [label=int, span="", file="HelpText.cs"];
m1_444 [label="CommandLine.Core.Specification", span="", file="HelpText.cs"];
m1_445 [label=optionHelpText, span="", file="HelpText.cs"];
m1_446 [label="CommandLine.Core.OptionSpecification", span="", file="HelpText.cs"];
m1_447 [label="CommandLine.Core.ValueSpecification", span="", file="HelpText.cs"];
m2_50 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="93-93", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m2_51 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextEnum>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextEnum)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="97-100", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m2_52 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="104-104", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m2_53 [label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="105-105", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m2_54 [label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="106-106", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m2_55 [label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here.'')", span="107-107", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m2_56 [label="lines[3].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="108-108", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m2_57 [label="lines[4].ShouldBeEquivalentTo(''--version        Display version information.'')", span="109-109", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m2_58 [label="lines[5].ShouldBeEquivalentTo(''post-options'')", span="110-110", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m2_59 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="93-93", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m2_16 [label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="82-82", cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="HelpTextTests.cs"];
m2_126 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="403-403", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpTextTests.cs"];
m2_22 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m2_23 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptions>(TypeInfo.Create(typeof(FakeOptions)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="50-53", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m2_24 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="57-57", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m2_25 [label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="58-58", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m2_26 [label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="59-59", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m2_27 [label="lines[2].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="60-60", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m2_28 [label="lines[3].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="61-61", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m2_29 [label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="62-62", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m2_30 [label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="63-63", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m2_31 [label="lines[6].ShouldBeEquivalentTo(''value pos. 0     Define a long value here.'')", span="64-64", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m2_32 [label="lines[7].ShouldBeEquivalentTo(''post-options'')", span="65-65", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m2_33 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m2_66 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="131-131", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m2_67 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="135-135", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m2_68 [label="sut.MaximumDisplayWidth = 40", span="136-136", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m2_69 [label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescription>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescription)),\r\n                    Enumerable.Empty<Error>()))", span="137-140", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m2_70 [label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="143-143", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m2_71 [label="lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description'')", span="144-144", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m2_72 [label="lines[3].ShouldBeEquivalentTo(''                of the verbosity to '')", span="146-146", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m2_73 [label="lines[4].ShouldBeEquivalentTo(''                test out the wrapping '')", span="147-147", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m2_74 [label="lines[5].ShouldBeEquivalentTo(''                capabilities of the '')", span="148-148", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m2_75 [label="lines[6].ShouldBeEquivalentTo(''                Help Text.'')", span="149-149", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m2_76 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="131-131", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m2_217 [label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="439-439", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs"];
m2_78 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="154-154", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m2_79 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="158-158", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m2_80 [label="sut.MaximumDisplayWidth = 40", span="159-159", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m2_81 [label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescriptionAndNoSpaces>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescriptionAndNoSpaces)),\r\n                    Enumerable.Empty<Error>()))", span="160-163", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m2_82 [label="var lines = sut.ToString().ToNotEmptyLines()", span="166-166", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m2_83 [label="lines[1].ShouldBeEquivalentTo(''  v, verbose    Before '')", span="167-167", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m2_84 [label="lines[2].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="168-168", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m2_85 [label="lines[3].ShouldBeEquivalentTo(''                After'')", span="169-169", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m2_86 [label="lines[4].ShouldBeEquivalentTo(''  input-file    Before '')", span="170-170", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m2_87 [label="lines[5].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="171-171", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m2_88 [label="lines[6].ShouldBeEquivalentTo(''                456789 After'')", span="172-172", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m2_89 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="154-154", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m2_190 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpTextTests.cs"];
m2_116 [label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196", cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="HelpTextTests.cs"];
m2_149 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="260-260", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_150 [label="var fakeResult = new NotParsed<FakeOptions>(\r\n                TypeInfo.Create(typeof(FakeOptions)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="263-269", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_151 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="272-272", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_152 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="275-275", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_153 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="276-276", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_154 [label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="277-277", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_155 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="278-278", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_156 [label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="279-279", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_157 [label="lines[4].ShouldBeEquivalentTo(''A sequence option 'i' is defined with fewer or more items than required.'')", span="280-280", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_158 [label="lines[5].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="281-281", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_159 [label="lines[6].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="282-282", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_160 [label="lines[7].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="283-283", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_161 [label="lines[8].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="284-284", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_162 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="260-260", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_192 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="342-342", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m2_193 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextValue>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextValue)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="346-349", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m2_194 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="353-353", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m2_195 [label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="354-354", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m2_196 [label="lines[1].ShouldBeEquivalentTo(''--stringvalue=STR            Define a string value here.'')", span="355-355", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m2_197 [label="lines[2].ShouldBeEquivalentTo(''-i INTSEQ                    Define a int sequence here.'')", span="356-356", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m2_198 [label="lines[3].ShouldBeEquivalentTo(''-x                           Define a boolean or switch value here.'')", span="357-357", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m2_199 [label="lines[4].ShouldBeEquivalentTo(''--help                       Display this help screen.'')", span="358-358", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m2_200 [label="lines[5].ShouldBeEquivalentTo(''--version                    Display version information.'')", span="359-359", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m2_201 [label="lines[6].ShouldBeEquivalentTo(''number (pos. 0) NUM          Define a long value here.'')", span="360-360", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m2_202 [label="lines[7].ShouldBeEquivalentTo(''paintcolor (pos. 1) COLOR    Define a color value here.'')", span="361-361", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m2_203 [label="lines[8].ShouldBeEquivalentTo(''post-options'', lines[8])", span="362-362", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m2_204 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="342-342", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m2_39 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="70-70", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m2_40 [label="var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextEnum>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextEnum)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="74-77", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m2_41 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="81-81", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m2_42 [label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="82-82", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m2_43 [label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="83-83", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m2_44 [label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here. Valid values: Circle, Square,'')", span="84-84", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m2_45 [label="lines[3].ShouldBeEquivalentTo(''Triangle'')", span="85-85", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m2_46 [label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="86-86", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m2_47 [label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="87-87", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m2_48 [label="lines[6].ShouldBeEquivalentTo(''post-options'')", span="88-88", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m2_49 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="70-70", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m2_120 [label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291", cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs"];
m2_90 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="177-177", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m2_91 [label="var sut = new HelpText(''Heading Info.'')", span="181-181", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m2_92 [label="sut.MaximumDisplayWidth = 40", span="182-182", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m2_93 [label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new NotParsed<FakeOptionsForHelp>(TypeInfo.Create(typeof(FakeOptionsForHelp)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="183-185", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m2_94 [label="var lines = sut.ToString().ToNotEmptyLines()", span="188-188", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m2_95 [label="lines[1].ShouldBeEquivalentTo(''Before '')", span="189-189", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m2_96 [label="lines[2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="190-190", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m2_97 [label="lines[3].ShouldBeEquivalentTo(''012 After'')", span="191-191", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m2_98 [label="lines[lines.Length - 3].ShouldBeEquivalentTo(''Before '')", span="192-192", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m2_99 [label="lines[lines.Length - 2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="193-193", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m2_100 [label="lines[lines.Length - 1].ShouldBeEquivalentTo('' After'')", span="194-194", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m2_101 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="177-177", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m2_177 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="315-315", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_178 [label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="318-319", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_179 [label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance),\r\n                    verbTypes),\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="320-323", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_180 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="326-326", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_181 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="329-329", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_182 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="331-331", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_183 [label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="332-332", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_184 [label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="333-333", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_185 [label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="334-334", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_186 [label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="335-335", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_187 [label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="336-336", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_188 [label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="337-337", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_189 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="315-315", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_0 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs"];
m2_1 [label="string.Empty.ShouldBeEquivalentTo(new HelpText().ToString())", span="18-18", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs"];
m2_2 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs"];
m2_145 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="HelpTextTests.cs"];
m2_36 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpTextTests.cs"];
m2_38 [label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15", cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="HelpTextTests.cs"];
m2_34 [label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163", cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpTextTests.cs"];
m2_123 [label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357", cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="HelpTextTests.cs"];
m2_3 [label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36", cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextTests.cs"];
m2_60 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m2_61 [label="var sut =\r\n                new HelpText(''Meta Value.'').AddOptions(\r\n                    new NotParsed<FakeOptionsWithMetaValue>(TypeInfo.Create(typeof(FakeOptionsWithMetaValue)), Enumerable.Empty<Error>()))", span="119-121", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m2_62 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="124-124", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m2_63 [label="lines[2].ShouldBeEquivalentTo(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="126-126", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m2_64 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m2_19 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="316-316", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextTests.cs"];
m2_125 [label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383", cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="HelpTextTests.cs"];
m2_205 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="367-367", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m2_206 [label="ParserResult<FakeOptionsWithUsageText> result =\r\n                new NotParsed<FakeOptionsWithUsageText>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithUsageText)), Enumerable.Empty<Error>())", span="370-372", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m2_207 [label="var text = HelpText.RenderUsageText(result)", span="375-375", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m2_208 [label="var lines = text.ToNotEmptyLines()", span="378-378", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m2_209 [label="lines[0].ShouldBeEquivalentTo(''Normal scenario:'')", span="381-381", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m2_210 [label="lines[1].ShouldBeEquivalentTo(''  mono testapp.exe --input file.bin --output out.bin'')", span="382-382", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m2_211 [label="lines[2].ShouldBeEquivalentTo(''Logging warnings:'')", span="383-383", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m2_212 [label="lines[3].ShouldBeEquivalentTo(''  mono testapp.exe -w --input file.bin'')", span="384-384", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m2_213 [label="lines[4].ShouldBeEquivalentTo(''Logging errors:'')", span="385-385", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m2_214 [label="lines[5].ShouldBeEquivalentTo(''  mono testapp.exe -w --input file.bin'')", span="386-386", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", color=red, community=0, file="HelpTextTests.cs"];
m2_215 [label="lines[6].ShouldBeEquivalentTo(''  mono testapp.exe --input=file.bin --warns'')", span="387-387", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", color=red, community=0, file="HelpTextTests.cs"];
m2_216 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="367-367", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m2_121 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="HelpTextTests.cs"];
m2_37 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="336-336", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs"];
m2_146 [label="Entry lambda expression", span="241-241", cluster="lambda expression", file="HelpTextTests.cs"];
m2_128 [label="err.Tag", span="220-220", cluster="lambda expression", file="HelpTextTests.cs"];
m2_130 [label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="223-223", cluster="lambda expression", file="HelpTextTests.cs"];
m2_132 [label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="225-225", cluster="lambda expression", file="HelpTextTests.cs"];
m2_134 [label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="227-227", cluster="lambda expression", file="HelpTextTests.cs"];
m2_136 [label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="229-229", cluster="lambda expression", file="HelpTextTests.cs"];
m2_138 [label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="231-231", cluster="lambda expression", file="HelpTextTests.cs"];
m2_142 [label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="235-235", cluster="lambda expression", file="HelpTextTests.cs"];
m2_127 [label="Entry lambda expression", span="218-239", cluster="lambda expression", file="HelpTextTests.cs"];
m2_129 [label="ErrorType.BadFormatTokenError", span="222-222", cluster="lambda expression", file="HelpTextTests.cs"];
m2_131 [label="ErrorType.MissingValueOptionError", span="224-224", cluster="lambda expression", file="HelpTextTests.cs"];
m2_133 [label="ErrorType.UnknownOptionError", span="226-226", cluster="lambda expression", file="HelpTextTests.cs"];
m2_135 [label="ErrorType.MissingRequiredOptionError", span="228-228", cluster="lambda expression", file="HelpTextTests.cs"];
m2_137 [label="ErrorType.SequenceOutOfRangeError", span="230-230", cluster="lambda expression", file="HelpTextTests.cs"];
m2_139 [label="ErrorType.NoVerbSelectedError", span="232-232", cluster="lambda expression", file="HelpTextTests.cs"];
m2_141 [label="ErrorType.BadVerbSelectedError", span="234-234", cluster="lambda expression", file="HelpTextTests.cs"];
m2_143 [label="throw new InvalidOperationException();", span="237-237", cluster="lambda expression", file="HelpTextTests.cs"];
m2_140 [label="return ''ERR no-verb-selected'';", span="233-233", cluster="lambda expression", file="HelpTextTests.cs"];
m2_144 [label="Exit lambda expression", span="218-239", cluster="lambda expression", file="HelpTextTests.cs"];
m2_147 [label="string.Empty", span="241-241", cluster="lambda expression", file="HelpTextTests.cs"];
m2_148 [label="Exit lambda expression", span="241-241", cluster="lambda expression", file="HelpTextTests.cs"];
m2_191 [label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34", cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="HelpTextTests.cs"];
m2_35 [label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29", cluster="CommandLine.TypeInfo.Create(System.Type)", file="HelpTextTests.cs"];
m2_65 [label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59", cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextTests.cs"];
m2_117 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs"];
m2_164 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="HelpTextTests.cs"];
m2_4 [label="Entry CommandLine.Text.HelpText.ToString()", span="496-496", cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextTests.cs"];
m2_165 [label="Entry Unk.StartWithEquivalent", span="", cluster="Unk.StartWithEquivalent", file="HelpTextTests.cs"];
m2_163 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="251-251", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs"];
m2_122 [label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421", cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="HelpTextTests.cs"];
m2_17 [label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextTests.cs"];
m2_119 [label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280", cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="HelpTextTests.cs"];
m2_18 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="HelpTextTests.cs"];
m2_20 [label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="326-326", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextTests.cs"];
m2_21 [label="Entry string.ToNotEmptyLines()", span="10-10", cluster="string.ToNotEmptyLines()", file="HelpTextTests.cs"];
m2_118 [label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20", cluster="CommandLine.NameInfo.NameInfo(string, string)", file="HelpTextTests.cs"];
m2_6 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m2_7 [label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m2_8 [label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m2_9 [label="lines[0].ShouldBeEquivalentTo(''Unit-tests 2.0'')", span="36-36", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m2_10 [label="lines[1].ShouldBeEquivalentTo(''Copyright (C) 2005 - 2013 Author'')", span="37-37", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m2_11 [label="lines[2].ShouldBeEquivalentTo(''pre-options line 1'')", span="38-38", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m2_12 [label="lines[3].ShouldBeEquivalentTo(''pre-options line 2'')", span="39-39", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m2_13 [label="lines[4].ShouldBeEquivalentTo(''post-options line 1'')", span="40-40", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m2_14 [label="lines[5].ShouldBeEquivalentTo(''post-options line 2'')", span="41-41", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m2_15 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m2_102 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="200-200", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_103 [label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        //new MutuallyExclusiveSetError(new NameInfo(''z'', ''''), string.Empty),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="203-217", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_104 [label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="218-239", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_106 [label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, fakeMutExclRenderer, 2)", span="244-244", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_105 [label="Func<IEnumerable<MutuallyExclusiveSetError>, string> fakeMutExclRenderer =\r\n                _ => string.Empty", span="240-241", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_107 [label="var lines = errorsText.ToNotEmptyLines()", span="247-247", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_108 [label="lines[0].ShouldBeEquivalentTo(''  ERR badtoken'')", span="249-249", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_109 [label="lines[1].ShouldBeEquivalentTo(''  ERR x, switch'')", span="250-250", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_110 [label="lines[2].ShouldBeEquivalentTo(''  ERR unknown'')", span="251-251", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_111 [label="lines[3].ShouldBeEquivalentTo(''  ERR missing'')", span="252-252", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_112 [label="lines[4].ShouldBeEquivalentTo(''  ERR s, sequence'')", span="253-253", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_113 [label="lines[5].ShouldBeEquivalentTo(''  ERR no-verb-selected'')", span="254-254", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_114 [label="lines[6].ShouldBeEquivalentTo(''  ERR badverb'')", span="255-255", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_115 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="200-200", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_166 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="289-289", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_167 [label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    })", span="292-297", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_168 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="300-300", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_169 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="303-303", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_170 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="305-305", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_171 [label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="306-306", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_172 [label="lines[2].ShouldBeEquivalentTo(''-p, --patch    Use the interactive patch selection interface to chose which'')", span="307-307", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_173 [label="lines[3].ShouldBeEquivalentTo(''changes to commit.'')", span="308-308", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_174 [label="lines[4].ShouldBeEquivalentTo(''--amend        Used to amend the tip of the current branch.'')", span="309-309", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_175 [label="lines[5].ShouldBeEquivalentTo(''--help         Display this help screen.'')", span="310-310", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_176 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="289-289", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m2_124 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="HelpTextTests.cs"];
m2_77 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextTests.cs"];
m2_5 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="HelpTextTests.cs"];
m4_38 [label="Entry System.Type.GetVerbSpecification()", span="28-28", cluster="System.Type.GetVerbSpecification()", file="UnParserExtensions.cs"];
m4_46 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="UnParserExtensions.cs"];
m4_123 [label="Entry Unk.doubQt", span="", cluster="Unk.doubQt", file="UnParserExtensions.cs"];
m4_148 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="38-38", cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="UnParserExtensions.cs"];
m4_4 [label="Entry CommandLine.UnParserSettings.WithUseEqualTokenOnly()", span="53-53", cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="UnParserExtensions.cs"];
m4_5 [label="return new UnParserSettings { UseEqualToken = true };", span="55-55", cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="UnParserExtensions.cs"];
m4_6 [label="Exit CommandLine.UnParserSettings.WithUseEqualTokenOnly()", span="53-53", cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="UnParserExtensions.cs"];
m4_125 [label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="181-181", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs"];
m4_126 [label="return (spec as OptionSpecification).ToMaybe()\r\n                .Return(o => o.Separator != '\0' ? o.Separator : ' ', ' ');", span="183-184", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs"];
m4_127 [label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="181-181", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs"];
m4_87 [label="Entry CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="149-149", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m4_88 [label="var builder = new StringBuilder()", span="151-151", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m4_89 [label="spec.TargetType", span="152-152", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m4_91 [label="builder.Append(FormatWithQuotesIfString(value))", span="155-155", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m4_93 [label="var sep = spec.SeperatorOrSpace()", span="158-158", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m4_95 [label="var e = ((IEnumerable)value).GetEnumerator()", span="161-161", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m4_97 [label="builder.Append(format(e.Current)).Append(sep)", span="163-163", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m4_98 [label="builder.TrimEndIfMatch(' ')", span="164-164", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m4_99 [label="return builder.ToString();", span="167-167", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m4_90 [label="TargetType.Scalar", span="154-154", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m4_92 [label="TargetType.Sequence", span="157-157", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m4_94 [label="Func<object, object> format = v\r\n                        => sep == ' ' ? FormatWithQuotesIfString(v) : v", span="159-160", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m4_96 [label="e.MoveNext()", span="162-162", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m4_100 [label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="149-149", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m4_35 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="UnParserExtensions.cs"];
m4_104 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="UnParserExtensions.cs"];
m4_45 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="UnParserExtensions.cs"];
m4_41 [label="Entry object.IsEmpty()", span="220-220", cluster="object.IsEmpty()", file="UnParserExtensions.cs"];
m4_106 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="UnParserExtensions.cs"];
m4_136 [label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="195-195", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m4_137 [label="var longName =\r\n                optionSpec.LongName.Length > 0\r\n                && !settings.PreferShortName", span="197-199", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m4_138 [label="return\r\n                new StringBuilder(longName\r\n                    ? ''--''.JoinTo(optionSpec.LongName)\r\n                    : ''-''.JoinTo(optionSpec.ShortName))\r\n                        .AppendIf(longName && settings.UseEqualToken && optionSpec.ConversionType != typeof(bool), ''='', '' '')\r\n                    .ToString();", span="201-206", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m4_139 [label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="195-195", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m4_150 [label="Entry CommandLine.UnParserExtensions.IsEmpty(object)", span="220-220", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m4_151 [label="value == null", span="222-222", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m4_153 [label="ReflectionHelper.IsFSharpOptionType(value.GetType()) && !FSharpOptionHelper.IsSome(value)", span="223-223", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m4_155 [label="value is ValueType && value.Equals(value.GetType().GetDefaultValue())", span="224-224", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m4_157 [label="value is string && ((string)value).Length == 0", span="225-225", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m4_159 [label="value is IEnumerable && !((IEnumerable)value).GetEnumerator().MoveNext()", span="226-226", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m4_152 [label="return true;", span="222-222", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m4_154 [label="return true;", span="223-223", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m4_156 [label="return true;", span="224-224", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m4_158 [label="return true;", span="225-225", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m4_160 [label="return true;", span="226-226", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m4_161 [label="return false;", span="227-227", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m4_162 [label="Exit CommandLine.UnParserExtensions.IsEmpty(object)", span="220-220", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m4_43 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="UnParserExtensions.cs"];
m4_141 [label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="34-34", cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="UnParserExtensions.cs"];
m4_52 [label="Entry Unk.TrimEndIfMatchWhen", span="", cluster="Unk.TrimEndIfMatchWhen", file="UnParserExtensions.cs"];
m4_119 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="UnParserExtensions.cs"];
m4_40 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="17-17", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="UnParserExtensions.cs"];
m4_72 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="UnParserExtensions.cs"];
m4_114 [label="Entry T.ToMaybe<T>()", span="249-249", cluster="T.ToMaybe<T>()", file="UnParserExtensions.cs"];
m4_118 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="UnParserExtensions.cs"];
m4_36 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="UnParserExtensions.cs"];
m4_128 [label="Entry lambda expression", span="184-184", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_11 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_12 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_61 [label="new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) }", span="104-105", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_80 [label="builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings)).Append(' ')", span="139-139", cluster="lambda expression", color=red, community=0, file="UnParserExtensions.cs"];
m4_57 [label="builder.Append(verb.Name).Append(' ')", span="99-99", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_56 [label="Entry lambda expression", span="99-99", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_60 [label="Entry lambda expression", span="104-105", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_66 [label="Entry lambda expression", span="110-110", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_70 [label="!shortSwitches.Contains(info)", span="124-124", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_69 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_73 [label="Entry lambda expression", span="127-127", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_76 [label="Entry lambda expression", span="134-134", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_84 [label="builder.Append(FormatValue(val.Specification, val.Value)).Append(' ')", span="143-143", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_79 [label="Entry lambda expression", span="139-139", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_83 [label="Entry lambda expression", span="143-143", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_58 [label="Exit lambda expression", span="99-99", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_62 [label="Exit lambda expression", span="104-105", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_67 [label="i.Specification.Tag == SpecificationType.Option", span="110-110", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_68 [label="Exit lambda expression", span="110-110", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_71 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_74 [label="i.Specification.Tag == SpecificationType.Value", span="127-127", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_75 [label="Exit lambda expression", span="127-127", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_77 [label="((OptionSpecification)info.Specification).ShortName", span="134-134", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_78 [label="Exit lambda expression", span="134-134", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_81 [label="Exit lambda expression", span="139-139", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_85 [label="Exit lambda expression", span="143-143", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_109 [label="sep == ' ' ? FormatWithQuotesIfString(v) : v", span="160-160", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_108 [label="Entry lambda expression", span="159-160", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_110 [label="Exit lambda expression", span="159-160", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_116 [label="v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="173-173", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_121 [label="v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v", span="177-178", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_120 [label="Entry lambda expression", span="177-178", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_115 [label="Entry lambda expression", span="172-173", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_117 [label="Exit lambda expression", span="172-173", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_122 [label="Exit lambda expression", span="177-178", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_129 [label="o.Separator != '\0' ? o.Separator : ' '", span="184-184", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_130 [label="Exit lambda expression", span="184-184", cluster="lambda expression", file="UnParserExtensions.cs"];
m4_135 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9", cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="UnParserExtensions.cs"];
m4_55 [label="Entry string.TrimEnd(params char[])", span="0-0", cluster="string.TrimEnd(params char[])", file="UnParserExtensions.cs"];
m4_107 [label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="85-85", cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="UnParserExtensions.cs"];
m4_147 [label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35", cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="UnParserExtensions.cs"];
m4_51 [label="Entry System.Text.StringBuilder.TrailingSpaces()", span="101-101", cluster="System.Text.StringBuilder.TrailingSpaces()", file="UnParserExtensions.cs"];
m4_59 [label="Entry Unk.Append", span="", cluster="Unk.Append", file="UnParserExtensions.cs"];
m4_47 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="UnParserExtensions.cs"];
m4_163 [label="Entry System.Type.GetDefaultValue()", span="131-131", cluster="System.Type.GetDefaultValue()", file="UnParserExtensions.cs"];
m4_86 [label="Entry Unk.FormatValue", span="", cluster="Unk.FormatValue", file="UnParserExtensions.cs"];
m4_42 [label="Entry Unk.Memorize", span="", cluster="Unk.Memorize", file="UnParserExtensions.cs"];
m4_82 [label="Entry Unk.FormatOption", span="", cluster="Unk.FormatOption", file="UnParserExtensions.cs"];
m4_44 [label="Entry Unk.UniqueName", span="", cluster="Unk.UniqueName", file="UnParserExtensions.cs"];
m4_149 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="30-30", cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="UnParserExtensions.cs"];
m4_124 [label="Entry string.JoinTo(params string[])", span="45-45", cluster="string.JoinTo(params string[])", file="UnParserExtensions.cs"];
m4_65 [label="Entry object.NormalizeValue()", span="209-209", cluster="object.NormalizeValue()", file="UnParserExtensions.cs"];
m4_39 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="UnParserExtensions.cs"];
m4_54 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="UnParserExtensions.cs"];
m4_103 [label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="181-181", cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="UnParserExtensions.cs"];
m4_50 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="UnParserExtensions.cs"];
m4_134 [label="Entry CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", span="195-195", cluster="CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m4_101 [label="Entry CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="170-170", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs"];
m4_111 [label="Func<string, string> doubQt = v\r\n                => v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="172-173", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs"];
m4_112 [label="return (value as string)\r\n                .ToMaybe()\r\n                .Return(v => v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v, value);", span="175-178", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs"];
m4_113 [label="Exit CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="170-170", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs"];
m4_0 [label="Entry CommandLine.UnParserSettings.WithGroupSwitchesOnly()", span="48-48", cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="UnParserExtensions.cs"];
m4_1 [label="return new UnParserSettings { GroupSwitches = true };", span="50-50", cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="UnParserExtensions.cs"];
m4_2 [label="Exit CommandLine.UnParserSettings.WithGroupSwitchesOnly()", span="48-48", cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="UnParserExtensions.cs"];
m4_53 [label="Entry Unk.ForEach", span="", cluster="Unk.ForEach", file="UnParserExtensions.cs"];
m4_102 [label="Entry System.Text.StringBuilder.Append(object)", span="0-0", cluster="System.Text.StringBuilder.Append(object)", file="UnParserExtensions.cs"];
m4_49 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="UnParserExtensions.cs"];
m4_10 [label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="87-87", cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m4_140 [label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(string)", file="UnParserExtensions.cs"];
m4_37 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="UnParserExtensions.cs"];
m4_164 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)", file="UnParserExtensions.cs"];
m4_105 [label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()", file="UnParserExtensions.cs"];
m4_13 [label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="87-87", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m4_14 [label="options == null", span="89-89", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m4_17 [label="configuration(settings)", span="92-92", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m4_19 [label="var type = options.GetType()", span="95-95", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m4_22 [label="var specs =\r\n                (from info in\r\n                    type.GetSpecifications(\r\n                        pi => new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) })\r\n                where !info.PropertyValue.IsEmpty()\r\n                select info)\r\n                    .Memorize()", span="101-108", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m4_15 [label="throw new ArgumentNullException(''options'');", span="89-89", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m4_16 [label="var settings = new UnParserSettings()", span="91-91", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m4_18 [label="settings.Consumed = true", span="93-93", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m4_25 [label="var optSpecs = settings.GroupSwitches\r\n                ? allOptSpecs.Where(info => !shortSwitches.Contains(info))\r\n                : allOptSpecs", span="123-125", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m4_27 [label="builder = settings.GroupSwitches && shortSwitches.Any()\r\n                ? builder.Append('-').Append(string.Join(string.Empty, shortSwitches.Select(\r\n                    info => ((OptionSpecification)info.Specification).ShortName).ToArray())).Append(' ')\r\n                : builder", span="132-135", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m4_29 [label="optSpecs.ForEach(\r\n                opt => builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings)).Append(' '))", span="138-139", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=red, community=0, file="UnParserExtensions.cs"];
m4_20 [label="var builder = new StringBuilder()", span="96-96", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m4_21 [label="type.GetVerbSpecification()\r\n                .Return(verb => builder.Append(verb.Name).Append(' '), builder)", span="98-99", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m4_23 [label="var allOptSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Option)\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType != TargetType.Switch || (o.TargetType == TargetType.Switch && ((bool)info.Value))\r\n                orderby o.UniqueName()\r\n                select info", span="110-114", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m4_26 [label="var valSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Value)\r\n                let v = (ValueSpecification)info.Specification\r\n                orderby v.Index\r\n                select info", span="127-130", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m4_24 [label="var shortSwitches = from info in allOptSpecs\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType == TargetType.Switch\r\n                where o.ShortName.Length > 0\r\n                orderby o.UniqueName()\r\n                select info", span="116-121", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m4_28 [label="builder\r\n                .TrimEndIfMatchWhen(!optSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="136-137", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m4_30 [label="builder\r\n                .TrimEndIfMatchWhen(!valSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="140-141", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m4_31 [label="valSpecs.ForEach(\r\n                val => builder.Append(FormatValue(val.Specification, val.Value)).Append(' '))", span="142-143", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m4_32 [label="return builder\r\n                .ToString().TrimEnd(' ');", span="145-146", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m4_33 [label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="87-87", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m4_48 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="UnParserExtensions.cs"];
m4_131 [label="Entry CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="187-187", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m4_132 [label="return new StringBuilder()\r\n                    .Append(spec.FormatName(settings))\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, FormatValue(spec, value))\r\n                .ToString();", span="189-192", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m4_133 [label="Exit CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="187-187", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m4_63 [label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="UnParserExtensions.cs"];
m4_34 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="UnParserExtensions.cs"];
m4_7 [label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="73-73", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs"];
m4_8 [label="return parser.FormatCommandLine(options, config => {});", span="75-75", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs"];
m4_9 [label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="73-73", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs"];
m4_64 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="UnParserExtensions.cs"];
m4_142 [label="Entry CommandLine.UnParserExtensions.NormalizeValue(object)", span="209-209", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs"];
m4_143 [label="value != null\r\n                && ReflectionHelper.IsFSharpOptionType(value.GetType())\r\n                && FSharpOptionHelper.IsSome(value)", span="211-213", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs"];
m4_144 [label="return FSharpOptionHelper.ValueOf(value);", span="215-215", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs"];
m4_145 [label="return value;", span="217-217", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs"];
m4_146 [label="Exit CommandLine.UnParserExtensions.NormalizeValue(object)", span="209-209", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs"];
m4_165 [label=builder, span="", file="UnParserExtensions.cs"];
m4_166 [label=T, span="", file="UnParserExtensions.cs"];
m4_167 [label=shortSwitches, span="", file="UnParserExtensions.cs"];
m4_168 [label=settings, span="", file="UnParserExtensions.cs"];
m4_169 [label=sep, span="", file="UnParserExtensions.cs"];
m4_170 [label=doubQt, span="", file="UnParserExtensions.cs"];
n41 -> n7  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
n41 -> n8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
n41 -> n9  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
n41 -> n21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
n41 -> n22  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
n41 -> n27  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
n41 -> n32  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>"];
n0 -> n5  [key=1, style=dashed, color=darkseagreen4, label=object];
n0 -> n7  [key=1, style=dashed, color=darkseagreen4, label=string];
n0 -> n8  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>"];
n0 -> n9  [key=1, style=dashed, color=darkseagreen4, label=object];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n1 -> n11  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n2 -> n10  [key=0, style=solid];
n2 -> n12  [key=2, style=dotted];
n4 -> n10  [key=0, style=solid];
n4 -> n13  [key=2, style=dotted];
n6 -> n10  [key=0, style=solid];
n6 -> n13  [key=2, style=dotted];
n10 -> n0  [key=0, style=bold, color=blue];
n14 -> n15  [key=0, style=solid];
n15 -> n14  [key=0, style=bold, color=blue];
n16 -> n17  [key=0, style=solid];
n17 -> n16  [key=0, style=bold, color=blue];
n18 -> n19  [key=0, style=solid];
n18 -> n22  [key=1, style=dashed, color=darkseagreen4, label=object];
n18 -> n24  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [key=1, style=dashed, color=darkseagreen4, label=other];
n22 -> n23  [key=0, style=solid];
n22 -> n25  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n22  [key=0, style=solid];
n21 -> n23  [key=0, style=solid];
n21 -> n24  [key=2, style=dotted];
n23 -> n18  [key=0, style=bold, color=blue];
n24 -> n30  [key=0, style=solid];
n24 -> n32  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
n24 -> n19  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Text.Example other"];
n24 -> n31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
n26 -> n27  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n27 -> n29  [key=2, style=dotted];
n28 -> n26  [key=0, style=bold, color=blue];
n30 -> n31  [key=0, style=solid];
n30 -> n32  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n32 -> n34  [key=2, style=dotted];
n32 -> n35  [key=2, style=dotted];
n32 -> n25  [key=2, style=dotted];
n31 -> n33  [key=0, style=solid];
n33 -> n24  [key=0, style=bold, color=blue];
n36 -> n37  [key=0, style=solid];
n37 -> n38  [key=0, style=solid];
n37 -> n39  [key=2, style=dotted];
n37 -> n40  [key=2, style=dotted];
n38 -> n36  [key=0, style=bold, color=blue];
n40 -> n0  [key=3, color=darkorchid, style=bold, label="Field variable System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings> formatStyles"];
m1_91 -> m1_107  [key=0, style=solid];
m1_91 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_91 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_91 -> m1_112  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_91 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_91 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_91 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_91 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_91 -> m1_129  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_91 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_91 -> m1_65  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.ParserResult<T> parserResult"];
m1_91 -> m1_74  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.ParserResult<T> parserResult"];
m1_91 -> m1_72  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Text.HelpText current"];
m1_91 -> m1_75  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Text.HelpText current"];
m1_91 -> m1_91  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText DefaultParsingErrorsHandler"];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_109  [key=0, style=solid];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_111  [key=0, style=solid];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_113  [key=0, style=solid];
m1_111 -> m1_44  [key=2, style=dotted];
m1_111 -> m1_121  [key=2, style=dotted];
m1_112 -> m1_120  [key=0, style=solid];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_122  [key=2, style=dotted];
m1_113 -> m1_117  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_115 -> m1_120  [key=0, style=solid];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_124  [key=2, style=dotted];
m1_116 -> m1_125  [key=2, style=dotted];
m1_116 -> m1_50  [key=2, style=dotted];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_127  [key=2, style=dotted];
m1_118 -> m1_128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_119 -> m1_120  [key=0, style=solid];
m1_108 -> m1_120  [key=0, style=solid];
m1_108 -> m1_23  [key=2, style=dotted];
m1_110 -> m1_120  [key=0, style=solid];
m1_110 -> m1_23  [key=2, style=dotted];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_116  [key=0, style=solid];
m1_114 -> n11  [key=2, style=dotted];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_126  [key=2, style=dotted];
m1_120 -> m1_91  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m1_54 -> m1_142  [key=0, style=solid];
m1_54 -> m1_144  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_54 -> m1_147  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddOptions"];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_144  [key=0, style=solid];
m1_144 -> m1_145  [key=0, style=solid, color=green];
m1_144 -> m1_146  [key=2, style=dotted];
m1_144 -> m1_124  [key=2, style=dotted];
m1_144 -> m1_147  [key=2, style=dotted];
m1_144 -> m1_127  [key=2, style=dotted, color=green];
m1_143 -> m1_145  [key=0, style=solid];
m1_143 -> m1_23  [key=2, style=dotted];
m1_143 -> m1_144  [key=0, style=solid, color=green];
m1_143 -> m1_126  [key=2, style=dotted];
m1_145 -> m1_54  [key=0, style=bold, color=blue];
m1_145 -> m1_146  [key=0, style=solid, color=green];
m1_134 -> m1_232  [key=0, style=solid];
m1_232 -> m1_233  [key=0, style=solid];
m1_232 -> m1_232  [key=3, color=darkorchid, style=bold, label="Local variable int ExtraLength"];
m1_233 -> m1_234  [key=0, style=solid];
m1_233 -> m1_24  [key=2, style=dotted];
m1_233 -> m1_235  [key=2, style=dotted];
m1_233 -> m1_236  [key=2, style=dotted];
m1_233 -> m1_192  [key=2, style=dotted];
m1_233 -> n11  [key=2, style=dotted];
m1_233 -> m1_237  [key=2, style=dotted];
m1_233 -> m1_181  [key=2, style=dotted];
m1_233 -> m1_238  [key=2, style=dotted];
m1_234 -> m1_134  [key=0, style=bold, color=blue];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_141  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddPostOptionsLine"];
m1_138 -> m1_152  [key=3, color=green, style=bold, label="Parameter variable string value"];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_141  [key=2, style=dotted];
m1_140 -> m1_138  [key=0, style=bold, color=blue];
m1_396 -> m1_399  [key=0, style=solid];
m1_396 -> m1_400  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m1_396 -> m1_401  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m1_396 -> m1_403  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m1_396 -> m1_404  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m1_396 -> m1_411  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m1_396 -> m1_389  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.OptionSpecification spec"];
m1_399 -> m1_400  [key=0, style=solid];
m1_399 -> m1_406  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_399 -> m1_411  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_399 -> m1_416  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_399 -> m1_417  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_399 -> m1_246  [key=3, color=darkorchid, style=bold, label="Local variable int specLength"];
m1_399 -> m1_402  [key=3, color=darkorchid, style=bold, label="Local variable int specLength"];
m1_400 -> m1_401  [key=0, style=solid];
m1_400 -> m1_405  [key=1, style=dashed, color=darkseagreen4, label=hasShort];
m1_400 -> m1_415  [key=1, style=dashed, color=darkseagreen4, label=hasShort];
m1_401 -> m1_402  [key=0, style=solid];
m1_401 -> m1_410  [key=1, style=dashed, color=darkseagreen4, label=hasLong];
m1_401 -> m1_415  [key=1, style=dashed, color=darkseagreen4, label=hasLong];
m1_403 -> m1_404  [key=0, style=solid];
m1_403 -> m1_405  [key=0, style=solid];
m1_404 -> m1_405  [key=0, style=solid];
m1_404 -> m1_409  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m1_404 -> m1_414  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m1_411 -> m1_412  [key=0, style=solid];
m1_411 -> m1_411  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_411 -> m1_413  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_411 -> m1_414  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_406 -> m1_407  [key=0, style=solid];
m1_406 -> m1_406  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_406 -> m1_408  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_406 -> m1_409  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_416 -> m1_417  [key=0, style=solid];
m1_416 -> m1_416  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_417 -> m1_418  [key=0, style=solid];
m1_405 -> m1_406  [key=0, style=solid];
m1_405 -> m1_410  [key=0, style=solid];
m1_415 -> m1_416  [key=0, style=solid];
m1_415 -> m1_417  [key=0, style=solid];
m1_402 -> m1_403  [key=0, style=solid];
m1_402 -> m1_409  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m1_402 -> m1_414  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m1_402 -> m1_246  [key=3, color=darkorchid, style=bold, label="Local variable int metaLength"];
m1_410 -> m1_411  [key=0, style=solid];
m1_410 -> m1_415  [key=0, style=solid];
m1_409 -> m1_410  [key=0, style=solid];
m1_409 -> m1_409  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_409 -> m1_411  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_409 -> m1_416  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_409 -> m1_417  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_414 -> m1_415  [key=0, style=solid];
m1_414 -> m1_414  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_414 -> m1_416  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_414 -> m1_417  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_407 -> m1_408  [key=0, style=solid];
m1_407 -> m1_409  [key=0, style=solid];
m1_408 -> m1_409  [key=0, style=solid];
m1_408 -> m1_408  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_412 -> m1_413  [key=0, style=solid];
m1_412 -> m1_414  [key=0, style=solid];
m1_413 -> m1_414  [key=0, style=solid];
m1_413 -> m1_413  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_418 -> m1_396  [key=0, style=bold, color=blue];
m1_294 -> m1_295  [key=0, style=solid];
m1_294 -> m1_296  [key=2, style=dotted];
m1_294 -> m1_297  [key=2, style=dotted];
m1_294 -> m1_275  [key=2, style=dotted];
m1_294 -> m1_276  [key=2, style=dotted];
m1_294 -> m1_298  [key=2, style=dotted];
m1_294 -> m1_294  [key=1, style=dashed, color=darkseagreen4, label=verbTuple];
m1_155 -> m1_294  [key=0, style=solid];
m1_155 -> m1_53  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types"];
m1_155 -> m1_161  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types"];
m1_155 -> m1_156  [key=0, style=solid, color=green];
m1_295 -> m1_155  [key=0, style=bold, color=blue];
m1_350 -> m1_350  [key=3, color=darkorchid, style=bold, label="Field variable int BuilderCapacity"];
m1_122 -> m1_168  [key=0, style=solid];
m1_122 -> m1_170  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_122 -> m1_174  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Error, string>"];
m1_122 -> m1_186  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Error, string>"];
m1_122 -> m1_175  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>"];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_170  [key=0, style=solid];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_44  [key=2, style=dotted];
m1_170 -> m1_174  [key=1, style=dashed, color=darkseagreen4, label=meaningfulErrors];
m1_170 -> m1_175  [key=1, style=dashed, color=darkseagreen4, label=meaningfulErrors];
m1_174 -> m1_175  [key=0, style=solid];
m1_174 -> m1_178  [key=2, style=dotted];
m1_174 -> m1_179  [key=2, style=dotted];
m1_174 -> m1_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_174 -> m1_185  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_175 -> m1_176  [key=0, style=solid];
m1_175 -> m1_78  [key=2, style=dotted];
m1_175 -> m1_46  [key=2, style=dotted];
m1_175 -> m1_180  [key=2, style=dotted];
m1_175 -> m1_181  [key=2, style=dotted];
m1_169 -> m1_176  [key=0, style=solid];
m1_169 -> m1_23  [key=2, style=dotted];
m1_171 -> m1_172  [key=0, style=solid];
m1_171 -> m1_173  [key=0, style=solid];
m1_171 -> m1_121  [key=2, style=dotted];
m1_172 -> m1_176  [key=0, style=solid];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_177  [key=2, style=dotted];
m1_173 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label=text];
m1_173 -> m1_175  [key=1, style=dashed, color=darkseagreen4, label=text];
m1_176 -> m1_122  [key=0, style=bold, color=blue];
m1_44 -> m1_239  [key=0, style=solid];
m1_44 -> m1_27  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<CommandLine.Error> errors"];
m1_239 -> m1_240  [key=0, style=solid];
m1_239 -> m1_178  [key=2, style=dotted];
m1_239 -> m1_241  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_240 -> m1_44  [key=0, style=bold, color=blue];
m1_309 -> m1_317  [key=0, style=solid];
m1_309 -> m1_318  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_309 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_309 -> m1_358  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_309 -> m1_319  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_309 -> m1_320  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_309 -> m1_321  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_309 -> m1_322  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_309 -> m1_323  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_309 -> m1_324  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_309 -> m1_325  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_309 -> m1_331  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_309 -> m1_334  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_309 -> m1_337  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_309 -> m1_338  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_309 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_309 -> m1_342  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_309 -> m1_343  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_309 -> m1_299  [key=3, color=darkorchid, style=bold, label="Parameter variable int maxLength"];
m1_309 -> m1_302  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.Specification specification"];
m1_309 -> m1_301  [key=3, color=darkorchid, style=bold, label="Parameter variable int widthOfHelpText"];
m1_317 -> m1_318  [key=0, style=solid];
m1_317 -> m1_192  [key=2, style=dotted];
m1_318 -> m1_319  [key=0, style=solid];
m1_318 -> m1_24  [key=2, style=dotted];
m1_318 -> m1_347  [key=2, style=dotted];
m1_318 -> m1_353  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_318 -> m1_357  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_319 -> m1_320  [key=0, style=solid];
m1_319 -> m1_181  [key=2, style=dotted];
m1_319 -> m1_348  [key=2, style=dotted];
m1_319 -> m1_192  [key=2, style=dotted];
m1_320 -> m1_321  [key=0, style=solid];
m1_320 -> m1_322  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_320 -> m1_323  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_321 -> m1_322  [key=0, style=solid];
m1_321 -> m1_323  [key=0, style=solid];
m1_321 -> m1_45  [key=2, style=dotted];
m1_322 -> m1_323  [key=0, style=solid];
m1_322 -> m1_349  [key=2, style=dotted];
m1_322 -> m1_322  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_323 -> m1_324  [key=0, style=solid];
m1_323 -> m1_48  [key=2, style=dotted];
m1_323 -> m1_361  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_323 -> m1_362  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_323 -> m1_325  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_323 -> m1_326  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_323 -> m1_328  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_323 -> m1_341  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_323 -> m1_344  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_324 -> m1_325  [key=0, style=solid];
m1_324 -> m1_326  [key=0, style=solid];
m1_325 -> m1_326  [key=0, style=solid];
m1_325 -> m1_350  [key=2, style=dotted];
m1_325 -> m1_325  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_325 -> m1_328  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_325 -> m1_341  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_325 -> m1_344  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_331 -> m1_332  [key=0, style=solid];
m1_331 -> m1_337  [key=0, style=solid];
m1_334 -> m1_335  [key=0, style=solid];
m1_334 -> m1_340  [key=0, style=solid];
m1_337 -> m1_338  [key=0, style=solid];
m1_337 -> m1_341  [key=0, style=solid];
m1_338 -> m1_339  [key=0, style=solid];
m1_338 -> m1_266  [key=2, style=dotted];
m1_338 -> m1_192  [key=2, style=dotted];
m1_339 -> m1_341  [key=0, style=solid];
m1_342 -> m1_343  [key=0, style=solid];
m1_342 -> m1_352  [key=2, style=dotted];
m1_342 -> m1_237  [key=2, style=dotted];
m1_343 -> m1_326  [key=0, style=solid];
m1_343 -> m1_344  [key=0, style=solid];
m1_326 -> m1_327  [key=0, style=solid];
m1_326 -> m1_344  [key=0, style=solid];
m1_326 -> n11  [key=2, style=dotted];
m1_328 -> m1_329  [key=0, style=solid];
m1_328 -> m1_265  [key=2, style=dotted];
m1_328 -> m1_330  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_328 -> m1_331  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_328 -> m1_332  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_328 -> m1_333  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_328 -> m1_334  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_328 -> m1_337  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_328 -> m1_338  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_341 -> m1_342  [key=0, style=solid];
m1_341 -> m1_267  [key=2, style=dotted];
m1_341 -> m1_268  [key=2, style=dotted];
m1_341 -> m1_351  [key=2, style=dotted];
m1_341 -> m1_341  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_341 -> m1_343  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_341 -> m1_344  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_344 -> m1_345  [key=0, style=solid];
m1_344 -> m1_192  [key=2, style=dotted];
m1_344 -> m1_237  [key=2, style=dotted];
m1_327 -> m1_328  [key=0, style=solid];
m1_327 -> m1_331  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_327 -> m1_333  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_327 -> m1_337  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_327 -> m1_341  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_327 -> m1_246  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
m1_327 -> m1_309  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
m1_333 -> m1_334  [key=0, style=solid];
m1_333 -> m1_333  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_333 -> m1_336  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_333 -> m1_341  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_329 -> m1_330  [key=0, style=solid];
m1_329 -> m1_331  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_329 -> m1_332  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_329 -> m1_333  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_329 -> m1_334  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_329 -> m1_337  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_329 -> m1_338  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_329 -> m1_340  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_329 -> m1_246  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m1_330 -> m1_331  [key=0, style=solid];
m1_330 -> m1_341  [key=0, style=solid];
m1_332 -> m1_333  [key=0, style=solid];
m1_332 -> m1_192  [key=2, style=dotted];
m1_340 -> m1_330  [key=0, style=solid];
m1_340 -> m1_340  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_336 -> m1_340  [key=0, style=solid];
m1_336 -> m1_336  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_336 -> m1_341  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_335 -> m1_336  [key=0, style=solid];
m1_335 -> m1_192  [key=2, style=dotted];
m1_345 -> m1_346  [key=0, style=solid];
m1_346 -> m1_309  [key=0, style=bold, color=blue];
m1_313 -> m1_276  [key=0, style=bold, color=blue];
m1_276 -> m1_312  [key=0, style=solid];
m1_312 -> m1_313  [key=0, style=solid];
m1_312 -> m1_46  [key=2, style=dotted];
m1_312 -> m1_297  [key=2, style=dotted];
m1_373 -> m1_10  [key=3, color=darkorchid, style=bold, label="Field variable string copyright"];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_58  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_58  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_59 -> m1_60  [key=0, style=solid];
m1_62 -> m1_63  [key=0, style=solid, color=green];
m1_57 -> m1_55  [key=0, style=bold, color=blue];
m1_61 -> m1_59  [key=0, style=bold, color=blue];
m1_63 -> m1_64  [key=0, style=solid, color=green];
m1_64 -> m1_62  [key=0, style=bold, color=blue];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_91  [key=2, style=dotted];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_91  [key=2, style=dotted];
m1_82 -> m1_83  [key=0, style=solid];
m1_85 -> m1_86  [key=0, style=solid];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_91  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_92 -> m1_93  [key=0, style=solid];
m1_95 -> m1_96  [key=0, style=solid];
m1_98 -> m1_99  [key=0, style=solid];
m1_101 -> m1_102  [key=0, style=solid];
m1_104 -> m1_105  [key=0, style=solid];
m1_83 -> m1_84  [key=0, style=solid];
m1_84 -> m1_82  [key=0, style=bold, color=blue];
m1_86 -> m1_87  [key=0, style=solid];
m1_87 -> m1_85  [key=0, style=bold, color=blue];
m1_90 -> m1_88  [key=0, style=bold, color=blue];
m1_93 -> m1_94  [key=0, style=solid];
m1_94 -> m1_92  [key=0, style=bold, color=blue];
m1_97 -> m1_95  [key=0, style=bold, color=blue];
m1_99 -> m1_100  [key=0, style=solid];
m1_100 -> m1_98  [key=0, style=bold, color=blue];
m1_103 -> m1_101  [key=0, style=bold, color=blue];
m1_105 -> m1_106  [key=0, style=solid];
m1_106 -> m1_104  [key=0, style=bold, color=blue];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_50  [key=2, style=dotted];
m1_128 -> m1_129  [key=0, style=solid];
m1_130 -> m1_128  [key=0, style=bold, color=blue];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_189  [key=2, style=dotted];
m1_186 -> m1_190  [key=2, style=dotted];
m1_186 -> m1_191  [key=2, style=dotted];
m1_186 -> m1_192  [key=2, style=dotted];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_181  [key=2, style=dotted];
m1_187 -> m1_193  [key=2, style=dotted];
m1_182 -> m1_183  [key=0, style=solid];
m1_185 -> m1_186  [key=0, style=solid];
m1_183 -> m1_184  [key=0, style=solid];
m1_184 -> m1_182  [key=0, style=bold, color=blue];
m1_188 -> m1_185  [key=0, style=bold, color=blue];
m1_197 -> m1_198  [key=0, style=solid];
m1_198 -> m1_199  [key=0, style=solid];
m1_199 -> m1_197  [key=0, style=bold, color=blue];
m1_228 -> m1_229  [key=0, style=solid];
m1_229 -> m1_230  [key=0, style=solid];
m1_230 -> m1_231  [key=0, style=solid];
m1_227 -> m1_228  [key=0, style=solid];
m1_227 -> m1_229  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.UnParserSettings"];
m1_227 -> m1_230  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.UnParserSettings"];
m1_231 -> m1_227  [key=0, style=bold, color=blue];
m1_241 -> m1_242  [key=0, style=solid];
m1_242 -> m1_243  [key=0, style=solid];
m1_243 -> m1_241  [key=0, style=bold, color=blue];
m1_279 -> m1_280  [key=0, style=solid];
m1_280 -> m1_281  [key=0, style=solid];
m1_281 -> m1_279  [key=0, style=bold, color=blue];
m1_286 -> m1_287  [key=0, style=solid];
m1_286 -> m1_288  [key=1, style=dashed, color=darkseagreen4, label="System.Tuple<System.Reflection.PropertyInfo, CommandLine.Text.UsageAttribute>"];
m1_287 -> m1_288  [key=0, style=solid];
m1_287 -> m1_289  [key=1, style=dashed, color=darkseagreen4, label=prop];
m1_288 -> m1_289  [key=0, style=solid];
m1_288 -> m1_290  [key=1, style=dashed, color=darkseagreen4, label=attr];
m1_289 -> m1_290  [key=0, style=solid];
m1_289 -> m1_292  [key=2, style=dotted];
m1_290 -> m1_291  [key=0, style=solid];
m1_290 -> m1_293  [key=2, style=dotted];
m1_291 -> m1_286  [key=0, style=bold, color=blue];
m1_307 -> m1_308  [key=0, style=solid];
m1_307 -> m1_309  [key=2, style=dotted];
m1_306 -> m1_307  [key=0, style=solid];
m1_308 -> m1_306  [key=0, style=bold, color=blue];
m1_354 -> m1_355  [key=0, style=solid];
m1_354 -> m1_356  [key=2, style=dotted];
m1_354 -> m1_192  [key=2, style=dotted];
m1_358 -> m1_359  [key=0, style=solid];
m1_358 -> m1_360  [key=2, style=dotted];
m1_358 -> m1_192  [key=2, style=dotted];
m1_353 -> m1_354  [key=0, style=solid];
m1_357 -> m1_358  [key=0, style=solid];
m1_361 -> m1_362  [key=0, style=solid];
m1_362 -> m1_363  [key=0, style=solid];
m1_362 -> m1_364  [key=2, style=dotted];
m1_362 -> m1_362  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_355 -> m1_353  [key=0, style=bold, color=blue];
m1_359 -> m1_357  [key=0, style=bold, color=blue];
m1_363 -> m1_361  [key=0, style=bold, color=blue];
m1_369 -> m1_370  [key=0, style=solid];
m1_369 -> m1_371  [key=2, style=dotted];
m1_369 -> m1_372  [key=2, style=dotted];
m1_369 -> m1_373  [key=2, style=dotted];
m1_369 -> m1_237  [key=2, style=dotted];
m1_375 -> m1_376  [key=0, style=solid];
m1_375 -> m1_237  [key=2, style=dotted];
m1_375 -> m1_372  [key=2, style=dotted];
m1_375 -> m1_373  [key=2, style=dotted];
m1_368 -> m1_369  [key=0, style=solid];
m1_374 -> m1_375  [key=0, style=solid];
m1_370 -> m1_368  [key=0, style=bold, color=blue];
m1_376 -> m1_374  [key=0, style=bold, color=blue];
m1_380 -> m1_381  [key=0, style=solid];
m1_380 -> m1_382  [key=2, style=dotted];
m1_384 -> m1_385  [key=0, style=solid];
m1_384 -> m1_372  [key=2, style=dotted];
m1_379 -> m1_380  [key=0, style=solid];
m1_383 -> m1_384  [key=0, style=solid];
m1_381 -> m1_379  [key=0, style=bold, color=blue];
m1_385 -> m1_383  [key=0, style=bold, color=blue];
m1_392 -> m1_393  [key=0, style=solid];
m1_392 -> m1_394  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_393 -> m1_394  [key=0, style=solid];
m1_393 -> m1_396  [key=2, style=dotted];
m1_393 -> m1_397  [key=2, style=dotted];
m1_394 -> m1_395  [key=0, style=solid];
m1_394 -> m1_398  [key=2, style=dotted];
m1_395 -> m1_392  [key=0, style=bold, color=blue];
m1_147 -> m1_148  [key=0, style=solid, color=green];
m1_147 -> m1_299  [key=0, style=solid];
m1_147 -> m1_301  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_147 -> m1_302  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>"];
m1_147 -> m1_307  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_148 -> m1_149  [key=0, style=solid, color=green];
m1_148 -> m1_50  [key=2, style=dotted, color=green];
m1_148 -> m1_150  [key=0, style=solid];
m1_149 -> m1_147  [key=0, style=bold, color=blue];
m1_149 -> m1_153  [key=0, style=solid];
m1_149 -> m1_23  [key=2, style=dotted];
m1_156 -> m1_157  [key=0, style=solid, color=green];
m1_156 -> m1_138  [key=2, style=dotted, color=green];
m1_156 -> m1_159  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_156 -> m1_147  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddOptions"];
m1_157 -> m1_155  [key=0, style=bold, color=blue];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_159  [key=0, style=solid];
m1_356 -> m1_365  [key=0, style=solid];
m1_356 -> m1_369  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m1_356 -> m1_375  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m1_356 -> m1_309  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.OptionSpecification specification"];
m1_365 -> m1_366  [key=0, style=solid];
m1_365 -> m1_24  [key=2, style=dotted];
m1_365 -> m1_367  [key=2, style=dotted];
m1_365 -> m1_181  [key=2, style=dotted];
m1_365 -> m1_368  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_365 -> m1_374  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_366 -> m1_356  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_4  [key=0, style=bold, color=blue];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_68  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_65 -> m1_72  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_65 -> m1_89  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_65 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_65 -> m1_102  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_65 -> m1_50  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AutoBuild"];
m1_65 -> m1_25  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AutoBuild"];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_68  [key=0, style=solid];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_68 -> m1_73  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_72 -> m1_76  [key=0, style=solid];
m1_72 -> m1_25  [key=2, style=dotted];
m1_72 -> m1_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_72 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_25  [key=2, style=dotted];
m1_75 -> m1_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_75 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_75 -> m1_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_75 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_67 -> m1_76  [key=0, style=solid];
m1_67 -> m1_77  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_71  [key=0, style=solid];
m1_69 -> m1_51  [key=2, style=dotted];
m1_69 -> m1_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_73  [key=0, style=solid];
m1_71 -> m1_51  [key=2, style=dotted];
m1_71 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_78  [key=2, style=dotted];
m1_73 -> m1_79  [key=2, style=dotted];
m1_73 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label=err];
m1_70 -> m1_76  [key=0, style=solid];
m1_70 -> m1_4  [key=2, style=dotted];
m1_70 -> m1_50  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_80  [key=2, style=dotted];
m1_74 -> m1_81  [key=2, style=dotted];
m1_74 -> m1_43  [key=2, style=dotted];
m1_74 -> m1_96  [key=1, style=dashed, color=darkseagreen4, label=pr];
m1_76 -> m1_65  [key=0, style=bold, color=blue];
m1_150 -> m1_151  [key=0, style=solid, color=green];
m1_150 -> m1_152  [key=0, style=solid];
m1_151 -> m1_152  [key=0, style=solid, color=green];
m1_151 -> m1_126  [key=2, style=dotted, color=green];
m1_151 -> m1_153  [key=0, style=solid];
m1_151 -> m1_154  [key=2, style=dotted];
m1_152 -> m1_153  [key=0, style=solid, color=green];
m1_152 -> m1_127  [key=2, style=dotted, color=green];
m1_152 -> m1_155  [key=1, style=dashed, color=green, label="lambda expression"];
m1_152 -> m1_124  [key=2, style=dotted];
m1_152 -> m1_147  [key=2, style=dotted];
m1_153 -> m1_154  [key=0, style=solid, color=green];
m1_153 -> m1_53  [key=0, style=bold, color=blue];
m1_154 -> m1_150  [key=0, style=bold, color=blue];
m1_53 -> m1_148  [key=0, style=solid];
m1_53 -> m1_150  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m1_53 -> m1_152  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m1_53 -> m1_147  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddVerbs"];
m1_219 -> m1_282  [key=0, style=solid, color=red];
m1_282 -> m1_283  [key=0, style=solid, color=red];
m1_282 -> m1_284  [key=2, style=dotted, color=red];
m1_282 -> m1_285  [key=2, style=dotted, color=red];
m1_282 -> m1_286  [key=1, style=dashed, color=red, label="lambda expression"];
m1_283 -> m1_219  [key=0, style=bold, color=blue];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_8  [key=0, style=bold, color=blue];
m1_194 -> m1_195  [key=0, style=solid];
m1_194 -> m1_49  [key=3, color=darkorchid, style=bold, label="method methodReturn string RenderUsageText"];
m1_195 -> m1_196  [key=0, style=solid];
m1_195 -> m1_49  [key=2, style=dotted];
m1_195 -> m1_197  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_196 -> m1_194  [key=0, style=bold, color=blue];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_25 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_25 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>"];
m1_25 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_25 -> m1_37  [key=1, style=dashed, color=green, label="CommandLine.ParserResult<T>"];
m1_25 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_25 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_0  [key=2, style=dotted];
m1_26 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_26 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_26 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_26 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_26 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_26 -> m1_36  [key=1, style=dashed, color=green, label=auto];
m1_26 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_26 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_26 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_26 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_32  [key=0, style=solid];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_37  [key=1, style=dashed, color=green, label=errors];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_46  [key=2, style=dotted];
m1_31 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_31 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_31 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_31 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_31 -> m1_36  [key=1, style=dashed, color=green, label=auto];
m1_31 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_31 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_31 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_31 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_34 -> m1_35  [key=0, style=solid, color=green];
m1_34 -> m1_49  [key=2, style=dotted];
m1_34 -> m1_36  [key=1, style=dashed, color=green, label=usageText];
m1_37 -> m1_38  [key=0, style=solid, color=green];
m1_37 -> m1_40  [key=0, style=solid, color=green];
m1_37 -> m1_45  [key=2, style=dotted, color=green];
m1_37 -> m1_51  [key=2, style=dotted, color=green];
m1_37 -> m1_62  [key=1, style=dashed, color=green, label="lambda expression"];
m1_39 -> m1_41  [key=0, style=solid];
m1_39 -> m1_52  [key=2, style=dotted];
m1_39 -> m1_53  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_54  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_43  [key=2, style=dotted];
m1_27 -> m1_37  [key=1, style=dashed, color=green, label=errors];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_47  [key=2, style=dotted];
m1_32 -> m1_48  [key=2, style=dotted];
m1_32 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_47  [key=2, style=dotted];
m1_33 -> m1_48  [key=2, style=dotted];
m1_33 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_36 -> m1_37  [key=0, style=solid, color=green];
m1_36 -> m1_50  [key=2, style=dotted, color=green];
m1_38 -> m1_39  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_32  [key=0, style=solid];
m1_30 -> m1_44  [key=2, style=dotted];
m1_30 -> m1_45  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid, color=green];
m1_35 -> m1_37  [key=0, style=solid, color=green];
m1_42 -> m1_25  [key=0, style=bold, color=blue];
m1_299 -> m1_300  [key=0, style=solid];
m1_299 -> m1_305  [key=2, style=dotted];
m1_299 -> m1_301  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
m1_299 -> m1_302  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
m1_299 -> m1_307  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
m1_301 -> m1_302  [key=0, style=solid];
m1_301 -> m1_307  [key=1, style=dashed, color=darkseagreen4, label=remainingSpace];
m1_302 -> m1_303  [key=0, style=solid];
m1_302 -> m1_127  [key=2, style=dotted];
m1_302 -> m1_306  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_300 -> m1_301  [key=0, style=solid];
m1_300 -> m1_24  [key=2, style=dotted];
m1_303 -> m1_304  [key=0, style=solid];
m1_304 -> m1_147  [key=0, style=bold, color=blue];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_134  [key=3, color=darkorchid, style=bold, label="method methodReturn string op_Implicit"];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_134  [key=2, style=dotted];
m1_133 -> m1_131  [key=0, style=bold, color=blue];
m1_137 -> m1_314  [key=0, style=solid];
m1_137 -> m1_50  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m1_314 -> m1_315  [key=0, style=solid];
m1_314 -> m1_244  [key=2, style=dotted];
m1_315 -> m1_316  [key=0, style=solid];
m1_316 -> m1_137  [key=0, style=bold, color=blue];
m1_141 -> m1_386  [key=0, style=solid];
m1_141 -> m1_222  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Text.StringBuilder builder"];
m1_141 -> m1_138  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m1_386 -> m1_387  [key=0, style=solid];
m1_386 -> m1_244  [key=2, style=dotted];
m1_387 -> m1_388  [key=0, style=solid];
m1_388 -> m1_141  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_2  [key=0, style=bold, color=blue];
m1_270 -> m1_271  [key=0, style=solid];
m1_270 -> m1_78  [key=2, style=dotted];
m1_270 -> m1_275  [key=2, style=dotted];
m1_270 -> m1_276  [key=2, style=dotted];
m1_270 -> m1_277  [key=2, style=dotted];
m1_270 -> m1_272  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m1_146 -> m1_269  [key=0, style=solid];
m1_146 -> m1_142  [key=0, style=bold, color=blue];
m1_269 -> m1_270  [key=0, style=solid];
m1_269 -> m1_274  [key=2, style=dotted];
m1_269 -> m1_271  [key=1, style=dashed, color=darkseagreen4, label=specs];
m1_271 -> m1_272  [key=0, style=solid];
m1_271 -> m1_78  [key=2, style=dotted];
m1_271 -> m1_278  [key=2, style=dotted];
m1_271 -> m1_279  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_272 -> m1_273  [key=0, style=solid];
m1_272 -> m1_43  [key=2, style=dotted];
m1_272 -> m1_277  [key=2, style=dotted];
m1_273 -> m1_146  [key=0, style=bold, color=blue];
m1_244 -> m1_245  [key=0, style=solid];
m1_244 -> m1_247  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_244 -> m1_250  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_244 -> m1_251  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m1_244 -> m1_253  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_244 -> m1_254  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m1_244 -> m1_256  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_244 -> m1_257  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m1_244 -> m1_258  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_244 -> m1_260  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_244 -> m1_261  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m1_244 -> m1_262  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_244 -> m1_263  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m1_244 -> m1_141  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m1_244 -> m1_137  [key=3, color=darkorchid, style=bold, label="Parameter variable int maximumLength"];
m1_245 -> m1_246  [key=0, style=solid];
m1_245 -> m1_237  [key=2, style=dotted];
m1_247 -> m1_248  [key=0, style=solid];
m1_247 -> m1_265  [key=2, style=dotted];
m1_247 -> m1_249  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_247 -> m1_250  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_247 -> m1_251  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_247 -> m1_252  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_247 -> m1_253  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_247 -> m1_256  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_247 -> m1_257  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_250 -> m1_251  [key=0, style=solid];
m1_250 -> m1_256  [key=0, style=solid];
m1_251 -> m1_252  [key=0, style=solid];
m1_251 -> m1_192  [key=2, style=dotted];
m1_253 -> m1_254  [key=0, style=solid];
m1_253 -> m1_259  [key=0, style=solid];
m1_254 -> m1_255  [key=0, style=solid];
m1_254 -> m1_192  [key=2, style=dotted];
m1_256 -> m1_257  [key=0, style=solid];
m1_256 -> m1_260  [key=0, style=solid];
m1_257 -> m1_258  [key=0, style=solid];
m1_257 -> m1_266  [key=2, style=dotted];
m1_257 -> m1_192  [key=2, style=dotted];
m1_258 -> m1_260  [key=0, style=solid];
m1_260 -> m1_261  [key=0, style=solid];
m1_260 -> m1_267  [key=2, style=dotted];
m1_260 -> m1_268  [key=2, style=dotted];
m1_260 -> m1_260  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_260 -> m1_262  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_260 -> m1_263  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_261 -> m1_262  [key=0, style=solid];
m1_261 -> m1_237  [key=2, style=dotted];
m1_262 -> m1_245  [key=0, style=solid];
m1_262 -> m1_263  [key=0, style=solid];
m1_263 -> m1_264  [key=0, style=solid];
m1_263 -> m1_192  [key=2, style=dotted];
m1_246 -> m1_247  [key=0, style=solid];
m1_246 -> m1_250  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_246 -> m1_252  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_246 -> m1_256  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_246 -> m1_260  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_246 -> m1_246  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
m1_246 -> m1_244  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
m1_252 -> m1_253  [key=0, style=solid];
m1_252 -> m1_252  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_252 -> m1_255  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_252 -> m1_260  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_248 -> m1_249  [key=0, style=solid];
m1_248 -> m1_250  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_248 -> m1_251  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_248 -> m1_252  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_248 -> m1_253  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_248 -> m1_256  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_248 -> m1_257  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_248 -> m1_259  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_248 -> m1_246  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m1_249 -> m1_250  [key=0, style=solid];
m1_249 -> m1_260  [key=0, style=solid];
m1_259 -> m1_249  [key=0, style=solid];
m1_259 -> m1_259  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_255 -> m1_259  [key=0, style=solid];
m1_255 -> m1_255  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_255 -> m1_260  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_264 -> m1_244  [key=0, style=bold, color=blue];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_10 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_10 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.SentenceBuilder"];
m1_10 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_10 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_13  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_15  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_12 -> m1_22  [key=0, style=solid];
m1_12 -> m1_23  [key=2, style=dotted];
m1_14 -> m1_22  [key=0, style=solid];
m1_14 -> m1_23  [key=2, style=dotted];
m1_16 -> m1_22  [key=0, style=solid];
m1_16 -> m1_23  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_24  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_24  [key=2, style=dotted];
m1_22 -> m1_10  [key=0, style=bold, color=blue];
m1_360 -> m1_377  [key=0, style=solid];
m1_360 -> m1_380  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m1_360 -> m1_384  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m1_360 -> m1_309  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.ValueSpecification specification"];
m1_377 -> m1_378  [key=0, style=solid];
m1_377 -> m1_24  [key=2, style=dotted];
m1_377 -> m1_347  [key=2, style=dotted];
m1_377 -> m1_373  [key=2, style=dotted];
m1_377 -> m1_181  [key=2, style=dotted];
m1_377 -> m1_379  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_377 -> m1_383  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_378 -> m1_360  [key=0, style=bold, color=blue];
m1_305 -> m1_389  [key=0, style=solid];
m1_389 -> m1_390  [key=0, style=solid];
m1_389 -> m1_391  [key=2, style=dotted];
m1_389 -> m1_392  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_390 -> m1_305  [key=0, style=bold, color=blue];
m1_311 -> m1_275  [key=0, style=bold, color=blue];
m1_275 -> m1_310  [key=0, style=solid];
m1_310 -> m1_311  [key=0, style=solid];
m1_310 -> m1_46  [key=2, style=dotted];
m1_310 -> m1_297  [key=2, style=dotted];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_146  [key=2, style=dotted];
m1_159 -> m1_124  [key=2, style=dotted];
m1_159 -> m1_147  [key=2, style=dotted];
m1_158 -> m1_160  [key=0, style=solid];
m1_158 -> m1_23  [key=2, style=dotted];
m1_160 -> m1_156  [key=0, style=bold, color=blue];
m1_397 -> m1_419  [key=0, style=solid];
m1_397 -> m1_420  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m1_397 -> m1_422  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m1_397 -> m1_423  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m1_397 -> m1_425  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m1_397 -> m1_426  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m1_397 -> m1_389  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.ValueSpecification spec"];
m1_419 -> m1_420  [key=0, style=solid];
m1_419 -> m1_425  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_419 -> m1_426  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_419 -> m1_246  [key=3, color=darkorchid, style=bold, label="Local variable int specLength"];
m1_419 -> m1_421  [key=3, color=darkorchid, style=bold, label="Local variable int specLength"];
m1_420 -> m1_421  [key=0, style=solid];
m1_420 -> m1_424  [key=1, style=dashed, color=darkseagreen4, label=hasMeta];
m1_422 -> m1_423  [key=0, style=solid];
m1_422 -> m1_424  [key=0, style=solid];
m1_423 -> m1_424  [key=0, style=solid];
m1_423 -> m1_427  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m1_425 -> m1_427  [key=0, style=solid];
m1_425 -> m1_430  [key=2, style=dotted];
m1_425 -> m1_425  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_426 -> m1_427  [key=0, style=solid];
m1_426 -> m1_430  [key=2, style=dotted];
m1_426 -> m1_426  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_421 -> m1_422  [key=0, style=solid];
m1_421 -> m1_427  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m1_421 -> m1_246  [key=3, color=darkorchid, style=bold, label="Local variable int metaLength"];
m1_424 -> m1_425  [key=0, style=solid];
m1_424 -> m1_426  [key=0, style=solid];
m1_427 -> m1_428  [key=0, style=solid];
m1_427 -> m1_427  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_428 -> m1_429  [key=0, style=solid];
m1_429 -> m1_397  [key=0, style=bold, color=blue];
m1_50 -> m1_135  [key=0, style=solid];
m1_50 -> m1_34  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m1_50 -> m1_118  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m1_50 -> m1_137  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddPreOptionsLine"];
m1_50 -> m1_144  [key=3, color=green, style=bold, label="Parameter variable string value"];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_137  [key=2, style=dotted];
m1_136 -> m1_50  [key=0, style=bold, color=blue];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m1_161 -> m1_166  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_161 -> m1_147  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddVerbs"];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_164  [key=0, style=solid];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_166  [key=0, style=solid];
m1_166 -> m1_167  [key=0, style=solid];
m1_166 -> m1_155  [key=2, style=dotted];
m1_166 -> m1_124  [key=2, style=dotted];
m1_166 -> m1_147  [key=2, style=dotted];
m1_163 -> m1_167  [key=0, style=solid];
m1_163 -> m1_23  [key=2, style=dotted];
m1_165 -> m1_167  [key=0, style=solid];
m1_165 -> m1_154  [key=2, style=dotted];
m1_167 -> m1_161  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_6  [key=0, style=bold, color=blue];
m1_49 -> m1_200  [key=0, style=solid];
m1_49 -> m1_202  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_49 -> m1_210  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Text.Example, CommandLine.Text.Example>"];
m1_49 -> m1_194  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.ParserResult<T> parserResult"];
m1_49 -> m1_195  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<CommandLine.Text.Example, CommandLine.Text.Example> mapperFunc"];
m1_200 -> m1_201  [key=0, style=solid];
m1_200 -> m1_202  [key=0, style=solid];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_219  [key=2, style=dotted];
m1_202 -> m1_205  [key=1, style=dashed, color=darkseagreen4, label=usage];
m1_210 -> m1_211  [key=0, style=solid];
m1_210 -> m1_46  [key=2, style=dotted];
m1_210 -> m1_212  [key=1, style=dashed, color=darkseagreen4, label=example];
m1_210 -> m1_214  [key=1, style=dashed, color=darkseagreen4, label=example];
m1_201 -> m1_218  [key=0, style=solid];
m1_201 -> m1_23  [key=2, style=dotted];
m1_203 -> m1_204  [key=0, style=solid];
m1_203 -> m1_205  [key=0, style=solid];
m1_203 -> m1_220  [key=2, style=dotted];
m1_205 -> m1_206  [key=0, style=solid];
m1_205 -> m1_221  [key=2, style=dotted];
m1_205 -> m1_207  [key=1, style=dashed, color=darkseagreen4, label=usageTuple];
m1_204 -> m1_218  [key=0, style=solid];
m1_206 -> m1_207  [key=0, style=solid];
m1_206 -> m1_209  [key=1, style=dashed, color=darkseagreen4, label=examples];
m1_207 -> m1_208  [key=0, style=solid];
m1_207 -> m1_222  [key=2, style=dotted];
m1_207 -> m1_214  [key=1, style=dashed, color=darkseagreen4, label=appAlias];
m1_209 -> m1_210  [key=0, style=solid];
m1_209 -> m1_217  [key=0, style=solid];
m1_208 -> m1_209  [key=0, style=solid];
m1_208 -> m1_24  [key=2, style=dotted];
m1_208 -> m1_216  [key=1, style=dashed, color=darkseagreen4, label=text];
m1_208 -> m1_217  [key=1, style=dashed, color=darkseagreen4, label=text];
m1_214 -> m1_215  [key=0, style=solid];
m1_214 -> m1_189  [key=2, style=dotted];
m1_214 -> m1_190  [key=2, style=dotted];
m1_214 -> m1_192  [key=2, style=dotted];
m1_214 -> m1_223  [key=2, style=dotted];
m1_214 -> m1_225  [key=2, style=dotted];
m1_214 -> m1_227  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_216 -> m1_209  [key=0, style=solid];
m1_216 -> m1_226  [key=2, style=dotted];
m1_217 -> m1_218  [key=0, style=solid];
m1_217 -> m1_181  [key=2, style=dotted];
m1_211 -> m1_212  [key=0, style=solid];
m1_211 -> m1_189  [key=2, style=dotted];
m1_211 -> m1_223  [key=2, style=dotted];
m1_211 -> m1_192  [key=2, style=dotted];
m1_211 -> m1_215  [key=1, style=dashed, color=darkseagreen4, label=exampleText];
m1_211 -> m1_216  [key=1, style=dashed, color=darkseagreen4, label=exampleText];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_224  [key=2, style=dotted];
m1_215 -> m1_213  [key=0, style=solid];
m1_215 -> m1_226  [key=2, style=dotted];
m1_213 -> m1_214  [key=0, style=solid];
m1_213 -> m1_216  [key=0, style=solid];
m1_213 -> m1_228  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_213 -> m1_229  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_213 -> m1_230  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_218 -> m1_49  [key=0, style=bold, color=blue];
m1_431 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_135  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_139  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_144  [key=1, style=dashed, color=green, label="CommandLine.Text.HelpText"];
m1_431 -> m1_152  [key=1, style=dashed, color=green, label="CommandLine.Text.HelpText"];
m1_431 -> m1_159  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_166  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_233  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_270  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_294  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_299  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_300  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_302  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_307  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_303  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_310  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_312  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_314  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_315  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_317  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_318  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_358  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_319  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_321  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_332  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_335  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_338  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_342  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_344  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_345  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_365  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_369  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_375  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_386  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_387  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_389  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_393  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_407  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_412  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_431 -> m1_145  [key=1, style=dashed, color=green, label="CommandLine.Text.HelpText"];
m1_431 -> m1_148  [key=1, style=dashed, color=green, label="CommandLine.Text.HelpText"];
m1_431 -> m1_153  [key=1, style=dashed, color=green, label="CommandLine.Text.HelpText"];
m1_431 -> m1_156  [key=1, style=dashed, color=green, label="CommandLine.Text.HelpText"];
m1_432 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_432 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_433 -> m1_89  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_433 -> m1_102  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_434 -> m1_96  [key=1, style=dashed, color=darkseagreen4, label=pr];
m1_435 -> m1_129  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_436 -> m1_186  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Error, string>"];
m1_437 -> m1_186  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_438 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label=text];
m1_439 -> m1_228  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_439 -> m1_229  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_439 -> m1_230  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_440 -> m1_307  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_441 -> m1_307  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
m1_442 -> m1_307  [key=1, style=dashed, color=darkseagreen4, label=remainingSpace];
m1_443 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_443 -> m1_358  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_444 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_444 -> m1_358  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_445 -> m1_362  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_446 -> m1_369  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m1_446 -> m1_375  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m1_447 -> m1_380  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m1_447 -> m1_384  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m2_50 -> m2_51  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_3  [key=2, style=dotted];
m2_51 -> m2_19  [key=2, style=dotted];
m2_51 -> m2_34  [key=2, style=dotted];
m2_51 -> m2_35  [key=2, style=dotted];
m2_51 -> m2_36  [key=2, style=dotted];
m2_51 -> m2_37  [key=2, style=dotted];
m2_51 -> m2_20  [key=2, style=dotted];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_4  [key=2, style=dotted];
m2_52 -> m2_21  [key=2, style=dotted];
m2_52 -> m2_38  [key=2, style=dotted];
m2_52 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_52 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_52 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_52 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_52 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_5  [key=2, style=dotted];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_5  [key=2, style=dotted];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_5  [key=2, style=dotted];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_5  [key=2, style=dotted];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_5  [key=2, style=dotted];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_5  [key=2, style=dotted];
m2_59 -> m2_50  [key=0, style=bold, color=blue];
m2_22 -> m2_23  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_3  [key=2, style=dotted];
m2_23 -> m2_19  [key=2, style=dotted];
m2_23 -> m2_34  [key=2, style=dotted];
m2_23 -> m2_35  [key=2, style=dotted];
m2_23 -> m2_36  [key=2, style=dotted];
m2_23 -> m2_37  [key=2, style=dotted];
m2_23 -> m2_20  [key=2, style=dotted];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_4  [key=2, style=dotted];
m2_24 -> m2_21  [key=2, style=dotted];
m2_24 -> m2_38  [key=2, style=dotted];
m2_24 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_24 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_24 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_24 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_24 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_24 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_24 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_5  [key=2, style=dotted];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_5  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_5  [key=2, style=dotted];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_5  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_5  [key=2, style=dotted];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_5  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_5  [key=2, style=dotted];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_5  [key=2, style=dotted];
m2_33 -> m2_22  [key=0, style=bold, color=blue];
m2_66 -> m2_67  [key=0, style=solid];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_65  [key=2, style=dotted];
m2_67 -> m2_17  [key=2, style=dotted];
m2_67 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label=sut];
m2_67 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label=sut];
m2_68 -> m2_69  [key=0, style=solid];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_34  [key=2, style=dotted];
m2_69 -> m2_35  [key=2, style=dotted];
m2_69 -> m2_36  [key=2, style=dotted];
m2_69 -> m2_37  [key=2, style=dotted];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_4  [key=2, style=dotted];
m2_70 -> m2_77  [key=2, style=dotted];
m2_70 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_70 -> m2_73  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_70 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_70 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_5  [key=2, style=dotted];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_5  [key=2, style=dotted];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_5  [key=2, style=dotted];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_5  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_5  [key=2, style=dotted];
m2_76 -> m2_66  [key=0, style=bold, color=blue];
m2_78 -> m2_79  [key=0, style=solid];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_65  [key=2, style=dotted];
m2_79 -> m2_17  [key=2, style=dotted];
m2_79 -> m2_81  [key=1, style=dashed, color=darkseagreen4, label=sut];
m2_79 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label=sut];
m2_80 -> m2_81  [key=0, style=solid];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_34  [key=2, style=dotted];
m2_81 -> m2_35  [key=2, style=dotted];
m2_81 -> m2_36  [key=2, style=dotted];
m2_81 -> m2_37  [key=2, style=dotted];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_4  [key=2, style=dotted];
m2_82 -> m2_21  [key=2, style=dotted];
m2_82 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_82 -> m2_85  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_82 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_82 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_82 -> m2_88  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_5  [key=2, style=dotted];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_5  [key=2, style=dotted];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_5  [key=2, style=dotted];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_5  [key=2, style=dotted];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_5  [key=2, style=dotted];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_5  [key=2, style=dotted];
m2_89 -> m2_78  [key=0, style=bold, color=blue];
m2_149 -> m2_150  [key=0, style=solid];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_34  [key=2, style=dotted];
m2_150 -> m2_35  [key=2, style=dotted];
m2_150 -> m2_116  [key=2, style=dotted];
m2_150 -> m2_121  [key=2, style=dotted];
m2_150 -> m2_118  [key=2, style=dotted];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_163  [key=2, style=dotted];
m2_152 -> m2_153  [key=0, style=solid];
m2_152 -> m2_4  [key=2, style=dotted];
m2_152 -> m2_21  [key=2, style=dotted];
m2_152 -> m2_38  [key=2, style=dotted];
m2_152 -> m2_154  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_152 -> m2_155  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_152 -> m2_156  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_152 -> m2_157  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_152 -> m2_158  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_152 -> m2_159  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_152 -> m2_160  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_152 -> m2_161  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_164  [key=2, style=dotted];
m2_153 -> m2_165  [key=2, style=dotted];
m2_154 -> m2_155  [key=0, style=solid];
m2_154 -> m2_164  [key=2, style=dotted];
m2_154 -> m2_165  [key=2, style=dotted];
m2_155 -> m2_156  [key=0, style=solid];
m2_155 -> m2_5  [key=2, style=dotted];
m2_156 -> m2_157  [key=0, style=solid];
m2_156 -> m2_5  [key=2, style=dotted];
m2_157 -> m2_158  [key=0, style=solid];
m2_157 -> m2_5  [key=2, style=dotted];
m2_158 -> m2_159  [key=0, style=solid];
m2_158 -> m2_5  [key=2, style=dotted];
m2_159 -> m2_160  [key=0, style=solid];
m2_159 -> m2_5  [key=2, style=dotted];
m2_160 -> m2_161  [key=0, style=solid];
m2_160 -> m2_5  [key=2, style=dotted];
m2_161 -> m2_162  [key=0, style=solid];
m2_161 -> m2_5  [key=2, style=dotted];
m2_162 -> m2_149  [key=0, style=bold, color=blue];
m2_192 -> m2_193  [key=0, style=solid];
m2_193 -> m2_194  [key=0, style=solid];
m2_193 -> m2_3  [key=2, style=dotted];
m2_193 -> m2_19  [key=2, style=dotted];
m2_193 -> m2_34  [key=2, style=dotted];
m2_193 -> m2_35  [key=2, style=dotted];
m2_193 -> m2_36  [key=2, style=dotted];
m2_193 -> m2_37  [key=2, style=dotted];
m2_193 -> m2_20  [key=2, style=dotted];
m2_194 -> m2_195  [key=0, style=solid];
m2_194 -> m2_4  [key=2, style=dotted];
m2_194 -> m2_21  [key=2, style=dotted];
m2_194 -> m2_38  [key=2, style=dotted];
m2_194 -> m2_196  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_194 -> m2_197  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_194 -> m2_198  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_194 -> m2_199  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_194 -> m2_200  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_194 -> m2_201  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_194 -> m2_202  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_194 -> m2_203  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_195 -> m2_196  [key=0, style=solid];
m2_195 -> m2_5  [key=2, style=dotted];
m2_196 -> m2_197  [key=0, style=solid];
m2_196 -> m2_5  [key=2, style=dotted];
m2_197 -> m2_198  [key=0, style=solid];
m2_197 -> m2_5  [key=2, style=dotted];
m2_198 -> m2_199  [key=0, style=solid];
m2_198 -> m2_5  [key=2, style=dotted];
m2_199 -> m2_200  [key=0, style=solid];
m2_199 -> m2_5  [key=2, style=dotted];
m2_200 -> m2_201  [key=0, style=solid];
m2_200 -> m2_5  [key=2, style=dotted];
m2_201 -> m2_202  [key=0, style=solid];
m2_201 -> m2_5  [key=2, style=dotted];
m2_202 -> m2_203  [key=0, style=solid];
m2_202 -> m2_5  [key=2, style=dotted];
m2_203 -> m2_204  [key=0, style=solid];
m2_203 -> m2_5  [key=2, style=dotted];
m2_204 -> m2_192  [key=0, style=bold, color=blue];
m2_39 -> m2_40  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_3  [key=2, style=dotted];
m2_40 -> m2_19  [key=2, style=dotted];
m2_40 -> m2_34  [key=2, style=dotted];
m2_40 -> m2_35  [key=2, style=dotted];
m2_40 -> m2_36  [key=2, style=dotted];
m2_40 -> m2_37  [key=2, style=dotted];
m2_40 -> m2_20  [key=2, style=dotted];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_4  [key=2, style=dotted];
m2_41 -> m2_21  [key=2, style=dotted];
m2_41 -> m2_38  [key=2, style=dotted];
m2_41 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_41 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_41 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_41 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_41 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_41 -> m2_48  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_5  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_5  [key=2, style=dotted];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_5  [key=2, style=dotted];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_5  [key=2, style=dotted];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_5  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_5  [key=2, style=dotted];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_5  [key=2, style=dotted];
m2_49 -> m2_39  [key=0, style=bold, color=blue];
m2_90 -> m2_91  [key=0, style=solid];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_65  [key=2, style=dotted];
m2_91 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label=sut];
m2_91 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label=sut];
m2_92 -> m2_93  [key=0, style=solid];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_19  [key=2, style=dotted];
m2_93 -> m2_34  [key=2, style=dotted];
m2_93 -> m2_35  [key=2, style=dotted];
m2_93 -> m2_36  [key=2, style=dotted];
m2_93 -> m2_37  [key=2, style=dotted];
m2_93 -> m2_20  [key=2, style=dotted];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_4  [key=2, style=dotted];
m2_94 -> m2_21  [key=2, style=dotted];
m2_94 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_94 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_94 -> m2_98  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_94 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_94 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_5  [key=2, style=dotted];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_5  [key=2, style=dotted];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_5  [key=2, style=dotted];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_5  [key=2, style=dotted];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_5  [key=2, style=dotted];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_5  [key=2, style=dotted];
m2_101 -> m2_90  [key=0, style=bold, color=blue];
m2_177 -> m2_178  [key=0, style=solid];
m2_178 -> m2_179  [key=0, style=solid];
m2_178 -> m2_36  [key=2, style=dotted];
m2_178 -> m2_190  [key=2, style=dotted];
m2_179 -> m2_180  [key=0, style=solid];
m2_179 -> m2_34  [key=2, style=dotted];
m2_179 -> m2_191  [key=2, style=dotted];
m2_179 -> m2_125  [key=2, style=dotted];
m2_180 -> m2_181  [key=0, style=solid];
m2_180 -> m2_163  [key=2, style=dotted];
m2_181 -> m2_182  [key=0, style=solid];
m2_181 -> m2_4  [key=2, style=dotted];
m2_181 -> m2_21  [key=2, style=dotted];
m2_181 -> m2_38  [key=2, style=dotted];
m2_181 -> m2_183  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_181 -> m2_184  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_181 -> m2_185  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_181 -> m2_186  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_181 -> m2_187  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_181 -> m2_188  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_182 -> m2_183  [key=0, style=solid];
m2_182 -> m2_164  [key=2, style=dotted];
m2_182 -> m2_165  [key=2, style=dotted];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_164  [key=2, style=dotted];
m2_183 -> m2_165  [key=2, style=dotted];
m2_184 -> m2_185  [key=0, style=solid];
m2_184 -> m2_5  [key=2, style=dotted];
m2_185 -> m2_186  [key=0, style=solid];
m2_185 -> m2_5  [key=2, style=dotted];
m2_186 -> m2_187  [key=0, style=solid];
m2_186 -> m2_5  [key=2, style=dotted];
m2_187 -> m2_188  [key=0, style=solid];
m2_187 -> m2_5  [key=2, style=dotted];
m2_188 -> m2_189  [key=0, style=solid];
m2_188 -> m2_5  [key=2, style=dotted];
m2_189 -> m2_177  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_1 -> m2_4  [key=2, style=dotted];
m2_1 -> m2_5  [key=2, style=dotted];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_60 -> m2_61  [key=0, style=solid];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_65  [key=2, style=dotted];
m2_61 -> m2_34  [key=2, style=dotted];
m2_61 -> m2_35  [key=2, style=dotted];
m2_61 -> m2_36  [key=2, style=dotted];
m2_61 -> m2_37  [key=2, style=dotted];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_4  [key=2, style=dotted];
m2_62 -> m2_21  [key=2, style=dotted];
m2_62 -> m2_38  [key=2, style=dotted];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_5  [key=2, style=dotted];
m2_64 -> m2_60  [key=0, style=bold, color=blue];
m2_205 -> m2_206  [key=0, style=solid];
m2_206 -> m2_207  [key=0, style=solid];
m2_206 -> m2_34  [key=2, style=dotted];
m2_206 -> m2_35  [key=2, style=dotted];
m2_206 -> m2_36  [key=2, style=dotted];
m2_207 -> m2_208  [key=0, style=solid];
m2_207 -> m2_217  [key=2, style=dotted];
m2_208 -> m2_209  [key=0, style=solid];
m2_208 -> m2_21  [key=2, style=dotted];
m2_208 -> m2_210  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_208 -> m2_211  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_208 -> m2_212  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_208 -> m2_213  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_208 -> m2_214  [key=1, style=dashed, color=red, label=lines];
m2_208 -> m2_215  [key=1, style=dashed, color=red, label=lines];
m2_209 -> m2_210  [key=0, style=solid];
m2_209 -> m2_5  [key=2, style=dotted];
m2_210 -> m2_211  [key=0, style=solid];
m2_210 -> m2_5  [key=2, style=dotted];
m2_211 -> m2_212  [key=0, style=solid];
m2_211 -> m2_5  [key=2, style=dotted];
m2_212 -> m2_213  [key=0, style=solid];
m2_212 -> m2_5  [key=2, style=dotted];
m2_213 -> m2_214  [key=0, style=solid, color=red];
m2_213 -> m2_5  [key=2, style=dotted];
m2_214 -> m2_215  [key=0, style=solid, color=red];
m2_214 -> m2_5  [key=2, style=dotted, color=red];
m2_215 -> m2_216  [key=0, style=solid, color=red];
m2_215 -> m2_5  [key=2, style=dotted, color=red];
m2_216 -> m2_205  [key=0, style=bold, color=blue];
m2_146 -> m2_147  [key=0, style=solid];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_131  [key=0, style=solid];
m2_128 -> m2_133  [key=0, style=solid];
m2_128 -> m2_135  [key=0, style=solid];
m2_128 -> m2_137  [key=0, style=solid];
m2_128 -> m2_139  [key=0, style=solid];
m2_128 -> m2_141  [key=0, style=solid];
m2_128 -> m2_143  [key=0, style=solid];
m2_130 -> m2_144  [key=0, style=solid];
m2_132 -> m2_144  [key=0, style=solid];
m2_134 -> m2_144  [key=0, style=solid];
m2_136 -> m2_144  [key=0, style=solid];
m2_138 -> m2_144  [key=0, style=solid];
m2_142 -> m2_144  [key=0, style=solid];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_130  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_127 -> m2_132  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_127 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_127 -> m2_136  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_127 -> m2_138  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_127 -> m2_142  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_129 -> m2_130  [key=0, style=solid];
m2_131 -> m2_132  [key=0, style=solid];
m2_133 -> m2_134  [key=0, style=solid];
m2_135 -> m2_136  [key=0, style=solid];
m2_137 -> m2_138  [key=0, style=solid];
m2_139 -> m2_140  [key=0, style=solid];
m2_141 -> m2_142  [key=0, style=solid];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_145  [key=2, style=dotted];
m2_140 -> m2_144  [key=0, style=solid];
m2_144 -> m2_127  [key=0, style=bold, color=blue];
m2_147 -> m2_148  [key=0, style=solid];
m2_148 -> m2_146  [key=0, style=bold, color=blue];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_16  [key=2, style=dotted];
m2_7 -> m2_17  [key=2, style=dotted];
m2_7 -> m2_18  [key=2, style=dotted];
m2_7 -> m2_19  [key=2, style=dotted];
m2_7 -> m2_20  [key=2, style=dotted];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_4  [key=2, style=dotted];
m2_8 -> m2_21  [key=2, style=dotted];
m2_8 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_8 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_8 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_8 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_8 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_5  [key=2, style=dotted];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_5  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_5  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_5  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_5  [key=2, style=dotted];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_5  [key=2, style=dotted];
m2_15 -> m2_6  [key=0, style=bold, color=blue];
m2_102 -> m2_103  [key=0, style=solid];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_34  [key=2, style=dotted];
m2_103 -> m2_35  [key=2, style=dotted];
m2_103 -> m2_116  [key=2, style=dotted];
m2_103 -> m2_117  [key=2, style=dotted];
m2_103 -> m2_118  [key=2, style=dotted];
m2_103 -> m2_119  [key=2, style=dotted];
m2_103 -> m2_120  [key=2, style=dotted];
m2_103 -> m2_121  [key=2, style=dotted];
m2_103 -> m2_122  [key=2, style=dotted];
m2_103 -> m2_123  [key=2, style=dotted];
m2_103 -> m2_124  [key=2, style=dotted];
m2_103 -> m2_125  [key=2, style=dotted];
m2_103 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label=fakeResult];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_128  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_104 -> m2_130  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_104 -> m2_132  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_104 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_104 -> m2_136  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_104 -> m2_138  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_104 -> m2_142  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_104 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label=fakeRenderer];
m2_104 -> m2_104  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<CommandLine.Error, string> fakeRenderer"];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_126  [key=2, style=dotted];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_105  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string> fakeMutExclRenderer"];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_21  [key=2, style=dotted];
m2_107 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_107 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_107 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_107 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_107 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_107 -> m2_114  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_5  [key=2, style=dotted];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_5  [key=2, style=dotted];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_5  [key=2, style=dotted];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_5  [key=2, style=dotted];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_5  [key=2, style=dotted];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_5  [key=2, style=dotted];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_5  [key=2, style=dotted];
m2_115 -> m2_102  [key=0, style=bold, color=blue];
m2_166 -> m2_167  [key=0, style=solid];
m2_167 -> m2_168  [key=0, style=solid];
m2_167 -> m2_34  [key=2, style=dotted];
m2_167 -> m2_35  [key=2, style=dotted];
m2_167 -> m2_125  [key=2, style=dotted];
m2_168 -> m2_169  [key=0, style=solid];
m2_168 -> m2_163  [key=2, style=dotted];
m2_169 -> m2_170  [key=0, style=solid];
m2_169 -> m2_4  [key=2, style=dotted];
m2_169 -> m2_21  [key=2, style=dotted];
m2_169 -> m2_38  [key=2, style=dotted];
m2_169 -> m2_171  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_169 -> m2_172  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_169 -> m2_173  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_169 -> m2_174  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_169 -> m2_175  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_170 -> m2_171  [key=0, style=solid];
m2_170 -> m2_164  [key=2, style=dotted];
m2_170 -> m2_165  [key=2, style=dotted];
m2_171 -> m2_172  [key=0, style=solid];
m2_171 -> m2_164  [key=2, style=dotted];
m2_171 -> m2_165  [key=2, style=dotted];
m2_172 -> m2_173  [key=0, style=solid];
m2_172 -> m2_5  [key=2, style=dotted];
m2_173 -> m2_174  [key=0, style=solid];
m2_173 -> m2_5  [key=2, style=dotted];
m2_174 -> m2_175  [key=0, style=solid];
m2_174 -> m2_5  [key=2, style=dotted];
m2_175 -> m2_176  [key=0, style=solid];
m2_175 -> m2_5  [key=2, style=dotted];
m2_176 -> m2_166  [key=0, style=bold, color=blue];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> n40  [key=2, style=dotted];
m4_6 -> m4_4  [key=0, style=bold, color=blue];
m4_125 -> m4_126  [key=0, style=solid];
m4_126 -> m4_127  [key=0, style=solid];
m4_126 -> m4_114  [key=2, style=dotted];
m4_126 -> m4_39  [key=2, style=dotted];
m4_126 -> m4_128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_127 -> m4_125  [key=0, style=bold, color=blue];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_89  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m4_87 -> m4_91  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_87 -> m4_93  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m4_87 -> m4_95  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_87 -> m4_131  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_37  [key=2, style=dotted];
m4_88 -> m4_91  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_88 -> m4_97  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_88 -> m4_98  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_88 -> m4_99  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_92  [key=0, style=solid];
m4_91 -> m4_99  [key=0, style=solid];
m4_91 -> m4_101  [key=2, style=dotted];
m4_91 -> m4_102  [key=2, style=dotted];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_103  [key=2, style=dotted];
m4_93 -> m4_109  [key=1, style=dashed, color=darkseagreen4, label=sep];
m4_93 -> m4_97  [key=1, style=dashed, color=darkseagreen4, label=sep];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_104  [key=2, style=dotted];
m4_95 -> m4_97  [key=1, style=dashed, color=darkseagreen4, label=e];
m4_97 -> m4_96  [key=0, style=solid];
m4_97 -> m4_106  [key=2, style=dotted];
m4_97 -> m4_102  [key=2, style=dotted];
m4_97 -> m4_46  [key=2, style=dotted];
m4_98 -> m4_99  [key=0, style=solid];
m4_98 -> m4_107  [key=2, style=dotted];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_54  [key=2, style=dotted];
m4_90 -> m4_91  [key=0, style=solid];
m4_92 -> m4_93  [key=0, style=solid];
m4_94 -> m4_95  [key=0, style=solid];
m4_94 -> m4_109  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_94 -> m4_97  [key=1, style=dashed, color=darkseagreen4, label=format];
m4_94 -> m4_94  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<object, object> format"];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_98  [key=0, style=solid];
m4_96 -> m4_105  [key=2, style=dotted];
m4_100 -> m4_87  [key=0, style=bold, color=blue];
m4_41 -> m4_151  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsEmpty"];
m4_41 -> m4_161  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsEmpty"];
m4_136 -> m4_137  [key=0, style=solid];
m4_136 -> m4_138  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m4_137 -> m4_138  [key=0, style=solid];
m4_138 -> m4_139  [key=0, style=solid];
m4_138 -> m4_140  [key=2, style=dotted];
m4_138 -> m4_124  [key=2, style=dotted];
m4_138 -> m4_141  [key=2, style=dotted];
m4_138 -> m4_54  [key=2, style=dotted];
m4_139 -> m4_136  [key=0, style=bold, color=blue];
m4_150 -> m4_151  [key=0, style=solid];
m4_150 -> m4_153  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_150 -> m4_155  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_150 -> m4_157  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_150 -> m4_159  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_151 -> m4_152  [key=0, style=solid];
m4_151 -> m4_153  [key=0, style=solid];
m4_153 -> m4_154  [key=0, style=solid];
m4_153 -> m4_155  [key=0, style=solid];
m4_153 -> m4_36  [key=2, style=dotted];
m4_153 -> m4_147  [key=2, style=dotted];
m4_153 -> m4_148  [key=2, style=dotted];
m4_155 -> m4_156  [key=0, style=solid];
m4_155 -> m4_157  [key=0, style=solid];
m4_155 -> m4_36  [key=2, style=dotted];
m4_155 -> m4_163  [key=2, style=dotted];
m4_155 -> m4_164  [key=2, style=dotted];
m4_157 -> m4_158  [key=0, style=solid];
m4_157 -> m4_159  [key=0, style=solid];
m4_159 -> m4_160  [key=0, style=solid];
m4_159 -> m4_161  [key=0, style=solid];
m4_159 -> m4_104  [key=2, style=dotted];
m4_159 -> m4_105  [key=2, style=dotted];
m4_152 -> m4_162  [key=0, style=solid];
m4_154 -> m4_162  [key=0, style=solid];
m4_156 -> m4_162  [key=0, style=solid];
m4_158 -> m4_162  [key=0, style=solid];
m4_160 -> m4_162  [key=0, style=solid];
m4_161 -> m4_162  [key=0, style=solid];
m4_162 -> m4_150  [key=0, style=bold, color=blue];
m4_128 -> m4_129  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_12 -> m4_11  [key=0, style=bold, color=blue];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> m4_63  [key=2, style=dotted];
m4_61 -> m4_64  [key=2, style=dotted];
m4_61 -> m4_65  [key=2, style=dotted];
m4_80 -> m4_81  [key=0, style=solid, color=red];
m4_80 -> m4_82  [key=2, style=dotted, color=red];
m4_80 -> m4_50  [key=2, style=dotted, color=red];
m4_80 -> m4_46  [key=2, style=dotted, color=red];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_59  [key=2, style=dotted];
m4_57 -> m4_46  [key=2, style=dotted];
m4_56 -> m4_57  [key=0, style=solid];
m4_60 -> m4_61  [key=0, style=solid];
m4_66 -> m4_67  [key=0, style=solid];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_72  [key=2, style=dotted];
m4_69 -> m4_70  [key=0, style=solid];
m4_73 -> m4_74  [key=0, style=solid];
m4_76 -> m4_77  [key=0, style=solid];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_86  [key=2, style=dotted];
m4_84 -> m4_50  [key=2, style=dotted];
m4_84 -> m4_46  [key=2, style=dotted];
m4_79 -> m4_80  [key=0, style=solid, color=red];
m4_83 -> m4_84  [key=0, style=solid];
m4_58 -> m4_56  [key=0, style=bold, color=blue];
m4_62 -> m4_60  [key=0, style=bold, color=blue];
m4_67 -> m4_68  [key=0, style=solid];
m4_68 -> m4_66  [key=0, style=bold, color=blue];
m4_71 -> m4_69  [key=0, style=bold, color=blue];
m4_74 -> m4_75  [key=0, style=solid];
m4_75 -> m4_73  [key=0, style=bold, color=blue];
m4_77 -> m4_78  [key=0, style=solid];
m4_78 -> m4_76  [key=0, style=bold, color=blue];
m4_81 -> m4_79  [key=0, style=bold, color=blue];
m4_85 -> m4_83  [key=0, style=bold, color=blue];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_101  [key=2, style=dotted];
m4_108 -> m4_109  [key=0, style=solid];
m4_110 -> m4_108  [key=0, style=bold, color=blue];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_118  [key=2, style=dotted];
m4_116 -> m4_119  [key=2, style=dotted];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_72  [key=2, style=dotted];
m4_121 -> m4_123  [key=2, style=dotted];
m4_121 -> m4_124  [key=2, style=dotted];
m4_120 -> m4_121  [key=0, style=solid];
m4_115 -> m4_116  [key=0, style=solid];
m4_117 -> m4_115  [key=0, style=bold, color=blue];
m4_122 -> m4_120  [key=0, style=bold, color=blue];
m4_129 -> m4_130  [key=0, style=solid];
m4_130 -> m4_128  [key=0, style=bold, color=blue];
m4_65 -> m4_65  [key=3, color=darkorchid, style=bold, label="method methodReturn object NormalizeValue"];
m4_134 -> m4_131  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.UnParserSettings settings"];
m4_101 -> m4_111  [key=0, style=solid];
m4_101 -> m4_112  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_101 -> m4_87  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m4_101 -> m4_94  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_116  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_111 -> m4_121  [key=1, style=dashed, color=darkseagreen4, label=doubQt];
m4_111 -> m4_111  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<string, string> doubQt"];
m4_112 -> m4_113  [key=0, style=solid];
m4_112 -> m4_114  [key=2, style=dotted];
m4_112 -> m4_39  [key=2, style=dotted];
m4_112 -> m4_120  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_113 -> m4_101  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> n40  [key=2, style=dotted];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_10 -> m4_7  [key=3, color=darkorchid, style=bold, label="Parameter variable T options"];
m4_10 -> m4_8  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<CommandLine.UnParserSettings> configuration"];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label="System.Action<CommandLine.UnParserSettings>"];
m4_13 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label=T];
m4_13 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label=T];
m4_13 -> m4_61  [key=1, style=dashed, color=darkseagreen4, label=T];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_16  [key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_35  [key=2, style=dotted];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_36  [key=2, style=dotted];
m4_19 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label=type];
m4_19 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label=type];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_40  [key=2, style=dotted];
m4_22 -> m4_41  [key=2, style=dotted];
m4_22 -> m4_42  [key=2, style=dotted];
m4_22 -> m4_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_22 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label=info];
m4_22 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label=specs];
m4_15 -> m4_33  [key=0, style=solid];
m4_15 -> m4_34  [key=2, style=dotted];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> n40  [key=2, style=dotted];
m4_16 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_16 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_16 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_16 -> m4_29  [key=1, style=dashed, color=red, label=settings];
m4_16 -> m4_80  [key=1, style=dashed, color=red, label=settings];
m4_18 -> m4_19  [key=0, style=solid];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_43  [key=2, style=dotted];
m4_25 -> m4_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_25 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label=optSpecs];
m4_25 -> m4_29  [key=1, style=dashed, color=red, label=optSpecs];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_45  [key=2, style=dotted];
m4_27 -> m4_46  [key=2, style=dotted];
m4_27 -> m4_47  [key=2, style=dotted];
m4_27 -> m4_48  [key=2, style=dotted];
m4_27 -> m4_49  [key=2, style=dotted];
m4_27 -> m4_50  [key=2, style=dotted];
m4_27 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_27 -> m4_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_27 -> m4_29  [key=1, style=dashed, color=red, label=builder];
m4_27 -> m4_80  [key=1, style=dashed, color=red, label=builder];
m4_27 -> m4_30  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_27 -> m4_31  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_27 -> m4_84  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_27 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_29 -> m4_30  [key=0, style=solid, color=red];
m4_29 -> m4_53  [key=2, style=dotted, color=red];
m4_29 -> m4_79  [key=1, style=dashed, color=red, label="lambda expression"];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_37  [key=2, style=dotted];
m4_20 -> m4_57  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_20 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_38  [key=2, style=dotted];
m4_21 -> m4_39  [key=2, style=dotted];
m4_21 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_43  [key=2, style=dotted];
m4_23 -> m4_44  [key=2, style=dotted];
m4_23 -> m4_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_23 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label=info];
m4_23 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label=allOptSpecs];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_43  [key=2, style=dotted];
m4_26 -> m4_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_26 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label=info];
m4_26 -> m4_30  [key=1, style=dashed, color=darkseagreen4, label=valSpecs];
m4_26 -> m4_31  [key=1, style=dashed, color=darkseagreen4, label=valSpecs];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_44  [key=2, style=dotted];
m4_24 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label=info];
m4_24 -> m4_70  [key=1, style=dashed, color=darkseagreen4, label=shortSwitches];
m4_24 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label=shortSwitches];
m4_28 -> m4_29  [key=0, style=solid, color=red];
m4_28 -> m4_45  [key=2, style=dotted];
m4_28 -> m4_51  [key=2, style=dotted];
m4_28 -> m4_52  [key=2, style=dotted];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_45  [key=2, style=dotted];
m4_30 -> m4_51  [key=2, style=dotted];
m4_30 -> m4_52  [key=2, style=dotted];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_53  [key=2, style=dotted];
m4_31 -> m4_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_54  [key=2, style=dotted];
m4_32 -> m4_55  [key=2, style=dotted];
m4_33 -> m4_13  [key=0, style=bold, color=blue];
m4_131 -> m4_132  [key=0, style=solid];
m4_132 -> m4_133  [key=0, style=solid];
m4_132 -> m4_37  [key=2, style=dotted];
m4_132 -> m4_134  [key=2, style=dotted];
m4_132 -> m4_50  [key=2, style=dotted];
m4_132 -> m4_87  [key=2, style=dotted];
m4_132 -> m4_135  [key=2, style=dotted];
m4_132 -> m4_54  [key=2, style=dotted];
m4_133 -> m4_131  [key=0, style=bold, color=blue];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_10  [key=3, color=darkorchid, style=bold, label="method methodReturn string FormatCommandLine"];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_10  [key=2, style=dotted];
m4_8 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_9 -> m4_7  [key=0, style=bold, color=blue];
m4_142 -> m4_143  [key=0, style=solid];
m4_142 -> m4_144  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_142 -> m4_145  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_143 -> m4_144  [key=0, style=solid];
m4_143 -> m4_145  [key=0, style=solid];
m4_143 -> m4_36  [key=2, style=dotted];
m4_143 -> m4_147  [key=2, style=dotted];
m4_143 -> m4_148  [key=2, style=dotted];
m4_144 -> m4_146  [key=0, style=solid];
m4_144 -> m4_149  [key=2, style=dotted];
m4_145 -> m4_146  [key=0, style=solid];
m4_146 -> m4_142  [key=0, style=bold, color=blue];
m4_165 -> m4_57  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_165 -> m4_80  [key=1, style=dashed, color=red, label=builder];
m4_165 -> m4_84  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_166 -> m4_61  [key=1, style=dashed, color=darkseagreen4, label=T];
m4_167 -> m4_70  [key=1, style=dashed, color=darkseagreen4, label=shortSwitches];
m4_168 -> m4_80  [key=1, style=dashed, color=red, label=settings];
m4_169 -> m4_109  [key=1, style=dashed, color=darkseagreen4, label=sep];
m4_170 -> m4_121  [key=1, style=dashed, color=darkseagreen4, label=doubQt];
}
