digraph  {
n89 [label="CommandLine.Error", span=""];
n90 [label="CommandLine.TokenError", span=""];
n91 [label="CommandLine.NamedError", span=""];
n92 [label="CommandLine.HelpVerbRequestedError", span=""];
n0 [cluster="CommandLine.Error.Error(CommandLine.ErrorType)", label="Entry CommandLine.Error.Error(CommandLine.ErrorType)", span="73-73"];
n1 [cluster="CommandLine.Error.Error(CommandLine.ErrorType)", label="this.tag = tag", span="75-75"];
n2 [cluster="CommandLine.Error.Error(CommandLine.ErrorType)", label="Exit CommandLine.Error.Error(CommandLine.ErrorType)", span="73-73"];
n3 [cluster="CommandLine.Error.Equals(object)", label="Entry CommandLine.Error.Equals(object)", span="91-91"];
n4 [cluster="CommandLine.Error.Equals(object)", label="var other = obj as Error", span="93-93"];
n7 [cluster="CommandLine.Error.Equals(object)", label="return base.Equals(obj);", span="99-99"];
n5 [cluster="CommandLine.Error.Equals(object)", label="other != null", span="94-94"];
n6 [cluster="CommandLine.Error.Equals(object)", label="return Equals(other);", span="96-96"];
n8 [cluster="CommandLine.Error.Equals(object)", label="Exit CommandLine.Error.Equals(object)", span="91-91"];
n10 [cluster="object.Equals(object)", label="Entry object.Equals(object)", span="0-0"];
n9 [cluster="CommandLine.Error.Equals(CommandLine.Error)", label="Entry CommandLine.Error.Equals(CommandLine.Error)", span="116-116"];
n11 [cluster="CommandLine.Error.GetHashCode()", label="Entry CommandLine.Error.GetHashCode()", span="106-106"];
n12 [cluster="CommandLine.Error.GetHashCode()", label="return Tag.GetHashCode();", span="108-108"];
n13 [cluster="CommandLine.Error.GetHashCode()", label="Exit CommandLine.Error.GetHashCode()", span="106-106"];
n14 [cluster="System.Enum.GetHashCode()", label="Entry System.Enum.GetHashCode()", span="0-0"];
n15 [cluster="CommandLine.Error.Equals(CommandLine.Error)", label="other == null", span="118-118"];
n17 [cluster="CommandLine.Error.Equals(CommandLine.Error)", label="return Tag.Equals(other.Tag);", span="123-123"];
n16 [cluster="CommandLine.Error.Equals(CommandLine.Error)", label="return false;", span="120-120"];
n18 [cluster="CommandLine.Error.Equals(CommandLine.Error)", label="Exit CommandLine.Error.Equals(CommandLine.Error)", span="116-116"];
n19 [cluster="System.Enum.Equals(object)", label="Entry System.Enum.Equals(object)", span="0-0"];
n20 [cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", label="Entry CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", span="134-134"];
n21 [cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", label="token == null", span="137-137"];
n23 [cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", label="this.token = token", span="139-139"];
n22 [cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", label="throw new ArgumentNullException(''token'');", span="137-137"];
n24 [cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", label="Exit CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", span="134-134"];
n25 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n26 [cluster="CommandLine.TokenError.Equals(object)", label="Entry CommandLine.TokenError.Equals(object)", span="155-155"];
n27 [cluster="CommandLine.TokenError.Equals(object)", label="var other = obj as TokenError", span="157-157"];
n30 [cluster="CommandLine.TokenError.Equals(object)", label="return base.Equals(obj);", span="163-163"];
n28 [cluster="CommandLine.TokenError.Equals(object)", label="other != null", span="158-158"];
n29 [cluster="CommandLine.TokenError.Equals(object)", label="return Equals(other);", span="160-160"];
n31 [cluster="CommandLine.TokenError.Equals(object)", label="Exit CommandLine.TokenError.Equals(object)", span="155-155"];
n32 [cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)", label="Entry CommandLine.TokenError.Equals(CommandLine.TokenError)", span="180-180"];
n33 [cluster="CommandLine.TokenError.GetHashCode()", label="Entry CommandLine.TokenError.GetHashCode()", span="170-170"];
n34 [cluster="CommandLine.TokenError.GetHashCode()", label="return new {Tag, Token}.GetHashCode();", span="172-172"];
n35 [cluster="CommandLine.TokenError.GetHashCode()", label="Exit CommandLine.TokenError.GetHashCode()", span="170-170"];
n36 [cluster="object.GetHashCode()", label="Entry object.GetHashCode()", span="0-0"];
n37 [cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)", label="other == null", span="182-182"];
n39 [cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)", label="return Tag.Equals(other.Tag) && Token.Equals(other.Token);", span="187-187"];
n38 [cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)", label="return false;", span="184-184"];
n40 [cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)", label="Exit CommandLine.TokenError.Equals(CommandLine.TokenError)", span="180-180"];
n41 [cluster="string.Equals(string)", label="Entry string.Equals(string)", span="0-0"];
n42 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
n43 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", label="Exit CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
n44 [cluster="CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)", label="Entry CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)", span="209-209"];
n45 [cluster="CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)", label="this.nameInfo = nameInfo", span="212-212"];
n46 [cluster="CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)", label="Exit CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)", span="209-209"];
n47 [cluster="CommandLine.NamedError.Equals(object)", label="Entry CommandLine.NamedError.Equals(object)", span="228-228"];
n48 [cluster="CommandLine.NamedError.Equals(object)", label="var other = obj as NamedError", span="230-230"];
n51 [cluster="CommandLine.NamedError.Equals(object)", label="return base.Equals(obj);", span="236-236"];
n49 [cluster="CommandLine.NamedError.Equals(object)", label="other != null", span="231-231"];
n50 [cluster="CommandLine.NamedError.Equals(object)", label="return Equals(other);", span="233-233"];
n52 [cluster="CommandLine.NamedError.Equals(object)", label="Exit CommandLine.NamedError.Equals(object)", span="228-228"];
n53 [cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)", label="Entry CommandLine.NamedError.Equals(CommandLine.NamedError)", span="253-253"];
n54 [cluster="CommandLine.NamedError.GetHashCode()", label="Entry CommandLine.NamedError.GetHashCode()", span="243-243"];
n55 [cluster="CommandLine.NamedError.GetHashCode()", label="return new {Tag, NameInfo}.GetHashCode();", span="245-245"];
n56 [cluster="CommandLine.NamedError.GetHashCode()", label="Exit CommandLine.NamedError.GetHashCode()", span="243-243"];
n57 [cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)", label="other == null", span="255-255"];
n59 [cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)", label="return Tag.Equals(other.Tag) && NameInfo.Equals(other.NameInfo);", span="260-260"];
n58 [cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)", label="return false;", span="257-257"];
n60 [cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)", label="Exit CommandLine.NamedError.Equals(CommandLine.NamedError)", span="253-253"];
n61 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", label="Entry CommandLine.NameInfo.Equals(CommandLine.NameInfo)", span="90-90"];
n62 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
n63 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", label="Exit CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
n64 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280"];
n65 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", label="Exit CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280"];
n66 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
n67 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", label="Exit CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
n68 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="302-302"];
n69 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", label="Exit CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="302-302"];
n70 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="313-313"];
n71 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", label="Exit CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="313-313"];
n72 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="324-324"];
n73 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", label="Exit CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="324-324"];
n74 [cluster="CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", label="Entry CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", span="335-335"];
n75 [cluster="CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", label="Exit CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", span="335-335"];
n76 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="346-346"];
n77 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", label="Exit CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="346-346"];
n78 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="357-357"];
n79 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", label="Exit CommandLine.HelpRequestedError.HelpRequestedError()", span="357-357"];
n80 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="372-372"];
n81 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", label="this.verb = verb", span="375-375"];
n82 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", label="this.type = type", span="376-376"];
n83 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", label="this.matched = matched", span="377-377"];
n84 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", label="Exit CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="372-372"];
n85 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="410-410"];
n86 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", label="Exit CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="410-410"];
n87 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="421-421"];
n88 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", label="Exit CommandLine.VersionRequestedError.VersionRequestedError()", span="421-421"];
m1_49 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="93-93"];
m1_51 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="104-104"];
m1_52 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="Assert.Equal(''pre-options'', lines[0])", span="105-105"];
m1_53 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="106-106"];
m1_54 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="Assert.Equal(''--shape          Define a enum value here.'', lines[2])", span="107-107"];
m1_55 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[3])", span="108-108"];
m1_56 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="Assert.Equal(''--version        Display version information.'', lines[4])", span="109-109"];
m1_57 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="Assert.Equal(''post-options'', lines[5])", span="110-110"];
m1_50 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptionsWithHelpTextEnum())\r\n                .AddPostOptionsLine(''post-options'')", span="97-100"];
m1_58 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="93-93"];
m1_135 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="449-449"];
m1_16 [cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char?, string)", file="HelpTextTests.cs", label="UniqueName = new string(_shortName.Value, 1)", span="75-75"];
m1_22 [cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char?, string)", file="HelpTextTests.cs", label="UniqueName = LongName", span="86-86"];
m1_24 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="HelpTextTests.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m1_23 [cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char?, string)", file="HelpTextTests.cs", label="Exit CommandLine.BaseOptionAttribute.BaseOptionAttribute(char?, string)", span="66-66"];
m1_25 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="CommandLine.BaseOptionAttribute", span=""];
m1_26 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="59-59"];
m1_27 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Assert.Equal(''-i               Define a int sequence here.'', lines[2])", span="60-60"];
m1_28 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[3])", span="61-61"];
m1_29 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="62-62"];
m1_30 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Assert.Equal(''--version        Display version information.'', lines[5])", span="63-63"];
m1_31 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Assert.Equal(''value pos. 0     Define a long value here.'', lines[6])", span="64-64"];
m1_32 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Assert.Equal(''post-options'', lines[7])", span="65-65"];
m1_33 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46"];
m1_66 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="130-130"];
m1_70 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="139-139"];
m1_69 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="sut.AddOptions(new FakeOptionsWithLongDescription())", span="136-136"];
m1_67 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="134-134"];
m1_71 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[2].Should().Be(''  v, verbose    This is the description'')", span="140-140"];
m1_72 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[3].Should().Be(''                of the verbosity to '')", span="142-142"];
m1_73 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[4].Should().Be(''                test out the wrapping '')", span="143-143"];
m1_74 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[5].Should().Be(''                capabilities of the '')", span="144-144"];
m1_75 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[6].Should().Be(''                Help Text.'')", span="145-145"];
m1_68 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="135-135"];
m1_76 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="130-130"];
m1_81 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="150-150"];
m1_85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="159-159"];
m1_84 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="sut.AddOptions(new FakeOptionsWithLongDescriptionAndNoSpaces())", span="156-156"];
m1_82 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="154-154"];
m1_86 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[2].Should().Be(''  v, verbose    Before '')", span="160-160"];
m1_87 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[3].Should().Be(''                012345678901234567890123'')", span="161-161"];
m1_88 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[4].Should().Be(''                After'')", span="162-162"];
m1_89 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[5].Should().Be(''  input-file    Before '')", span="163-163"];
m1_90 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[6].Should().Be(''                012345678901234567890123'')", span="164-164"];
m1_91 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[7].Should().Be(''                456789 After'')", span="165-165"];
m1_83 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="155-155"];
m1_92 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="150-150"];
m1_122 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpTextTests.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="142-142"];
m1_176 [cluster="Unk.True", file="HelpTextTests.cs", label="Entry Unk.True", span=""];
m1_160 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="256-256"];
m1_161 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<FakeOptions>(\r\n                new FakeOptions(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="259-265"];
m1_162 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="268-268"];
m1_163 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="271-271"];
m1_166 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''ERROR(S):'', lines[2])", span="275-275"];
m1_167 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''Token 'badtoken' is not recognized.'', lines[3])", span="276-276"];
m1_168 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''A sequence option 'i' is defined with few items than required.'', lines[4])", span="277-277"];
m1_169 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[5])", span="278-278"];
m1_170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''-i               Define a int sequence here.'', lines[6])", span="279-279"];
m1_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[7])", span="280-280"];
m1_172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[8])", span="281-281"];
m1_164 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="273-273"];
m1_165 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="274-274"];
m1_173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="256-256"];
m1_204 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="339-339"];
m1_206 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="350-350"];
m1_207 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Assert.Equal(''pre-options'', lines[0])", span="351-351"];
m1_208 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Assert.Equal(''--stringvalue=STR            Define a string value here.'', lines[1])", span="352-352"];
m1_209 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Assert.Equal(''-i INTSEQ                    Define a int sequence here.'', lines[2])", span="353-353"];
m1_210 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Assert.Equal(''-x                           Define a boolean or switch value here.'', lines[3])", span="354-354"];
m1_211 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Assert.Equal(''--help                       Display this help screen.'', lines[4])", span="355-355"];
m1_212 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Assert.Equal(''--version                    Display version information.'', lines[5])", span="356-356"];
m1_213 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Assert.Equal(''number (pos. 0) NUM          Define a long value here.'', lines[6])", span="357-357"];
m1_214 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Assert.Equal(''paintcolor (pos. 1) COLOR    Define a color value here.'', lines[7])", span="358-358"];
m1_215 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Assert.Equal(''post-options'', lines[8])", span="359-359"];
m1_205 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptionsWithHelpTextValue())\r\n                .AddPostOptionsLine(''post-options'')", span="343-346"];
m1_216 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="339-339"];
m1_175 [cluster="string.StartsWith(string, System.StringComparison)", file="HelpTextTests.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m1_128 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m1_188 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="312-312"];
m1_190 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                new NullInstance(),\r\n                verbTypes,\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="317-320"];
m1_189 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="315-316"];
m1_191 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="323-323"];
m1_192 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="326-326"];
m1_195 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''add        Add file contents to the index.'', lines[2])", span="330-330"];
m1_196 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''commit     Record changes to the repository.'', lines[3])", span="331-331"];
m1_197 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''clone      Clone a repository into a new directory.'', lines[4])", span="332-332"];
m1_198 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''help       Display more information on a specific command.'', lines[5])", span="333-333"];
m1_199 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''version    Display version information.'', lines[6])", span="334-334"];
m1_193 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="328-328"];
m1_194 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="329-329"];
m1_200 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="312-312"];
m1_37 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="70-70"];
m1_39 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="81-81"];
m1_40 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="Assert.Equal(''pre-options'', lines[0])", span="82-82"];
m1_41 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="83-83"];
m1_42 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="Assert.Equal(''--shape          Define a enum value here. Valid values: Circle, Square,'', lines[2])", span="84-84"];
m1_43 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="Assert.Equal(''Triangle'', lines[3])", span="85-85"];
m1_44 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="86-86"];
m1_45 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="Assert.Equal(''--version        Display version information.'', lines[5])", span="87-87"];
m1_46 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="Assert.Equal(''post-options'', lines[6])", span="88-88"];
m1_38 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptionsWithHelpTextEnum())\r\n                .AddPostOptionsLine(''post-options'')", span="74-77"];
m1_47 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="70-70"];
m1_94 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="170-170"];
m1_98 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="181-181"];
m1_97 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new FakeOptionsForHelp())\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="176-178"];
m1_95 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="var sut = new HelpText(''Heading Info.'')", span="174-174"];
m1_99 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[1].Should().Be(''Before '')", span="182-182"];
m1_100 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[2].Should().Be(''0123456789012345678901234567890123456789'')", span="183-183"];
m1_101 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[3].Should().Be(''012 After'')", span="184-184"];
m1_102 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 3].Should().Be(''Before '')", span="185-185"];
m1_103 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 2].Should().Be(''0123456789012345678901234567890123456789'')", span="186-186"];
m1_104 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 1].Should().Be('' After'')", span="187-187"];
m1_96 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="175-175"];
m1_105 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="170-170"];
m1_0 [cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char, string)", file="HelpTextTests.cs", label="Entry CommandLine.BaseOptionAttribute.BaseOptionAttribute(char, string)", span="49-49"];
m1_1 [cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char, string)", file="HelpTextTests.cs", label="_shortName = shortName", span="51-51"];
m1_2 [cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char, string)", file="HelpTextTests.cs", label="_shortName.Value.IsWhiteSpace() || _shortName.Value.IsLineTerminator()", span="52-52"];
m1_48 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithHelpTextEnum.FakeOptionsWithHelpTextEnum()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithHelpTextEnum.FakeOptionsWithHelpTextEnum()", span="11-11"];
m1_78 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextTests.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m1_203 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpTextTests.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="136-136"];
m1_156 [cluster="System.InvalidOperationException.InvalidOperationException()", file="HelpTextTests.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m1_201 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpTextTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m1_36 [cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="HelpTextTests.cs", label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15"];
m1_217 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithHelpTextValue.FakeOptionsWithHelpTextValue()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithHelpTextValue.FakeOptionsWithHelpTextValue()", span="6-6"];
m1_132 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="HelpTextTests.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="346-346"];
m1_10 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''Copyright (C) 2005 - 2013 Author'', lines[1])", span="37-37"];
m1_59 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115"];
m1_61 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="123-123"];
m1_62 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Assert.Equal(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'', lines[2])", span="125-125"];
m1_60 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="var sut = new HelpText(''Meta Value.'')\r\n                .AddOptions(new FakeOptionsWithMetaValue())", span="119-120"];
m1_63 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115"];
m1_134 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="HelpTextTests.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="372-372"];
m1_3 [cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char, string)", file="HelpTextTests.cs", label="throw new ArgumentException(SR.ArgumentException_NoWhiteSpaceOrLineTerminatorInShortName, ''shortName'');", span="54-54"];
m1_19 [cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char?, string)", file="HelpTextTests.cs", label="return;", span="80-80"];
m1_130 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="324-324"];
m1_65 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", span="4-4"];
m1_136 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="211-234"];
m1_158 [cluster="lambda expression", color=green, community=0, file="HelpTextTests.cs", label="0: string.Empty", span="236-236"];
m1_157 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="236-236"];
m1_159 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="236-236"];
m1_137 [cluster="lambda expression", file="HelpTextTests.cs", label="err.Tag", span="213-213"];
m1_139 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="216-216"];
m1_141 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="218-218"];
m1_143 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="220-220"];
m1_145 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="222-222"];
m1_147 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;", span="224-224"];
m1_149 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="226-226"];
m1_153 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="230-230"];
m1_138 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.BadFormatTokenError", span="215-215"];
m1_140 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MissingValueOptionError", span="217-217"];
m1_142 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.UnknownOptionError", span="219-219"];
m1_144 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MissingRequiredOptionError", span="221-221"];
m1_146 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MutuallyExclusiveSetError", span="223-223"];
m1_148 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.SequenceOutOfRangeError", span="225-225"];
m1_150 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.NoVerbSelectedError", span="227-227"];
m1_152 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.BadVerbSelectedError", span="229-229"];
m1_154 [cluster="lambda expression", file="HelpTextTests.cs", label="throw new InvalidOperationException();", span="232-232"];
m1_151 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR no-verb-selected'';", span="228-228"];
m1_155 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="211-234"];
m1_9 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''Unit-tests 2.0'', lines[0])", span="36-36"];
m1_11 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''pre-options line 1'', lines[2])", span="38-38"];
m1_12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''pre-options line 2'', lines[3])", span="39-39"];
m1_17 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27"];
m1_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''post-options line 1'', lines[4])", span="40-40"];
m1_14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''post-options line 2'', lines[5])", span="41-41"];
m1_15 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m1_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="HelpTextTests.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60"];
m1_20 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="374-374"];
m1_21 [cluster="string.ToNotEmptyLines()", file="HelpTextTests.cs", label="Entry string.ToNotEmptyLines()", span="10-10"];
m1_125 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m1_64 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="57-57"];
m1_79 [cluster="Unk.Should", file="HelpTextTests.cs", label="Entry Unk.Should", span=""];
m1_80 [cluster="Unk.Be", file="HelpTextTests.cs", label="Entry Unk.Be", span=""];
m1_4 [cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char, string)", file="HelpTextTests.cs", label="UniqueName = new string(shortName, 1)", span="56-56"];
m1_35 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(T)", span="384-384"];
m1_7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31"];
m1_174 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="288-288"];
m1_131 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="HelpTextTests.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="410-410"];
m1_127 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="HelpTextTests.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280"];
m1_8 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34"];
m1_106 [cluster="CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", span="4-4"];
m1_93 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", span="31-31"];
m1_129 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="302-302"];
m1_123 [cluster="CommandLine.NullInstance.NullInstance()", file="HelpTextTests.cs", label="Entry CommandLine.NullInstance.NullInstance()", span="9-9"];
m1_126 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m1_34 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m1_6 [cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char, string)", file="HelpTextTests.cs", label="Exit CommandLine.BaseOptionAttribute.BaseOptionAttribute(char, string)", span="49-49"];
m1_107 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="193-193"];
m1_108 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", color=green, community=0, file="HelpTextTests.cs", label="0: var fakeResult = new NotParsed<object>(\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new MutuallyExclusiveSetError(new NameInfo(''z'', '''')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="196-210"];
m1_109 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.MutuallyExclusiveSetError:\r\n                            return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="211-234"];
m1_111 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", color=green, community=0, file="HelpTextTests.cs", label="0: var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, fakeMutExclRenderer, 2)", span="239-239"];
m1_110 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", color=green, community=1, file="HelpTextTests.cs", label="1: Func<IEnumerable<MutuallyExclusiveSetError>, string> fakeMutExclRenderer =\r\n                _ => string.Empty", span="235-236"];
m1_112 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = errorsText.ToNotEmptyLines()", span="242-242"];
m1_113 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR badtoken'', lines[0])", span="244-244"];
m1_114 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR x, switch'', lines[1])", span="245-245"];
m1_115 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR unknown'', lines[2])", span="246-246"];
m1_116 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR missing'', lines[3])", span="247-247"];
m1_117 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR z'', lines[4])", span="248-248"];
m1_118 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR s, sequence'', lines[5])", span="249-249"];
m1_119 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR no-verb-selected'', lines[6])", span="250-250"];
m1_120 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR badverb'', lines[7])", span="251-251"];
m1_121 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="193-193"];
m1_5 [cluster="Unk.Equal", file="HelpTextTests.cs", label="Entry Unk.Equal", span=""];
m1_177 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="286-286"];
m1_178 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    })", span="289-294"];
m1_179 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="297-297"];
m1_180 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="300-300"];
m1_183 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''-p, --patch    Use the interactive patch selection interface to chose which'', lines[2])", span="304-304"];
m1_184 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''changes to commit.'', lines[3])", span="305-305"];
m1_185 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''--amend        Used to amend the tip of the current branch.'', lines[4])", span="306-306"];
m1_186 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''--help         Display this help screen.'', lines[5])", span="307-307"];
m1_181 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="302-302"];
m1_182 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="303-303"];
m1_187 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="286-286"];
m1_133 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="HelpTextTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="357-357"];
m1_202 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpTextTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m1_77 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", span="22-22"];
m3_7 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.RussianFormatter()", file="SentenceBuilder.cs", label="Entry Humanizer.Localisation.Formatters.RussianFormatter.RussianFormatter()", span="2-2"];
m3_11 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.ArabicFormatter()", file="SentenceBuilder.cs", label="Entry Humanizer.Localisation.Formatters.ArabicFormatter.ArabicFormatter()", span="2-2"];
m3_19 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="21-21"];
m3_0 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="16-16"];
m3_1 [cluster="lambda expression", file="SentenceBuilder.cs", label="new RomanianFormatter()", span="16-16"];
m3_2 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="16-16"];
m3_4 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="17-17"];
m3_5 [cluster="lambda expression", file="SentenceBuilder.cs", label="new RussianFormatter()", span="17-17"];
m3_6 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="17-17"];
m3_8 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="18-18"];
m3_9 [cluster="lambda expression", file="SentenceBuilder.cs", label="new ArabicFormatter()", span="18-18"];
m3_10 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="18-18"];
m3_12 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="19-19"];
m3_13 [cluster="lambda expression", file="SentenceBuilder.cs", label="new CzechSlovakPolishFormatter()", span="19-19"];
m3_14 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="19-19"];
m3_16 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="20-20"];
m3_17 [cluster="lambda expression", file="SentenceBuilder.cs", label="new CzechSlovakPolishFormatter()", span="20-20"];
m3_18 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="20-20"];
m3_20 [cluster="lambda expression", file="SentenceBuilder.cs", label="new CzechSlovakPolishFormatter()", span="21-21"];
m3_21 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="21-21"];
m3_15 [cluster="Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", file="SentenceBuilder.cs", label="Entry Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", span="2-2"];
m3_3 [cluster="Humanizer.Localisation.Formatters.RomanianFormatter.RomanianFormatter()", file="SentenceBuilder.cs", label="Entry Humanizer.Localisation.Formatters.RomanianFormatter.RomanianFormatter()", span="2-2"];
m4_81 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="SpecificationPropertyRules.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m4_74 [cluster="NameInfo.cstr", file="SpecificationPropertyRules.cs", label="Entry NameInfo.cstr", span=""];
m4_4 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="24-24"];
m4_8 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", color=red, community=0, file="SpecificationPropertyRules.cs", label="0: return specProps =>\r\n            {\r\n                var options =\r\n                    from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Value.IsJust()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    select o;\r\n                var groups = from o in options\r\n                             group o by o.SetName into g\r\n                             select g;\r\n                if (groups.Count() > 1)\r\n                {\r\n                    return\r\n                        from o in options\r\n                        select new MutuallyExclusiveSetError(o.FromOptionSpecification());\r\n                }\r\n                return Enumerable.Empty<Error>();\r\n            };", span="26-45"];
m4_9 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="24-24"];
m4_6 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="96-96"];
m4_40 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="SpecificationPropertyRules.cs", label="return specProps =>\r\n                {\r\n                    var options = specProps\r\n                        .Where(sp => sp.Specification.TargetType == TargetType.Sequence)\r\n                        .Where(sp => sp.Value.IsJust())\r\n                        .Where(sp =>\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())\r\n                        );\r\n                    if (options.Any())\r\n                    {\r\n                        return\r\n                            from s in options\r\n                            select new SequenceOutOfRangeError(s.Specification.FromSpecification());\r\n                    }\r\n                    return Enumerable.Empty<Error>();\r\n                };", span="98-114"];
m4_41 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="96-96"];
m4_70 [cluster="CommandLine.Core.Token.IsName()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.Token.IsName()", span="68-68"];
m4_49 [cluster="Unk.Any", file="SpecificationPropertyRules.cs", label="Entry Unk.Any", span=""];
m4_37 [cluster="CommandLine.Core.Specification.IsValue()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m4_22 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="SpecificationPropertyRules.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m4_33 [cluster="Unk.IsNothing", file="SpecificationPropertyRules.cs", label="Entry Unk.IsNothing", span=""];
m4_48 [cluster="Unk.Where", file="SpecificationPropertyRules.cs", label="Entry Unk.Where", span=""];
m4_39 [cluster="Unk.FromSpecification", file="SpecificationPropertyRules.cs", label="Entry Unk.FromSpecification", span=""];
m4_7 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="117-117"];
m4_61 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="SpecificationPropertyRules.cs", label="return specProps =>\r\n                {\r\n                    var specs = from sp in specProps\r\n                                where sp.Specification.IsOption()\r\n                                where sp.Value.IsJust()\r\n                                select (OptionSpecification)sp.Specification;\r\n                    var options = from t in tokens\r\n                                  where t.IsName()\r\n                                  join o in specs on t.Text equals o.UniqueName() into to\r\n                                  from o in to.DefaultIfEmpty()\r\n                                  where o != null\r\n                                  select new { o.ShortName, o.LongName };\r\n                    var groups = from x in options\r\n                                 group x by x into g\r\n                                 let count = g.Count()\r\n                                 select new { Value = g.Key, Count = count };\r\n                    var errors = from y in groups\r\n                                 where y.Count > 1\r\n                                 select new RepeatedOptionError(new NameInfo(y.Value.ShortName, y.Value.LongName));\r\n                    return errors;\r\n                };", span="119-139"];
m4_62 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="117-117"];
m4_50 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="324-324"];
m4_80 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="SpecificationPropertyRules.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m4_0 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m4_1 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="SpecificationPropertyRules.cs", label="return new List<Func<IEnumerable<SpecificationProperty>, IEnumerable<Error>>>\r\n                {\r\n                    EnforceMutuallyExclusiveSet(),\r\n                    EnforceRequired(),\r\n                    EnforceRange(),\r\n                    EnforceSingle(tokens)\r\n                };", span="15-21"];
m4_2 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m4_63 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="119-139"];
m4_11 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var options =\r\n                    from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Value.IsJust()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    select o", span="28-34"];
m4_10 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="26-45"];
m4_12 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var groups = from o in options\r\n                             group o by o.SetName into g\r\n                             select g", span="35-37"];
m4_14 [cluster="lambda expression", color=red, community=0, file="SpecificationPropertyRules.cs", label="0: return\r\n                        from o in options\r\n                        select new MutuallyExclusiveSetError(o.FromOptionSpecification());", span="40-42"];
m4_13 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="groups.Count() > 1", span="38-38"];
m4_15 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return Enumerable.Empty<Error>();", span="44-44"];
m4_16 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="26-45"];
m4_26 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var requiredWithValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsJust()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    select sp.Specification", span="52-58"];
m4_28 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var requiredWithoutValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsNothing()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    where setWithRequiredValue.ContainsIfNotEmpty(o.SetName)\r\n                    select sp.Specification", span="65-72"];
m4_29 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var missing =\r\n                    requiredWithoutValue\r\n                        .Except(requiredWithValue)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsOption()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            let o = (OptionSpecification)sp.Specification\r\n                            where o.SetName.Length == 0\r\n                            select sp.Specification)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsValue()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            select sp.Specification)", span="73-89"];
m4_25 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="50-93"];
m4_27 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var setWithRequiredValue = (\r\n                    from s in requiredWithValue\r\n                    let o = (OptionSpecification)s\r\n                    where o.SetName.Length > 0\r\n                    select o.SetName)\r\n                        .Distinct()", span="59-64"];
m4_30 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return\r\n                    from sp in missing\r\n                    select new MissingRequiredOptionError(sp.FromSpecification());", span="90-92"];
m4_31 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="50-93"];
m4_43 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var options = specProps\r\n                        .Where(sp => sp.Specification.TargetType == TargetType.Sequence)\r\n                        .Where(sp => sp.Value.IsJust())\r\n                        .Where(sp =>\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())\r\n                        )", span="100-106"];
m4_42 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="98-114"];
m4_44 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="options.Any()", span="107-107"];
m4_51 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="101-101"];
m4_54 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="102-102"];
m4_57 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="103-105"];
m4_45 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return\r\n                            from s in options\r\n                            select new SequenceOutOfRangeError(s.Specification.FromSpecification());", span="109-111"];
m4_46 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return Enumerable.Empty<Error>();", span="113-113"];
m4_47 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="98-114"];
m4_52 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="sp.Specification.TargetType == TargetType.Sequence", span="101-101"];
m4_53 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="101-101"];
m4_55 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="sp.Value.IsJust()", span="102-102"];
m4_56 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="102-102"];
m4_58 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="(sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())", span="104-105"];
m4_59 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="103-105"];
m4_65 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var options = from t in tokens\r\n                                  where t.IsName()\r\n                                  join o in specs on t.Text equals o.UniqueName() into to\r\n                                  from o in to.DefaultIfEmpty()\r\n                                  where o != null\r\n                                  select new { o.ShortName, o.LongName }", span="125-130"];
m4_64 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var specs = from sp in specProps\r\n                                where sp.Specification.IsOption()\r\n                                where sp.Value.IsJust()\r\n                                select (OptionSpecification)sp.Specification", span="121-124"];
m4_66 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var groups = from x in options\r\n                                 group x by x into g\r\n                                 let count = g.Count()\r\n                                 select new { Value = g.Key, Count = count }", span="131-134"];
m4_67 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var errors = from y in groups\r\n                                 where y.Count > 1\r\n                                 select new RepeatedOptionError(new NameInfo(y.Value.ShortName, y.Value.LongName))", span="135-137"];
m4_68 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return errors;", span="138-138"];
m4_69 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="119-139"];
m4_73 [cluster="CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", span="335-335"];
m4_36 [cluster="Unk.Concat", file="SpecificationPropertyRules.cs", label="Entry Unk.Concat", span=""];
m4_5 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="48-48"];
m4_23 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="SpecificationPropertyRules.cs", label="return specProps =>\r\n            {\r\n                var requiredWithValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsJust()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    select sp.Specification;\r\n                var setWithRequiredValue = (\r\n                    from s in requiredWithValue\r\n                    let o = (OptionSpecification)s\r\n                    where o.SetName.Length > 0\r\n                    select o.SetName)\r\n                        .Distinct();\r\n                var requiredWithoutValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsNothing()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    where setWithRequiredValue.ContainsIfNotEmpty(o.SetName)\r\n                    select sp.Specification;\r\n                var missing =\r\n                    requiredWithoutValue\r\n                        .Except(requiredWithValue)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsOption()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            let o = (OptionSpecification)sp.Specification\r\n                            where o.SetName.Length == 0\r\n                            select sp.Specification)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsValue()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            select sp.Specification);\r\n                return\r\n                    from sp in missing\r\n                    select new MissingRequiredOptionError(sp.FromSpecification());\r\n            };", span="50-93"];
m4_24 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="48-48"];
m4_18 [cluster="Unk.IsJust", file="SpecificationPropertyRules.cs", label="Entry Unk.IsJust", span=""];
m4_34 [cluster="Unk.ContainsIfNotEmpty", file="SpecificationPropertyRules.cs", label="Entry Unk.ContainsIfNotEmpty", span=""];
m4_71 [cluster="Unk.UniqueName", file="SpecificationPropertyRules.cs", label="Entry Unk.UniqueName", span=""];
m4_35 [cluster="Unk.Except", file="SpecificationPropertyRules.cs", label="Entry Unk.Except", span=""];
m4_20 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="302-302"];
m4_72 [cluster="Unk.DefaultIfEmpty", file="SpecificationPropertyRules.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m4_17 [cluster="CommandLine.Core.Specification.IsOption()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m4_60 [cluster="Unk.FromJust", file="SpecificationPropertyRules.cs", label="Entry Unk.FromJust", span=""];
m4_75 [cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", span="142-142"];
m4_76 [cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="SpecificationPropertyRules.cs", label="sequence.Any()", span="144-144"];
m4_77 [cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="SpecificationPropertyRules.cs", label="return sequence.Contains(value);", span="146-146"];
m4_78 [cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="SpecificationPropertyRules.cs", label="return true;", span="148-148"];
m4_79 [cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", span="142-142"];
m4_3 [cluster="System.Collections.Generic.List<T>.List()", file="SpecificationPropertyRules.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_32 [cluster="Unk.Distinct", file="SpecificationPropertyRules.cs", label="Entry Unk.Distinct", span=""];
m4_19 [cluster="Unk.Count", file="SpecificationPropertyRules.cs", label="Entry Unk.Count", span=""];
m4_21 [cluster="Unk.FromOptionSpecification", file="SpecificationPropertyRules.cs", label="Entry Unk.FromOptionSpecification", span=""];
m4_82 [file="SpecificationPropertyRules.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m5_6 [cluster="System.ArgumentException.ArgumentException(string)", file="StringBuilderExtensions.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m5_5 [cluster="string.IsNullOrWhiteSpace(string)", file="StringBuilderExtensions.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m5_0 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="StringBuilderExtensions.cs", label="Entry CommandLine.VerbAttribute.VerbAttribute(string)", span="20-20"];
m5_1 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="StringBuilderExtensions.cs", label="string.IsNullOrWhiteSpace(name)", span="22-22"];
m5_3 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="StringBuilderExtensions.cs", label="this.name = name", span="24-24"];
m5_2 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="StringBuilderExtensions.cs", label="throw new ArgumentException(''name'');", span="22-22"];
m5_4 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="StringBuilderExtensions.cs", label="Exit CommandLine.VerbAttribute.VerbAttribute(string)", span="20-20"];
m5_7 [file="StringBuilderExtensions.cs", label="CommandLine.VerbAttribute", span=""];
n89 -> n1  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
n89 -> n6  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
n89 -> n7  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
n89 -> n12  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
n89 -> n17  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
n90 -> n23  [color=darkseagreen4, key=1, label="CommandLine.TokenError", style=dashed];
n90 -> n29  [color=darkseagreen4, key=1, label="CommandLine.TokenError", style=dashed];
n90 -> n30  [color=darkseagreen4, key=1, label="CommandLine.TokenError", style=dashed];
n90 -> n34  [color=darkseagreen4, key=1, label="CommandLine.TokenError", style=dashed];
n90 -> n39  [color=darkseagreen4, key=1, label="CommandLine.TokenError", style=dashed];
n91 -> n45  [color=darkseagreen4, key=1, label="CommandLine.NamedError", style=dashed];
n91 -> n50  [color=darkseagreen4, key=1, label="CommandLine.NamedError", style=dashed];
n91 -> n51  [color=darkseagreen4, key=1, label="CommandLine.NamedError", style=dashed];
n91 -> n55  [color=darkseagreen4, key=1, label="CommandLine.NamedError", style=dashed];
n91 -> n59  [color=darkseagreen4, key=1, label="CommandLine.NamedError", style=dashed];
n92 -> n81  [color=darkseagreen4, key=1, label="CommandLine.HelpVerbRequestedError", style=dashed];
n92 -> n82  [color=darkseagreen4, key=1, label="CommandLine.HelpVerbRequestedError", style=dashed];
n92 -> n83  [color=darkseagreen4, key=1, label="CommandLine.HelpVerbRequestedError", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n0  [color=blue, key=0, style=bold];
n3 -> n4  [key=0, style=solid];
n3 -> n7  [color=darkseagreen4, key=1, label=object, style=dashed];
n3 -> n9  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
n3 -> n26  [color=darkorchid, key=3, label="Parameter variable object obj", style=bold];
n3 -> n47  [color=darkorchid, key=3, label="Parameter variable object obj", style=bold];
n4 -> n5  [key=0, style=solid];
n4 -> n6  [color=darkseagreen4, key=1, label=other, style=dashed];
n7 -> n8  [key=0, style=solid];
n7 -> n10  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=0, style=solid];
n6 -> n8  [key=0, style=solid];
n6 -> n9  [key=2, style=dotted];
n8 -> n3  [color=blue, key=0, style=bold];
n9 -> n15  [key=0, style=solid];
n9 -> n17  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
n9 -> n4  [color=darkorchid, key=3, label="Parameter variable CommandLine.Error other", style=bold];
n9 -> n16  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
n11 -> n12  [key=0, style=solid];
n11 -> n33  [color=darkorchid, key=3, label="method methodReturn int GetHashCode", style=bold];
n11 -> n54  [color=darkorchid, key=3, label="method methodReturn int GetHashCode", style=bold];
n12 -> n13  [key=0, style=solid];
n12 -> n14  [key=2, style=dotted];
n13 -> n11  [color=blue, key=0, style=bold];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [key=0, style=solid];
n17 -> n18  [key=0, style=solid];
n17 -> n19  [key=2, style=dotted];
n16 -> n18  [key=0, style=solid];
n18 -> n9  [color=blue, key=0, style=bold];
n20 -> n21  [key=0, style=solid];
n20 -> n23  [color=darkseagreen4, key=1, label=string, style=dashed];
n21 -> n22  [key=0, style=solid];
n21 -> n23  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n22 -> n24  [key=0, style=solid];
n22 -> n25  [key=2, style=dotted];
n24 -> n20  [color=blue, key=0, style=bold];
n26 -> n27  [key=0, style=solid];
n26 -> n30  [color=darkseagreen4, key=1, label=object, style=dashed];
n26 -> n3  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
n26 -> n32  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
n27 -> n28  [key=0, style=solid];
n27 -> n29  [color=darkseagreen4, key=1, label=other, style=dashed];
n30 -> n31  [key=0, style=solid];
n30 -> n3  [key=2, style=dotted];
n28 -> n29  [key=0, style=solid];
n28 -> n30  [key=0, style=solid];
n29 -> n31  [key=0, style=solid];
n29 -> n32  [key=2, style=dotted];
n31 -> n26  [color=blue, key=0, style=bold];
n32 -> n37  [key=0, style=solid];
n32 -> n39  [color=darkseagreen4, key=1, label="CommandLine.TokenError", style=dashed];
n32 -> n27  [color=darkorchid, key=3, label="Parameter variable CommandLine.TokenError other", style=bold];
n32 -> n16  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
n33 -> n34  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n36  [key=2, style=dotted];
n35 -> n33  [color=blue, key=0, style=bold];
n37 -> n38  [key=0, style=solid];
n37 -> n39  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n39 -> n19  [key=2, style=dotted];
n39 -> n41  [key=2, style=dotted];
n38 -> n40  [key=0, style=solid];
n40 -> n32  [color=blue, key=0, style=bold];
n42 -> n43  [key=0, style=solid];
n43 -> n42  [color=blue, key=0, style=bold];
n44 -> n45  [key=0, style=solid];
n45 -> n46  [key=0, style=solid];
n46 -> n44  [color=blue, key=0, style=bold];
n47 -> n48  [key=0, style=solid];
n47 -> n51  [color=darkseagreen4, key=1, label=object, style=dashed];
n47 -> n3  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
n47 -> n53  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
n48 -> n49  [key=0, style=solid];
n48 -> n50  [color=darkseagreen4, key=1, label=other, style=dashed];
n51 -> n52  [key=0, style=solid];
n51 -> n3  [key=2, style=dotted];
n49 -> n50  [key=0, style=solid];
n49 -> n51  [key=0, style=solid];
n50 -> n52  [key=0, style=solid];
n50 -> n53  [key=2, style=dotted];
n52 -> n47  [color=blue, key=0, style=bold];
n53 -> n57  [key=0, style=solid];
n53 -> n59  [color=darkseagreen4, key=1, label="CommandLine.NamedError", style=dashed];
n53 -> n48  [color=darkorchid, key=3, label="Parameter variable CommandLine.NamedError other", style=bold];
n53 -> n16  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
n54 -> n55  [key=0, style=solid];
n55 -> n56  [key=0, style=solid];
n55 -> n36  [key=2, style=dotted];
n56 -> n54  [color=blue, key=0, style=bold];
n57 -> n58  [key=0, style=solid];
n57 -> n59  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n59 -> n19  [key=2, style=dotted];
n59 -> n61  [key=2, style=dotted];
n58 -> n60  [key=0, style=solid];
n60 -> n53  [color=blue, key=0, style=bold];
n62 -> n63  [key=0, style=solid];
n63 -> n62  [color=blue, key=0, style=bold];
n64 -> n65  [key=0, style=solid];
n65 -> n64  [color=blue, key=0, style=bold];
n66 -> n67  [key=0, style=solid];
n67 -> n66  [color=blue, key=0, style=bold];
n68 -> n69  [key=0, style=solid];
n69 -> n68  [color=blue, key=0, style=bold];
n70 -> n71  [key=0, style=solid];
n71 -> n70  [color=blue, key=0, style=bold];
n72 -> n73  [key=0, style=solid];
n73 -> n72  [color=blue, key=0, style=bold];
n74 -> n75  [key=0, style=solid];
n75 -> n74  [color=blue, key=0, style=bold];
n76 -> n77  [key=0, style=solid];
n77 -> n76  [color=blue, key=0, style=bold];
n78 -> n79  [key=0, style=solid];
n79 -> n78  [color=blue, key=0, style=bold];
n80 -> n81  [key=0, style=solid];
n80 -> n82  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n80 -> n83  [color=darkseagreen4, key=1, label=bool, style=dashed];
n81 -> n82  [key=0, style=solid];
n82 -> n83  [key=0, style=solid];
n83 -> n84  [key=0, style=solid];
n84 -> n80  [color=blue, key=0, style=bold];
n85 -> n86  [key=0, style=solid];
n86 -> n85  [color=blue, key=0, style=bold];
n87 -> n88  [key=0, style=solid];
n88 -> n87  [color=blue, key=0, style=bold];
m1_49 -> m1_50  [key=0, style=solid];
m1_51 -> m1_21  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_4  [key=2, style=dotted];
m1_51 -> m1_36  [key=2, style=dotted];
m1_51 -> m1_53  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_51 -> m1_54  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_51 -> m1_55  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_51 -> m1_56  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_51 -> m1_57  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_52 -> m1_5  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_53 -> m1_5  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_54 -> m1_5  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_55 -> m1_5  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_56 -> m1_5  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_57 -> m1_5  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_3  [key=2, style=dotted];
m1_50 -> m1_19  [key=2, style=dotted];
m1_50 -> m1_48  [key=2, style=dotted];
m1_50 -> m1_35  [key=2, style=dotted];
m1_50 -> m1_20  [key=2, style=dotted];
m1_58 -> m1_49  [color=blue, key=0, style=bold];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_10  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_24 -> m1_21  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_4  [key=2, style=dotted];
m1_24 -> m1_36  [key=2, style=dotted];
m1_24 -> m1_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_29  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_30  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_31  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_32  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_23 -> m1_34  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_3  [key=2, style=dotted];
m1_23 -> m1_19  [key=2, style=dotted];
m1_23 -> m1_35  [key=2, style=dotted];
m1_23 -> m1_20  [key=2, style=dotted];
m1_23 -> m1_11  [color=blue, key=0, style=bold];
m1_25 -> m1_5  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_1  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m1_25 -> m1_2  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m1_25 -> m1_4  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m1_25 -> m1_12  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m1_25 -> m1_13  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m1_25 -> m1_14  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m1_25 -> m1_16  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m1_25 -> m1_17  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m1_25 -> m1_18  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m1_25 -> m1_20  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m1_25 -> m1_22  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m1_26 -> m1_5  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_5  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_28 -> m1_5  [key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_29 -> m1_5  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_30 -> m1_5  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_31 -> m1_5  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_32 -> m1_5  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_33 -> m1_22  [color=blue, key=0, style=bold];
m1_66 -> m1_67  [key=0, style=solid];
m1_70 -> m1_4  [key=2, style=dotted];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_78  [key=2, style=dotted];
m1_70 -> m1_72  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_73  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_74  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_75  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_69 -> m1_35  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_77  [key=2, style=dotted];
m1_67 -> m1_17  [key=2, style=dotted];
m1_67 -> m1_70  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_67 -> m1_64  [key=2, style=dotted];
m1_67 -> m1_69  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_67 -> m1_68  [key=0, style=solid];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_79  [key=2, style=dotted];
m1_71 -> m1_80  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_79  [key=2, style=dotted];
m1_72 -> m1_80  [key=2, style=dotted];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_79  [key=2, style=dotted];
m1_73 -> m1_80  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_79  [key=2, style=dotted];
m1_74 -> m1_80  [key=2, style=dotted];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_79  [key=2, style=dotted];
m1_75 -> m1_80  [key=2, style=dotted];
m1_68 -> m1_69  [key=0, style=solid];
m1_76 -> m1_66  [color=blue, key=0, style=bold];
m1_81 -> m1_82  [key=0, style=solid];
m1_85 -> m1_4  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_78  [key=2, style=dotted];
m1_85 -> m1_87  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_85 -> m1_88  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_85 -> m1_89  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_85 -> m1_90  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_85 -> m1_91  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_84 -> m1_35  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_93  [key=2, style=dotted];
m1_82 -> m1_17  [key=2, style=dotted];
m1_82 -> m1_85  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_82 -> m1_64  [key=2, style=dotted];
m1_82 -> m1_84  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_82 -> m1_83  [key=0, style=solid];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_79  [key=2, style=dotted];
m1_86 -> m1_80  [key=2, style=dotted];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_79  [key=2, style=dotted];
m1_87 -> m1_80  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_79  [key=2, style=dotted];
m1_88 -> m1_80  [key=2, style=dotted];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_79  [key=2, style=dotted];
m1_89 -> m1_80  [key=2, style=dotted];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_79  [key=2, style=dotted];
m1_90 -> m1_80  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_79  [key=2, style=dotted];
m1_91 -> m1_80  [key=2, style=dotted];
m1_83 -> m1_84  [key=0, style=solid];
m1_92 -> m1_81  [color=blue, key=0, style=bold];
m1_160 -> m1_161  [key=0, style=solid];
m1_161 -> m1_122  [key=2, style=dotted];
m1_161 -> n42  [key=2, style=dotted];
m1_161 -> m1_126  [key=2, style=dotted];
m1_161 -> m1_130  [key=2, style=dotted];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_34  [key=2, style=dotted];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_174  [key=2, style=dotted];
m1_163 -> m1_21  [key=2, style=dotted];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_4  [key=2, style=dotted];
m1_163 -> m1_36  [key=2, style=dotted];
m1_163 -> m1_165  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_163 -> m1_166  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_163 -> m1_167  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_163 -> m1_168  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_163 -> m1_169  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_163 -> m1_170  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_163 -> m1_171  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_163 -> m1_172  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_166 -> m1_5  [key=2, style=dotted];
m1_166 -> m1_167  [key=0, style=solid];
m1_167 -> m1_5  [key=2, style=dotted];
m1_167 -> m1_168  [key=0, style=solid];
m1_168 -> m1_5  [key=2, style=dotted];
m1_168 -> m1_169  [key=0, style=solid];
m1_169 -> m1_5  [key=2, style=dotted];
m1_169 -> m1_170  [key=0, style=solid];
m1_170 -> m1_5  [key=2, style=dotted];
m1_170 -> m1_171  [key=0, style=solid];
m1_171 -> m1_5  [key=2, style=dotted];
m1_171 -> m1_172  [key=0, style=solid];
m1_172 -> m1_5  [key=2, style=dotted];
m1_172 -> m1_173  [key=0, style=solid];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_175  [key=2, style=dotted];
m1_164 -> m1_176  [key=2, style=dotted];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_175  [key=2, style=dotted];
m1_165 -> m1_176  [key=2, style=dotted];
m1_173 -> m1_160  [color=blue, key=0, style=bold];
m1_204 -> m1_205  [key=0, style=solid];
m1_206 -> m1_21  [key=2, style=dotted];
m1_206 -> m1_207  [key=0, style=solid];
m1_206 -> m1_4  [key=2, style=dotted];
m1_206 -> m1_36  [key=2, style=dotted];
m1_206 -> m1_208  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_206 -> m1_209  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_206 -> m1_210  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_206 -> m1_211  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_206 -> m1_212  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_206 -> m1_213  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_206 -> m1_214  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_206 -> m1_215  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_207 -> m1_5  [key=2, style=dotted];
m1_207 -> m1_208  [key=0, style=solid];
m1_208 -> m1_5  [key=2, style=dotted];
m1_208 -> m1_209  [key=0, style=solid];
m1_209 -> m1_5  [key=2, style=dotted];
m1_209 -> m1_210  [key=0, style=solid];
m1_210 -> m1_5  [key=2, style=dotted];
m1_210 -> m1_211  [key=0, style=solid];
m1_211 -> m1_5  [key=2, style=dotted];
m1_211 -> m1_212  [key=0, style=solid];
m1_212 -> m1_5  [key=2, style=dotted];
m1_212 -> m1_213  [key=0, style=solid];
m1_213 -> m1_5  [key=2, style=dotted];
m1_213 -> m1_214  [key=0, style=solid];
m1_214 -> m1_5  [key=2, style=dotted];
m1_214 -> m1_215  [key=0, style=solid];
m1_215 -> m1_5  [key=2, style=dotted];
m1_215 -> m1_216  [key=0, style=solid];
m1_205 -> m1_206  [key=0, style=solid];
m1_205 -> m1_3  [key=2, style=dotted];
m1_205 -> m1_19  [key=2, style=dotted];
m1_205 -> m1_217  [key=2, style=dotted];
m1_205 -> m1_35  [key=2, style=dotted];
m1_205 -> m1_20  [key=2, style=dotted];
m1_216 -> m1_204  [color=blue, key=0, style=bold];
m1_188 -> m1_189  [key=0, style=solid];
m1_190 -> m1_123  [key=2, style=dotted];
m1_190 -> m1_134  [key=2, style=dotted];
m1_190 -> m1_191  [key=0, style=solid];
m1_190 -> m1_203  [key=2, style=dotted];
m1_189 -> m1_190  [key=0, style=solid];
m1_189 -> m1_201  [key=2, style=dotted];
m1_189 -> m1_202  [key=2, style=dotted];
m1_191 -> m1_192  [key=0, style=solid];
m1_191 -> m1_174  [key=2, style=dotted];
m1_192 -> m1_21  [key=2, style=dotted];
m1_192 -> m1_193  [key=0, style=solid];
m1_192 -> m1_4  [key=2, style=dotted];
m1_192 -> m1_36  [key=2, style=dotted];
m1_192 -> m1_194  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_192 -> m1_195  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_192 -> m1_196  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_192 -> m1_197  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_192 -> m1_198  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_192 -> m1_199  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_195 -> m1_5  [key=2, style=dotted];
m1_195 -> m1_196  [key=0, style=solid];
m1_196 -> m1_5  [key=2, style=dotted];
m1_196 -> m1_197  [key=0, style=solid];
m1_197 -> m1_5  [key=2, style=dotted];
m1_197 -> m1_198  [key=0, style=solid];
m1_198 -> m1_5  [key=2, style=dotted];
m1_198 -> m1_199  [key=0, style=solid];
m1_199 -> m1_5  [key=2, style=dotted];
m1_199 -> m1_200  [key=0, style=solid];
m1_193 -> m1_194  [key=0, style=solid];
m1_193 -> m1_175  [key=2, style=dotted];
m1_193 -> m1_176  [key=2, style=dotted];
m1_194 -> m1_195  [key=0, style=solid];
m1_194 -> m1_175  [key=2, style=dotted];
m1_194 -> m1_176  [key=2, style=dotted];
m1_200 -> m1_188  [color=blue, key=0, style=bold];
m1_37 -> m1_38  [key=0, style=solid];
m1_39 -> m1_21  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_4  [key=2, style=dotted];
m1_39 -> m1_36  [key=2, style=dotted];
m1_39 -> m1_41  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_39 -> m1_42  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_39 -> m1_43  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_39 -> m1_44  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_39 -> m1_45  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_39 -> m1_46  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_40 -> m1_5  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_41 -> m1_5  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_42 -> m1_5  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_43 -> m1_5  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_44 -> m1_5  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_45 -> m1_5  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid];
m1_46 -> m1_5  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_3  [key=2, style=dotted];
m1_38 -> m1_19  [key=2, style=dotted];
m1_38 -> m1_48  [key=2, style=dotted];
m1_38 -> m1_35  [key=2, style=dotted];
m1_38 -> m1_20  [key=2, style=dotted];
m1_47 -> m1_37  [color=blue, key=0, style=bold];
m1_94 -> m1_95  [key=0, style=solid];
m1_98 -> m1_4  [key=2, style=dotted];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_78  [key=2, style=dotted];
m1_98 -> m1_100  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_98 -> m1_101  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_98 -> m1_102  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_98 -> m1_103  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_98 -> m1_104  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_97 -> m1_19  [key=2, style=dotted];
m1_97 -> m1_35  [key=2, style=dotted];
m1_97 -> m1_20  [key=2, style=dotted];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_106  [key=2, style=dotted];
m1_95 -> m1_98  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_95 -> m1_64  [key=2, style=dotted];
m1_95 -> m1_97  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_95 -> m1_96  [key=0, style=solid];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_79  [key=2, style=dotted];
m1_99 -> m1_80  [key=2, style=dotted];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_79  [key=2, style=dotted];
m1_100 -> m1_80  [key=2, style=dotted];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_79  [key=2, style=dotted];
m1_101 -> m1_80  [key=2, style=dotted];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_79  [key=2, style=dotted];
m1_102 -> m1_80  [key=2, style=dotted];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_79  [key=2, style=dotted];
m1_103 -> m1_80  [key=2, style=dotted];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_79  [key=2, style=dotted];
m1_104 -> m1_80  [key=2, style=dotted];
m1_96 -> m1_97  [key=0, style=solid];
m1_105 -> m1_94  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_4  [color=darkseagreen4, key=1, label=char, style=dashed];
m1_0 -> m1_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_1 -> m1_5  [key=2, style=dotted];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [key=2, style=dotted];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_4  [key=0, style=solid];
m1_2 -> m1_7  [key=2, style=dotted];
m1_2 -> m1_8  [key=2, style=dotted];
m1_10 -> m1_5  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_59 -> m1_60  [key=0, style=solid];
m1_61 -> m1_21  [key=2, style=dotted];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_4  [key=2, style=dotted];
m1_61 -> m1_36  [key=2, style=dotted];
m1_62 -> m1_5  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_64  [key=2, style=dotted];
m1_60 -> m1_65  [key=2, style=dotted];
m1_60 -> m1_35  [key=2, style=dotted];
m1_63 -> m1_59  [color=blue, key=0, style=bold];
m1_3 -> m1_6  [key=0, style=solid];
m1_3 -> m1_9  [key=2, style=dotted];
m1_19 -> m1_23  [key=0, style=solid];
m1_136 -> m1_137  [key=0, style=solid];
m1_136 -> m1_139  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_136 -> m1_141  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_136 -> m1_143  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_136 -> m1_145  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_136 -> m1_147  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_136 -> m1_149  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_136 -> m1_153  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_158 -> m1_159  [color=green, key=0, style=solid];
m1_157 -> m1_158  [color=green, key=0, style=solid];
m1_159 -> m1_157  [color=blue, key=0, style=bold];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_140  [key=0, style=solid];
m1_137 -> m1_142  [key=0, style=solid];
m1_137 -> m1_144  [key=0, style=solid];
m1_137 -> m1_146  [key=0, style=solid];
m1_137 -> m1_148  [key=0, style=solid];
m1_137 -> m1_150  [key=0, style=solid];
m1_137 -> m1_152  [key=0, style=solid];
m1_137 -> m1_154  [key=0, style=solid];
m1_139 -> m1_155  [key=0, style=solid];
m1_141 -> m1_155  [key=0, style=solid];
m1_143 -> m1_155  [key=0, style=solid];
m1_145 -> m1_155  [key=0, style=solid];
m1_147 -> m1_155  [key=0, style=solid];
m1_149 -> m1_155  [key=0, style=solid];
m1_153 -> m1_155  [key=0, style=solid];
m1_138 -> m1_139  [key=0, style=solid];
m1_140 -> m1_141  [key=0, style=solid];
m1_142 -> m1_143  [key=0, style=solid];
m1_144 -> m1_145  [key=0, style=solid];
m1_146 -> m1_147  [key=0, style=solid];
m1_148 -> m1_149  [key=0, style=solid];
m1_150 -> m1_151  [key=0, style=solid];
m1_152 -> m1_153  [key=0, style=solid];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_156  [key=2, style=dotted];
m1_151 -> m1_155  [key=0, style=solid];
m1_155 -> m1_136  [color=blue, key=0, style=bold];
m1_9 -> m1_5  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_11 -> m1_5  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_5  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_17  [key=0, style=solid];
m1_13 -> m1_5  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_16  [key=0, style=solid];
m1_14 -> m1_7  [key=2, style=dotted];
m1_14 -> m1_8  [key=2, style=dotted];
m1_14 -> m1_5  [key=2, style=dotted];
m1_15 -> m1_23  [key=0, style=solid];
m1_15 -> m1_9  [key=2, style=dotted];
m1_15 -> m1_6  [color=blue, key=0, style=bold];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_20  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=0, style=solid];
m1_21 -> m1_24  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_10  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_16  [key=2, style=dotted];
m1_7 -> m1_17  [key=2, style=dotted];
m1_7 -> m1_18  [key=2, style=dotted];
m1_7 -> m1_19  [key=2, style=dotted];
m1_7 -> m1_20  [key=2, style=dotted];
m1_8 -> m1_21  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_4  [key=2, style=dotted];
m1_8 -> m1_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_11  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_14  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_0  [color=blue, key=0, style=bold];
m1_107 -> m1_108  [color=green, key=0, style=solid];
m1_108 -> m1_109  [color=green, key=0, style=solid];
m1_108 -> m1_122  [color=green, key=2, style=dotted];
m1_108 -> m1_123  [color=green, key=2, style=dotted];
m1_108 -> n42  [color=green, key=2, style=dotted];
m1_108 -> m1_125  [color=green, key=2, style=dotted];
m1_108 -> m1_126  [color=green, key=2, style=dotted];
m1_108 -> m1_127  [color=green, key=2, style=dotted];
m1_108 -> m1_128  [color=green, key=2, style=dotted];
m1_108 -> m1_129  [color=green, key=2, style=dotted];
m1_108 -> m1_130  [color=green, key=2, style=dotted];
m1_108 -> m1_131  [color=green, key=2, style=dotted];
m1_108 -> m1_132  [color=green, key=2, style=dotted];
m1_108 -> m1_133  [color=green, key=2, style=dotted];
m1_108 -> m1_134  [color=green, key=2, style=dotted];
m1_108 -> m1_111  [color=green, key=1, label=fakeResult, style=dashed];
m1_109 -> m1_111  [color=green, key=1, label=fakeRenderer, style=dashed];
m1_109 -> m1_110  [color=green, key=0, style=solid];
m1_109 -> m1_109  [color=darkorchid, key=3, label="Local variable System.Func<CommandLine.Error, string> fakeRenderer", style=bold];
m1_109 -> m1_137  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_109 -> m1_139  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_109 -> m1_141  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_109 -> m1_143  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_109 -> m1_145  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_109 -> m1_147  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_109 -> m1_149  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_109 -> m1_153  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_111 -> m1_112  [color=green, key=0, style=solid];
m1_111 -> m1_135  [color=green, key=2, style=dotted];
m1_110 -> m1_111  [color=green, key=0, style=solid];
m1_110 -> m1_110  [color=green, key=3, label="Local variable System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string> fakeMutExclRenderer", style=bold];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_21  [key=2, style=dotted];
m1_112 -> m1_114  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_112 -> m1_115  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_112 -> m1_116  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_112 -> m1_117  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_112 -> m1_118  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_112 -> m1_119  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_112 -> m1_120  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_5  [key=2, style=dotted];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_5  [key=2, style=dotted];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_5  [key=2, style=dotted];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_5  [key=2, style=dotted];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_5  [key=2, style=dotted];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_5  [key=2, style=dotted];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_5  [key=2, style=dotted];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_5  [key=2, style=dotted];
m1_121 -> m1_107  [color=blue, key=0, style=bold];
m1_5 -> m1_6  [key=0, style=solid];
m1_177 -> m1_178  [key=0, style=solid];
m1_178 -> m1_122  [key=2, style=dotted];
m1_178 -> m1_123  [key=2, style=dotted];
m1_178 -> m1_134  [key=2, style=dotted];
m1_178 -> m1_179  [key=0, style=solid];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_174  [key=2, style=dotted];
m1_180 -> m1_21  [key=2, style=dotted];
m1_180 -> m1_181  [key=0, style=solid];
m1_180 -> m1_4  [key=2, style=dotted];
m1_180 -> m1_36  [key=2, style=dotted];
m1_180 -> m1_182  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_180 -> m1_183  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_180 -> m1_184  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_180 -> m1_185  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_180 -> m1_186  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_183 -> m1_5  [key=2, style=dotted];
m1_183 -> m1_184  [key=0, style=solid];
m1_184 -> m1_5  [key=2, style=dotted];
m1_184 -> m1_185  [key=0, style=solid];
m1_185 -> m1_5  [key=2, style=dotted];
m1_185 -> m1_186  [key=0, style=solid];
m1_186 -> m1_5  [key=2, style=dotted];
m1_186 -> m1_187  [key=0, style=solid];
m1_181 -> m1_182  [key=0, style=solid];
m1_181 -> m1_175  [key=2, style=dotted];
m1_181 -> m1_176  [key=2, style=dotted];
m1_182 -> m1_183  [key=0, style=solid];
m1_182 -> m1_175  [key=2, style=dotted];
m1_182 -> m1_176  [key=2, style=dotted];
m1_187 -> m1_177  [color=blue, key=0, style=bold];
m3_19 -> m3_20  [key=0, style=solid];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [key=2, style=dotted];
m3_6 -> m3_4  [color=blue, key=0, style=bold];
m3_8 -> m3_9  [key=0, style=solid];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_11  [key=2, style=dotted];
m3_10 -> m3_8  [color=blue, key=0, style=bold];
m3_12 -> m3_13  [key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_15  [key=2, style=dotted];
m3_14 -> m3_12  [color=blue, key=0, style=bold];
m3_16 -> m3_17  [key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_15  [key=2, style=dotted];
m3_18 -> m3_16  [color=blue, key=0, style=bold];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_15  [key=2, style=dotted];
m3_21 -> m3_19  [color=blue, key=0, style=bold];
m4_4 -> m4_8  [color=red, key=0, style=solid];
m4_8 -> m4_9  [color=red, key=0, style=solid];
m4_8 -> m4_11  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m4_9 -> m4_4  [color=blue, key=0, style=bold];
m4_6 -> m4_40  [key=0, style=solid];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_43  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m4_41 -> m4_6  [color=blue, key=0, style=bold];
m4_7 -> m4_61  [key=0, style=solid];
m4_7 -> m4_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> m4_64  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m4_61 -> m4_61  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<CommandLine.Error> ", style=bold];
m4_62 -> m4_7  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=2, style=dotted];
m4_1 -> m4_4  [key=2, style=dotted];
m4_1 -> m4_5  [key=2, style=dotted];
m4_1 -> m4_6  [key=2, style=dotted];
m4_1 -> m4_7  [key=2, style=dotted];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_63 -> m4_64  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_17  [key=2, style=dotted];
m4_11 -> m4_18  [key=2, style=dotted];
m4_11 -> m4_11  [color=darkseagreen4, key=1, label=sp, style=dashed];
m4_11 -> m4_14  [color=red, key=1, label=options, style=dashed];
m4_10 -> m4_11  [key=0, style=solid];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_12  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_14 -> m4_16  [color=red, key=0, style=solid];
m4_14 -> m4_20  [color=red, key=2, style=dotted];
m4_14 -> m4_21  [color=red, key=2, style=dotted];
m4_14 -> m4_14  [color=red, key=1, label=o, style=dashed];
m4_13 -> m4_14  [color=red, key=0, style=solid];
m4_13 -> m4_15  [key=0, style=solid];
m4_13 -> m4_19  [key=2, style=dotted];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_22  [key=2, style=dotted];
m4_16 -> m4_10  [color=blue, key=0, style=bold];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_17  [key=2, style=dotted];
m4_26 -> m4_18  [key=2, style=dotted];
m4_26 -> m4_26  [color=darkseagreen4, key=1, label=sp, style=dashed];
m4_26 -> m4_29  [color=darkseagreen4, key=1, label=requiredWithValue, style=dashed];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_17  [key=2, style=dotted];
m4_28 -> m4_33  [key=2, style=dotted];
m4_28 -> m4_34  [key=2, style=dotted];
m4_28 -> m4_28  [color=darkseagreen4, key=1, label=sp, style=dashed];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_35  [key=2, style=dotted];
m4_29 -> m4_17  [key=2, style=dotted];
m4_29 -> m4_33  [key=2, style=dotted];
m4_29 -> m4_36  [key=2, style=dotted];
m4_29 -> m4_37  [key=2, style=dotted];
m4_29 -> m4_29  [color=darkseagreen4, key=1, label=sp, style=dashed];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m4_25 -> m4_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_32  [key=2, style=dotted];
m4_27 -> m4_27  [color=darkseagreen4, key=1, label=s, style=dashed];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> n66  [key=2, style=dotted];
m4_30 -> m4_39  [key=2, style=dotted];
m4_30 -> m4_30  [color=darkseagreen4, key=1, label=sp, style=dashed];
m4_31 -> m4_25  [color=blue, key=0, style=bold];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_48  [key=2, style=dotted];
m4_43 -> m4_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_43 -> m4_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_43 -> m4_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_43 -> m4_45  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_42 -> m4_43  [key=0, style=solid];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_46  [key=0, style=solid];
m4_44 -> m4_49  [key=2, style=dotted];
m4_51 -> m4_52  [key=0, style=solid];
m4_54 -> m4_55  [key=0, style=solid];
m4_57 -> m4_58  [key=0, style=solid];
m4_45 -> m4_47  [key=0, style=solid];
m4_45 -> m4_50  [key=2, style=dotted];
m4_45 -> m4_39  [key=2, style=dotted];
m4_45 -> m4_45  [color=darkseagreen4, key=1, label=s, style=dashed];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_22  [key=2, style=dotted];
m4_47 -> m4_42  [color=blue, key=0, style=bold];
m4_52 -> m4_53  [key=0, style=solid];
m4_53 -> m4_51  [color=blue, key=0, style=bold];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_18  [key=2, style=dotted];
m4_56 -> m4_54  [color=blue, key=0, style=bold];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_18  [key=2, style=dotted];
m4_58 -> m4_60  [key=2, style=dotted];
m4_59 -> m4_57  [color=blue, key=0, style=bold];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_70  [key=2, style=dotted];
m4_65 -> m4_71  [key=2, style=dotted];
m4_65 -> m4_72  [key=2, style=dotted];
m4_65 -> m4_65  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_17  [key=2, style=dotted];
m4_64 -> m4_18  [key=2, style=dotted];
m4_64 -> m4_64  [color=darkseagreen4, key=1, label=sp, style=dashed];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_19  [key=2, style=dotted];
m4_66 -> m4_66  [color=darkseagreen4, key=1, label=x, style=dashed];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_73  [key=2, style=dotted];
m4_67 -> m4_74  [key=2, style=dotted];
m4_67 -> m4_67  [color=darkseagreen4, key=1, label=y, style=dashed];
m4_68 -> m4_69  [key=0, style=solid];
m4_69 -> m4_63  [color=blue, key=0, style=bold];
m4_5 -> m4_23  [key=0, style=solid];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m4_23 -> m4_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m4_23 -> m4_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m4_24 -> m4_5  [color=blue, key=0, style=bold];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_77  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m4_75 -> m4_78  [color=darkorchid, key=3, label="method methodReturn bool ContainsIfNotEmpty", style=bold];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_78  [key=0, style=solid];
m4_76 -> m4_80  [key=2, style=dotted];
m4_77 -> m4_79  [key=0, style=solid];
m4_77 -> m4_81  [key=2, style=dotted];
m4_78 -> m4_79  [key=0, style=solid];
m4_79 -> m4_75  [color=blue, key=0, style=bold];
m4_82 -> m4_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=0, style=solid];
m5_1 -> m5_5  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_2 -> m5_4  [key=0, style=solid];
m5_2 -> m5_6  [key=2, style=dotted];
m5_4 -> m5_0  [color=blue, key=0, style=bold];
m5_7 -> m5_3  [color=darkseagreen4, key=1, label="CommandLine.VerbAttribute", style=dashed];
}
