digraph  {
d7 [label="return typedType.InvokeMember(\r\n                ''Some'',\r\n                BindingFlags.InvokeMethod | BindingFlags.Public | BindingFlags.Static,\r\n                null,\r\n                null,\r\n                new object[] { value });", span="18-23", cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", color=green, community=0];
d4 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="13-13", cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)"];
d6 [label="var typedType = optionType.MakeGenericType(type)", span="16-16", cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)"];
d8 [label="Exit CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="13-13", cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)"];
d10 [label="Entry System.Type.InvokeMember(string, System.Reflection.BindingFlags, System.Reflection.Binder, object, object[])", span="0-0", cluster="System.Type.InvokeMember(string, System.Reflection.BindingFlags, System.Reflection.Binder, object, object[])"];
d14 [label="return typedType.InvokeMember(\r\n                ''None'',\r\n                BindingFlags.InvokeMethod | BindingFlags.Public | BindingFlags.Static,\r\n                null,\r\n                null,\r\n                new object[] { });", span="31-36", cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", color=green, community=0];
d13 [label="var typedType = optionType.MakeGenericType(type)", span="29-29", cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)"];
d15 [label="Exit CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="26-26", cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)"];
d5 [label="var optionType = typeof(FSharpOption<>)", span="15-15", cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)"];
d9 [label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])"];
d11 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="26-26", cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)"];
d12 [label="var optionType = typeof(FSharpOption<>)", span="28-28", cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)"];
m0_11 [label="int i = 0", span="51-51", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="FSharpOptionHelperTests.cs"];
m0_12 [label="i < expected.Length", span="51-51", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", color=green, community=0, file="FSharpOptionHelperTests.cs"];
m0_13 [label="expected[i].Should().Equal(actual[i])", span="53-53", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="FSharpOptionHelperTests.cs"];
m0_7 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="FSharpOptionHelperTests.cs"];
m0_8 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="FSharpOptionHelperTests.cs"];
m0_9 [label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", color=green, community=0, file="FSharpOptionHelperTests.cs"];
m0_10 [label="expected.Length.Should().Equal(actual.Count)", span="50-50", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="FSharpOptionHelperTests.cs"];
m0_3 [label="i < expected.Length", span="42-42", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="FSharpOptionHelperTests.cs"];
m0_4 [label="expected[i].Should().Equal(actual[i])", span="44-44", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="FSharpOptionHelperTests.cs"];
m0_5 [label="i++", span="42-42", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", color=green, community=0, file="FSharpOptionHelperTests.cs"];
m0_6 [label="Exit CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="39-39", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="FSharpOptionHelperTests.cs"];
m0_0 [label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="39-39", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="FSharpOptionHelperTests.cs"];
m0_1 [label="expected.Length.Should().Equal(actual.Length)", span="41-41", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="FSharpOptionHelperTests.cs"];
m0_2 [label="int i = 0", span="42-42", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="FSharpOptionHelperTests.cs"];
m0_14 [label="i++", span="51-51", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="FSharpOptionHelperTests.cs"];
m0_15 [label="Exit CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48", cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="FSharpOptionHelperTests.cs"];
m1_22 [label="Func<string, bool> preprocCompare = command =>\r\n                    nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="50-52", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="TypeConverter.cs"];
m1_66 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="TypeConverter.cs"];
m1_133 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="TypeConverter.cs"];
m1_28 [label="return tokenizer(arguments);", span="43-43", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="TypeConverter.cs", color=green, community=0];
m1_77 [label="return new NotParsed<object>(TypeInfo.Create(typeof(NullInstance), types), errors);", span="102-102", cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="TypeConverter.cs"];
m1_78 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="TypeConverter.cs"];
m1_23 [label="var verbs = Verb.SelectFromTypes(types)", span="54-54", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="TypeConverter.cs"];
m1_24 [label="return preprocCompare(''help'')\r\n                ? MakeNotParsed(types,\r\n                    MakeHelpVerbRequestedError(verbs,\r\n                        arguments.Skip(1).SingleOrDefault() ?? string.Empty, nameComparer))\r\n                : preprocCompare(''version'')\r\n                    ? MakeNotParsed(types, new VersionRequestedError())\r\n                    : MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture, nonFatalErrors);", span="56-62", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="TypeConverter.cs"];
m1_27 [label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="446-446", cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", color=green, community=0, file="TypeConverter.cs"];
m1_25 [label="Exit CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="35-35", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="TypeConverter.cs"];
m1_26 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31", cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="TypeConverter.cs"];
m1_29 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="TypeConverter.cs"];
m1_14 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="18-18", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeConverter.cs"];
m1_114 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="TypeConverter.cs"];
m1_131 [label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196", cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="TypeConverter.cs"];
m1_50 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="TypeConverter.cs"];
m1_10 [label="Entry CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="112-112", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="TypeConverter.cs"];
m1_51 [label="nameComparer.Equals(a.Item1.Name, arguments.First())", span="73-73", cluster="lambda expression", color=green, community=0, file="TypeConverter.cs"];
m1_52 [label="Exit lambda expression", span="73-73", cluster="lambda expression", color=green, community=0, file="TypeConverter.cs"];
m1_53 [label="Entry lambda expression", span="76-77", cluster="lambda expression", color=green, community=0, file="TypeConverter.cs"];
m1_54 [label="verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2.AutoDefault()", span="77-77", cluster="lambda expression", file="TypeConverter.cs"];
m1_55 [label="Exit lambda expression", span="76-77", cluster="lambda expression", file="TypeConverter.cs"];
m1_56 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="TypeConverter.cs"];
m1_45 [label="!arg.EqualsOrdinal(''--'')", span="40-40", cluster="lambda expression", file="TypeConverter.cs"];
m1_46 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="TypeConverter.cs"];
m1_58 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="TypeConverter.cs"];
m1_8 [label="Exit lambda expression", span="22-27", cluster="lambda expression", file="TypeConverter.cs"];
m1_49 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="TypeConverter.cs"];
m1_30 [label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="TypeConverter.cs"];
m1_44 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="TypeConverter.cs"];
m1_18 [label="Entry Unk.Succeed", span="", cluster="Unk.Succeed", file="TypeConverter.cs"];
m1_9 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", span="13-13", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", file="TypeConverter.cs"];
m1_32 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="TypeConverter.cs"];
m1_31 [label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="TypeConverter.cs"];
m1_13 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="TypeConverter.cs"];
m1_111 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="TypeConverter.cs"];
m1_69 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="TypeConverter.cs"];
m1_79 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="TypeConverter.cs"];
m1_15 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="TypeConverter.cs"];
m1_48 [label="tokens.Concat(values)", span="41-41", cluster="lambda expression", file="TypeConverter.cs", color=green, community=0];
m1_60 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="TypeConverter.cs"];
m1_113 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="TypeConverter.cs"];
m1_68 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="TypeConverter.cs"];
m1_112 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="TypeConverter.cs"];
m1_35 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="TypeConverter.cs"];
m1_40 [label="Entry string.EqualsOrdinal(string)", span="35-35", cluster="string.EqualsOrdinal(string)", file="TypeConverter.cs"];
m1_67 [label="Tuple.Create(i + 1, sep)", span="54-54", cluster="lambda expression", file="TypeConverter.cs", color=green, community=0];
m1_41 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="TypeConverter.cs"];
m1_64 [label="return verb.Length > 0\r\n                ? verbs.SingleOrDefault(v => nameComparer.Equals(v.Item1.Name, verb))\r\n                        .ToMaybe()\r\n                        .Return(\r\n                            v => new HelpVerbRequestedError(v.Item1.Name, v.Item2, true),\r\n                            new HelpVerbRequestedError(null, null, false))\r\n                : new HelpVerbRequestedError(null, null, false);", span="91-97", cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="TypeConverter.cs"];
m1_19 [label="arguments.Empty()", span="43-43", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="TypeConverter.cs", color=red, community=0];
m1_5 [label="return Result.Succeed(tokens.Where(x => !unkTokens.Contains(x)), errors.Concat(from t in unkTokens select new UnknownOptionError(t.Text)));", span="30-30", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_12 [label="Entry Unk.Memorize", span="", cluster="Unk.Memorize", file="TypeConverter.cs"];
m1_6 [label="Exit CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_16 [label="Entry UnknownOptionError.cstr", span="", cluster="UnknownOptionError.cstr", file="TypeConverter.cs"];
m1_4 [label="var unkTokens = (from t in tokens where t.IsName() && !nameLookup(t.Text) select t).Memorize()", span="28-28", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_11 [label="Entry CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="67-67", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_7 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="TypeConverter.cs"];
m1_17 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="TypeConverter.cs"];
m1_38 [label="arg.EqualsOrdinal(''--'')", span="37-37", cluster="lambda expression", file="TypeConverter.cs"];
m1_37 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="TypeConverter.cs"];
m1_39 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="TypeConverter.cs"];
m1_59 [label="Entry Unk.SelectMany", span="", cluster="Unk.SelectMany", file="TypeConverter.cs"];
m1_61 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="TypeConverter.cs"];
m1_62 [label="optionSequenceWithSeparatorLookup(t.Text)\r\n                    .Return(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))", span="53-55", cluster="lambda expression", file="TypeConverter.cs", color=green, community=0];
m1_63 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="TypeConverter.cs"];
m1_71 [label="x.Item1 < 0", span="55-55", cluster="lambda expression", file="TypeConverter.cs", color=green, community=0];
m1_70 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="TypeConverter.cs"];
m1_73 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="TypeConverter.cs"];
m1_72 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="TypeConverter.cs"];
m1_74 [label="replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .Return(r => t.Text.Split(r.Item2).Select(Token.Value),\r\n                                Enumerable.Empty<Token>().Concat(new[]{ t }))", span="58-60", cluster="lambda expression", file="TypeConverter.cs", color=green, community=0];
m1_75 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="TypeConverter.cs"];
m1_47 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="TypeConverter.cs"];
m1_80 [label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34", cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="TypeConverter.cs"];
m1_83 [label="System.StringComparer", span="", cluster="lambda expression", file="TypeConverter.cs"];
m1_81 [label="System.StringComparer", span="", cluster="lambda expression", color=green, community=0, file="TypeConverter.cs"];
m1_82 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", cluster="lambda expression", file="TypeConverter.cs"];
m1_84 [label=firstArg, span="", cluster="lambda expression", color=green, community=0, file="TypeConverter.cs"];
m1_85 [label="System.Collections.Generic.IEnumerable<string>", span="", cluster="lambda expression", file="TypeConverter.cs"];
m1_87 [label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span="", cluster="lambda expression", file="TypeConverter.cs"];
m1_43 [label="Exit CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="65-65", cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="TypeConverter.cs"];
m1_42 [label="return verbs.Any(a => nameComparer.Equals(a.Item1.Name, arguments.First()))\r\n                ? InstanceBuilder.Build(\r\n                    Maybe.Just<Func<object>>(\r\n                        () =>\r\n                            verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2.AutoDefault()),\r\n                    tokenizer,\r\n                    arguments.Skip(1),\r\n                    nameComparer,\r\n                    parsingCulture,\r\n                    nonFatalErrors)\r\n                : MakeNotParsed(verbs.Select(v => v.Item2), new BadVerbSelectedError(arguments.First()));", span="73-83", cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="TypeConverter.cs"];
m1_89 [label="System.StringComparer", span="", cluster="lambda expression", file="TypeConverter.cs"];
m1_88 [label=string, span="", cluster="lambda expression", file="TypeConverter.cs"];
m1_20 [label="return MakeNotParsed(types, new NoVerbSelectedError());", span="45-45", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="TypeConverter.cs", color=red, community=0];
m1_21 [label="var firstArg = arguments.First()", span="48-48", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="TypeConverter.cs", color=red, community=0];
m1_34 [label="Entry CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="86-86", cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="TypeConverter.cs"];
m1_118 [label="var text = value.Substring(2)", span="118-118", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="TypeConverter.cs"];
m1_117 [label="value.Length > 2 && value.StartsWith(''--'', StringComparison.Ordinal)", span="116-116", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="TypeConverter.cs"];
m1_128 [label="yield return Token.Value(parts[1]);", span="132-132", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="TypeConverter.cs"];
m1_121 [label="yield return Token.Name(text);", span="122-122", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="TypeConverter.cs"];
m1_122 [label="yield break;", span="123-123", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="TypeConverter.cs"];
m1_125 [label="yield break;", span="128-128", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="TypeConverter.cs"];
m1_127 [label="yield return Token.Name(parts[0]);", span="131-131", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="TypeConverter.cs"];
m1_124 [label="onError(new BadFormatTokenError(value))", span="127-127", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="TypeConverter.cs"];
m1_119 [label="var equalIndex = text.IndexOf('=')", span="119-119", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="TypeConverter.cs"];
m1_126 [label="var parts = text.Split('=')", span="130-130", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="TypeConverter.cs"];
m1_120 [label="equalIndex <= 0", span="120-120", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="TypeConverter.cs"];
m1_123 [label="equalIndex == 1", span="125-125", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="TypeConverter.cs"];
m1_129 [label="Exit CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="112-112", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="TypeConverter.cs"];
m1_33 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="TypeConverter.cs"];
m1_36 [label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Map<TSuccess, TMessage, TResult>(System.Func<TSuccess, TResult>)", span="534-534", cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Map<TSuccess, TMessage, TResult>(System.Func<TSuccess, TResult>)", file="TypeConverter.cs"];
m1_65 [label="Exit CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="86-86", cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="TypeConverter.cs"];
m1_130 [label="Entry string.IndexOf(char)", span="0-0", cluster="string.IndexOf(char)", file="TypeConverter.cs"];
m1_132 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="TypeConverter.cs"];
m1_0 [label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14", cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="TypeConverter.cs"];
m1_1 [label="return Choose(\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                types,\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture,\r\n                nonFatalErrors);", span="21-32", cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="TypeConverter.cs"];
m1_3 [label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="35-35", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="TypeConverter.cs"];
m1_2 [label="Exit CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14", cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="TypeConverter.cs"];
m1_57 [label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", span="653-653", cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", file="TypeConverter.cs"];
m1_115 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="TypeConverter.cs"];
m1_110 [label="Entry char.IsDigit(char)", span="0-0", cluster="char.IsDigit(char)", file="TypeConverter.cs"];
m1_116 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="TypeConverter.cs"];
m1_76 [label="Entry HelpVerbRequestedError.cstr", span="", cluster="HelpVerbRequestedError.cstr", file="TypeConverter.cs"];
m1_86 [label="System.StringComparer", span="", cluster="Unk.Split", file="TypeConverter.cs"];
m1_103 [label="!seen.Contains(c) && nameLookup(n)", span="95-95", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_101 [label="text.Substring(1)", span="92-92", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_100 [label="var seen = new List<char> { first[0] }", span="90-90", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_102 [label="var n = new string(c, 1)", span="94-94", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_104 [label="seen.Add(c)", span="97-97", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_106 [label="seen.Count() < text.Length", span="105-105", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_90 [label="value.Length > 1 || value[0] == '-' || value[1] != '-'", span="71-71", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_93 [label="yield return Token.Value(value);", span="77-77", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_94 [label="yield break;", span="78-78", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_96 [label="yield return Token.Name(text);", span="83-83", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_97 [label="yield break;", span="84-84", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_99 [label="yield return Token.Name(first);", span="88-88", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_105 [label="yield return Token.Name(n);", span="98-98", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_107 [label="yield return Token.Value(text.Substring(seen.Count()));", span="107-107", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_91 [label="var text = value.Substring(1)", span="73-73", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_95 [label="value.Length == 2", span="81-81", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_98 [label="var first = text.Substring(0, 1)", span="87-87", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_92 [label="char.IsDigit(text[0])", span="75-75", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_108 [label="Exit CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="67-67", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="TypeConverter.cs"];
m1_109 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="TypeConverter.cs"];
m1_135 [label=values, span="", file="TypeConverter.cs"];
m1_136 [label="System.Func<string, CSharpx.Maybe<char>>", span="", file="TypeConverter.cs"];
m1_138 [label=replaces, span="", file="TypeConverter.cs"];
m1_137 [label=int, span="", file="TypeConverter.cs"];
m1_139 [label=int, span="", file="TypeConverter.cs"];
m1_140 [label="CommandLine.Core.Token", span="", file="TypeConverter.cs"];
m1_134 [label=unkTokens, span="", file="TypeConverter.cs"];
d7 -> d8  [key=0, style=solid, color=green];
d7 -> d10  [key=2, style=dotted, color=green];
d4 -> d7  [key=1, style=dashed, color=green, label=object];
d4 -> d5  [key=0, style=solid];
d4 -> d6  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d6 -> d7  [key=0, style=solid, color=green];
d6 -> d9  [key=2, style=dotted];
d8 -> d4  [key=0, style=bold, color=blue];
d14 -> d15  [key=0, style=solid, color=green];
d14 -> d10  [key=2, style=dotted, color=green];
d13 -> d14  [key=0, style=solid, color=green];
d13 -> d9  [key=2, style=dotted];
d15 -> d11  [key=0, style=bold, color=blue];
d5 -> d6  [key=0, style=solid];
d11 -> d13  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d11 -> d12  [key=0, style=solid];
d12 -> d13  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid, color=green];
m0_11 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_11 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_12 -> m0_13  [key=0, style=solid, color=green];
m0_12 -> m0_3  [key=2, style=dotted, color=green];
m0_12 -> m0_15  [key=0, style=solid];
m0_13 -> m0_11  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_7  [key=2, style=dotted];
m0_13 -> m0_8  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid, color=green];
m0_8 -> m0_0  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime AtNoon"];
m0_9 -> m0_10  [key=0, style=solid, color=green];
m0_9 -> m0_7  [key=2, style=dotted, color=green];
m0_9 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_9 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_10 -> m0_8  [key=0, style=bold, color=blue];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_7  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_6  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid, color=green];
m0_4 -> m0_0  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime AtMidnight"];
m0_4 -> m0_7  [key=2, style=dotted];
m0_4 -> m0_8  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid, color=green];
m0_5 -> m0_7  [key=2, style=dotted, color=green];
m0_5 -> m0_3  [key=0, style=solid];
m0_5 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_6 -> m0_4  [key=0, style=bold, color=blue];
m0_6 -> m0_0  [key=0, style=bold, color=blue];
m0_0 -> m0_5  [key=3, color=green, style=bold, label="Parameter variable int hour"];
m0_0 -> m0_9  [key=3, color=green, style=bold, label="Parameter variable int hour"];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="T[]"];
m0_0 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="T[]"];
m0_1 -> m0_3  [key=2, style=dotted];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_7  [key=2, style=dotted];
m0_1 -> m0_8  [key=2, style=dotted];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_2 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_14 -> m0_12  [key=0, style=solid];
m0_14 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_15 -> m0_9  [key=0, style=bold, color=blue];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_22 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label=preprocCompare];
m1_66 -> m1_67  [key=0, style=solid, color=green];
m1_28 -> m1_77  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid, color=green];
m1_28 -> m1_32  [key=2, style=dotted, color=green];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_79  [key=2, style=dotted];
m1_77 -> m1_80  [key=2, style=dotted];
m1_78 -> m1_28  [key=0, style=bold, color=blue];
m1_23 -> m1_28  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_23 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_23 -> m1_30  [key=2, style=dotted];
m1_24 -> m1_28  [key=0, style=solid, color=green];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_30  [key=2, style=dotted];
m1_24 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_24 -> m1_31  [key=2, style=dotted];
m1_24 -> m1_32  [key=2, style=dotted];
m1_24 -> m1_33  [key=2, style=dotted];
m1_24 -> m1_34  [key=2, style=dotted];
m1_24 -> m1_35  [key=2, style=dotted];
m1_24 -> m1_36  [key=2, style=dotted];
m1_27 -> m1_29  [key=0, style=solid, color=green];
m1_27 -> m1_36  [key=2, style=dotted, color=green];
m1_27 -> m1_47  [key=1, style=dashed, color=green, label="lambda expression"];
m1_25 -> m1_27  [key=1, style=dashed, color=green, label=tokenizerResult];
m1_25 -> m1_32  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_31  [key=2, style=dotted];
m1_25 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_25 -> m1_3  [key=0, style=bold, color=blue];
m1_26 -> m1_27  [key=0, style=solid, color=green];
m1_26 -> m1_48  [key=1, style=dashed, color=green, label=values];
m1_26 -> m1_33  [key=2, style=dotted];
m1_26 -> m1_34  [key=2, style=dotted];
m1_26 -> m1_35  [key=2, style=dotted];
m1_26 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_29 -> m1_23  [key=0, style=bold, color=blue];
m1_50 -> m1_51  [key=0, style=solid, color=green];
m1_50 -> m1_52  [key=1, style=dashed, color=green, label="System.Func<string, CSharpx.Maybe<char>>"];
m1_50 -> m1_62  [key=1, style=dashed, color=green, label="System.Func<string, CSharpx.Maybe<char>>"];
m1_50 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label="RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>"];
m1_10 -> m1_117  [key=0, style=solid];
m1_10 -> m1_121  [key=0, style=bold, color=crimson];
m1_10 -> m1_122  [key=0, style=bold, color=crimson];
m1_10 -> m1_125  [key=0, style=bold, color=crimson];
m1_10 -> m1_127  [key=0, style=bold, color=crimson];
m1_10 -> m1_128  [key=0, style=bold, color=crimson];
m1_10 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_10 -> m1_124  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_51 -> m1_52  [key=0, style=solid, color=green];
m1_51 -> m1_57  [key=2, style=dotted, color=green];
m1_51 -> m1_53  [key=1, style=dashed, color=green, label=tokens];
m1_51 -> m1_29  [key=2, style=dotted];
m1_51 -> m1_40  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid, color=green];
m1_52 -> m1_35  [key=2, style=dotted, color=green];
m1_52 -> m1_58  [key=2, style=dotted, color=green];
m1_52 -> m1_37  [key=1, style=dashed, color=green, label="lambda expression"];
m1_52 -> m1_61  [key=1, style=dashed, color=green, label="lambda expression"];
m1_52 -> m1_74  [key=1, style=dashed, color=green, label=replaces];
m1_52 -> m1_50  [key=0, style=bold, color=blue];
m1_53 -> m1_54  [key=0, style=solid, color=green];
m1_53 -> m1_35  [key=2, style=dotted, color=green];
m1_53 -> m1_70  [key=1, style=dashed, color=green, label="lambda expression"];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_59  [key=2, style=dotted];
m1_54 -> m1_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_54 -> m1_56  [key=2, style=dotted];
m1_54 -> m1_57  [key=2, style=dotted];
m1_54 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_60  [key=2, style=dotted];
m1_55 -> m1_18  [key=2, style=dotted];
m1_55 -> m1_53  [key=0, style=bold, color=blue];
m1_56 -> m1_50  [key=0, style=bold, color=blue];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_40  [key=2, style=dotted];
m1_46 -> m1_44  [key=0, style=bold, color=blue];
m1_58 -> m1_59  [key=0, style=solid];
m1_8 -> m1_4  [key=0, style=bold, color=blue];
m1_49 -> m1_47  [key=0, style=bold, color=blue];
m1_44 -> m1_45  [key=0, style=solid];
m1_13 -> m1_11  [key=0, style=bold, color=blue];
m1_15 -> m1_16  [key=0, style=solid];
m1_48 -> m1_49  [key=0, style=solid, color=green];
m1_48 -> m1_17  [key=2, style=dotted, color=green];
m1_60 -> m1_58  [key=0, style=bold, color=blue];
m1_68 -> m1_66  [key=0, style=bold, color=blue];
m1_67 -> m1_68  [key=0, style=solid, color=green];
m1_67 -> m1_69  [key=2, style=dotted, color=green];
m1_41 -> m1_42  [key=0, style=solid];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_66  [key=2, style=dotted];
m1_64 -> m1_67  [key=2, style=dotted];
m1_64 -> m1_68  [key=2, style=dotted];
m1_64 -> m1_69  [key=2, style=dotted];
m1_64 -> m1_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_64 -> m1_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_19 -> m1_20  [key=0, style=solid, color=red];
m1_19 -> m1_21  [key=0, style=solid, color=red];
m1_19 -> m1_26  [key=2, style=dotted, color=red];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_9  [key=2, style=dotted];
m1_5 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_5 -> m1_17  [key=2, style=dotted];
m1_5 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label=t];
m1_5 -> m1_15  [key=2, style=dotted];
m1_5 -> m1_16  [key=2, style=dotted];
m1_5 -> m1_18  [key=2, style=dotted];
m1_5 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_14  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_10  [key=2, style=dotted];
m1_6 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_6 -> m1_0  [key=0, style=bold, color=blue];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_18  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_4 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_4 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_4 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label=t];
m1_4 -> m1_13  [key=2, style=dotted];
m1_4 -> m1_14  [key=2, style=dotted];
m1_4 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=unkTokens];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, bool>"];
m1_11 -> m1_90  [key=0, style=solid];
m1_11 -> m1_93  [key=0, style=bold, color=crimson];
m1_11 -> m1_94  [key=0, style=bold, color=crimson];
m1_11 -> m1_96  [key=0, style=bold, color=crimson];
m1_11 -> m1_97  [key=0, style=bold, color=crimson];
m1_11 -> m1_99  [key=0, style=bold, color=crimson];
m1_11 -> m1_105  [key=0, style=bold, color=crimson];
m1_11 -> m1_107  [key=0, style=bold, color=crimson];
m1_11 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_11 -> m1_95  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_7 -> m1_8  [key=0, style=solid];
m1_17 -> m1_15  [key=0, style=bold, color=blue];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_40  [key=2, style=dotted];
m1_38 -> m1_41  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_62  [key=0, style=solid, color=green];
m1_37 -> m1_67  [key=1, style=dashed, color=green, label=int];
m1_39 -> m1_37  [key=0, style=bold, color=blue];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_29  [key=2, style=dotted];
m1_59 -> m1_40  [key=2, style=dotted];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_71  [key=0, style=solid, color=green];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_39  [key=0, style=solid, color=green];
m1_62 -> m1_32  [key=2, style=dotted, color=green];
m1_62 -> m1_64  [key=2, style=dotted, color=green];
m1_62 -> m1_69  [key=2, style=dotted, color=green];
m1_62 -> m1_66  [key=1, style=dashed, color=green, label="lambda expression"];
m1_63 -> m1_61  [key=0, style=bold, color=blue];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_40  [key=2, style=dotted];
m1_71 -> m1_63  [key=0, style=solid, color=green];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_74  [key=0, style=solid, color=green];
m1_70 -> m1_81  [key=1, style=dashed, color=green, label=int];
m1_70 -> m1_84  [key=1, style=dashed, color=green, label="CommandLine.Core.Token"];
m1_73 -> m1_74  [key=0, style=solid];
m1_72 -> m1_70  [key=0, style=bold, color=blue];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_76  [key=2, style=dotted, color=green];
m1_74 -> m1_72  [key=0, style=solid, color=green];
m1_74 -> m1_67  [key=2, style=dotted, color=green];
m1_74 -> m1_78  [key=2, style=dotted, color=green];
m1_74 -> m1_79  [key=2, style=dotted, color=green];
m1_74 -> m1_69  [key=2, style=dotted, color=green];
m1_74 -> m1_80  [key=1, style=dashed, color=green, label="lambda expression"];
m1_74 -> m1_83  [key=1, style=dashed, color=green, label="lambda expression"];
m1_75 -> m1_73  [key=0, style=bold, color=blue];
m1_47 -> m1_48  [key=0, style=solid, color=green];
m1_80 -> m1_81  [key=0, style=solid, color=green];
m1_83 -> m1_84  [key=0, style=solid, color=green];
m1_83 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_81 -> m1_82  [key=0, style=solid, color=green];
m1_81 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_81 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_81 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_81 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_82 -> m1_80  [key=0, style=bold, color=blue];
m1_82 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_82 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_84 -> m1_85  [key=0, style=solid, color=green];
m1_84 -> m1_86  [key=2, style=dotted, color=green];
m1_84 -> m1_35  [key=2, style=dotted, color=green];
m1_84 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=firstArg];
m1_85 -> m1_83  [key=0, style=bold, color=blue];
m1_85 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_85 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_85 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>"];
m1_43 -> m1_41  [key=0, style=bold, color=blue];
m1_43 -> m1_36  [key=0, style=bold, color=blue];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_40  [key=2, style=dotted];
m1_42 -> m1_44  [key=2, style=dotted];
m1_42 -> m1_45  [key=2, style=dotted];
m1_42 -> m1_32  [key=2, style=dotted];
m1_42 -> m1_46  [key=2, style=dotted];
m1_42 -> m1_47  [key=2, style=dotted];
m1_42 -> m1_48  [key=2, style=dotted];
m1_42 -> m1_29  [key=2, style=dotted];
m1_42 -> m1_49  [key=2, style=dotted];
m1_42 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_42 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_42 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_89 -> m1_87  [key=0, style=bold, color=blue];
m1_89 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=2, style=dotted];
m1_20 -> m1_25  [key=0, style=solid, color=red];
m1_20 -> m1_27  [key=2, style=dotted, color=red];
m1_20 -> m1_28  [key=2, style=dotted, color=red];
m1_21 -> m1_19  [key=0, style=bold, color=blue];
m1_21 -> m1_22  [key=0, style=solid, color=red];
m1_21 -> m1_29  [key=2, style=dotted, color=red];
m1_21 -> m1_38  [key=1, style=dashed, color=red, label=firstArg];
m1_34 -> m1_64  [key=0, style=solid];
m1_34 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_118 -> m1_109  [key=2, style=dotted];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_121  [key=1, style=dashed, color=darkseagreen4, label=text];
m1_118 -> m1_126  [key=1, style=dashed, color=darkseagreen4, label=text];
m1_117 -> m1_8  [key=2, style=dotted];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_129  [key=0, style=solid];
m1_128 -> m1_9  [key=2, style=dotted];
m1_128 -> m1_129  [key=0, style=solid];
m1_121 -> m1_111  [key=2, style=dotted];
m1_121 -> m1_122  [key=0, style=solid];
m1_122 -> m1_123  [key=0, style=solid];
m1_125 -> m1_126  [key=0, style=solid];
m1_127 -> m1_111  [key=2, style=dotted];
m1_127 -> m1_128  [key=0, style=solid];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_131  [key=2, style=dotted];
m1_124 -> m1_132  [key=2, style=dotted];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_130  [key=2, style=dotted];
m1_119 -> m1_123  [key=1, style=dashed, color=darkseagreen4, label=equalIndex];
m1_126 -> m1_128  [key=1, style=dashed, color=darkseagreen4, label=parts];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_133  [key=2, style=dotted];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_123  [key=0, style=solid];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_126  [key=0, style=solid];
m1_129 -> m1_10  [key=0, style=bold, color=blue];
m1_36 -> m1_42  [key=0, style=solid];
m1_36 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_36 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>"];
m1_36 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_65 -> m1_34  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_0 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, bool>"];
m1_0 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_0 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_0 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_0 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_1 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_7  [key=2, style=dotted];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_3 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label=tokens];
m1_3 -> m1_11  [key=2, style=dotted];
m1_3 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label=arg];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_8  [key=2, style=dotted];
m1_3 -> m1_9  [key=2, style=dotted];
m1_3 -> m1_10  [key=2, style=dotted];
m1_3 -> m1_12  [key=2, style=dotted];
m1_3 -> m1_19  [key=0, style=solid, color=red];
m1_3 -> m1_20  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<System.Type>"];
m1_3 -> m1_21  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<string>"];
m1_3 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_3 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_3 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Type>"];
m1_3 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>"];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_86 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_86 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_86 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_103 -> m1_32  [key=2, style=dotted];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_106  [key=0, style=solid];
m1_103 -> m1_114  [key=2, style=dotted];
m1_101 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_106  [key=0, style=solid];
m1_101 -> m1_109  [key=2, style=dotted];
m1_101 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_100 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label=seen];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_7  [key=2, style=dotted];
m1_100 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label=seen];
m1_100 -> m1_106  [key=1, style=dashed, color=darkseagreen4, label=seen];
m1_100 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label=seen];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_113  [key=2, style=dotted];
m1_102 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label=n];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_115  [key=2, style=dotted];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_108  [key=0, style=solid];
m1_106 -> m1_116  [key=2, style=dotted];
m1_90 -> m1_108  [key=0, style=solid];
m1_90 -> m1_91  [key=0, style=solid];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_9  [key=2, style=dotted];
m1_94 -> m1_95  [key=0, style=solid];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_111  [key=2, style=dotted];
m1_97 -> m1_98  [key=0, style=solid];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_111  [key=2, style=dotted];
m1_105 -> m1_101  [key=0, style=solid];
m1_105 -> m1_111  [key=2, style=dotted];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_116  [key=2, style=dotted];
m1_107 -> m1_109  [key=2, style=dotted];
m1_107 -> m1_9  [key=2, style=dotted];
m1_91 -> m1_101  [key=1, style=dashed, color=darkseagreen4, label=text];
m1_91 -> m1_106  [key=1, style=dashed, color=darkseagreen4, label=text];
m1_91 -> m1_96  [key=1, style=dashed, color=darkseagreen4, label=text];
m1_91 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label=text];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_109  [key=2, style=dotted];
m1_91 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=text];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_98  [key=0, style=solid];
m1_98 -> m1_100  [key=1, style=dashed, color=darkseagreen4, label=first];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_112  [key=2, style=dotted];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_95  [key=0, style=solid];
m1_92 -> m1_110  [key=2, style=dotted];
m1_108 -> m1_11  [key=0, style=bold, color=blue];
m1_135 -> m1_48  [key=1, style=dashed, color=green, label=values];
m1_136 -> m1_62  [key=1, style=dashed, color=green, label="System.Func<string, CSharpx.Maybe<char>>"];
m1_138 -> m1_74  [key=1, style=dashed, color=green, label=replaces];
m1_137 -> m1_67  [key=1, style=dashed, color=green, label=int];
m1_139 -> m1_81  [key=1, style=dashed, color=green, label=int];
m1_140 -> m1_84  [key=1, style=dashed, color=green, label="CommandLine.Core.Token"];
m1_134 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=unkTokens];
}
