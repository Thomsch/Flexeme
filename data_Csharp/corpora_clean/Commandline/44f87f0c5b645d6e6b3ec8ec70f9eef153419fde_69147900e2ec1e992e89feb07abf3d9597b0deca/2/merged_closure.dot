digraph  {
n682 [label="CommandLine.HelpOptionAttribute", span=""];
n683 [label="CommandLine.OptionAttribute", span=""];
n684 [label="CommandLine.OptionListAttribute", span=""];
n685 [label="CommandLine.ValueListAttribute", span=""];
n686 [label="CommandLine.ArgumentParser", span=""];
n687 [label="CommandLine.BadOptionInfo", span=""];
n688 [label="CommandLine.LongOptionParser", span=""];
n689 [label="CommandLine.OneCharStringEnumerator", span=""];
n690 [label="CommandLine.OptionGroupParser", span=""];
n691 [label="CommandLine.OptionInfo", span=""];
n692 [label="CommandLine.OptionMap.MutuallyExclusiveInfo", span=""];
n693 [label="CommandLine.OptionMap", span=""];
n694 [label="CommandLine.Pair<TLeft, TRight>", span=""];
n695 [label="CommandLine.ParsingError", span=""];
n696 [label="CommandLine.PostParsingState", span=""];
n697 [label="CommandLine.StringArrayEnumerator", span=""];
n698 [label="CommandLine.TargetWrapper", span=""];
n699 [label="CommandLine.CommandLineOptionsBase", span=""];
n700 [label="CommandLine.CommandLineParserSettings", span=""];
n701 [label="CommandLine.CommandLineParser", span=""];
n0 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="126-126"];
n1 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", label="HelpText = _defaultHelpText", span="129-129"];
n2 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="126-126"];
n3 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="138-138"];
n4 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", label="ShortName = shortName", span="140-140"];
n5 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", label="LongName = longName", span="141-141"];
n6 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", label="HelpText = _defaultHelpText", span="142-142"];
n7 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="138-138"];
n8 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="156-156"];
n9 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="text = null", span="159-159"];
n10 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="var method = pair.Left", span="161-161"];
n13 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="text = (string)method.Invoke(target, null)", span="165-165"];
n11 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="!CheckMethodSignature(method)", span="162-162"];
n12 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="throw new MemberAccessException();", span="163-163"];
n15 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="168-168"];
n14 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="156-156"];
n16 [cluster="System.MemberAccessException.MemberAccessException()", label="Entry System.MemberAccessException.MemberAccessException()", span="0-0"];
n17 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
n18 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", label="return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", span="170-170"];
n19 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="168-168"];
n20 [cluster="System.Reflection.MethodBase.GetParameters()", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
n21 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", label="Entry CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="184-184"];
n22 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", label="Exit CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="184-184"];
n23 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="206-206"];
n24 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="!string.IsNullOrEmpty(shortName)", span="208-208"];
n25 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="_uniqueName = shortName", span="209-209"];
n26 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="!string.IsNullOrEmpty(longName)", span="210-210"];
n27 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="_uniqueName = longName", span="211-211"];
n30 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="base.ShortName = shortName", span="216-216"];
n31 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="base.LongName = longName", span="217-217"];
n33 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n28 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="_uniqueName == null", span="213-213"];
n29 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="throw new InvalidOperationException();", span="214-214"];
n32 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="206-206"];
n34 [cluster="System.InvalidOperationException.InvalidOperationException()", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
n35 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="260-260"];
n36 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", label="Separator = ':'", span="263-263"];
n37 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="260-260"];
n38 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="272-272"];
n39 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", label="Separator = separator", span="275-275"];
n40 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="272-272"];
n41 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", label="Entry CommandLine.ValueListAttribute.ValueListAttribute()", span="296-296"];
n42 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", label="MaximumElements = -1", span="298-298"];
n43 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", label="Exit CommandLine.ValueListAttribute.ValueListAttribute()", span="296-296"];
n44 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="306-306"];
n45 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", label="concreteType == null", span="309-309"];
n47 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", label="!typeof(IList<string>).IsAssignableFrom(concreteType)", span="312-312"];
n49 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", label="_concreteType = concreteType", span="315-315"];
n46 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", label="throw new ArgumentNullException(''concreteType'');", span="310-310"];
n48 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", label="throw new CommandLineParserException(''The types are incompatible.'');", span="313-313"];
n52 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
n50 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", label="Exit CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="306-306"];
n53 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1521-1521"];
n51 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n54 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="330-330"];
n55 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="Type concreteType", span="332-332"];
n56 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="var property = GetProperty(target, out concreteType)", span="333-333"];
n59 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="property.SetValue(target, Activator.CreateInstance(concreteType), null)", span="338-338"];
n60 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="return (IList<string>)property.GetValue(target, null);", span="340-340"];
n57 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="property == null || concreteType == null", span="335-335"];
n62 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="Entry CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="357-357"];
n58 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="return null;", span="336-336"];
n63 [cluster="System.Activator.CreateInstance(System.Type)", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
n64 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
n61 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="Exit CommandLine.ValueListAttribute.GetReference(object)", span="330-330"];
n65 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
n66 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="343-343"];
n67 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="345-345"];
n68 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="list == null || list.Count == 0", span="346-346"];
n75 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1828-1828"];
n70 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="list.Count > 1", span="349-349"];
n72 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="var pairZero = list[0]", span="352-352"];
n69 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="return null;", span="347-347"];
n71 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="throw new InvalidOperationException();", span="350-350"];
n73 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="return pairZero.Right;", span="354-354"];
n74 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="Exit CommandLine.ValueListAttribute.GetAttribute(object)", span="343-343"];
n76 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="concreteType = null", span="359-359"];
n77 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="361-361"];
n78 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="list == null || list.Count == 0", span="362-362"];
n80 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="list.Count > 1", span="365-365"];
n82 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="var pairZero = list[0]", span="368-368"];
n79 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="return null;", span="363-363"];
n81 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="throw new InvalidOperationException();", span="366-366"];
n83 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="concreteType = pairZero.Right.ConcreteType", span="369-369"];
n84 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="return pairZero.Left;", span="371-371"];
n85 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="Exit CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="357-357"];
n86 [cluster="CommandLine.ArgumentParser.ArgumentParser()", label="Entry CommandLine.ArgumentParser.ArgumentParser()", span="387-387"];
n87 [cluster="CommandLine.ArgumentParser.ArgumentParser()", label="this.PostParsingState = new List<ParsingError>()", span="389-389"];
n88 [cluster="CommandLine.ArgumentParser.ArgumentParser()", label="Exit CommandLine.ArgumentParser.ArgumentParser()", span="387-387"];
n89 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n90 [cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Entry CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="392-392"];
n91 [cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Exit CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="392-392"];
n92 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", label="Entry CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="396-396"];
n93 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", label="this.PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", span="400-400"];
n94 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", label="Exit CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="396-396"];
n95 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", label="Entry CommandLine.ParsingError.ParsingError(string, string, bool)", span="1270-1270"];
n96 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n97 [cluster="CommandLine.ArgumentParser.Create(string)", label="Entry CommandLine.ArgumentParser.Create(string)", span="403-403"];
n98 [cluster="CommandLine.ArgumentParser.Create(string)", label="argument.Equals(''-'', StringComparison.InvariantCulture)", span="405-405"];
n100 [cluster="CommandLine.ArgumentParser.Create(string)", label="argument[0] == '-' && argument[1] == '-'", span="408-408"];
n102 [cluster="CommandLine.ArgumentParser.Create(string)", label="argument[0] == '-'", span="411-411"];
n99 [cluster="CommandLine.ArgumentParser.Create(string)", label="return null;", span="406-406"];
n106 [cluster="string.Equals(string, System.StringComparison)", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
n101 [cluster="CommandLine.ArgumentParser.Create(string)", label="return new LongOptionParser();", span="409-409"];
n103 [cluster="CommandLine.ArgumentParser.Create(string)", label="return new OptionGroupParser();", span="412-412"];
n104 [cluster="CommandLine.ArgumentParser.Create(string)", label="return null;", span="414-414"];
n105 [cluster="CommandLine.ArgumentParser.Create(string)", label="Exit CommandLine.ArgumentParser.Create(string)", span="403-403"];
n107 [cluster="CommandLine.LongOptionParser.LongOptionParser()", label="Entry CommandLine.LongOptionParser.LongOptionParser()", span="542-542"];
n108 [cluster="CommandLine.OptionGroupParser.OptionGroupParser()", label="Entry CommandLine.OptionGroupParser.OptionGroupParser()", span="716-716"];
n109 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", label="Entry CommandLine.ArgumentParser.IsInputValue(string)", span="417-417"];
n110 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", label="argument.Length > 0", span="419-419"];
n111 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", label="return argument.Equals(''-'', StringComparison.InvariantCulture) || argument[0] != '-';", span="420-420"];
n112 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", label="return true;", span="422-422"];
n113 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", label="Exit CommandLine.ArgumentParser.IsInputValue(string)", span="417-417"];
n114 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="Entry CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="432-432"];
n115 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="IList<string> list = new List<string>()", span="434-434"];
n116 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="ae.MoveNext()", span="436-436"];
n117 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="IsInputValue(ae.Current)", span="438-438"];
n118 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="list.Add(ae.Current)", span="439-439"];
n119 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="!ae.MovePrevious()", span="443-443"];
n121 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="return list;", span="446-446"];
n123 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="533-533"];
n124 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
n120 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="throw new CommandLineParserException();", span="444-444"];
n125 [cluster="CommandLine.IArgumentEnumerator.MovePrevious()", label="Entry CommandLine.IArgumentEnumerator.MovePrevious()", span="535-535"];
n122 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="Exit CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="432-432"];
n126 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", label="Entry CommandLine.CommandLineParserException.CommandLineParserException()", span="1516-1516"];
n127 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", label="Entry CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="449-449"];
n128 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", label="return string.Compare(argument, ''-'' + option, !caseSensitive) == 0;", span="451-451"];
n129 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", label="Exit CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="449-449"];
n130 [cluster="string.Compare(string, string, bool)", label="Entry string.Compare(string, string, bool)", span="0-0"];
n131 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", label="Entry CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="454-454"];
n132 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", label="return string.Compare(argument, ''--'' + option, !caseSensitive) == 0;", span="456-456"];
n133 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", label="Exit CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="454-454"];
n134 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool)", span="459-459"];
n135 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", label="return BooleanToParserState(value, false);", span="461-461"];
n136 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool)", span="459-459"];
n137 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="464-464"];
n138 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="value && !addMoveNextIfTrue", span="466-466"];
n140 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="value && addMoveNextIfTrue", span="468-468"];
n139 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="return ParserState.Success;", span="467-467"];
n141 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="return ParserState.Success | ParserState.MoveOnNextElement;", span="469-469"];
n142 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="return ParserState.Failure;", span="471-471"];
n143 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="464-464"];
n144 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", label="Entry CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="474-474"];
n145 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", label="!option.IsAttributeArrayCompatible", span="476-476"];
n146 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", label="throw new CommandLineParserException();", span="477-477"];
n147 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", label="Exit CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="474-474"];
n148 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", label="Entry CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="480-480"];
n149 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", label="!option.IsArray && option.IsAttributeArrayCompatible", span="482-482"];
n150 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", label="throw new CommandLineParserException();", span="483-483"];
n151 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", label="Exit CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="480-480"];
n152 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", label="Entry CommandLine.BadOptionInfo.BadOptionInfo()", span="492-492"];
n153 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", label="Exit CommandLine.BadOptionInfo.BadOptionInfo()", span="492-492"];
n154 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", label="Entry CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="496-496"];
n155 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", label="ShortName = shortName", span="498-498"];
n156 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", label="LongName = longName", span="499-499"];
n157 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", label="Exit CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="496-496"];
n158 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="528-528"];
n159 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", label="Exit CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="528-528"];
n160 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", label="Exit CommandLine.IArgumentEnumerator.MoveNext()", span="533-533"];
n161 [cluster="CommandLine.IArgumentEnumerator.MovePrevious()", label="Exit CommandLine.IArgumentEnumerator.MovePrevious()", span="535-535"];
n162 [cluster="CommandLine.LongOptionParser.LongOptionParser()", label="Exit CommandLine.LongOptionParser.LongOptionParser()", span="542-542"];
n163 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Entry CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="547-547"];
n164 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="var parts = argumentEnumerator.Current.Substring(2).Split(new char[] { '=' }, 2)", span="549-549"];
n165 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="var option = map[parts[0]]", span="550-550"];
n172 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="parts.Length == 1 && (argumentEnumerator.IsLast || !ArgumentParser.IsInputValue(argumentEnumerator.Next))", span="562-562"];
n176 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="valueSetting = option.SetValue(parts[1], options)", span="569-569"];
n181 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="579-579"];
n183 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="valueSetting = option.SetValue(items, options)", span="582-582"];
n188 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="593-593"];
n193 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="603-603"];
n194 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="valueSetting = option.SetValue(items, options)", span="605-605"];
n200 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="valueSetting = option.SetValue(true, options)", span="618-618"];
n205 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
n206 [cluster="string.Split(char[], int)", label="Entry string.Split(char[], int)", span="0-0"];
n174 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="parts.Length == 2", span="565-565"];
n182 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="items.Insert(0, parts[1])", span="580-580"];
n198 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="parts.Length == 2", span="615-615"];
n166 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="var valueSetting = false", span="551-551"];
n167 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="option == null", span="553-553"];
n169 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="option.IsDefined = true", span="556-556"];
n170 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="558-558"];
n171 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!option.IsBoolean", span="560-560"];
n175 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!option.IsArray", span="567-567"];
n178 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="this.DefineOptionThatViolatesFormat(option)", span="571-571"];
n180 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="577-577"];
n185 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="this.DefineOptionThatViolatesFormat(option)", span="584-584"];
n187 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!option.IsArray", span="591-591"];
n190 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="this.DefineOptionThatViolatesFormat(option)", span="595-595"];
n192 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="601-601"];
n196 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="this.DefineOptionThatViolatesFormat(option)", span="607-607"];
n202 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="this.DefineOptionThatViolatesFormat(option)", span="620-620"];
n168 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ParserState.Failure;", span="554-554"];
n173 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ParserState.Failure;", span="563-563"];
n177 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!valueSetting", span="570-570"];
n207 [cluster="CommandLine.OptionInfo.SetValue(string, object)", label="Entry CommandLine.OptionInfo.SetValue(string, object)", span="868-868"];
n179 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ArgumentParser.BooleanToParserState(valueSetting);", span="573-573"];
n208 [cluster="System.Collections.Generic.IList<T>.Insert(int, T)", label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0"];
n184 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!valueSetting", span="583-583"];
n209 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="Entry CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="879-879"];
n186 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ArgumentParser.BooleanToParserState(valueSetting);", span="586-586"];
n189 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!valueSetting", span="594-594"];
n191 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="597-597"];
n195 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!valueSetting", span="606-606"];
n197 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="609-609"];
n199 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ParserState.Failure;", span="616-616"];
n201 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!valueSetting", span="619-619"];
n210 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", label="Entry CommandLine.OptionInfo.SetValue(bool, object)", span="962-962"];
n203 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ArgumentParser.BooleanToParserState(valueSetting);", span="622-622"];
n204 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Exit CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="547-547"];
n211 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="633-633"];
n212 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", label="Assumes.NotNullOrEmpty(value, ''value'')", span="635-635"];
n213 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", label="_data = value", span="637-637"];
n216 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1813-1813"];
n214 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", label="_index = -1", span="638-638"];
n215 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", label="Exit CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="633-633"];
n217 [cluster="CommandLine.OneCharStringEnumerator.Reset()", label="Entry CommandLine.OneCharStringEnumerator.Reset()", span="677-677"];
n218 [cluster="CommandLine.OneCharStringEnumerator.Reset()", label="_index = -1", span="679-679"];
n219 [cluster="CommandLine.OneCharStringEnumerator.Reset()", label="Exit CommandLine.OneCharStringEnumerator.Reset()", span="677-677"];
n220 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="Entry CommandLine.OneCharStringEnumerator.MoveNext()", span="682-682"];
n221 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="_index < (_data.Length - 1)", span="684-684"];
n222 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="_index++", span="686-686"];
n225 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="_index = _data.Length", span="690-690"];
n223 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="_currentElement = _data.Substring(_index, 1)", span="687-687"];
n224 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="return true;", span="688-688"];
n228 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
n226 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="return false;", span="692-692"];
n227 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="Exit CommandLine.OneCharStringEnumerator.MoveNext()", span="682-682"];
n229 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", label="Entry CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="695-695"];
n230 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", label="_index == -1", span="697-697"];
n231 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", label="throw new InvalidOperationException();", span="698-698"];
n232 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", label="_index > _data.Length", span="700-700"];
n233 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", label="throw new InvalidOperationException();", span="701-701"];
n234 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", label="return _data.Substring(_index + 1);", span="703-703"];
n235 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", label="Exit CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="695-695"];
n236 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", label="Entry CommandLine.OneCharStringEnumerator.MovePrevious()", span="706-706"];
n237 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", label="throw new NotSupportedException();", span="708-708"];
n238 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", label="Exit CommandLine.OneCharStringEnumerator.MovePrevious()", span="706-706"];
n239 [cluster="System.NotSupportedException.NotSupportedException()", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
n240 [cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", label="Entry CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="711-711"];
n241 [cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", label="Exit CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="711-711"];
n242 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Entry CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="718-718"];
n243 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="var valueSetting = false", span="720-720"];
n244 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="IArgumentEnumerator group = new OneCharStringEnumerator(argumentEnumerator.Current.Substring(1))", span="722-722"];
n246 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="var option = map[group.Current]", span="725-725"];
n252 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="argumentEnumerator.IsLast && group.IsLast", span="735-735"];
n256 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="valueSetting = option.SetValue(group.GetRemainingFromNext(), options)", span="742-742"];
n261 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="752-752"];
n263 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="valueSetting = option.SetValue(items, options)", span="755-755"];
n267 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!argumentEnumerator.IsLast && !ArgumentParser.IsInputValue(argumentEnumerator.Next)", span="763-763"];
n270 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="769-769"];
n275 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="779-779"];
n276 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="valueSetting = option.SetValue(items, options)", span="781-781"];
n280 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!group.IsLast && map[group.Next] == null", span="791-791"];
n282 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!option.SetValue(true, options)", span="794-794"];
n245 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="group.MoveNext()", span="723-723"];
n254 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!group.IsLast", span="738-738"];
n262 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="items.Insert(0, group.GetRemainingFromNext())", span="753-753"];
n284 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ParserState.Success;", span="799-799"];
n247 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="option == null", span="726-726"];
n249 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="option.IsDefined = true", span="729-729"];
n250 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="731-731"];
n251 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!option.IsBoolean", span="733-733"];
n255 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!option.IsArray", span="740-740"];
n258 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="this.DefineOptionThatViolatesFormat(option)", span="744-744"];
n260 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="750-750"];
n265 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="this.DefineOptionThatViolatesFormat(option)", span="757-757"];
n269 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!option.IsArray", span="767-767"];
n272 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="this.DefineOptionThatViolatesFormat(option)", span="771-771"];
n274 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="777-777"];
n278 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="this.DefineOptionThatViolatesFormat(option)", span="783-783"];
n248 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ParserState.Failure;", span="727-727"];
n253 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ParserState.Failure;", span="736-736"];
n257 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!valueSetting", span="743-743"];
n259 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ArgumentParser.BooleanToParserState(valueSetting);", span="746-746"];
n264 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!valueSetting", span="756-756"];
n266 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="759-759"];
n268 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ParserState.Failure;", span="764-764"];
n271 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!valueSetting", span="770-770"];
n273 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="773-773"];
n277 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!valueSetting", span="782-782"];
n279 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ArgumentParser.BooleanToParserState(valueSetting);", span="785-785"];
n281 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ParserState.Failure;", span="792-792"];
n283 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ParserState.Failure;", span="795-795"];
n285 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Exit CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="718-718"];
n286 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="Entry CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="817-817"];
n287 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="attribute != null", span="819-819"];
n288 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_required = attribute.Required", span="821-821"];
n289 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_helpText = attribute.HelpText", span="822-822"];
n290 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_shortName = attribute.ShortName", span="823-823"];
n291 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_longName = attribute.LongName", span="824-824"];
n292 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="825-825"];
n293 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_defaultValue = attribute.DefaultValue", span="826-826"];
n294 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_hasDefaultValue = attribute.HasDefaultValue", span="827-827"];
n295 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_attribute = attribute", span="828-828"];
n297 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="property != null", span="833-833"];
n298 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_property = property", span="834-834"];
n296 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", span="831-831"];
n299 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="throw new ArgumentNullException(''property'', ''The property is mandatory'');", span="836-836"];
n300 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="Exit CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="817-817"];
n301 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
n302 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="Entry CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="847-847"];
n303 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", span="849-849"];
n305 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="var map = new OptionMap(list.Count, settings)", span="852-852"];
n309 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="map.RawOptions = target", span="860-860"];
n304 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="list != null", span="850-850"];
n306 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label=list, span="854-854"];
n311 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="return null;", span="865-865"];
n313 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="Entry CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1086-1086"];
n308 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="857-857"];
n310 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="return map;", span="862-862"];
n307 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="pair != null && pair.Right != null", span="856-856"];
n312 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="Exit CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="847-847"];
n314 [cluster="CommandLine.OptionInfo.SetValue(string, object)", label="_attribute is OptionListAttribute", span="870-870"];
n315 [cluster="CommandLine.OptionInfo.SetValue(string, object)", label="return SetValueList(value, options);", span="871-871"];
n317 [cluster="CommandLine.OptionInfo.SetValue(string, object)", label="return SetNullableValue(value, options);", span="874-874"];
n318 [cluster="CommandLine.OptionInfo.SetValue(string, object)", label="return SetValueScalar(value, options);", span="876-876"];
n316 [cluster="CommandLine.OptionInfo.SetValue(string, object)", label="ReflectionUtil.IsNullableType(_property.PropertyType)", span="873-873"];
n321 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", label="Entry CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1915-1915"];
n319 [cluster="CommandLine.OptionInfo.SetValue(string, object)", label="Exit CommandLine.OptionInfo.SetValue(string, object)", span="868-868"];
n323 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="Entry CommandLine.OptionInfo.SetValueScalar(string, object)", span="904-904"];
n322 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label="Entry CommandLine.OptionInfo.SetNullableValue(string, object)", span="940-940"];
n320 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="Entry CommandLine.OptionInfo.SetValueList(string, object)", span="972-972"];
n324 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="Type elementType = _property.PropertyType.GetElementType()", span="881-881"];
n325 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="Array array = Array.CreateInstance(elementType, values.Count)", span="882-882"];
n329 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="array.SetValue(Convert.ChangeType(values[i], elementType, Thread.CurrentThread.CurrentCulture), i)", span="891-891"];
n330 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="_property.SetValue(options, array, null)", span="892-892"];
n336 [cluster="System.Type.GetElementType()", label="Entry System.Type.GetElementType()", span="0-0"];
n326 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="int i = 0", span="884-884"];
n337 [cluster="System.Array.CreateInstance(System.Type, int)", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
n327 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="i < array.Length", span="884-884"];
n333 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="i++", span="884-884"];
n328 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label=_setValueLock, span="888-888"];
n334 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="return true;", span="901-901"];
n338 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
n339 [cluster="System.Array.SetValue(object, int)", label="Entry System.Array.SetValue(object, int)", span="0-0"];
n331 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label=FormatException, span="895-895"];
n332 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="return false;", span="897-897"];
n335 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="Exit CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="879-879"];
n340 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="_property.PropertyType.IsEnum", span="908-908"];
n342 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="_property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", span="912-912"];
n344 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="_property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, Thread.CurrentThread.CurrentCulture), null)", span="920-920"];
n341 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label=_setValueLock, span="910-910"];
n343 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label=_setValueLock, span="917-917"];
n345 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label=InvalidCastException, span="924-924"];
n347 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label=FormatException, span="928-928"];
n349 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label=ArgumentException, span="932-932"];
n351 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="return true;", span="937-937"];
n353 [cluster="System.Enum.Parse(System.Type, string, bool)", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
n346 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="return false;", span="926-926"];
n348 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="return false;", span="930-930"];
n350 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="return false;", span="934-934"];
n352 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="Exit CommandLine.OptionInfo.SetValueScalar(string, object)", span="904-904"];
n354 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label="var nc = new NullableConverter(_property.PropertyType)", span="942-942"];
n356 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label="_property.SetValue(options, nc.ConvertFromString(null, Thread.CurrentThread.CurrentCulture, value), null)", span="949-949"];
n355 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label=_setValueLock, span="946-946"];
n361 [cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0"];
n357 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label=Exception, span="954-954"];
n359 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label="return true;", span="959-959"];
n362 [cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0"];
n358 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label="return false;", span="956-956"];
n360 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label="Exit CommandLine.OptionInfo.SetNullableValue(string, object)", span="940-940"];
n363 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", label=_setValueLock, span="964-964"];
n364 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", label="_property.SetValue(options, value, null)", span="966-966"];
n365 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", label="return true;", span="968-968"];
n366 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", label="Exit CommandLine.OptionInfo.SetValue(bool, object)", span="962-962"];
n367 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label=_setValueLock, span="974-974"];
n368 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="_property.SetValue(options, new List<string>(), null)", span="976-976"];
n369 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="var fieldRef = (IList<string>)_property.GetValue(options, null)", span="978-978"];
n370 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="var values = value.Split(((OptionListAttribute)_attribute).Separator)", span="979-979"];
n373 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="fieldRef.Add(values[i])", span="983-983"];
n371 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="int i = 0", span="981-981"];
n377 [cluster="string.Split(params char[])", label="Entry string.Split(params char[])", span="0-0"];
n372 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="i < values.Length", span="981-981"];
n374 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="i++", span="981-981"];
n375 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="return true;", span="986-986"];
n376 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="Exit CommandLine.OptionInfo.SetValueList(string, object)", span="972-972"];
n378 [cluster="CommandLine.OptionInfo.SetDefault(object)", label="Entry CommandLine.OptionInfo.SetDefault(object)", span="990-990"];
n379 [cluster="CommandLine.OptionInfo.SetDefault(object)", label=_hasDefaultValue, span="992-992"];
n380 [cluster="CommandLine.OptionInfo.SetDefault(object)", label=_setValueLock, span="994-994"];
n382 [cluster="CommandLine.OptionInfo.SetDefault(object)", label="Exit CommandLine.OptionInfo.SetDefault(object)", span="990-990"];
n383 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1066-1066"];
n384 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", label="BadOption = option", span="1069-1069"];
n385 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1066-1066"];
n386 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1075-1075"];
n387 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", label="++count", span="1075-1075"];
n388 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1075-1075"];
n389 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="_settings = settings", span="1088-1088"];
n394 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="_names = new Dictionary<string, string>(capacity, comparer)", span="1096-1096"];
n395 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="_map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="1097-1097"];
n397 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="_mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="1102-1102"];
n390 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="IEqualityComparer<string> comparer", span="1090-1090"];
n391 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="_settings.CaseSensitive", span="1091-1091"];
n392 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="comparer = StringComparer.Ordinal", span="1092-1092"];
n393 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="comparer = StringComparer.OrdinalIgnoreCase", span="1094-1094"];
n399 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
n396 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="_settings.MutuallyExclusive", span="1099-1099"];
n398 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="Exit CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1086-1086"];
n400 [cluster="CommandLine.OptionMap.EnforceRules()", label="Entry CommandLine.OptionMap.EnforceRules()", span="1137-1137"];
n401 [cluster="CommandLine.OptionMap.EnforceRules()", label="return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="1139-1139"];
n402 [cluster="CommandLine.OptionMap.EnforceRules()", label="Exit CommandLine.OptionMap.EnforceRules()", span="1137-1137"];
n403 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="Entry CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1163-1163"];
n404 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", label="Entry CommandLine.OptionMap.EnforceRequiredRule()", span="1150-1150"];
n405 [cluster="CommandLine.OptionMap.SetDefaults()", label="Entry CommandLine.OptionMap.SetDefaults()", span="1142-1142"];
n406 [cluster="CommandLine.OptionMap.SetDefaults()", label="_map.Values", span="1144-1144"];
n407 [cluster="CommandLine.OptionMap.SetDefaults()", label="option.SetDefault(this.RawOptions)", span="1146-1146"];
n408 [cluster="CommandLine.OptionMap.SetDefaults()", label="Exit CommandLine.OptionMap.SetDefaults()", span="1142-1142"];
n409 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", label="_map.Values", span="1152-1152"];
n410 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", label="option.Required && !option.IsDefined", span="1154-1154"];
n413 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", label="return true;", span="1160-1160"];
n411 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, option, true, null)", span="1156-1156"];
n412 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", label="return false;", span="1157-1157"];
n415 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="Entry CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1202-1202"];
n414 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", label="Exit CommandLine.OptionMap.EnforceRequiredRule()", span="1150-1150"];
n416 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="!_settings.MutuallyExclusive", span="1165-1165"];
n417 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="return true;", span="1166-1166"];
n418 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="_map.Values", span="1168-1168"];
n419 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="option.IsDefined && option.MutuallyExclusiveSet != null", span="1170-1170"];
n421 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="_mutuallyExclusiveSetMap.Values", span="1175-1175"];
n420 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="BuildMutuallyExclusiveMap(option)", span="1171-1171"];
n427 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", label="Entry CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1188-1188"];
n422 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="info.Occurrence > 1", span="1177-1177"];
n425 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="return true;", span="1185-1185"];
n423 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, info.BadOption, null, true)", span="1180-1180"];
n424 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="return false;", span="1181-1181"];
n426 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="Exit CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1163-1163"];
n428 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", label="var setName = option.MutuallyExclusiveSet", span="1190-1190"];
n430 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", label="_mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="1195-1195"];
n429 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", label="!_mutuallyExclusiveSetMap.ContainsKey(setName)", span="1192-1192"];
n431 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", label="_mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="1199-1199"];
n433 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n434 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
n432 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", label="Exit CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1188-1188"];
n435 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="options is CommandLineOptionsBase", span="1204-1204"];
n437 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="error.BadOption.ShortName = option.ShortName", span="1209-1209"];
n438 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="error.BadOption.LongName = option.LongName", span="1210-1210"];
n439 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="required != null", span="1212-1212"];
n440 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="error.ViolatesRequired = required.Value", span="1212-1212"];
n441 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="mutualExclusiveness != null", span="1213-1213"];
n442 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="1213-1213"];
n443 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.Add(error)", span="1215-1215"];
n436 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="ParsingError error = new ParsingError()", span="1206-1206"];
n444 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="Exit CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1202-1202"];
n445 [cluster="CommandLine.ParsingError.ParsingError()", label="Entry CommandLine.ParsingError.ParsingError()", span="1265-1265"];
n446 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", label="Entry CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1225-1225"];
n447 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", label="_left = left", span="1227-1227"];
n448 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", label="_right = right", span="1228-1228"];
n449 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", label="Exit CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1225-1225"];
n450 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", label="Entry CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1241-1241"];
n451 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", label="int leftHash = (_left == null ? 0 : _left.GetHashCode())", span="1243-1243"];
n452 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", label="int rightHash = (_right == null ? 0 : _right.GetHashCode())", span="1244-1244"];
n455 [cluster="object.GetHashCode()", label="Entry object.GetHashCode()", span="0-0"];
n453 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", label="return leftHash ^ rightHash;", span="1246-1246"];
n454 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", label="Exit CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1241-1241"];
n456 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", label="Entry CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1249-1249"];
n457 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", label="var other = obj as Pair<TLeft, TRight>", span="1251-1251"];
n458 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", label="other == null", span="1253-1253"];
n460 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", label="return Equals(_left, other._left) && Equals(_right, other._right);", span="1256-1256"];
n459 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", label="return false;", span="1254-1254"];
n461 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", label="Exit CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1249-1249"];
n462 [cluster="object.Equals(object, object)", label="Entry object.Equals(object, object)", span="0-0"];
n463 [cluster="CommandLine.ParsingError.ParsingError()", label="this.BadOption = new BadOptionInfo()", span="1267-1267"];
n464 [cluster="CommandLine.ParsingError.ParsingError()", label="Exit CommandLine.ParsingError.ParsingError()", span="1265-1265"];
n465 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", label="this.BadOption = new BadOptionInfo(shortName, longName)", span="1274-1274"];
n466 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", label="this.ViolatesFormat = format", span="1276-1276"];
n467 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", label="Exit CommandLine.ParsingError.ParsingError(string, string, bool)", span="1270-1270"];
n468 [cluster="CommandLine.PostParsingState.PostParsingState()", label="Entry CommandLine.PostParsingState.PostParsingState()", span="1318-1318"];
n469 [cluster="CommandLine.PostParsingState.PostParsingState()", label="Errors = new List<ParsingError>()", span="1320-1320"];
n470 [cluster="CommandLine.PostParsingState.PostParsingState()", label="Exit CommandLine.PostParsingState.PostParsingState()", span="1318-1318"];
n471 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1338-1338"];
n472 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", label="Assumes.NotNull(value, ''value'')", span="1340-1340"];
n473 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", label="_data = value", span="1342-1342"];
n475 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", label="_endIndex = value.Length", span="1344-1344"];
n477 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", label="Entry CommandLine.Assumes.NotNull<T>(T, string)", span="1806-1806"];
n474 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", label="_index = -1", span="1343-1343"];
n476 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", label="Exit CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1338-1338"];
n478 [cluster="CommandLine.StringArrayEnumerator.Reset()", label="Entry CommandLine.StringArrayEnumerator.Reset()", span="1388-1388"];
n479 [cluster="CommandLine.StringArrayEnumerator.Reset()", label="_index = -1", span="1390-1390"];
n480 [cluster="CommandLine.StringArrayEnumerator.Reset()", label="Exit CommandLine.StringArrayEnumerator.Reset()", span="1388-1388"];
n481 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", label="Entry CommandLine.StringArrayEnumerator.MoveNext()", span="1393-1393"];
n482 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", label="_index < _endIndex", span="1395-1395"];
n483 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", label="_index++", span="1397-1397"];
n485 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", label="return false;", span="1400-1400"];
n484 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", label="return _index < _endIndex;", span="1398-1398"];
n486 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", label="Exit CommandLine.StringArrayEnumerator.MoveNext()", span="1393-1393"];
n487 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", label="Entry CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1403-1403"];
n488 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", label="throw new NotSupportedException();", span="1405-1405"];
n489 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", label="Exit CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1403-1403"];
n490 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="Entry CommandLine.StringArrayEnumerator.MovePrevious()", span="1408-1408"];
n491 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="_index <= 0", span="1410-1410"];
n492 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="throw new InvalidOperationException();", span="1412-1412"];
n493 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="_index <= _endIndex", span="1414-1414"];
n494 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="_index--", span="1416-1416"];
n496 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="return false;", span="1419-1419"];
n495 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="return _index <= _endIndex;", span="1417-1417"];
n497 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="Exit CommandLine.StringArrayEnumerator.MovePrevious()", span="1408-1408"];
n498 [cluster="CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", label="Entry CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", span="1422-1422"];
n499 [cluster="CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", label="Exit CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", span="1422-1422"];
n500 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", label="Entry CommandLine.TargetWrapper.TargetWrapper(object)", span="1433-1433"];
n501 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", label="_target = target", span="1435-1435"];
n502 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", label="_vla = ValueListAttribute.GetAttribute(_target)", span="1436-1436"];
n503 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", label=IsValueListDefined, span="1437-1437"];
n504 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", label="_valueList = ValueListAttribute.GetReference(_target)", span="1438-1438"];
n505 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", label="Exit CommandLine.TargetWrapper.TargetWrapper(object)", span="1433-1433"];
n506 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", label="Entry CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1443-1443"];
n507 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", label="_vla.MaximumElements == 0 || _valueList.Count == _vla.MaximumElements", span="1445-1445"];
n510 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", label="_valueList.Add(item)", span="1450-1450"];
n508 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", label="return false;", span="1446-1446"];
n509 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", label=this, span="1448-1448"];
n511 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", label="return true;", span="1453-1453"];
n512 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", label="Exit CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1443-1443"];
n513 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1474-1474"];
n514 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1474-1474"];
n515 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1489-1489"];
n516 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1489-1489"];
n517 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", label="Entry CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1497-1497"];
n518 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", label="LastPostParsingState = new PostParsingState()", span="1499-1499"];
n519 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", label="Exit CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1497-1497"];
n520 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", label="Exit CommandLine.CommandLineParserException.CommandLineParserException()", span="1516-1516"];
n521 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1521-1521"];
n522 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1526-1526"];
n523 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1526-1526"];
n524 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1531-1531"];
n525 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1531-1531"];
n526 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1547-1547"];
n527 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1547-1547"];
n528 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1557-1557"];
n529 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", label="CaseSensitive = caseSensitive", span="1559-1559"];
n530 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1557-1557"];
n531 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1568-1568"];
n532 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", label="HelpWriter = helpWriter", span="1571-1571"];
n533 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1568-1568"];
n534 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1581-1581"];
n535 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", label="CaseSensitive = caseSensitive", span="1583-1583"];
n536 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", label="HelpWriter = helpWriter", span="1584-1584"];
n537 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1581-1581"];
n538 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1593-1593"];
n539 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", label="CaseSensitive = caseSensitive", span="1595-1595"];
n540 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", label="MutuallyExclusive = mutuallyExclusive", span="1596-1596"];
n541 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1593-1593"];
n542 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1607-1607"];
n543 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", label="CaseSensitive = caseSensitive", span="1609-1609"];
n544 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", label="MutuallyExclusive = mutuallyExclusive", span="1610-1610"];
n545 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", label="HelpWriter = helpWriter", span="1611-1611"];
n546 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1607-1607"];
n547 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", label="Entry CommandLine.CommandLineParser.CommandLineParser(bool)", span="1643-1643"];
n548 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", label="_settings = new CommandLineParserSettings(\r\n                false, false, Console.Error)", span="1645-1646"];
n549 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", label="Exit CommandLine.CommandLineParser.CommandLineParser(bool)", span="1643-1643"];
n550 [cluster="CommandLine.CommandLineParser.CommandLineParser()", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1652-1652"];
n551 [cluster="CommandLine.CommandLineParser.CommandLineParser()", label="_settings = new CommandLineParserSettings()", span="1654-1654"];
n552 [cluster="CommandLine.CommandLineParser.CommandLineParser()", label="Exit CommandLine.CommandLineParser.CommandLineParser()", span="1652-1652"];
n553 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1663-1663"];
n554 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", label="Assumes.NotNull(settings, ''settings'')", span="1665-1665"];
n555 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", label="_settings = settings", span="1667-1667"];
n556 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1663-1663"];
n557 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1688-1688"];
n558 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", label="return ParseArguments(args, options, _settings.HelpWriter);", span="1690-1690"];
n559 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1688-1688"];
n560 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1706-1706"];
n561 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Assumes.NotNull(args, ''args'')", span="1708-1708"];
n562 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Assumes.NotNull(options, ''options'')", span="1709-1709"];
n563 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="1711-1711"];
n564 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="pair != null && helpWriter != null", span="1713-1713"];
n565 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="ParseHelp(args, pair.Right) || !DoParseArguments(args, options)", span="1715-1715"];
n567 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="1718-1718"];
n568 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="helpWriter.Write(helpText)", span="1719-1719"];
n571 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="return DoParseArguments(args, options);", span="1725-1725"];
n573 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1854-1854"];
n566 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="string helpText", span="1717-1717"];
n570 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="return true;", span="1722-1722"];
n574 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1772-1772"];
n575 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="Entry CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1728-1728"];
n569 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="return false;", span="1720-1720"];
n576 [cluster="System.IO.TextWriter.Write(string)", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
n572 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1706-1706"];
n577 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="bool hadError = false", span="1730-1730"];
n578 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="var optionMap = OptionInfo.CreateMap(options, _settings)", span="1731-1731"];
n580 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="var target = new TargetWrapper(options)", span="1733-1733"];
n581 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="IArgumentEnumerator arguments = new StringArrayEnumerator(args)", span="1735-1735"];
n587 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="ParserState result = parser.Parse(arguments, optionMap, options)", span="1744-1744"];
n589 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="SetPostParsingStateIfNeeded(options, parser.PostParsingState)", span="1747-1747"];
n596 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="hadError |= !optionMap.EnforceRules()", span="1767-1767"];
n579 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="optionMap.SetDefaults()", span="1732-1732"];
n593 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="target.IsValueListDefined", span="1755-1755"];
n594 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="!target.AddValueItemIfAllowed(argument)", span="1757-1757"];
n582 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="arguments.MoveNext()", span="1736-1736"];
n583 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="string argument = arguments.Current", span="1738-1738"];
n592 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="arguments.MoveNext()", span="1753-1753"];
n584 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="argument != null && argument.Length > 0", span="1739-1739"];
n585 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="ArgumentParser parser = ArgumentParser.Create(argument)", span="1741-1741"];
n586 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="parser != null", span="1742-1742"];
n588 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="(result & ParserState.Failure) == ParserState.Failure", span="1745-1745"];
n591 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="(result & ParserState.MoveOnNextElement) == ParserState.MoveOnNextElement", span="1752-1752"];
n590 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="hadError = true", span="1748-1748"];
n599 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", label="Entry CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", span="1795-1795"];
n595 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="hadError = true", span="1759-1759"];
n597 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="return !hadError;", span="1769-1769"];
n598 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1728-1728"];
n600 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="bool caseSensitive = _settings.CaseSensitive", span="1774-1774"];
n602 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="i < args.Length", span="1776-1776"];
n603 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="!string.IsNullOrEmpty(helpOption.ShortName)", span="1778-1778"];
n604 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="ArgumentParser.CompareShort(args[i], helpOption.ShortName, caseSensitive)", span="1780-1780"];
n606 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="!string.IsNullOrEmpty(helpOption.LongName)", span="1784-1784"];
n607 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="ArgumentParser.CompareLong(args[i], helpOption.LongName, caseSensitive)", span="1786-1786"];
n601 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="int i = 0", span="1776-1776"];
n609 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="i++", span="1776-1776"];
n610 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="return false;", span="1791-1791"];
n605 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="return true;", span="1781-1781"];
n608 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="return true;", span="1787-1787"];
n611 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1772-1772"];
n612 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", label="options is CommandLineOptionsBase", span="1797-1797"];
n613 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", label="((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.AddRange(state)", span="1798-1798"];
n614 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", label="Exit CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", span="1795-1795"];
n615 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
n616 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", label="value == null", span="1809-1809"];
n617 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", label="throw new ArgumentNullException(paramName);", span="1810-1810"];
n618 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", label="Exit CommandLine.Assumes.NotNull<T>(T, string)", span="1806-1806"];
n619 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", label="string.IsNullOrEmpty(value)", span="1815-1815"];
n620 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", label="throw new ArgumentException(paramName);", span="1816-1816"];
n621 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", label="Exit CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1813-1813"];
n622 [cluster="System.ArgumentException.ArgumentException(string)", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
n623 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", label="Entry CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1819-1819"];
n624 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", label="array.Length == 0", span="1821-1821"];
n625 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", label="throw new ArgumentOutOfRangeException(paramName);", span="1822-1822"];
n626 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", label="Exit CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1819-1819"];
n627 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
n628 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="IList<Pair<PropertyInfo, TAttribute>> list = new List<Pair<PropertyInfo, TAttribute>>()", span="1831-1831"];
n629 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="target != null", span="1832-1832"];
n630 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="var propertiesInfo = target.GetType().GetProperties()", span="1834-1834"];
n637 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="list.Add(new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute))", span="1845-1845"];
n638 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="return list;", span="1851-1851"];
n631 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label=propertiesInfo, span="1836-1836"];
n640 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n641 [cluster="System.Type.GetProperties()", label="Entry System.Type.GetProperties()", span="0-0"];
n632 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="property != null && (property.CanRead && property.CanWrite)", span="1838-1838"];
n633 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="var setMethod = property.GetSetMethod()", span="1840-1840"];
n635 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1843-1843"];
n634 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="setMethod != null && !setMethod.IsStatic", span="1841-1841"];
n642 [cluster="System.Reflection.PropertyInfo.GetSetMethod()", label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0"];
n636 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="attribute != null", span="1844-1844"];
n643 [cluster="System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", label="Entry System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", span="0-0"];
n639 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1828-1828"];
n644 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="var info = target.GetType().GetMethods()", span="1857-1857"];
n645 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label=info, span="1859-1859"];
n652 [cluster="System.Type.GetMethods()", label="Entry System.Type.GetMethods()", span="0-0"];
n646 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="!method.IsStatic", span="1861-1861"];
n650 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="return null;", span="1870-1870"];
n647 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1863-1864"];
n649 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="return new Pair<MethodInfo, TAttribute>(method, (TAttribute)attribute);", span="1866-1866"];
n648 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="attribute != null", span="1865-1865"];
n651 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1854-1854"];
n653 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1873-1873"];
n654 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="var info = target.GetType().GetMethods()", span="1876-1876"];
n655 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label=info, span="1878-1878"];
n656 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="!method.IsStatic", span="1880-1880"];
n660 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="return null;", span="1889-1889"];
n657 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1882-1883"];
n658 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="attribute != null", span="1884-1884"];
n659 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="return (TAttribute)attribute;", span="1885-1885"];
n661 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1873-1873"];
n662 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1892-1892"];
n663 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="IList<TAttribute> list = new List<TAttribute>()", span="1895-1895"];
n664 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="var info = target.GetType().GetProperties()", span="1896-1896"];
n671 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="list.Add((TAttribute)attribute)", span="1907-1907"];
n672 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="return list;", span="1912-1912"];
n665 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label=info, span="1898-1898"];
n666 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="property != null && (property.CanRead && property.CanWrite)", span="1900-1900"];
n667 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="var setMethod = property.GetSetMethod()", span="1902-1902"];
n669 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1905-1905"];
n668 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="setMethod != null && !setMethod.IsStatic", span="1903-1903"];
n670 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="attribute != null", span="1906-1906"];
n673 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1892-1892"];
n674 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", label="return type.IsGenericType && type.GetGenericTypeDefinition().Equals(typeof(Nullable<>));", span="1917-1917"];
n675 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", label="Exit CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1915-1915"];
n676 [cluster="System.Type.GetGenericTypeDefinition()", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
n677 [cluster="System.Type.Equals(System.Type)", label="Entry System.Type.Equals(System.Type)", span="0-0"];
n678 [cluster="CommandLine.StringUtil.Spaces(int)", label="Entry CommandLine.StringUtil.Spaces(int)", span="1923-1923"];
n679 [cluster="CommandLine.StringUtil.Spaces(int)", label="return new String(' ', count);", span="1925-1925"];
n680 [cluster="CommandLine.StringUtil.Spaces(int)", label="Exit CommandLine.StringUtil.Spaces(int)", span="1923-1923"];
n681 [cluster="string.String(char, int)", label="Entry string.String(char, int)", span="0-0"];
d381 [cluster="CommandLine.OptionInfo.SetDefault(object)", color=green, community=0, label="_property.SetValue(options, _defaultValue, null)", prediction=0, span="998-998"];
d382 [cluster="CommandLine.OptionInfo.SetDefault(object)", color=green, community=0, label=Exception, prediction=1, span="1000-1000"];
d383 [cluster="CommandLine.OptionInfo.SetDefault(object)", color=green, community=0, label="throw new CommandLineParserException(''Bad default value.'', e);", prediction=2, span="1002-1002"];
m0_10 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="63-63"];
m0_11 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="65-65"];
m0_12 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-s'', ''something'' }, options)", span="66-66"];
m0_14 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''something'', options.StringValue)", span="69-69"];
m0_15 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="70-70"];
m0_13 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="68-68"];
m0_16 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="63-63"];
m0_162 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="282-282"];
m0_163 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="284-284"];
m0_164 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--int'' }, options)", span="285-285"];
m0_165 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="287-287"];
m0_166 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="282-282"];
m0_0 [cluster="CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", span="44-44"];
m0_1 [cluster="CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", span="44-44"];
m0_123 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="var options = new MixedCaseOptions()", span="222-222"];
m0_80 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
m0_118 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--extend'' }, options)", span="211-211"];
m0_90 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="CommandLineParserFixture.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m0_91 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", span="35-35"];
m0_7 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="57-57"];
m0_8 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="base.Parser.ParseArguments(new string[] { }, null)", span="59-59"];
m0_9 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="57-57"];
m0_72 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="145-145"];
m0_73 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithEnum()", span="147-147"];
m0_74 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-s'', ''data.bin'', ''-a'', ''ReadWrite'' }, options)", span="149-149"];
m0_76 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''data.bin'', options.StringValue)", span="152-152"];
m0_77 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(FileAccess.ReadWrite, options.FileAccess)", span="153-153"];
m0_78 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="154-154"];
m0_75 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="151-151"];
m0_79 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="145-145"];
m0_147 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="255-255"];
m0_148 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="257-257"];
m0_149 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--string'' }, options)", span="258-258"];
m0_150 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="260-260"];
m0_151 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="255-255"];
m0_29 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="88-88"];
m0_30 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="var options = new BooleanSetOptions()", span="90-90"];
m0_31 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-ca'', ''-d65'' }, options)", span="91-91"];
m0_33 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Assert.IsTrue(options.BooleanThree)", span="94-94"];
m0_34 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Assert.IsTrue(options.BooleanOne)", span="95-95"];
m0_35 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Assert.IsFalse(options.BooleanTwo)", span="96-96"];
m0_36 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(65, options.NonBooleanValue)", span="97-97"];
m0_37 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="98-98"];
m0_32 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="93-93"];
m0_38 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="88-88"];
m0_67 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="135-135"];
m0_68 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="137-137"];
m0_69 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Assert.IsFalse(base.Parser.ParseArguments(new string[] { ''-i=10'' }, options))", span="139-139"];
m0_70 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="140-140"];
m0_71 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="135-135"];
m0_52 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="116-116"];
m0_53 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithOptionList()", span="118-118"];
m0_54 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] {\r\n                                ''-k'', ''string1:stringTwo:stringIII'', ''-s'', ''test-file.txt'' }, options)", span="119-120"];
m0_56 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''string1'', options.SearchKeywords[0])", span="123-123"];
m0_57 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.SearchKeywords[0])", span="124-124"];
m0_58 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''stringTwo'', options.SearchKeywords[1])", span="125-125"];
m0_59 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.SearchKeywords[1])", span="126-126"];
m0_60 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''stringIII'', options.SearchKeywords[2])", span="127-127"];
m0_61 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.SearchKeywords[2])", span="128-128"];
m0_62 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''test-file.txt'', options.StringValue)", span="129-129"];
m0_63 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.StringValue)", span="130-130"];
m0_55 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="122-122"];
m0_64 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="116-116"];
m0_17 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", span="58-58"];
m0_177 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="309-309"];
m0_178 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="311-311"];
m0_179 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--double'' }, options)", span="312-312"];
m0_180 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="314-314"];
m0_181 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="309-309"];
m0_6 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLineParserFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1474-1474"];
m0_137 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="241-241"];
m0_138 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="ICommandLineParser local = new CommandLineParser(new CommandLineParserSettings(false))", span="243-243"];
m0_139 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="var options = new MixedCaseOptions()", span="244-244"];
m0_140 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="bool result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="245-245"];
m0_142 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''alfa'', options.AlfaValue)", span="248-248"];
m0_143 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''beta'', options.BetaValue)", span="249-249"];
m0_141 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="247-247"];
m0_144 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="241-241"];
m0_19 [cluster="System.Console.WriteLine(object)", file="CommandLineParserFixture.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m0_39 [cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", span="35-35"];
m0_65 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", span="35-35"];
m0_121 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.Parser.ParseArguments(new string[] {}, options)", prediction=3, span="214-214"];
m0_122 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", span="211-211"];
m0_124 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="bool result = local.ParseArguments(new string[] { ''-a'', ''alfa'', ''--beta-OPTION'', ''beta'' }, options)", span="223-223"];
m0_126 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''alfa'', options.AlfaValue)", span="226-226"];
m0_127 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''beta'', options.BetaValue)", span="227-227"];
m0_125 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="225-225"];
m0_128 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", span="219-219"];
m0_81 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", span="158-158"];
m0_82 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="160-160"];
m0_83 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="161-161"];
m0_88 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="168-168"];
m0_84 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="162-162"];
m0_85 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-d'', ''10,986'' }, options)", span="163-163"];
m0_87 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(10.986, options.DoubleValue)", span="166-166"];
m0_86 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="165-165"];
m0_89 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", span="158-158"];
m0_116 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", color=green, community=0, file="CommandLineParserFixture.cs", label="Assert.AreEqual(new double[] { 1.1, 2.2, 3.3 }, options.DoubleArrayValue)", prediction=4, span="206-206"];
m0_117 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", span="198-198"];
m0_119 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", span="211-211"];
m0_120 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithBadDefaults()", prediction=5, span="213-213"];
m0_20 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="74-74"];
m0_21 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="76-76"];
m0_22 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="77-78"];
m0_24 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''another string'', options.StringValue)", span="81-81"];
m0_25 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(100, options.IntegerValue)", span="82-82"];
m0_26 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(true, options.BooleanValue)", span="83-83"];
m0_27 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="84-84"];
m0_23 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="80-80"];
m0_28 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="74-74"];
m0_188 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="330-330"];
m0_189 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithValueList()", span="332-332"];
m0_190 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-sparser.xml'', ''-'', ''--switch'' }, options)", span="333-333"];
m0_192 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''parser.xml'', options.StringValue)", span="336-336"];
m0_193 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(true, options.BooleanValue)", span="337-337"];
m0_194 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(1, options.Items.Count)", span="338-338"];
m0_195 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''-'', options.Items[0])", span="339-339"];
m0_191 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="335-335"];
m0_196 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="330-330"];
m0_129 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParserFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1652-1652"];
m0_18 [cluster="Unk.AreEqual", file="CommandLineParserFixture.cs", label="Entry Unk.AreEqual", span=""];
m0_41 [cluster="Unk.IsFalse", file="CommandLineParserFixture.cs", label="Entry Unk.IsFalse", span=""];
m0_115 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", color=green, community=0, file="CommandLineParserFixture.cs", label="Assert.AreEqual(new int[] { 4, 5, 6 }, options.IntegerArrayValue)", prediction=4, span="205-205"];
m0_131 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="231-231"];
m0_132 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="ICommandLineParser local = new CommandLineParser()", span="233-233"];
m0_133 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="var options = new MixedCaseOptions()", span="234-234"];
m0_134 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="bool result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="235-235"];
m0_135 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="237-237"];
m0_136 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="231-231"];
m0_145 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParserFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1663-1663"];
m0_2 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="50-50"];
m0_3 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="base.Parser.ParseArguments(null, new SimpleOptions())", span="52-52"];
m0_4 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="50-50"];
m0_197 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35"];
m0_109 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", span="33-33"];
m0_182 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="320-320"];
m0_183 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="322-322"];
m0_184 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--string'', ''-'' }, options)", span="323-323"];
m0_186 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''-'', options.StringValue)", span="326-326"];
m0_185 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="325-325"];
m0_187 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="320-320"];
m0_5 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="35-35"];
m0_66 [cluster="System.Console.WriteLine(string)", file="CommandLineParserFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m0_42 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="102-102"];
m0_43 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="var options = new BooleanSetOptions()", span="104-104"];
m0_44 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-b'', ''--double=9'' }, options)", span="105-105"];
m0_46 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Assert.IsTrue(options.BooleanTwo)", span="108-108"];
m0_47 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Assert.IsFalse(options.BooleanOne)", span="109-109"];
m0_48 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Assert.IsFalse(options.BooleanThree)", span="110-110"];
m0_49 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(9, options.NonBooleanValue)", span="111-111"];
m0_50 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="112-112"];
m0_45 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="107-107"];
m0_51 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="102-102"];
m0_152 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="264-264"];
m0_153 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="266-266"];
m0_154 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--byte'' }, options)", span="267-267"];
m0_155 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="269-269"];
m0_156 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="264-264"];
m0_167 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="291-291"];
m0_168 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="293-293"];
m0_169 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--long'' }, options)", span="294-294"];
m0_170 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="296-296"];
m0_171 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="291-291"];
m0_130 [cluster="CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", span="33-33"];
m0_110 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", span="199-199"];
m0_111 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", prediction=4, span="201-201"];
m0_112 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", color=green, community=0, file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-x'' }, options)", prediction=8, span="202-202"];
m0_114 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", color=green, community=0, file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", prediction=4, span="199-199"];
m0_113 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", prediction=3, span="204-204"];
m0_92 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", span="172-172"];
m0_93 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="174-174"];
m0_94 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="175-175"];
m0_99 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="182-182"];
m0_95 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="176-176"];
m0_96 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--n-double'', ''12,32982'' }, options)", span="177-177"];
m0_98 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(12.32982, options.NullableDoubleValue)", span="180-180"];
m0_97 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="179-179"];
m0_100 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", span="172-172"];
m0_172 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="300-300"];
m0_173 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="302-302"];
m0_174 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--float'' }, options)", span="303-303"];
m0_175 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="305-305"];
m0_176 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="300-300"];
m0_101 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", span="186-186"];
m0_102 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithDefaults()", span="188-188"];
m0_103 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] {}, options)", span="189-189"];
m0_105 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''str'', options.StringValue)", span="192-192"];
m0_106 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(9, options.IntegerValue)", span="193-193"];
m0_107 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(true, options.BooleanValue)", span="194-194"];
m0_104 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="191-191"];
m0_108 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", span="186-186"];
m0_157 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="273-273"];
m0_158 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="275-275"];
m0_159 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--short'' }, options)", span="276-276"];
m0_160 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="278-278"];
m0_161 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="273-273"];
m0_40 [cluster="Unk.IsTrue", file="CommandLineParserFixture.cs", label="Entry Unk.IsTrue", span=""];
m0_198 [file="CommandLineParserFixture.cs", label="CommandLine.Tests.CommandLineParserFixture", span=""];
m2_125 [cluster="string.Format(System.IFormatProvider, string, object)", file="HelpTextFixture.cs", label="Entry string.Format(System.IFormatProvider, string, object)", span="0-0"];
m2_158 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", span="312-312"];
m2_159 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="314-314"];
m2_160 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''0'', ''-ap'' }, options)", span="316-317"];
m2_161 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="Assert.IsFalse(result)", span="319-319"];
m2_162 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", span="312-312"];
m2_169 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", span="334-334"];
m2_170 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="string optionHelp = null", span="337-337"];
m2_171 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="e.Option.ShortName", span="339-339"];
m2_176 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="e.Option.Required", span="350-350"];
m2_178 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="e.Option.HelpText = optionHelp", span="353-353"];
m2_172 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="''v''", span="341-341"];
m2_174 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="''i''", span="345-345"];
m2_173 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Kommentar umfassend Operationen.''", span="342-342"];
m2_175 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Gibt den Eingang an zu bearbeitenden Datei.''", span="346-346"];
m2_177 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Erforderlich. '' + optionHelp", span="351-351"];
m2_179 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", span="334-334"];
m2_152 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="290-290"];
m2_138 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="279-279"];
m2_139 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", color=green, community=0, file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", prediction=11, span="281-281"];
m2_140 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", color=green, community=0, file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''abc'' }, options)", prediction=12, span="283-284"];
m2_141 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", color=green, community=1, file="HelpTextFixture.cs", label="Assert.IsFalse(result)", prediction=11, span="286-286"];
m2_144 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=green, community=0, file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", prediction=11, span="1663-1663"];
m2_142 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", color=green, community=0, file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", prediction=12, span="279-279"];
m2_143 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", color=green, community=0, file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", prediction=16, span="88-88"];
m2_145 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", color=green, community=0, file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", prediction=17, span="1568-1568"];
m2_146 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", color=green, community=0, file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", prediction=11, span="1688-1688"];
m2_147 [cluster="Unk.IsFalse", color=green, community=0, file="HelpTextFixture.cs", label="Entry Unk.IsFalse", prediction=19, span=""];
m2_148 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", color=green, community=0, file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", prediction=11, span="290-290"];
m2_149 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", color=green, community=0, file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", prediction=21, span="292-292"];
m2_150 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\n                new string[] { ''-j0'' }, options)", span="294-295"];
m2_164 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", span="323-323"];
m2_165 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="325-325"];
m2_166 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''zero'', ''-pa'' }, options)", span="327-328"];
m2_167 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="Assert.IsFalse(result)", span="330-330"];
m2_168 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", span="323-323"];
m2_58 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="172-172"];
m2_59 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="_helpText.MaximumDisplayWidth = 40", span="174-174"];
m2_60 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="_helpText.AddOptions(new MockOptionsWithLongDescriptionAndNoSpaces())", span="175-175"];
m2_61 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="string help = _helpText.ToString()", span="176-176"];
m2_62 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="178-178"];
m2_63 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  v, verbose    Before '', lines[2])", span="179-179"];
m2_64 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''                012345678901234567890123'', lines[3])", span="180-180"];
m2_65 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''                After'', lines[4])", span="181-181"];
m2_66 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  input-file    Before '', lines[5])", span="182-182"];
m2_67 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''                012345678901234567890123'', lines[6])", span="183-183"];
m2_68 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''                456789 After'', lines[7])", span="184-184"];
m2_69 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="172-172"];
m2_21 [cluster="CommandLine.Text.HelpText.AddOptions(object)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="648-648"];
m2_121 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="456-456"];
m2_134 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", span="270-270"];
m2_135 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="var local = new HelpText()", span="272-272"];
m2_136 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="Assert.AreEqual('''', local.ToString())", span="274-274"];
m2_137 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", span="270-270"];
m2_20 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="623-623"];
m2_151 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="Assert.IsFalse(result)", span="297-297"];
m2_19 [cluster="string.Concat(string, string)", file="HelpTextFixture.cs", label="Entry string.Concat(string, string)", span="0-0"];
m2_86 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", span="208-208"];
m2_87 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="var local = new HelpText(''Customizing Test.'')", span="210-210"];
m2_88 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.FormatOptionHelpText += new EventHandler<FormatOptionHelpTextEventArgs>(CustomizeOptionsFormat_FormatOptionHelpText)", span="211-211"];
m2_89 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="212-212"];
m2_90 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsWithDescription())", span="213-213"];
m2_91 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="214-214"];
m2_92 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="216-216"];
m2_93 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="218-218"];
m2_94 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="220-220"];
m2_95 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Customizing Test.'', lines[0])", span="221-221"];
m2_96 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Pre-Options.'', lines[1])", span="222-222"];
m2_97 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  v, verbose       Kommentar umfassend Operationen.'', lines[3])", span="223-223"];
m2_98 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  i, input-file    Erforderlich. Gibt den Eingang an zu bearbeitenden Datei.'', lines[4])", span="224-224"];
m2_99 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Post-Options.'', lines[6])", span="225-225"];
m2_100 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", span="208-208"];
m2_153 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="301-301"];
m2_154 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="303-303"];
m2_155 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\n                new string[] { ''-i0'' }, options)", span="305-306"];
m2_156 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="Assert.IsFalse(result)", span="308-308"];
m2_157 [cluster="System.IO.StringWriter.ToString()", file="HelpTextFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m2_14 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="486-486"];
m2_16 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="HelpTextFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="185-185"];
m2_57 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescription.MockOptionsWithLongDescription()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescription.MockOptionsWithLongDescription()", span="64-64"];
m2_102 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", span="55-55"];
m2_42 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="832-832"];
m2_25 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", span="130-130"];
m2_26 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="_helpText.AddPreOptionsLine(string.Empty)", span="132-132"];
m2_27 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", span="130-130"];
m2_15 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="304-304"];
m2_45 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", span="156-156"];
m2_46 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="_helpText.MaximumDisplayWidth = 40", span="158-158"];
m2_47 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="_helpText.AddOptions(new MockOptionsWithLongDescription())", span="159-159"];
m2_48 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="string help = _helpText.ToString()", span="160-160"];
m2_49 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new[] {Environment.NewLine}, StringSplitOptions.None)", span="162-162"];
m2_50 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[2], ''  v, verbose    This is the description'', ''The first line should have the arguments and the start of the Help Text.'')", span="163-163"];
m2_52 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[3], ''                of the verbosity to '', formattingMessage)", span="165-165"];
m2_53 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[4], ''                test out the wrapping '', formattingMessage)", span="166-166"];
m2_54 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[5], ''                capabilities of the '', formattingMessage)", span="167-167"];
m2_55 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[6], ''                Help Text.'', formattingMessage)", span="168-168"];
m2_51 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="string formattingMessage = ''Beyond the second line should be formatted as though it's in a column.''", span="164-164"];
m2_56 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", span="156-156"];
m2_123 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="172-172"];
m2_44 [cluster="Unk.AreEqual", file="HelpTextFixture.cs", label="Entry Unk.AreEqual", span=""];
m2_41 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="638-638"];
m2_122 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="292-292"];
m2_18 [cluster="string.IsNullOrEmpty(string)", file="HelpTextFixture.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m2_126 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="252-252"];
m2_127 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="var local = new HelpText {\n				AddDashesToOption = true,\n		    	Heading = new HeadingInfo(''AddOptionsWithDashes''),\n	        	Copyright = new CopyrightInfo(''Author'', DateTime.Now.Year)\n			}", span="254-258"];
m2_128 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsSimple())", span="259-259"];
m2_129 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="261-261"];
m2_130 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="263-263"];
m2_131 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="265-265"];
m2_132 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  -s, --something    Input something here.'', lines[3])", span="266-266"];
m2_133 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="252-252"];
m2_17 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", span="709-709"];
m2_101 [cluster="EventHandler<FormatOptionHelpTextEventArgs>.cstr", file="HelpTextFixture.cs", label="Entry EventHandler<FormatOptionHelpTextEventArgs>.cstr", span=""];
m2_71 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="188-188"];
m2_72 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="var local = new HelpText(''Heading Info.'')", span="190-190"];
m2_73 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.MaximumDisplayWidth = 40", span="191-191"];
m2_74 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')", span="192-192"];
m2_75 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptions())", span="193-193"];
m2_76 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="194-194"];
m2_77 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="196-196"];
m2_78 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="198-198"];
m2_79 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Before '', lines[1])", span="199-199"];
m2_80 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''0123456789012345678901234567890123456789'', lines[2])", span="200-200"];
m2_81 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''012 After'', lines[3])", span="201-201"];
m2_82 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Before '', lines[lines.Length - 3])", span="202-202"];
m2_83 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''0123456789012345678901234567890123456789'', lines[lines.Length - 2])", span="203-203"];
m2_84 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual('' After'', lines[lines.Length - 1])", span="204-204"];
m2_85 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="188-188"];
m2_0 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="97-97"];
m2_1 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="var help = new HelpText(new HeadingInfo(''unittest'', ''1.9''))", span="99-99"];
m2_2 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AdditionalNewLineAfterOption = true", span="100-100"];
m2_3 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.Copyright = new CopyrightInfo(''CommandLine.dll Author'', 2005, 2011)", span="101-101"];
m2_4 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="string errors = help.RenderParsingErrorsText(this, 2)", span="104-104"];
m2_6 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(string.Concat(Environment.NewLine, ''ERROR(S):''))", span="107-107"];
m2_7 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(errors)", span="108-108"];
m2_8 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''This is free software. You may redistribute copies of it under the terms of'')", span="111-111"];
m2_9 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''the MIT License <http://www.opensource.org/licenses/mit-license.php>.'')", span="112-112"];
m2_10 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''Usage: Please run the unit...'')", span="113-113"];
m2_11 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddOptions(this)", span="114-114"];
m2_12 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="return help;", span="116-116"];
m2_5 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="!string.IsNullOrEmpty(errors)", span="105-105"];
m2_13 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="97-97"];
m2_103 [cluster="System.Console.WriteLine(string)", file="HelpTextFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m2_40 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", span="46-46"];
m2_70 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", span="73-73"];
m2_28 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="139-139"];
m2_29 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="var local = new HelpText(''Heading Info.'')", span="141-141"];
m2_30 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''This is a first pre-options line.'')", span="142-142"];
m2_31 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''This is a second pre-options line.'')", span="143-143"];
m2_32 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptions())", span="144-144"];
m2_33 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''This is a first post-options line.'')", span="145-145"];
m2_34 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''This is a second post-options line.'')", span="146-146"];
m2_35 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="148-148"];
m2_36 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="150-150"];
m2_37 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[lines.Length - 2], ''This is a first post-options line.'')", span="151-151"];
m2_38 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[lines.Length - 1], ''This is a second post-options line.'')", span="152-152"];
m2_39 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="139-139"];
m2_22 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="124-124"];
m2_23 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="_helpText = new HelpText(new HeadingInfo(_ThisAssembly.Title, _ThisAssembly.Version))", span="126-126"];
m2_24 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="124-124"];
m2_124 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", span="82-82"];
m2_163 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1607-1607"];
m2_43 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m2_104 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="229-229"];
m2_105 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="var year = DateTime.Now.Year", span="231-231"];
m2_106 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="var local = new HelpText()", span="232-232"];
m2_108 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.Copyright = new CopyrightInfo(''Author'', year)", span="234-234"];
m2_116 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Assert.AreEqual(string.Format(CultureInfo.InvariantCulture, ''Copyright (C) {0} Author'', year), lines[1])", span="245-245"];
m2_107 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.Heading = new HeadingInfo(''Parameterless Constructor Test.'')", span="233-233"];
m2_109 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="235-235"];
m2_110 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsSimple())", span="236-236"];
m2_111 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="237-237"];
m2_112 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="239-239"];
m2_113 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="241-241"];
m2_114 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="243-243"];
m2_115 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Parameterless Constructor Test.'', lines[0])", span="244-244"];
m2_117 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Pre-Options.'', lines[2])", span="246-246"];
m2_118 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  s, something    Input something here.'', lines[4])", span="247-247"];
m2_119 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Post-Options.'', lines[6])", span="248-248"];
m2_120 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="229-229"];
m2_180 [file="HelpTextFixture.cs", label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", span=""];
m2_181 [file="HelpTextFixture.cs", label="CommandLine.Text.Tests.HelpTextFixture", span=""];
m3_65 [cluster="System.Nullable<T>.ToString()", file="Program.cs", label="Entry System.Nullable<T>.ToString()", span="0-0"];
m3_67 [cluster="System.Console.WriteLine()", file="Program.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m3_66 [cluster="System.Console.WriteLine(string, object)", file="Program.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m3_38 [cluster="System.Environment.Exit(int)", file="Program.cs", label="Entry System.Environment.Exit(int)", span="0-0"];
m3_75 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="Program.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string)", span="367-367"];
m3_16 [cluster="CommandLine.Text.HelpText.AddOptions(object)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="648-648"];
m3_11 [cluster="CommandLine.Text.HelpText.HelpText()", file="Program.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="456-456"];
m3_14 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="623-623"];
m3_25 [cluster="string.Concat(string, string)", file="Program.cs", label="Entry string.Concat(string, string)", span="0-0"];
m3_12 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="Program.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="185-185"];
m3_70 [cluster="System.Enum.ToString()", file="Program.cs", label="Entry System.Enum.ToString()", span="0-0"];
m3_73 [cluster="System.Text.StringBuilder.Remove(int, int)", file="Program.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m3_24 [cluster="string.IsNullOrEmpty(string)", file="Program.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m3_69 [cluster="string.ToLowerInvariant()", file="Program.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m3_15 [cluster="string.Format(string, object)", file="Program.cs", label="Entry string.Format(string, object)", span="0-0"];
m3_36 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="Program.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1568-1568"];
m3_23 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", file="Program.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", span="709-709"];
m3_0 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="Entry SampleApp.Program.Options.GetUsage()", span="101-101"];
m3_1 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="var help = new HelpText { Heading = Program._headingInfo,\n					Copyright = new CopyrightInfo(''Giacomo Stelluti Scala'', 2005, 2012),\n                	AdditionalNewLineAfterOption = true,\n					AddDashesToOption = true\n				}", span="103-107"];
m3_2 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="this.HandleParsingErrorsInHelp(help)", span="108-108"];
m3_3 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="help.AddPreOptionsLine(''This is free software. You may redistribute copies of it under the terms of'')", span="109-109"];
m3_4 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="help.AddPreOptionsLine(''the MIT License <http://www.opensource.org/licenses/mit-license.php>.'')", span="110-110"];
m3_5 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="help.AddPreOptionsLine(''Usage: SampleApp -rMyData.in -wMyData.out --calculate'')", span="111-111"];
m3_6 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="help.AddPreOptionsLine(string.Format(''       SampleApp -rMyData.in -i -j{0} file0.def file1.def'', 9.7))", span="112-112"];
m3_7 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="help.AddPreOptionsLine(''       SampleApp -rMath.xml -wReport.bin -o *;/;+;-'')", span="113-113"];
m3_8 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="help.AddOptions(this)", span="114-114"];
m3_9 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="return help;", span="116-116"];
m3_10 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="Exit SampleApp.Program.Options.GetUsage()", span="101-101"];
m3_72 [cluster="System.Text.StringBuilder.Append(string)", file="Program.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m3_74 [cluster="System.Text.StringBuilder.ToString()", file="Program.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m3_64 [cluster="System.Console.WriteLine(string)", file="Program.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m3_68 [cluster="bool.ToString()", file="Program.cs", label="Entry bool.ToString()", span="0-0"];
m3_34 [cluster="SampleApp.Program.Options.Options()", file="Program.cs", label="Entry SampleApp.Program.Options.Options()", span="55-55"];
m3_39 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Entry SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", span="153-153"];
m3_40 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.VerboseLevel == null", span="155-155"];
m3_42 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''verbose [on]: {0}'', (options.VerboseLevel < 0 || options.VerboseLevel > 2) ? ''#invalid value#'' : options.VerboseLevel.ToString())", span="158-158"];
m3_44 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''input file: {0} ...'', options.InputFile)", span="160-160"];
m3_45 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.DefinitionFiles", span="161-161"];
m3_47 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  start offset: {0}'', options.StartOffset)", span="165-165"];
m3_48 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  tabular data computation: {0}'', options.Calculate.ToString().ToLowerInvariant())", span="166-166"];
m3_49 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  on errors: {0}'', options.IgnoreErrors ? ''continue'' : ''stop processing'')", span="167-167"];
m3_50 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  optimize for: {0}'', options.Optimization.ToString().ToLowerInvariant())", span="168-168"];
m3_51 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.AllowedOperators != null", span="169-169"];
m3_54 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.AllowedOperators", span="173-173"];
m3_59 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="!string.IsNullOrEmpty(options.OutputFile)", span="181-181"];
m3_60 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="_headingInfo.WriteMessage(string.Format(''writing elaborated data: {0} ...'', options.OutputFile))", span="182-182"];
m3_41 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''verbose [off]'')", span="156-156"];
m3_43 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine()", span="159-159"];
m3_46 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  using definition file: {0}'', defFile)", span="163-163"];
m3_52 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="var builder = new StringBuilder()", span="171-171"];
m3_58 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine()", span="180-180"];
m3_53 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="builder.Append(''  allowed operators: '')", span="172-172"];
m3_55 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="builder.Append(op)", span="175-175"];
m3_56 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="builder.Append('', '')", span="176-176"];
m3_57 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(builder.Remove(builder.Length - 2, 2).ToString())", span="178-178"];
m3_61 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="_headingInfo.WriteMessage(''elaborated data:'')", span="185-185"];
m3_62 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''[...]'')", span="186-186"];
m3_63 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Exit SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", span="153-153"];
m3_71 [cluster="System.Text.StringBuilder.StringBuilder()", file="Program.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m3_13 [cluster="SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="Entry SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", span="119-119"];
m3_17 [cluster="SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="this.LastPostParsingState.Errors.Count > 0", span="121-121"];
m3_18 [cluster="SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="var errors = help.RenderParsingErrorsText(this, 2)", span="123-123"];
m3_20 [cluster="SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="help.AddPreOptionsLine(string.Concat(Environment.NewLine, ''ERROR(S):''))", span="126-126"];
m3_21 [cluster="SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="help.AddPreOptionsLine(errors)", span="127-127"];
m3_19 [cluster="SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="!string.IsNullOrEmpty(errors)", span="124-124"];
m3_22 [cluster="SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="Exit SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", span="119-119"];
m3_37 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="Program.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1688-1688"];
m3_26 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Entry SampleApp.Program.Main(string[])", span="138-138"];
m3_27 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="var options = new Options()", span="143-143"];
m3_29 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="!parser.ParseArguments(args, options)", span="145-145"];
m3_28 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="var parser = new CommandLineParser(new CommandLineParserSettings(Console.Error))", span="144-144"];
m3_31 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="DoCoreTask(options)", span="148-148"];
m3_30 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Environment.Exit(1)", span="146-146"];
m3_32 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Environment.Exit(0)", span="150-150"];
m3_33 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Exit SampleApp.Program.Main(string[])", span="138-138"];
m3_76 [file="Program.cs", label="SampleApp.Program.Options", span=""];
m4_6 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", file="RPEOptions.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", span="709-709"];
m4_0 [cluster="CommandLine.Tests.Mocks.RPEOptions.GetUsage()", file="RPEOptions.cs", label="Entry CommandLine.Tests.Mocks.RPEOptions.GetUsage()", span="18-18"];
m4_1 [cluster="CommandLine.Tests.Mocks.RPEOptions.GetUsage()", color=green, community=0, file="RPEOptions.cs", label="LastPostParsingState.Errors.Count > 0", prediction=22, span="20-20"];
m4_2 [cluster="CommandLine.Tests.Mocks.RPEOptions.GetUsage()", color=green, community=0, file="RPEOptions.cs", label="return new HelpText().RenderParsingErrorsText(this, 0);", prediction=22, span="22-22"];
m4_3 [cluster="CommandLine.Tests.Mocks.RPEOptions.GetUsage()", color=green, community=0, file="RPEOptions.cs", label="return '''';", prediction=24, span="24-24"];
m4_4 [cluster="CommandLine.Tests.Mocks.RPEOptions.GetUsage()", file="RPEOptions.cs", label="Exit CommandLine.Tests.Mocks.RPEOptions.GetUsage()", span="18-18"];
m4_5 [cluster="CommandLine.Text.HelpText.HelpText()", file="RPEOptions.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="456-456"];
m4_7 [file="RPEOptions.cs", label="CommandLine.Tests.Mocks.RPEOptions", span=""];
n683 -> n28  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
n686 -> n93  [color=darkseagreen4, key=1, label="CommandLine.ArgumentParser", style=dashed];
n688 -> n178  [color=darkseagreen4, key=1, label="CommandLine.LongOptionParser", style=dashed];
n688 -> n185  [color=darkseagreen4, key=1, label="CommandLine.LongOptionParser", style=dashed];
n688 -> n190  [color=darkseagreen4, key=1, label="CommandLine.LongOptionParser", style=dashed];
n688 -> n196  [color=darkseagreen4, key=1, label="CommandLine.LongOptionParser", style=dashed];
n688 -> n202  [color=darkseagreen4, key=1, label="CommandLine.LongOptionParser", style=dashed];
n689 -> n221  [color=darkseagreen4, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n689 -> n222  [color=darkseagreen4, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n689 -> n230  [color=darkseagreen4, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n689 -> n232  [color=darkseagreen4, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n689 -> n234  [color=darkseagreen4, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n690 -> n258  [color=darkseagreen4, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n690 -> n265  [color=darkseagreen4, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n690 -> n272  [color=darkseagreen4, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n690 -> n278  [color=darkseagreen4, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n691 -> n314  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n691 -> n315  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n691 -> n316  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n691 -> n317  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n691 -> n318  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n691 -> n328  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n691 -> n330  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n691 -> n340  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n691 -> n341  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n691 -> n342  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n691 -> n343  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n691 -> n344  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n691 -> n355  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n691 -> n356  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n691 -> n363  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n691 -> n364  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n691 -> n367  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n691 -> n368  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n691 -> n379  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n691 -> n380  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n691 -> d381  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n692 -> n387  [color=darkseagreen4, key=1, label="CommandLine.OptionMap.MutuallyExclusiveInfo", style=dashed];
n693 -> n391  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n693 -> n396  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n693 -> n401  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n693 -> n406  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n693 -> n407  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n693 -> n409  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n693 -> n411  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n693 -> n416  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n693 -> n418  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n693 -> n420  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n693 -> n421  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n693 -> n423  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n693 -> n429  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n693 -> n430  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n693 -> n431  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n694 -> n460  [color=darkseagreen4, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n697 -> n482  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n697 -> n483  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n697 -> n484  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n697 -> n491  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n697 -> n493  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n697 -> n494  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n697 -> n495  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n698 -> n503  [color=darkseagreen4, key=1, label="CommandLine.TargetWrapper", style=dashed];
n698 -> n507  [color=darkseagreen4, key=1, label="CommandLine.TargetWrapper", style=dashed];
n698 -> n509  [color=darkseagreen4, key=1, label="CommandLine.TargetWrapper", style=dashed];
n698 -> n510  [color=darkseagreen4, key=1, label="CommandLine.TargetWrapper", style=dashed];
n701 -> n558  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n701 -> n565  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n701 -> n571  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n23 -> n26  [color=darkseagreen4, key=1, label=string, style=dashed];
n44 -> n47  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n54 -> n59  [color=darkseagreen4, key=1, label=object, style=dashed];
n54 -> n60  [color=darkseagreen4, key=1, label=object, style=dashed];
n56 -> n59  [color=darkseagreen4, key=1, label=concreteType, style=dashed];
n56 -> n60  [color=darkseagreen4, key=1, label=property, style=dashed];
n67 -> n70  [color=darkseagreen4, key=1, label=list, style=dashed];
n75 -> n629  [color=darkseagreen4, key=1, label=object, style=dashed];
n77 -> n80  [color=darkseagreen4, key=1, label=list, style=dashed];
n82 -> n84  [color=darkseagreen4, key=1, label=pairZero, style=dashed];
n83 -> n85  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
n97 -> n100  [color=darkseagreen4, key=1, label=string, style=dashed];
n97 -> n102  [color=darkseagreen4, key=1, label=string, style=dashed];
n109 -> n111  [color=darkseagreen4, key=1, label=string, style=dashed];
n114 -> n116  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n114 -> n117  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n114 -> n118  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n114 -> n119  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n115 -> n118  [color=darkseagreen4, key=1, label=list, style=dashed];
n115 -> n121  [color=darkseagreen4, key=1, label=list, style=dashed];
n137 -> n140  [color=darkseagreen4, key=1, label=bool, style=dashed];
n163 -> n172  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n164 -> n172  [color=darkseagreen4, key=1, label=parts, style=dashed];
n164 -> n174  [color=darkseagreen4, key=1, label=parts, style=dashed];
n164 -> n182  [color=darkseagreen4, key=1, label=parts, style=dashed];
n164 -> n198  [color=darkseagreen4, key=1, label=parts, style=dashed];
n165 -> n167  [color=darkseagreen4, key=1, label=option, style=dashed];
n165 -> n170  [color=darkseagreen4, key=1, label=option, style=dashed];
n165 -> n171  [color=darkseagreen4, key=1, label=option, style=dashed];
n165 -> n175  [color=darkseagreen4, key=1, label=option, style=dashed];
n165 -> n178  [color=darkseagreen4, key=1, label=option, style=dashed];
n165 -> n180  [color=darkseagreen4, key=1, label=option, style=dashed];
n165 -> n185  [color=darkseagreen4, key=1, label=option, style=dashed];
n165 -> n187  [color=darkseagreen4, key=1, label=option, style=dashed];
n165 -> n190  [color=darkseagreen4, key=1, label=option, style=dashed];
n165 -> n192  [color=darkseagreen4, key=1, label=option, style=dashed];
n165 -> n196  [color=darkseagreen4, key=1, label=option, style=dashed];
n165 -> n202  [color=darkseagreen4, key=1, label=option, style=dashed];
n176 -> n179  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
n183 -> n186  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
n188 -> n191  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
n194 -> n197  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
n200 -> n203  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
n207 -> n315  [color=darkseagreen4, key=1, label=string, style=dashed];
n207 -> n317  [color=darkseagreen4, key=1, label=string, style=dashed];
n207 -> n318  [color=darkseagreen4, key=1, label=string, style=dashed];
n209 -> n329  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
n209 -> n330  [color=darkseagreen4, key=1, label=object, style=dashed];
n210 -> n364  [color=darkseagreen4, key=1, label=bool, style=dashed];
n216 -> n620  [color=darkseagreen4, key=1, label=string, style=dashed];
n242 -> n252  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n242 -> n267  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n242 -> n280  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n242 -> n282  [color=darkseagreen4, key=1, label=object, style=dashed];
n244 -> n252  [color=darkseagreen4, key=1, label=group, style=dashed];
n244 -> n254  [color=darkseagreen4, key=1, label=group, style=dashed];
n244 -> n262  [color=darkseagreen4, key=1, label=group, style=dashed];
n244 -> n280  [color=darkseagreen4, key=1, label=group, style=dashed];
n246 -> n250  [color=darkseagreen4, key=1, label=option, style=dashed];
n246 -> n251  [color=darkseagreen4, key=1, label=option, style=dashed];
n246 -> n255  [color=darkseagreen4, key=1, label=option, style=dashed];
n246 -> n258  [color=darkseagreen4, key=1, label=option, style=dashed];
n246 -> n260  [color=darkseagreen4, key=1, label=option, style=dashed];
n246 -> n265  [color=darkseagreen4, key=1, label=option, style=dashed];
n246 -> n269  [color=darkseagreen4, key=1, label=option, style=dashed];
n246 -> n272  [color=darkseagreen4, key=1, label=option, style=dashed];
n246 -> n274  [color=darkseagreen4, key=1, label=option, style=dashed];
n246 -> n278  [color=darkseagreen4, key=1, label=option, style=dashed];
n246 -> n282  [color=darkseagreen4, key=1, label=option, style=dashed];
n256 -> n259  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
n263 -> n266  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
n270 -> n273  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
n276 -> n279  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
n286 -> n297  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
n303 -> n306  [color=darkseagreen4, key=1, label=list, style=dashed];
n305 -> n310  [color=darkseagreen4, key=1, label=map, style=dashed];
n323 -> n342  [color=darkseagreen4, key=1, label=string, style=dashed];
n323 -> n344  [color=darkseagreen4, key=1, label=string, style=dashed];
n322 -> n356  [color=darkseagreen4, key=1, label=string, style=dashed];
n320 -> n368  [color=darkseagreen4, key=1, label=object, style=dashed];
n324 -> n329  [color=darkseagreen4, key=1, label=elementType, style=dashed];
n325 -> n327  [color=darkseagreen4, key=1, label=array, style=dashed];
n325 -> n329  [color=darkseagreen4, key=1, label=array, style=dashed];
n325 -> n330  [color=darkseagreen4, key=1, label=array, style=dashed];
n326 -> n329  [color=darkseagreen4, key=1, label=i, style=dashed];
n326 -> n333  [color=darkseagreen4, key=1, label=i, style=dashed];
n333 -> n333  [color=darkseagreen4, key=1, label=i, style=dashed];
n354 -> n356  [color=darkseagreen4, key=1, label=nc, style=dashed];
n369 -> n373  [color=darkseagreen4, key=1, label=fieldRef, style=dashed];
n370 -> n372  [color=darkseagreen4, key=1, label=values, style=dashed];
n370 -> n373  [color=darkseagreen4, key=1, label=values, style=dashed];
n371 -> n373  [color=darkseagreen4, key=1, label=i, style=dashed];
n371 -> n374  [color=darkseagreen4, key=1, label=i, style=dashed];
n374 -> n374  [color=darkseagreen4, key=1, label=i, style=dashed];
n378 -> d381  [color=green, key=1, label=object, style=dashed];
n409 -> n411  [color=darkseagreen4, key=1, label=option, style=dashed];
n415 -> n439  [color=darkseagreen4, key=1, label="bool?", style=dashed];
n415 -> n441  [color=darkseagreen4, key=1, label="bool?", style=dashed];
n415 -> n443  [color=darkseagreen4, key=1, label=object, style=dashed];
n418 -> n420  [color=darkseagreen4, key=1, label=option, style=dashed];
n421 -> n423  [color=darkseagreen4, key=1, label=info, style=dashed];
n427 -> n430  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n428 -> n430  [color=darkseagreen4, key=1, label=setName, style=dashed];
n428 -> n431  [color=darkseagreen4, key=1, label=setName, style=dashed];
n436 -> n443  [color=darkseagreen4, key=1, label=error, style=dashed];
n451 -> n453  [color=darkseagreen4, key=1, label=leftHash, style=dashed];
n457 -> n460  [color=darkseagreen4, key=1, label=other, style=dashed];
n477 -> n617  [color=darkseagreen4, key=1, label=string, style=dashed];
n506 -> n510  [color=darkseagreen4, key=1, label=string, style=dashed];
n560 -> n562  [color=darkseagreen4, key=1, label=object, style=dashed];
n560 -> n564  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
n560 -> n565  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n560 -> n567  [color=darkseagreen4, key=1, label=object, style=dashed];
n560 -> n568  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
n560 -> n571  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n563 -> n565  [color=darkseagreen4, key=1, label=pair, style=dashed];
n563 -> n567  [color=darkseagreen4, key=1, label=pair, style=dashed];
n574 -> n602  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n574 -> n603  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n574 -> n604  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n574 -> n606  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n574 -> n607  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n575 -> n589  [color=darkseagreen4, key=1, label=object, style=dashed];
n580 -> n593  [color=darkseagreen4, key=1, label=target, style=dashed];
n580 -> n594  [color=darkseagreen4, key=1, label=target, style=dashed];
n581 -> n592  [color=darkseagreen4, key=1, label=arguments, style=dashed];
n587 -> n591  [color=darkseagreen4, key=1, label=result, style=dashed];
n583 -> n594  [color=darkseagreen4, key=1, label=argument, style=dashed];
n585 -> n589  [color=darkseagreen4, key=1, label=parser, style=dashed];
n599 -> n613  [color=darkseagreen4, key=1, label=object, style=dashed];
n600 -> n604  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
n600 -> n607  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
n601 -> n604  [color=darkseagreen4, key=1, label=i, style=dashed];
n601 -> n607  [color=darkseagreen4, key=1, label=i, style=dashed];
n601 -> n609  [color=darkseagreen4, key=1, label=i, style=dashed];
n609 -> n609  [color=darkseagreen4, key=1, label=i, style=dashed];
n623 -> n625  [color=darkseagreen4, key=1, label=string, style=dashed];
n628 -> n637  [color=darkseagreen4, key=1, label=list, style=dashed];
n628 -> n638  [color=darkseagreen4, key=1, label=list, style=dashed];
n631 -> n637  [color=darkseagreen4, key=1, label=property, style=dashed];
n635 -> n637  [color=darkseagreen4, key=1, label=attribute, style=dashed];
n645 -> n647  [color=darkseagreen4, key=1, label=method, style=dashed];
n645 -> n649  [color=darkseagreen4, key=1, label=method, style=dashed];
n647 -> n649  [color=darkseagreen4, key=1, label=attribute, style=dashed];
n655 -> n657  [color=darkseagreen4, key=1, label=method, style=dashed];
n657 -> n659  [color=darkseagreen4, key=1, label=attribute, style=dashed];
n663 -> n671  [color=darkseagreen4, key=1, label=list, style=dashed];
n663 -> n672  [color=darkseagreen4, key=1, label=list, style=dashed];
n669 -> n671  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m0_11 -> m0_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_11 -> m0_15  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_123 -> m0_126  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_123 -> m0_127  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_73 -> m0_76  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_73 -> m0_77  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_73 -> m0_78  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_30 -> m0_33  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_30 -> m0_34  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_30 -> m0_35  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_30 -> m0_36  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_30 -> m0_37  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_68 -> m0_70  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_53 -> m0_56  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_53 -> m0_57  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_53 -> m0_58  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_53 -> m0_59  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_53 -> m0_60  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_53 -> m0_61  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_53 -> m0_62  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_53 -> m0_63  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_139 -> m0_142  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_139 -> m0_143  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_84 -> m0_87  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_21 -> m0_24  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_21 -> m0_25  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_21 -> m0_26  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_21 -> m0_27  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_189 -> m0_192  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_189 -> m0_193  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_189 -> m0_194  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_189 -> m0_195  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_183 -> m0_186  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_43 -> m0_46  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_43 -> m0_47  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_43 -> m0_48  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_43 -> m0_49  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_43 -> m0_50  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_111 -> m0_114  [color=green, key=1, label=options, style=dashed];
m0_111 -> m0_115  [color=green, key=1, label=options, style=dashed];
m0_111 -> m0_116  [color=green, key=1, label=options, style=dashed];
m0_95 -> m0_98  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_102 -> m0_105  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_102 -> m0_106  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_102 -> m0_107  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_198 -> m0_3  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_8  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_13  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_23  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_32  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_45  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_55  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_69  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_75  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_86  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_97  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_104  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_113  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_119  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_125  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_135  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_141  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_150  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_155  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_160  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_165  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_170  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_175  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_180  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_185  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_191  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_198 -> m0_121  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_169 -> m2_171  [color=darkseagreen4, key=1, label="CommandLine.Text.FormatOptionHelpTextEventArgs", style=dashed];
m2_169 -> m2_176  [color=darkseagreen4, key=1, label="CommandLine.Text.FormatOptionHelpTextEventArgs", style=dashed];
m2_139 -> m2_141  [color=green, key=1, label=sw, style=dashed];
m2_139 -> m2_144  [color=green, key=1, label=sw, style=dashed];
m2_140 -> m2_142  [color=green, key=1, label=options, style=dashed];
m2_144 -> m2_146  [color=green, key=1, label=outsw, style=dashed];
m2_146 -> m2_148  [color=green, key=1, label=lines, style=dashed];
m2_62 -> m2_64  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_62 -> m2_65  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_62 -> m2_66  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_62 -> m2_67  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_62 -> m2_68  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_87 -> m2_89  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_87 -> m2_90  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_87 -> m2_91  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_94 -> m2_96  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_94 -> m2_97  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_94 -> m2_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_94 -> m2_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_49 -> m2_52  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_49 -> m2_53  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_49 -> m2_54  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_49 -> m2_55  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_51 -> m2_53  [color=darkseagreen4, key=1, label=formattingMessage, style=dashed];
m2_51 -> m2_54  [color=darkseagreen4, key=1, label=formattingMessage, style=dashed];
m2_51 -> m2_55  [color=darkseagreen4, key=1, label=formattingMessage, style=dashed];
m2_72 -> m2_74  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_72 -> m2_75  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_72 -> m2_76  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_78 -> m2_80  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_78 -> m2_81  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_78 -> m2_82  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_78 -> m2_83  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_78 -> m2_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_1 -> m2_6  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_1 -> m2_7  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_1 -> m2_8  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_1 -> m2_9  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_1 -> m2_10  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_1 -> m2_11  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_1 -> m2_12  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_4 -> m2_7  [color=darkseagreen4, key=1, label=errors, style=dashed];
m2_29 -> m2_31  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_29 -> m2_32  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_29 -> m2_33  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_29 -> m2_34  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_36 -> m2_38  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_105 -> m2_116  [color=darkseagreen4, key=1, label=year, style=dashed];
m2_106 -> m2_109  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_106 -> m2_110  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_106 -> m2_111  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_114 -> m2_116  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_114 -> m2_117  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_114 -> m2_118  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_114 -> m2_119  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_180 -> m2_11  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", style=dashed];
m2_181 -> m2_26  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m2_181 -> m2_47  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m2_181 -> m2_60  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m3_1 -> m3_3  [color=darkseagreen4, key=1, label=help, style=dashed];
m3_1 -> m3_4  [color=darkseagreen4, key=1, label=help, style=dashed];
m3_1 -> m3_5  [color=darkseagreen4, key=1, label=help, style=dashed];
m3_1 -> m3_6  [color=darkseagreen4, key=1, label=help, style=dashed];
m3_1 -> m3_7  [color=darkseagreen4, key=1, label=help, style=dashed];
m3_1 -> m3_8  [color=darkseagreen4, key=1, label=help, style=dashed];
m3_1 -> m3_9  [color=darkseagreen4, key=1, label=help, style=dashed];
m3_39 -> m3_42  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_39 -> m3_44  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_39 -> m3_45  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_39 -> m3_47  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_39 -> m3_48  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_39 -> m3_49  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_39 -> m3_50  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_39 -> m3_51  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_39 -> m3_54  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_39 -> m3_59  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_39 -> m3_60  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_52 -> m3_55  [color=darkseagreen4, key=1, label=builder, style=dashed];
m3_52 -> m3_56  [color=darkseagreen4, key=1, label=builder, style=dashed];
m3_52 -> m3_57  [color=darkseagreen4, key=1, label=builder, style=dashed];
m3_13 -> m3_20  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m3_13 -> m3_21  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m3_18 -> m3_21  [color=darkseagreen4, key=1, label=errors, style=dashed];
m3_26 -> m3_29  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_27 -> m3_29  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_27 -> m3_31  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_76 -> m3_2  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_76 -> m3_8  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_76 -> m3_17  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m4_7 -> m4_1  [color=green, key=1, label="CommandLine.Tests.Mocks.RPEOptions", style=dashed];
m4_7 -> m4_2  [color=green, key=1, label="CommandLine.Tests.Mocks.RPEOptions", style=dashed];
}
