digraph  {
d1 [label="_shortName = shortName", span="51-51", cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char, string)", color=green, community=0];
d25 [label="CommandLine.BaseOptionAttribute", span=""];
d0 [label="Entry CommandLine.BaseOptionAttribute.BaseOptionAttribute(char, string)", span="49-49", cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char, string)"];
d2 [label="_shortName.Value.IsWhiteSpace() || _shortName.Value.IsLineTerminator()", span="52-52", cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char, string)", color=green, community=0];
d4 [label="UniqueName = new string(shortName, 1)", span="56-56", cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char, string)", color=green, community=0];
d5 [label="LongName = longName", span="57-57", cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char, string)", color=green, community=0];
d10 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)"];
d6 [label="Exit CommandLine.BaseOptionAttribute.BaseOptionAttribute(char, string)", span="49-49", cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char, string)"];
d3 [label="throw new ArgumentException(SR.ArgumentException_NoWhiteSpaceOrLineTerminatorInShortName, ''shortName'');", span="54-54", cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char, string)", color=green, community=0];
d7 [label="Entry char.IsWhiteSpace()", span="60-60", cluster="char.IsWhiteSpace()"];
d8 [label="Entry char.IsLineTerminator()", span="77-77", cluster="char.IsLineTerminator()"];
d9 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)"];
d12 [label="_shortName = shortName", span="68-68", cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char?, string)"];
d13 [label="_shortName != null", span="69-69", cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char?, string)"];
d14 [label="_shortName.Value.IsWhiteSpace() || _shortName.Value.IsLineTerminator()", span="71-71", cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char?, string)"];
d16 [label="UniqueName = new string(_shortName.Value, 1)", span="75-75", cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char?, string)"];
d17 [label="LongName = longName", span="77-77", cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char?, string)"];
d18 [label="UniqueName != null", span="78-78", cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char?, string)"];
d20 [label="LongName == null", span="82-82", cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char?, string)"];
d22 [label="UniqueName = LongName", span="86-86", cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char?, string)"];
d15 [label="throw new ArgumentException(SR.ArgumentException_NoWhiteSpaceOrLineTerminatorInShortName, ''shortName'');", span="73-73", cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char?, string)"];
d11 [label="Entry CommandLine.BaseOptionAttribute.BaseOptionAttribute(char?, string)", span="66-66", cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char?, string)"];
d19 [label="return;", span="80-80", cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char?, string)"];
d21 [label="throw new ArgumentNullException(''longName'', SR.ArgumentNullException_LongNameCannotBeNullWhenShortNameIsUndefined);", span="84-84", cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char?, string)"];
d23 [label="Exit CommandLine.BaseOptionAttribute.BaseOptionAttribute(char?, string)", span="66-66", cluster="CommandLine.BaseOptionAttribute.BaseOptionAttribute(char?, string)"];
d24 [label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string, string)"];
d1 -> d2  [key=0, style=solid, color=green];
d25 -> d1  [key=1, style=dashed, color=green, label="CommandLine.BaseOptionAttribute"];
d25 -> d4  [key=1, style=dashed, color=green, label="CommandLine.BaseOptionAttribute"];
d25 -> d5  [key=1, style=dashed, color=green, label="CommandLine.BaseOptionAttribute"];
d25 -> d2  [key=1, style=dashed, color=green, label="CommandLine.BaseOptionAttribute"];
d25 -> d12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.BaseOptionAttribute"];
d25 -> d13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.BaseOptionAttribute"];
d25 -> d14  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.BaseOptionAttribute"];
d25 -> d16  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.BaseOptionAttribute"];
d25 -> d17  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.BaseOptionAttribute"];
d25 -> d18  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.BaseOptionAttribute"];
d25 -> d20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.BaseOptionAttribute"];
d25 -> d22  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.BaseOptionAttribute"];
d0 -> d1  [key=0, style=solid, color=green];
d0 -> d4  [key=1, style=dashed, color=green, label=char];
d0 -> d5  [key=1, style=dashed, color=green, label=string];
d2 -> d4  [key=0, style=solid, color=green];
d2 -> d3  [key=0, style=solid, color=green];
d2 -> d7  [key=2, style=dotted, color=green];
d2 -> d8  [key=2, style=dotted, color=green];
d4 -> d5  [key=0, style=solid, color=green];
d4 -> d10  [key=2, style=dotted, color=green];
d5 -> d6  [key=0, style=solid, color=green];
d6 -> d0  [key=0, style=bold, color=blue];
d3 -> d6  [key=0, style=solid, color=green];
d3 -> d9  [key=2, style=dotted, color=green];
d12 -> d13  [key=0, style=solid];
d13 -> d14  [key=0, style=solid];
d13 -> d17  [key=0, style=solid];
d14 -> d7  [key=2, style=dotted];
d14 -> d8  [key=2, style=dotted];
d14 -> d15  [key=0, style=solid];
d14 -> d16  [key=0, style=solid];
d16 -> d10  [key=2, style=dotted];
d16 -> d17  [key=0, style=solid];
d17 -> d18  [key=0, style=solid];
d18 -> d19  [key=0, style=solid];
d18 -> d20  [key=0, style=solid];
d20 -> d21  [key=0, style=solid];
d20 -> d22  [key=0, style=solid];
d22 -> d23  [key=0, style=solid];
d15 -> d9  [key=2, style=dotted];
d15 -> d23  [key=0, style=solid];
d11 -> d12  [key=0, style=solid];
d11 -> d17  [key=1, style=dashed, color=darkseagreen4, label=string];
d19 -> d23  [key=0, style=solid];
d21 -> d23  [key=0, style=solid];
d21 -> d24  [key=2, style=dotted];
d23 -> d11  [key=0, style=bold, color=blue];
}
