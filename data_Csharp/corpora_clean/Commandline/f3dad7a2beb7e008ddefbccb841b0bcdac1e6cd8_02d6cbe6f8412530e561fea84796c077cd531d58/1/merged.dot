digraph  {
m0_51 [label="onFail()", span="197-197", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="ErrorHandling.cs"];
m0_9 [label="var firstArg = arguments.First()", span="24-24", cluster="lambda expression", file="ErrorHandling.cs", color=green, community=0];
m0_10 [label="Func<string, bool> preprocCompare = command =>\r\n                        nameComparer.Equals(command, firstArg) ||\r\n                        nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="26-28", cluster="lambda expression", file="ErrorHandling.cs", color=green, community=0];
m0_11 [label="var verbs = Verb.SelectFromTypes(types)", span="30-30", cluster="lambda expression", file="ErrorHandling.cs", color=green, community=0];
m0_12 [label="return preprocCompare(''help'')\r\n                    ? MakeNotParsed(types,\r\n                        MakeHelpVerbRequestedError(verbs,\r\n                            arguments.Skip(1).FirstOrDefault() ?? string.Empty, nameComparer))\r\n                    : preprocCompare(''version'')\r\n                        ? MakeNotParsed(types, new VersionRequestedError())\r\n                        : MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture, nonFatalErrors);", span="32-38", cluster="lambda expression", file="ErrorHandling.cs", color=green, community=0];
m0_7 [label="Exit CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="67-67", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="ErrorHandling.cs"];
m0_62 [label="object verbInstance = null", span="227-227", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", color=green, community=0, file="ErrorHandling.cs"];
m0_63 [label="!DoParseArgumentsVerbs(args, options, ref verbInstance)", span="229-229", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ErrorHandling.cs"];
m0_217 [label="Entry CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", span="85-85", cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="ErrorHandling.cs"];
m0_31 [label="Entry CommandLine.Parser.DoParseArguments(string[], object)", span="304-304", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs"];
m0_225 [label="Entry CommandLine.Text.HelpText.AutoBuild(object, System.Action<CommandLine.Text.HelpText>, bool)", span="277-277", cluster="CommandLine.Text.HelpText.AutoBuild(object, System.Action<CommandLine.Text.HelpText>, bool)", file="ErrorHandling.cs"];
m0_30 [label="Exit CommandLine.Parser.ParseArguments(string[], object)", span="134-134", cluster="CommandLine.Parser.ParseArguments(string[], object)", file="ErrorHandling.cs"];
m0_34 [label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="158-158", cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="ErrorHandling.cs"];
m0_29 [label="return DoParseArguments(args, options);", span="139-139", cluster="CommandLine.Parser.ParseArguments(string[], object)", file="ErrorHandling.cs"];
m0_148 [label="Entry CommandLine.Infrastructure.StringArrayEnumerator.StringArrayEnumerator(string[])", span="36-36", cluster="CommandLine.Infrastructure.StringArrayEnumerator.StringArrayEnumerator(string[])", file="ErrorHandling.cs"];
m0_26 [label="Entry string.Concat(string, string)", span="0-0", cluster="string.Concat(string, string)", file="ErrorHandling.cs"];
m0_27 [label="return verbs.Any(a => nameComparer.Equals(a.Item1.Name, arguments.First()))\r\n                ? InstanceBuilder.Build(\r\n                    Maybe.Just<Func<object>>(\r\n                        () =>\r\n                            verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2.AutoDefault()),\r\n                    tokenizer,\r\n                    arguments.Skip(1),\r\n                    nameComparer,\r\n                    parsingCulture,\r\n                    nonFatalErrors)\r\n                : MakeNotParsed(verbs.Select(v => v.Item2), new BadVerbSelectedError(arguments.First()));", span="54-64", cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ErrorHandling.cs", color=green, community=0];
m0_28 [label="Exit CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="46-46", cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ErrorHandling.cs"];
m0_118 [label="Entry CommandLine.Helpers.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="86-86", cluster="CommandLine.Helpers.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ErrorHandling.cs"];
m0_44 [label="nameComparer.Equals(v.Item1.Name, arguments.First())", span="58-58", cluster="lambda expression", file="ErrorHandling.cs", color=green, community=0];
m0_45 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="ErrorHandling.cs"];
m0_46 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="ErrorHandling.cs"];
m0_47 [label="v.Item2", span="64-64", cluster="lambda expression", file="ErrorHandling.cs", color=green, community=0];
m0_48 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="ErrorHandling.cs"];
m0_49 [label="return verb.Length > 0\r\n                ? verbs.SingleOrDefault(v => nameComparer.Equals(v.Item1.Name, verb))\r\n                        .ToMaybe()\r\n                        .Return(\r\n                            v => new HelpVerbRequestedError(v.Item1.Name, v.Item2, true),\r\n                            new HelpVerbRequestedError(null, null, false))\r\n                : new HelpVerbRequestedError(null, null, false);", span="72-78", cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="ErrorHandling.cs", color=green, community=0];
m0_53 [label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="408-408", cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="ErrorHandling.cs"];
m0_50 [label="Exit CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="67-67", cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="ErrorHandling.cs"];
m0_52 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="ErrorHandling.cs"];
m0_54 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="ErrorHandling.cs"];
m0_149 [label="Entry CommandLine.Infrastructure.StringArrayEnumerator.MoveNext()", span="91-91", cluster="CommandLine.Infrastructure.StringArrayEnumerator.MoveNext()", file="ErrorHandling.cs"];
m0_120 [label="Entry CommandLine.Parser.DoParseArgumentsCore(string[], object)", span="326-326", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_123 [label="var hadError = false", span="328-328", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_124 [label="var optionMap = OptionMap.Create(options, _settings)", span="329-329", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_126 [label="var valueMapper = new ValueMapper(options, _settings.ParsingCulture)", span="331-331", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_127 [label="var arguments = new StringArrayEnumerator(args)", span="333-333", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_133 [label="var result = parser.Parse(arguments, optionMap, options)", span="345-345", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_135 [label="SetParserStateIfNeeded(options, parser.PostParsingState)", span="348-348", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_142 [label="hadError |= !optionMap.EnforceRules()", span="367-367", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_125 [label="optionMap.SetDefaults()", span="330-330", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_139 [label="valueMapper.CanReceiveValues", span="358-358", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_140 [label="!valueMapper.MapValueItem(argument)", span="360-360", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_128 [label="arguments.MoveNext()", span="334-334", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_129 [label="var argument = arguments.Current", span="336-336", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_138 [label="arguments.MoveNext()", span="355-355", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_130 [label="string.IsNullOrEmpty(argument)", span="337-337", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_131 [label="var parser = ArgumentParser.Create(argument, _settings.IgnoreUnknownArguments)", span="342-342", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_132 [label="parser != null", span="343-343", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_134 [label="(result & PresentParserState.Failure) == PresentParserState.Failure", span="346-346", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_137 [label="(result & PresentParserState.MoveOnNextElement) == PresentParserState.MoveOnNextElement", span="353-353", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_136 [label="hadError = true", span="349-349", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_141 [label="hadError = true", span="362-362", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_143 [label="return !hadError;", span="369-369", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_144 [label="Exit CommandLine.Parser.DoParseArgumentsCore(string[], object)", span="326-326", cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs"];
m0_151 [label="Entry CommandLine.Infrastructure.ArgumentParser.Parse(CommandLine.Infrastructure.IArgumentEnumerator, CommandLine.Infrastructure.OptionMap, object)", span="99-99", cluster="CommandLine.Infrastructure.ArgumentParser.Parse(CommandLine.Infrastructure.IArgumentEnumerator, CommandLine.Infrastructure.OptionMap, object)", file="ErrorHandling.cs"];
m0_21 [label="Exit lambda expression", span="90-96", cluster="lambda expression", file="ErrorHandling.cs"];
m0_19 [label="with.HelpWriter = Console.Error", span="94-94", cluster="lambda expression", file="ErrorHandling.cs"];
m0_194 [label="Entry CommandLine.Infrastructure.ArgumentParser.CompareShort(string, char?, bool)", span="43-43", cluster="CommandLine.Infrastructure.ArgumentParser.CompareShort(string, char?, bool)", file="ErrorHandling.cs"];
m0_86 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="ErrorHandling.cs"];
m0_42 [label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="ErrorHandling.cs"];
m0_237 [label="Entry CommandLine.ParserSettings.Dispose()", span="173-173", cluster="CommandLine.ParserSettings.Dispose()", file="ErrorHandling.cs"];
m0_176 [label="Entry CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="482-482", cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ErrorHandling.cs"];
m0_210 [label="string helpText", span="484-484", cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ErrorHandling.cs"];
m0_211 [label="verb == null", span="485-485", cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ErrorHandling.cs"];
m0_212 [label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, null, out helpText)", span="487-487", cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ErrorHandling.cs"];
m0_213 [label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, verb, out helpText)", span="491-491", cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ErrorHandling.cs"];
m0_214 [label="_settings.HelpWriter != null", span="494-494", cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ErrorHandling.cs"];
m0_215 [label="_settings.HelpWriter.Write(helpText)", span="496-496", cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ErrorHandling.cs"];
m0_216 [label="Exit CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="482-482", cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ErrorHandling.cs"];
m0_101 [label="Entry CommandLine.ParserState.ParserState()", span="34-34", cluster="CommandLine.ParserState.ParserState()", file="ErrorHandling.cs"];
m0_15 [label="Exit CommandLine.Parser.Parser(bool)", span="89-89", cluster="CommandLine.Parser.Parser(bool)", file="ErrorHandling.cs"];
m0_55 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="ErrorHandling.cs"];
m0_218 [label="_settings.HelpWriter == null ||\r\n                options.HasHelp() ||\r\n                options.HasVerbHelp()", span="502-504", cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="ErrorHandling.cs"];
m0_220 [label="_settings.HelpWriter.Write(\r\n                HelpText.AutoBuild(\r\n                    options,\r\n                    current => HelpText.DefaultParsingErrorsHandler(options, current),\r\n                    options.HasVerbs()))", span="510-514", cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="ErrorHandling.cs"];
m0_219 [label="return;", span="506-506", cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="ErrorHandling.cs"];
m0_221 [label="Exit CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", span="500-500", cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="ErrorHandling.cs"];
m0_61 [label="Assumes.NotNull(options, ''onVerbCommand'', SR.ArgumentNullException_OnVerbDelegateCannotBeNull)", span="225-225", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ErrorHandling.cs"];
m0_119 [label="Entry CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="425-425", cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ErrorHandling.cs"];
m0_184 [label="var caseSensitive = _settings.CaseSensitive", span="427-427", cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ErrorHandling.cs"];
m0_185 [label=args, span="428-428", cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ErrorHandling.cs"];
m0_186 [label="helpOption.ShortName != null", span="430-430", cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ErrorHandling.cs"];
m0_187 [label="ArgumentParser.CompareShort(arg, helpOption.ShortName, caseSensitive)", span="432-432", cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ErrorHandling.cs"];
m0_189 [label="string.IsNullOrEmpty(helpOption.LongName)", span="438-438", cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ErrorHandling.cs"];
m0_190 [label="ArgumentParser.CompareLong(arg, helpOption.LongName, caseSensitive)", span="443-443", cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ErrorHandling.cs"];
m0_192 [label="return false;", span="449-449", cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ErrorHandling.cs"];
m0_188 [label="return true;", span="434-434", cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ErrorHandling.cs"];
m0_191 [label="return true;", span="445-445", cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ErrorHandling.cs"];
m0_193 [label="Exit CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="425-425", cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ErrorHandling.cs"];
m0_58 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="ErrorHandling.cs"];
m0_59 [label="new HelpVerbRequestedError(v.Item1.Name, v.Item2, true)", span="76-76", cluster="lambda expression", file="ErrorHandling.cs", color=green, community=0];
m0_60 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="ErrorHandling.cs"];
m0_64 [label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163", cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ErrorHandling.cs"];
m0_65 [label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34", cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="ErrorHandling.cs"];
m0_66 [label="System.Collections.Generic.IEnumerable<string>", span="", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ErrorHandling.cs"];
m0_68 [label="System.Collections.Generic.IEnumerable<System.Type>", span="", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ErrorHandling.cs"];
m0_70 [label="System.Globalization.CultureInfo", span="", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ErrorHandling.cs"];
m0_67 [label="System.StringComparer", span="", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ErrorHandling.cs"];
m0_69 [label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", span="", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ErrorHandling.cs"];
m0_71 [label="System.Collections.Generic.IEnumerable<CommandLine.ErrorType>", span="", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ErrorHandling.cs"];
m0_72 [label=firstArg, span="", cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ErrorHandling.cs"];
m0_223 [label="Entry object.HasVerbHelp()", span="44-44", cluster="object.HasVerbHelp()", file="ErrorHandling.cs"];
m0_183 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="ErrorHandling.cs"];
m0_150 [label="Entry CommandLine.Infrastructure.ArgumentParser.Create(string, bool)", span="59-59", cluster="CommandLine.Infrastructure.ArgumentParser.Create(string, bool)", file="ErrorHandling.cs"];
m0_107 [label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="306-306", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs"];
m0_110 [label="ParseHelp(args, pair.Right) || !DoParseArgumentsCore(args, options)", span="312-312", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs"];
m0_112 [label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="315-315", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs"];
m0_116 [label="return DoParseArgumentsCore(args, options);", span="323-323", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs"];
m0_108 [label="var helpWriter = _settings.HelpWriter", span="307-307", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs"];
m0_109 [label="pair != null && helpWriter != null", span="309-309", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs"];
m0_113 [label="helpWriter.Write(helpText)", span="316-316", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs"];
m0_111 [label="string helpText", span="314-314", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs"];
m0_115 [label="return true;", span="320-320", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs"];
m0_114 [label="return false;", span="317-317", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs"];
m0_117 [label="Exit CommandLine.Parser.DoParseArguments(string[], object)", span="304-304", cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs"];
m0_56 [label="nameComparer.Equals(v.Item1.Name, verb)", span="73-73", cluster="lambda expression", file="ErrorHandling.cs", color=green, community=0];
m0_25 [label="Entry CommandLine.Parser.Dispose(bool)", span="517-517", cluster="CommandLine.Parser.Dispose(bool)", file="ErrorHandling.cs"];
m0_41 [label="Entry CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", span="372-372", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_16 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="ErrorHandling.cs"];
m0_17 [label="with.CaseSensitive = false", span="92-92", cluster="lambda expression", file="ErrorHandling.cs"];
m0_18 [label="with.MutuallyExclusive = false", span="93-93", cluster="lambda expression", file="ErrorHandling.cs"];
m0_20 [label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="457-457", cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="ErrorHandling.cs"];
m0_227 [label="HelpText.DefaultParsingErrorsHandler(options, current)", span="513-513", cluster="lambda expression", file="ErrorHandling.cs"];
m0_226 [label="Entry lambda expression", span="513-513", cluster="lambda expression", file="ErrorHandling.cs"];
m0_228 [label="Exit lambda expression", span="513-513", cluster="lambda expression", file="ErrorHandling.cs"];
m0_8 [label="Entry CommandLine.Helpers.Assumes.NotNull<T>(T, string, string)", span="40-40", cluster="CommandLine.Helpers.Assumes.NotNull<T>(T, string, string)", file="ErrorHandling.cs"];
m0_23 [label="Dispose(false)", span="105-105", cluster="CommandLine.Parser.~Parser()", color=green, community=0, file="ErrorHandling.cs"];
m0_22 [label="Entry CommandLine.Parser.~Parser()", span="103-103", cluster="CommandLine.Parser.~Parser()", file="ErrorHandling.cs"];
m0_24 [label="Exit CommandLine.Parser.~Parser()", span="103-103", cluster="CommandLine.Parser.~Parser()", file="ErrorHandling.cs"];
m0_13 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="ErrorHandling.cs"];
m0_35 [label="Assumes.NotNull(options, ''onVerbCommand'', SR.ArgumentNullException_OnVerbDelegateCannotBeNull)", span="159-159", cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="ErrorHandling.cs"];
m0_38 [label="onVerbCommand(args.FirstOrDefault() ?? string.Empty, result ? verbInstance : null)", span="165-165", cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="ErrorHandling.cs"];
m0_36 [label="object verbInstance = null", span="161-161", cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", color=green, community=0, file="ErrorHandling.cs"];
m0_37 [label="var result = DoParseArgumentsVerbs(args, options, ref verbInstance)", span="163-163", cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="ErrorHandling.cs"];
m0_39 [label="return result;", span="167-167", cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", color=green, community=0, file="ErrorHandling.cs"];
m0_40 [label="Exit CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", span="155-155", cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="ErrorHandling.cs"];
m0_43 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="ErrorHandling.cs"];
m0_57 [label="Entry System.Action.Invoke()", span="0-0", cluster="System.Action.Invoke()", file="ErrorHandling.cs"];
m0_154 [label="var verbs = ReflectionUtil.RetrievePropertyList<VerbOptionAttribute>(options)", span="374-374", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_155 [label="var helpInfo = ReflectionUtil.RetrieveMethod<HelpVerbOptionAttribute>(options)", span="375-375", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_156 [label="args.Length == 0", span="376-376", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_158 [label="DisplayHelpVerbText(options, helpInfo, null)", span="380-380", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_160 [label="var optionMap = OptionMap.Create(options, verbs, _settings)", span="386-386", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_161 [label="TryParseHelpVerb(args, options, helpInfo, optionMap)", span="389-389", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_163 [label="var verbOption = optionMap[args.First()]", span="395-395", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_166 [label="DisplayHelpVerbText(options, helpInfo, null)", span="402-402", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_168 [label="verbInstance = verbOption.GetValue(options)", span="408-408", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_170 [label="verbInstance = verbOption.CreateInstance(options)", span="412-412", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_171 [label="var verbResult = DoParseArgumentsCore(args.Skip(1).ToArray(), verbInstance)", span="415-415", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_173 [label="DisplayHelpVerbText(options, helpInfo, args.First())", span="419-419", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_157 [label="helpInfo != null || _settings.HelpWriter != null", span="378-378", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_165 [label="helpInfo != null", span="400-400", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_172 [label="!verbResult && helpInfo != null", span="416-416", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_159 [label="return false;", span="383-383", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_162 [label="return false;", span="392-392", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_164 [label="verbOption == null", span="398-398", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_167 [label="return false;", span="405-405", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_169 [label="verbInstance == null", span="409-409", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_174 [label="return verbResult;", span="422-422", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_175 [label="Exit CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", span="372-372", cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs"];
m0_179 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ErrorHandling.cs"];
m0_182 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="ErrorHandling.cs"];
m0_180 [label="Entry CommandLine.Infrastructure.OptionInfo.GetValue(object)", span="141-141", cluster="CommandLine.Infrastructure.OptionInfo.GetValue(object)", file="ErrorHandling.cs"];
m0_6 [label="_settings = settings", span="71-71", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="ErrorHandling.cs"];
m0_224 [label="Entry object.HasVerbs()", span="34-34", cluster="object.HasVerbs()", file="ErrorHandling.cs"];
m0_32 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ErrorHandling.cs"];
m0_33 [label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="382-382", cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="ErrorHandling.cs"];
m0_104 [label="Entry CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", span="299-299", cluster="CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", file="ErrorHandling.cs"];
m0_105 [label="return settings.CaseSensitive ? StringComparison.Ordinal : StringComparison.OrdinalIgnoreCase;", span="301-301", cluster="CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", file="ErrorHandling.cs"];
m0_106 [label="Exit CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", span="299-299", cluster="CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", file="ErrorHandling.cs"];
m0_122 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)", file="ErrorHandling.cs"];
m0_78 [label="Entry CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", span="262-262", cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ErrorHandling.cs"];
m0_79 [label="found = false", span="264-264", cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ErrorHandling.cs"];
m0_80 [label="string.IsNullOrEmpty(verb)", span="265-265", cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ErrorHandling.cs"];
m0_81 [label="return target;", span="267-267", cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ErrorHandling.cs"];
m0_82 [label="var pair = ReflectionUtil.RetrieveOptionProperty<VerbOptionAttribute>(target, verb)", span="270-270", cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ErrorHandling.cs"];
m0_84 [label="return found ? pair.Left.GetValue(target, null) : target;", span="272-272", cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ErrorHandling.cs"];
m0_83 [label="found = pair != null", span="271-271", cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ErrorHandling.cs"];
m0_85 [label="Exit CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", span="262-262", cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ErrorHandling.cs"];
m0_152 [label="Entry CommandLine.Infrastructure.ValueMapper.MapValueItem(string)", span="68-68", cluster="CommandLine.Infrastructure.ValueMapper.MapValueItem(string)", file="ErrorHandling.cs"];
m0_153 [label="Entry CommandLine.Infrastructure.OptionMap.EnforceRules()", span="162-162", cluster="CommandLine.Infrastructure.OptionMap.EnforceRules()", file="ErrorHandling.cs"];
m0_178 [label="Entry CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", span="452-452", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs"];
m0_196 [label="var helpWriter = _settings.HelpWriter", span="454-454", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs"];
m0_197 [label="helpInfo != null && helpWriter != null", span="455-455", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs"];
m0_198 [label="string.Compare(args[0], helpInfo.Right.LongName, GetStringComparison(_settings)) == 0", span="457-457", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs"];
m0_199 [label="var verb = args.FirstOrDefault()", span="460-460", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs"];
m0_201 [label="var verbOption = optionMap[verb]", span="463-463", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs"];
m0_203 [label="verbOption.GetValue(options) == null", span="466-466", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs"];
m0_204 [label="verbOption.CreateInstance(options)", span="469-469", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs"];
m0_205 [label="DisplayHelpVerbText(options, helpInfo, verb)", span="474-474", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs"];
m0_207 [label="return false;", span="479-479", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs"];
m0_200 [label="verb != null", span="461-461", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs"];
m0_202 [label="verbOption != null", span="464-464", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs"];
m0_206 [label="return true;", span="475-475", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs"];
m0_208 [label="Exit CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", span="452-452", cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs"];
m0_177 [label="Entry CommandLine.Infrastructure.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.ParserSettings)", span="135-135", cluster="CommandLine.Infrastructure.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.ParserSettings)", file="ErrorHandling.cs"];
m0_147 [label="Entry CommandLine.Infrastructure.ValueMapper.ValueMapper(object, System.Globalization.CultureInfo)", span="45-45", cluster="CommandLine.Infrastructure.ValueMapper.ValueMapper(object, System.Globalization.CultureInfo)", file="ErrorHandling.cs"];
m0_89 [label="Entry CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="275-275", cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ErrorHandling.cs"];
m0_90 [label="!options.CanReceiveParserState()", span="277-277", cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ErrorHandling.cs"];
m0_92 [label="var property = ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(options)[0].Left", span="282-282", cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ErrorHandling.cs"];
m0_93 [label="property.GetValue(options, null) == null", span="285-285", cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ErrorHandling.cs"];
m0_94 [label="property.SetValue(options, new ParserState(), null)", span="288-288", cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ErrorHandling.cs"];
m0_95 [label="var parserState = (IParserState)property.GetValue(options, null)", span="291-291", cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ErrorHandling.cs"];
m0_96 [label=errors, span="293-293", cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ErrorHandling.cs"];
m0_91 [label="return;", span="279-279", cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ErrorHandling.cs"];
m0_97 [label="parserState.Errors.Add(error)", span="295-295", cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ErrorHandling.cs"];
m0_98 [label="Exit CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="275-275", cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ErrorHandling.cs"];
m0_121 [label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="106-106", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="ErrorHandling.cs"];
m0_14 [label="Entry CommandLine.Parser.Parser(bool)", span="89-89", cluster="CommandLine.Parser.Parser(bool)", file="ErrorHandling.cs"];
m0_0 [label="Entry CommandLine.Parser.Parser()", span="55-55", cluster="CommandLine.Parser.Parser()", file="ErrorHandling.cs"];
m0_1 [label="_settings = new ParserSettings()", span="57-57", cluster="CommandLine.Parser.Parser()", color=green, community=0, file="ErrorHandling.cs"];
m0_2 [label="Exit CommandLine.Parser.Parser()", span="55-55", cluster="CommandLine.Parser.Parser()", color=green, community=0, file="ErrorHandling.cs"];
m0_3 [label="Entry CommandLine.ParserSettings.ParserSettings()", span="44-44", cluster="CommandLine.ParserSettings.ParserSettings()", file="ErrorHandling.cs"];
m0_181 [label="Entry CommandLine.Infrastructure.OptionInfo.CreateInstance(object)", span="146-146", cluster="CommandLine.Infrastructure.OptionInfo.CreateInstance(object)", file="ErrorHandling.cs"];
m0_209 [label="Entry string.Compare(string, string, System.StringComparison)", span="0-0", cluster="string.Compare(string, string, System.StringComparison)", file="ErrorHandling.cs"];
m0_88 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="ErrorHandling.cs"];
m0_145 [label="Entry CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.ParserSettings)", span="102-102", cluster="CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.ParserSettings)", file="ErrorHandling.cs"];
m0_4 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ErrorHandling.cs"];
m0_5 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="ErrorHandling.cs"];
m0_195 [label="Entry CommandLine.Infrastructure.ArgumentParser.CompareLong(string, string, bool)", span="51-51", cluster="CommandLine.Infrastructure.ArgumentParser.CompareLong(string, string, bool)", file="ErrorHandling.cs"];
m0_229 [label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", span="337-337", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", file="ErrorHandling.cs"];
m0_102 [label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="ErrorHandling.cs"];
m0_146 [label="Entry CommandLine.Infrastructure.OptionMap.SetDefaults()", span="167-167", cluster="CommandLine.Infrastructure.OptionMap.SetDefaults()", file="ErrorHandling.cs"];
m0_222 [label="Entry object.HasHelp()", span="39-39", cluster="object.HasHelp()", file="ErrorHandling.cs"];
m0_87 [label="Entry CommandLine.Helpers.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="199-199", cluster="CommandLine.Helpers.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ErrorHandling.cs"];
m0_103 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ErrorHandling.cs"];
m0_77 [label="System.StringComparer", span="", cluster="System.GC.SuppressFinalize(object)", file="ErrorHandling.cs"];
m0_99 [label="Entry object.CanReceiveParserState()", span="49-49", cluster="object.CanReceiveParserState()", file="ErrorHandling.cs"];
m0_73 [label="System.Collections.Generic.IEnumerable<string>", span="", cluster="CommandLine.Parser.Dispose()", file="ErrorHandling.cs"];
m0_74 [label="System.StringComparer", span="", cluster="CommandLine.Parser.Dispose()", file="ErrorHandling.cs"];
m0_75 [label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span="", cluster="CommandLine.Parser.Dispose()", file="ErrorHandling.cs"];
m0_76 [label=string, span="", cluster="CommandLine.Parser.Dispose()", file="ErrorHandling.cs"];
m0_230 [label=_disposed, span="519-519", cluster="CommandLine.Parser.Dispose(bool)", file="ErrorHandling.cs"];
m0_232 [label=disposing, span="524-524", cluster="CommandLine.Parser.Dispose(bool)", file="ErrorHandling.cs"];
m0_231 [label="return;", span="521-521", cluster="CommandLine.Parser.Dispose(bool)", file="ErrorHandling.cs"];
m0_233 [label="_settings != null", span="526-526", cluster="CommandLine.Parser.Dispose(bool)", file="ErrorHandling.cs"];
m0_234 [label="_settings.Dispose()", span="528-528", cluster="CommandLine.Parser.Dispose(bool)", file="ErrorHandling.cs"];
m0_235 [label="_disposed = true", span="531-531", cluster="CommandLine.Parser.Dispose(bool)", file="ErrorHandling.cs"];
m0_236 [label="Exit CommandLine.Parser.Dispose(bool)", span="517-517", cluster="CommandLine.Parser.Dispose(bool)", file="ErrorHandling.cs"];
m0_100 [label="Entry CommandLine.Helpers.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="46-46", cluster="CommandLine.Helpers.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ErrorHandling.cs"];
m0_238 [label="CommandLine.Parser", span="", file="ErrorHandling.cs"];
m0_239 [label=object, span="", file="ErrorHandling.cs"];
m1_65 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="SentenceBuilder.cs"];
m1_41 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="SentenceBuilder.cs"];
m1_66 [label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="42-42", cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="SentenceBuilder.cs"];
m1_3 [label="Entry CommandLine.Text.SentenceBuilder.DefaultSentenceBuilder.DefaultSentenceBuilder()", span="56-56", cluster="CommandLine.Text.SentenceBuilder.DefaultSentenceBuilder.DefaultSentenceBuilder()", file="SentenceBuilder.cs"];
m1_64 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="SentenceBuilder.cs"];
m1_0 [label="Entry CommandLine.Text.SentenceBuilder.CreateDefault()", span="21-21", cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="SentenceBuilder.cs"];
m1_1 [label="return new DefaultSentenceBuilder();", span="23-23", cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="SentenceBuilder.cs"];
m1_2 [label="Exit CommandLine.Text.SentenceBuilder.CreateDefault()", span="21-21", cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="SentenceBuilder.cs"];
m1_51 [label="Entry lambda expression", span="135-159", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_4 [label="Entry lambda expression", span="60-60", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_5 [label="''Required.''", span="60-60", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_6 [label="Exit lambda expression", span="60-60", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_7 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_8 [label="''ERROR(S):''", span="65-65", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_9 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_10 [label="Entry lambda expression", span="72-74", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_11 [label="isOption\r\n                        ? ''Display this help screen.''\r\n                        : ''Display more information on a specific command.''", span="72-74", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_12 [label="Exit lambda expression", span="72-74", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_13 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_14 [label="''Display version information.''", span="80-80", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_15 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_16 [label="Entry lambda expression", span="87-120", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_17 [label="error.Tag", span="89-89", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_19 [label="return ''Token '''.JoinTo(((BadFormatTokenError)error).Token, ''' is not recognized.'');", span="92-92", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_21 [label="return ''Option '''.JoinTo(((MissingValueOptionError)error).NameInfo.NameText,\r\n                                        ''' has no value.'');", span="94-95", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_23 [label="return ''Option '''.JoinTo(((UnknownOptionError)error).Token, ''' is unknown.'');", span="97-97", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_25 [label="var errMisssing = ((MissingRequiredOptionError)error)", span="99-99", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_28 [label="var badFormat = ((BadFormatConversionError)error)", span="104-104", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_31 [label="var seqOutRange = ((SequenceOutOfRangeError)error)", span="109-109", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_34 [label="return ''Verb '''.JoinTo(((BadVerbSelectedError)error).Token, ''' is not recognized.'');", span="115-115", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_18 [label="ErrorType.BadFormatTokenError", span="91-91", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_20 [label="ErrorType.MissingValueOptionError", span="93-93", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_22 [label="ErrorType.UnknownOptionError", span="96-96", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_24 [label="ErrorType.MissingRequiredOptionError", span="98-98", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_27 [label="ErrorType.BadFormatConversionError", span="103-103", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_30 [label="ErrorType.SequenceOutOfRangeError", span="108-108", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_33 [label="ErrorType.BadVerbSelectedError", span="114-114", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_35 [label="ErrorType.NoVerbSelectedError", span="116-116", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_26 [label="return errMisssing.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A required value not bound to option name is missing.''\r\n                                               : ''Required option '''.JoinTo(errMisssing.NameInfo.NameText, ''' is missing.'');", span="100-102", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_29 [label="return badFormat.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A value not bound to option name is defined with a bad format.''\r\n                                               : ''Option '''.JoinTo(badFormat.NameInfo.NameText, ''' is defined with a bad format.'');", span="105-107", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_32 [label="return seqOutRange.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A sequence value not bound to option name is defined with few items than required.''\r\n                                               : ''A sequence option '''.JoinTo(seqOutRange.NameInfo.NameText,\r\n                                                    ''' is defined with few items than required.'');", span="110-113", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_36 [label="return ''No verb selected.'';", span="117-117", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_37 [label="Exit lambda expression", span="87-120", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_38 [label="throw new InvalidOperationException();", span="119-119", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_42 [label="Entry lambda expression", span="128-161", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_43 [label="var bySet = from e in errors\r\n                                group e by e.SetName into g\r\n                                select new { SetName = g.Key, Errors = g.ToList() }", span="130-132", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_44 [label="var msgs = bySet.Select(\r\n                            set =>\r\n                            {\r\n                                var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select '''''.JoinTo(e.NameInfo.NameText, ''', '')).ToArray());\r\n                                var namesCount = set.Errors.Count();\r\n\r\n                                var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from x in\r\n                                    (from s in bySet where !s.SetName.EndsWith(set.SetName) from e in s.Errors select e)\r\n                                        .Distinct()\r\n                                    select '''''.JoinTo(x.NameInfo.NameText, ''', '')).ToArray());\r\n\r\n                                return\r\n                                    new StringBuilder(''Option'').AppendWhen(namesCount > 1, ''s'')\r\n                                        .Append('': '')\r\n                                        .Append(names.Substring(0, names.Length - 2))\r\n                                        .Append(' ')\r\n                                        .AppendIf(namesCount > 1, ''are'', ''is'')\r\n                                        .Append('' not compatible with: '')\r\n                                        .Append(incompat.Substring(0, incompat.Length - 2))\r\n                                        .Append('.')\r\n                                        .ToString();\r\n                            }).ToArray()", span="134-159", cluster="lambda expression", color=red, community=0, file="SentenceBuilder.cs"];
m1_54 [label="var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from x in\r\n                                    (from s in bySet where !s.SetName.EndsWith(set.SetName) from e in s.Errors select e)\r\n                                        .Distinct()\r\n                                    select '''''.JoinTo(x.NameInfo.NameText, ''', '')).ToArray())", span="142-147", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_45 [label="return string.Join(Environment.NewLine, msgs);", span="160-160", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_46 [label="Exit lambda expression", span="128-161", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_52 [label="var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select '''''.JoinTo(e.NameInfo.NameText, ''', '')).ToArray())", span="137-139", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_53 [label="var namesCount = set.Errors.Count()", span="140-140", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_55 [label="return\r\n                                    new StringBuilder(''Option'').AppendWhen(namesCount > 1, ''s'')\r\n                                        .Append('': '')\r\n                                        .Append(names.Substring(0, names.Length - 2))\r\n                                        .Append(' ')\r\n                                        .AppendIf(namesCount > 1, ''are'', ''is'')\r\n                                        .Append('' not compatible with: '')\r\n                                        .Append(incompat.Substring(0, incompat.Length - 2))\r\n                                        .Append('.')\r\n                                        .ToString();", span="149-158", cluster="lambda expression", color=red, community=0, file="SentenceBuilder.cs"];
m1_56 [label="Exit lambda expression", span="135-159", cluster="lambda expression", file="SentenceBuilder.cs"];
m1_62 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9", cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="SentenceBuilder.cs"];
m1_40 [label="Entry CommandLine.NameInfo.Equals(CommandLine.NameInfo)", span="90-90", cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="SentenceBuilder.cs"];
m1_48 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SentenceBuilder.cs"];
m1_57 [label="Entry Unk.JoinTo", span="", cluster="Unk.JoinTo", file="SentenceBuilder.cs"];
m1_39 [label="Entry string.JoinTo(params string[])", span="45-45", cluster="string.JoinTo(params string[])", file="SentenceBuilder.cs"];
m1_67 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="SentenceBuilder.cs"];
m1_63 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="SentenceBuilder.cs"];
m1_50 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="SentenceBuilder.cs"];
m1_60 [label="Entry Unk.Distinct", span="", cluster="Unk.Distinct", file="SentenceBuilder.cs"];
m1_61 [label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(string)", file="SentenceBuilder.cs"];
m1_49 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="SentenceBuilder.cs"];
m1_58 [label="Entry Unk.Count", span="", cluster="Unk.Count", file="SentenceBuilder.cs"];
m1_47 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="SentenceBuilder.cs"];
m1_59 [label="Entry Unk.EndsWith", span="", cluster="Unk.EndsWith", file="SentenceBuilder.cs"];
m1_68 [label=bySet, span="", file="SentenceBuilder.cs"];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_57  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid, color=green];
m0_9 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="System.Action<CommandLine.ParserSettings>"];
m0_9 -> m0_179  [key=2, style=dotted, color=green];
m0_9 -> m0_23  [key=1, style=dashed, color=green, label=firstArg];
m0_10 -> m0_11  [key=0, style=solid, color=green];
m0_10 -> m0_8  [key=2, style=dotted];
m0_10 -> m0_23  [key=1, style=dashed, color=green, label=string];
m0_10 -> m0_12  [key=1, style=dashed, color=green, label=preprocCompare];
m0_11 -> m0_12  [key=0, style=solid, color=green];
m0_11 -> m0_13  [key=2, style=dotted];
m0_11 -> m0_15  [key=2, style=dotted, color=green];
m0_12 -> m0_9  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid, color=green];
m0_12 -> m0_16  [key=2, style=dotted, color=green];
m0_12 -> m0_182  [key=2, style=dotted, color=green];
m0_12 -> m0_42  [key=2, style=dotted, color=green];
m0_12 -> m0_19  [key=2, style=dotted, color=green];
m0_12 -> m0_7  [key=2, style=dotted, color=green];
m0_12 -> m0_20  [key=2, style=dotted, color=green];
m0_12 -> m0_21  [key=2, style=dotted, color=green];
m0_7 -> m0_62  [key=0, style=solid, color=green];
m0_7 -> m0_19  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Error[] errors"];
m0_7 -> m0_4  [key=0, style=bold, color=blue];
m0_62 -> m0_63  [key=0, style=solid, color=green];
m0_62 -> m0_64  [key=2, style=dotted, color=green];
m0_62 -> m0_65  [key=2, style=dotted, color=green];
m0_63 -> m0_7  [key=0, style=bold, color=blue];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_70  [key=0, style=solid];
m0_63 -> m0_41  [key=2, style=dotted];
m0_63 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label=verbInstance];
m0_31 -> m0_107  [key=0, style=solid];
m0_31 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_31 -> m0_112  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_31 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_30 -> m0_26  [key=0, style=bold, color=blue];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_8  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_31  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_26 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_27 -> m0_28  [key=0, style=solid, color=green];
m0_27 -> m0_8  [key=2, style=dotted];
m0_27 -> m0_29  [key=2, style=dotted, color=green];
m0_27 -> m0_30  [key=2, style=dotted, color=green];
m0_27 -> m0_182  [key=2, style=dotted, color=green];
m0_27 -> m0_31  [key=2, style=dotted, color=green];
m0_27 -> m0_32  [key=2, style=dotted, color=green];
m0_27 -> m0_33  [key=2, style=dotted, color=green];
m0_27 -> m0_179  [key=2, style=dotted, color=green];
m0_27 -> m0_34  [key=2, style=dotted, color=green];
m0_27 -> m0_35  [key=1, style=dashed, color=green, label="lambda expression"];
m0_27 -> m0_38  [key=1, style=dashed, color=green, label="lambda expression"];
m0_27 -> m0_46  [key=1, style=dashed, color=green, label="lambda expression"];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_8  [key=2, style=dotted];
m0_28 -> m0_21  [key=0, style=bold, color=blue];
m0_44 -> m0_45  [key=0, style=solid, color=green];
m0_44 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_44 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_44 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_44 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label="System.Action"];
m0_44 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label="System.Action"];
m0_44 -> m0_179  [key=2, style=dotted, color=green];
m0_44 -> m0_25  [key=2, style=dotted, color=green];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_8  [key=2, style=dotted];
m0_45 -> m0_43  [key=0, style=bold, color=blue];
m0_46 -> m0_47  [key=0, style=solid, color=green];
m0_46 -> m0_8  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid, color=green];
m0_47 -> m0_53  [key=0, style=solid];
m0_47 -> m0_31  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_55  [key=2, style=dotted];
m0_48 -> m0_46  [key=0, style=bold, color=blue];
m0_49 -> m0_50  [key=0, style=solid, color=green];
m0_49 -> m0_51  [key=0, style=solid];
m0_49 -> m0_52  [key=2, style=dotted, color=green];
m0_49 -> m0_53  [key=2, style=dotted, color=green];
m0_49 -> m0_54  [key=2, style=dotted, color=green];
m0_49 -> m0_55  [key=1, style=dashed, color=green, label="lambda expression"];
m0_49 -> m0_58  [key=1, style=dashed, color=green, label="lambda expression"];
m0_53 -> m0_54  [key=0, style=solid];
m0_50 -> m0_52  [key=0, style=solid];
m0_50 -> m0_56  [key=2, style=dotted];
m0_50 -> m0_19  [key=0, style=bold, color=blue];
m0_52 -> m0_54  [key=0, style=solid];
m0_54 -> m0_44  [key=0, style=bold, color=blue];
m0_120 -> m0_123  [key=0, style=solid];
m0_120 -> m0_124  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_120 -> m0_126  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_120 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_120 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_120 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label=hadError];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_145  [key=2, style=dotted];
m0_124 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label=optionMap];
m0_124 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label=optionMap];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_147  [key=2, style=dotted];
m0_126 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label=valueMapper];
m0_126 -> m0_140  [key=1, style=dashed, color=darkseagreen4, label=valueMapper];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_148  [key=2, style=dotted];
m0_127 -> m0_129  [key=1, style=dashed, color=darkseagreen4, label=arguments];
m0_127 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label=arguments];
m0_127 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label=arguments];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_151  [key=2, style=dotted];
m0_133 -> m0_137  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_89  [key=2, style=dotted];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_153  [key=2, style=dotted];
m0_142 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label=hadError];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_146  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_128  [key=0, style=solid];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_128  [key=0, style=solid];
m0_140 -> m0_152  [key=2, style=dotted];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_142  [key=0, style=solid];
m0_128 -> m0_149  [key=2, style=dotted];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label=argument];
m0_129 -> m0_140  [key=1, style=dashed, color=darkseagreen4, label=argument];
m0_138 -> m0_128  [key=0, style=solid];
m0_138 -> m0_149  [key=2, style=dotted];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_128  [key=0, style=solid];
m0_130 -> m0_86  [key=2, style=dotted];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_150  [key=2, style=dotted];
m0_131 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label=parser];
m0_131 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label=parser];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_139  [key=0, style=solid];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_137  [key=0, style=solid];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_128  [key=0, style=solid];
m0_136 -> m0_128  [key=0, style=solid];
m0_136 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label=hadError];
m0_141 -> m0_128  [key=0, style=solid];
m0_141 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label=hadError];
m0_143 -> m0_144  [key=0, style=solid];
m0_144 -> m0_120  [key=0, style=bold, color=blue];
m0_21 -> m0_27  [key=0, style=solid, color=green];
m0_21 -> m0_36  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m0_21 -> m0_39  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>"];
m0_21 -> m0_44  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m0_21 -> m0_16  [key=0, style=bold, color=blue];
m0_19 -> m0_49  [key=0, style=solid, color=green];
m0_19 -> m0_56  [key=1, style=dashed, color=green, label=string];
m0_19 -> m0_20  [key=0, style=solid];
m0_176 -> m0_210  [key=0, style=solid];
m0_176 -> m0_211  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_176 -> m0_212  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_176 -> m0_213  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_210 -> m0_211  [key=0, style=solid];
m0_211 -> m0_212  [key=0, style=solid];
m0_211 -> m0_213  [key=0, style=solid];
m0_212 -> m0_214  [key=0, style=solid];
m0_212 -> m0_217  [key=2, style=dotted];
m0_212 -> m0_215  [key=1, style=dashed, color=darkseagreen4, label=helpText];
m0_213 -> m0_214  [key=0, style=solid];
m0_213 -> m0_217  [key=2, style=dotted];
m0_213 -> m0_215  [key=1, style=dashed, color=darkseagreen4, label=helpText];
m0_214 -> m0_215  [key=0, style=solid];
m0_214 -> m0_216  [key=0, style=solid];
m0_215 -> m0_216  [key=0, style=solid];
m0_215 -> m0_122  [key=2, style=dotted];
m0_216 -> m0_176  [key=0, style=bold, color=blue];
m0_15 -> m0_14  [key=0, style=bold, color=blue];
m0_55 -> m0_218  [key=0, style=solid];
m0_55 -> m0_220  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_55 -> m0_227  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_55 -> m0_56  [key=0, style=solid, color=green];
m0_218 -> m0_219  [key=0, style=solid];
m0_218 -> m0_220  [key=0, style=solid];
m0_218 -> m0_222  [key=2, style=dotted];
m0_218 -> m0_223  [key=2, style=dotted];
m0_220 -> m0_221  [key=0, style=solid];
m0_220 -> m0_224  [key=2, style=dotted];
m0_220 -> m0_225  [key=2, style=dotted];
m0_220 -> m0_122  [key=2, style=dotted];
m0_220 -> m0_226  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_219 -> m0_221  [key=0, style=solid];
m0_221 -> m0_55  [key=0, style=bold, color=blue];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_8  [key=2, style=dotted];
m0_119 -> m0_184  [key=0, style=solid];
m0_119 -> m0_185  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_119 -> m0_186  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpOptionAttribute"];
m0_119 -> m0_187  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpOptionAttribute"];
m0_119 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpOptionAttribute"];
m0_119 -> m0_190  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpOptionAttribute"];
m0_184 -> m0_185  [key=0, style=solid];
m0_184 -> m0_187  [key=1, style=dashed, color=darkseagreen4, label=caseSensitive];
m0_184 -> m0_190  [key=1, style=dashed, color=darkseagreen4, label=caseSensitive];
m0_185 -> m0_186  [key=0, style=solid];
m0_185 -> m0_192  [key=0, style=solid];
m0_185 -> m0_187  [key=1, style=dashed, color=darkseagreen4, label=arg];
m0_185 -> m0_190  [key=1, style=dashed, color=darkseagreen4, label=arg];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_189  [key=0, style=solid];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_189  [key=0, style=solid];
m0_187 -> m0_194  [key=2, style=dotted];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_185  [key=0, style=solid];
m0_189 -> m0_86  [key=2, style=dotted];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_185  [key=0, style=solid];
m0_190 -> m0_195  [key=2, style=dotted];
m0_192 -> m0_193  [key=0, style=solid];
m0_188 -> m0_193  [key=0, style=solid];
m0_191 -> m0_193  [key=0, style=solid];
m0_193 -> m0_119  [key=0, style=bold, color=blue];
m0_58 -> m0_59  [key=0, style=solid, color=green];
m0_58 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_58 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_58 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_58 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_58 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_58 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label="System.Action"];
m0_58 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label="System.Action"];
m0_58 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_59 -> m0_60  [key=0, style=solid, color=green];
m0_59 -> m0_8  [key=2, style=dotted];
m0_59 -> m0_61  [key=2, style=dotted, color=green];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_8  [key=2, style=dotted];
m0_60 -> m0_58  [key=0, style=bold, color=blue];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_42  [key=2, style=dotted];
m0_64 -> m0_43  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_55  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_68  [key=0, style=solid];
m0_66 -> m0_9  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m0_66 -> m0_12  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_57  [key=2, style=dotted];
m0_68 -> m0_11  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<System.Type>"];
m0_68 -> m0_12  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<System.Type>"];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_42  [key=2, style=dotted];
m0_70 -> m0_43  [key=2, style=dotted];
m0_70 -> m0_12  [key=1, style=dashed, color=green, label="System.Globalization.CultureInfo"];
m0_67 -> m0_69  [key=0, style=solid];
m0_67 -> m0_56  [key=2, style=dotted];
m0_67 -> m0_10  [key=1, style=dashed, color=green, label="System.StringComparer"];
m0_67 -> m0_23  [key=1, style=dashed, color=green, label="System.StringComparer"];
m0_67 -> m0_12  [key=1, style=dashed, color=green, label="System.StringComparer"];
m0_69 -> m0_72  [key=0, style=solid];
m0_69 -> m0_12  [key=1, style=dashed, color=green, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>"];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_12  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.ErrorType>"];
m0_72 -> m0_58  [key=0, style=bold, color=blue];
m0_72 -> m0_23  [key=1, style=dashed, color=green, label=firstArg];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_118  [key=2, style=dotted];
m0_107 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label=pair];
m0_107 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label=pair];
m0_107 -> m0_112  [key=1, style=dashed, color=darkseagreen4, label=pair];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_115  [key=0, style=solid];
m0_110 -> m0_119  [key=2, style=dotted];
m0_110 -> m0_120  [key=2, style=dotted];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_121  [key=2, style=dotted];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_120  [key=2, style=dotted];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label=helpWriter];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_116  [key=0, style=solid];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_122  [key=2, style=dotted];
m0_111 -> m0_112  [key=0, style=solid];
m0_115 -> m0_117  [key=0, style=solid];
m0_114 -> m0_117  [key=0, style=solid];
m0_117 -> m0_31  [key=0, style=bold, color=blue];
m0_56 -> m0_57  [key=0, style=solid, color=green];
m0_56 -> m0_25  [key=2, style=dotted, color=green];
m0_25 -> m0_230  [key=0, style=solid];
m0_25 -> m0_232  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_41 -> m0_154  [key=0, style=solid];
m0_41 -> m0_155  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_41 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_41 -> m0_158  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_41 -> m0_160  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_41 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_41 -> m0_163  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_41 -> m0_166  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_41 -> m0_168  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_41 -> m0_170  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_41 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_41 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_16 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_16 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_17 -> m0_18  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_227 -> m0_228  [key=0, style=solid];
m0_227 -> m0_229  [key=2, style=dotted];
m0_226 -> m0_227  [key=0, style=solid];
m0_228 -> m0_226  [key=0, style=bold, color=blue];
m0_8 -> m0_9  [key=0, style=solid, color=green];
m0_23 -> m0_24  [key=0, style=solid, color=green];
m0_23 -> m0_25  [key=2, style=dotted, color=green];
m0_23 -> m0_26  [key=2, style=dotted, color=green];
m0_22 -> m0_23  [key=0, style=solid, color=green];
m0_24 -> m0_22  [key=0, style=bold, color=blue];
m0_13 -> m0_8  [key=0, style=bold, color=blue];
m0_35 -> m0_36  [key=0, style=solid, color=green];
m0_35 -> m0_8  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid, color=green];
m0_38 -> m0_42  [key=2, style=dotted];
m0_38 -> m0_43  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid, color=green];
m0_36 -> m0_179  [key=2, style=dotted, color=green];
m0_36 -> m0_25  [key=2, style=dotted, color=green];
m0_37 -> m0_35  [key=0, style=bold, color=blue];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_41  [key=2, style=dotted];
m0_37 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label=verbInstance];
m0_37 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_39 -> m0_40  [key=0, style=solid, color=green];
m0_39 -> m0_41  [key=2, style=dotted, color=green];
m0_39 -> m0_42  [key=2, style=dotted, color=green];
m0_39 -> m0_43  [key=1, style=dashed, color=green, label="lambda expression"];
m0_40 -> m0_38  [key=0, style=bold, color=blue];
m0_40 -> m0_32  [key=0, style=bold, color=blue];
m0_43 -> m0_44  [key=0, style=solid, color=green];
m0_57 -> m0_55  [key=0, style=bold, color=blue];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_100  [key=2, style=dotted];
m0_154 -> m0_160  [key=1, style=dashed, color=darkseagreen4, label=verbs];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_118  [key=2, style=dotted];
m0_155 -> m0_157  [key=1, style=dashed, color=darkseagreen4, label=helpInfo];
m0_155 -> m0_158  [key=1, style=dashed, color=darkseagreen4, label=helpInfo];
m0_155 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label=helpInfo];
m0_155 -> m0_165  [key=1, style=dashed, color=darkseagreen4, label=helpInfo];
m0_155 -> m0_166  [key=1, style=dashed, color=darkseagreen4, label=helpInfo];
m0_155 -> m0_172  [key=1, style=dashed, color=darkseagreen4, label=helpInfo];
m0_155 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label=helpInfo];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_160  [key=0, style=solid];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_176  [key=2, style=dotted];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_177  [key=2, style=dotted];
m0_160 -> m0_163  [key=1, style=dashed, color=darkseagreen4, label=optionMap];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_163  [key=0, style=solid];
m0_161 -> m0_178  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_179  [key=2, style=dotted];
m0_163 -> m0_168  [key=1, style=dashed, color=darkseagreen4, label=verbOption];
m0_163 -> m0_170  [key=1, style=dashed, color=darkseagreen4, label=verbOption];
m0_166 -> m0_167  [key=0, style=solid];
m0_166 -> m0_176  [key=2, style=dotted];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_180  [key=2, style=dotted];
m0_168 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label="ref object"];
m0_168 -> m0_175  [key=1, style=dashed, color=darkseagreen4, label="ref object"];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_181  [key=2, style=dotted];
m0_170 -> m0_175  [key=1, style=dashed, color=darkseagreen4, label="ref object"];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_182  [key=2, style=dotted];
m0_171 -> m0_183  [key=2, style=dotted];
m0_171 -> m0_120  [key=2, style=dotted];
m0_171 -> m0_174  [key=1, style=dashed, color=darkseagreen4, label=verbResult];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_179  [key=2, style=dotted];
m0_173 -> m0_176  [key=2, style=dotted];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_159  [key=0, style=solid];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_167  [key=0, style=solid];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_174  [key=0, style=solid];
m0_159 -> m0_175  [key=0, style=solid];
m0_162 -> m0_175  [key=0, style=solid];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_168  [key=0, style=solid];
m0_167 -> m0_175  [key=0, style=solid];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_171  [key=0, style=solid];
m0_174 -> m0_175  [key=0, style=solid];
m0_175 -> m0_41  [key=0, style=bold, color=blue];
m0_6 -> m0_7  [key=0, style=solid];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_32 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_32 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_32 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_8  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_105 -> m0_106  [key=0, style=solid];
m0_106 -> m0_104  [key=0, style=bold, color=blue];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_78 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_78 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_78 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_79 -> m0_80  [key=0, style=solid];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_82  [key=0, style=solid];
m0_80 -> m0_86  [key=2, style=dotted];
m0_81 -> m0_85  [key=0, style=solid];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_87  [key=2, style=dotted];
m0_82 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label=pair];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_88  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m0_85 -> m0_78  [key=0, style=bold, color=blue];
m0_178 -> m0_196  [key=0, style=solid];
m0_178 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>"];
m0_178 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_178 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_178 -> m0_201  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Infrastructure.OptionMap"];
m0_178 -> m0_203  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_178 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_178 -> m0_205  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_196 -> m0_197  [key=0, style=solid];
m0_197 -> m0_198  [key=0, style=solid];
m0_197 -> m0_207  [key=0, style=solid];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_207  [key=0, style=solid];
m0_198 -> m0_104  [key=2, style=dotted];
m0_198 -> m0_209  [key=2, style=dotted];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> m0_42  [key=2, style=dotted];
m0_199 -> m0_201  [key=1, style=dashed, color=darkseagreen4, label=verb];
m0_199 -> m0_205  [key=1, style=dashed, color=darkseagreen4, label=verb];
m0_201 -> m0_202  [key=0, style=solid];
m0_201 -> m0_203  [key=1, style=dashed, color=darkseagreen4, label=verbOption];
m0_201 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label=verbOption];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_205  [key=0, style=solid];
m0_203 -> m0_180  [key=2, style=dotted];
m0_204 -> m0_205  [key=0, style=solid];
m0_204 -> m0_181  [key=2, style=dotted];
m0_205 -> m0_206  [key=0, style=solid];
m0_205 -> m0_176  [key=2, style=dotted];
m0_207 -> m0_208  [key=0, style=solid];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_205  [key=0, style=solid];
m0_202 -> m0_203  [key=0, style=solid];
m0_202 -> m0_205  [key=0, style=solid];
m0_206 -> m0_208  [key=0, style=solid];
m0_208 -> m0_178  [key=0, style=bold, color=blue];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_89 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_89 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_89 -> m0_95  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_89 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.ParsingError>"];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_92  [key=0, style=solid];
m0_90 -> m0_99  [key=2, style=dotted];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_100  [key=2, style=dotted];
m0_92 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_92 -> m0_95  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_95  [key=0, style=solid];
m0_93 -> m0_88  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_101  [key=2, style=dotted];
m0_94 -> m0_102  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_88  [key=2, style=dotted];
m0_95 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label=parserState];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_98  [key=0, style=solid];
m0_91 -> m0_98  [key=0, style=solid];
m0_97 -> m0_96  [key=0, style=solid];
m0_97 -> m0_103  [key=2, style=dotted];
m0_98 -> m0_89  [key=0, style=bold, color=blue];
m0_14 -> m0_15  [key=0, style=solid];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_0 -> m0_9  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m0_0 -> m0_10  [key=1, style=dashed, color=green, label="System.StringComparer"];
m0_0 -> m0_23  [key=1, style=dashed, color=green, label="System.StringComparer"];
m0_0 -> m0_11  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<System.Type>"];
m0_0 -> m0_12  [key=1, style=dashed, color=green, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>"];
m0_0 -> m0_2  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<System.Type>"];
m0_1 -> m0_1  [key=3, color=green, style=bold, label="Local variable System.Func<CommandLine.ParserResult<object>> choose"];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_3  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_4  [key=2, style=dotted, color=green];
m0_2 -> m0_5  [key=2, style=dotted, color=green];
m0_2 -> m0_6  [key=2, style=dotted, color=green];
m0_2 -> m0_7  [key=2, style=dotted, color=green];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_3 -> m0_0  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_8  [key=2, style=dotted];
m0_77 -> m0_56  [key=1, style=dashed, color=green, label="System.StringComparer"];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_36  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m0_73 -> m0_39  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m0_73 -> m0_44  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_25  [key=2, style=dotted];
m0_74 -> m0_36  [key=1, style=dashed, color=green, label="System.StringComparer"];
m0_74 -> m0_39  [key=1, style=dashed, color=green, label="System.StringComparer"];
m0_74 -> m0_44  [key=1, style=dashed, color=green, label="System.StringComparer"];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_77  [key=2, style=dotted];
m0_75 -> m0_39  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>"];
m0_76 -> m0_73  [key=0, style=bold, color=blue];
m0_76 -> m0_56  [key=1, style=dashed, color=green, label=string];
m0_230 -> m0_231  [key=0, style=solid];
m0_230 -> m0_232  [key=0, style=solid];
m0_232 -> m0_233  [key=0, style=solid];
m0_232 -> m0_236  [key=0, style=solid];
m0_231 -> m0_236  [key=0, style=solid];
m0_233 -> m0_234  [key=0, style=solid];
m0_233 -> m0_235  [key=0, style=solid];
m0_234 -> m0_235  [key=0, style=solid];
m0_234 -> m0_237  [key=2, style=dotted];
m0_235 -> m0_236  [key=0, style=solid];
m0_236 -> m0_25  [key=0, style=bold, color=blue];
m0_238 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_124  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_126  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_157  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_158  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_160  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_166  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_184  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_196  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_205  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_214  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_215  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_218  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_220  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_230  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_233  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_234  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_238 -> m0_235  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m0_239 -> m0_227  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="?"];
m1_51 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="?"];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_4  [key=0, style=bold, color=blue];
m1_7 -> m1_8  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_7  [key=0, style=bold, color=blue];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_10  [key=0, style=bold, color=blue];
m1_13 -> m1_14  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_15 -> m1_13  [key=0, style=bold, color=blue];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_16 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_16 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_16 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_16 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_16 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_16 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_16 -> m1_16  [key=3, color=darkorchid, style=bold, label="method methodReturn string "];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_20  [key=0, style=solid];
m1_17 -> m1_22  [key=0, style=solid];
m1_17 -> m1_24  [key=0, style=solid];
m1_17 -> m1_27  [key=0, style=solid];
m1_17 -> m1_30  [key=0, style=solid];
m1_17 -> m1_33  [key=0, style=solid];
m1_17 -> m1_35  [key=0, style=solid];
m1_19 -> m1_37  [key=0, style=solid];
m1_19 -> m1_39  [key=2, style=dotted];
m1_21 -> m1_37  [key=0, style=solid];
m1_21 -> m1_39  [key=2, style=dotted];
m1_23 -> m1_37  [key=0, style=solid];
m1_23 -> m1_39  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_34 -> m1_37  [key=0, style=solid];
m1_34 -> m1_39  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_26 -> m1_37  [key=0, style=solid];
m1_26 -> m1_40  [key=2, style=dotted];
m1_26 -> m1_39  [key=2, style=dotted];
m1_29 -> m1_37  [key=0, style=solid];
m1_29 -> m1_40  [key=2, style=dotted];
m1_29 -> m1_39  [key=2, style=dotted];
m1_32 -> m1_37  [key=0, style=solid];
m1_32 -> m1_40  [key=2, style=dotted];
m1_32 -> m1_39  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_37 -> m1_16  [key=0, style=bold, color=blue];
m1_38 -> m1_37  [key=0, style=solid];
m1_38 -> m1_41  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid, color=red];
m1_43 -> m1_47  [key=2, style=dotted];
m1_43 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label=e];
m1_43 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label=bySet];
m1_44 -> m1_45  [key=0, style=solid, color=red];
m1_44 -> m1_48  [key=2, style=dotted, color=red];
m1_44 -> m1_49  [key=2, style=dotted, color=red];
m1_44 -> m1_51  [key=1, style=dashed, color=red, label="lambda expression"];
m1_54 -> m1_55  [key=0, style=solid, color=red];
m1_54 -> m1_59  [key=2, style=dotted];
m1_54 -> m1_60  [key=2, style=dotted];
m1_54 -> m1_57  [key=2, style=dotted];
m1_54 -> m1_49  [key=2, style=dotted];
m1_54 -> m1_50  [key=2, style=dotted];
m1_54 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_50  [key=2, style=dotted];
m1_46 -> m1_42  [key=0, style=bold, color=blue];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_57  [key=2, style=dotted];
m1_52 -> m1_49  [key=2, style=dotted];
m1_52 -> m1_50  [key=2, style=dotted];
m1_52 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label=e];
m1_52 -> m1_55  [key=1, style=dashed, color=red, label=names];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_58  [key=2, style=dotted];
m1_53 -> m1_55  [key=1, style=dashed, color=red, label=namesCount];
m1_55 -> m1_56  [key=0, style=solid, color=red];
m1_55 -> m1_61  [key=2, style=dotted, color=red];
m1_55 -> m1_62  [key=2, style=dotted, color=red];
m1_55 -> m1_63  [key=2, style=dotted, color=red];
m1_55 -> m1_64  [key=2, style=dotted, color=red];
m1_55 -> m1_65  [key=2, style=dotted, color=red];
m1_55 -> m1_66  [key=2, style=dotted, color=red];
m1_55 -> m1_67  [key=2, style=dotted, color=red];
m1_56 -> m1_51  [key=0, style=bold, color=blue];
m1_68 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label=bySet];
}
