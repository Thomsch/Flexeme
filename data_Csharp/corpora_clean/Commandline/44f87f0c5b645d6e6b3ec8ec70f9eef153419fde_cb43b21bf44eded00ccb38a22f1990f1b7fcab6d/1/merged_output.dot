digraph  {
m0_46 [cluster="Unk.ThrowingValidate", file="InstanceBuilder.cs", label="Entry Unk.ThrowingValidate", span=""];
m0_65 [cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="InstanceBuilder.cs", label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="58-58"];
m0_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="44-44"];
m0_108 [cluster="string.MatchName(string, string, System.StringComparer)", file="InstanceBuilder.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m0_55 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m0_44 [cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="InstanceBuilder.cs", label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="100-100"];
m0_71 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m0_101 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12"];
m0_115 [cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="InstanceBuilder.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149"];
m0_130 [cluster="CommandLine.Infrastructure.Maybe<T>.MatchNothing()", file="InstanceBuilder.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.MatchNothing()", span="26-26"];
m0_90 [cluster="Unk.>", file="InstanceBuilder.cs", label="Entry Unk.>", span=""];
m0_18 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m0_58 [cluster="CommandLine.Core.Specification.IsValue()", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m0_70 [cluster="System.Type.CreateDefaultForImmutable()", file="InstanceBuilder.cs", label="Entry System.Type.CreateDefaultForImmutable()", span="122-122"];
m0_68 [cluster="System.Reflection.MethodBase.GetParameters()", file="InstanceBuilder.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m0_74 [cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="40-40"];
m0_76 [cluster="Unk.Create", file="InstanceBuilder.cs", label="Entry Unk.Create", span=""];
m0_123 [cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="InstanceBuilder.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="144-144"];
m0_119 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="InstanceBuilder.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="134-134"];
m0_86 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21"];
m0_14 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m0_67 [cluster="Unk.GetConstructor", file="InstanceBuilder.cs", label="Entry Unk.GetConstructor", span=""];
m0_50 [cluster="System.StringComparer.Equals(string, string)", file="InstanceBuilder.cs", label="Entry System.StringComparer.Equals(string, string)", span="0-0"];
m0_45 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="InstanceBuilder.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="14-14"];
m0_60 [cluster="Unk.Single", file="InstanceBuilder.cs", label="Entry Unk.Single", span=""];
m0_48 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m0_51 [cluster="System.Func<TResult>.Invoke()", file="InstanceBuilder.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m0_73 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m0_91 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="54-54"];
m0_5 [cluster="lambda expression", file="InstanceBuilder.cs", label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="23-23"];
m0_12 [cluster="lambda expression", file="InstanceBuilder.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="23-23"];
m0_6 [cluster="lambda expression", file="InstanceBuilder.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="24-26"];
m0_16 [cluster="lambda expression", file="InstanceBuilder.cs", label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="26-26"];
m0_4 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="21-28"];
m0_11 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="23-23"];
m0_7 [cluster="lambda expression", file="InstanceBuilder.cs", label="return explodedTokens;", span="27-27"];
m0_15 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="26-26"];
m0_8 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="21-28"];
m0_13 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="23-23"];
m0_17 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="26-26"];
m0_88 [cluster="lambda expression", file="InstanceBuilder.cs", label="typeof(T).IsMutable()\r\n                    ? factory.Return(f => f(), Activator.CreateInstance<T>())\r\n                    : ReflectionHelper.CreateDefaultImmutableInstance<T>(\r\n                        (from p in specProps select p.Specification.ConversionType).ToArray())", span="53-56"];
m0_95 [cluster="lambda expression", file="InstanceBuilder.cs", label="TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer)", span="72-72"];
m0_99 [cluster="lambda expression", file="InstanceBuilder.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="77-77"];
m0_103 [cluster="lambda expression", file="InstanceBuilder.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="83-83"];
m0_106 [cluster="lambda expression", file="InstanceBuilder.cs", label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="87-87"];
m0_77 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="41-41"];
m0_81 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="43-44"];
m0_94 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="72-72"];
m0_98 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="77-77"];
m0_102 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="83-83"];
m0_105 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="87-87"];
m0_109 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="94-94"];
m0_137 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="114-114"];
m0_140 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="115-115"];
m0_112 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="97-97"];
m0_116 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="98-98"];
m0_120 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="100-100"];
m0_124 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="101-101"];
m0_127 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="103-105"];
m0_131 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="106-106"];
m0_78 [cluster="lambda expression", file="InstanceBuilder.cs", label="f().GetType()", span="41-41"];
m0_79 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="41-41"];
m0_82 [cluster="lambda expression", file="InstanceBuilder.cs", label="SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>())", span="43-44"];
m0_83 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="43-44"];
m0_87 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="52-56"];
m0_89 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="52-56"];
m0_92 [cluster="lambda expression", file="InstanceBuilder.cs", label="f()", span="54-54"];
m0_93 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="54-54"];
m0_96 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="72-72"];
m0_100 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="77-77"];
m0_104 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="83-83"];
m0_107 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="87-87"];
m0_110 [cluster="lambda expression", file="InstanceBuilder.cs", label="f()", span="94-94"];
m0_111 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="94-94"];
m0_113 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Value.IsJust()", span="97-97"];
m0_114 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="97-97"];
m0_117 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Value.FromJust()", span="98-98"];
m0_118 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="98-98"];
m0_121 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust()", span="100-100"];
m0_122 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="100-100"];
m0_125 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Specification.DefaultValue.FromJust()", span="101-101"];
m0_126 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="101-101"];
m0_128 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing()", span="103-105"];
m0_129 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="103-105"];
m0_132 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray()", span="106-106"];
m0_133 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="106-106"];
m0_138 [cluster="lambda expression", file="InstanceBuilder.cs", label=v, span="114-114"];
m0_139 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="114-114"];
m0_141 [cluster="lambda expression", file="InstanceBuilder.cs", label=d, span="115-115"];
m0_142 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="115-115"];
m0_49 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m0_53 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceBuilder.cs", label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="100-100"];
m0_80 [cluster="object.GetType()", file="InstanceBuilder.cs", label="Entry object.GetType()", span="0-0"];
m0_59 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="InstanceBuilder.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="265-265"];
m0_75 [cluster="Unk.Concat", file="InstanceBuilder.cs", label="Entry Unk.Concat", span=""];
m0_135 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m0_136 [cluster="System.Type.CreateEmptyArray()", file="InstanceBuilder.cs", label="Entry System.Type.CreateEmptyArray()", span="101-101"];
m0_69 [cluster="string.ToLower()", file="InstanceBuilder.cs", label="Entry string.ToLower()", span="0-0"];
m0_134 [cluster="System.Type.GetGenericArguments()", file="InstanceBuilder.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m0_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m0_84 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="82-82"];
m0_97 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="23-23"];
m0_64 [cluster="System.Activator.CreateInstance<T>()", file="InstanceBuilder.cs", label="Entry System.Activator.CreateInstance<T>()", span="0-0"];
m0_56 [cluster="CommandLine.Core.Specification.IsOption()", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m0_63 [cluster="System.Type.IsMutable()", file="InstanceBuilder.cs", label="Entry System.Type.IsMutable()", span="115-115"];
m0_85 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="InstanceBuilder.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m0_47 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="InstanceBuilder.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m0_0 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="13-13"];
m0_1 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="return Build(\r\n                factory,\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="19-31"];
m0_2 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="13-13"];
m0_3 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="34-34"];
m0_19 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var typeInfo = factory.Return(f => f().GetType(), typeof(T))", span="41-41"];
m0_23 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Func<T> makeDefault = () =>\r\n                typeof(T).IsMutable()\r\n                    ? factory.Return(f => f(), Activator.CreateInstance<T>())\r\n                    : ReflectionHelper.CreateDefaultImmutableInstance<T>(\r\n                        (from p in specProps select p.Specification.ConversionType).ToArray())", span="52-56"];
m0_24 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="arguments.Any() && nameComparer.Equals(''--help'', arguments.First())", span="58-58"];
m0_26 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var tokenizerResult = tokenizer(arguments, optionSpecs)", span="66-66"];
m0_28 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var partitions = TokenPartitioner.Partition(\r\n                tokens,\r\n                name => TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer))", span="70-72"];
m0_29 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var optionSpecProps = OptionMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                partitions.Options,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                nameComparer)", span="74-78"];
m0_30 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var valueSpecProps = ValueMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                    partitions.Values,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture))", span="80-83"];
m0_31 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var missingValueErrors = from token in partitions.Errors\r\n                                     select new MissingValueOptionError(\r\n                                         optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer)).FromOptionSpecification())", span="85-87"];
m0_35 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="instance = factory.Return(f => f(), Activator.CreateInstance<T>())", span="94-94"];
m0_20 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var specProps = typeInfo.GetSpecifications(pi => SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>()))", span="43-44"];
m0_34 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="typeInfo.IsMutable()", span="92-92"];
m0_21 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var specs = from pt in specProps select pt.Specification", span="46-46"];
m0_38 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var ctor = t.GetConstructor((from p in specProps select p.Specification.ConversionType).ToArray())", span="111-111"];
m0_22 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var optionSpecs = specs\r\n                .ThrowingValidate(SpecificationGuards.Lookup)\r\n                .OfType<OptionSpecification>()", span="48-50"];
m0_25 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=red, community=0, file="InstanceBuilder.cs", label="30: return ParserResult.Create(\r\n                    ParserResultType.Options,\r\n                    makeDefault(),\r\n                    new[] { new HelpRequestedError() });", span="60-63"];
m0_27 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var tokens = tokenizerResult.Value", span="68-68"];
m0_42 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=red, community=0, file="InstanceBuilder.cs", label="8: return ParserResult.Create(\r\n                ParserResultType.Options,\r\n                instance,\r\n                tokenizerResult.Errors\r\n                    .Concat(missingValueErrors)\r\n                    .Concat(optionSpecProps.Errors)\r\n                    .Concat(valueSpecProps.Errors)\r\n                    .Concat(validationErrors));", span="123-130"];
m0_41 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var validationErrors = specPropsWithValue.Validate(\r\n                SpecificationPropertyRules.Lookup(tokens))", span="120-121"];
m0_32 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var specPropsWithValue = optionSpecProps.Value.Concat(valueSpecProps.Value)", span="89-89"];
m0_33 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="T instance", span="91-91"];
m0_36 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="instance = instance\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsJust(),\r\n                        sp => sp.Value.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                        sp => sp.Specification.DefaultValue.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing(),\r\n                        sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray())", span="95-106"];
m0_39 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var values = (from prms in ctor.GetParameters()\r\n                              join sp in specPropsWithValue on prms.Name.ToLower() equals sp.Property.Name.ToLower()\r\n                              select sp.Value.Return(v => v,\r\n                                    sp.Specification.DefaultValue.Return(d => d,\r\n                                        sp.Specification.ConversionType.CreateDefaultForImmutable()))).ToArray()", span="112-116"];
m0_37 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var t = typeof(T)", span="110-110"];
m0_40 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="instance = (T)ctor.Invoke(values)", span="117-117"];
m0_43 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="34-34"];
m0_72 [cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="InstanceBuilder.cs", label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0"];
m0_66 [cluster="Unk.ToArray", file="InstanceBuilder.cs", label="Entry Unk.ToArray", span=""];
m0_52 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="InstanceBuilder.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="353-353"];
m0_61 [cluster="Unk.FromOptionSpecification", file="InstanceBuilder.cs", label="Entry Unk.FromOptionSpecification", span=""];
m0_54 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="InstanceBuilder.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m0_62 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m0_57 [cluster="Unk.MapValues", file="InstanceBuilder.cs", label="Entry Unk.MapValues", span=""];
m0_143 [file="InstanceBuilder.cs", label="System.StringComparer", span=""];
m0_144 [file="InstanceBuilder.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m0_145 [file="InstanceBuilder.cs", label="CommandLine.Infrastructure.Maybe<System.Func<T>>", span=""];
m0_146 [file="InstanceBuilder.cs", label=specProps, span=""];
m0_147 [file="InstanceBuilder.cs", label="System.StringComparer", span=""];
m0_148 [file="InstanceBuilder.cs", label=optionSpecs, span=""];
m0_149 [file="InstanceBuilder.cs", label="System.Globalization.CultureInfo", span=""];
m0_150 [file="InstanceBuilder.cs", label=token, span=""];
m1_18 [cluster="CommandLine.Infrastructure.StringExtensions.Spaces(int)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Infrastructure.StringExtensions.Spaces(int)", span="35-35"];
m1_19 [cluster="CommandLine.Infrastructure.StringExtensions.Spaces(int)", file="InstanceBuilderTests.cs", label="return new string(' ', value);", span="37-37"];
m1_20 [cluster="CommandLine.Infrastructure.StringExtensions.Spaces(int)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Infrastructure.StringExtensions.Spaces(int)", span="35-35"];
m1_15 [cluster="CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", span="30-30"];
m1_16 [cluster="CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", file="InstanceBuilderTests.cs", label="return string.Format(CultureInfo.CurrentCulture, value, arguments);", span="32-32"];
m1_17 [cluster="CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", span="30-30"];
m1_3 [cluster="string.String(char, int)", file="InstanceBuilderTests.cs", label="Entry string.String(char, int)", span="0-0"];
m1_34 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="InstanceBuilderTests.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m1_35 [cluster="System.Text.StringBuilder.Append(string)", file="InstanceBuilderTests.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m1_24 [cluster="string.CompareOrdinal(string, string)", file="InstanceBuilderTests.cs", label="Entry string.CompareOrdinal(string, string)", span="0-0"];
m1_37 [cluster="CommandLine.Infrastructure.StringExtensions.IsBooleanString(string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Infrastructure.StringExtensions.IsBooleanString(string)", span="60-60"];
m1_38 [cluster="CommandLine.Infrastructure.StringExtensions.IsBooleanString(string)", file="InstanceBuilderTests.cs", label="return value.Equals(''true'', StringComparison.OrdinalIgnoreCase)\r\n                || value.Equals(''false'', StringComparison.OrdinalIgnoreCase);", span="62-63"];
m1_39 [cluster="CommandLine.Infrastructure.StringExtensions.IsBooleanString(string)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Infrastructure.StringExtensions.IsBooleanString(string)", span="60-60"];
m1_7 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="InstanceBuilderTests.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m1_41 [cluster="CommandLine.Infrastructure.StringExtensions.ToBoolean(string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Infrastructure.StringExtensions.ToBoolean(string)", span="66-66"];
m1_42 [cluster="CommandLine.Infrastructure.StringExtensions.ToBoolean(string)", file="InstanceBuilderTests.cs", label="return value.Equals(''true'', StringComparison.OrdinalIgnoreCase);", span="68-68"];
m1_43 [cluster="CommandLine.Infrastructure.StringExtensions.ToBoolean(string)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Infrastructure.StringExtensions.ToBoolean(string)", span="66-66"];
m1_21 [cluster="CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", span="40-40"];
m1_22 [cluster="CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", file="InstanceBuilderTests.cs", label="return string.CompareOrdinal(strA, strB) == 0;", span="42-42"];
m1_23 [cluster="CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", span="40-40"];
m1_8 [cluster="CommandLine.Infrastructure.StringExtensions.ToStringLocal<T>(T)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Infrastructure.StringExtensions.ToStringLocal<T>(T)", span="20-20"];
m1_9 [cluster="CommandLine.Infrastructure.StringExtensions.ToStringLocal<T>(T)", color=red, community=0, file="InstanceBuilderTests.cs", label="3: return Convert.ToString(value, CultureInfo.CurrentCulture);", span="22-22"];
m1_10 [cluster="CommandLine.Infrastructure.StringExtensions.ToStringLocal<T>(T)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Infrastructure.StringExtensions.ToStringLocal<T>(T)", span="20-20"];
m1_40 [cluster="string.Equals(string, System.StringComparison)", file="InstanceBuilderTests.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m1_36 [cluster="System.Text.StringBuilder.ToString()", file="InstanceBuilderTests.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m1_28 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", span="50-50"];
m1_29 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="InstanceBuilderTests.cs", label="var builder = new StringBuilder(value)", span="52-52"];
m1_30 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="InstanceBuilderTests.cs", label=others, span="53-53"];
m1_31 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="InstanceBuilderTests.cs", label="builder.Append(v)", span="55-55"];
m1_32 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="InstanceBuilderTests.cs", label="return builder.ToString();", span="57-57"];
m1_33 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", span="50-50"];
m1_25 [cluster="CommandLine.Infrastructure.StringExtensions.SafeLength(string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Infrastructure.StringExtensions.SafeLength(string)", span="45-45"];
m1_26 [cluster="CommandLine.Infrastructure.StringExtensions.SafeLength(string)", file="InstanceBuilderTests.cs", label="return value == null ? 0 : value.Length;", span="47-47"];
m1_27 [cluster="CommandLine.Infrastructure.StringExtensions.SafeLength(string)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Infrastructure.StringExtensions.SafeLength(string)", span="45-45"];
m1_11 [cluster="CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", span="25-25"];
m1_12 [cluster="CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", file="InstanceBuilderTests.cs", label="return string.Format(CultureInfo.InvariantCulture, value, arguments);", span="27-27"];
m1_13 [cluster="CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", span="25-25"];
m1_0 [cluster="CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", span="10-10"];
m1_1 [cluster="CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", file="InstanceBuilderTests.cs", label="return new string(c, 1);", span="12-12"];
m1_2 [cluster="CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", span="10-10"];
m1_4 [cluster="CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", span="15-15"];
m1_5 [cluster="CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", file="InstanceBuilderTests.cs", label="return Convert.ToString(value, CultureInfo.InvariantCulture);", span="17-17"];
m1_6 [cluster="CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", span="15-15"];
m1_14 [cluster="string.Format(System.IFormatProvider, string, params object[])", file="InstanceBuilderTests.cs", label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0"];
m2_60 [cluster="CommandLine.Core.SpecificationProperty.WithValue(CommandLine.Infrastructure.Maybe<object>)", file="InstanceChooser.cs", label="Entry CommandLine.Core.SpecificationProperty.WithValue(CommandLine.Infrastructure.Maybe<object>)", span="18-18"];
m2_9 [cluster="lambda expression", file="InstanceChooser.cs", label="pe.Item1", span="19-19"];
m2_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="62-62"];
m2_43 [cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="InstanceChooser.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149"];
m2_34 [cluster="CommandLine.Core.Specification.CountOfMaxNumberOfValues()", file="InstanceChooser.cs", label="Entry CommandLine.Core.Specification.CountOfMaxNumberOfValues()", span="67-67"];
m2_6 [cluster="Humanizer.Localisation.ResourceKeys.DateHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense, int)", color=red, community=0, file="InstanceChooser.cs", label="17: var unit = timeUnit.ToString().ToQuantity(count, ShowQuantityAs.None)", span="36-36"];
m2_0 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="InstanceChooser.cs", label="Entry CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="11-11"];
m2_1 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="InstanceChooser.cs", label="var propAndErrors = MapValuesImpl(specProps, values, converter)", span="16-16"];
m2_2 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="InstanceChooser.cs", label="return StatePair.Create(\r\n                propAndErrors.Select(pe => pe.Item1),\r\n                propAndErrors.Select(pe => pe.Item2)\r\n                    .OfType<Just<Error>>().Select(e => e.Value)\r\n                );", span="18-22"];
m2_4 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="InstanceChooser.cs", label="Entry CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="25-25"];
m2_5 [cluster="Unk.Select", file="InstanceChooser.cs", label="Entry Unk.Select", span=""];
m2_3 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="InstanceChooser.cs", label="Exit CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="11-11"];
m2_7 [cluster="Unk.Create", color=red, community=0, file="InstanceChooser.cs", label="34: Entry Unk.Create", span=""];
m2_8 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="19-19"];
m2_56 [cluster="CommandLine.Core.Specification.IsValue()", file="InstanceChooser.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m2_71 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="InstanceChooser.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="134-134"];
m2_44 [cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="InstanceChooser.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="144-144"];
m2_42 [cluster="Unk.ToMaybe", file="InstanceChooser.cs", label="Entry Unk.ToMaybe", span=""];
m2_45 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m2_39 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="InstanceChooser.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m2_11 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="20-20"];
m2_14 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="21-21"];
m2_57 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="57-57"];
m2_53 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="43-43"];
m2_54 [cluster="lambda expression", color=green, community=0, file="InstanceChooser.cs", label="10: s.Specification.IsValue()", span="43-43"];
m2_55 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="43-43"];
m2_58 [cluster="lambda expression", file="InstanceChooser.cs", label="Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>())", span="57-57"];
m2_50 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="35-35"];
m2_59 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="57-57"];
m2_52 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="35-35"];
m2_51 [cluster="lambda expression", file="InstanceChooser.cs", label=n, span="35-35"];
m2_10 [cluster="System.Enum.ToString()", file="InstanceChooser.cs", label="Entry System.Enum.ToString()", span="0-0"];
m2_13 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="20-20"];
m2_12 [cluster="string.FormatWith(params object[])", file="InstanceChooser.cs", label="Entry string.FormatWith(params object[])", span="15-15"];
m2_15 [cluster="lambda expression", file="InstanceChooser.cs", label="e.Value", span="21-21"];
m2_16 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="21-21"];
m2_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m2_46 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="InstanceChooser.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="324-324"];
m2_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m2_37 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m2_48 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="InstanceChooser.cs", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m2_38 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="InstanceChooser.cs", label="Entry CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="83-83"];
m2_72 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="InstanceChooser.cs", label="return specification.Min.IsJust()\r\n                ? Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName))\r\n                : Maybe.Nothing<Error>();", span="85-87"];
m2_73 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="InstanceChooser.cs", label="Exit CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="83-83"];
m2_47 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="InstanceChooser.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
m2_49 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="InstanceChooser.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="313-313"];
m2_61 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="InstanceChooser.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m2_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m2_62 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="InstanceChooser.cs", label="Entry CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="67-67"];
m2_68 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="InstanceChooser.cs", label="return Maybe.Just(specification.Max.FromJust());", span="76-76"];
m2_65 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="InstanceChooser.cs", label="return Maybe.Just(1);", span="72-72"];
m2_67 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="InstanceChooser.cs", label="specification.Max.IsJust()", span="74-74"];
m2_64 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="InstanceChooser.cs", label="TargetType.Scalar", span="71-71"];
m2_66 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="InstanceChooser.cs", label="TargetType.Sequence", span="73-73"];
m2_69 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="InstanceChooser.cs", label="return Maybe.Nothing<int>();", span="80-80"];
m2_63 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="InstanceChooser.cs", label="specification.TargetType", span="69-69"];
m2_70 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="InstanceChooser.cs", label="Exit CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="67-67"];
m2_41 [cluster="Unk.FirstOrDefault", file="InstanceChooser.cs", label="Entry Unk.FirstOrDefault", span=""];
m2_22 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="InstanceChooser.cs", label="13: yield return\r\n                    Tuple.Create(pt, MakeErrorInCaseOfMinConstraint(pt.Specification));", span="38-39"];
m2_19 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="InstanceChooser.cs", label="var pt = specProps.First()", span="34-34"];
m2_21 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="InstanceChooser.cs", label="22: taken.Empty()", span="36-36"];
m2_23 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="InstanceChooser.cs", label="yield break;", span="40-40"];
m2_28 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="InstanceChooser.cs", label="3: yield return\r\n                converter(taken, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                    .Return(\r\n                        converted => Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>()),\r\n                        Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                            pt, Maybe.Just<Error>(new BadFormatConversionError(NameInfo.EmptyName))));", span="54-59"];
m2_27 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="InstanceChooser.cs", label="yield break;", span="51-51"];
m2_20 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="InstanceChooser.cs", label="var taken = values.Take(pt.Specification.CountOfMaxNumberOfValues().Return(n => n, values.Count()))", span="35-35"];
m2_25 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="InstanceChooser.cs", label="4: pt.Specification.Max.IsJust()\r\n                && next.IsNothing()\r\n                && values.Skip(taken.Count()).Any()", span="44-46"];
m2_29 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="InstanceChooser.cs", label="MapValuesImpl(specProps.Skip(1), values.Skip(taken.Count()), converter)", span="61-61"];
m2_24 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="InstanceChooser.cs", label="3: var next = specProps.Skip(1).FirstOrDefault(s => s.Specification.IsValue()).ToMaybe()", span="43-43"];
m2_26 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="InstanceChooser.cs", label="yield return\r\n                    Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                        pt, Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName)));", span="48-50"];
m2_17 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="InstanceChooser.cs", label="specProps.Empty()", span="30-30"];
m2_18 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="InstanceChooser.cs", label="yield break;", span="32-32"];
m2_30 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="InstanceChooser.cs", label="yield return value;", span="63-63"];
m2_31 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="InstanceChooser.cs", label="Exit CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="25-25"];
m2_36 [cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="InstanceChooser.cs", label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="100-100"];
m2_74 [file="InstanceChooser.cs", label=pt, span=""];
m3_38 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="InstanceChooserTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", span="74-74"];
m3_41 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="InstanceChooserTests.cs", label="specification.Min.MatchJust(out min) && specification.Max.MatchJust(out max)", span="78-78"];
m3_40 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="InstanceChooserTests.cs", label="int max", span="77-77"];
m3_42 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="InstanceChooserTests.cs", label="return predicate(min, max);", span="80-80"];
m3_43 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="InstanceChooserTests.cs", label="return false;", span="82-82"];
m3_39 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="InstanceChooserTests.cs", label="int min", span="76-76"];
m3_44 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="InstanceChooserTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", span="74-74"];
m3_10 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="InstanceChooserTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="38-38"];
m3_8 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="InstanceChooserTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", span="21-21"];
m3_46 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceChooserTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", span="85-85"];
m3_49 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceChooserTests.cs", label="return predicate(min);", span="90-90"];
m3_48 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceChooserTests.cs", label="specification.Min.MatchJust(out min)", span="88-88"];
m3_47 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceChooserTests.cs", label="int min", span="87-87"];
m3_50 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceChooserTests.cs", label="return false;", span="92-92"];
m3_51 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceChooserTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", span="85-85"];
m3_17 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="InstanceChooserTests.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="368-368"];
m3_16 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", span="34-34"];
m3_21 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs", label="Assert.IsType<NullInstance>(result.Value)", span="66-66"];
m3_14 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", color=green, community=0, file="InstanceChooserTests.cs", label="24: Assert.IsType<NullInstance>(result.Value)", span="47-47"];
m3_11 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", span="34-34"];
m3_12 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="var expectedErrors = new[] { new HelpVerbRequestedError(null, null, false) }", span="37-37"];
m3_13 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="40-44"];
m3_15 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", color=red, community=0, file="InstanceChooserTests.cs", label="35: Assert.True(expectedErrors.SequenceEqual(result.Errors))", span="48-48"];
m3_18 [cluster="lambda expression", file="InstanceChooserTests.cs", label="Entry lambda expression", span="42-42"];
m3_19 [cluster="lambda expression", file="InstanceChooserTests.cs", label="guard.Item1(spec)", span="42-42"];
m3_20 [cluster="lambda expression", file="InstanceChooserTests.cs", label="Exit lambda expression", span="42-42"];
m3_22 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", color=red, community=0, file="InstanceChooserTests.cs", label="24: Entry CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="51-51"];
m3_23 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="InstanceChooserTests.cs", label="specification.ConversionType.ToDescriptorKind()", span="53-53"];
m3_29 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="72-72"];
m3_28 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", color=red, community=0, file="InstanceChooserTests.cs", label="24: Assert.True(expectedErrors.SequenceEqual(result.Errors))", span="86-86"];
m3_30 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", span="91-91"];
m3_32 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''add'', ''--patch'', ''dummy.bin'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="97-101"];
m3_31 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="var expected = new AddOptions { Patch = true, FileName = ''dummy.bin''}", span="94-94"];
m3_27 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="Assert.IsType<NullInstance>(result.Value)", span="85-85"];
m3_25 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="var expectedErrors = new[] { new HelpVerbRequestedError(null, null, false) }", span="75-75"];
m3_24 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="72-72"];
m3_26 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'', ''earthunderalienattack'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="78-82"];
m3_33 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Assert.IsType<AddOptions>(result.Value)", span="104-104"];
m3_34 [cluster="System.Type.ToDescriptorKind()", file="InstanceChooserTests.cs", label="Entry System.Type.ToDescriptorKind()", span="22-22"];
m3_35 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="InstanceChooserTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
m3_9 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="InstanceChooserTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17"];
m3_6 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="InstanceChooserTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", span="21-21"];
m3_7 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", color=green, community=0, file="InstanceChooserTests.cs", label="12: return new OptionSpecification(\r\n                specification.ShortName,\r\n                newLongName,\r\n                specification.Required,\r\n                specification.SetName,\r\n                specification.Min,\r\n                specification.Max,\r\n                specification.Separator,\r\n                specification.DefaultValue,\r\n                specification.ConversionType,\r\n                specification.HelpText,\r\n                specification.MetaValue,\r\n                specification.EnumValues);", span="23-35"];
m3_37 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="InstanceChooserTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m3_36 [cluster="CommandLine.Infrastructure.Maybe<T>.MatchJust(out T)", file="InstanceChooserTests.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.MatchJust(out T)", span="31-31"];
m3_0 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", span="15-15"];
m3_1 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="var expectedErrors = new[] { new NoVerbSelectedError() }", span="18-18"];
m3_2 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="21-25"];
m3_4 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", color=red, community=0, file="InstanceChooserTests.cs", label="0: Assert.True(expectedErrors.SequenceEqual(result.Errors))", span="29-29"];
m3_3 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="Assert.IsType<NullInstance>(result.Value)", span="28-28"];
m3_5 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", span="15-15"];
m3_52 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceChooserTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", span="95-95"];
m3_55 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceChooserTests.cs", label="return predicate(max);", span="100-100"];
m3_54 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceChooserTests.cs", label="specification.Max.MatchJust(out max)", span="98-98"];
m3_53 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceChooserTests.cs", label="int max", span="97-97"];
m3_56 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceChooserTests.cs", label="return false;", span="102-102"];
m3_57 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceChooserTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", span="95-95"];
m3_45 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="InstanceChooserTests.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m3_58 [file="InstanceChooserTests.cs", label=guard, span=""];
m4_61 [cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="ParserResult.cs", label="throw new FormatException();", span="90-90"];
m4_48 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="ParserResult.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m4_12 [cluster="lambda expression", color=green, community=0, file="ParserResult.cs", label="1: pe.Item2", span="20-20"];
m4_13 [cluster="lambda expression", color=red, community=0, file="ParserResult.cs", label="1: Exit lambda expression", span="20-20"];
m4_14 [cluster="lambda expression", file="ParserResult.cs", label="Entry lambda expression", span="21-21"];
m4_15 [cluster="lambda expression", file="ParserResult.cs", label="e.Value", span="21-21"];
m4_16 [cluster="lambda expression", file="ParserResult.cs", label="Exit lambda expression", span="21-21"];
m4_26 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ParserResult.cs", label="2: yield return\r\n                    Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                        pt, Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName)));", span="48-50"];
m4_36 [cluster="lambda expression", file="ParserResult.cs", label="Exit lambda expression", span="36-36"];
m4_0 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ParserResult.cs", label="Entry CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="11-11"];
m4_1 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ParserResult.cs", label="23: var propAndErrors = MapValuesImpl(specProps, values, converter)", span="16-16"];
m4_3 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ParserResult.cs", label="Exit CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="11-11"];
m4_5 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", color=red, community=0, file="ParserResult.cs", label="23: conversionCulture == null", span="16-16"];
m4_7 [cluster="Unk.Create", color=red, community=0, file="ParserResult.cs", label="5: Entry Unk.Create", span=""];
m4_2 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ParserResult.cs", label="23: return StatePair.Create(\r\n                propAndErrors.Select(pe => pe.Item1),\r\n                propAndErrors.Select(pe => pe.Item2)\r\n                    .OfType<Just<Error>>().Select(e => e.Value)\r\n                );", span="18-22"];
m4_4 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ParserResult.cs", label="Entry CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="25-25"];
m4_6 [cluster="Unk.>", color=red, community=0, file="ParserResult.cs", label="23: Entry Unk.>", span=""];
m4_8 [cluster="lambda expression", file="ParserResult.cs", label="Entry lambda expression", span="19-19"];
m4_65 [cluster="System.Enum.IsDefined(System.Type, object)", file="ParserResult.cs", label=pt, span=""];
m4_43 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="ParserResult.cs", label="return Maybe.Nothing<object>();", span="60-60"];
m4_32 [cluster="lambda expression", file="ParserResult.cs", label="Exit lambda expression", span="34-34"];
m4_34 [cluster="lambda expression", file="ParserResult.cs", label="Entry lambda expression", span="36-36"];
m4_20 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ParserResult.cs", label="16: var taken = values.Take(pt.Specification.CountOfMaxNumberOfValues().Return(n => n, values.Count()))", span="35-35"];
m4_23 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ParserResult.cs", label="yield break;", span="40-40"];
m4_57 [cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="ParserResult.cs", label=ArgumentException, span="82-82"];
m4_21 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ParserResult.cs", label="1: taken.Empty()", span="36-36"];
m4_63 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ParserResult.cs", label="return specification.Min.IsJust()\r\n                ? Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName))\r\n                : Maybe.Nothing<Error>();", span="69-71"];
m4_64 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ParserResult.cs", label="Exit CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="67-67"];
m4_44 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="ParserResult.cs", label="Exit CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", span="39-39"];
m4_46 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="ParserResult.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m4_53 [cluster="lambda expression", file="ParserResult.cs", label="Exit lambda expression", span="35-35"];
m4_54 [cluster="lambda expression", file="ParserResult.cs", label="Entry lambda expression", span="43-43"];
m4_47 [cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="ParserResult.cs", label="Entry CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", span="75-75"];
m4_55 [cluster="lambda expression", file="ParserResult.cs", label="s.Specification.IsValue()", span="43-43"];
m4_56 [cluster="lambda expression", file="ParserResult.cs", label="Exit lambda expression", span="43-43"];
m4_59 [cluster="lambda expression", color=red, community=0, file="ParserResult.cs", label="38: Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>())", span="57-57"];
m4_60 [cluster="lambda expression", file="ParserResult.cs", label="Exit lambda expression", span="57-57"];
m4_58 [cluster="lambda expression", file="ParserResult.cs", label="Entry lambda expression", span="57-57"];
m4_62 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="ParserResult.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m4_19 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ParserResult.cs", label="16: var pt = specProps.First()", span="34-34"];
m4_39 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", color=red, community=0, file="ParserResult.cs", label="1: return Maybe.Nothing<object>();", span="52-52"];
m4_28 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ParserResult.cs", label="16: yield return\r\n                converter(taken, pt.Property.PropertyType, pt.Specification.ConversionType.IsScalar())\r\n                    .Return(\r\n                        converted => Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>()),\r\n                        Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                            pt, Maybe.Just<Error>(new BadFormatConversionError(NameInfo.EmptyName))));", span="54-59"];
m4_27 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ParserResult.cs", label="16: yield break;", span="51-51"];
m4_30 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ParserResult.cs", label="1: yield return value;", span="63-63"];
m4_29 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ParserResult.cs", label="16: MapValuesImpl(specProps.Skip(1), values.Skip(taken.Count()), converter)", span="61-61"];
m4_31 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ParserResult.cs", label="Exit CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="25-25"];
m4_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="ParserResult.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m4_11 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="ParserResult.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", span="39-39"];
m4_51 [cluster="CommandLine.Core.TypeConverter.MatchBoolString(string)", file="ParserResult.cs", label="Exit CommandLine.Core.TypeConverter.MatchBoolString(string)", span="64-64"];
m4_52 [cluster="string.Equals(string, System.StringComparison)", color=green, community=0, file="ParserResult.cs", label="2: Entry string.Equals(string, System.StringComparison)", span="0-0"];
m4_10 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="ParserResult.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m4_9 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ParserResult.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m4_33 [cluster="Unk.MatchNothing", file="ParserResult.cs", label="Entry Unk.MatchNothing", span=""];
m4_45 [cluster="CommandLine.Core.TypeConverter.MatchBoolString(string)", file="ParserResult.cs", label="Entry CommandLine.Core.TypeConverter.MatchBoolString(string)", span="64-64"];
m4_40 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", color=red, community=0, file="ParserResult.cs", label="1: FormatException", span="54-54"];
m4_37 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", color=red, community=0, file="ParserResult.cs", label="2: return Maybe.Just(\r\n                    MatchBoolString(value)\r\n                        ? ConvertBoolString(value)\r\n                        : conversionType.IsEnum\r\n                            ? ConvertEnumString(value, conversionType)\r\n                            : Convert.ChangeType(value, conversionType, conversionCulture));", span="43-48"];
m4_49 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="ParserResult.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m4_38 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ParserResult.cs", label="Entry CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="67-67"];
m4_41 [cluster="Unk.FirstOrDefault", file="ParserResult.cs", label="Entry Unk.FirstOrDefault", span=""];
m4_42 [cluster="Unk.ToMaybe", file="ParserResult.cs", label="Entry Unk.ToMaybe", span=""];
m4_22 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ParserResult.cs", label="1: yield return\r\n                    Tuple.Create(pt, MakeErrorInCaseOfMinConstraint(pt.Specification));", span="38-39"];
m4_17 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ParserResult.cs", label="specProps.Empty()", span="30-30"];
m4_50 [cluster="CommandLine.Core.TypeConverter.MatchBoolString(string)", file="ParserResult.cs", label="return value.Equals(''true'', StringComparison.OrdinalIgnoreCase)\r\n                   || value.Equals(''false'', StringComparison.OrdinalIgnoreCase);", span="66-67"];
m4_24 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ParserResult.cs", label="var next = specProps.Skip(1).FirstOrDefault(s => s.Specification.IsValue()).ToMaybe()", span="43-43"];
m4_25 [cluster="Unk.ToArray", color=green, community=0, file="ParserResult.cs", label="16: Entry Unk.ToArray", span=""];
m4_18 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="ParserResult.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m4_66 [file="ParserResult.cs", label="System.Globalization.CultureInfo", span=""];
m4_67 [file="ParserResult.cs", label=type, span=""];
m5_85 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="ParserTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m5_74 [cluster="NameInfo.cstr", file="ParserTests.cs", label="Entry NameInfo.cstr", span=""];
m5_4 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="ParserTests.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="24-24"];
m5_8 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="ParserTests.cs", label="return specProps =>\r\n            {\r\n                var options =\r\n                    from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Value.IsJust()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    select o;\r\n                var groups = from o in options\r\n                             group o by o.SetName into g\r\n                             select g;\r\n                if (groups.Count() > 1)\r\n                {\r\n                    return\r\n                        from o in options\r\n                        select new MutuallyExclusiveSetError(o.FromOptionSpecification());\r\n                }\r\n                return Enumerable.Empty<Error>();\r\n            };", span="26-45"];
m5_9 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="ParserTests.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="24-24"];
m5_70 [cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="ParserTests.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149"];
m5_6 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="ParserTests.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="96-96"];
m5_40 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", color=red, community=0, file="ParserTests.cs", label="38: return specProps =>\r\n                {\r\n                    var options = specProps\r\n                        .Where(sp => sp.Specification.TargetType == TargetType.Sequence)\r\n                        .Where(sp => sp.Value.IsJust())\r\n                        .Where(sp =>\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())\r\n                        );\r\n                    if (options.Any())\r\n                    {\r\n                        return\r\n                            from s in options\r\n                            select new SequenceOutOfRangeError(s.Specification.FromSpecification());\r\n                    }\r\n                    return Enumerable.Empty<Error>();\r\n                };", span="98-114"];
m5_41 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="ParserTests.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="96-96"];
m5_38 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="ParserTests.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m5_78 [cluster="CommandLine.Core.Token.IsName()", file="ParserTests.cs", label="Entry CommandLine.Core.Token.IsName()", span="68-68"];
m5_49 [cluster="Unk.Any", file="ParserTests.cs", label="Entry Unk.Any", span=""];
m5_37 [cluster="CommandLine.Core.Specification.IsValue()", file="ParserTests.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m5_22 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ParserTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m5_33 [cluster="Unk.IsNothing", file="ParserTests.cs", label="Entry Unk.IsNothing", span=""];
m5_48 [cluster="Unk.Where", file="ParserTests.cs", label="Entry Unk.Where", span=""];
m5_39 [cluster="Unk.FromSpecification", file="ParserTests.cs", label="Entry Unk.FromSpecification", span=""];
m5_7 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="ParserTests.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="117-117"];
m5_61 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", color=red, community=0, file="ParserTests.cs", label="29: return specProps =>\r\n                {\r\n                    var specs = from sp in specProps\r\n                                where sp.Specification.IsOption() && sp.Value.IsJust()\r\n                                select (OptionSpecification)sp.Specification;\r\n                    var options = from t in tokens.Where(t => t.IsName())\r\n                                  join o in specs on t.Text equals o.UniqueName() into to\r\n                                  from o in to.DefaultIfEmpty()\r\n                                  where o != null\r\n                                  select new { o.ShortName, o.LongName };\r\n                    var groups = from x in options\r\n                                 group x by x into g\r\n                                 let count = g.Count()\r\n                                 select new { Value = g.Key, Count = count };\r\n                    var errors = from y in groups\r\n                                 where y.Count > 1\r\n                                 select new RepeatedOptionError(new NameInfo(y.Value.ShortName, y.Value.LongName));\r\n                    return errors;\r\n                };", span="119-137"];
m5_62 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="ParserTests.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="117-117"];
m5_50 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="ParserTests.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="324-324"];
m5_84 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ParserTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m5_0 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="ParserTests.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m5_1 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="ParserTests.cs", label="return new List<Func<IEnumerable<SpecificationProperty>, IEnumerable<Error>>>\r\n                {\r\n                    EnforceMutuallyExclusiveSet(),\r\n                    EnforceRequired(),\r\n                    EnforceRange(),\r\n                    EnforceSingle(tokens)\r\n                };", span="15-21"];
m5_2 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="ParserTests.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m5_75 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="124-124"];
m5_11 [cluster="lambda expression", file="ParserTests.cs", label="var options =\r\n                    from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Value.IsJust()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    select o", span="28-34"];
m5_10 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="26-45"];
m5_12 [cluster="lambda expression", file="ParserTests.cs", label="var groups = from o in options\r\n                             group o by o.SetName into g\r\n                             select g", span="35-37"];
m5_14 [cluster="lambda expression", file="ParserTests.cs", label="return\r\n                        from o in options\r\n                        select new MutuallyExclusiveSetError(o.FromOptionSpecification());", span="40-42"];
m5_13 [cluster="lambda expression", file="ParserTests.cs", label="groups.Count() > 1", span="38-38"];
m5_15 [cluster="lambda expression", file="ParserTests.cs", label="return Enumerable.Empty<Error>();", span="44-44"];
m5_16 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="26-45"];
m5_26 [cluster="lambda expression", file="ParserTests.cs", label="var requiredWithValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsJust()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    select sp.Specification", span="52-58"];
m5_28 [cluster="lambda expression", file="ParserTests.cs", label="var requiredWithoutValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsNothing()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    where setWithRequiredValue.ContainsIfNotEmpty(o.SetName)\r\n                    select sp.Specification", span="65-72"];
m5_29 [cluster="lambda expression", color=red, community=0, file="ParserTests.cs", label="3: var missing =\r\n                    requiredWithoutValue\r\n                        .Except(requiredWithValue)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsOption()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            let o = (OptionSpecification)sp.Specification\r\n                            where o.SetName.Length == 0\r\n                            select sp.Specification)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsValue()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            select sp.Specification)", span="73-89"];
m5_25 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="50-93"];
m5_27 [cluster="lambda expression", file="ParserTests.cs", label="var setWithRequiredValue = (\r\n                    from s in requiredWithValue\r\n                    let o = (OptionSpecification)s\r\n                    where o.SetName.Length > 0\r\n                    select o.SetName)\r\n                        .Distinct()", span="59-64"];
m5_30 [cluster="lambda expression", file="ParserTests.cs", label="return\r\n                    from sp in missing\r\n                    select new MissingRequiredOptionError(sp.FromSpecification());", span="90-92"];
m5_31 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="50-93"];
m5_43 [cluster="lambda expression", file="ParserTests.cs", label="var options = specProps\r\n                        .Where(sp => sp.Specification.TargetType == TargetType.Sequence)\r\n                        .Where(sp => sp.Value.IsJust())\r\n                        .Where(sp =>\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())\r\n                        )", span="100-106"];
m5_42 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="98-114"];
m5_44 [cluster="lambda expression", file="ParserTests.cs", label="options.Any()", span="107-107"];
m5_51 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="101-101"];
m5_54 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="102-102"];
m5_57 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="103-105"];
m5_45 [cluster="lambda expression", file="ParserTests.cs", label="return\r\n                            from s in options\r\n                            select new SequenceOutOfRangeError(s.Specification.FromSpecification());", span="109-111"];
m5_46 [cluster="lambda expression", file="ParserTests.cs", label="return Enumerable.Empty<Error>();", span="113-113"];
m5_47 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="98-114"];
m5_52 [cluster="lambda expression", file="ParserTests.cs", label="sp.Specification.TargetType == TargetType.Sequence", span="101-101"];
m5_53 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="101-101"];
m5_55 [cluster="lambda expression", file="ParserTests.cs", label="sp.Value.IsJust()", span="102-102"];
m5_56 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="102-102"];
m5_58 [cluster="lambda expression", file="ParserTests.cs", label="(sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())", span="104-105"];
m5_59 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="103-105"];
m5_65 [cluster="lambda expression", file="ParserTests.cs", label="var options = from t in tokens.Where(t => t.IsName())\r\n                                  join o in specs on t.Text equals o.UniqueName() into to\r\n                                  from o in to.DefaultIfEmpty()\r\n                                  where o != null\r\n                                  select new { o.ShortName, o.LongName }", span="124-128"];
m5_64 [cluster="lambda expression", color=red, community=0, file="ParserTests.cs", label="30: var specs = from sp in specProps\r\n                                where sp.Specification.IsOption() && sp.Value.IsJust()\r\n                                select (OptionSpecification)sp.Specification", span="121-123"];
m5_63 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="119-137"];
m5_66 [cluster="lambda expression", file="ParserTests.cs", label="var groups = from x in options\r\n                                 group x by x into g\r\n                                 let count = g.Count()\r\n                                 select new { Value = g.Key, Count = count }", span="129-132"];
m5_67 [cluster="lambda expression", file="ParserTests.cs", label="var errors = from y in groups\r\n                                 where y.Count > 1\r\n                                 select new RepeatedOptionError(new NameInfo(y.Value.ShortName, y.Value.LongName))", span="133-135"];
m5_68 [cluster="lambda expression", file="ParserTests.cs", label="return errors;", span="136-136"];
m5_69 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="119-137"];
m5_76 [cluster="lambda expression", file="ParserTests.cs", label="t.IsName()", span="124-124"];
m5_77 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="124-124"];
m5_73 [cluster="CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", file="ParserTests.cs", label="Entry CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", span="335-335"];
m5_36 [cluster="Unk.Concat", file="ParserTests.cs", label="Entry Unk.Concat", span=""];
m5_5 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="ParserTests.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="48-48"];
m5_23 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", color=red, community=0, file="ParserTests.cs", label="3: return specProps =>\r\n            {\r\n                var requiredWithValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsJust()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    select sp.Specification;\r\n                var setWithRequiredValue = (\r\n                    from s in requiredWithValue\r\n                    let o = (OptionSpecification)s\r\n                    where o.SetName.Length > 0\r\n                    select o.SetName)\r\n                        .Distinct();\r\n                var requiredWithoutValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsNothing()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    where setWithRequiredValue.ContainsIfNotEmpty(o.SetName)\r\n                    select sp.Specification;\r\n                var missing =\r\n                    requiredWithoutValue\r\n                        .Except(requiredWithValue)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsOption()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            let o = (OptionSpecification)sp.Specification\r\n                            where o.SetName.Length == 0\r\n                            select sp.Specification)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsValue()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            select sp.Specification);\r\n                return\r\n                    from sp in missing\r\n                    select new MissingRequiredOptionError(sp.FromSpecification());\r\n            };", span="50-93"];
m5_24 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="ParserTests.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="48-48"];
m5_18 [cluster="Unk.IsJust", file="ParserTests.cs", label="Entry Unk.IsJust", span=""];
m5_34 [cluster="Unk.ContainsIfNotEmpty", file="ParserTests.cs", label="Entry Unk.ContainsIfNotEmpty", span=""];
m5_71 [cluster="Unk.UniqueName", file="ParserTests.cs", label="Entry Unk.UniqueName", span=""];
m5_35 [cluster="Unk.Except", file="ParserTests.cs", label="Entry Unk.Except", span=""];
m5_20 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="ParserTests.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="302-302"];
m5_72 [cluster="Unk.DefaultIfEmpty", file="ParserTests.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m5_17 [cluster="CommandLine.Core.Specification.IsOption()", file="ParserTests.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m5_60 [cluster="Unk.FromJust", file="ParserTests.cs", label="Entry Unk.FromJust", span=""];
m5_79 [cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="ParserTests.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", span="140-140"];
m5_80 [cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="ParserTests.cs", label="sequence.Any()", span="142-142"];
m5_81 [cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", color=red, community=0, file="ParserTests.cs", label="43: return sequence.Contains(value);", span="144-144"];
m5_82 [cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="ParserTests.cs", label="return true;", span="146-146"];
m5_83 [cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="ParserTests.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", span="140-140"];
m5_3 [cluster="System.Collections.Generic.List<T>.List()", file="ParserTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_32 [cluster="Unk.Distinct", file="ParserTests.cs", label="Entry Unk.Distinct", span=""];
m5_19 [cluster="Unk.Count", file="ParserTests.cs", label="Entry Unk.Count", span=""];
m5_21 [cluster="Unk.FromOptionSpecification", file="ParserTests.cs", label="Entry Unk.FromOptionSpecification", span=""];
m5_86 [file="ParserTests.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m6_18 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="ReflectionExtensions.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m6_16 [cluster="Unk.SingleOrDefault", file="ReflectionExtensions.cs", label="Entry Unk.SingleOrDefault", span=""];
m6_11 [cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="19-19"];
m6_12 [cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionExtensions.cs", label="name == null", span="22-22"];
m6_14 [cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionExtensions.cs", label="return specifications.SingleOrDefault(\r\n                a => name.MatchName(a.ShortName, a.LongName, comparer) && a.Separator != '\0')\r\n                .ToMaybe()\r\n                .Return(spec => Maybe.Just(spec.Separator), Maybe.Nothing<char>());", span="24-27"];
m6_13 [cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionExtensions.cs", label="throw new ArgumentNullException(''name'');", span="22-22"];
m6_15 [cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="19-19"];
m6_0 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12"];
m6_1 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionExtensions.cs", label="name == null", span="14-14"];
m6_3 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionExtensions.cs", label="return specifications.Any(a => name.MatchName(a.ShortName, a.LongName, comparer));", span="16-16"];
m6_2 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionExtensions.cs", label="throw new ArgumentNullException(''name'');", span="14-14"];
m6_4 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12"];
m6_10 [cluster="string.MatchName(string, string, System.StringComparer)", file="ReflectionExtensions.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m6_17 [cluster="Unk.ToMaybe", file="ReflectionExtensions.cs", label="Entry Unk.ToMaybe", span=""];
m6_26 [cluster="Unk.Just", file="ReflectionExtensions.cs", label="Entry Unk.Just", span=""];
m6_23 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="27-27"];
m6_8 [cluster="lambda expression", file="ReflectionExtensions.cs", label="name.MatchName(a.ShortName, a.LongName, comparer)", span="16-16"];
m6_7 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="16-16"];
m6_9 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="16-16"];
m6_21 [cluster="lambda expression", file="ReflectionExtensions.cs", label="name.MatchName(a.ShortName, a.LongName, comparer) && a.Separator != '\0'", span="25-25"];
m6_20 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="25-25"];
m6_22 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="25-25"];
m6_24 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Maybe.Just(spec.Separator)", span="27-27"];
m6_25 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="27-27"];
m6_19 [cluster="Unk.Return", file="ReflectionExtensions.cs", label="Entry Unk.Return", span=""];
m6_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ReflectionExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_6 [cluster="Unk.Any", file="ReflectionExtensions.cs", label="Entry Unk.Any", span=""];
m6_27 [file="ReflectionExtensions.cs", label=string, span=""];
m6_28 [file="ReflectionExtensions.cs", label="System.StringComparer", span=""];
m6_29 [file="ReflectionExtensions.cs", label=string, span=""];
m6_30 [file="ReflectionExtensions.cs", label="System.StringComparer", span=""];
m0_91 -> m0_92  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_9  [key=2, style=dotted];
m0_5 -> m0_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_14  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_10  [key=2, style=dotted];
m0_6 -> m0_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_4 -> m0_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_4 -> m0_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_11 -> m0_12  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_15 -> m0_16  [key=0, style=solid];
m0_8 -> m0_4  [color=blue, key=0, style=bold];
m0_13 -> m0_11  [color=blue, key=0, style=bold];
m0_17 -> m0_15  [color=blue, key=0, style=bold];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_63  [key=2, style=dotted];
m0_88 -> m0_64  [key=2, style=dotted];
m0_88 -> m0_44  [key=2, style=dotted];
m0_88 -> m0_66  [key=2, style=dotted];
m0_88 -> m0_90  [key=2, style=dotted];
m0_88 -> m0_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_88 -> m0_88  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_97  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_101  [key=2, style=dotted];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_101  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_108  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_81 -> m0_82  [key=0, style=solid];
m0_94 -> m0_95  [key=0, style=solid];
m0_98 -> m0_99  [key=0, style=solid];
m0_102 -> m0_103  [key=0, style=solid];
m0_105 -> m0_106  [key=0, style=solid];
m0_109 -> m0_110  [key=0, style=solid];
m0_137 -> m0_138  [key=0, style=solid];
m0_140 -> m0_141  [key=0, style=solid];
m0_112 -> m0_113  [key=0, style=solid];
m0_116 -> m0_117  [key=0, style=solid];
m0_120 -> m0_121  [key=0, style=solid];
m0_124 -> m0_125  [key=0, style=solid];
m0_127 -> m0_128  [key=0, style=solid];
m0_131 -> m0_132  [key=0, style=solid];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_51  [key=2, style=dotted];
m0_78 -> m0_80  [key=2, style=dotted];
m0_79 -> m0_77  [color=blue, key=0, style=bold];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_84  [key=2, style=dotted];
m0_82 -> m0_85  [key=2, style=dotted];
m0_82 -> m0_86  [key=2, style=dotted];
m0_83 -> m0_81  [color=blue, key=0, style=bold];
m0_87 -> m0_88  [key=0, style=solid];
m0_89 -> m0_87  [color=blue, key=0, style=bold];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_51  [key=2, style=dotted];
m0_93 -> m0_91  [color=blue, key=0, style=bold];
m0_96 -> m0_94  [color=blue, key=0, style=bold];
m0_100 -> m0_98  [color=blue, key=0, style=bold];
m0_104 -> m0_102  [color=blue, key=0, style=bold];
m0_107 -> m0_105  [color=blue, key=0, style=bold];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_51  [key=2, style=dotted];
m0_111 -> m0_109  [color=blue, key=0, style=bold];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_115  [key=2, style=dotted];
m0_114 -> m0_112  [color=blue, key=0, style=bold];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_119  [key=2, style=dotted];
m0_118 -> m0_116  [color=blue, key=0, style=bold];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_123  [key=2, style=dotted];
m0_121 -> m0_115  [key=2, style=dotted];
m0_122 -> m0_120  [color=blue, key=0, style=bold];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_119  [key=2, style=dotted];
m0_126 -> m0_124  [color=blue, key=0, style=bold];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_123  [key=2, style=dotted];
m0_128 -> m0_130  [key=2, style=dotted];
m0_129 -> m0_127  [color=blue, key=0, style=bold];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_134  [key=2, style=dotted];
m0_132 -> m0_135  [key=2, style=dotted];
m0_132 -> m0_136  [key=2, style=dotted];
m0_133 -> m0_131  [color=blue, key=0, style=bold];
m0_138 -> m0_139  [key=0, style=solid];
m0_139 -> m0_137  [color=blue, key=0, style=bold];
m0_141 -> m0_142  [key=0, style=solid];
m0_142 -> m0_140  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_0 -> m0_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_0 -> m0_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_0 -> m0_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_0 -> m0_3  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<T> Build", style=bold];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_1 -> m0_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1 -> m0_1  [color=darkorchid, key=3, label="method methodReturn CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>> ", style=bold];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_3 -> m0_19  [key=0, style=solid];
m0_3 -> m0_23  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.Maybe<System.Func<T>>", style=dashed];
m0_3 -> m0_88  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.Maybe<System.Func<T>>", style=dashed];
m0_3 -> m0_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_3 -> m0_26  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>", style=dashed];
m0_3 -> m0_28  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_3 -> m0_95  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_3 -> m0_29  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_3 -> m0_99  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_3 -> m0_30  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_3 -> m0_103  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_3 -> m0_31  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_3 -> m0_106  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_3 -> m0_35  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.Maybe<System.Func<T>>", style=dashed];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_44  [key=2, style=dotted];
m0_19 -> m0_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_19 -> m0_34  [color=darkseagreen4, key=1, label=typeInfo, style=dashed];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_25  [color=red, key=1, label=makeDefault, style=dashed];
m0_23 -> m0_23  [color=darkorchid, key=3, label="Local variable System.Func<T> makeDefault", style=bold];
m0_24 -> m0_25  [color=red, key=0, style=solid];
m0_24 -> m0_26  [key=0, style=solid];
m0_24 -> m0_48  [key=2, style=dotted];
m0_24 -> m0_49  [key=2, style=dotted];
m0_24 -> m0_50  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_54  [key=2, style=dotted];
m0_26 -> m0_42  [color=red, key=1, label=tokenizerResult, style=dashed];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_55  [key=2, style=dotted];
m0_28 -> m0_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_28 -> m0_30  [color=darkseagreen4, key=1, label=partitions, style=dashed];
m0_28 -> m0_31  [color=darkseagreen4, key=1, label=partitions, style=dashed];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_56  [key=2, style=dotted];
m0_29 -> m0_57  [key=2, style=dotted];
m0_29 -> m0_29  [color=darkseagreen4, key=1, label=pt, style=dashed];
m0_29 -> m0_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_29 -> m0_32  [color=darkseagreen4, key=1, label=optionSpecProps, style=dashed];
m0_29 -> m0_42  [color=red, key=1, label=optionSpecProps, style=dashed];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_58  [key=2, style=dotted];
m0_30 -> m0_57  [key=2, style=dotted];
m0_30 -> m0_30  [color=darkseagreen4, key=1, label=pt, style=dashed];
m0_30 -> m0_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_30 -> m0_32  [color=darkseagreen4, key=1, label=valueSpecProps, style=dashed];
m0_30 -> m0_42  [color=red, key=1, label=valueSpecProps, style=dashed];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_59  [key=2, style=dotted];
m0_31 -> m0_60  [key=2, style=dotted];
m0_31 -> m0_61  [key=2, style=dotted];
m0_31 -> m0_31  [color=darkseagreen4, key=1, label=token, style=dashed];
m0_31 -> m0_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_31 -> m0_106  [color=darkseagreen4, key=1, label=token, style=dashed];
m0_31 -> m0_42  [color=red, key=1, label=missingValueErrors, style=dashed];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_64  [key=2, style=dotted];
m0_35 -> m0_44  [key=2, style=dotted];
m0_35 -> m0_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_45  [key=2, style=dotted];
m0_20 -> m0_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_20 -> m0_23  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m0_20 -> m0_88  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m0_20 -> m0_29  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m0_20 -> m0_30  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m0_20 -> m0_38  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_37  [key=0, style=solid];
m0_34 -> m0_63  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_21  [color=darkseagreen4, key=1, label=pt, style=dashed];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_66  [key=2, style=dotted];
m0_38 -> m0_67  [key=2, style=dotted];
m0_38 -> m0_38  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_38 -> m0_40  [color=darkseagreen4, key=1, label=ctor, style=dashed];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_46  [key=2, style=dotted];
m0_22 -> m0_47  [key=2, style=dotted];
m0_22 -> m0_26  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m0_22 -> m0_28  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m0_22 -> m0_95  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m0_22 -> m0_31  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m0_25 -> m0_43  [color=red, key=0, style=solid];
m0_25 -> m0_51  [color=red, key=2, style=dotted];
m0_25 -> m0_52  [color=red, key=2, style=dotted];
m0_25 -> m0_53  [color=red, key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_41  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m0_42 -> m0_43  [color=red, key=0, style=solid];
m0_42 -> m0_75  [color=red, key=2, style=dotted];
m0_42 -> m0_76  [color=red, key=2, style=dotted];
m0_41 -> m0_42  [color=red, key=0, style=solid];
m0_41 -> m0_73  [key=2, style=dotted];
m0_41 -> m0_74  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_62  [key=2, style=dotted];
m0_32 -> m0_36  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m0_32 -> m0_39  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m0_32 -> m0_41  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m0_33 -> m0_34  [key=0, style=solid];
m0_36 -> m0_41  [key=0, style=solid];
m0_36 -> m0_65  [key=2, style=dotted];
m0_36 -> m0_36  [color=darkseagreen4, key=1, label=instance, style=dashed];
m0_36 -> m0_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_36 -> m0_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_36 -> m0_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_36 -> m0_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_36 -> m0_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_36 -> m0_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_36 -> m0_42  [color=red, key=1, label=instance, style=dashed];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_68  [key=2, style=dotted];
m0_39 -> m0_69  [key=2, style=dotted];
m0_39 -> m0_70  [key=2, style=dotted];
m0_39 -> m0_44  [key=2, style=dotted];
m0_39 -> m0_71  [key=2, style=dotted];
m0_39 -> m0_39  [color=darkseagreen4, key=1, label=prms, style=dashed];
m0_39 -> m0_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_39 -> m0_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_37 -> m0_38  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_72  [key=2, style=dotted];
m0_40 -> m0_42  [color=red, key=1, label=instance, style=dashed];
m0_43 -> m0_3  [color=blue, key=0, style=bold];
m0_143 -> m0_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_143 -> m0_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_143 -> m0_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_143 -> m0_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_144 -> m0_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_144 -> m0_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_145 -> m0_88  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.Maybe<System.Func<T>>", style=dashed];
m0_146 -> m0_88  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m0_147 -> m0_95  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_147 -> m0_106  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_148 -> m0_95  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m0_149 -> m0_99  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_149 -> m0_103  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_150 -> m0_106  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_3  [key=2, style=dotted];
m1_20 -> m1_18  [color=blue, key=0, style=bold];
m1_15 -> m1_16  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_14  [key=2, style=dotted];
m1_17 -> m1_15  [color=blue, key=0, style=bold];
m1_37 -> m1_38  [key=0, style=solid];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_40  [key=2, style=dotted];
m1_39 -> m1_37  [color=blue, key=0, style=bold];
m1_41 -> m1_42  [key=0, style=solid];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_40  [key=2, style=dotted];
m1_43 -> m1_41  [color=blue, key=0, style=bold];
m1_21 -> m1_22  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_24  [key=2, style=dotted];
m1_23 -> m1_21  [color=blue, key=0, style=bold];
m1_8 -> m1_9  [color=red, key=0, style=solid];
m1_9 -> m1_10  [color=red, key=0, style=solid];
m1_9 -> m1_7  [color=red, key=2, style=dotted];
m1_10 -> m1_8  [color=blue, key=0, style=bold];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_30  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_34  [key=2, style=dotted];
m1_29 -> m1_31  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_29 -> m1_32  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_32  [key=0, style=solid];
m1_31 -> m1_30  [key=0, style=solid];
m1_31 -> m1_35  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_36  [key=2, style=dotted];
m1_33 -> m1_28  [color=blue, key=0, style=bold];
m1_25 -> m1_26  [key=0, style=solid];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_25  [color=blue, key=0, style=bold];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_14  [key=2, style=dotted];
m1_13 -> m1_11  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_7  [key=2, style=dotted];
m1_6 -> m1_4  [color=blue, key=0, style=bold];
m2_9 -> m2_10  [key=0, style=solid];
m2_6 -> m2_7  [color=red, key=0, style=solid];
m2_6 -> m2_10  [color=red, key=2, style=dotted];
m2_6 -> m2_11  [color=red, key=2, style=dotted];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_0 -> m2_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_0 -> m2_5  [color=darkseagreen4, key=1, label="Humanizer.Localisation.TimeUnitTense", style=dashed];
m2_0 -> m2_6  [color=red, key=1, label="Humanizer.Localisation.TimeUnit", style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_9  [key=2, style=dotted];
m2_1 -> m2_4  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_4  [key=0, style=solid];
m2_2 -> m2_5  [key=2, style=dotted];
m2_2 -> m2_6  [key=2, style=dotted];
m2_2 -> m2_7  [key=2, style=dotted];
m2_2 -> m2_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_2 -> m2_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_2 -> m2_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_7  [color=red, key=1, label=singularity, style=dashed];
m2_4 -> m2_22  [color=green, key=0, style=bold];
m2_4 -> m2_28  [color=green, key=0, style=bold];
m2_4 -> m2_24  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m2_4 -> m2_25  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m2_4 -> m2_17  [key=0, style=solid];
m2_4 -> m2_18  [color=crimson, key=0, style=bold];
m2_4 -> m2_23  [color=crimson, key=0, style=bold];
m2_4 -> m2_26  [color=crimson, key=0, style=bold];
m2_4 -> m2_27  [color=crimson, key=0, style=bold];
m2_4 -> m2_30  [color=crimson, key=0, style=bold];
m2_4 -> m2_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m2_4 -> m2_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m2_4 -> m2_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m2_5 -> m2_6  [color=red, key=0, style=solid];
m2_5 -> m2_7  [color=red, key=1, label=tense, style=dashed];
m2_3 -> m2_8  [key=0, style=solid];
m2_3 -> m2_0  [color=blue, key=0, style=bold];
m2_7 -> m2_8  [color=red, key=0, style=solid];
m2_7 -> m2_12  [color=red, key=2, style=dotted];
m2_8 -> m2_0  [color=blue, key=0, style=bold];
m2_8 -> m2_9  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_57 -> m2_58  [key=0, style=solid];
m2_53 -> m2_54  [color=green, key=0, style=solid];
m2_54 -> m2_55  [color=green, key=0, style=solid];
m2_54 -> m2_56  [color=green, key=2, style=dotted];
m2_55 -> m2_53  [color=blue, key=0, style=bold];
m2_58 -> m2_39  [key=2, style=dotted];
m2_58 -> m2_47  [key=2, style=dotted];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_60  [key=2, style=dotted];
m2_58 -> m2_61  [key=2, style=dotted];
m2_50 -> m2_51  [key=0, style=solid];
m2_59 -> m2_57  [color=blue, key=0, style=bold];
m2_52 -> m2_50  [color=blue, key=0, style=bold];
m2_51 -> m2_52  [key=0, style=solid];
m2_10 -> m2_8  [color=blue, key=0, style=bold];
m2_13 -> m2_11  [color=blue, key=0, style=bold];
m2_12 -> m2_13  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_16 -> m2_14  [color=blue, key=0, style=bold];
m2_38 -> m2_72  [key=0, style=solid];
m2_72 -> m2_47  [key=2, style=dotted];
m2_72 -> m2_43  [key=2, style=dotted];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_46  [key=2, style=dotted];
m2_72 -> m2_61  [key=2, style=dotted];
m2_73 -> m2_38  [color=blue, key=0, style=bold];
m2_62 -> m2_68  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m2_62 -> m2_67  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m2_62 -> m2_63  [key=0, style=solid];
m2_68 -> m2_47  [key=2, style=dotted];
m2_68 -> m2_70  [key=0, style=solid];
m2_68 -> m2_71  [key=2, style=dotted];
m2_65 -> m2_47  [key=2, style=dotted];
m2_65 -> m2_70  [key=0, style=solid];
m2_67 -> m2_43  [key=2, style=dotted];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_69  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_66 -> m2_67  [key=0, style=solid];
m2_69 -> m2_61  [key=2, style=dotted];
m2_69 -> m2_70  [key=0, style=solid];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_66  [key=0, style=solid];
m2_70 -> m2_62  [color=blue, key=0, style=bold];
m2_22 -> m2_23  [color=green, key=0, style=solid];
m2_22 -> m2_38  [color=green, key=2, style=dotted];
m2_22 -> m2_39  [color=green, key=2, style=dotted];
m2_19 -> m2_22  [color=green, key=1, label=pt, style=dashed];
m2_19 -> m2_28  [color=green, key=1, label=pt, style=dashed];
m2_19 -> m2_25  [color=green, key=1, label=pt, style=dashed];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_33  [key=2, style=dotted];
m2_19 -> m2_26  [color=darkseagreen4, key=1, label=pt, style=dashed];
m2_19 -> m2_58  [color=darkseagreen4, key=1, label=pt, style=dashed];
m2_21 -> m2_22  [color=green, key=0, style=solid];
m2_21 -> m2_24  [color=green, key=0, style=solid];
m2_21 -> m2_32  [color=green, key=2, style=dotted];
m2_23 -> m2_24  [color=green, key=0, style=solid];
m2_28 -> m2_29  [color=green, key=0, style=solid];
m2_28 -> m2_48  [color=green, key=2, style=dotted];
m2_28 -> m2_49  [color=green, key=2, style=dotted];
m2_28 -> m2_47  [color=green, key=2, style=dotted];
m2_28 -> m2_39  [color=green, key=2, style=dotted];
m2_28 -> m2_36  [color=green, key=2, style=dotted];
m2_28 -> m2_57  [color=green, key=1, label="lambda expression", style=dashed];
m2_27 -> m2_28  [color=green, key=0, style=solid];
m2_20 -> m2_28  [color=green, key=1, label=taken, style=dashed];
m2_20 -> m2_25  [color=green, key=1, label=taken, style=dashed];
m2_20 -> m2_21  [color=green, key=0, style=solid];
m2_20 -> m2_34  [key=2, style=dotted];
m2_20 -> m2_35  [key=2, style=dotted];
m2_20 -> m2_36  [key=2, style=dotted];
m2_20 -> m2_37  [key=2, style=dotted];
m2_20 -> m2_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_20 -> m2_29  [color=darkseagreen4, key=1, label=taken, style=dashed];
m2_25 -> m2_28  [color=green, key=0, style=solid];
m2_25 -> m2_26  [color=green, key=0, style=solid];
m2_25 -> m2_43  [color=green, key=2, style=dotted];
m2_25 -> m2_44  [color=green, key=2, style=dotted];
m2_25 -> m2_35  [color=green, key=2, style=dotted];
m2_25 -> m2_40  [color=green, key=2, style=dotted];
m2_25 -> m2_45  [color=green, key=2, style=dotted];
m2_29 -> m2_4  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_31  [key=0, style=solid];
m2_29 -> m2_40  [key=2, style=dotted];
m2_29 -> m2_35  [key=2, style=dotted];
m2_24 -> m2_25  [color=green, key=0, style=solid];
m2_24 -> m2_40  [color=green, key=2, style=dotted];
m2_24 -> m2_41  [color=green, key=2, style=dotted];
m2_24 -> m2_42  [color=green, key=2, style=dotted];
m2_24 -> m2_53  [color=green, key=1, label="lambda expression", style=dashed];
m2_26 -> m2_39  [key=2, style=dotted];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_47  [key=2, style=dotted];
m2_26 -> m2_46  [key=2, style=dotted];
m2_17 -> m2_19  [key=0, style=solid];
m2_17 -> m2_32  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_30 -> m2_29  [key=0, style=solid];
m2_31 -> m2_4  [color=blue, key=0, style=bold];
m2_74 -> m2_58  [color=darkseagreen4, key=1, label=pt, style=dashed];
m3_38 -> m3_41  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_42  [color=darkseagreen4, key=1, label="System.Func<int, int, bool>", style=dashed];
m3_41 -> m3_36  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_43  [key=0, style=solid];
m3_40 -> m3_41  [key=0, style=solid];
m3_42 -> m3_44  [key=0, style=solid];
m3_42 -> m3_45  [key=2, style=dotted];
m3_43 -> m3_44  [key=0, style=solid];
m3_39 -> m3_40  [key=0, style=solid];
m3_44 -> m3_38  [color=blue, key=0, style=bold];
m3_10 -> m3_14  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m3_8 -> m3_6  [color=blue, key=0, style=bold];
m3_46 -> m3_49  [color=darkseagreen4, key=1, label="System.Func<int, bool>", style=dashed];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_48  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m3_49 -> m3_21  [key=2, style=dotted];
m3_49 -> m3_51  [key=0, style=solid];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_50  [key=0, style=solid];
m3_48 -> m3_36  [key=2, style=dotted];
m3_47 -> m3_48  [key=0, style=solid];
m3_50 -> m3_51  [key=0, style=solid];
m3_51 -> m3_46  [color=blue, key=0, style=bold];
m3_16 -> m3_11  [color=blue, key=0, style=bold];
m3_21 -> m3_22  [color=red, key=0, style=solid];
m3_21 -> m3_8  [key=2, style=dotted];
m3_14 -> m3_15  [color=red, key=0, style=solid];
m3_14 -> m3_8  [key=2, style=dotted];
m3_11 -> m3_14  [color=green, key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_19  [color=darkseagreen4, key=1, label=guard, style=dashed];
m3_11 -> m3_13  [color=darkseagreen4, key=1, label=guard, style=dashed];
m3_12 -> m3_11  [key=0, style=solid];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_16  [key=2, style=dotted];
m3_12 -> m3_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_12 -> m3_17  [key=2, style=dotted];
m3_12 -> m3_15  [color=red, key=1, label=expectedErrors, style=dashed];
m3_13 -> m3_15  [key=0, style=solid];
m3_13 -> m3_17  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_7  [key=2, style=dotted];
m3_15 -> m3_10  [color=blue, key=0, style=bold];
m3_15 -> m3_16  [color=red, key=0, style=solid];
m3_15 -> m3_9  [color=red, key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_17  [key=2, style=dotted];
m3_19 -> m3_22  [color=red, key=1, label=expectedErrors, style=dashed];
m3_19 -> m3_21  [key=2, style=dotted];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_7  [key=2, style=dotted];
m3_20 -> m3_22  [color=red, key=1, label=result, style=dashed];
m3_20 -> m3_18  [color=blue, key=0, style=bold];
m3_22 -> m3_23  [color=red, key=0, style=solid];
m3_22 -> m3_9  [color=red, key=2, style=dotted];
m3_22 -> m3_10  [color=red, key=2, style=dotted];
m3_22 -> m3_29  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m3_23 -> m3_18  [color=blue, key=0, style=bold];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_26  [key=0, style=solid];
m3_23 -> m3_34  [key=2, style=dotted];
m3_29 -> m3_36  [key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_32  [key=0, style=solid];
m3_29 -> m3_31  [color=darkseagreen4, key=1, label=max, style=dashed];
m3_29 -> m3_24  [color=blue, key=0, style=bold];
m3_28 -> m3_29  [color=red, key=0, style=solid];
m3_28 -> m3_9  [color=red, key=2, style=dotted];
m3_28 -> m3_10  [color=red, key=2, style=dotted];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_32  [key=0, style=solid];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_37  [key=2, style=dotted];
m3_32 -> m3_7  [key=2, style=dotted];
m3_32 -> m3_34  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_31 -> m3_33  [key=0, style=solid];
m3_31 -> m3_35  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_36  [key=2, style=dotted];
m3_31 -> m3_34  [color=darkseagreen4, key=1, label=expected, style=dashed];
m3_27 -> m3_28  [color=red, key=0, style=solid];
m3_27 -> m3_8  [key=2, style=dotted];
m3_25 -> m3_33  [key=0, style=solid];
m3_25 -> m3_35  [key=2, style=dotted];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_17  [key=2, style=dotted];
m3_25 -> m3_28  [color=red, key=1, label=expectedErrors, style=dashed];
m3_24 -> m3_25  [key=0, style=solid];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_7  [key=2, style=dotted];
m3_26 -> m3_28  [color=red, key=1, label=result, style=dashed];
m3_33 -> m3_22  [color=blue, key=0, style=bold];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_8  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_37  [key=2, style=dotted];
m3_35 -> m3_30  [color=blue, key=0, style=bold];
m3_6 -> m3_7  [color=green, key=0, style=solid];
m3_7 -> m3_8  [color=green, key=0, style=solid];
m3_7 -> m3_9  [color=green, key=2, style=dotted];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_6  [key=2, style=dotted];
m3_1 -> m3_4  [color=red, key=1, label=expectedErrors, style=dashed];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_7  [key=2, style=dotted];
m3_2 -> m3_4  [color=red, key=1, label=result, style=dashed];
m3_4 -> m3_5  [color=red, key=0, style=solid];
m3_4 -> m3_9  [color=red, key=2, style=dotted];
m3_4 -> m3_10  [color=red, key=2, style=dotted];
m3_3 -> m3_4  [color=red, key=0, style=solid];
m3_3 -> m3_8  [key=2, style=dotted];
m3_5 -> m3_0  [color=blue, key=0, style=bold];
m3_52 -> m3_55  [color=darkseagreen4, key=1, label="System.Func<int, bool>", style=dashed];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_54  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m3_55 -> m3_21  [key=2, style=dotted];
m3_55 -> m3_57  [key=0, style=solid];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_56  [key=0, style=solid];
m3_54 -> m3_36  [key=2, style=dotted];
m3_53 -> m3_54  [key=0, style=solid];
m3_56 -> m3_57  [key=0, style=solid];
m3_57 -> m3_52  [color=blue, key=0, style=bold];
m3_58 -> m3_19  [color=darkseagreen4, key=1, label=guard, style=dashed];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> m4_64  [key=2, style=dotted];
m4_12 -> m4_13  [color=green, key=0, style=solid];
m4_12 -> m4_14  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m4_12 -> m4_28  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m4_13 -> m4_14  [color=red, key=0, style=solid];
m4_13 -> m4_17  [color=red, key=2, style=dotted];
m4_13 -> m4_18  [color=red, key=2, style=dotted];
m4_13 -> m4_19  [color=red, key=2, style=dotted];
m4_13 -> m4_20  [color=red, key=2, style=dotted];
m4_13 -> m4_21  [color=red, key=2, style=dotted];
m4_13 -> m4_28  [color=red, key=1, label=type, style=dashed];
m4_13 -> m4_15  [color=red, key=1, label=type, style=dashed];
m4_13 -> m4_11  [color=blue, key=0, style=bold];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_22  [key=2, style=dotted];
m4_14 -> m4_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_23  [key=2, style=dotted];
m4_15 -> m4_24  [key=2, style=dotted];
m4_15 -> m4_22  [key=2, style=dotted];
m4_15 -> m4_25  [key=2, style=dotted];
m4_15 -> m4_26  [key=2, style=dotted];
m4_15 -> m4_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_15 -> m4_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_16 -> m4_12  [color=blue, key=0, style=bold];
m4_16 -> m4_14  [color=blue, key=0, style=bold];
m4_26 -> m4_27  [color=green, key=0, style=solid];
m4_26 -> m4_46  [color=green, key=2, style=dotted];
m4_26 -> m4_49  [color=green, key=2, style=dotted];
m4_26 -> m4_39  [color=green, key=2, style=dotted];
m4_36 -> m4_34  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [color=green, key=0, style=solid];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_0 -> m4_5  [color=red, key=1, label="System.Globalization.CultureInfo", style=dashed];
m4_0 -> m4_7  [color=red, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m4_1 -> m4_2  [color=green, key=0, style=solid];
m4_1 -> m4_3  [key=0, style=solid];
m4_1 -> m4_4  [color=green, key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_5  [color=red, key=0, style=solid];
m4_3 -> m4_0  [color=blue, key=0, style=bold];
m4_5 -> m4_6  [color=red, key=0, style=solid];
m4_5 -> m4_7  [color=red, key=0, style=solid];
m4_7 -> m4_8  [color=red, key=0, style=solid];
m4_7 -> m4_10  [color=red, key=2, style=dotted];
m4_7 -> m4_11  [color=red, key=2, style=dotted];
m4_7 -> m4_12  [color=red, key=2, style=dotted];
m4_2 -> m4_8  [key=0, style=solid];
m4_2 -> m4_9  [key=2, style=dotted];
m4_2 -> m4_2  [color=green, key=3, label="Field variable System.Collections.Generic.IEnumerable<System.Type> verbTypes", style=bold];
m4_2 -> m4_3  [color=green, key=0, style=solid];
m4_2 -> m4_22  [color=green, key=2, style=dotted];
m4_2 -> m4_6  [color=green, key=2, style=dotted];
m4_2 -> m4_7  [color=green, key=2, style=dotted];
m4_2 -> m4_11  [color=green, key=1, label="lambda expression", style=dashed];
m4_2 -> m4_14  [color=green, key=1, label="lambda expression", style=dashed];
m4_4 -> m4_8  [key=0, style=solid];
m4_4 -> m4_9  [key=2, style=dotted];
m4_4 -> m4_22  [color=green, key=0, style=bold];
m4_4 -> m4_26  [color=green, key=0, style=bold];
m4_4 -> m4_27  [color=green, key=0, style=bold];
m4_4 -> m4_28  [color=green, key=0, style=bold];
m4_4 -> m4_30  [color=green, key=0, style=bold];
m4_4 -> m4_19  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m4_4 -> m4_20  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m4_4 -> m4_25  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m4_4 -> m4_29  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m4_4 -> m4_17  [key=0, style=solid];
m4_4 -> m4_18  [color=crimson, key=0, style=bold];
m4_4 -> m4_23  [color=crimson, key=0, style=bold];
m4_4 -> m4_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m4_6 -> m4_8  [color=red, key=0, style=solid];
m4_6 -> m4_9  [color=red, key=2, style=dotted];
m4_8 -> m4_0  [color=blue, key=0, style=bold];
m4_8 -> m4_9  [key=0, style=solid];
m4_65 -> m4_59  [color=darkseagreen4, key=1, label=pt, style=dashed];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_24  [key=2, style=dotted];
m4_32 -> m4_30  [color=blue, key=0, style=bold];
m4_34 -> m4_35  [key=0, style=solid];
m4_20 -> m4_28  [color=green, key=1, label=taken, style=dashed];
m4_20 -> m4_21  [color=green, key=0, style=solid];
m4_20 -> m4_34  [color=green, key=2, style=dotted];
m4_20 -> m4_35  [color=green, key=2, style=dotted];
m4_20 -> m4_36  [color=green, key=2, style=dotted];
m4_20 -> m4_37  [color=green, key=2, style=dotted];
m4_20 -> m4_51  [color=green, key=1, label="lambda expression", style=dashed];
m4_20 -> m4_25  [color=green, key=1, label=taken, style=dashed];
m4_20 -> m4_29  [color=green, key=1, label=taken, style=dashed];
m4_23 -> m4_24  [key=0, style=solid];
m4_57 -> m4_58  [key=0, style=solid];
m4_21 -> m4_22  [color=green, key=0, style=solid];
m4_21 -> m4_24  [color=green, key=0, style=solid];
m4_21 -> m4_32  [color=green, key=2, style=dotted];
m4_63 -> m4_46  [key=2, style=dotted];
m4_63 -> m4_43  [key=2, style=dotted];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_49  [key=2, style=dotted];
m4_63 -> m4_62  [key=2, style=dotted];
m4_64 -> m4_38  [color=blue, key=0, style=bold];
m4_44 -> m4_11  [color=blue, key=0, style=bold];
m4_46 -> m4_53  [key=0, style=solid];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_52  [key=2, style=dotted];
m4_53 -> m4_51  [color=blue, key=0, style=bold];
m4_54 -> m4_46  [color=blue, key=0, style=bold];
m4_54 -> m4_55  [key=0, style=solid];
m4_47 -> m4_55  [key=0, style=solid];
m4_47 -> m4_56  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_47 -> m4_59  [color=red, key=1, label="System.Type", style=dashed];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_57  [key=2, style=dotted];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_59  [color=red, key=0, style=solid];
m4_56 -> m4_63  [key=2, style=dotted];
m4_56 -> m4_60  [color=darkseagreen4, key=1, label=parsedValue, style=dashed];
m4_56 -> m4_54  [color=blue, key=0, style=bold];
m4_59 -> m4_60  [color=red, key=0, style=solid];
m4_59 -> m4_61  [color=red, key=0, style=solid];
m4_59 -> m4_65  [color=red, key=2, style=dotted];
m4_59 -> m4_39  [key=2, style=dotted];
m4_59 -> m4_49  [key=2, style=dotted];
m4_59 -> m4_62  [key=2, style=dotted];
m4_60 -> m4_62  [key=0, style=solid];
m4_60 -> m4_58  [color=blue, key=0, style=bold];
m4_58 -> m4_62  [key=0, style=solid];
m4_58 -> m4_64  [key=2, style=dotted];
m4_58 -> m4_59  [key=0, style=solid];
m4_62 -> m4_47  [color=blue, key=0, style=bold];
m4_19 -> m4_2  [color=green, key=3, label="Property variable System.Collections.Generic.IEnumerable<System.Type> VerbTypes", style=bold];
m4_19 -> m4_22  [color=green, key=1, label=pt, style=dashed];
m4_19 -> m4_26  [color=green, key=1, label=pt, style=dashed];
m4_19 -> m4_28  [color=green, key=1, label=pt, style=dashed];
m4_19 -> m4_20  [color=green, key=0, style=solid];
m4_19 -> m4_33  [color=green, key=2, style=dotted];
m4_19 -> m4_25  [color=green, key=1, label=pt, style=dashed];
m4_19 -> m4_59  [color=green, key=1, label=pt, style=dashed];
m4_39 -> m4_44  [color=red, key=0, style=solid];
m4_39 -> m4_24  [color=red, key=2, style=dotted];
m4_28 -> m4_29  [color=green, key=0, style=solid];
m4_28 -> m4_11  [key=2, style=dotted];
m4_28 -> m4_48  [color=green, key=2, style=dotted];
m4_28 -> m4_49  [color=green, key=2, style=dotted];
m4_28 -> m4_50  [color=green, key=2, style=dotted];
m4_28 -> m4_39  [color=green, key=2, style=dotted];
m4_28 -> m4_36  [color=green, key=2, style=dotted];
m4_28 -> m4_58  [color=green, key=1, label="lambda expression", style=dashed];
m4_27 -> m4_28  [color=green, key=0, style=solid];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_29  [color=green, key=0, style=solid];
m4_29 -> m4_27  [color=blue, key=0, style=bold];
m4_29 -> m4_30  [color=green, key=0, style=solid];
m4_29 -> m4_31  [color=green, key=0, style=solid];
m4_29 -> m4_40  [color=green, key=2, style=dotted];
m4_29 -> m4_35  [color=green, key=2, style=dotted];
m4_29 -> m4_4  [color=green, key=2, style=dotted];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_33  [key=2, style=dotted];
m4_31 -> m4_4  [color=blue, key=0, style=bold];
m4_35 -> m4_36  [key=0, style=solid];
m4_11 -> m4_12  [color=green, key=0, style=solid];
m4_11 -> m4_37  [color=red, key=0, style=solid];
m4_11 -> m4_7  [color=red, key=3, label="Property variable T Value", style=bold];
m4_51 -> m4_52  [color=green, key=0, style=solid];
m4_51 -> m4_45  [color=blue, key=0, style=bold];
m4_52 -> m4_53  [color=green, key=0, style=solid];
m4_10 -> m4_8  [color=blue, key=0, style=bold];
m4_9 -> m4_10  [key=0, style=solid];
m4_45 -> m4_50  [key=0, style=solid];
m4_40 -> m4_41  [color=red, key=0, style=solid];
m4_37 -> m4_44  [color=red, key=0, style=solid];
m4_37 -> m4_45  [color=red, key=2, style=dotted];
m4_37 -> m4_46  [color=red, key=2, style=dotted];
m4_37 -> m4_47  [color=red, key=2, style=dotted];
m4_37 -> m4_48  [color=red, key=2, style=dotted];
m4_37 -> m4_49  [color=red, key=2, style=dotted];
m4_37 -> m4_38  [color=red, key=3, label="method methodReturn System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>> EnforceRequired", style=bold];
m4_37 -> m4_7  [color=red, key=3, label="Property variable System.Collections.Generic.IEnumerable<CommandLine.Error> Errors", style=bold];
m4_38 -> m4_39  [color=red, key=0, style=solid];
m4_38 -> m4_63  [key=0, style=solid];
m4_41 -> m4_44  [key=0, style=solid];
m4_41 -> m4_24  [key=2, style=dotted];
m4_42 -> m4_43  [key=0, style=solid];
m4_22 -> m4_23  [color=green, key=0, style=solid];
m4_22 -> m4_38  [color=green, key=2, style=dotted];
m4_22 -> m4_39  [color=green, key=2, style=dotted];
m4_17 -> m4_19  [color=green, key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_32  [key=2, style=dotted];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_52  [key=2, style=dotted];
m4_24 -> m4_25  [color=green, key=0, style=solid];
m4_24 -> m4_40  [key=2, style=dotted];
m4_24 -> m4_41  [key=2, style=dotted];
m4_24 -> m4_42  [key=2, style=dotted];
m4_24 -> m4_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_25 -> m4_26  [color=green, key=0, style=solid];
m4_25 -> m4_28  [color=green, key=0, style=solid];
m4_25 -> m4_43  [color=green, key=2, style=dotted];
m4_25 -> m4_44  [color=green, key=2, style=dotted];
m4_25 -> m4_35  [color=green, key=2, style=dotted];
m4_25 -> m4_40  [color=green, key=2, style=dotted];
m4_25 -> m4_45  [color=green, key=2, style=dotted];
m4_18 -> m4_19  [color=green, key=0, style=solid];
m4_66 -> m4_28  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m4_67 -> m4_28  [color=darkseagreen4, key=1, label=type, style=dashed];
m5_4 -> m5_8  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_11  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m5_9 -> m5_4  [color=blue, key=0, style=bold];
m5_6 -> m5_40  [color=red, key=0, style=solid];
m5_40 -> m5_41  [color=red, key=0, style=solid];
m5_40 -> m5_43  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m5_41 -> m5_6  [color=blue, key=0, style=bold];
m5_7 -> m5_61  [color=red, key=0, style=solid];
m5_7 -> m5_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m5_61 -> m5_62  [color=red, key=0, style=solid];
m5_61 -> m5_64  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m5_62 -> m5_7  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_1 -> m5_4  [key=2, style=dotted];
m5_1 -> m5_5  [key=2, style=dotted];
m5_1 -> m5_6  [key=2, style=dotted];
m5_1 -> m5_7  [key=2, style=dotted];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_75 -> m5_76  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_17  [key=2, style=dotted];
m5_11 -> m5_18  [key=2, style=dotted];
m5_11 -> m5_11  [color=darkseagreen4, key=1, label=sp, style=dashed];
m5_11 -> m5_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m5_10 -> m5_11  [key=0, style=solid];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_12  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_14 -> m5_16  [key=0, style=solid];
m5_14 -> m5_20  [key=2, style=dotted];
m5_14 -> m5_21  [key=2, style=dotted];
m5_14 -> m5_14  [color=darkseagreen4, key=1, label=o, style=dashed];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_15  [key=0, style=solid];
m5_13 -> m5_19  [key=2, style=dotted];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_22  [key=2, style=dotted];
m5_16 -> m5_10  [color=blue, key=0, style=bold];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_17  [key=2, style=dotted];
m5_26 -> m5_18  [key=2, style=dotted];
m5_26 -> m5_26  [color=darkseagreen4, key=1, label=sp, style=dashed];
m5_26 -> m5_29  [color=red, key=1, label=requiredWithValue, style=dashed];
m5_28 -> m5_29  [color=red, key=0, style=solid];
m5_28 -> m5_17  [key=2, style=dotted];
m5_28 -> m5_33  [key=2, style=dotted];
m5_28 -> m5_34  [key=2, style=dotted];
m5_28 -> m5_28  [color=darkseagreen4, key=1, label=sp, style=dashed];
m5_29 -> m5_30  [color=red, key=0, style=solid];
m5_29 -> m5_35  [color=red, key=2, style=dotted];
m5_29 -> m5_17  [color=red, key=2, style=dotted];
m5_29 -> m5_33  [color=red, key=2, style=dotted];
m5_29 -> m5_36  [color=red, key=2, style=dotted];
m5_29 -> m5_37  [color=red, key=2, style=dotted];
m5_29 -> m5_29  [color=red, key=1, label=sp, style=dashed];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m5_25 -> m5_29  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_32  [key=2, style=dotted];
m5_27 -> m5_27  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_38  [key=2, style=dotted];
m5_30 -> m5_39  [key=2, style=dotted];
m5_30 -> m5_30  [color=darkseagreen4, key=1, label=sp, style=dashed];
m5_31 -> m5_25  [color=blue, key=0, style=bold];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_48  [key=2, style=dotted];
m5_43 -> m5_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_43 -> m5_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_43 -> m5_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_43 -> m5_45  [color=darkseagreen4, key=1, label=options, style=dashed];
m5_42 -> m5_43  [key=0, style=solid];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_46  [key=0, style=solid];
m5_44 -> m5_49  [key=2, style=dotted];
m5_51 -> m5_52  [key=0, style=solid];
m5_54 -> m5_55  [key=0, style=solid];
m5_57 -> m5_58  [key=0, style=solid];
m5_45 -> m5_47  [key=0, style=solid];
m5_45 -> m5_50  [key=2, style=dotted];
m5_45 -> m5_39  [key=2, style=dotted];
m5_45 -> m5_45  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_22  [key=2, style=dotted];
m5_47 -> m5_42  [color=blue, key=0, style=bold];
m5_52 -> m5_53  [key=0, style=solid];
m5_53 -> m5_51  [color=blue, key=0, style=bold];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_18  [key=2, style=dotted];
m5_56 -> m5_54  [color=blue, key=0, style=bold];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_18  [key=2, style=dotted];
m5_58 -> m5_60  [key=2, style=dotted];
m5_59 -> m5_57  [color=blue, key=0, style=bold];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_48  [key=2, style=dotted];
m5_65 -> m5_71  [key=2, style=dotted];
m5_65 -> m5_72  [key=2, style=dotted];
m5_65 -> m5_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_65 -> m5_65  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_64 -> m5_65  [color=red, key=0, style=solid];
m5_64 -> m5_17  [color=red, key=2, style=dotted];
m5_64 -> m5_70  [color=red, key=2, style=dotted];
m5_64 -> m5_64  [color=red, key=1, label=sp, style=dashed];
m5_63 -> m5_64  [color=red, key=0, style=solid];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_19  [key=2, style=dotted];
m5_66 -> m5_66  [color=darkseagreen4, key=1, label=x, style=dashed];
m5_67 -> m5_68  [key=0, style=solid];
m5_67 -> m5_73  [key=2, style=dotted];
m5_67 -> m5_74  [key=2, style=dotted];
m5_67 -> m5_67  [color=darkseagreen4, key=1, label=y, style=dashed];
m5_68 -> m5_69  [key=0, style=solid];
m5_69 -> m5_63  [color=blue, key=0, style=bold];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_78  [key=2, style=dotted];
m5_77 -> m5_75  [color=blue, key=0, style=bold];
m5_5 -> m5_23  [color=red, key=0, style=solid];
m5_23 -> m5_24  [color=red, key=0, style=solid];
m5_23 -> m5_26  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m5_23 -> m5_28  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m5_23 -> m5_29  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m5_24 -> m5_5  [color=blue, key=0, style=bold];
m5_79 -> m5_80  [key=0, style=solid];
m5_79 -> m5_81  [color=red, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m5_80 -> m5_81  [color=red, key=0, style=solid];
m5_80 -> m5_82  [key=0, style=solid];
m5_80 -> m5_84  [key=2, style=dotted];
m5_81 -> m5_83  [color=red, key=0, style=solid];
m5_81 -> m5_85  [color=red, key=2, style=dotted];
m5_82 -> m5_83  [key=0, style=solid];
m5_83 -> m5_79  [color=blue, key=0, style=bold];
m5_86 -> m5_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_11 -> m6_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_14  [key=0, style=solid];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_16  [key=2, style=dotted];
m6_14 -> m6_17  [key=2, style=dotted];
m6_14 -> m6_18  [key=2, style=dotted];
m6_14 -> m6_19  [key=2, style=dotted];
m6_14 -> m6_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_14 -> m6_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_13 -> m6_15  [key=0, style=solid];
m6_13 -> m6_5  [key=2, style=dotted];
m6_15 -> m6_11  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_6  [key=2, style=dotted];
m6_3 -> m6_7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2 -> m6_4  [key=0, style=solid];
m6_2 -> m6_5  [key=2, style=dotted];
m6_4 -> m6_0  [color=blue, key=0, style=bold];
m6_23 -> m6_24  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_10  [key=2, style=dotted];
m6_7 -> m6_8  [key=0, style=solid];
m6_9 -> m6_7  [color=blue, key=0, style=bold];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_10  [key=2, style=dotted];
m6_20 -> m6_21  [key=0, style=solid];
m6_22 -> m6_20  [color=blue, key=0, style=bold];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_26  [key=2, style=dotted];
m6_25 -> m6_23  [color=blue, key=0, style=bold];
m6_27 -> m6_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_28 -> m6_8  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m6_29 -> m6_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_30 -> m6_21  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
}
