digraph  {
n12 [label="CommandLine.Tests.ArgumentParserFixture", span=""];
n0 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", label="Entry CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", span="40-40"];
n7 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1337-1337"];
n8 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", label="Entry CommandLine.StringArrayEnumerator.MoveNext()", span="1392-1392"];
n9 [cluster="Unk.PublicWrapperOfGetNextInputValues", label="Entry Unk.PublicWrapperOfGetNextInputValues", span=""];
n10 [cluster="Unk.AssertArrayItemEqual", label="Entry Unk.AssertArrayItemEqual", span=""];
n6 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", label="Exit CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", span="40-40"];
n11 [cluster="Unk.AreEqual", label="Entry Unk.AreEqual", span=""];
d1 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", color=green, community=0, label="var ae = new StringArrayEnumerator(new string[] { ''--optarr'', ''one'', ''two'', ''--plain'', ''3'' })", prediction=0, span="42-42"];
d2 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", color=green, community=0, label="ae.MoveNext()", prediction=1, span="44-44"];
d3 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", color=green, community=0, label="var items = ArgumentParser.PublicWrapperOfGetNextInputValues(ae)", prediction=2, span="46-46"];
d5 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", color=green, community=0, label="Assert.AreEqual(''two'', ae.Current)", prediction=0, span="49-49"];
d4 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", color=green, community=0, label="base.AssertArrayItemEqual(new string[] { ''one'', ''two'' }, items)", prediction=4, span="48-48"];
m0_11 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", file="AttributesFixture.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="258-258"];
m0_15 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="AttributesFixture.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="136-136"];
m0_25 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", file="AttributesFixture.cs", label="Entry CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", span="87-87"];
m0_26 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", color=green, community=0, file="AttributesFixture.cs", label="new OptionAttribute(null, ''option-attr'')", prediction=5, span="89-89"];
m0_27 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", color=green, community=0, file="AttributesFixture.cs", label="new OptionListAttribute(null, ''option-list-attr'')", prediction=6, span="90-90"];
m0_28 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", color=green, community=0, file="AttributesFixture.cs", label="new HelpOptionAttribute(null, ''help-attr'')", prediction=7, span="91-91"];
m0_29 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", color=green, community=0, file="AttributesFixture.cs", label="new CustomOptionAttribute(null, ''custom-attr'')", prediction=8, span="92-92"];
m0_30 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", file="AttributesFixture.cs", label="Exit CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", span="87-87"];
m0_0 [cluster="CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(string, string)", file="AttributesFixture.cs", label="Entry CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(string, string)", span="40-40"];
m0_1 [cluster="CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(string, string)", color=green, community=0, file="AttributesFixture.cs", label="base.ShortName = shortName", prediction=9, span="42-42"];
m0_2 [cluster="CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(string, string)", color=green, community=0, file="AttributesFixture.cs", label="base.LongName = longName", prediction=10, span="43-43"];
m0_3 [cluster="CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(string, string)", file="AttributesFixture.cs", label="Exit CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(string, string)", span="40-40"];
m0_19 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName()", file="AttributesFixture.cs", label="Entry CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName()", span="78-78"];
m0_20 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName()", color=green, community=0, file="AttributesFixture.cs", label="new OptionAttribute(''o'', null)", prediction=11, span="80-80"];
m0_21 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName()", color=green, community=0, file="AttributesFixture.cs", label="new OptionListAttribute(''l'', null)", prediction=12, span="81-81"];
m0_22 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName()", color=green, community=0, file="AttributesFixture.cs", label="new HelpOptionAttribute(''?'', null)", prediction=13, span="82-82"];
m0_23 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName()", color=green, community=0, file="AttributesFixture.cs", label="new CustomOptionAttribute(''c'', null)", prediction=14, span="83-83"];
m0_24 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName()", file="AttributesFixture.cs", label="Exit CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName()", span="78-78"];
m0_8 [cluster="CommandLine.Tests.AttributesFixture.OptionListShortNameCanNotExceedOneCharacter()", file="AttributesFixture.cs", label="Entry CommandLine.Tests.AttributesFixture.OptionListShortNameCanNotExceedOneCharacter()", span="57-57"];
m0_9 [cluster="CommandLine.Tests.AttributesFixture.OptionListShortNameCanNotExceedOneCharacter()", color=green, community=0, file="AttributesFixture.cs", label="new OptionListAttribute(''same-as-above'', null)", prediction=15, span="59-59"];
m0_10 [cluster="CommandLine.Tests.AttributesFixture.OptionListShortNameCanNotExceedOneCharacter()", file="AttributesFixture.cs", label="Exit CommandLine.Tests.AttributesFixture.OptionListShortNameCanNotExceedOneCharacter()", span="57-57"];
m0_16 [cluster="CommandLine.Tests.AttributesFixture.ShortNameOfBaseOptionDerivedTypeCanNotExceedOneCharacter()", file="AttributesFixture.cs", label="Entry CommandLine.Tests.AttributesFixture.ShortNameOfBaseOptionDerivedTypeCanNotExceedOneCharacter()", span="71-71"];
m0_17 [cluster="CommandLine.Tests.AttributesFixture.ShortNameOfBaseOptionDerivedTypeCanNotExceedOneCharacter()", color=green, community=0, file="AttributesFixture.cs", label="new CustomOptionAttribute(''not-allowed'', null)", prediction=16, span="73-73"];
m0_18 [cluster="CommandLine.Tests.AttributesFixture.ShortNameOfBaseOptionDerivedTypeCanNotExceedOneCharacter()", file="AttributesFixture.cs", label="Exit CommandLine.Tests.AttributesFixture.ShortNameOfBaseOptionDerivedTypeCanNotExceedOneCharacter()", span="71-71"];
m0_4 [cluster="CommandLine.Tests.AttributesFixture.OptionShortNameCanNotExceedOneCharacter()", file="AttributesFixture.cs", label="Entry CommandLine.Tests.AttributesFixture.OptionShortNameCanNotExceedOneCharacter()", span="50-50"];
m0_5 [cluster="CommandLine.Tests.AttributesFixture.OptionShortNameCanNotExceedOneCharacter()", color=green, community=0, file="AttributesFixture.cs", label="new OptionAttribute(''more-than-one-character'', null)", prediction=17, span="52-52"];
m0_6 [cluster="CommandLine.Tests.AttributesFixture.OptionShortNameCanNotExceedOneCharacter()", file="AttributesFixture.cs", label="Exit CommandLine.Tests.AttributesFixture.OptionShortNameCanNotExceedOneCharacter()", span="50-50"];
m0_7 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="AttributesFixture.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="204-204"];
m0_12 [cluster="CommandLine.Tests.AttributesFixture.HelpOptionShortNameCanNotExceedOneCharacter()", file="AttributesFixture.cs", label="Entry CommandLine.Tests.AttributesFixture.HelpOptionShortNameCanNotExceedOneCharacter()", span="64-64"];
m0_13 [cluster="CommandLine.Tests.AttributesFixture.HelpOptionShortNameCanNotExceedOneCharacter()", color=green, community=0, file="AttributesFixture.cs", label="new HelpOptionAttribute(''same-as-above-again'', null)", prediction=18, span="66-66"];
m0_14 [cluster="CommandLine.Tests.AttributesFixture.HelpOptionShortNameCanNotExceedOneCharacter()", file="AttributesFixture.cs", label="Exit CommandLine.Tests.AttributesFixture.HelpOptionShortNameCanNotExceedOneCharacter()", span="64-64"];
m0_31 [file="AttributesFixture.cs", label="CommandLine.Tests.AttributesFixture.CustomOptionAttribute", span=""];
m1_8 [cluster="CommandLine.Tests.BaseFixture.AssertArrayItemEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="Entry CommandLine.Tests.BaseFixture.AssertArrayItemEqual(string[], System.Collections.Generic.IList<string>)", span="46-46"];
m1_9 [cluster="CommandLine.Tests.BaseFixture.AssertArrayItemEqual(string[], System.Collections.Generic.IList<string>)", color=green, community=0, file="BaseFixture.cs", label="Assert.AreEqual(expected.Length, actual.Count)", prediction=19, span="48-48"];
m1_11 [cluster="CommandLine.Tests.BaseFixture.AssertArrayItemEqual(string[], System.Collections.Generic.IList<string>)", color=green, community=0, file="BaseFixture.cs", label="i < expected.Length", prediction=20, span="49-49"];
m1_12 [cluster="CommandLine.Tests.BaseFixture.AssertArrayItemEqual(string[], System.Collections.Generic.IList<string>)", color=green, community=0, file="BaseFixture.cs", label="Assert.AreEqual(expected[i], actual[i])", prediction=20, span="51-51"];
m1_10 [cluster="CommandLine.Tests.BaseFixture.AssertArrayItemEqual(string[], System.Collections.Generic.IList<string>)", color=green, community=0, file="BaseFixture.cs", label="int i = 0", prediction=20, span="49-49"];
m1_13 [cluster="CommandLine.Tests.BaseFixture.AssertArrayItemEqual(string[], System.Collections.Generic.IList<string>)", color=green, community=0, file="BaseFixture.cs", label="i++", prediction=20, span="49-49"];
m1_14 [cluster="CommandLine.Tests.BaseFixture.AssertArrayItemEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="Exit CommandLine.Tests.BaseFixture.AssertArrayItemEqual(string[], System.Collections.Generic.IList<string>)", span="46-46"];
m1_0 [cluster="CommandLine.Tests.BaseFixture.AssertArrayItemEqual<T>(T[], T[])", file="BaseFixture.cs", label="Entry CommandLine.Tests.BaseFixture.AssertArrayItemEqual<T>(T[], T[])", span="37-37"];
m1_1 [cluster="CommandLine.Tests.BaseFixture.AssertArrayItemEqual<T>(T[], T[])", color=green, community=0, file="BaseFixture.cs", label="Assert.AreEqual(expected.Length, actual.Length)", prediction=24, span="39-39"];
m1_3 [cluster="CommandLine.Tests.BaseFixture.AssertArrayItemEqual<T>(T[], T[])", color=green, community=0, file="BaseFixture.cs", label="i < expected.Length", prediction=25, span="40-40"];
m1_4 [cluster="CommandLine.Tests.BaseFixture.AssertArrayItemEqual<T>(T[], T[])", color=green, community=0, file="BaseFixture.cs", label="Assert.AreEqual(expected[i], actual[i])", prediction=25, span="42-42"];
m1_2 [cluster="CommandLine.Tests.BaseFixture.AssertArrayItemEqual<T>(T[], T[])", color=green, community=0, file="BaseFixture.cs", label="int i = 0", prediction=25, span="40-40"];
m1_5 [cluster="CommandLine.Tests.BaseFixture.AssertArrayItemEqual<T>(T[], T[])", color=green, community=0, file="BaseFixture.cs", label="i++", prediction=25, span="40-40"];
m1_6 [cluster="CommandLine.Tests.BaseFixture.AssertArrayItemEqual<T>(T[], T[])", file="BaseFixture.cs", label="Exit CommandLine.Tests.BaseFixture.AssertArrayItemEqual<T>(T[], T[])", span="37-37"];
m2_0 [cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="BooleanSetOptions.cs", label="Entry CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", span="35-35"];
m2_1 [cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", color=green, community=0, file="BooleanSetOptions.cs", label="NonBooleanValue = 0", prediction=29, span="37-37"];
m2_2 [cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="BooleanSetOptions.cs", label="Exit CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", span="35-35"];
m2_3 [file="BooleanSetOptions.cs", label="CommandLine.Tests.Mocks.BooleanSetOptions", span=""];
m3_486 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, file="CommandLine.cs", label="Assumes.NotNull(value, ''value'')", prediction=30, span="1339-1339"];
m3_487 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, file="CommandLine.cs", label="_data = value", prediction=31, span="1341-1341"];
m3_488 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, file="CommandLine.cs", label="_index = -1", prediction=32, span="1342-1342"];
m3_489 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, file="CommandLine.cs", label="_endIndex = value.Length", prediction=33, span="1343-1343"];
m3_490 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="CommandLine.cs", label="Exit CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1337-1337"];
m3_15 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="CommandLine.cs", label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="166-166"];
m3_18 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", color=green, community=0, file="CommandLine.cs", label="return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", prediction=34, span="168-168"];
m3_19 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="CommandLine.cs", label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="166-166"];
m3_331 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetValueScalar(string, object)", span="898-898"];
m3_348 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="_property.PropertyType.IsEnum", prediction=35, span="902-902"];
m3_349 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label=_setValueLock, prediction=35, span="904-904"];
m3_351 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label=_setValueLock, prediction=35, span="911-911"];
m3_350 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="_property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", prediction=35, span="906-906"];
m3_353 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label=InvalidCastException, prediction=39, span="917-917"];
m3_355 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label=FormatException, prediction=40, span="921-921"];
m3_357 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label=ArgumentException, prediction=41, span="925-925"];
m3_359 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label=OverflowException, prediction=42, span="929-929"];
m3_361 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=43, span="934-934"];
m3_352 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="_property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, Thread.CurrentThread.CurrentCulture), null)", prediction=35, span="913-913"];
m3_354 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=45, span="919-919"];
m3_356 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=46, span="923-923"];
m3_358 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=47, span="927-927"];
m3_360 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=48, span="931-931"];
m3_362 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetValueScalar(string, object)", span="898-898"];
m3_529 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1488-1488"];
m3_530 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1488-1488"];
m3_159 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", file="CommandLine.cs", label="Entry CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="499-499"];
m3_160 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=green, community=0, file="CommandLine.cs", label="ShortName = shortName", prediction=49, span="501-501"];
m3_161 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=green, community=0, file="CommandLine.cs", label="LongName = longName", prediction=50, span="502-502"];
m3_162 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", file="CommandLine.cs", label="Exit CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="499-499"];
m3_470 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", file="CommandLine.cs", label="Entry CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1248-1248"];
m3_471 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, file="CommandLine.cs", label="var other = obj as Pair<TLeft, TRight>", prediction=51, span="1250-1250"];
m3_472 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, file="CommandLine.cs", label="other == null", prediction=52, span="1252-1252"];
m3_474 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, file="CommandLine.cs", label="return Equals(_left, other._left) && Equals(_right, other._right);", prediction=51, span="1255-1255"];
m3_473 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=54, span="1253-1253"];
m3_475 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", file="CommandLine.cs", label="Exit CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1248-1248"];
m3_95 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", file="CommandLine.cs", label="Entry CommandLine.ParsingError.ParsingError(string, string, bool)", span="1269-1269"];
m3_479 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=green, community=0, file="CommandLine.cs", label="this.BadOption = new BadOptionInfo(shortName, longName)", prediction=55, span="1273-1273"];
m3_480 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=green, community=0, file="CommandLine.cs", label="this.ViolatesFormat = format", prediction=56, span="1275-1275"];
m3_481 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", file="CommandLine.cs", label="Exit CommandLine.ParsingError.ParsingError(string, string, bool)", span="1269-1269"];
m3_579 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1737-1737"];
m3_580 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="Assumes.NotNull(args, ''args'')", prediction=57, span="1739-1739"];
m3_581 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="Assumes.NotNull(options, ''options'')", prediction=58, span="1740-1740"];
m3_582 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", prediction=58, span="1742-1742"];
m3_583 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="pair != null && helpWriter != null", prediction=58, span="1744-1744"];
m3_584 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="ParseHelp(args, pair.Right) || !DoParseArguments(args, options)", prediction=58, span="1746-1746"];
m3_586 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", prediction=58, span="1749-1749"];
m3_590 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="return DoParseArguments(args, options);", prediction=58, span="1756-1756"];
m3_585 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="string helpText", prediction=64, span="1748-1748"];
m3_589 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=65, span="1753-1753"];
m3_587 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="helpWriter.Write(helpText)", prediction=58, span="1750-1750"];
m3_588 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=67, span="1751-1751"];
m3_591 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1737-1737"];
m3_53 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1519-1519"];
m3_535 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1519-1519"];
m3_714 [cluster="decimal.TryParse(string, out decimal)", file="CommandLine.cs", label="Entry decimal.TryParse(string, out decimal)", span="0-0"];
m3_217 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="CommandLine.cs", label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="628-628"];
m3_218 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, file="CommandLine.cs", label="Assumes.NotNullOrEmpty(value, ''value'')", prediction=68, span="630-630"];
m3_219 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, file="CommandLine.cs", label="_data = value", prediction=69, span="632-632"];
m3_220 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, file="CommandLine.cs", label="_index = -1", prediction=70, span="633-633"];
m3_221 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="CommandLine.cs", label="Exit CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="628-628"];
m3_86 [cluster="CommandLine.ArgumentParser.ArgumentParser()", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.ArgumentParser()", span="385-385"];
m3_87 [cluster="CommandLine.ArgumentParser.ArgumentParser()", color=green, community=0, file="CommandLine.cs", label="this.PostParsingState = new List<ParsingError>()", prediction=71, span="387-387"];
m3_88 [cluster="CommandLine.ArgumentParser.ArgumentParser()", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.ArgumentParser()", span="385-385"];
m3_672 [cluster="System.Type.GetMethods()", file="CommandLine.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m3_52 [cluster="System.Type.IsAssignableFrom(System.Type)", file="CommandLine.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m3_216 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetValue(bool, object)", span="958-958"];
m3_373 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0, file="CommandLine.cs", label=_setValueLock, prediction=35, span="960-960"];
m3_374 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0, file="CommandLine.cs", label="_property.SetValue(options, value, null)", prediction=35, span="962-962"];
m3_375 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=74, span="964-964"];
m3_376 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetValue(bool, object)", span="958-958"];
m3_223 [cluster="CommandLine.OneCharStringEnumerator.Reset()", file="CommandLine.cs", label="Entry CommandLine.OneCharStringEnumerator.Reset()", span="672-672"];
m3_224 [cluster="CommandLine.OneCharStringEnumerator.Reset()", color=green, community=0, file="CommandLine.cs", label="_index = -1", prediction=75, span="674-674"];
m3_225 [cluster="CommandLine.OneCharStringEnumerator.Reset()", file="CommandLine.cs", label="Exit CommandLine.OneCharStringEnumerator.Reset()", span="672-672"];
m3_33 [cluster="string.IsNullOrEmpty(string)", file="CommandLine.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m3_504 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", file="CommandLine.cs", label="Entry CommandLine.StringArrayEnumerator.MovePrevious()", span="1407-1407"];
m3_505 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs", label="_index <= 0", prediction=76, span="1409-1409"];
m3_506 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs", label="throw new InvalidOperationException();", prediction=77, span="1411-1411"];
m3_507 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs", label="_index <= _endIndex", prediction=76, span="1413-1413"];
m3_508 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs", label="_index--", prediction=76, span="1415-1415"];
m3_510 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=80, span="1418-1418"];
m3_509 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs", label="return _index <= _endIndex;", prediction=76, span="1416-1416"];
m3_511 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", file="CommandLine.cs", label="Exit CommandLine.StringArrayEnumerator.MovePrevious()", span="1407-1407"];
m3_551 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1591-1591"];
m3_552 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=green, community=0, file="CommandLine.cs", label="CaseSensitive = caseSensitive", prediction=82, span="1593-1593"];
m3_553 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=green, community=0, file="CommandLine.cs", label="MutuallyExclusive = mutuallyExclusive", prediction=83, span="1594-1594"];
m3_554 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1591-1591"];
m3_560 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", span="1621-1621"];
m3_561 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="CaseSensitive = caseSensitive", prediction=84, span="1623-1623"];
m3_562 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="MutuallyExclusive = mutuallyExclusive", prediction=85, span="1624-1624"];
m3_563 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="HelpWriter = helpWriter", prediction=86, span="1625-1625"];
m3_564 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="IgnoreUnknownArguments = ignoreUnknownArguments", prediction=87, span="1626-1626"];
m3_565 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", span="1621-1621"];
m3_441 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1187-1187"];
m3_442 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="var setName = option.MutuallyExclusiveSet", prediction=88, span="1189-1189"];
m3_443 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="!_mutuallyExclusiveSetMap.ContainsKey(setName)", prediction=88, span="1191-1191"];
m3_444 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="_mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", prediction=88, span="1193-1193"];
m3_445 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="_mutuallyExclusiveSetMap[setName].IncrementOccurrence()", prediction=88, span="1196-1196"];
m3_446 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1187-1187"];
m3_8 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLine.cs", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="154-154"];
m3_9 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, file="CommandLine.cs", label="text = null", prediction=92, span="157-157"];
m3_10 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, file="CommandLine.cs", label="var method = pair.Left", prediction=93, span="159-159"];
m3_11 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, file="CommandLine.cs", label="!CheckMethodSignature(method)", prediction=94, span="160-160"];
m3_13 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, file="CommandLine.cs", label="text = (string)method.Invoke(target, null)", prediction=95, span="163-163"];
m3_12 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, file="CommandLine.cs", label="throw new MemberAccessException();", prediction=96, span="161-161"];
m3_14 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLine.cs", label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="154-154"];
m3_110 [cluster="CommandLine.LongOptionParser.LongOptionParser(bool)", file="CommandLine.cs", label="Entry CommandLine.LongOptionParser.LongOptionParser(bool)", span="543-543"];
m3_167 [cluster="CommandLine.LongOptionParser.LongOptionParser(bool)", color=green, community=0, file="CommandLine.cs", label="_ignoreUnkwnownArguments = ignoreUnkwnownArguments", prediction=97, span="545-545"];
m3_168 [cluster="CommandLine.LongOptionParser.LongOptionParser(bool)", file="CommandLine.cs", label="Exit CommandLine.LongOptionParser.LongOptionParser(bool)", span="543-543"];
m3_464 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", file="CommandLine.cs", label="Entry CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1240-1240"];
m3_465 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, file="CommandLine.cs", label="int leftHash = (_left == null ? 0 : _left.GetHashCode())", prediction=98, span="1242-1242"];
m3_466 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, file="CommandLine.cs", label="int rightHash = (_right == null ? 0 : _right.GetHashCode())", prediction=99, span="1243-1243"];
m3_467 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, file="CommandLine.cs", label="return leftHash ^ rightHash;", prediction=98, span="1245-1245"];
m3_468 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", file="CommandLine.cs", label="Exit CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1240-1240"];
m3_555 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1605-1605"];
m3_556 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="CaseSensitive = caseSensitive", prediction=101, span="1607-1607"];
m3_557 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="MutuallyExclusive = mutuallyExclusive", prediction=102, span="1608-1608"];
m3_558 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="HelpWriter = helpWriter", prediction=103, span="1609-1609"];
m3_559 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1605-1605"];
m3_245 [cluster="System.NotSupportedException.NotSupportedException()", file="CommandLine.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m3_142 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="466-466"];
m3_143 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, file="CommandLine.cs", label="value && !addMoveNextIfTrue", prediction=104, span="468-468"];
m3_144 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, file="CommandLine.cs", label="return ParserState.Success;", prediction=105, span="469-469"];
m3_145 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, file="CommandLine.cs", label=value, prediction=106, span="471-471"];
m3_146 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, file="CommandLine.cs", label="return ParserState.Success | ParserState.MoveOnNextElement;", prediction=107, span="472-472"];
m3_147 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, file="CommandLine.cs", label="return ParserState.Failure;", prediction=108, span="474-474"];
m3_148 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="466-466"];
m3_399 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="CommandLine.cs", label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1076-1076"];
m3_400 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", color=green, community=0, file="CommandLine.cs", label="++_count", prediction=109, span="1076-1076"];
m3_401 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="CommandLine.cs", label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1076-1076"];
m3_51 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="CommandLine.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m3_329 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", file="CommandLine.cs", label="Entry CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1955-1955"];
m3_704 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", color=green, community=0, file="CommandLine.cs", label="return type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>);", prediction=110, span="1957-1957"];
m3_705 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", file="CommandLine.cs", label="Exit CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1955-1955"];
m3_23 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="CommandLine.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="204-204"];
m3_24 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs", label="!string.IsNullOrEmpty(shortName)", prediction=111, span="206-206"];
m3_25 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs", label="_uniqueName = shortName", prediction=112, span="207-207"];
m3_26 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs", label="!string.IsNullOrEmpty(longName)", prediction=113, span="208-208"];
m3_28 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs", label="_uniqueName == null", prediction=114, span="211-211"];
m3_27 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs", label="_uniqueName = longName", prediction=115, span="209-209"];
m3_30 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs", label="base.ShortName = shortName", prediction=116, span="214-214"];
m3_31 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs", label="base.LongName = longName", prediction=117, span="215-215"];
m3_29 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs", label="throw new InvalidOperationException();", prediction=118, span="212-212"];
m3_32 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="CommandLine.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="204-204"];
m3_448 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="CommandLine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m3_576 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1719-1719"];
m3_577 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="return ParseArguments(args, options, _settings.HelpWriter);", prediction=58, span="1721-1721"];
m3_578 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1719-1719"];
m3_211 [cluster="string.Substring(int)", file="CommandLine.cs", label="Entry string.Substring(int)", span="0-0"];
m3_412 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", file="CommandLine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m3_673 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="CommandLine.cs", label="Entry CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1903-1903"];
m3_674 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="var info = target.GetType().GetMethods()", prediction=120, span="1906-1906"];
m3_675 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label=info, prediction=121, span="1908-1908"];
m3_676 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="!method.IsStatic", prediction=122, span="1910-1910"];
m3_678 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="attribute != null", prediction=123, span="1914-1914"];
m3_680 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="return null;", prediction=124, span="1919-1919"];
m3_677 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", prediction=121, span="1912-1913"];
m3_679 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="return (TAttribute)attribute;", prediction=121, span="1915-1915"];
m3_681 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="CommandLine.cs", label="Exit CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1903-1903"];
m3_66 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="341-341"];
m3_67 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs", label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", prediction=127, span="343-343"];
m3_68 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs", label="list == null || list.Count == 0", prediction=128, span="344-344"];
m3_70 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs", label="list.Count > 1", prediction=127, span="347-347"];
m3_72 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs", label="var pairZero = list[0]", prediction=130, span="350-350"];
m3_69 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs", label="return null;", prediction=131, span="345-345"];
m3_71 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs", label="throw new InvalidOperationException();", prediction=132, span="348-348"];
m3_73 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs", label="return pairZero.Right;", prediction=133, span="352-352"];
m3_74 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.GetAttribute(object)", span="341-341"];
m3_707 [cluster="CommandLine.StringUtil.Spaces(int)", file="CommandLine.cs", label="Entry CommandLine.StringUtil.Spaces(int)", span="1963-1963"];
m3_708 [cluster="CommandLine.StringUtil.Spaces(int)", color=green, community=0, file="CommandLine.cs", label="return new String(' ', count);", prediction=134, span="1965-1965"];
m3_709 [cluster="CommandLine.StringUtil.Spaces(int)", file="CommandLine.cs", label="Exit CommandLine.StringUtil.Spaces(int)", span="1963-1963"];
m3_618 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="1824-1824"];
m3_631 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", color=green, community=0, file="CommandLine.cs", label="var commandLineOptionsBase = options as CommandLineOptionsBase", prediction=135, span="1826-1826"];
m3_632 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", color=green, community=0, file="CommandLine.cs", label="commandLineOptionsBase != null", prediction=136, span="1827-1827"];
m3_633 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", color=green, community=0, file="CommandLine.cs", label="(commandLineOptionsBase).InternalLastPostParsingState.Errors.AddRange(state)", prediction=135, span="1828-1828"];
m3_634 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="1824-1824"];
m3_17 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="CommandLine.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m3_539 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1545-1545"];
m3_540 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1545-1545"];
m3_514 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", file="CommandLine.cs", label="Entry CommandLine.TargetWrapper.TargetWrapper(object)", span="1432-1432"];
m3_515 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, file="CommandLine.cs", label="_target = target", prediction=138, span="1434-1434"];
m3_516 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, file="CommandLine.cs", label="_vla = ValueListAttribute.GetAttribute(_target)", prediction=139, span="1435-1435"];
m3_517 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, file="CommandLine.cs", label=IsValueListDefined, prediction=140, span="1436-1436"];
m3_518 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, file="CommandLine.cs", label="_valueList = ValueListAttribute.GetReference(_target)", prediction=141, span="1437-1437"];
m3_519 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", file="CommandLine.cs", label="Exit CommandLine.TargetWrapper.TargetWrapper(object)", span="1432-1432"];
m3_310 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="842-842"];
m3_311 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", prediction=142, span="844-844"];
m3_312 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="list != null", prediction=143, span="845-845"];
m3_313 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="var map = new OptionMap(list.Count, settings)", prediction=144, span="847-847"];
m3_314 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label=list, prediction=142, span="849-849"];
m3_316 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", prediction=146, span="852-852"];
m3_317 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="map.RawOptions = target", prediction=147, span="855-855"];
m3_318 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="return map;", prediction=144, span="857-857"];
m3_319 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="return null;", prediction=149, span="860-860"];
m3_315 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="pair != null && pair.Right != null", prediction=150, span="851-851"];
m3_320 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="842-842"];
m3_157 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", file="CommandLine.cs", label="Entry CommandLine.BadOptionInfo.BadOptionInfo()", span="495-495"];
m3_158 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", file="CommandLine.cs", label="Exit CommandLine.BadOptionInfo.BadOptionInfo()", span="495-495"];
m3_396 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1069-1069"];
m3_397 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="BadOption = option", prediction=151, span="1071-1071"];
m3_398 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1069-1069"];
m3_111 [cluster="CommandLine.OptionGroupParser.OptionGroupParser(bool)", file="CommandLine.cs", label="Entry CommandLine.OptionGroupParser.OptionGroupParser(bool)", span="715-715"];
m3_248 [cluster="CommandLine.OptionGroupParser.OptionGroupParser(bool)", color=green, community=0, file="CommandLine.cs", label="_ignoreUnkwnownArguments = ignoreUnkwnownArguments", prediction=152, span="717-717"];
m3_249 [cluster="CommandLine.OptionGroupParser.OptionGroupParser(bool)", file="CommandLine.cs", label="Exit CommandLine.OptionGroupParser.OptionGroupParser(bool)", span="715-715"];
m3_643 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="CommandLine.cs", label="Entry CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1849-1849"];
m3_644 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=green, community=0, file="CommandLine.cs", label="array.Length == 0", prediction=153, span="1851-1851"];
m3_645 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=green, community=0, file="CommandLine.cs", label="throw new ArgumentOutOfRangeException(paramName);", prediction=154, span="1852-1852"];
m3_646 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="CommandLine.cs", label="Exit CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1849-1849"];
m3_345 [cluster="System.Array.CreateInstance(System.Type, int)", file="CommandLine.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m3_347 [cluster="System.Array.SetValue(object, int)", file="CommandLine.cs", label="Entry System.Array.SetValue(object, int)", span="0-0"];
m3_447 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="CommandLine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m3_346 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="CommandLine.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m3_531 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", file="CommandLine.cs", label="Entry CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1496-1496"];
m3_532 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", color=green, community=0, file="CommandLine.cs", label="LastPostParsingState = new PostParsingState()", prediction=155, span="1498-1498"];
m3_533 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", file="CommandLine.cs", label="Exit CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1496-1496"];
m3_136 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="456-456"];
m3_137 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", color=green, community=0, file="CommandLine.cs", label="return string.Compare(argument, ''--'' + option, !caseSensitive) == 0;", prediction=156, span="458-458"];
m3_138 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="456-456"];
m3_16 [cluster="System.MemberAccessException.MemberAccessException()", file="CommandLine.cs", label="Entry System.MemberAccessException.MemberAccessException()", span="0-0"];
m3_35 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", file="CommandLine.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="258-258"];
m3_36 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", color=green, community=0, file="CommandLine.cs", label="Separator = ':'", prediction=157, span="261-261"];
m3_37 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", file="CommandLine.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="258-258"];
m3_128 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="CommandLine.cs", label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="532-532"];
m3_165 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="CommandLine.cs", label="Exit CommandLine.IArgumentEnumerator.MoveNext()", span="532-532"];
m3_418 [cluster="CommandLine.OptionMap.SetDefaults()", file="CommandLine.cs", label="Entry CommandLine.OptionMap.SetDefaults()", span="1140-1140"];
m3_419 [cluster="CommandLine.OptionMap.SetDefaults()", color=green, community=0, file="CommandLine.cs", label="_map.Values", prediction=88, span="1142-1142"];
m3_420 [cluster="CommandLine.OptionMap.SetDefaults()", color=green, community=0, file="CommandLine.cs", label="option.SetDefault(this.RawOptions)", prediction=88, span="1144-1144"];
m3_421 [cluster="CommandLine.OptionMap.SetDefaults()", file="CommandLine.cs", label="Exit CommandLine.OptionMap.SetDefaults()", span="1140-1140"];
m3_702 [cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="CommandLine.cs", label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0"];
m3_131 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException()", span="1515-1515"];
m3_534 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException()", span="1515-1515"];
m3_682 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs", label="Entry CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1922-1922"];
m3_683 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="IList<TAttribute> list = new List<TAttribute>()", prediction=160, span="1925-1925"];
m3_684 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="var info = target.GetType().GetProperties()", prediction=161, span="1926-1926"];
m3_691 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="list.Add((TAttribute)attribute)", prediction=160, span="1937-1937"];
m3_692 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="return list;", prediction=160, span="1942-1942"];
m3_685 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label=info, prediction=164, span="1928-1928"];
m3_689 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", prediction=160, span="1935-1935"];
m3_690 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="attribute != null", prediction=166, span="1936-1936"];
m3_686 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="property != null && (property.CanRead && property.CanWrite)", prediction=167, span="1930-1930"];
m3_688 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="setMethod != null && !setMethod.IsStatic", prediction=168, span="1933-1933"];
m3_687 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="var setMethod = property.GetSetMethod()", prediction=169, span="1932-1932"];
m3_693 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs", label="Exit CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1922-1922"];
m3_242 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", file="CommandLine.cs", label="Entry CommandLine.OneCharStringEnumerator.MovePrevious()", span="701-701"];
m3_243 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs", label="throw new NotSupportedException();", prediction=170, span="703-703"];
m3_244 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", file="CommandLine.cs", label="Exit CommandLine.OneCharStringEnumerator.MovePrevious()", span="701-701"];
m3_62 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="355-355"];
m3_76 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="concreteType = null", prediction=171, span="357-357"];
m3_77 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", prediction=172, span="359-359"];
m3_78 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="list == null || list.Count == 0", prediction=173, span="360-360"];
m3_80 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="list.Count > 1", prediction=172, span="363-363"];
m3_82 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="var pairZero = list[0]", prediction=175, span="366-366"];
m3_79 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="return null;", prediction=176, span="361-361"];
m3_81 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="throw new InvalidOperationException();", prediction=177, span="364-364"];
m3_83 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="concreteType = pairZero.Right.ConcreteType", prediction=178, span="367-367"];
m3_84 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="return pairZero.Left;", prediction=175, span="369-369"];
m3_85 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="355-355"];
m3_63 [cluster="System.Activator.CreateInstance(System.Type)", file="CommandLine.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m3_212 [cluster="string.Split(char[], int)", file="CommandLine.cs", label="Entry string.Split(char[], int)", span="0-0"];
m3_222 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="CommandLine.cs", label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1843-1843"];
m3_639 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=green, community=0, file="CommandLine.cs", label="string.IsNullOrEmpty(value)", prediction=180, span="1845-1845"];
m3_640 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=green, community=0, file="CommandLine.cs", label="throw new ArgumentException(paramName);", prediction=181, span="1846-1846"];
m3_641 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="CommandLine.cs", label="Exit CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1843-1843"];
m3_3 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="CommandLine.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="136-136"];
m3_4 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs", label="ShortName = shortName", prediction=182, span="138-138"];
m3_5 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs", label="LongName = longName", prediction=183, span="139-139"];
m3_6 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs", label="HelpText = DEFAULT_HELP_TEXT", prediction=184, span="140-140"];
m3_7 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="CommandLine.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="136-136"];
m3_413 [cluster="CommandLine.OptionMap.EnforceRules()", file="CommandLine.cs", label="Entry CommandLine.OptionMap.EnforceRules()", span="1135-1135"];
m3_414 [cluster="CommandLine.OptionMap.EnforceRules()", color=green, community=0, file="CommandLine.cs", label="return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", prediction=88, span="1137-1137"];
m3_415 [cluster="CommandLine.OptionMap.EnforceRules()", file="CommandLine.cs", label="Exit CommandLine.OptionMap.EnforceRules()", span="1135-1135"];
m3_89 [cluster="System.Collections.Generic.List<T>.List()", file="CommandLine.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m3_235 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Entry CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="690-690"];
m3_236 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs", label="_index == -1", prediction=186, span="692-692"];
m3_237 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs", label="throw new InvalidOperationException();", prediction=187, span="693-693"];
m3_238 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs", label="_index > _data.Length", prediction=186, span="695-695"];
m3_239 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs", label="throw new InvalidOperationException();", prediction=189, span="696-696"];
m3_240 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs", label="return _data.Substring(_index + 1);", prediction=186, span="698-698"];
m3_241 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Exit CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="690-690"];
m3_663 [cluster="System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", file="CommandLine.cs", label="Entry System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", span="0-0"];
m3_112 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.IsInputValue(string)", span="416-416"];
m3_113 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, file="CommandLine.cs", label="StringUtil.IsNumeric(argument)", prediction=191, span="418-418"];
m3_114 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=192, span="419-419"];
m3_115 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, file="CommandLine.cs", label="argument.Length > 0", prediction=193, span="421-421"];
m3_116 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, file="CommandLine.cs", label="return argument.Equals(''-'', StringComparison.InvariantCulture) || argument[0] != '-';", prediction=193, span="422-422"];
m3_117 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=195, span="424-424"];
m3_118 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.IsInputValue(string)", span="416-416"];
m3_54 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="328-328"];
m3_55 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="CommandLine.cs", label="Type concreteType", prediction=196, span="330-330"];
m3_56 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="CommandLine.cs", label="var property = GetProperty(target, out concreteType)", prediction=197, span="331-331"];
m3_57 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="CommandLine.cs", label="property == null || concreteType == null", prediction=198, span="333-333"];
m3_59 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="CommandLine.cs", label="property.SetValue(target, Activator.CreateInstance(concreteType), null)", prediction=197, span="336-336"];
m3_60 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="CommandLine.cs", label="return (IList<string>)property.GetValue(target, null);", prediction=197, span="338-338"];
m3_58 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="CommandLine.cs", label="return null;", prediction=201, span="334-334"];
m3_61 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.GetReference(object)", span="328-328"];
m3_417 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", file="CommandLine.cs", label="Entry CommandLine.OptionMap.EnforceRequiredRule()", span="1148-1148"];
m3_422 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, file="CommandLine.cs", label="bool requiredRulesAllMet = true", prediction=202, span="1150-1150"];
m3_423 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, file="CommandLine.cs", label="_map.Values", prediction=88, span="1151-1151"];
m3_427 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, file="CommandLine.cs", label="return requiredRulesAllMet;", prediction=202, span="1161-1161"];
m3_424 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, file="CommandLine.cs", label="option.Required && !option.IsDefined", prediction=205, span="1153-1153"];
m3_426 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, file="CommandLine.cs", label="requiredRulesAllMet = false", prediction=202, span="1156-1156"];
m3_425 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, file="CommandLine.cs", label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, option, true, null)", prediction=88, span="1155-1155"];
m3_428 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", file="CommandLine.cs", label="Exit CommandLine.OptionMap.EnforceRequiredRule()", span="1148-1148"];
m3_0 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="CommandLine.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="124-124"];
m3_1 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", color=green, community=0, file="CommandLine.cs", label="HelpText = DEFAULT_HELP_TEXT", prediction=208, span="127-127"];
m3_2 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="CommandLine.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="124-124"];
m3_594 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1759-1759"];
m3_596 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="bool hadError = false", prediction=209, span="1761-1761"];
m3_597 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="var optionMap = OptionInfo.CreateMap(options, _settings)", prediction=210, span="1762-1762"];
m3_615 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="hadError |= !optionMap.EnforceRules()", prediction=211, span="1797-1797"];
m3_598 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="optionMap.SetDefaults()", prediction=212, span="1763-1763"];
m3_606 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="ParserState result = parser.Parse(arguments, optionMap, options)", prediction=213, span="1775-1775"];
m3_599 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="var target = new TargetWrapper(options)", prediction=214, span="1764-1764"];
m3_600 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="IArgumentEnumerator arguments = new StringArrayEnumerator(args)", prediction=215, span="1766-1766"];
m3_612 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="target.IsValueListDefined", prediction=214, span="1786-1786"];
m3_613 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="!target.AddValueItemIfAllowed(argument)", prediction=214, span="1788-1788"];
m3_601 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="arguments.MoveNext()", prediction=218, span="1767-1767"];
m3_602 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="string argument = arguments.Current", prediction=214, span="1769-1769"];
m3_611 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="arguments.MoveNext()", prediction=215, span="1784-1784"];
m3_604 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="ArgumentParser parser = ArgumentParser.Create(argument, _settings.IgnoreUnknownArguments)", prediction=221, span="1772-1772"];
m3_605 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="parser != null", prediction=222, span="1773-1773"];
m3_607 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="(result & ParserState.Failure) == ParserState.Failure", prediction=223, span="1776-1776"];
m3_610 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="(result & ParserState.MoveOnNextElement) == ParserState.MoveOnNextElement", prediction=213, span="1783-1783"];
m3_608 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="SetPostParsingStateIfNeeded(options, parser.PostParsingState)", prediction=221, span="1778-1778"];
m3_609 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="hadError = true", prediction=226, span="1779-1779"];
m3_614 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="hadError = true", prediction=227, span="1790-1790"];
m3_616 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="return !hadError;", prediction=228, span="1799-1799"];
m3_603 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="!string.IsNullOrEmpty(argument)", prediction=229, span="1770-1770"];
m3_617 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1759-1759"];
m3_595 [cluster="System.IO.TextWriter.Write(string)", file="CommandLine.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m3_163 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="527-527"];
m3_164 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Exit CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="527-527"];
m3_395 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1524-1524"];
m3_536 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1524-1524"];
m3_416 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs", label="Entry CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1164-1164"];
m3_430 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="!_settings.MutuallyExclusive", prediction=88, span="1166-1166"];
m3_431 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=231, span="1167-1167"];
m3_432 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="_map.Values", prediction=88, span="1169-1169"];
m3_433 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="option.IsDefined && option.MutuallyExclusiveSet != null", prediction=233, span="1171-1171"];
m3_434 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="BuildMutuallyExclusiveMap(option)", prediction=88, span="1172-1172"];
m3_435 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="_mutuallyExclusiveSetMap.Values", prediction=88, span="1175-1175"];
m3_436 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="info.Occurrence > 1", prediction=236, span="1177-1177"];
m3_439 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=237, span="1184-1184"];
m3_437 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, info.BadOption, null, true)", prediction=88, span="1179-1179"];
m3_438 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=239, span="1180-1180"];
m3_440 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs", label="Exit CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1164-1164"];
m3_387 [cluster="string.Split(params char[])", file="CommandLine.cs", label="Entry string.Split(params char[])", span="0-0"];
m3_90 [cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="390-390"];
m3_91 [cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="390-390"];
m3_330 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetNullableValue(string, object)", span="937-937"];
m3_364 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, file="CommandLine.cs", label="var nc = new NullableConverter(_property.PropertyType)", prediction=35, span="939-939"];
m3_365 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, file="CommandLine.cs", label=_setValueLock, prediction=35, span="943-943"];
m3_366 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, file="CommandLine.cs", label="_property.SetValue(options, nc.ConvertFromString(null, Thread.CurrentThread.CurrentCulture, value), null)", prediction=35, span="945-945"];
m3_367 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, file="CommandLine.cs", label=Exception, prediction=243, span="950-950"];
m3_369 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=244, span="955-955"];
m3_368 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=245, span="952-952"];
m3_370 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetNullableValue(string, object)", span="937-937"];
m3_642 [cluster="System.ArgumentException.ArgumentException(string)", file="CommandLine.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m3_44 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="304-304"];
m3_45 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="CommandLine.cs", label="concreteType == null", prediction=246, span="307-307"];
m3_46 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="CommandLine.cs", label="throw new ArgumentNullException(''concreteType'');", prediction=247, span="308-308"];
m3_47 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="CommandLine.cs", label="!typeof(IList<string>).IsAssignableFrom(concreteType)", prediction=248, span="310-310"];
m3_48 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="CommandLine.cs", label="throw new CommandLineParserException(''The types are incompatible.'');", prediction=249, span="311-311"];
m3_49 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="CommandLine.cs", label="_concreteType = concreteType", prediction=250, span="313-313"];
m3_50 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="304-304"];
m3_92 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="394-394"];
m3_93 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="this.PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", prediction=251, span="396-396"];
m3_94 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="394-394"];
m3_130 [cluster="CommandLine.IArgumentEnumerator.MovePrevious()", file="CommandLine.cs", label="Entry CommandLine.IArgumentEnumerator.MovePrevious()", span="534-534"];
m3_166 [cluster="CommandLine.IArgumentEnumerator.MovePrevious()", file="CommandLine.cs", label="Exit CommandLine.IArgumentEnumerator.MovePrevious()", span="534-534"];
m3_501 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Entry CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1402-1402"];
m3_502 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs", label="throw new NotSupportedException();", prediction=252, span="1404-1404"];
m3_503 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Exit CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1402-1402"];
m3_710 [cluster="string.String(char, int)", file="CommandLine.cs", label="Entry string.String(char, int)", span="0-0"];
m3_226 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", file="CommandLine.cs", label="Entry CommandLine.OneCharStringEnumerator.MoveNext()", span="677-677"];
m3_227 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="_index < (_data.Length - 1)", prediction=186, span="679-679"];
m3_228 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="_index++", prediction=186, span="681-681"];
m3_231 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="_index = _data.Length", prediction=255, span="685-685"];
m3_229 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="_currentElement = _data.Substring(_index, 1)", prediction=256, span="682-682"];
m3_232 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=257, span="687-687"];
m3_230 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=258, span="683-683"];
m3_233 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", file="CommandLine.cs", label="Exit CommandLine.OneCharStringEnumerator.MoveNext()", span="677-677"];
m3_635 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="CommandLine.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m3_169 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Entry CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="548-548"];
m3_170 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="var parts = argumentEnumerator.Current.Substring(2).Split(new[] { '=' }, 2)", prediction=259, span="550-550"];
m3_171 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="var option = map[parts[0]]", prediction=260, span="551-551"];
m3_178 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="parts.Length == 1 && (argumentEnumerator.IsLast || !ArgumentParser.IsInputValue(argumentEnumerator.Next))", prediction=259, span="563-563"];
m3_180 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="parts.Length == 2", prediction=259, span="566-566"];
m3_182 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="valueSetting = option.SetValue(parts[1], options)", prediction=263, span="570-570"];
m3_188 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="items.Insert(0, parts[1])", prediction=259, span="580-580"];
m3_204 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="parts.Length == 2", prediction=259, span="611-611"];
m3_172 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="bool valueSetting", prediction=266, span="552-552"];
m3_173 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="option == null", prediction=260, span="554-554"];
m3_175 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="option.IsDefined = true", prediction=268, span="557-557"];
m3_176 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", prediction=260, span="559-559"];
m3_177 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!option.IsBoolean", prediction=260, span="561-561"];
m3_181 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!option.IsArray", prediction=260, span="568-568"];
m3_184 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="this.DefineOptionThatViolatesFormat(option)", prediction=260, span="572-572"];
m3_186 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", prediction=260, span="577-577"];
m3_189 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="valueSetting = option.SetValue(items, options)", prediction=274, span="582-582"];
m3_191 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="this.DefineOptionThatViolatesFormat(option)", prediction=260, span="584-584"];
m3_193 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!option.IsArray", prediction=260, span="590-590"];
m3_194 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", prediction=277, span="592-592"];
m3_196 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="this.DefineOptionThatViolatesFormat(option)", prediction=260, span="594-594"];
m3_198 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", prediction=260, span="599-599"];
m3_200 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="valueSetting = option.SetValue(items, options)", prediction=280, span="603-603"];
m3_202 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="this.DefineOptionThatViolatesFormat(option)", prediction=260, span="605-605"];
m3_206 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="valueSetting = option.SetValue(true, options)", prediction=282, span="614-614"];
m3_208 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="this.DefineOptionThatViolatesFormat(option)", prediction=260, span="616-616"];
m3_179 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ParserState.Failure;", prediction=284, span="564-564"];
m3_183 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!valueSetting", prediction=285, span="571-571"];
m3_185 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting);", prediction=263, span="574-574"];
m3_187 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", prediction=287, span="579-579"];
m3_190 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!valueSetting", prediction=288, span="583-583"];
m3_192 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting);", prediction=274, span="586-586"];
m3_195 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!valueSetting", prediction=290, span="593-593"];
m3_197 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting, true);", prediction=277, span="596-596"];
m3_199 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", prediction=292, span="601-601"];
m3_201 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!valueSetting", prediction=293, span="604-604"];
m3_203 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting);", prediction=280, span="607-607"];
m3_207 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!valueSetting", prediction=295, span="615-615"];
m3_209 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting);", prediction=282, span="618-618"];
m3_205 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ParserState.Failure;", prediction=297, span="612-612"];
m3_174 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return _ignoreUnkwnownArguments ? ParserState.MoveOnNextElement : ParserState.Failure;", prediction=260, span="555-555"];
m3_210 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Exit CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="548-548"];
m3_214 [cluster="System.Collections.Generic.IList<T>.Insert(int, T)", file="CommandLine.cs", label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0"];
m3_547 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1579-1579"];
m3_548 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="CaseSensitive = caseSensitive", prediction=299, span="1581-1581"];
m3_549 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="HelpWriter = helpWriter", prediction=300, span="1582-1582"];
m3_550 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1579-1579"];
m3_469 [cluster="object.GetHashCode()", file="CommandLine.cs", label="Entry object.GetHashCode()", span="0-0"];
m3_321 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Entry CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1086-1086"];
m3_402 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="_settings = settings", prediction=301, span="1088-1088"];
m3_403 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="IEqualityComparer<string> comparer", prediction=302, span="1090-1090"];
m3_407 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="_names = new Dictionary<string, string>(capacity, comparer)", prediction=303, span="1096-1096"];
m3_405 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="comparer = StringComparer.Ordinal", prediction=304, span="1092-1092"];
m3_406 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="comparer = StringComparer.OrdinalIgnoreCase", prediction=305, span="1094-1094"];
m3_408 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="_map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", prediction=306, span="1097-1097"];
m3_409 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="_settings.MutuallyExclusive", prediction=88, span="1099-1099"];
m3_410 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="_mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", prediction=308, span="1101-1101"];
m3_404 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="_settings.CaseSensitive", prediction=88, span="1091-1091"];
m3_411 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Exit CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1086-1086"];
m3_661 [cluster="System.Type.GetProperties()", file="CommandLine.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m3_703 [cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="CommandLine.cs", label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0"];
m3_701 [cluster="System.Reflection.Assembly.GetEntryAssembly()", file="CommandLine.cs", label="Entry System.Reflection.Assembly.GetEntryAssembly()", span="0-0"];
m3_569 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1683-1683"];
m3_570 [cluster="CommandLine.CommandLineParser.CommandLineParser()", color=green, community=0, file="CommandLine.cs", label="_settings = new CommandLineParserSettings()", prediction=310, span="1685-1685"];
m3_571 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser()", span="1683-1683"];
m3_149 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="477-477"];
m3_150 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="!option.IsAttributeArrayCompatible", prediction=311, span="479-479"];
m3_151 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="throw new CommandLineParserException();", prediction=312, span="480-480"];
m3_152 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="477-477"];
m3_41 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute()", span="294-294"];
m3_42 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", color=green, community=0, file="CommandLine.cs", label="MaximumElements = -1", prediction=313, span="296-296"];
m3_43 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.ValueListAttribute()", span="294-294"];
m3_363 [cluster="System.Enum.Parse(System.Type, string, bool)", file="CommandLine.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m3_38 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", file="CommandLine.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="270-270"];
m3_39 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", color=green, community=0, file="CommandLine.cs", label="Separator = separator", prediction=314, span="273-273"];
m3_40 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", file="CommandLine.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="270-270"];
m3_476 [cluster="object.Equals(object, object)", file="CommandLine.cs", label="Entry object.Equals(object, object)", span="0-0"];
m3_328 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetValueList(string, object)", span="968-968"];
m3_381 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="int i = 0", prediction=315, span="977-977"];
m3_377 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label=_setValueLock, prediction=35, span="970-970"];
m3_378 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="_property.SetValue(options, new List<string>(), null)", prediction=35, span="972-972"];
m3_379 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="var fieldRef = (IList<string>)_property.GetValue(options, null)", prediction=315, span="974-974"];
m3_380 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="var values = value.Split(((OptionListAttribute)_attribute).Separator)", prediction=315, span="975-975"];
m3_383 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="fieldRef.Add(values[i])", prediction=315, span="979-979"];
m3_382 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="i < values.Length", prediction=315, span="977-977"];
m3_384 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="i++", prediction=315, span="977-977"];
m3_385 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=323, span="982-982"];
m3_386 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetValueList(string, object)", span="968-968"];
m3_371 [cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", file="CommandLine.cs", label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0"];
m3_372 [cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", file="CommandLine.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0"];
m3_153 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="483-483"];
m3_154 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="!option.IsArray && option.IsAttributeArrayCompatible", prediction=324, span="485-485"];
m3_155 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="throw new CommandLineParserException();", prediction=325, span="486-486"];
m3_156 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="483-483"];
m3_592 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLine.cs", label="Entry CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1884-1884"];
m3_664 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="var info = target.GetType().GetMethods()", prediction=326, span="1887-1887"];
m3_665 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label=info, prediction=327, span="1889-1889"];
m3_666 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="!method.IsStatic", prediction=328, span="1891-1891"];
m3_668 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="attribute != null", prediction=329, span="1895-1895"];
m3_670 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="return null;", prediction=330, span="1900-1900"];
m3_667 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", prediction=327, span="1893-1894"];
m3_669 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="return new Pair<MethodInfo, TAttribute>(method, (TAttribute)attribute);", prediction=327, span="1896-1896"];
m3_671 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLine.cs", label="Exit CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1884-1884"];
m3_139 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool)", span="461-461"];
m3_140 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", color=green, community=0, file="CommandLine.cs", label="return BooleanToParserState(value, false);", prediction=333, span="463-463"];
m3_141 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool)", span="461-461"];
m3_459 [cluster="CommandLine.ParsingError.ParsingError()", file="CommandLine.cs", label="Entry CommandLine.ParsingError.ParsingError()", span="1264-1264"];
m3_477 [cluster="CommandLine.ParsingError.ParsingError()", color=green, community=0, file="CommandLine.cs", label="this.BadOption = new BadOptionInfo()", prediction=334, span="1266-1266"];
m3_478 [cluster="CommandLine.ParsingError.ParsingError()", file="CommandLine.cs", label="Exit CommandLine.ParsingError.ParsingError()", span="1264-1264"];
m3_75 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs", label="Entry CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1858-1858"];
m3_648 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="IList<Pair<PropertyInfo, TAttribute>> list = new List<Pair<PropertyInfo, TAttribute>>()", prediction=335, span="1861-1861"];
m3_649 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="target != null", prediction=336, span="1862-1862"];
m3_657 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="list.Add(new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute))", prediction=335, span="1875-1875"];
m3_658 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="return list;", prediction=335, span="1881-1881"];
m3_650 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="var propertiesInfo = target.GetType().GetProperties()", prediction=339, span="1864-1864"];
m3_651 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label=propertiesInfo, prediction=335, span="1866-1866"];
m3_655 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", prediction=335, span="1873-1873"];
m3_656 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="attribute != null", prediction=342, span="1874-1874"];
m3_652 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="property != null && (property.CanRead && property.CanWrite)", prediction=343, span="1868-1868"];
m3_654 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="setMethod != null && !setMethod.IsStatic", prediction=344, span="1871-1871"];
m3_653 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="var setMethod = property.GetSetMethod()", prediction=345, span="1870-1870"];
m3_659 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs", label="Exit CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1858-1858"];
m3_520 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", file="CommandLine.cs", label="Entry CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1442-1442"];
m3_521 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, file="CommandLine.cs", label="_vla.MaximumElements == 0 || _valueList.Count == _vla.MaximumElements", prediction=140, span="1444-1444"];
m3_522 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=347, span="1445-1445"];
m3_523 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, file="CommandLine.cs", label=this, prediction=140, span="1447-1447"];
m3_524 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, file="CommandLine.cs", label="_valueList.Add(item)", prediction=140, span="1449-1449"];
m3_525 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=350, span="1452-1452"];
m3_526 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", file="CommandLine.cs", label="Exit CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1442-1442"];
m3_65 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="CommandLine.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m3_215 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="874-874"];
m3_332 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="Type elementType = _property.PropertyType.GetElementType()", prediction=35, span="876-876"];
m3_333 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="Array array = Array.CreateInstance(elementType, values.Count)", prediction=35, span="877-877"];
m3_337 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="array.SetValue(Convert.ChangeType(values[i], elementType, Thread.CurrentThread.CurrentCulture), i)", prediction=35, span="885-885"];
m3_334 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="int i = 0", prediction=35, span="879-879"];
m3_335 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="i < array.Length", prediction=35, span="879-879"];
m3_338 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="_property.SetValue(options, array, null)", prediction=35, span="886-886"];
m3_336 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label=_setValueLock, prediction=35, span="883-883"];
m3_339 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label=FormatException, prediction=358, span="889-889"];
m3_341 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="i++", prediction=35, span="879-879"];
m3_342 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=360, span="895-895"];
m3_340 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=361, span="891-891"];
m3_343 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="874-874"];
m3_566 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(bool)", span="1675-1675"];
m3_567 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", color=green, community=0, file="CommandLine.cs", label="_settings = new CommandLineParserSettings(false, false, Console.Error)", prediction=362, span="1677-1677"];
m3_568 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser(bool)", span="1675-1675"];
m3_492 [cluster="CommandLine.StringArrayEnumerator.Reset()", file="CommandLine.cs", label="Entry CommandLine.StringArrayEnumerator.Reset()", span="1387-1387"];
m3_493 [cluster="CommandLine.StringArrayEnumerator.Reset()", color=green, community=0, file="CommandLine.cs", label="_index = -1", prediction=363, span="1389-1389"];
m3_494 [cluster="CommandLine.StringArrayEnumerator.Reset()", file="CommandLine.cs", label="Exit CommandLine.StringArrayEnumerator.Reset()", span="1387-1387"];
m3_132 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="451-451"];
m3_133 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", color=green, community=0, file="CommandLine.cs", label="return string.Compare(argument, ''-'' + option, !caseSensitive) == 0;", prediction=364, span="453-453"];
m3_134 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="451-451"];
m3_647 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="CommandLine.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m3_34 [cluster="System.InvalidOperationException.InvalidOperationException()", file="CommandLine.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m3_20 [cluster="System.Reflection.MethodBase.GetParameters()", file="CommandLine.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m3_234 [cluster="string.Substring(int, int)", file="CommandLine.cs", label="Entry string.Substring(int, int)", span="0-0"];
m3_593 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1802-1802"];
m3_621 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="i < args.Length", prediction=365, span="1806-1806"];
m3_619 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="bool caseSensitive = _settings.CaseSensitive", prediction=365, span="1804-1804"];
m3_620 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="int i = 0", prediction=365, span="1806-1806"];
m3_623 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="ArgumentParser.CompareShort(args[i], helpOption.ShortName, caseSensitive)", prediction=365, span="1810-1810"];
m3_626 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="ArgumentParser.CompareLong(args[i], helpOption.LongName, caseSensitive)", prediction=365, span="1816-1816"];
m3_628 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="i++", prediction=365, span="1806-1806"];
m3_622 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="!string.IsNullOrEmpty(helpOption.ShortName)", prediction=365, span="1808-1808"];
m3_629 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=372, span="1821-1821"];
m3_625 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="!string.IsNullOrEmpty(helpOption.LongName)", prediction=365, span="1814-1814"];
m3_624 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=374, span="1811-1811"];
m3_627 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="return true;", prediction=375, span="1817-1817"];
m3_630 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1802-1802"];
m3_541 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1555-1555"];
m3_542 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", color=green, community=0, file="CommandLine.cs", label="CaseSensitive = caseSensitive", prediction=376, span="1557-1557"];
m3_543 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1555-1555"];
m3_660 [cluster="object.GetType()", file="CommandLine.cs", label="Entry object.GetType()", span="0-0"];
m3_64 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="CommandLine.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m3_109 [cluster="string.Equals(string, System.StringComparison)", file="CommandLine.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m3_495 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", file="CommandLine.cs", label="Entry CommandLine.StringArrayEnumerator.MoveNext()", span="1392-1392"];
m3_496 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="_index < _endIndex", prediction=76, span="1394-1394"];
m3_497 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="_index++", prediction=76, span="1396-1396"];
m3_499 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="return false;", prediction=379, span="1399-1399"];
m3_498 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="return _index < _endIndex;", prediction=76, span="1397-1397"];
m3_500 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", file="CommandLine.cs", label="Exit CommandLine.StringArrayEnumerator.MoveNext()", span="1392-1392"];
m3_527 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1473-1473"];
m3_528 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1473-1473"];
m3_706 [cluster="System.Type.GetGenericTypeDefinition()", file="CommandLine.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m3_129 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="CommandLine.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m3_491 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="CommandLine.cs", label="Entry CommandLine.Assumes.NotNull<T>(T, string)", span="1836-1836"];
m3_636 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=green, community=0, file="CommandLine.cs", label="value == null", prediction=381, span="1839-1839"];
m3_637 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=green, community=0, file="CommandLine.cs", label="throw new ArgumentNullException(paramName);", prediction=382, span="1840-1840"];
m3_638 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="CommandLine.cs", label="Exit CommandLine.Assumes.NotNull<T>(T, string)", span="1836-1836"];
m3_97 [cluster="CommandLine.ArgumentParser.Create(string, bool)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.Create(string, bool)", span="399-399"];
m3_98 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0, file="CommandLine.cs", label="StringUtil.IsNumeric(argument)", prediction=383, span="401-401"];
m3_99 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0, file="CommandLine.cs", label="return null;", prediction=384, span="402-402"];
m3_100 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0, file="CommandLine.cs", label="argument.Equals(''-'', StringComparison.InvariantCulture)", prediction=385, span="404-404"];
m3_101 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0, file="CommandLine.cs", label="return null;", prediction=386, span="405-405"];
m3_102 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0, file="CommandLine.cs", label="argument[0] == '-' && argument[1] == '-'", prediction=385, span="407-407"];
m3_103 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0, file="CommandLine.cs", label="return new LongOptionParser(ignoreUnknownArguments);", prediction=385, span="408-408"];
m3_104 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0, file="CommandLine.cs", label="argument[0] == '-'", prediction=385, span="410-410"];
m3_105 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0, file="CommandLine.cs", label="return new OptionGroupParser(ignoreUnknownArguments);", prediction=385, span="411-411"];
m3_106 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0, file="CommandLine.cs", label="return null;", prediction=391, span="413-413"];
m3_107 [cluster="CommandLine.ArgumentParser.Create(string, bool)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.Create(string, bool)", span="399-399"];
m3_119 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="434-434"];
m3_120 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs", label="IList<string> list = new List<string>()", prediction=392, span="436-436"];
m3_121 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs", label="ae.MoveNext()", prediction=392, span="438-438"];
m3_123 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs", label="list.Add(ae.Current)", prediction=392, span="441-441"];
m3_126 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs", label="return list;", prediction=392, span="448-448"];
m3_122 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs", label="IsInputValue(ae.Current)", prediction=392, span="440-440"];
m3_124 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs", label="!ae.MovePrevious()", prediction=392, span="445-445"];
m3_125 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs", label="throw new CommandLineParserException();", prediction=398, span="446-446"];
m3_127 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="434-434"];
m3_572 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1694-1694"];
m3_573 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="Assumes.NotNull(settings, ''settings'')", prediction=399, span="1696-1696"];
m3_574 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="_settings = settings", prediction=400, span="1698-1698"];
m3_575 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1694-1694"];
m3_662 [cluster="System.Reflection.PropertyInfo.GetSetMethod()", file="CommandLine.cs", label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0"];
m3_695 [cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=green, community=0, file="CommandLine.cs", label="Assembly assemblyFromWhichToPullInformation = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", prediction=401, span="1948-1948"];
m3_694 [cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", file="CommandLine.cs", label="Entry CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", span="1945-1945"];
m3_696 [cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=green, community=0, file="CommandLine.cs", label="object[] a = assemblyFromWhichToPullInformation.GetCustomAttributes(typeof(TAttribute), false)", prediction=402, span="1950-1950"];
m3_697 [cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=green, community=0, file="CommandLine.cs", label="a == null || a.Length <= 0", prediction=403, span="1951-1951"];
m3_699 [cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=green, community=0, file="CommandLine.cs", label="return (TAttribute)a[0];", prediction=402, span="1952-1952"];
m3_698 [cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=green, community=0, file="CommandLine.cs", label="return null;", prediction=405, span="1951-1951"];
m3_700 [cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", file="CommandLine.cs", label="Exit CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", span="1945-1945"];
m3_96 [cluster="System.Collections.Generic.List<T>.Add(T)", file="CommandLine.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m3_344 [cluster="System.Type.GetElementType()", file="CommandLine.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m3_544 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1566-1566"];
m3_545 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="HelpWriter = helpWriter", prediction=406, span="1569-1569"];
m3_546 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1566-1566"];
m3_250 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Entry CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="720-720"];
m3_251 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="IArgumentEnumerator group = new OneCharStringEnumerator(argumentEnumerator.Current.Substring(1))", prediction=407, span="722-722"];
m3_252 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="group.MoveNext()", prediction=408, span="723-723"];
m3_253 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="var option = map[group.Current]", prediction=407, span="725-725"];
m3_259 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="argumentEnumerator.IsLast && group.IsLast", prediction=407, span="735-735"];
m3_262 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!group.IsLast", prediction=407, span="739-739"];
m3_264 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="valueSetting = option.SetValue(group.GetRemainingFromNext(), options)", prediction=412, span="743-743"];
m3_270 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="items.Insert(0, @group.GetRemainingFromNext())", prediction=407, span="753-753"];
m3_288 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!@group.IsLast && map[@group.Next] == null", prediction=407, span="787-787"];
m3_254 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="option == null", prediction=415, span="726-726"];
m3_256 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="option.IsDefined = true", prediction=416, span="729-729"];
m3_257 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", prediction=407, span="731-731"];
m3_258 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!option.IsBoolean", prediction=407, span="733-733"];
m3_263 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!option.IsArray", prediction=407, span="741-741"];
m3_266 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="this.DefineOptionThatViolatesFormat(option)", prediction=407, span="745-745"];
m3_268 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", prediction=407, span="750-750"];
m3_271 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="valueSetting = option.SetValue(items, options)", prediction=422, span="755-755"];
m3_273 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="this.DefineOptionThatViolatesFormat(option)", prediction=407, span="757-757"];
m3_277 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!option.IsArray", prediction=407, span="766-766"];
m3_278 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", prediction=425, span="768-768"];
m3_280 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="this.DefineOptionThatViolatesFormat(option)", prediction=407, span="770-770"];
m3_282 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", prediction=407, span="775-775"];
m3_284 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="valueSetting = option.SetValue(items, options)", prediction=428, span="779-779"];
m3_286 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="this.DefineOptionThatViolatesFormat(option)", prediction=407, span="781-781"];
m3_290 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!option.SetValue(true, options)", prediction=407, span="790-790"];
m3_260 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ParserState.Failure;", prediction=431, span="736-736"];
m3_261 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="bool valueSetting", prediction=432, span="738-738"];
m3_265 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!valueSetting", prediction=433, span="744-744"];
m3_267 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting);", prediction=412, span="747-747"];
m3_269 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", prediction=435, span="752-752"];
m3_272 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!valueSetting", prediction=436, span="756-756"];
m3_274 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting, true);", prediction=422, span="759-759"];
m3_275 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!argumentEnumerator.IsLast && !ArgumentParser.IsInputValue(argumentEnumerator.Next)", prediction=407, span="762-762"];
m3_276 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ParserState.Failure;", prediction=439, span="763-763"];
m3_279 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!valueSetting", prediction=440, span="769-769"];
m3_281 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting, true);", prediction=425, span="772-772"];
m3_283 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", prediction=442, span="777-777"];
m3_285 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="!valueSetting", prediction=443, span="780-780"];
m3_287 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting);", prediction=428, span="783-783"];
m3_289 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ParserState.Failure;", prediction=445, span="788-788"];
m3_291 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ParserState.Failure;", prediction=446, span="791-791"];
m3_292 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return ParserState.Success;", prediction=447, span="794-794"];
m3_255 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="return _ignoreUnkwnownArguments ? ParserState.MoveOnNextElement : ParserState.Failure;", prediction=407, span="727-727"];
m3_293 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Exit CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="720-720"];
m3_309 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="CommandLine.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m3_460 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="CommandLine.cs", label="Entry CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1224-1224"];
m3_461 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=green, community=0, file="CommandLine.cs", label="_left = left", prediction=449, span="1226-1226"];
m3_462 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=green, community=0, file="CommandLine.cs", label="_right = right", prediction=450, span="1227-1227"];
m3_463 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="CommandLine.cs", label="Exit CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1224-1224"];
m3_429 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="CommandLine.cs", label="Entry CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1199-1199"];
m3_449 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="var commandLineOptionsBase = options as CommandLineOptionsBase", prediction=451, span="1201-1201"];
m3_450 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="commandLineOptionsBase == null", prediction=452, span="1202-1202"];
m3_457 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="(commandLineOptionsBase).InternalLastPostParsingState.Errors.Add(error)", prediction=451, span="1215-1215"];
m3_452 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="var error = new ParsingError {\r\n                BadOption = {\r\n                    ShortName = option.ShortName, \r\n                    LongName = option.LongName\r\n                }\r\n            }", prediction=451, span="1205-1210"];
m3_453 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="required != null", prediction=455, span="1212-1212"];
m3_454 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="error.ViolatesRequired = required.Value", prediction=456, span="1212-1212"];
m3_456 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", prediction=457, span="1213-1213"];
m3_455 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="mutualExclusiveness != null", prediction=455, span="1213-1213"];
m3_451 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="return;", prediction=459, span="1203-1203"];
m3_458 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="CommandLine.cs", label="Exit CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1199-1199"];
m3_213 [cluster="CommandLine.OptionInfo.SetValue(string, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetValue(string, object)", span="863-863"];
m3_322 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, file="CommandLine.cs", label="_attribute is OptionListAttribute", prediction=35, span="865-865"];
m3_323 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, file="CommandLine.cs", label="return SetValueList(value, options);", prediction=35, span="866-866"];
m3_324 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, file="CommandLine.cs", label="ReflectionUtil.IsNullableType(_property.PropertyType)", prediction=35, span="868-868"];
m3_325 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, file="CommandLine.cs", label="return SetNullableValue(value, options);", prediction=35, span="869-869"];
m3_326 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, file="CommandLine.cs", label="return SetValueScalar(value, options);", prediction=35, span="871-871"];
m3_327 [cluster="CommandLine.OptionInfo.SetValue(string, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetValue(string, object)", span="863-863"];
m3_482 [cluster="CommandLine.PostParsingState.PostParsingState()", file="CommandLine.cs", label="Entry CommandLine.PostParsingState.PostParsingState()", span="1317-1317"];
m3_483 [cluster="CommandLine.PostParsingState.PostParsingState()", color=green, community=0, file="CommandLine.cs", label="Errors = new List<ParsingError>()", prediction=465, span="1319-1319"];
m3_484 [cluster="CommandLine.PostParsingState.PostParsingState()", file="CommandLine.cs", label="Exit CommandLine.PostParsingState.PostParsingState()", span="1317-1317"];
m3_108 [cluster="CommandLine.StringUtil.IsNumeric(string)", file="CommandLine.cs", label="Entry CommandLine.StringUtil.IsNumeric(string)", span="1968-1968"];
m3_711 [cluster="CommandLine.StringUtil.IsNumeric(string)", color=green, community=0, file="CommandLine.cs", label="decimal temporary", prediction=466, span="1970-1970"];
m3_712 [cluster="CommandLine.StringUtil.IsNumeric(string)", color=green, community=0, file="CommandLine.cs", label="return decimal.TryParse(value, out temporary);", prediction=467, span="1971-1971"];
m3_713 [cluster="CommandLine.StringUtil.IsNumeric(string)", file="CommandLine.cs", label="Exit CommandLine.StringUtil.IsNumeric(string)", span="1968-1968"];
m3_388 [cluster="CommandLine.OptionInfo.SetDefault(object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetDefault(object)", span="986-986"];
m3_389 [cluster="CommandLine.OptionInfo.SetDefault(object)", color=green, community=0, file="CommandLine.cs", label=_hasDefaultValue, prediction=35, span="988-988"];
m3_390 [cluster="CommandLine.OptionInfo.SetDefault(object)", color=green, community=0, file="CommandLine.cs", label=_setValueLock, prediction=35, span="990-990"];
m3_391 [cluster="CommandLine.OptionInfo.SetDefault(object)", color=green, community=0, file="CommandLine.cs", label="_property.SetValue(options, _defaultValue, null)", prediction=35, span="994-994"];
m3_392 [cluster="CommandLine.OptionInfo.SetDefault(object)", color=green, community=0, file="CommandLine.cs", label=Exception, prediction=471, span="996-996"];
m3_393 [cluster="CommandLine.OptionInfo.SetDefault(object)", color=green, community=0, file="CommandLine.cs", label="throw new CommandLineParserException(''Bad default value.'', e);", prediction=472, span="998-998"];
m3_394 [cluster="CommandLine.OptionInfo.SetDefault(object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetDefault(object)", span="986-986"];
m3_135 [cluster="string.Compare(string, string, bool)", file="CommandLine.cs", label="Entry string.Compare(string, string, bool)", span="0-0"];
m3_294 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="812-812"];
m3_295 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="attribute != null", prediction=473, span="814-814"];
m3_296 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="_required = attribute.Required", prediction=474, span="816-816"];
m3_304 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", prediction=475, span="826-826"];
m3_297 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="_helpText = attribute.HelpText", prediction=476, span="817-817"];
m3_298 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="_shortName = attribute.ShortName", prediction=477, span="818-818"];
m3_299 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="_longName = attribute.LongName", prediction=478, span="819-819"];
m3_300 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="_mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", prediction=479, span="820-820"];
m3_301 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="_defaultValue = attribute.DefaultValue", prediction=480, span="821-821"];
m3_302 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="_hasDefaultValue = attribute.HasDefaultValue", prediction=481, span="822-822"];
m3_303 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="_attribute = attribute", prediction=482, span="823-823"];
m3_305 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="property != null", prediction=483, span="828-828"];
m3_306 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="_property = property", prediction=484, span="829-829"];
m3_307 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="throw new ArgumentNullException(''property'', ''The property is mandatory'');", prediction=485, span="831-831"];
m3_308 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="812-812"];
m3_715 [file="CommandLine.cs", label="CommandLine.HelpOptionAttribute", span=""];
m3_716 [file="CommandLine.cs", label="CommandLine.OptionAttribute", span=""];
m3_717 [file="CommandLine.cs", label="CommandLine.OptionListAttribute", span=""];
m3_718 [file="CommandLine.cs", label="CommandLine.ValueListAttribute", span=""];
m3_719 [file="CommandLine.cs", label="CommandLine.ArgumentParser", span=""];
m3_720 [file="CommandLine.cs", label="CommandLine.BadOptionInfo", span=""];
m3_721 [file="CommandLine.cs", label="CommandLine.LongOptionParser", span=""];
m3_722 [file="CommandLine.cs", label="CommandLine.OneCharStringEnumerator", span=""];
m3_723 [file="CommandLine.cs", label="CommandLine.OptionGroupParser", span=""];
m3_724 [file="CommandLine.cs", label="CommandLine.OptionInfo", span=""];
m3_725 [file="CommandLine.cs", label="CommandLine.OptionMap.MutuallyExclusiveInfo", span=""];
m3_726 [file="CommandLine.cs", label="CommandLine.OptionMap", span=""];
m3_727 [file="CommandLine.cs", label="CommandLine.Pair<TLeft, TRight>", span=""];
m3_728 [file="CommandLine.cs", label="CommandLine.ParsingError", span=""];
m3_729 [file="CommandLine.cs", label="CommandLine.PostParsingState", span=""];
m3_730 [file="CommandLine.cs", label="CommandLine.StringArrayEnumerator", span=""];
m3_731 [file="CommandLine.cs", label="CommandLine.TargetWrapper", span=""];
m3_732 [file="CommandLine.cs", label="CommandLine.CommandLineOptionsBase", span=""];
m3_733 [file="CommandLine.cs", label="CommandLine.CommandLineParserSettings", span=""];
m3_734 [file="CommandLine.cs", label="CommandLine.CommandLineParser", span=""];
m4_10 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="63-63"];
m4_11 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="65-65"];
m4_12 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-s'', ''something'' }, options)", span="66-66"];
m4_14 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''something'', options.StringValue)", span="69-69"];
m4_15 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="70-70"];
m4_13 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="68-68"];
m4_16 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="63-63"];
m4_176 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="302-302"];
m4_177 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="304-304"];
m4_178 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--int'' }, options)", span="305-305"];
m4_179 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="307-307"];
m4_180 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="302-302"];
m4_260 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", span="445-445"];
m4_261 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", prediction=486, span="447-447"];
m4_262 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-b'', short.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", prediction=487, span="448-448"];
m4_263 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", prediction=488, span="450-450"];
m4_264 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", span="445-445"];
m4_242 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", span="413-413"];
m4_243 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", prediction=489, span="415-415"];
m4_244 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-d-4096.1024'' }, options)", prediction=490, span="416-416"];
m4_246 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs", label="Assert.AreEqual(-4096.1024, options.DoubleValue)", prediction=489, span="419-419"];
m4_245 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", prediction=488, span="418-418"];
m4_247 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", span="413-413"];
m4_284 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", span="481-481"];
m4_285 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", prediction=493, span="483-483"];
m4_286 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-f'', double.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", prediction=494, span="484-484"];
m4_287 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", prediction=488, span="486-486"];
m4_288 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", span="481-481"];
m4_0 [cluster="CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", span="44-44"];
m4_1 [cluster="CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", span="44-44"];
m4_123 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", span="33-33"];
m4_80 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
m4_118 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", span="35-35"];
m4_254 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", span="433-433"];
m4_255 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", prediction=496, span="435-435"];
m4_256 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--double=-4096.1024'' }, options)", prediction=497, span="436-436"];
m4_258 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs", label="Assert.AreEqual(-4096.1024, options.DoubleValue)", prediction=496, span="439-439"];
m4_257 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", prediction=488, span="438-438"];
m4_259 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", span="433-433"];
m4_90 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="CommandLineParserFixture.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m4_283 [cluster="float.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry float.ToString(System.IFormatProvider)", span="0-0"];
m4_248 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", span="423-423"];
m4_249 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", prediction=500, span="425-425"];
m4_250 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--double'', ''-4096.1024'' }, options)", prediction=501, span="426-426"];
m4_252 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs", label="Assert.AreEqual(-4096.1024, options.DoubleValue)", prediction=500, span="429-429"];
m4_251 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", prediction=488, span="428-428"];
m4_253 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", span="423-423"];
m4_91 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", span="35-35"];
m4_7 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="57-57"];
m4_8 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="base.Parser.ParseArguments(new string[] { }, null)", span="59-59"];
m4_9 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="57-57"];
m4_72 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="145-145"];
m4_73 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithEnum()", span="147-147"];
m4_74 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-s'', ''data.bin'', ''-a'', ''ReadWrite'' }, options)", span="149-149"];
m4_76 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''data.bin'', options.StringValue)", span="152-152"];
m4_77 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(FileAccess.ReadWrite, options.FileAccess)", span="153-153"];
m4_78 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="154-154"];
m4_75 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="151-151"];
m4_79 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="145-145"];
m4_160 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLineParserFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1555-1555"];
m4_224 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="383-383"];
m4_225 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", prediction=504, span="385-385"];
m4_226 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--int'', ''-4096'' }, options)", prediction=505, span="386-386"];
m4_228 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs", label="Assert.AreEqual(-4096, options.IntegerValue)", prediction=504, span="389-389"];
m4_227 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", prediction=488, span="388-388"];
m4_229 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="383-383"];
m4_161 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="275-275"];
m4_162 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="277-277"];
m4_163 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--string'' }, options)", span="278-278"];
m4_164 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="280-280"];
m4_165 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="275-275"];
m4_29 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="88-88"];
m4_30 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="var options = new BooleanSetOptions()", span="90-90"];
m4_31 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-ca'', ''-d65'' }, options)", span="91-91"];
m4_33 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Assert.IsTrue(options.BooleanThree)", span="94-94"];
m4_34 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Assert.IsTrue(options.BooleanOne)", span="95-95"];
m4_35 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Assert.IsFalse(options.BooleanTwo)", span="96-96"];
m4_36 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(65, options.NonBooleanValue)", span="97-97"];
m4_37 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="98-98"];
m4_32 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="93-93"];
m4_38 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="88-88"];
m4_67 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="135-135"];
m4_68 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="137-137"];
m4_69 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Assert.IsFalse(base.Parser.ParseArguments(new string[] { ''-i=10'' }, options))", span="139-139"];
m4_70 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="140-140"];
m4_71 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="135-135"];
m4_278 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", span="472-472"];
m4_279 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", prediction=508, span="474-474"];
m4_280 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-l'', float.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", prediction=509, span="475-475"];
m4_281 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", prediction=488, span="477-477"];
m4_282 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", span="472-472"];
m4_52 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="116-116"];
m4_53 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithOptionList()", span="118-118"];
m4_54 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] {\r\n                                ''-k'', ''string1:stringTwo:stringIII'', ''-s'', ''test-file.txt'' }, options)", span="119-120"];
m4_56 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''string1'', options.SearchKeywords[0])", span="123-123"];
m4_57 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.SearchKeywords[0])", span="124-124"];
m4_58 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''stringTwo'', options.SearchKeywords[1])", span="125-125"];
m4_59 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.SearchKeywords[1])", span="126-126"];
m4_60 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''stringIII'', options.SearchKeywords[2])", span="127-127"];
m4_61 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.SearchKeywords[2])", span="128-128"];
m4_62 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''test-file.txt'', options.StringValue)", span="129-129"];
m4_63 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.StringValue)", span="130-130"];
m4_55 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="122-122"];
m4_64 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="116-116"];
m4_17 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", span="58-58"];
m4_191 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="329-329"];
m4_192 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="331-331"];
m4_193 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--double'' }, options)", span="332-332"];
m4_194 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="334-334"];
m4_195 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="329-329"];
m4_6 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLineParserFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1473-1473"];
m4_151 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="261-261"];
m4_152 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="ICommandLineParser local = new CommandLineParser(new CommandLineParserSettings(false))", span="263-263"];
m4_153 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="var options = new MixedCaseOptions()", span="264-264"];
m4_154 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="bool result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="265-265"];
m4_156 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''alfa'', options.AlfaValue)", span="268-268"];
m4_157 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''beta'', options.BetaValue)", span="269-269"];
m4_155 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="267-267"];
m4_158 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="261-261"];
m4_218 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="374-374"];
m4_219 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", prediction=511, span="376-376"];
m4_220 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-i-4096'' }, options)", prediction=512, span="377-377"];
m4_222 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs", label="Assert.AreEqual(-4096, options.IntegerValue)", prediction=511, span="380-380"];
m4_221 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", prediction=488, span="379-379"];
m4_223 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="374-374"];
m4_19 [cluster="System.Console.WriteLine(object)", file="CommandLineParserFixture.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m4_39 [cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", span="35-35"];
m4_65 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", span="35-35"];
m4_135 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", span="239-239"];
m4_136 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="ICommandLineParser local = new CommandLineParser()", span="241-241"];
m4_137 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="var options = new MixedCaseOptions()", span="242-242"];
m4_138 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="bool result = local.ParseArguments(new string[] { ''-a'', ''alfa'', ''--beta-OPTION'', ''beta'' }, options)", span="243-243"];
m4_140 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''alfa'', options.AlfaValue)", span="246-246"];
m4_141 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''beta'', options.BetaValue)", span="247-247"];
m4_139 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="245-245"];
m4_142 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", span="239-239"];
m4_81 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", span="158-158"];
m4_82 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="160-160"];
m4_83 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="161-161"];
m4_88 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="168-168"];
m4_84 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="162-162"];
m4_85 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-d'', ''10,986'' }, options)", span="163-163"];
m4_87 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(10.986, options.DoubleValue)", span="166-166"];
m4_86 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="165-165"];
m4_89 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", span="158-158"];
m4_130 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", span="228-228"];
m4_131 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="230-230"];
m4_132 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--extend'' }, options)", span="231-231"];
m4_133 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="233-233"];
m4_134 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", span="228-228"];
m4_20 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="74-74"];
m4_21 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="76-76"];
m4_22 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="77-78"];
m4_24 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''another string'', options.StringValue)", span="81-81"];
m4_25 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(100, options.IntegerValue)", span="82-82"];
m4_26 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(true, options.BooleanValue)", span="83-83"];
m4_27 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="84-84"];
m4_23 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="80-80"];
m4_28 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="74-74"];
m4_202 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="350-350"];
m4_203 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithValueList()", span="352-352"];
m4_204 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-sparser.xml'', ''-'', ''--switch'' }, options)", span="353-353"];
m4_206 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''parser.xml'', options.StringValue)", span="356-356"];
m4_207 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(true, options.BooleanValue)", span="357-357"];
m4_208 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(1, options.Items.Count)", span="358-358"];
m4_209 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''-'', options.Items[0])", span="359-359"];
m4_205 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="355-355"];
m4_210 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="350-350"];
m4_143 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParserFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1683-1683"];
m4_41 [cluster="Unk.IsFalse", file="CommandLineParserFixture.cs", label="Entry Unk.IsFalse", span=""];
m4_129 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", span="63-63"];
m4_145 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="251-251"];
m4_146 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="ICommandLineParser local = new CommandLineParser()", span="253-253"];
m4_147 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="var options = new MixedCaseOptions()", span="254-254"];
m4_148 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="bool result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="255-255"];
m4_149 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="257-257"];
m4_150 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="251-251"];
m4_159 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParserFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1694-1694"];
m4_2 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="50-50"];
m4_3 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="base.Parser.ParseArguments(null, new SimpleOptions())", span="52-52"];
m4_4 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="50-50"];
m4_119 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", span="211-211"];
m4_120 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithBadDefaults()", span="213-213"];
m4_121 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="base.Parser.ParseArguments(new string[] {}, options)", span="214-214"];
m4_122 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", span="211-211"];
m4_211 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35"];
m4_109 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", span="33-33"];
m4_196 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="340-340"];
m4_197 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="342-342"];
m4_198 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--string'', ''-'' }, options)", span="343-343"];
m4_200 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''-'', options.StringValue)", span="346-346"];
m4_199 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="345-345"];
m4_201 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="340-340"];
m4_5 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33"];
m4_212 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs", label="CommandLine.Tests.CommandLineParserFixture", span=""];
m4_213 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", prediction=515, span="367-367"];
m4_214 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-i'', ''-4096'' }, options)", prediction=516, span="368-368"];
m4_216 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="Assert.AreEqual(-4096, options.IntegerValue)", prediction=515, span="371-371"];
m4_215 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", prediction=488, span="370-370"];
m4_217 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", span="365-365"];
m4_266 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", span="454-454"];
m4_267 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", prediction=519, span="456-456"];
m4_268 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-s'', int.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", prediction=520, span="457-457"];
m4_269 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", prediction=488, span="459-459"];
m4_270 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", span="454-454"];
m4_230 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="392-392"];
m4_231 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", prediction=522, span="394-394"];
m4_232 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--int=-4096'' }, options)", prediction=523, span="395-395"];
m4_234 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs", label="Assert.AreEqual(-4096, options.IntegerValue)", prediction=522, span="398-398"];
m4_233 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", prediction=488, span="397-397"];
m4_235 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="392-392"];
m4_66 [cluster="System.Console.WriteLine(string)", file="CommandLineParserFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m4_42 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="102-102"];
m4_43 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="var options = new BooleanSetOptions()", span="104-104"];
m4_44 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-b'', ''--double=9'' }, options)", span="105-105"];
m4_46 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Assert.IsTrue(options.BooleanTwo)", span="108-108"];
m4_47 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Assert.IsFalse(options.BooleanOne)", span="109-109"];
m4_48 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Assert.IsFalse(options.BooleanThree)", span="110-110"];
m4_49 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(9, options.NonBooleanValue)", span="111-111"];
m4_50 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="112-112"];
m4_45 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="107-107"];
m4_51 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="102-102"];
m4_166 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="284-284"];
m4_167 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="286-286"];
m4_168 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--byte'' }, options)", span="287-287"];
m4_169 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="289-289"];
m4_170 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="284-284"];
m4_181 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="311-311"];
m4_182 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="313-313"];
m4_183 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--long'' }, options)", span="314-314"];
m4_184 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="316-316"];
m4_185 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="311-311"];
m4_144 [cluster="CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", span="33-33"];
m4_236 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", span="403-403"];
m4_237 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", prediction=526, span="405-405"];
m4_238 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-d'', ''-4096.1024'' }, options)", prediction=527, span="406-406"];
m4_240 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="Assert.AreEqual(-4096.1024, options.DoubleValue)", prediction=526, span="409-409"];
m4_239 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", prediction=488, span="408-408"];
m4_241 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", span="403-403"];
m4_289 [cluster="double.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m4_110 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", span="198-198"];
m4_111 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithDefaultArray()", span="200-200"];
m4_112 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-y'', ''4'', ''5'', ''6'' }, options)", span="201-201"];
m4_114 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(new string[] { ''a'', ''b'', ''c'' }, options.StringArrayValue)", span="204-204"];
m4_115 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(new int[] { 4, 5, 6 }, options.IntegerArrayValue)", span="205-205"];
m4_116 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(new double[] { 1.1, 2.2, 3.3 }, options.DoubleArrayValue)", span="206-206"];
m4_113 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="203-203"];
m4_117 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", span="198-198"];
m4_272 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", span="463-463"];
m4_273 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", prediction=530, span="465-465"];
m4_274 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-i'', long.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", prediction=531, span="466-466"];
m4_275 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", prediction=488, span="468-468"];
m4_276 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", span="463-463"];
m4_265 [cluster="short.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry short.ToString(System.IFormatProvider)", span="0-0"];
m4_92 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", span="172-172"];
m4_93 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="174-174"];
m4_94 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="175-175"];
m4_99 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="182-182"];
m4_95 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="176-176"];
m4_96 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--n-double'', ''12,32982'' }, options)", span="177-177"];
m4_98 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(12.32982, options.NullableDoubleValue)", span="180-180"];
m4_97 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="179-179"];
m4_100 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", span="172-172"];
m4_271 [cluster="int.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m4_186 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="320-320"];
m4_187 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="322-322"];
m4_188 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--float'' }, options)", span="323-323"];
m4_189 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="325-325"];
m4_190 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="320-320"];
m4_101 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", span="186-186"];
m4_102 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithDefaults()", span="188-188"];
m4_103 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] {}, options)", span="189-189"];
m4_105 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''str'', options.StringValue)", span="192-192"];
m4_106 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(9, options.IntegerValue)", span="193-193"];
m4_107 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(true, options.BooleanValue)", span="194-194"];
m4_104 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="191-191"];
m4_108 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", span="186-186"];
m4_277 [cluster="long.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
m4_124 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", span="219-219"];
m4_125 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="221-221"];
m4_126 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-x'' }, options)", span="222-222"];
m4_127 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="224-224"];
m4_128 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", span="219-219"];
m4_171 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="293-293"];
m4_172 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="295-295"];
m4_173 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--short'' }, options)", span="296-296"];
m4_174 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="298-298"];
m4_175 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="293-293"];
m4_40 [cluster="Unk.IsTrue", file="CommandLineParserFixture.cs", label="Entry Unk.IsTrue", span=""];
m5_12 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1473-1473"];
m5_0 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", span="40-40"];
m5_1 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="var writer = new StringWriter()", prediction=533, span="42-42"];
m5_2 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="ICommandLineParser parser = new CommandLineParser(new CommandLineParserSettings(writer))", prediction=534, span="43-43"];
m5_6 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="Assert.AreEqual(''MockOptions::GetUsage()'', writer.ToString())", prediction=533, span="49-49"];
m5_3 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="var options = new SimpleOptionsWithHelpOption()", prediction=536, span="44-44"];
m5_4 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="bool success = parser.ParseArguments(new string[] {''--help''}, options)", prediction=537, span="46-46"];
m5_5 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="Assert.AreEqual(false, success)", prediction=538, span="48-48"];
m5_7 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", span="40-40"];
m5_11 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.SimpleOptionsWithHelpOption()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.SimpleOptionsWithHelpOption()", span="33-33"];
m5_14 [cluster="System.IO.StringWriter.ToString()", file="CommandLineParserSettingsFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m5_8 [cluster="System.IO.StringWriter.StringWriter()", file="CommandLineParserSettingsFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m5_34 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1488-1488"];
m5_9 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1694-1694"];
m5_25 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1545-1545"];
m5_26 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", span="68-68"];
m5_27 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="var writer = new StringWriter()", prediction=539, span="70-70"];
m5_28 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="ICommandLineParser parser = new CommandLineParser(new CommandLineParserSettings())", prediction=540, span="71-71"];
m5_30 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="bool success = parser.ParseArguments(new string[] { ''--help'' }, options, writer)", prediction=541, span="74-74"];
m5_32 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="Assert.AreEqual(''MockOptions::GetUsage()'', writer.ToString())", prediction=539, span="77-77"];
m5_29 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="var options = new SimpleOptionsWithHelpOption()", prediction=543, span="72-72"];
m5_31 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="Assert.AreEqual(false, success)", prediction=544, span="76-76"];
m5_33 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", span="68-68"];
m5_10 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1566-1566"];
m5_15 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", span="53-53"];
m5_16 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="var writer = new StringWriter()", prediction=545, span="55-55"];
m5_17 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="var settings = new CommandLineParserSettings()", prediction=546, span="56-56"];
m5_18 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="settings.HelpWriter = writer", prediction=547, span="57-57"];
m5_23 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="Assert.AreEqual(''MockOptions::GetUsage()'', writer.ToString())", prediction=545, span="64-64"];
m5_19 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="ICommandLineParser parser = new CommandLineParser(settings)", prediction=549, span="58-58"];
m5_20 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="var options = new SimpleOptionsWithHelpOption()", prediction=550, span="59-59"];
m5_21 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="bool success = parser.ParseArguments(new string[] { ''--help'' }, options)", prediction=551, span="61-61"];
m5_22 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="Assert.AreEqual(false, success)", prediction=552, span="63-63"];
m5_24 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", span="53-53"];
m6_4 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ToString()", file="ComplexOptions.cs", label="Entry CommandLine.Tests.Mocks.ComplexOptions.ToString()", span="53-53"];
m6_5 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ToString()", color=green, community=0, file="ComplexOptions.cs", label="return DebugStringUtil.ConvertOptionsToString(this);", prediction=553, span="55-55"];
m6_6 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ToString()", file="ComplexOptions.cs", label="Exit CommandLine.Tests.Mocks.ComplexOptions.ToString()", span="53-53"];
m6_0 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="ComplexOptions.cs", label="Entry CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", span="35-35"];
m6_1 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", color=green, community=0, file="ComplexOptions.cs", label="StartOffset = 0", prediction=554, span="37-37"];
m6_2 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", color=green, community=0, file="ComplexOptions.cs", label="Bytes = 0", prediction=555, span="38-38"];
m6_3 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="ComplexOptions.cs", label="Exit CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", span="35-35"];
m6_7 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="ComplexOptions.cs", label="Entry CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", span="39-39"];
m6_8 [file="ComplexOptions.cs", label="CommandLine.Tests.Mocks.ComplexOptions", span=""];
m7_30 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", span="90-90"];
m7_31 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", color=green, community=0, file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(''W & Z, Inc.'', 2005, 2007)", prediction=556, span="92-92"];
m7_32 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", color=green, community=0, file="CopyrightInfoFixture.cs", label="Assert.AreEqual(''Copyright (C) 2005 - 2007 W & Z, Inc.'', copyright.ToString())", prediction=557, span="94-94"];
m7_33 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", span="90-90"];
m7_26 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", span="82-82"];
m7_27 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", color=green, community=0, file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(true, ''X & Y Group'', 2006, 2007)", prediction=558, span="84-84"];
m7_28 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", color=green, community=0, file="CopyrightInfoFixture.cs", label="Assert.AreEqual(''Copyright (C) 2006, 2007 X & Y Group'', copyright.ToString())", prediction=559, span="86-86"];
m7_29 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", span="82-82"];
m7_0 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", span="43-43"];
m7_1 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", span="43-43"];
m7_17 [cluster="System.Text.StringBuilder.Remove(int, int)", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m7_13 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m7_2 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", span="53-53"];
m7_3 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", color=green, community=0, file="CopyrightInfoFixture.cs", label="var yearsPart = new StringBuilder(years.Length * 4)", prediction=560, span="55-55"];
m7_4 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", color=green, community=0, file="CopyrightInfoFixture.cs", label=years, prediction=561, span="57-57"];
m7_7 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", color=green, community=0, file="CopyrightInfoFixture.cs", label="yearsPart.Append(string.Concat(''''', y))", prediction=560, span="61-61"];
m7_8 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", color=green, community=0, file="CopyrightInfoFixture.cs", label="yearsPart.Append(y)", prediction=560, span="63-63"];
m7_9 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", color=green, community=0, file="CopyrightInfoFixture.cs", label="yearsPart.Append('', '')", prediction=560, span="64-64"];
m7_10 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", color=green, community=0, file="CopyrightInfoFixture.cs", label="yearsPart.Remove(yearsPart.Length - 2, 2)", prediction=560, span="66-66"];
m7_11 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", color=green, community=0, file="CopyrightInfoFixture.cs", label="return yearsPart.ToString();", prediction=560, span="68-68"];
m7_5 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", color=green, community=0, file="CopyrightInfoFixture.cs", label="string y = year.ToString(CultureInfo.InvariantCulture)", prediction=560, span="59-59"];
m7_6 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", color=green, community=0, file="CopyrightInfoFixture.cs", label="y.Length == 2", prediction=568, span="60-60"];
m7_12 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", span="53-53"];
m7_43 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", span="114-114"];
m7_44 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", color=green, community=0, file="CopyrightInfoFixture.cs", label="new CopyrightInfo(''Authors, Inc.'')", prediction=569, span="116-116"];
m7_45 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", span="114-114"];
m7_23 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="219-219"];
m7_14 [cluster="int.ToString(System.IFormatProvider)", file="CopyrightInfoFixture.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m7_15 [cluster="string.Concat(string, string)", file="CopyrightInfoFixture.cs", label="Entry string.Concat(string, string)", span="0-0"];
m7_35 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", span="98-98"];
m7_36 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", color=green, community=0, file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(''CommandLine, Ltd'', 1999, 2003, 2004, 2007)", prediction=570, span="100-100"];
m7_37 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", color=green, community=0, file="CopyrightInfoFixture.cs", label="Assert.AreEqual(''Copyright (C) 1999 - 2003, 2004 - 2007 CommandLine, Ltd'', copyright.ToString())", prediction=571, span="102-102"];
m7_38 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", span="98-98"];
m7_39 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", span="107-107"];
m7_40 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", color=green, community=0, file="CopyrightInfoFixture.cs", label="new CopyrightInfo(null, 2000)", prediction=572, span="109-109"];
m7_41 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", span="107-107"];
m7_42 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="192-192"];
m7_24 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.ToString()", span="236-236"];
m7_18 [cluster="System.Text.StringBuilder.ToString()", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m7_46 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", span="120-120"];
m7_47 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", color=green, community=0, file="CopyrightInfoFixture.cs", label="var info = new CopyleftInfo(true, ''Free Company, Inc.'', 96, 97, 98, 2005)", prediction=573, span="122-122"];
m7_48 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", color=green, community=0, file="CopyrightInfoFixture.cs", label="Assert.AreEqual(''Copyleft (C) '96, '97, '98, 2005 Free Company, Inc.'', info.ToString())", prediction=574, span="124-124"];
m7_49 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", span="120-120"];
m7_16 [cluster="System.Text.StringBuilder.Append(string)", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m7_19 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", span="74-74"];
m7_20 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", color=green, community=0, file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(false, ''Authors, Inc.'', 2007)", prediction=575, span="76-76"];
m7_21 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", color=green, community=0, file="CopyrightInfoFixture.cs", label="Assert.AreEqual(''Copyright (c) 2007 Authors, Inc.'', copyright.ToString())", prediction=576, span="78-78"];
m7_22 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", span="74-74"];
m7_34 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="205-205"];
m8_33 [cluster="System.Text.StringBuilder.Append(object)", file="DebugStringUtil.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m8_16 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="Entry CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", span="59-59"];
m8_19 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", color=green, community=0, file="DebugStringUtil.cs", label="var baseOA = attr as BaseOptionAttribute", prediction=577, span="61-61"];
m8_22 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", color=green, community=0, file="DebugStringUtil.cs", label="builder.Append(baseOA.ShortName)", prediction=577, span="67-67"];
m8_24 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", color=green, community=0, file="DebugStringUtil.cs", label="builder.Append(''/'')", prediction=577, span="70-70"];
m8_26 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", color=green, community=0, file="DebugStringUtil.cs", label="builder.Append(baseOA.LongName)", prediction=577, span="75-75"];
m8_27 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", color=green, community=0, file="DebugStringUtil.cs", label="builder.Append('': '')", prediction=577, span="77-77"];
m8_28 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", color=green, community=0, file="DebugStringUtil.cs", label="builder.Append(field.GetValue(instance))", prediction=577, span="78-78"];
m8_29 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", color=green, community=0, file="DebugStringUtil.cs", label="builder.Append(Environment.NewLine)", prediction=577, span="79-79"];
m8_20 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", color=green, community=0, file="DebugStringUtil.cs", label="baseOA != null", prediction=584, span="63-63"];
m8_21 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", color=green, community=0, file="DebugStringUtil.cs", label="baseOA.HasShortName", prediction=577, span="65-65"];
m8_23 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", color=green, community=0, file="DebugStringUtil.cs", label="baseOA.HasLongName", prediction=577, span="68-68"];
m8_25 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", color=green, community=0, file="DebugStringUtil.cs", label="baseOA.HasLongName", prediction=577, span="73-73"];
m8_30 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="Exit CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", span="59-59"];
m8_31 [cluster="System.Text.StringBuilder.Append(string)", file="DebugStringUtil.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m8_12 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="DebugStringUtil.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m8_0 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="Entry CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", span="39-39"];
m8_1 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", color=green, community=0, file="DebugStringUtil.cs", label="var builder = new StringBuilder(256)", prediction=588, span="41-41"];
m8_2 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", color=green, community=0, file="DebugStringUtil.cs", label="var type = instance.GetType()", prediction=589, span="42-42"];
m8_8 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", color=green, community=0, file="DebugStringUtil.cs", label="AppendBaseOptionAttribute(builder, instance, field, attr)", prediction=588, span="51-51"];
m8_9 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", color=green, community=0, file="DebugStringUtil.cs", label="AppendValueListAttribute(builder, instance, field, attr)", prediction=588, span="52-52"];
m8_10 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", color=green, community=0, file="DebugStringUtil.cs", label="return builder.ToString();", prediction=588, span="56-56"];
m8_3 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", color=green, community=0, file="DebugStringUtil.cs", label="var fields = type.GetFields()", prediction=593, span="43-43"];
m8_4 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", color=green, community=0, file="DebugStringUtil.cs", label=fields, prediction=588, span="45-45"];
m8_5 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", color=green, community=0, file="DebugStringUtil.cs", label="object[] attrs = field.GetCustomAttributes(false)", prediction=595, span="47-47"];
m8_6 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", color=green, community=0, file="DebugStringUtil.cs", label="attrs.Length > 0", prediction=596, span="48-48"];
m8_7 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", color=green, community=0, file="DebugStringUtil.cs", label="object attr = attrs[0]", prediction=588, span="50-50"];
m8_11 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="Exit CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", span="39-39"];
m8_13 [cluster="object.GetType()", file="DebugStringUtil.cs", label="Entry object.GetType()", span="0-0"];
m8_32 [cluster="System.Reflection.FieldInfo.GetValue(object)", file="DebugStringUtil.cs", label="Entry System.Reflection.FieldInfo.GetValue(object)", span="0-0"];
m8_18 [cluster="System.Text.StringBuilder.ToString()", file="DebugStringUtil.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m8_14 [cluster="System.Type.GetFields()", file="DebugStringUtil.cs", label="Entry System.Type.GetFields()", span="0-0"];
m8_15 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="DebugStringUtil.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m8_17 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="Entry CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", span="83-83"];
m8_34 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", color=green, community=0, file="DebugStringUtil.cs", label="var valueList = attr as ValueListAttribute", prediction=598, span="85-85"];
m8_36 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", color=green, community=0, file="DebugStringUtil.cs", label="IList<string> values = (IList<string>)field.GetValue(instance)", prediction=599, span="89-89"];
m8_38 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", color=green, community=0, file="DebugStringUtil.cs", label="builder.Append(''non-option value: '')", prediction=600, span="92-92"];
m8_39 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", color=green, community=0, file="DebugStringUtil.cs", label="builder.Append(value)", prediction=600, span="93-93"];
m8_40 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", color=green, community=0, file="DebugStringUtil.cs", label="builder.Append(Environment.NewLine)", prediction=600, span="94-94"];
m8_35 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", color=green, community=0, file="DebugStringUtil.cs", label="valueList != null", prediction=603, span="87-87"];
m8_37 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", color=green, community=1, file="DebugStringUtil.cs", label=values, prediction=600, span="90-90"];
m8_41 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="Exit CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", span="83-83"];
m9_20 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="EnumeratorsFixture.cs", label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="528-528"];
m9_23 [cluster="Unk.IsNull", file="EnumeratorsFixture.cs", label="Entry Unk.IsNull", span=""];
m9_46 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="EnumeratorsFixture.cs", label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="625-625"];
m9_22 [cluster="Unk.IsFalse", file="EnumeratorsFixture.cs", label="Entry Unk.IsFalse", span=""];
m9_21 [cluster="Unk.AreEqual", file="EnumeratorsFixture.cs", label="Entry Unk.AreEqual", span=""];
m9_0 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Tests.EnumeratorsFixture.StringIteration()", span="38-38"];
m9_1 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="string valueOne = ''one''", prediction=605, span="40-40"];
m9_2 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="string valueTwo = ''two''", prediction=605, span="41-41"];
m9_4 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="string[] values = { valueOne, valueTwo, valueThree }", prediction=607, span="44-44"];
m9_7 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.AreEqual(valueOne, e.Current)", prediction=605, span="48-48"];
m9_3 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="string valueThree = ''three''", prediction=605, span="42-42"];
m9_8 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.AreEqual(valueTwo, e.Next)", prediction=605, span="49-49"];
m9_11 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.AreEqual(valueTwo, e.Current)", prediction=605, span="54-54"];
m9_12 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.AreEqual(valueThree, e.Next)", prediction=605, span="55-55"];
m9_15 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.AreEqual(valueThree, e.Current)", prediction=605, span="60-60"];
m9_5 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="IArgumentEnumerator e = new StringArrayEnumerator(values)", prediction=605, span="45-45"];
m9_6 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="e.MoveNext()", prediction=615, span="46-46"];
m9_9 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.IsFalse(e.IsLast)", prediction=605, span="50-50"];
m9_10 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="e.MoveNext()", prediction=605, span="52-52"];
m9_13 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.IsFalse(e.IsLast)", prediction=605, span="56-56"];
m9_14 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="e.MoveNext()", prediction=605, span="58-58"];
m9_16 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.IsNull(e.Next)", prediction=605, span="61-61"];
m9_17 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.IsTrue(e.IsLast)", prediction=605, span="62-62"];
m9_18 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="Exit CommandLine.Tests.EnumeratorsFixture.StringIteration()", span="38-38"];
m9_47 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="EnumeratorsFixture.cs", label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="523-523"];
m9_24 [cluster="Unk.IsTrue", file="EnumeratorsFixture.cs", label="Entry Unk.IsTrue", span=""];
m9_25 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Tests.EnumeratorsFixture.CharIteration()", span="66-66"];
m9_26 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="IArgumentEnumerator e = new OneCharStringEnumerator(''abcd'')", prediction=622, span="68-68"];
m9_27 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="e.MoveNext()", prediction=623, span="69-69"];
m9_28 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.AreEqual(''a'', e.Current)", prediction=622, span="71-71"];
m9_29 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.AreEqual(''b'', e.Next)", prediction=622, span="72-72"];
m9_30 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.AreEqual(''bcd'', e.GetRemainingFromNext())", prediction=622, span="73-73"];
m9_31 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.IsFalse(e.IsLast)", prediction=622, span="74-74"];
m9_32 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="e.MoveNext()", prediction=622, span="76-76"];
m9_33 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.AreEqual(''b'', e.Current)", prediction=622, span="78-78"];
m9_34 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.AreEqual(''c'', e.Next)", prediction=622, span="79-79"];
m9_35 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.AreEqual(''cd'', e.GetRemainingFromNext())", prediction=622, span="80-80"];
m9_36 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.IsFalse(e.IsLast)", prediction=622, span="81-81"];
m9_37 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="e.MoveNext()", prediction=622, span="83-83"];
m9_38 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.AreEqual(''c'', e.Current)", prediction=622, span="85-85"];
m9_39 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.AreEqual(''d'', e.Next)", prediction=622, span="86-86"];
m9_40 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.AreEqual(''d'', e.GetRemainingFromNext())", prediction=622, span="87-87"];
m9_41 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.IsFalse(e.IsLast)", prediction=622, span="88-88"];
m9_42 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="e.MoveNext()", prediction=622, span="90-90"];
m9_43 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.AreEqual(''d'', e.Current)", prediction=622, span="92-92"];
m9_44 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="Assert.IsTrue(e.IsLast)", prediction=622, span="93-93"];
m9_45 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="Exit CommandLine.Tests.EnumeratorsFixture.CharIteration()", span="66-66"];
m10_0 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", span="40-40"];
m10_1 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", color=green, community=0, file="HeadingInfoFixture.cs", label="var hi = new HeadingInfo(''myprog'')", prediction=641, span="42-42"];
m10_2 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", color=green, community=0, file="HeadingInfoFixture.cs", label="string s = hi", prediction=642, span="43-43"];
m10_5 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", color=green, community=0, file="HeadingInfoFixture.cs", label="hi.WriteMessage(''a message'', sw)", prediction=641, span="48-48"];
m10_3 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", color=green, community=0, file="HeadingInfoFixture.cs", label="Assert.AreEqual(''myprog'', s)", prediction=644, span="45-45"];
m10_4 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", color=green, community=0, file="HeadingInfoFixture.cs", label="var sw = new StringWriter()", prediction=645, span="47-47"];
m10_6 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", color=green, community=0, file="HeadingInfoFixture.cs", label="Assert.AreEqual(''myprog: a message'' + Environment.NewLine, sw.ToString())", prediction=645, span="50-50"];
m10_7 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="Exit CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", span="40-40"];
m10_10 [cluster="System.IO.StringWriter.StringWriter()", file="HeadingInfoFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m10_12 [cluster="System.IO.StringWriter.ToString()", file="HeadingInfoFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m10_21 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="324-324"];
m10_8 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="312-312"];
m10_11 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="369-369"];
m10_13 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", span="54-54"];
m10_14 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", color=green, community=0, file="HeadingInfoFixture.cs", label="var hi = new HeadingInfo(''myecho'', ''2.5'')", prediction=647, span="56-56"];
m10_15 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", color=green, community=0, file="HeadingInfoFixture.cs", label="string s = hi", prediction=648, span="57-57"];
m10_18 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", color=green, community=0, file="HeadingInfoFixture.cs", label="hi.WriteMessage(''hello unit-test'', sw)", prediction=647, span="62-62"];
m10_16 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", color=green, community=0, file="HeadingInfoFixture.cs", label="Assert.AreEqual(''myecho 2.5'', s)", prediction=650, span="59-59"];
m10_17 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", color=green, community=0, file="HeadingInfoFixture.cs", label="var sw = new StringWriter()", prediction=651, span="61-61"];
m10_19 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", color=green, community=0, file="HeadingInfoFixture.cs", label="Assert.AreEqual(''myecho: hello unit-test'' + Environment.NewLine, sw.ToString())", prediction=651, span="64-64"];
m10_20 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="Exit CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", span="54-54"];
m12_125 [cluster="string.Format(System.IFormatProvider, string, object)", file="HelpTextFixture.cs", label="Entry string.Format(System.IFormatProvider, string, object)", span="0-0"];
m12_175 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", span="397-397"];
m12_176 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="399-399"];
m12_177 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''0'', ''-ap'' }, options)", span="401-402"];
m12_178 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="Assert.IsFalse(result)", span="404-404"];
m12_179 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", span="397-397"];
m12_154 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1545-1545"];
m12_194 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", span="433-433"];
m12_195 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="string optionHelp = null", span="436-436"];
m12_196 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="e.Option.ShortName", span="438-438"];
m12_201 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="e.Option.Required", span="449-449"];
m12_203 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="e.Option.HelpText = optionHelp", span="452-452"];
m12_197 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="''v''", span="440-440"];
m12_199 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="''i''", span="444-444"];
m12_198 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Kommentar umfassend Operationen.''", span="441-441"];
m12_200 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Gibt den Eingang an zu bearbeitenden Datei.''", span="445-445"];
m12_202 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Erforderlich. '' + optionHelp", span="450-450"];
m12_204 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", span="433-433"];
m12_152 [cluster="CommandLine.Tests.Mocks.RPEOptions.RPEOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Mocks.RPEOptions.RPEOptions()", span="6-6"];
m12_193 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1737-1737"];
m12_138 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", span="278-278"];
m12_139 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var sw = new StringWriter()", span="280-280"];
m12_140 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var options = new RPEOptions()", span="281-281"];
m12_141 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var parser = new CommandLineParser(new CommandLineParserSettings {\n                MutuallyExclusive = true, CaseSensitive = true, HelpWriter = sw})", span="282-283"];
m12_144 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var outsw = sw.ToString()", span="288-288"];
m12_142 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var result = parser.ParseArguments(new string[] {''--option-b'', ''hello'', ''-cWORLD''}, options)", span="284-284"];
m12_143 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="Assert.IsFalse(result)", span="286-286"];
m12_145 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="Console.WriteLine(outsw)", span="290-290"];
m12_146 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var lines = outsw.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="292-292"];
m12_147 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[0], ''--option-b option violates format.'')", span="294-294"];
m12_148 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[1], ''-c/--option-c option violates format.'')", span="295-295"];
m12_149 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[2], ''-a required option is missing.'')", span="296-296"];
m12_150 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", span="278-278"];
m12_181 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", span="408-408"];
m12_182 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="410-410"];
m12_183 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''zero'', ''-pa'' }, options)", span="412-413"];
m12_184 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="Assert.IsFalse(result)", span="415-415"];
m12_185 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", span="408-408"];
m12_58 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="172-172"];
m12_59 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="_helpText.MaximumDisplayWidth = 40", span="174-174"];
m12_60 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="_helpText.AddOptions(new MockOptionsWithLongDescriptionAndNoSpaces())", span="175-175"];
m12_61 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="string help = _helpText.ToString()", span="176-176"];
m12_62 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="178-178"];
m12_63 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  v, verbose    Before '', lines[2])", span="179-179"];
m12_64 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''                012345678901234567890123'', lines[3])", span="180-180"];
m12_65 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''                After'', lines[4])", span="181-181"];
m12_66 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  input-file    Before '', lines[5])", span="182-182"];
m12_67 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''                012345678901234567890123'', lines[6])", span="183-183"];
m12_68 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''                456789 After'', lines[7])", span="184-184"];
m12_69 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="172-172"];
m12_21 [cluster="CommandLine.Text.HelpText.AddOptions(object)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="956-956"];
m12_121 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="670-670"];
m12_134 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", span="270-270"];
m12_135 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="var local = new HelpText()", span="272-272"];
m12_136 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="Assert.AreEqual('''', local.ToString())", span="274-274"];
m12_137 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", span="270-270"];
m12_20 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="931-931"];
m12_151 [cluster="System.IO.StringWriter.StringWriter()", file="HelpTextFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m12_163 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", span="88-88"];
m12_19 [cluster="string.Concat(string, string)", file="HelpTextFixture.cs", label="Entry string.Concat(string, string)", span="0-0"];
m12_86 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", span="208-208"];
m12_87 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="var local = new HelpText(''Customizing Test.'')", span="210-210"];
m12_88 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.FormatOptionHelpText += new EventHandler<FormatOptionHelpTextEventArgs>(CustomizeOptionsFormat_FormatOptionHelpText)", span="211-211"];
m12_89 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="212-212"];
m12_90 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsWithDescription())", span="213-213"];
m12_91 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="214-214"];
m12_92 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="216-216"];
m12_93 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="218-218"];
m12_94 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="220-220"];
m12_95 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Customizing Test.'', lines[0])", span="221-221"];
m12_96 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Pre-Options.'', lines[1])", span="222-222"];
m12_97 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  v, verbose       Kommentar umfassend Operationen.'', lines[3])", span="223-223"];
m12_98 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  i, input-file    Erforderlich. Gibt den Eingang an zu bearbeitenden Datei.'', lines[4])", span="224-224"];
m12_99 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Post-Options.'', lines[6])", span="225-225"];
m12_100 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", span="208-208"];
m12_170 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="386-386"];
m12_171 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="388-388"];
m12_172 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\n                new string[] { ''-i0'' }, options)", span="390-391"];
m12_173 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="Assert.IsFalse(result)", span="393-393"];
m12_174 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="386-386"];
m12_14 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="700-700"];
m12_16 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="HelpTextFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="205-205"];
m12_57 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescription.MockOptionsWithLongDescription()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescription.MockOptionsWithLongDescription()", span="64-64"];
m12_102 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", span="55-55"];
m12_158 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="364-364"];
m12_159 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="366-366"];
m12_160 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''abc'' }, options)", span="368-369"];
m12_161 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="Assert.IsFalse(result)", span="371-371"];
m12_162 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="364-364"];
m12_42 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="1144-1144"];
m12_157 [cluster="System.IO.StringWriter.ToString()", file="HelpTextFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m12_25 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", span="130-130"];
m12_26 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="_helpText.AddPreOptionsLine(string.Empty)", span="132-132"];
m12_27 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", span="130-130"];
m12_15 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="324-324"];
m12_45 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", span="156-156"];
m12_46 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="_helpText.MaximumDisplayWidth = 40", span="158-158"];
m12_47 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="_helpText.AddOptions(new MockOptionsWithLongDescription())", span="159-159"];
m12_48 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="string help = _helpText.ToString()", span="160-160"];
m12_49 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new[] {Environment.NewLine}, StringSplitOptions.None)", span="162-162"];
m12_50 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[2], ''  v, verbose    This is the description'', ''The first line should have the arguments and the start of the Help Text.'')", span="163-163"];
m12_52 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[3], ''                of the verbosity to '', formattingMessage)", span="165-165"];
m12_53 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[4], ''                test out the wrapping '', formattingMessage)", span="166-166"];
m12_54 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[5], ''                capabilities of the '', formattingMessage)", span="167-167"];
m12_55 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[6], ''                Help Text.'', formattingMessage)", span="168-168"];
m12_51 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="string formattingMessage = ''Beyond the second line should be formatted as though it's in a column.''", span="164-164"];
m12_56 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", span="156-156"];
m12_123 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="192-192"];
m12_41 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="946-946"];
m12_122 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="312-312"];
m12_153 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1694-1694"];
m12_18 [cluster="string.IsNullOrEmpty(string)", file="HelpTextFixture.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m12_156 [cluster="Unk.IsFalse", file="HelpTextFixture.cs", label="Entry Unk.IsFalse", span=""];
m12_126 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="252-252"];
m12_127 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="var local = new HelpText {\n				AddDashesToOption = true,\n		    	Heading = new HeadingInfo(''AddOptionsWithDashes''),\n	        	Copyright = new CopyrightInfo(''Author'', DateTime.Now.Year)\n			}", span="254-258"];
m12_128 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsSimple())", span="259-259"];
m12_129 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="261-261"];
m12_130 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="263-263"];
m12_131 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="265-265"];
m12_132 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  -s, --something    Input something here.'', lines[3])", span="266-266"];
m12_133 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="252-252"];
m12_164 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1566-1566"];
m12_17 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", span="1017-1017"];
m12_101 [cluster="EventHandler<FormatOptionHelpTextEventArgs>.cstr", file="HelpTextFixture.cs", label="Entry EventHandler<FormatOptionHelpTextEventArgs>.cstr", span=""];
m12_165 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="375-375"];
m12_166 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="377-377"];
m12_167 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\n                new string[] { ''-j0'' }, options)", span="379-380"];
m12_168 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="Assert.IsFalse(result)", span="382-382"];
m12_169 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="375-375"];
m12_71 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="188-188"];
m12_72 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="var local = new HelpText(''Heading Info.'')", span="190-190"];
m12_73 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.MaximumDisplayWidth = 40", span="191-191"];
m12_74 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')", span="192-192"];
m12_75 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptions())", span="193-193"];
m12_76 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="194-194"];
m12_77 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="196-196"];
m12_78 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="198-198"];
m12_79 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Before '', lines[1])", span="199-199"];
m12_80 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''0123456789012345678901234567890123456789'', lines[2])", span="200-200"];
m12_81 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''012 After'', lines[3])", span="201-201"];
m12_82 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Before '', lines[lines.Length - 3])", span="202-202"];
m12_83 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''0123456789012345678901234567890123456789'', lines[lines.Length - 2])", span="203-203"];
m12_84 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual('' After'', lines[lines.Length - 1])", span="204-204"];
m12_85 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="188-188"];
m12_186 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", span="420-420"];
m12_187 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="var options = new ComplexOptions()", span="422-422"];
m12_188 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="var writer = new StringWriter()", span="423-423"];
m12_189 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="new CommandLineParser(new CommandLineParserSettings(false,  false, writer)).ParseArguments(new string[0], options, writer)", span="425-425"];
m12_190 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="Assert.AreEqual(2, options.InternalLastPostParsingState.Errors.Count)", span="427-427"];
m12_191 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", span="420-420"];
m12_0 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="97-97"];
m12_1 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="var help = new HelpText(new HeadingInfo(''unittest'', ''1.9''))", span="99-99"];
m12_2 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AdditionalNewLineAfterOption = true", span="100-100"];
m12_3 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.Copyright = new CopyrightInfo(''CommandLine.dll Author'', 2005, 2011)", span="101-101"];
m12_4 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="string errors = help.RenderParsingErrorsText(this, 2)", span="104-104"];
m12_6 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(string.Concat(Environment.NewLine, ''ERROR(S):''))", span="107-107"];
m12_7 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(errors)", span="108-108"];
m12_8 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''This is free software. You may redistribute copies of it under the terms of'')", span="111-111"];
m12_9 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''the MIT License <http://www.opensource.org/licenses/mit-license.php>.'')", span="112-112"];
m12_10 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''Usage: Please run the unit...'')", span="113-113"];
m12_11 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddOptions(this)", span="114-114"];
m12_12 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="return help;", span="116-116"];
m12_5 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="!string.IsNullOrEmpty(errors)", span="105-105"];
m12_13 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="97-97"];
m12_103 [cluster="System.Console.WriteLine(string)", file="HelpTextFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m12_192 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", span="35-35"];
m12_40 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", span="46-46"];
m12_70 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", span="73-73"];
m12_28 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="139-139"];
m12_29 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="var local = new HelpText(''Heading Info.'')", span="141-141"];
m12_30 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''This is a first pre-options line.'')", span="142-142"];
m12_31 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''This is a second pre-options line.'')", span="143-143"];
m12_32 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptions())", span="144-144"];
m12_33 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''This is a first post-options line.'')", span="145-145"];
m12_34 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''This is a second post-options line.'')", span="146-146"];
m12_35 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="148-148"];
m12_36 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="150-150"];
m12_37 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[lines.Length - 2], ''This is a first post-options line.'')", span="151-151"];
m12_38 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[lines.Length - 1], ''This is a second post-options line.'')", span="152-152"];
m12_39 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="139-139"];
m12_22 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="124-124"];
m12_23 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="_helpText = new HelpText(new HeadingInfo(_ThisAssembly.Title, _ThisAssembly.Version))", span="126-126"];
m12_24 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="124-124"];
m12_124 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", span="82-82"];
m12_180 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1605-1605"];
m12_43 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m12_155 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1719-1719"];
m12_104 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="229-229"];
m12_105 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="var year = DateTime.Now.Year", span="231-231"];
m12_106 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="var local = new HelpText()", span="232-232"];
m12_108 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.Copyright = new CopyrightInfo(''Author'', year)", span="234-234"];
m12_116 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Assert.AreEqual(string.Format(CultureInfo.InvariantCulture, ''Copyright (C) {0} Author'', year), lines[1])", span="245-245"];
m12_107 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.Heading = new HeadingInfo(''Parameterless Constructor Test.'')", span="233-233"];
m12_109 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="235-235"];
m12_110 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsSimple())", span="236-236"];
m12_111 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="237-237"];
m12_112 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="239-239"];
m12_113 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="241-241"];
m12_114 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="243-243"];
m12_115 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Parameterless Constructor Test.'', lines[0])", span="244-244"];
m12_117 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Pre-Options.'', lines[2])", span="246-246"];
m12_118 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  s, something    Input something here.'', lines[4])", span="247-247"];
m12_119 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Post-Options.'', lines[6])", span="248-248"];
m12_120 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="229-229"];
m12_205 [file="HelpTextFixture.cs", label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", span=""];
m12_206 [file="HelpTextFixture.cs", label="CommandLine.Text.Tests.HelpTextFixture", span=""];
m15_40 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", span="114-114"];
m15_41 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", color=green, community=0, file="OptionMapFixture.cs", label="var longOi = _optionMap[''nomorebugshere'']", prediction=653, span="116-116"];
m15_42 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", color=green, community=0, file="OptionMapFixture.cs", label="Assert.IsNull(longOi)", prediction=654, span="117-117"];
m15_43 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", span="114-114"];
m15_6 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="OptionMapFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1555-1555"];
m15_16 [cluster="Unk.CreateOptionInfo", file="OptionMapFixture.cs", label="Entry Unk.CreateOptionInfo", span=""];
m15_29 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.ManageOptions()", span="99-99"];
m15_30 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", color=green, community=0, file="OptionMapFixture.cs", label="Assert.AreSame(_omBuilder.Options[0], _optionMap[_omBuilder.Names[0]])", prediction=655, span="101-101"];
m15_31 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", color=green, community=0, file="OptionMapFixture.cs", label="Assert.AreSame(_omBuilder.Options[1], _optionMap[_omBuilder.Names[1]])", prediction=656, span="102-102"];
m15_32 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", color=green, community=0, file="OptionMapFixture.cs", label="Assert.AreSame(_omBuilder.Options[2], _optionMap[_omBuilder.Names[2]])", prediction=657, span="103-103"];
m15_33 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.ManageOptions()", span="99-99"];
m15_39 [cluster="Unk.IsNull", file="OptionMapFixture.cs", label="Entry Unk.IsNull", span=""];
m15_8 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", span="53-53"];
m15_9 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", color=green, community=0, file="OptionMapFixture.cs", label="var oa = new OptionAttribute(shortName, longName)", prediction=658, span="55-55"];
m15_10 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", color=green, community=0, file="OptionMapFixture.cs", label="var oi = oa.CreateOptionInfo()", prediction=658, span="56-56"];
m15_11 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", color=green, community=0, file="OptionMapFixture.cs", label="_optionMap[oa.UniqueName] = oi", prediction=660, span="57-57"];
m15_13 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", color=green, community=0, file="OptionMapFixture.cs", label="_names.Add(oa.UniqueName)", prediction=658, span="59-59"];
m15_12 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", color=green, community=0, file="OptionMapFixture.cs", label="_options.Add(oi)", prediction=658, span="58-58"];
m15_14 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", span="53-53"];
m15_44 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", span="120-120"];
m15_45 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs", label="map == null", prediction=663, span="122-122"];
m15_53 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs", label="map[attribute1.UniqueName] = option1", prediction=664, span="133-133"];
m15_54 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs", label="map[attribute2.UniqueName] = option2", prediction=665, span="134-134"];
m15_55 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs", label="map[attribute3.UniqueName] = option3", prediction=666, span="135-135"];
m15_56 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs", label="optionCache != null", prediction=667, span="137-137"];
m15_57 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs", label="optionCache[attribute1.UniqueName] = option1", prediction=668, span="139-139"];
m15_58 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs", label="optionCache[attribute1.UniqueName] = option2", prediction=669, span="140-140"];
m15_59 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs", label="optionCache[attribute2.UniqueName]= option3", prediction=667, span="141-141"];
m15_60 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs", label="return map;", prediction=667, span="144-144"];
m15_46 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs", label="map = new OptionMap(3, new CommandLineParserSettings(true))", prediction=667, span="123-123"];
m15_47 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs", label="var attribute1 = new OptionAttribute(''p'', ''pretend'')", prediction=673, span="125-125"];
m15_48 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs", label="var attribute2 = new OptionAttribute(null, ''newuse'')", prediction=667, span="126-126"];
m15_50 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs", label="var option1 = attribute1.CreateOptionInfo()", prediction=675, span="129-129"];
m15_49 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs", label="var attribute3 = new OptionAttribute(''D'', null)", prediction=676, span="127-127"];
m15_51 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs", label="var option2 = attribute2.CreateOptionInfo()", prediction=677, span="130-130"];
m15_52 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs", label="var option3 = attribute3.CreateOptionInfo()", prediction=667, span="131-131"];
m15_61 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", span="120-120"];
m15_19 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.CreateInstance()", span="82-82"];
m15_20 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", color=green, community=0, file="OptionMapFixture.cs", label="_omBuilder = new OptionMapBuilder(3)", prediction=679, span="84-84"];
m15_21 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", color=green, community=0, file="OptionMapFixture.cs", label="_omBuilder.AppendOption(''p'', ''pretend'')", prediction=680, span="85-85"];
m15_22 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", color=green, community=0, file="OptionMapFixture.cs", label="_omBuilder.AppendOption(null, ''newuse'')", prediction=681, span="86-86"];
m15_23 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", color=green, community=0, file="OptionMapFixture.cs", label="_omBuilder.AppendOption(''D'', null)", prediction=682, span="87-87"];
m15_24 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", color=green, community=0, file="OptionMapFixture.cs", label="_optionMap = _omBuilder.OptionMap", prediction=683, span="89-89"];
m15_25 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.CreateInstance()", span="82-82"];
m15_17 [cluster="Unk.Add", file="OptionMapFixture.cs", label="Entry Unk.Add", span=""];
m15_7 [cluster="System.Collections.Generic.List<T>.List(int)", file="OptionMapFixture.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m15_18 [cluster="System.Collections.Generic.List<T>.Add(T)", file="OptionMapFixture.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m15_26 [cluster="CommandLine.Tests.OptionMapFixture.ShutdownInstance()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.ShutdownInstance()", span="93-93"];
m15_27 [cluster="CommandLine.Tests.OptionMapFixture.ShutdownInstance()", color=green, community=0, file="OptionMapFixture.cs", label="_optionMap = null", prediction=684, span="95-95"];
m15_28 [cluster="CommandLine.Tests.OptionMapFixture.ShutdownInstance()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.ShutdownInstance()", span="93-93"];
m15_0 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", span="46-46"];
m15_1 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", color=green, community=0, file="OptionMapFixture.cs", label="_optionMap = new OptionMap(capacity, new CommandLineParserSettings(true))", prediction=685, span="48-48"];
m15_2 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", color=green, community=0, file="OptionMapFixture.cs", label="_options = new List<OptionInfo>(capacity)", prediction=686, span="49-49"];
m15_3 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", color=green, community=0, file="OptionMapFixture.cs", label="_names = new List<string>(capacity)", prediction=687, span="50-50"];
m15_4 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", span="46-46"];
m15_34 [cluster="Unk.AreSame", file="OptionMapFixture.cs", label="Entry Unk.AreSame", span=""];
m15_15 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionMapFixture.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="204-204"];
m15_5 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMapFixture.cs", label="Entry CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1082-1082"];
m15_35 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", span="107-107"];
m15_36 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", color=green, community=0, file="OptionMapFixture.cs", label="var shortOi = _optionMap[''y'']", prediction=688, span="109-109"];
m15_37 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", color=green, community=0, file="OptionMapFixture.cs", label="Assert.IsNull(shortOi)", prediction=689, span="110-110"];
m15_38 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", span="107-107"];
m15_62 [file="OptionMapFixture.cs", label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", span=""];
m16_0 [cluster="CommandLine.Tests.Mocks.OptionsBase.ToString()", file="OptionsBase.cs", label="Entry CommandLine.Tests.Mocks.OptionsBase.ToString()", span="33-33"];
m16_1 [cluster="CommandLine.Tests.Mocks.OptionsBase.ToString()", color=green, community=0, file="OptionsBase.cs", label="return DebugStringUtil.ConvertOptionsToString(this);", prediction=690, span="35-35"];
m16_2 [cluster="CommandLine.Tests.Mocks.OptionsBase.ToString()", file="OptionsBase.cs", label="Exit CommandLine.Tests.Mocks.OptionsBase.ToString()", span="33-33"];
m16_3 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="OptionsBase.cs", label="Entry CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", span="39-39"];
m16_4 [file="OptionsBase.cs", label="CommandLine.Tests.Mocks.OptionsBase", span=""];
m17_0 [cluster="CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", file="OptionsWithDefaultSet.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", span="35-35"];
m17_1 [cluster="CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", color=green, community=0, file="OptionsWithDefaultSet.cs", label="FileId = int.MinValue", prediction=691, span="37-37"];
m17_2 [cluster="CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", file="OptionsWithDefaultSet.cs", label="Exit CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", span="35-35"];
m17_3 [file="OptionsWithDefaultSet.cs", label="CommandLine.Tests.Mocks.OptionsWithDefaultSet", span=""];
m18_0 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="35-35"];
m18_1 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", color=green, community=0, file="OptionsWithMultipleSet.cs", label="Red = 0", prediction=692, span="37-37"];
m18_2 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", color=green, community=0, file="OptionsWithMultipleSet.cs", label="Green = 0", prediction=693, span="38-38"];
m18_3 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", color=green, community=0, file="OptionsWithMultipleSet.cs", label="Blue = 0", prediction=694, span="39-39"];
m18_4 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", color=green, community=0, file="OptionsWithMultipleSet.cs", label="Hue = 0", prediction=695, span="40-40"];
m18_5 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", color=green, community=0, file="OptionsWithMultipleSet.cs", label="Saturation = 0", prediction=696, span="41-41"];
m18_6 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", color=green, community=0, file="OptionsWithMultipleSet.cs", label="Value = 0", prediction=697, span="42-42"];
m18_7 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs", label="Exit CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="35-35"];
m18_8 [file="OptionsWithMultipleSet.cs", label="CommandLine.Tests.Mocks.OptionsWithMultipleSet", span=""];
m22_47 [cluster="System.Nullable<T>.ToString()", file="Program.cs", label="Entry System.Nullable<T>.ToString()", span="0-0"];
m22_49 [cluster="System.Console.WriteLine()", file="Program.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m22_48 [cluster="System.Console.WriteLine(string, object)", file="Program.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m22_20 [cluster="System.Environment.Exit(int)", file="Program.cs", label="Entry System.Environment.Exit(int)", span="0-0"];
m22_59 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="Program.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string)", span="387-387"];
m22_4 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="95-95"];
m22_5 [cluster="lambda expression", file="Program.cs", label="HelpText.DefaultParsingErrorsHandler(this, current)", span="95-95"];
m22_6 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="95-95"];
m22_52 [cluster="System.Enum.ToString()", file="Program.cs", label="Entry System.Enum.ToString()", span="0-0"];
m22_7 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(CommandLine.CommandLineOptionsBase, CommandLine.Text.HelpText)", file="Program.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(CommandLine.CommandLineOptionsBase, CommandLine.Text.HelpText)", span="852-852"];
m22_55 [cluster="System.Text.StringBuilder.Remove(int, int)", file="Program.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m22_17 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="Program.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1694-1694"];
m22_57 [cluster="string.IsNullOrEmpty(string)", file="Program.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m22_51 [cluster="string.ToLowerInvariant()", file="Program.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m22_58 [cluster="string.Format(string, object)", file="Program.cs", label="Entry string.Format(string, object)", span="0-0"];
m22_18 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="Program.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1566-1566"];
m22_56 [cluster="System.Text.StringBuilder.ToString()", file="Program.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m22_54 [cluster="System.Text.StringBuilder.Append(string)", file="Program.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m22_0 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="Entry SampleApp.Program.Options.GetUsage()", span="93-93"];
m22_1 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="return HelpText.AutoBuild(this, (HelpText current) => HelpText.DefaultParsingErrorsHandler(this, current));", span="95-95"];
m22_2 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="Exit SampleApp.Program.Options.GetUsage()", span="93-93"];
m22_46 [cluster="System.Console.WriteLine(string)", file="Program.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m22_50 [cluster="bool.ToString()", file="Program.cs", label="Entry bool.ToString()", span="0-0"];
m22_16 [cluster="SampleApp.Program.Options.Options()", file="Program.cs", label="Entry SampleApp.Program.Options.Options()", span="55-55"];
m22_21 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Entry SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", span="171-171"];
m22_22 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.VerboseLevel == null", span="173-173"];
m22_24 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''verbose [on]: {0}'', (options.VerboseLevel < 0 || options.VerboseLevel > 2) ? ''#invalid value#'' : options.VerboseLevel.ToString())", span="176-176"];
m22_26 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''input file: {0} ...'', options.InputFile)", span="178-178"];
m22_27 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.DefinitionFiles", span="179-179"];
m22_29 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  start offset: {0}'', options.StartOffset)", span="183-183"];
m22_30 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  tabular data computation: {0}'', options.Calculate.ToString().ToLowerInvariant())", span="184-184"];
m22_31 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  on errors: {0}'', options.IgnoreErrors ? ''continue'' : ''stop processing'')", span="185-185"];
m22_32 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  optimize for: {0}'', options.Optimization.ToString().ToLowerInvariant())", span="186-186"];
m22_33 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.AllowedOperators != null", span="187-187"];
m22_36 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.AllowedOperators", span="191-191"];
m22_41 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="!string.IsNullOrEmpty(options.OutputFile)", span="199-199"];
m22_42 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="_headingInfo.WriteMessage(string.Format(''writing elaborated data: {0} ...'', options.OutputFile))", span="200-200"];
m22_23 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''verbose [off]'')", span="174-174"];
m22_25 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine()", span="177-177"];
m22_28 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  using definition file: {0}'', defFile)", span="181-181"];
m22_34 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="var builder = new StringBuilder()", span="189-189"];
m22_40 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine()", span="198-198"];
m22_35 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="builder.Append(''  allowed operators: '')", span="190-190"];
m22_37 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="builder.Append(op)", span="193-193"];
m22_38 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="builder.Append('', '')", span="194-194"];
m22_39 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(builder.Remove(builder.Length - 2, 2).ToString())", span="196-196"];
m22_43 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="_headingInfo.WriteMessage(''elaborated data:'')", span="203-203"];
m22_44 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''[...]'')", span="204-204"];
m22_45 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Exit SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", span="171-171"];
m22_53 [cluster="System.Text.StringBuilder.StringBuilder()", file="Program.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m22_3 [cluster="CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.HandleParsingErrorsDelegate)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.HandleParsingErrorsDelegate)", span="810-810"];
m22_19 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="Program.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1719-1719"];
m22_8 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Entry SampleApp.Program.Main(string[])", span="156-156"];
m22_9 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="var options = new Options()", span="161-161"];
m22_11 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="!parser.ParseArguments(args, options)", span="163-163"];
m22_10 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="var parser = new CommandLineParser(new CommandLineParserSettings(Console.Error))", span="162-162"];
m22_13 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="DoCoreTask(options)", span="166-166"];
m22_12 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Environment.Exit(1)", span="164-164"];
m22_14 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Environment.Exit(0)", span="168-168"];
m22_15 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Exit SampleApp.Program.Main(string[])", span="156-156"];
m22_60 [file="Program.cs", label="SampleApp.Program.Options", span=""];
m25_0 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="SimpleOptionsWithBadOptionArray.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", span="37-37"];
m25_1 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", color=green, community=0, file="SimpleOptionsWithBadOptionArray.cs", label="BadIntegerValue = 0", prediction=698, span="39-39"];
m25_2 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="SimpleOptionsWithBadOptionArray.cs", label="Exit CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", span="37-37"];
m25_3 [file="SimpleOptionsWithBadOptionArray.cs", label="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray", span=""];
m26_0 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="SimpleOptionsWithEnum.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
m26_1 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", color=green, community=0, file="SimpleOptionsWithEnum.cs", label="FileAccess = FileAccess.Read", prediction=699, span="40-40"];
m26_2 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="SimpleOptionsWithEnum.cs", label="Exit CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
m26_3 [file="SimpleOptionsWithEnum.cs", label="CommandLine.Tests.Mocks.SimpleOptionsWithEnum", span=""];
m27_0 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.GetUsage()", file="SimpleOptionsWithHelpOption.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.GetUsage()", span="42-42"];
m27_1 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.GetUsage()", color=green, community=0, file="SimpleOptionsWithHelpOption.cs", label="return ''MockOptions::GetUsage()'';", prediction=700, span="44-44"];
m27_2 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.GetUsage()", file="SimpleOptionsWithHelpOption.cs", label="Exit CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.GetUsage()", span="42-42"];
m31_15 [cluster="CommandLine.Tests.ValueListAttributeFixture.MockSpecializedList.MockSpecializedList()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.MockSpecializedList.MockSpecializedList()", span="41-41"];
m31_3 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttributeFixture.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="304-304"];
m31_12 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", span="73-73"];
m31_13 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", color=green, community=0, file="ValueListAttributeFixture.cs", label="new ValueListAttribute(new MockSpecializedList().GetType())", prediction=701, span="75-75"];
m31_14 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", span="73-73"];
m31_24 [cluster="Unk.IsNotNull", file="ValueListAttributeFixture.cs", label="Entry Unk.IsNotNull", span=""];
m31_22 [cluster="CommandLine.Tests.ValueListAttributeFixture.MockOptions.MockOptions()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.MockOptions.MockOptions()", span="45-45"];
m31_35 [cluster="CommandLine.Tests.BaseFixture.AssertArrayItemEqual(string[], System.Collections.Generic.IList<string>)", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.BaseFixture.AssertArrayItemEqual(string[], System.Collections.Generic.IList<string>)", span="46-46"];
m31_26 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", span="89-89"];
m31_27 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", color=green, community=0, file="ValueListAttributeFixture.cs", label="var options = new MockOptions()", prediction=702, span="91-91"];
m31_28 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", color=green, community=0, file="ValueListAttributeFixture.cs", label="var values = ValueListAttribute.GetReference(options)", prediction=703, span="93-93"];
m31_32 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", color=green, community=0, file="ValueListAttributeFixture.cs", label="base.AssertArrayItemEqual(new string[] { ''value0'', ''value1'', ''value2'' }, options.Values)", prediction=702, span="101-101"];
m31_29 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", color=green, community=0, file="ValueListAttributeFixture.cs", label="values.Add(''value0'')", prediction=705, span="94-94"];
m31_30 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", color=green, community=0, file="ValueListAttributeFixture.cs", label="values.Add(''value1'')", prediction=703, span="95-95"];
m31_31 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", color=green, community=0, file="ValueListAttributeFixture.cs", label="values.Add(''value2'')", prediction=703, span="96-96"];
m31_33 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", span="89-89"];
m31_16 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", span="79-79"];
m31_17 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", color=green, community=0, file="ValueListAttributeFixture.cs", label="var options = new MockOptions()", prediction=708, span="81-81"];
m31_18 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", color=green, community=0, file="ValueListAttributeFixture.cs", label="IList<string> values = ValueListAttribute.GetReference(options)", prediction=709, span="83-83"];
m31_19 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", color=green, community=0, file="ValueListAttributeFixture.cs", label="Assert.IsNotNull(values)", prediction=710, span="84-84"];
m31_20 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", color=green, community=0, file="ValueListAttributeFixture.cs", label="Assert.AreEqual(typeof(List<string>), values.GetType())", prediction=709, span="85-85"];
m31_21 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", span="79-79"];
m31_4 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", span="61-61"];
m31_5 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", color=green, community=0, file="ValueListAttributeFixture.cs", label="new ValueListAttribute(new List<object>().GetType())", prediction=712, span="63-63"];
m31_6 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", span="61-61"];
m31_34 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ValueListAttributeFixture.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m31_23 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttributeFixture.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="328-328"];
m31_8 [cluster="object.GetType()", file="ValueListAttributeFixture.cs", label="Entry object.GetType()", span="0-0"];
m31_0 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", span="54-54"];
m31_1 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", color=green, community=0, file="ValueListAttributeFixture.cs", label="new ValueListAttribute(null)", prediction=713, span="56-56"];
m31_2 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", span="54-54"];
m31_9 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", span="67-67"];
m31_10 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", color=green, community=0, file="ValueListAttributeFixture.cs", label="new ValueListAttribute(new List<string>().GetType())", prediction=714, span="69-69"];
m31_11 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", span="67-67"];
m31_7 [cluster="System.Collections.Generic.List<T>.List()", file="ValueListAttributeFixture.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m31_36 [file="ValueListAttributeFixture.cs", label="CommandLine.Tests.ValueListAttributeFixture", span=""];
n12 -> d4  [color=green, key=1, label="CommandLine.Tests.ArgumentParserFixture", style=dashed];
d1 -> d5  [color=green, key=1, label=ae, style=dashed];
m1_8 -> m1_11  [color=green, key=1, label="string[]", style=dashed];
m1_8 -> m1_12  [color=green, key=1, label="string[]", style=dashed];
m1_10 -> m1_12  [color=green, key=1, label=i, style=dashed];
m1_10 -> m1_13  [color=green, key=1, label=i, style=dashed];
m1_13 -> m1_13  [color=green, key=1, label=i, style=dashed];
m1_0 -> m1_3  [color=green, key=1, label="T[]", style=dashed];
m1_0 -> m1_4  [color=green, key=1, label="T[]", style=dashed];
m1_2 -> m1_4  [color=green, key=1, label=i, style=dashed];
m1_2 -> m1_5  [color=green, key=1, label=i, style=dashed];
m1_5 -> m1_5  [color=green, key=1, label=i, style=dashed];
m3_331 -> m3_350  [color=green, key=1, label=string, style=dashed];
m3_331 -> m3_352  [color=green, key=1, label=string, style=dashed];
m3_471 -> m3_474  [color=green, key=1, label=other, style=dashed];
m3_579 -> m3_581  [color=green, key=1, label=object, style=dashed];
m3_579 -> m3_583  [color=green, key=1, label="System.IO.TextWriter", style=dashed];
m3_579 -> m3_584  [color=green, key=1, label="string[]", style=dashed];
m3_579 -> m3_586  [color=green, key=1, label=object, style=dashed];
m3_579 -> m3_587  [color=green, key=1, label="System.IO.TextWriter", style=dashed];
m3_579 -> m3_590  [color=green, key=1, label="string[]", style=dashed];
m3_582 -> m3_584  [color=green, key=1, label=pair, style=dashed];
m3_582 -> m3_586  [color=green, key=1, label=pair, style=dashed];
m3_216 -> m3_374  [color=green, key=1, label=bool, style=dashed];
m3_441 -> m3_444  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m3_442 -> m3_444  [color=green, key=1, label=setName, style=dashed];
m3_442 -> m3_445  [color=green, key=1, label=setName, style=dashed];
m3_465 -> m3_467  [color=green, key=1, label=leftHash, style=dashed];
m3_142 -> m3_145  [color=green, key=1, label=bool, style=dashed];
m3_23 -> m3_26  [color=green, key=1, label=string, style=dashed];
m3_675 -> m3_677  [color=green, key=1, label=method, style=dashed];
m3_677 -> m3_679  [color=green, key=1, label=attribute, style=dashed];
m3_67 -> m3_70  [color=green, key=1, label=list, style=dashed];
m3_618 -> m3_633  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.ParsingError>", style=dashed];
m3_631 -> m3_633  [color=green, key=1, label=commandLineOptionsBase, style=dashed];
m3_311 -> m3_314  [color=green, key=1, label=list, style=dashed];
m3_313 -> m3_318  [color=green, key=1, label=map, style=dashed];
m3_643 -> m3_645  [color=green, key=1, label=string, style=dashed];
m3_683 -> m3_691  [color=green, key=1, label=list, style=dashed];
m3_683 -> m3_692  [color=green, key=1, label=list, style=dashed];
m3_689 -> m3_691  [color=green, key=1, label=attribute, style=dashed];
m3_77 -> m3_80  [color=green, key=1, label=list, style=dashed];
m3_82 -> m3_84  [color=green, key=1, label=pairZero, style=dashed];
m3_83 -> m3_85  [color=green, key=1, label="out System.Type", style=dashed];
m3_222 -> m3_640  [color=green, key=1, label=string, style=dashed];
m3_112 -> m3_115  [color=green, key=1, label=string, style=dashed];
m3_112 -> m3_116  [color=green, key=1, label=string, style=dashed];
m3_54 -> m3_59  [color=green, key=1, label=object, style=dashed];
m3_54 -> m3_60  [color=green, key=1, label=object, style=dashed];
m3_56 -> m3_59  [color=green, key=1, label=concreteType, style=dashed];
m3_56 -> m3_60  [color=green, key=1, label=property, style=dashed];
m3_422 -> m3_427  [color=green, key=1, label=requiredRulesAllMet, style=dashed];
m3_423 -> m3_425  [color=green, key=1, label=option, style=dashed];
m3_426 -> m3_427  [color=green, key=1, label=requiredRulesAllMet, style=dashed];
m3_594 -> m3_608  [color=green, key=1, label=object, style=dashed];
m3_606 -> m3_610  [color=green, key=1, label=result, style=dashed];
m3_599 -> m3_612  [color=green, key=1, label=target, style=dashed];
m3_599 -> m3_613  [color=green, key=1, label=target, style=dashed];
m3_600 -> m3_611  [color=green, key=1, label=arguments, style=dashed];
m3_602 -> m3_613  [color=green, key=1, label=argument, style=dashed];
m3_604 -> m3_608  [color=green, key=1, label=parser, style=dashed];
m3_432 -> m3_434  [color=green, key=1, label=option, style=dashed];
m3_435 -> m3_437  [color=green, key=1, label=info, style=dashed];
m3_330 -> m3_366  [color=green, key=1, label=string, style=dashed];
m3_364 -> m3_366  [color=green, key=1, label=nc, style=dashed];
m3_44 -> m3_47  [color=green, key=1, label="System.Type", style=dashed];
m3_169 -> m3_178  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m3_170 -> m3_178  [color=green, key=1, label=parts, style=dashed];
m3_170 -> m3_180  [color=green, key=1, label=parts, style=dashed];
m3_170 -> m3_188  [color=green, key=1, label=parts, style=dashed];
m3_170 -> m3_204  [color=green, key=1, label=parts, style=dashed];
m3_171 -> m3_173  [color=green, key=1, label=option, style=dashed];
m3_171 -> m3_176  [color=green, key=1, label=option, style=dashed];
m3_171 -> m3_177  [color=green, key=1, label=option, style=dashed];
m3_171 -> m3_181  [color=green, key=1, label=option, style=dashed];
m3_171 -> m3_184  [color=green, key=1, label=option, style=dashed];
m3_171 -> m3_186  [color=green, key=1, label=option, style=dashed];
m3_171 -> m3_191  [color=green, key=1, label=option, style=dashed];
m3_171 -> m3_193  [color=green, key=1, label=option, style=dashed];
m3_171 -> m3_196  [color=green, key=1, label=option, style=dashed];
m3_171 -> m3_198  [color=green, key=1, label=option, style=dashed];
m3_171 -> m3_202  [color=green, key=1, label=option, style=dashed];
m3_171 -> m3_208  [color=green, key=1, label=option, style=dashed];
m3_182 -> m3_185  [color=green, key=1, label=valueSetting, style=dashed];
m3_189 -> m3_192  [color=green, key=1, label=valueSetting, style=dashed];
m3_194 -> m3_197  [color=green, key=1, label=valueSetting, style=dashed];
m3_200 -> m3_203  [color=green, key=1, label=valueSetting, style=dashed];
m3_206 -> m3_209  [color=green, key=1, label=valueSetting, style=dashed];
m3_328 -> m3_378  [color=green, key=1, label=object, style=dashed];
m3_381 -> m3_383  [color=green, key=1, label=i, style=dashed];
m3_381 -> m3_384  [color=green, key=1, label=i, style=dashed];
m3_379 -> m3_383  [color=green, key=1, label=fieldRef, style=dashed];
m3_380 -> m3_382  [color=green, key=1, label=values, style=dashed];
m3_380 -> m3_383  [color=green, key=1, label=values, style=dashed];
m3_384 -> m3_384  [color=green, key=1, label=i, style=dashed];
m3_665 -> m3_667  [color=green, key=1, label=method, style=dashed];
m3_665 -> m3_669  [color=green, key=1, label=method, style=dashed];
m3_667 -> m3_669  [color=green, key=1, label=attribute, style=dashed];
m3_75 -> m3_649  [color=green, key=1, label=object, style=dashed];
m3_648 -> m3_657  [color=green, key=1, label=list, style=dashed];
m3_648 -> m3_658  [color=green, key=1, label=list, style=dashed];
m3_651 -> m3_657  [color=green, key=1, label=property, style=dashed];
m3_655 -> m3_657  [color=green, key=1, label=attribute, style=dashed];
m3_520 -> m3_524  [color=green, key=1, label=string, style=dashed];
m3_215 -> m3_337  [color=green, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m3_215 -> m3_338  [color=green, key=1, label=object, style=dashed];
m3_332 -> m3_337  [color=green, key=1, label=elementType, style=dashed];
m3_333 -> m3_335  [color=green, key=1, label=array, style=dashed];
m3_333 -> m3_337  [color=green, key=1, label=array, style=dashed];
m3_333 -> m3_338  [color=green, key=1, label=array, style=dashed];
m3_334 -> m3_337  [color=green, key=1, label=i, style=dashed];
m3_334 -> m3_341  [color=green, key=1, label=i, style=dashed];
m3_341 -> m3_341  [color=green, key=1, label=i, style=dashed];
m3_593 -> m3_621  [color=green, key=1, label="string[]", style=dashed];
m3_593 -> m3_622  [color=green, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m3_593 -> m3_623  [color=green, key=1, label="string[]", style=dashed];
m3_593 -> m3_625  [color=green, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m3_593 -> m3_626  [color=green, key=1, label="string[]", style=dashed];
m3_619 -> m3_623  [color=green, key=1, label=caseSensitive, style=dashed];
m3_619 -> m3_626  [color=green, key=1, label=caseSensitive, style=dashed];
m3_620 -> m3_623  [color=green, key=1, label=i, style=dashed];
m3_620 -> m3_626  [color=green, key=1, label=i, style=dashed];
m3_620 -> m3_628  [color=green, key=1, label=i, style=dashed];
m3_628 -> m3_628  [color=green, key=1, label=i, style=dashed];
m3_491 -> m3_637  [color=green, key=1, label=string, style=dashed];
m3_97 -> m3_100  [color=green, key=1, label=string, style=dashed];
m3_97 -> m3_102  [color=green, key=1, label=string, style=dashed];
m3_97 -> m3_103  [color=green, key=1, label=bool, style=dashed];
m3_97 -> m3_104  [color=green, key=1, label=string, style=dashed];
m3_97 -> m3_105  [color=green, key=1, label=bool, style=dashed];
m3_119 -> m3_121  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m3_119 -> m3_122  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m3_119 -> m3_123  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m3_119 -> m3_124  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m3_120 -> m3_123  [color=green, key=1, label=list, style=dashed];
m3_120 -> m3_126  [color=green, key=1, label=list, style=dashed];
m3_696 -> m3_699  [color=green, key=1, label=a, style=dashed];
m3_250 -> m3_259  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m3_250 -> m3_275  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m3_250 -> m3_288  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
m3_250 -> m3_290  [color=green, key=1, label=object, style=dashed];
m3_251 -> m3_259  [color=green, key=1, label=group, style=dashed];
m3_251 -> m3_262  [color=green, key=1, label=group, style=dashed];
m3_251 -> m3_270  [color=green, key=1, label=group, style=dashed];
m3_251 -> m3_288  [color=green, key=1, label=group, style=dashed];
m3_253 -> m3_257  [color=green, key=1, label=option, style=dashed];
m3_253 -> m3_258  [color=green, key=1, label=option, style=dashed];
m3_253 -> m3_263  [color=green, key=1, label=option, style=dashed];
m3_253 -> m3_266  [color=green, key=1, label=option, style=dashed];
m3_253 -> m3_268  [color=green, key=1, label=option, style=dashed];
m3_253 -> m3_273  [color=green, key=1, label=option, style=dashed];
m3_253 -> m3_277  [color=green, key=1, label=option, style=dashed];
m3_253 -> m3_280  [color=green, key=1, label=option, style=dashed];
m3_253 -> m3_282  [color=green, key=1, label=option, style=dashed];
m3_253 -> m3_286  [color=green, key=1, label=option, style=dashed];
m3_253 -> m3_290  [color=green, key=1, label=option, style=dashed];
m3_264 -> m3_267  [color=green, key=1, label=valueSetting, style=dashed];
m3_271 -> m3_274  [color=green, key=1, label=valueSetting, style=dashed];
m3_278 -> m3_281  [color=green, key=1, label=valueSetting, style=dashed];
m3_284 -> m3_287  [color=green, key=1, label=valueSetting, style=dashed];
m3_429 -> m3_453  [color=green, key=1, label="bool?", style=dashed];
m3_429 -> m3_455  [color=green, key=1, label="bool?", style=dashed];
m3_449 -> m3_457  [color=green, key=1, label=commandLineOptionsBase, style=dashed];
m3_452 -> m3_457  [color=green, key=1, label=error, style=dashed];
m3_213 -> m3_323  [color=green, key=1, label=string, style=dashed];
m3_213 -> m3_325  [color=green, key=1, label=string, style=dashed];
m3_213 -> m3_326  [color=green, key=1, label=string, style=dashed];
m3_108 -> m3_712  [color=green, key=1, label=string, style=dashed];
m3_388 -> m3_391  [color=green, key=1, label=object, style=dashed];
m3_294 -> m3_305  [color=green, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m3_716 -> m3_28  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
m3_719 -> m3_93  [color=green, key=1, label="CommandLine.ArgumentParser", style=dashed];
m3_721 -> m3_184  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
m3_721 -> m3_191  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
m3_721 -> m3_196  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
m3_721 -> m3_202  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
m3_721 -> m3_208  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
m3_721 -> m3_174  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
m3_722 -> m3_227  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
m3_722 -> m3_228  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
m3_722 -> m3_236  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
m3_722 -> m3_238  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
m3_722 -> m3_240  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
m3_723 -> m3_266  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
m3_723 -> m3_273  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
m3_723 -> m3_280  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
m3_723 -> m3_286  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
m3_723 -> m3_255  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
m3_724 -> m3_322  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m3_724 -> m3_323  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m3_724 -> m3_325  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m3_724 -> m3_326  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m3_724 -> m3_324  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m3_724 -> m3_338  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m3_724 -> m3_336  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m3_724 -> m3_348  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m3_724 -> m3_350  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m3_724 -> m3_352  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m3_724 -> m3_349  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m3_724 -> m3_351  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m3_724 -> m3_366  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m3_724 -> m3_365  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m3_724 -> m3_373  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m3_724 -> m3_374  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m3_724 -> m3_377  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m3_724 -> m3_378  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m3_724 -> m3_389  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m3_724 -> m3_391  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m3_724 -> m3_390  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m3_725 -> m3_400  [color=green, key=1, label="CommandLine.OptionMap.MutuallyExclusiveInfo", style=dashed];
m3_726 -> m3_404  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
m3_726 -> m3_409  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
m3_726 -> m3_414  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
m3_726 -> m3_419  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
m3_726 -> m3_420  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
m3_726 -> m3_423  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
m3_726 -> m3_425  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
m3_726 -> m3_430  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
m3_726 -> m3_432  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
m3_726 -> m3_435  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
m3_726 -> m3_434  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
m3_726 -> m3_437  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
m3_726 -> m3_444  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
m3_726 -> m3_443  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
m3_726 -> m3_445  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
m3_727 -> m3_474  [color=green, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
m3_730 -> m3_496  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
m3_730 -> m3_497  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
m3_730 -> m3_498  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
m3_730 -> m3_505  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
m3_730 -> m3_507  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
m3_730 -> m3_508  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
m3_730 -> m3_509  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
m3_731 -> m3_517  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
m3_731 -> m3_521  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
m3_731 -> m3_524  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
m3_731 -> m3_523  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
m3_734 -> m3_577  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m3_734 -> m3_584  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m3_734 -> m3_590  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_11 -> m4_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_11 -> m4_15  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_243 -> m4_246  [color=green, key=1, label=options, style=dashed];
m4_255 -> m4_258  [color=green, key=1, label=options, style=dashed];
m4_249 -> m4_252  [color=green, key=1, label=options, style=dashed];
m4_73 -> m4_76  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_73 -> m4_77  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_73 -> m4_78  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_225 -> m4_228  [color=green, key=1, label=options, style=dashed];
m4_30 -> m4_33  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_30 -> m4_34  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_30 -> m4_35  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_30 -> m4_36  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_30 -> m4_37  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_68 -> m4_70  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_53 -> m4_56  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_53 -> m4_57  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_53 -> m4_58  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_53 -> m4_59  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_53 -> m4_60  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_53 -> m4_61  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_53 -> m4_62  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_53 -> m4_63  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_153 -> m4_156  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_153 -> m4_157  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_219 -> m4_222  [color=green, key=1, label=options, style=dashed];
m4_137 -> m4_140  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_137 -> m4_141  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_84 -> m4_87  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_21 -> m4_24  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_21 -> m4_25  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_21 -> m4_26  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_21 -> m4_27  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_203 -> m4_206  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_203 -> m4_207  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_203 -> m4_208  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_203 -> m4_209  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_197 -> m4_200  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_212 -> m4_3  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_8  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_13  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_23  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_32  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_45  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_55  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_69  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_75  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_86  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_97  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_104  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_113  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_121  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_127  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_133  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_139  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_149  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_155  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_164  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_169  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_174  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_179  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_184  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_189  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_194  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_199  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_205  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_215  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_221  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_227  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_233  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_239  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_245  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_251  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_257  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_263  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_269  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_275  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_281  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_212 -> m4_287  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_213 -> m4_216  [color=green, key=1, label=options, style=dashed];
m4_231 -> m4_234  [color=green, key=1, label=options, style=dashed];
m4_43 -> m4_46  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_43 -> m4_47  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_43 -> m4_48  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_43 -> m4_49  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_43 -> m4_50  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_237 -> m4_240  [color=green, key=1, label=options, style=dashed];
m4_111 -> m4_114  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_111 -> m4_115  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_111 -> m4_116  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_95 -> m4_98  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_102 -> m4_105  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_102 -> m4_106  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_102 -> m4_107  [color=darkseagreen4, key=1, label=options, style=dashed];
m5_1 -> m5_6  [color=green, key=1, label=writer, style=dashed];
m5_27 -> m5_32  [color=green, key=1, label=writer, style=dashed];
m5_16 -> m5_23  [color=green, key=1, label=writer, style=dashed];
m6_8 -> m6_5  [color=green, key=1, label="CommandLine.Tests.Mocks.ComplexOptions", style=dashed];
m7_2 -> m7_4  [color=green, key=1, label="int[]", style=dashed];
m7_3 -> m7_7  [color=green, key=1, label=yearsPart, style=dashed];
m7_3 -> m7_8  [color=green, key=1, label=yearsPart, style=dashed];
m7_3 -> m7_9  [color=green, key=1, label=yearsPart, style=dashed];
m7_3 -> m7_10  [color=green, key=1, label=yearsPart, style=dashed];
m7_3 -> m7_11  [color=green, key=1, label=yearsPart, style=dashed];
m7_5 -> m7_7  [color=green, key=1, label=y, style=dashed];
m7_5 -> m7_8  [color=green, key=1, label=y, style=dashed];
m8_16 -> m8_22  [color=green, key=1, label="System.Text.StringBuilder", style=dashed];
m8_16 -> m8_24  [color=green, key=1, label="System.Text.StringBuilder", style=dashed];
m8_16 -> m8_26  [color=green, key=1, label="System.Text.StringBuilder", style=dashed];
m8_16 -> m8_27  [color=green, key=1, label="System.Text.StringBuilder", style=dashed];
m8_16 -> m8_28  [color=green, key=1, label="System.Text.StringBuilder", style=dashed];
m8_16 -> m8_29  [color=green, key=1, label="System.Text.StringBuilder", style=dashed];
m8_19 -> m8_21  [color=green, key=1, label=baseOA, style=dashed];
m8_19 -> m8_22  [color=green, key=1, label=baseOA, style=dashed];
m8_19 -> m8_23  [color=green, key=1, label=baseOA, style=dashed];
m8_19 -> m8_25  [color=green, key=1, label=baseOA, style=dashed];
m8_19 -> m8_26  [color=green, key=1, label=baseOA, style=dashed];
m8_0 -> m8_8  [color=green, key=1, label=object, style=dashed];
m8_0 -> m8_9  [color=green, key=1, label=object, style=dashed];
m8_1 -> m8_8  [color=green, key=1, label=builder, style=dashed];
m8_1 -> m8_9  [color=green, key=1, label=builder, style=dashed];
m8_1 -> m8_10  [color=green, key=1, label=builder, style=dashed];
m8_4 -> m8_8  [color=green, key=1, label=field, style=dashed];
m8_4 -> m8_9  [color=green, key=1, label=field, style=dashed];
m8_7 -> m8_9  [color=green, key=1, label=attr, style=dashed];
m8_17 -> m8_38  [color=green, key=1, label="System.Text.StringBuilder", style=dashed];
m8_17 -> m8_39  [color=green, key=1, label="System.Text.StringBuilder", style=dashed];
m8_17 -> m8_40  [color=green, key=1, label="System.Text.StringBuilder", style=dashed];
m8_37 -> m8_39  [color=green, key=1, label=value, style=dashed];
m9_1 -> m9_7  [color=green, key=1, label=valueOne, style=dashed];
m9_2 -> m9_8  [color=green, key=1, label=valueTwo, style=dashed];
m9_2 -> m9_11  [color=green, key=1, label=valueTwo, style=dashed];
m9_3 -> m9_12  [color=green, key=1, label=valueThree, style=dashed];
m9_3 -> m9_15  [color=green, key=1, label=valueThree, style=dashed];
m9_5 -> m9_7  [color=green, key=1, label=e, style=dashed];
m9_5 -> m9_8  [color=green, key=1, label=e, style=dashed];
m9_5 -> m9_9  [color=green, key=1, label=e, style=dashed];
m9_5 -> m9_10  [color=green, key=1, label=e, style=dashed];
m9_5 -> m9_11  [color=green, key=1, label=e, style=dashed];
m9_5 -> m9_12  [color=green, key=1, label=e, style=dashed];
m9_5 -> m9_13  [color=green, key=1, label=e, style=dashed];
m9_5 -> m9_14  [color=green, key=1, label=e, style=dashed];
m9_5 -> m9_15  [color=green, key=1, label=e, style=dashed];
m9_5 -> m9_16  [color=green, key=1, label=e, style=dashed];
m9_5 -> m9_17  [color=green, key=1, label=e, style=dashed];
m9_26 -> m9_28  [color=green, key=1, label=e, style=dashed];
m9_26 -> m9_29  [color=green, key=1, label=e, style=dashed];
m9_26 -> m9_30  [color=green, key=1, label=e, style=dashed];
m9_26 -> m9_31  [color=green, key=1, label=e, style=dashed];
m9_26 -> m9_32  [color=green, key=1, label=e, style=dashed];
m9_26 -> m9_33  [color=green, key=1, label=e, style=dashed];
m9_26 -> m9_34  [color=green, key=1, label=e, style=dashed];
m9_26 -> m9_35  [color=green, key=1, label=e, style=dashed];
m9_26 -> m9_36  [color=green, key=1, label=e, style=dashed];
m9_26 -> m9_37  [color=green, key=1, label=e, style=dashed];
m9_26 -> m9_38  [color=green, key=1, label=e, style=dashed];
m9_26 -> m9_39  [color=green, key=1, label=e, style=dashed];
m9_26 -> m9_40  [color=green, key=1, label=e, style=dashed];
m9_26 -> m9_41  [color=green, key=1, label=e, style=dashed];
m9_26 -> m9_42  [color=green, key=1, label=e, style=dashed];
m9_26 -> m9_43  [color=green, key=1, label=e, style=dashed];
m9_26 -> m9_44  [color=green, key=1, label=e, style=dashed];
m10_1 -> m10_5  [color=green, key=1, label=hi, style=dashed];
m10_4 -> m10_6  [color=green, key=1, label=sw, style=dashed];
m10_14 -> m10_18  [color=green, key=1, label=hi, style=dashed];
m10_17 -> m10_19  [color=green, key=1, label=sw, style=dashed];
m12_194 -> m12_196  [color=darkseagreen4, key=1, label="CommandLine.Text.FormatOptionHelpTextEventArgs", style=dashed];
m12_194 -> m12_201  [color=darkseagreen4, key=1, label="CommandLine.Text.FormatOptionHelpTextEventArgs", style=dashed];
m12_146 -> m12_148  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_146 -> m12_149  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_62 -> m12_64  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_62 -> m12_65  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_62 -> m12_66  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_62 -> m12_67  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_62 -> m12_68  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_87 -> m12_89  [color=darkseagreen4, key=1, label=local, style=dashed];
m12_87 -> m12_90  [color=darkseagreen4, key=1, label=local, style=dashed];
m12_87 -> m12_91  [color=darkseagreen4, key=1, label=local, style=dashed];
m12_94 -> m12_96  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_94 -> m12_97  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_94 -> m12_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_94 -> m12_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_49 -> m12_52  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_49 -> m12_53  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_49 -> m12_54  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_49 -> m12_55  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_51 -> m12_53  [color=darkseagreen4, key=1, label=formattingMessage, style=dashed];
m12_51 -> m12_54  [color=darkseagreen4, key=1, label=formattingMessage, style=dashed];
m12_51 -> m12_55  [color=darkseagreen4, key=1, label=formattingMessage, style=dashed];
m12_72 -> m12_74  [color=darkseagreen4, key=1, label=local, style=dashed];
m12_72 -> m12_75  [color=darkseagreen4, key=1, label=local, style=dashed];
m12_72 -> m12_76  [color=darkseagreen4, key=1, label=local, style=dashed];
m12_78 -> m12_80  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_78 -> m12_81  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_78 -> m12_82  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_78 -> m12_83  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_78 -> m12_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_187 -> m12_189  [color=darkseagreen4, key=1, label=options, style=dashed];
m12_187 -> m12_190  [color=darkseagreen4, key=1, label=options, style=dashed];
m12_1 -> m12_6  [color=darkseagreen4, key=1, label=help, style=dashed];
m12_1 -> m12_7  [color=darkseagreen4, key=1, label=help, style=dashed];
m12_1 -> m12_8  [color=darkseagreen4, key=1, label=help, style=dashed];
m12_1 -> m12_9  [color=darkseagreen4, key=1, label=help, style=dashed];
m12_1 -> m12_10  [color=darkseagreen4, key=1, label=help, style=dashed];
m12_1 -> m12_11  [color=darkseagreen4, key=1, label=help, style=dashed];
m12_1 -> m12_12  [color=darkseagreen4, key=1, label=help, style=dashed];
m12_4 -> m12_7  [color=darkseagreen4, key=1, label=errors, style=dashed];
m12_29 -> m12_31  [color=darkseagreen4, key=1, label=local, style=dashed];
m12_29 -> m12_32  [color=darkseagreen4, key=1, label=local, style=dashed];
m12_29 -> m12_33  [color=darkseagreen4, key=1, label=local, style=dashed];
m12_29 -> m12_34  [color=darkseagreen4, key=1, label=local, style=dashed];
m12_36 -> m12_38  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_105 -> m12_116  [color=darkseagreen4, key=1, label=year, style=dashed];
m12_106 -> m12_109  [color=darkseagreen4, key=1, label=local, style=dashed];
m12_106 -> m12_110  [color=darkseagreen4, key=1, label=local, style=dashed];
m12_106 -> m12_111  [color=darkseagreen4, key=1, label=local, style=dashed];
m12_114 -> m12_116  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_114 -> m12_117  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_114 -> m12_118  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_114 -> m12_119  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_205 -> m12_11  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", style=dashed];
m12_206 -> m12_26  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m12_206 -> m12_47  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m12_206 -> m12_60  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m15_9 -> m15_13  [color=green, key=1, label=oa, style=dashed];
m15_10 -> m15_12  [color=green, key=1, label=oi, style=dashed];
m15_44 -> m15_56  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>", style=dashed];
m15_44 -> m15_59  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>", style=dashed];
m15_44 -> m15_60  [color=green, key=1, label="ref CommandLine.OptionMap", style=dashed];
m15_44 -> m15_61  [color=darkseagreen4, key=1, label="ref CommandLine.OptionMap", style=dashed];
m15_46 -> m15_60  [color=green, key=1, label="ref CommandLine.OptionMap", style=dashed];
m15_46 -> m15_61  [color=green, key=1, label="ref CommandLine.OptionMap", style=dashed];
m15_48 -> m15_59  [color=green, key=1, label=attribute2, style=dashed];
m15_52 -> m15_59  [color=green, key=1, label=option3, style=dashed];
m15_62 -> m15_12  [color=green, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m15_62 -> m15_13  [color=green, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m16_4 -> m16_1  [color=green, key=1, label="CommandLine.Tests.Mocks.OptionsBase", style=dashed];
m22_1 -> m22_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_21 -> m22_24  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m22_21 -> m22_26  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m22_21 -> m22_27  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m22_21 -> m22_29  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m22_21 -> m22_30  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m22_21 -> m22_31  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m22_21 -> m22_32  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m22_21 -> m22_33  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m22_21 -> m22_36  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m22_21 -> m22_41  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m22_21 -> m22_42  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m22_34 -> m22_37  [color=darkseagreen4, key=1, label=builder, style=dashed];
m22_34 -> m22_38  [color=darkseagreen4, key=1, label=builder, style=dashed];
m22_34 -> m22_39  [color=darkseagreen4, key=1, label=builder, style=dashed];
m22_8 -> m22_11  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m22_9 -> m22_11  [color=darkseagreen4, key=1, label=options, style=dashed];
m22_9 -> m22_13  [color=darkseagreen4, key=1, label=options, style=dashed];
m22_60 -> m22_1  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m22_60 -> m22_5  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m31_27 -> m31_32  [color=green, key=1, label=options, style=dashed];
m31_28 -> m31_30  [color=green, key=1, label=values, style=dashed];
m31_28 -> m31_31  [color=green, key=1, label=values, style=dashed];
m31_18 -> m31_20  [color=green, key=1, label=values, style=dashed];
m31_36 -> m31_32  [color=green, key=1, label="CommandLine.Tests.ValueListAttributeFixture", style=dashed];
}
