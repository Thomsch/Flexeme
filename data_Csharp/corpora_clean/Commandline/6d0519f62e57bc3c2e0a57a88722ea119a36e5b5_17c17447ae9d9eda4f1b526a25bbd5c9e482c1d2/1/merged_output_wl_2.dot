digraph  {
m0_13 [cluster="CommandLine.Core.Specification.IsMinNotSpecified()", file="HelpTextTests.cs", label="Entry CommandLine.Core.Specification.IsMinNotSpecified()", span="76-76"];
m0_7 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="HelpTextTests.cs", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="21-21"];
m0_8 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="HelpTextTests.cs", label="return spec => spec.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                && !spec.IsMinNotSpecified() && !spec.IsMaxNotSpecified() && spec.Min > spec.Max;", span="23-24"];
m0_9 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="HelpTextTests.cs", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="21-21"];
m0_18 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="29-29"];
m0_4 [cluster="lambda expression", file="HelpTextTests.cs", label="spec.ConversionType.ToDescriptor() == DescriptorType.Scalar && (spec.Min > 0 || spec.Max > 0)", span="18-18"];
m0_3 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="18-18"];
m0_5 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="18-18"];
m0_11 [cluster="lambda expression", file="HelpTextTests.cs", label="spec.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                && !spec.IsMinNotSpecified() && !spec.IsMaxNotSpecified() && spec.Min > spec.Max", span="23-24"];
m0_10 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="23-24"];
m0_12 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="23-24"];
m0_19 [cluster="lambda expression", file="HelpTextTests.cs", label="spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1", span="29-29"];
m0_20 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="29-29"];
m0_6 [cluster="System.Type.ToDescriptor()", file="HelpTextTests.cs", label="Entry System.Type.ToDescriptor()", span="22-22"];
m0_15 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="HelpTextTests.cs", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="27-27"];
m0_16 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="HelpTextTests.cs", label="return spec => spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1;", span="29-29"];
m0_17 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="HelpTextTests.cs", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="27-27"];
m0_34 [cluster="Humanizer.Configuration.DefaultFormatter.DateHumanize_one_year_ago()", file="HelpTextTests.cs", label="Entry Humanizer.Configuration.DefaultFormatter.DateHumanize_one_year_ago()", span="61-61"];
m0_35 [cluster="Humanizer.Configuration.DefaultFormatter.DateHumanize_one_year_ago()", color=green, community=0, file="HelpTextTests.cs", label="1: return Resources.DateHumanize_one_year_ago;", span="63-63"];
m0_36 [cluster="Humanizer.Configuration.DefaultFormatter.DateHumanize_one_year_ago()", file="HelpTextTests.cs", label="Exit Humanizer.Configuration.DefaultFormatter.DateHumanize_one_year_ago()", span="61-61"];
m0_21 [cluster="CommandLine.Core.Specification.IsOption()", file="HelpTextTests.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
m0_0 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="HelpTextTests.cs", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="16-16"];
m0_1 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="HelpTextTests.cs", label="return spec => spec.ConversionType.ToDescriptor() == DescriptorType.Scalar && (spec.Min > 0 || spec.Max > 0);", span="18-18"];
m0_2 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="HelpTextTests.cs", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="16-16"];
m0_14 [cluster="CommandLine.Core.Specification.IsMaxNotSpecified()", file="HelpTextTests.cs", label="Entry CommandLine.Core.Specification.IsMaxNotSpecified()", span="81-81"];
m1_58 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m1_48 [cluster="Unk.ThrowingValidate", file="InstanceBuilderTests.cs", label="Entry Unk.ThrowingValidate", span=""];
m1_68 [cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="InstanceBuilderTests.cs", label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="71-71"];
m1_81 [cluster="NotParsed<T>.cstr", file="InstanceBuilderTests.cs", label="Entry NotParsed<T>.cstr", span=""];
m1_116 [cluster="string.MatchName(string, string, System.StringComparer)", file="InstanceBuilderTests.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m1_3 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35"];
m1_19 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="var typeInfo = factory.Return(f => f().GetType(), typeof(T))", span="42-42"];
m1_23 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="Func<T> makeDefault = () =>\r\n                typeof(T).IsMutable()\r\n                    ? factory.Return(f => f(), Activator.CreateInstance<T>())\r\n                    : ReflectionHelper.CreateDefaultImmutableInstance<T>(\r\n                        (from p in specProps select p.Specification.ConversionType).ToArray())", span="53-57"];
m1_24 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="arguments.Any()", span="59-59"];
m1_25 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="var preprocessorErrors = arguments.Preprocess(PreprocessorGuards.Lookup(nameComparer))", span="61-61"];
m1_28 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="var tokenizerResult = tokenizer(arguments, optionSpecs)", span="68-68"];
m1_30 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="var partitions = TokenPartitioner.Partition(\r\n                tokens,\r\n                name => TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer))", span="72-74"];
m1_31 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="var optionSpecPropsResult = OptionMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                partitions.Options,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                nameComparer)", span="76-80"];
m1_32 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="var valueSpecPropsResult = ValueMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                    partitions.Values,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture))", span="82-85"];
m1_33 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="var missingValueErrors = from token in partitions.Errors\r\n                                     select new MissingValueOptionError(\r\n                                         optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer)).FromOptionSpecification())", span="87-89"];
m1_37 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="instance = factory.Return(f => f(), Activator.CreateInstance<T>())", span="97-97"];
m1_20 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="var specProps = typeInfo.GetSpecifications(pi => SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>()))", span="44-45"];
m1_36 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="typeInfo.IsMutable()", span="95-95"];
m1_39 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="var ctor = typeInfo.GetConstructor((from sp in specProps select sp.Property.PropertyType).ToArray())", span="113-113"];
m1_21 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="var specs = from pt in specProps select pt.Specification", span="47-47"];
m1_22 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="var optionSpecs = specs\r\n                .ThrowingValidate(SpecificationGuards.Lookup)\r\n                .OfType<OptionSpecification>()", span="49-51"];
m1_27 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="return new NotParsed<T>(makeDefault().GetType(), preprocessorErrors);", span="64-64"];
m1_26 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="preprocessorErrors.Any()", span="62-62"];
m1_29 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="var tokens = tokenizerResult.SucceededWith()", span="70-70"];
m1_43 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="var allErrors = tokenizerResult.SuccessfulMessages()\r\n                .Concat(missingValueErrors)\r\n                .Concat(optionSpecPropsResult.SuccessfulMessages())\r\n                .Concat(valueSpecPropsResult.SuccessfulMessages())\r\n                .Concat(validationErrors)", span="125-129"];
m1_42 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="var validationErrors = specPropsWithValue.Validate(\r\n                SpecificationPropertyRules.Lookup(tokens))", span="122-123"];
m1_34 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="var specPropsWithValue = optionSpecPropsResult.SucceededWith()\r\n                .Concat(valueSpecPropsResult.SucceededWith())", span="91-92"];
m1_35 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="T instance", span="94-94"];
m1_38 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="instance = instance\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsJust(),\r\n                        sp => sp.Value.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                        sp => sp.Specification.DefaultValue.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing(),\r\n                        sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray())", span="98-109"];
m1_40 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="var values = (from prms in ctor.GetParameters()\r\n                              join sp in specPropsWithValue on prms.Name.ToLower() equals sp.Property.Name.ToLower()\r\n                              select sp.Value.Return(v => v,\r\n                                    sp.Specification.DefaultValue.Return(d => d,\r\n                                        sp.Specification.ConversionType.CreateDefaultForImmutable()))).ToArray()", span="114-118"];
m1_41 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="instance = (T)ctor.Invoke(values)", span="119-119"];
m1_44 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="return allErrors.Any()\r\n                ? (ParserResult<T>)new NotParsed<T>(instance.GetType(), allErrors)\r\n                : (ParserResult<T>)new Parsed<T>(instance);", span="131-133"];
m1_45 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35"];
m1_87 [cluster="Unk.GetType", file="InstanceBuilderTests.cs", label="Entry Unk.GetType", span=""];
m1_71 [cluster="Unk.GetParameters", file="InstanceBuilderTests.cs", label="Entry Unk.GetParameters", span=""];
m1_109 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="13-13"];
m1_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46"];
m1_98 [cluster="Unk.>", file="InstanceBuilderTests.cs", label="Entry Unk.>", span=""];
m1_80 [cluster="Unk.Any", file="InstanceBuilderTests.cs", label="Entry Unk.Any", span=""];
m1_18 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m1_61 [cluster="CommandLine.Core.Specification.IsValue()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m1_77 [cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="InstanceBuilderTests.cs", label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="40-40"];
m1_14 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m1_70 [cluster="Unk.GetConstructor", file="InstanceBuilderTests.cs", label="Entry Unk.GetConstructor", span=""];
m1_63 [cluster="Unk.Single", file="InstanceBuilderTests.cs", label="Entry Unk.Single", span=""];
m1_75 [cluster="Unk.Invoke", file="InstanceBuilderTests.cs", label="Entry Unk.Invoke", span=""];
m1_50 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="InstanceBuilderTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m1_54 [cluster="System.Func<TResult>.Invoke()", file="InstanceBuilderTests.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m1_76 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m1_99 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="55-55"];
m1_5 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="24-24"];
m1_12 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="24-24"];
m1_6 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="25-27"];
m1_16 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="27-27"];
m1_4 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="22-29"];
m1_11 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="24-24"];
m1_7 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="return explodedTokens;", span="28-28"];
m1_15 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="27-27"];
m1_8 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="22-29"];
m1_13 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="24-24"];
m1_17 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="27-27"];
m1_95 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="typeof(T).IsMutable()\r\n                    ? factory.Return(f => f(), Activator.CreateInstance<T>())\r\n                    : ReflectionHelper.CreateDefaultImmutableInstance<T>(\r\n                        (from p in specProps select p.Specification.ConversionType).ToArray())", span="54-57"];
m1_103 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer)", span="74-74"];
m1_107 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="79-79"];
m1_111 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="85-85"];
m1_114 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="89-89"];
m1_83 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="42-42"];
m1_88 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="44-45"];
m1_102 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="74-74"];
m1_106 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="79-79"];
m1_110 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="85-85"];
m1_113 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="89-89"];
m1_117 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="97-97"];
m1_145 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="116-116"];
m1_148 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="117-117"];
m1_120 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="100-100"];
m1_124 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="101-101"];
m1_128 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="103-103"];
m1_132 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="104-104"];
m1_135 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="106-108"];
m1_139 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="109-109"];
m1_84 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="f().GetType()", span="42-42"];
m1_85 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="42-42"];
m1_89 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>())", span="44-45"];
m1_90 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="44-45"];
m1_94 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="53-57"];
m1_96 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="53-57"];
m1_100 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="f()", span="55-55"];
m1_101 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="55-55"];
m1_104 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="74-74"];
m1_108 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="79-79"];
m1_112 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="85-85"];
m1_115 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="89-89"];
m1_118 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="f()", span="97-97"];
m1_119 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="97-97"];
m1_121 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="sp.Value.IsJust()", span="100-100"];
m1_122 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="100-100"];
m1_125 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="sp.Value.FromJust()", span="101-101"];
m1_126 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="101-101"];
m1_129 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust()", span="103-103"];
m1_130 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="103-103"];
m1_133 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="sp.Specification.DefaultValue.FromJust()", span="104-104"];
m1_134 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="104-104"];
m1_136 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing()", span="106-108"];
m1_137 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="106-108"];
m1_140 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray()", span="109-109"];
m1_141 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="109-109"];
m1_146 [cluster="lambda expression", file="InstanceBuilderTests.cs", label=v, span="116-116"];
m1_147 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="116-116"];
m1_149 [cluster="lambda expression", file="InstanceBuilderTests.cs", label=d, span="117-117"];
m1_150 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="117-117"];
m1_55 [cluster="object.GetType()", file="InstanceBuilderTests.cs", label="Entry object.GetType()", span="0-0"];
m1_52 [cluster="System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="InstanceBuilderTests.cs", label="Entry System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11"];
m1_62 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m1_0 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14"];
m1_1 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="return Build(\r\n                factory,\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="20-32"];
m1_2 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14"];
m1_47 [cluster="Unk.GetSpecifications", file="InstanceBuilderTests.cs", label="Entry Unk.GetSpecifications", span=""];
m1_74 [cluster="Unk.CreateDefaultForImmutable", file="InstanceBuilderTests.cs", label="Entry Unk.CreateDefaultForImmutable", span=""];
m1_78 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", file="InstanceBuilderTests.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", span="12-12"];
m1_79 [cluster="Unk.Concat", file="InstanceBuilderTests.cs", label="Entry Unk.Concat", span=""];
m1_82 [cluster="CommandLine.Parsed<T>.Parsed(T)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Parsed<T>.Parsed(T)", span="108-108"];
m1_143 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="InstanceBuilderTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m1_144 [cluster="System.Type.CreateEmptyArray()", file="InstanceBuilderTests.cs", label="Entry System.Type.CreateEmptyArray()", span="114-114"];
m1_73 [cluster="string.ToLower()", file="InstanceBuilderTests.cs", label="Entry string.ToLower()", span="0-0"];
m1_53 [cluster="CommandLine.NotParsed<T>.NotParsed(System.Type, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(System.Type, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="178-178"];
m1_142 [cluster="System.Type.GetGenericArguments()", file="InstanceBuilderTests.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m1_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13"];
m1_46 [cluster="Unk.Return", file="InstanceBuilderTests.cs", label="Entry Unk.Return", span=""];
m1_91 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105"];
m1_105 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="23-23"];
m1_86 [cluster="Unk.f", file="InstanceBuilderTests.cs", label="Entry Unk.f", span=""];
m1_67 [cluster="System.Activator.CreateInstance<T>()", file="InstanceBuilderTests.cs", label="Entry System.Activator.CreateInstance<T>()", span="0-0"];
m1_57 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", file="InstanceBuilderTests.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", span="653-653"];
m1_59 [cluster="CommandLine.Core.Specification.IsOption()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m1_92 [cluster="CSharpx.Maybe.Nothing<T>()", file="InstanceBuilderTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m1_127 [cluster="CSharpx.Maybe<T>.FromJust<T>()", file="InstanceBuilderTests.cs", label="Entry CSharpx.Maybe<T>.FromJust<T>()", span="342-342"];
m1_131 [cluster="CSharpx.Maybe<T>.IsNothing<T>()", file="InstanceBuilderTests.cs", label="Entry CSharpx.Maybe<T>.IsNothing<T>()", span="334-334"];
m1_138 [cluster="CSharpx.Maybe<T>.MatchNothing()", file="InstanceBuilderTests.cs", label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57"];
m1_97 [cluster="System.Type.IsMutable()", file="InstanceBuilderTests.cs", label="Entry System.Type.IsMutable()", span="128-128"];
m1_93 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="21-21"];
m1_72 [cluster="Unk.ToLower", file="InstanceBuilderTests.cs", label="Entry Unk.ToLower", span=""];
m1_49 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="InstanceBuilderTests.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m1_51 [cluster="CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", span="11-11"];
m1_66 [cluster="Unk.IsMutable", file="InstanceBuilderTests.cs", label="Entry Unk.IsMutable", span=""];
m1_69 [cluster="Unk.ToArray", file="InstanceBuilderTests.cs", label="Entry Unk.ToArray", span=""];
m1_123 [cluster="CSharpx.Maybe<T>.IsJust<T>()", file="InstanceBuilderTests.cs", label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326"];
m1_64 [cluster="Unk.FromOptionSpecification", file="InstanceBuilderTests.cs", label="Entry Unk.FromOptionSpecification", span=""];
m1_56 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="InstanceBuilderTests.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m1_65 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="InstanceBuilderTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m1_60 [cluster="Unk.MapValues", file="InstanceBuilderTests.cs", label="Entry Unk.MapValues", span=""];
m1_151 [file="InstanceBuilderTests.cs", label="System.StringComparer", span=""];
m1_152 [file="InstanceBuilderTests.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m1_153 [file="InstanceBuilderTests.cs", label="CSharpx.Maybe<System.Func<T>>", span=""];
m1_154 [file="InstanceBuilderTests.cs", label=specProps, span=""];
m1_155 [file="InstanceBuilderTests.cs", label="System.StringComparer", span=""];
m1_156 [file="InstanceBuilderTests.cs", label=optionSpecs, span=""];
m1_157 [file="InstanceBuilderTests.cs", label="System.Globalization.CultureInfo", span=""];
m1_158 [file="InstanceBuilderTests.cs", label=token, span=""];
m2_0 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="ParserTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="10-10"];
m2_4 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="ParserTests.cs", label="return specification.Tag == SpecificationType.Value;", span="17-17"];
m2_1 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="ParserTests.cs", label="return specification.Tag == SpecificationType.Option;", span="12-12"];
m2_3 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="ParserTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="15-15"];
m2_5 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="ParserTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="15-15"];
m2_2 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="ParserTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="10-10"];
m2_6 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="ParserTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", span="20-20"];
m2_162 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", span="251-251"];
m2_173 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", color=green, community=0, file="ParserTests.cs", label="2: lines[4].ShouldBeEquivalentTo(''add       Add file contents to the index.'')", span="268-268"];
m2_168 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="263-263"];
m2_172 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="lines[3].ShouldBeEquivalentTo(''No verb selected.'')", span="267-267"];
m2_174 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", color=green, community=0, file="ParserTests.cs", label="2: lines[5].ShouldBeEquivalentTo(''commit    Record changes to the repository.'')", span="269-269"];
m2_175 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", color=green, community=0, file="ParserTests.cs", label="2: lines[6].ShouldBeEquivalentTo(''clone     Clone a repository into a new directory.'')", span="270-270"];
m2_176 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", color=green, community=0, file="ParserTests.cs", label="2: lines[7].ShouldBeEquivalentTo(''help      Display more information on a specific command.'')", span="271-271"];
m2_166 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="var result = help.ToString()", span="259-259"];
m2_167 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="result.Length.Should().BeGreaterThan(0)", span="262-262"];
m2_169 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="264-264"];
m2_170 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="265-265"];
m2_171 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="266-266"];
m2_163 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="var help = new StringWriter()", span="254-254"];
m2_165 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new string [] { })", span="258-258"];
m2_164 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="255-255"];
m2_177 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", span="251-251"];
m2_100 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="184-184"];
m2_105 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="((NotParsed<FakeImmutableOptions>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="195-195"];
m2_104 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="((NotParsed<FakeImmutableOptions>)result).Errors.Should().HaveCount(x => x == 1)", span="194-194"];
m2_101 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="var expectedError = new HelpRequestedError()", span="187-187"];
m2_103 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="var result = sut.ParseArguments<FakeImmutableOptions>(new[] { ''--help'' })", span="191-191"];
m2_102 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="var sut = new Parser()", span="188-188"];
m2_106 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="184-184"];
m2_8 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="ParserTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", span="20-20"];
m2_38 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="var expectedOptions = new FakeOptions\r\n                {\r\n                    StringValue = ''strvalue'', IntSequence = new[] { 1, 2, 3 }\r\n                }", span="66-69"];
m2_39 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="var sut = new Parser()", span="70-70"];
m2_41 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="result.Value.ShouldBeEquivalentTo(expectedOptions)", span="76-76"];
m2_42 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options()", span="63-63"];
m2_40 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="var result = sut.ParseArguments<FakeOptions>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="73-73"];
m2_43 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="ParserTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m2_44 [cluster="CommandLine.Parser.Parser()", file="ParserTests.cs", label="Entry CommandLine.Parser.Parser()", span="25-25"];
m2_79 [cluster="CommandLine.Tests.Fakes.CloneOptions.CloneOptions()", file="ParserTests.cs", label="Entry CommandLine.Tests.Fakes.CloneOptions.CloneOptions()", span="33-33"];
m2_35 [cluster="lambda expression", file="ParserTests.cs", label="with.HelpWriter = writer", span="51-51"];
m2_118 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="200-200"];
m2_122 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="var result = help.ToString()", span="208-208"];
m2_123 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="result.Length.Should().BeGreaterThan(0)", span="211-211"];
m2_119 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="var help = new StringWriter()", span="203-203"];
m2_121 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="sut.ParseArguments<FakeImmutableOptions>(new[] { ''--help'' })", span="207-207"];
m2_120 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="204-204"];
m2_124 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="200-200"];
m2_11 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="ParserTests.cs", label=guardsLookup, span="39-39"];
m2_46 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="ParserTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", span="84-84"];
m2_50 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="ParserTests.cs", label="return false;", span="91-91"];
m2_47 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="ParserTests.cs", label="int min", span="86-86"];
m2_49 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="ParserTests.cs", label="return predicate(min);", span="89-89"];
m2_48 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="ParserTests.cs", label="specification.Min.MatchJust(out min)", span="87-87"];
m2_51 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="ParserTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", span="84-84"];
m2_110 [cluster="Unk.ContainSingle", file="ParserTests.cs", label="Entry Unk.ContainSingle", span=""];
m2_64 [cluster="Unk.>", file="ParserTests.cs", label="Entry Unk.>", span=""];
m2_37 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options()", span="63-63"];
m2_33 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ParserTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="50-50"];
m2_17 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="var sut = new Parser(with => with.HelpWriter = writer)", span="35-35"];
m2_22 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ParserTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="50-50"];
m2_16 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="var writer = new StringWriter()", span="34-34"];
m2_21 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="31-31"];
m2_154 [cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="ParserTests.cs", label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15"];
m2_83 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="147-147"];
m2_88 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="163-163"];
m2_84 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="var expectedOptions = new CloneOptions\r\n            {\r\n                Quiet = true,\r\n                Urls = new[] { ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' }\r\n            }", span="150-154"];
m2_86 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="var result = sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(\r\n                new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' })", span="158-159"];
m2_87 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="Assert.IsType<CloneOptions>(result.Value)", span="162-162"];
m2_85 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="var sut = new Parser()", span="155-155"];
m2_89 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="147-147"];
m2_10 [cluster="System.IO.StringWriter.ToString()", file="ParserTests.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m2_12 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="19-19"];
m2_14 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="19-19"];
m2_13 [cluster="lambda expression", file="ParserTests.cs", label="with.HelpWriter = writer", span="19-19"];
m2_15 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="31-31"];
m2_7 [cluster="System.IO.StringWriter.StringWriter()", file="ParserTests.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m2_56 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="ParserTests.cs", label="return false;", span="101-101"];
m2_61 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="120-120"];
m2_57 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="ParserTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", span="94-94"];
m2_59 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label="var result = sut.ParseArguments(\r\n                new[] { ''add'', ''-p'', ''--'', ''--strange-fn'' },\r\n                typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="114-116"];
m2_60 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label="Assert.IsType<AddOptions>(result.Value)", span="119-119"];
m2_58 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label=guard, span=""];
m2_62 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="103-103"];
m2_125 [cluster="Unk.BeGreaterThan", file="ParserTests.cs", label="Entry Unk.BeGreaterThan", span=""];
m2_23 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="35-35"];
m2_29 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new string[] { })", span="54-54"];
m2_24 [cluster="lambda expression", file="ParserTests.cs", label="with.HelpWriter = writer", span="35-35"];
m2_26 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="47-47"];
m2_25 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="35-35"];
m2_27 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="var writer = new StringWriter()", span="50-50"];
m2_28 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="var sut = new Parser(with => with.HelpWriter = writer)", span="51-51"];
m2_30 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="var text = writer.ToString()", span="57-57"];
m2_32 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="47-47"];
m2_31 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="Assert.True(text.Length > 0)", span="58-58"];
m2_129 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="216-216"];
m2_134 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="((NotParsed<FakeOptions>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="227-227"];
m2_133 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="((NotParsed<FakeOptions>)result).Errors.Should().HaveCount(x => x == 1)", span="226-226"];
m2_130 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="var expectedError = new VersionRequestedError()", span="219-219"];
m2_132 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="var result = sut.ParseArguments<FakeOptions>(new[] { ''--version'' })", span="223-223"];
m2_131 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="var sut = new Parser()", span="220-220"];
m2_135 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="216-216"];
m2_71 [cluster="Unk.RespectingRuntimeTypes", file="ParserTests.cs", label="Entry Unk.RespectingRuntimeTypes", span=""];
m2_136 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="ParserTests.cs", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="421-421"];
m2_181 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="276-276"];
m2_191 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", color=green, community=0, file="ParserTests.cs", label="2: lines[3].ShouldBeEquivalentTo(''commit    Record changes to the repository.'')", span="292-292"];
m2_187 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="288-288"];
m2_190 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="lines[2].ShouldBeEquivalentTo(''add       Add file contents to the index.'')", span="291-291"];
m2_192 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", color=green, community=0, file="ParserTests.cs", label="2: lines[4].ShouldBeEquivalentTo(''clone     Clone a repository into a new directory.'')", span="293-293"];
m2_193 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", color=green, community=0, file="ParserTests.cs", label="2: lines[5].ShouldBeEquivalentTo(''help      Display more information on a specific command.'')", span="294-294"];
m2_189 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="290-290"];
m2_185 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="var result = help.ToString()", span="284-284"];
m2_186 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="result.Length.Should().BeGreaterThan(0)", span="287-287"];
m2_188 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="289-289"];
m2_182 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="var help = new StringWriter()", span="279-279"];
m2_184 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new [] { ''--help'' })", span="283-283"];
m2_183 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="280-280"];
m2_194 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="276-276"];
m2_208 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="305-305"];
m2_19 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="var text = writer.ToString()", span="41-41"];
m2_18 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="sut.ParseArguments(new string[] { }, typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="38-38"];
m2_20 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="Assert.True(text.Length > 0)", span="42-42"];
m2_68 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="120-120"];
m2_80 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="142-142"];
m2_90 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="163-163"];
m2_179 [cluster="lambda expression", file="ParserTests.cs", label="config.HelpWriter = help", span="255-255"];
m2_70 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="120-120"];
m2_69 [cluster="lambda expression", file="ParserTests.cs", label="o.RespectingRuntimeTypes()", span="120-120"];
m2_82 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="142-142"];
m2_81 [cluster="lambda expression", file="ParserTests.cs", label="o.RespectingRuntimeTypes()", span="142-142"];
m2_92 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="163-163"];
m2_91 [cluster="lambda expression", file="ParserTests.cs", label="o.RespectingRuntimeTypes()", span="163-163"];
m2_196 [cluster="lambda expression", file="ParserTests.cs", label="config.HelpWriter = help", span="280-280"];
m2_178 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="255-255"];
m2_180 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="255-255"];
m2_114 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="195-195"];
m2_111 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="194-194"];
m2_140 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="227-227"];
m2_137 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="226-226"];
m2_159 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="245-245"];
m2_211 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="314-314"];
m2_54 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="ParserTests.cs", label="specification.Max.MatchJust(out max)", span="97-97"];
m2_66 [cluster="lambda expression", file="ParserTests.cs", label="with.EnableDashDash = true", span="111-111"];
m2_195 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="280-280"];
m2_197 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="280-280"];
m2_127 [cluster="lambda expression", file="ParserTests.cs", label="config.HelpWriter = help", span="204-204"];
m2_157 [cluster="lambda expression", file="ParserTests.cs", label="config.HelpWriter = help", span="236-236"];
m2_209 [cluster="lambda expression", file="ParserTests.cs", label="config.HelpWriter = help", span="305-305"];
m2_115 [cluster="lambda expression", file="ParserTests.cs", label="e.Equals(expectedError)", span="195-195"];
m2_116 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="195-195"];
m2_113 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="194-194"];
m2_112 [cluster="lambda expression", file="ParserTests.cs", label="x == 1", span="194-194"];
m2_141 [cluster="lambda expression", file="ParserTests.cs", label="e.Equals(expectedError)", span="227-227"];
m2_142 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="227-227"];
m2_139 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="226-226"];
m2_138 [cluster="lambda expression", file="ParserTests.cs", label="x == 1", span="226-226"];
m2_161 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="245-245"];
m2_160 [cluster="lambda expression", file="ParserTests.cs", label="x == 1", span="245-245"];
m2_213 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="314-314"];
m2_212 [cluster="lambda expression", file="ParserTests.cs", label="x == 1", span="314-314"];
m2_53 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="ParserTests.cs", label="int max", span="96-96"];
m2_55 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="ParserTests.cs", label="return predicate(max);", span="99-99"];
m2_65 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="111-111"];
m2_67 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="111-111"];
m2_34 [cluster="System.Type.ToDescriptorKind()", file="ParserTests.cs", label="Entry System.Type.ToDescriptorKind()", span="22-22"];
m2_36 [cluster="CommandLine.Infrastructure.Maybe<T>.MatchJust(out T)", file="ParserTests.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.MatchJust(out T)", span="31-31"];
m2_126 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="204-204"];
m2_128 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="204-204"];
m2_156 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="236-236"];
m2_158 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="236-236"];
m2_210 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="305-305"];
m2_108 [cluster="Unk.Should", file="ParserTests.cs", label="Entry Unk.Should", span=""];
m2_117 [cluster="Unk.Equals", file="ParserTests.cs", label="Entry Unk.Equals", span=""];
m2_155 [cluster="Unk.StartWithEquivalent", file="ParserTests.cs", label="Entry Unk.StartWithEquivalent", span=""];
m2_109 [cluster="Unk.HaveCount", file="ParserTests.cs", label="Entry Unk.HaveCount", span=""];
m2_63 [cluster="CommandLine.Tests.Fakes.AddOptions.AddOptions()", file="ParserTests.cs", label="Entry CommandLine.Tests.Fakes.AddOptions.AddOptions()", span="7-7"];
m2_99 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="ParserTests.cs", label="Entry CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", span="13-13"];
m2_143 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="232-232"];
m2_149 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="244-244"];
m2_147 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="var result = help.ToString()", span="240-240"];
m2_148 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="result.Length.Should().BeGreaterThan(0)", span="243-243"];
m2_150 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="lines.Should().HaveCount(x => x == 1)", span="245-245"];
m2_151 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="246-246"];
m2_144 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="var help = new StringWriter()", span="235-235"];
m2_146 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="sut.ParseArguments<FakeOptions>(new[] { ''--version'' })", span="239-239"];
m2_145 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="236-236"];
m2_152 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="232-232"];
m2_93 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="168-168"];
m2_97 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="result.Value.ShouldBeEquivalentTo(expectedOptions)", span="179-179"];
m2_94 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="var expectedOptions = new FakeImmutableOptions(\r\n                ''strvalue'', new[] { 1, 2, 3 }, default(bool), default(long))", span="171-172"];
m2_96 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="var result = sut.ParseArguments<FakeImmutableOptions>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="176-176"];
m2_95 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="var sut = new Parser()", span="173-173"];
m2_98 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="168-168"];
m2_153 [cluster="string.ToNotEmptyLines()", file="ParserTests.cs", label="Entry string.ToNotEmptyLines()", span="10-10"];
m2_9 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="ParserTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17"];
m2_72 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="125-125"];
m2_77 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="142-142"];
m2_73 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="var expectedOptions = new CloneOptions\r\n                {\r\n                    Quiet = true,\r\n                    Urls = new[] { ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' }\r\n                }", span="128-132"];
m2_75 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="var result = sut.ParseArguments(\r\n                new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' },\r\n                typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="136-138"];
m2_76 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="Assert.IsType<CloneOptions>(result.Value)", span="141-141"];
m2_74 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="var sut = new Parser()", span="133-133"];
m2_78 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="125-125"];
m2_198 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", span="301-301"];
m2_204 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="313-313"];
m2_202 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="var result = help.ToString()", span="309-309"];
m2_203 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="result.Length.Should().BeGreaterThan(0)", span="312-312"];
m2_205 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="lines.Should().HaveCount(x => x == 1)", span="314-314"];
m2_206 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="315-315"];
m2_199 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="var help = new StringWriter()", span="304-304"];
m2_201 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new[] { command })", span="308-308"];
m2_200 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="305-305"];
m2_207 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", span="301-301"];
m2_52 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="ParserTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", span="94-94"];
m2_107 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="ParserTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="357-357"];
m2_45 [cluster="Unk.ShouldBeEquivalentTo", file="ParserTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m2_221 [file="ParserTests.cs", label=help, span=""];
m2_222 [file="ParserTests.cs", label=help, span=""];
m2_214 [file="ParserTests.cs", label=writer, span=""];
m2_215 [file="ParserTests.cs", label=writer, span=""];
m2_216 [file="ParserTests.cs", label=writer, span=""];
m2_218 [file="ParserTests.cs", label=help, span=""];
m2_220 [file="ParserTests.cs", label=help, span=""];
m2_223 [file="ParserTests.cs", label=help, span=""];
m2_217 [file="ParserTests.cs", label=expectedError, span=""];
m2_219 [file="ParserTests.cs", label=expectedError, span=""];
m3_12 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="66-68"];
m3_51 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_succeeds()", file="SentenceBuilder.cs", label="Entry CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_succeeds()", span="104-104"];
m3_53 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_succeeds()", file="SentenceBuilder.cs", label="var parser = new Parser(new ParserSettings { MutuallyExclusive = true })", span="107-107"];
m3_56 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_succeeds()", file="SentenceBuilder.cs", label="options.Green.Should().Be((byte)100)", span="111-111"];
m3_57 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_succeeds()", file="SentenceBuilder.cs", label="options.Hue.Should().Be((short)200)", span="112-112"];
m3_58 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_succeeds()", file="SentenceBuilder.cs", label="options.DefaultColorSet.Should().Be(ColorSet.RgbColorSet)", span="113-113"];
m3_55 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_succeeds()", file="SentenceBuilder.cs", label="result.Should().BeTrue()", span="110-110"];
m3_54 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_succeeds()", file="SentenceBuilder.cs", label="var result = parser.ParseArguments(new string[] { ''-g100'', ''-h200'', ''-cRgbColorSet'' }, options)", span="108-108"];
m3_52 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_succeeds()", file="SentenceBuilder.cs", label="var options = new OptionsWithMultipleSetAndOneOption()", span="106-106"];
m3_59 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_succeeds()", file="SentenceBuilder.cs", label="Exit CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_succeeds()", span="104-104"];
m3_14 [cluster="lambda expression", file="SentenceBuilder.cs", label="error.Tag", span="78-78"];
m3_16 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Token ''' + ((BadFormatTokenError)error).Token + ''' is not recognized.'';", span="81-81"];
m3_15 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.BadFormatTokenError", span="80-80"];
m3_18 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Option ''' + ((MissingValueOptionError)error).NameInfo.NameText\r\n                                                      + ''' has no value.'';", span="83-84"];
m3_17 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.MissingValueOptionError", span="82-82"];
m3_19 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.UnknownOptionError", span="85-85"];
m3_8 [cluster="lambda expression", file="SentenceBuilder.cs", label="''ERROR(S):''", span="58-58"];
m3_0 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="SentenceBuilder.cs", label="Entry CommandLine.Text.SentenceBuilder.CreateDefault()", span="17-17"];
m3_1 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", color=green, community=0, file="SentenceBuilder.cs", label="1: return new DefaultSentenceBuilder();", span="19-19"];
m3_2 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", color=green, community=0, file="SentenceBuilder.cs", label="1: Exit CommandLine.Text.SentenceBuilder.CreateDefault()", span="17-17"];
m3_3 [cluster="CommandLine.Text.SentenceBuilder.DefaultSentenceBuilder.DefaultSentenceBuilder()", file="SentenceBuilder.cs", label="Entry CommandLine.Text.SentenceBuilder.DefaultSentenceBuilder.DefaultSentenceBuilder()", span="44-44"];
m3_5 [cluster="lambda expression", file="SentenceBuilder.cs", label="''Required.''", span="50-50"];
m3_4 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="50-50"];
m3_6 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="50-50"];
m3_38 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_three_mutually_exclusive_options_in_two_set_fails()", file="SentenceBuilder.cs", label="Entry CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_three_mutually_exclusive_options_in_two_set_fails()", span="84-84"];
m3_21 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.MissingRequiredOptionError", span="87-87"];
m3_22 [cluster="lambda expression", file="SentenceBuilder.cs", label="var errMisssing = ((MissingRequiredOptionError)error)", span="88-88"];
m3_23 [cluster="lambda expression", file="SentenceBuilder.cs", label="return errMisssing.NameInfo == NameInfo.EmptyName\r\n                                               ? ''A required value not bound to option name is missing.''\r\n                                               : ''Required option ''' + errMisssing.NameInfo.NameText + ''' is missing.'';", span="89-91"];
m3_26 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.BadFormatConversionError", span="94-94"];
m3_27 [cluster="lambda expression", file="SentenceBuilder.cs", label="var badFormat = ((BadFormatConversionError)error)", span="95-95"];
m3_25 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Option ''' + ((MutuallyExclusiveSetError)error).NameInfo.NameText + ''' is defined along with an incompatible one.'';", span="93-93"];
m3_24 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.MutuallyExclusiveSetError", span="92-92"];
m3_28 [cluster="lambda expression", file="SentenceBuilder.cs", label="return badFormat.NameInfo == NameInfo.EmptyName\r\n                                               ? ''A value not bound to option name is defined with a bad format.''\r\n                                               : ''Option ''' + badFormat.NameInfo.NameText + ''' is defined with a bad format.'';", span="96-98"];
m3_9 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="58-58"];
m3_10 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="66-68"];
m3_37 [cluster="lambda expression", file="SentenceBuilder.cs", label="throw new InvalidOperationException();", span="109-109"];
m3_20 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Option ''' + ((UnknownOptionError)error).Token + ''' is unknown.'';", span="86-86"];
m3_13 [cluster="Unk.Be", file="SentenceBuilder.cs", label="Entry Unk.Be", span=""];
m3_7 [cluster="CommandLine.Tests.Fakes.OptionsWithDefaultSet.OptionsWithDefaultSet()", file="SentenceBuilder.cs", label="Entry CommandLine.Tests.Fakes.OptionsWithDefaultSet.OptionsWithDefaultSet()", span="33-33"];
m3_11 [cluster="Unk.Should", file="SentenceBuilder.cs", label="Entry Unk.Should", span=""];
m3_30 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_in_two_set_succeeds()", file="SentenceBuilder.cs", label="var options = new OptionsWithMultipleSet()", span="74-74"];
m3_33 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_in_two_set_succeeds()", color=green, community=0, file="SentenceBuilder.cs", label="1: result.Should().BeTrue()", span="78-78"];
m3_29 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_in_two_set_succeeds()", file="SentenceBuilder.cs", label="Entry CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_in_two_set_succeeds()", span="72-72"];
m3_32 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_in_two_set_succeeds()", file="SentenceBuilder.cs", label="var result = parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'' }, options)", span="76-76"];
m3_34 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_in_two_set_succeeds()", color=green, community=0, file="SentenceBuilder.cs", label="0: options.Green.Should().Be((byte)167)", span="79-79"];
m3_31 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_in_two_set_succeeds()", file="SentenceBuilder.cs", label="var parser = new Parser(new ParserSettings { MutuallyExclusive = true })", span="75-75"];
m3_35 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_in_two_set_succeeds()", color=green, community=0, file="SentenceBuilder.cs", label="0: options.Hue.Should().Be((short)205)", span="80-80"];
m3_36 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_in_two_set_succeeds()", file="SentenceBuilder.cs", label="Exit CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_in_two_set_succeeds()", span="72-72"];
m3_44 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_fails()", file="SentenceBuilder.cs", label="Entry CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_fails()", span="94-94"];
m3_46 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_fails()", file="SentenceBuilder.cs", label="var parser = new Parser(new ParserSettings { MutuallyExclusive = true })", span="97-97"];
m3_48 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_fails()", file="SentenceBuilder.cs", label="result.Should().BeFalse()", span="100-100"];
m3_47 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_fails()", file="SentenceBuilder.cs", label="var result = parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'' }, options)", span="98-98"];
m3_45 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_fails()", file="SentenceBuilder.cs", label="var options = new OptionsWithMultipleSetAndOneOption()", span="96-96"];
m3_49 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_fails()", file="SentenceBuilder.cs", label="Exit CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_fails()", span="94-94"];
m3_39 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_three_mutually_exclusive_options_in_two_set_fails()", file="SentenceBuilder.cs", label="var parser = new Parser(new ParserSettings {MutuallyExclusive = true})", span="86-86"];
m3_42 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_three_mutually_exclusive_options_in_two_set_fails()", file="SentenceBuilder.cs", label="result.Should().BeFalse()", span="90-90"];
m3_41 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_three_mutually_exclusive_options_in_two_set_fails()", file="SentenceBuilder.cs", label="var result = parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'', ''--saturation=37'' }, options)", span="88-88"];
m3_40 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_three_mutually_exclusive_options_in_two_set_fails()", file="SentenceBuilder.cs", label="var options = new OptionsWithMultipleSet()", span="87-87"];
m3_43 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_three_mutually_exclusive_options_in_two_set_fails()", file="SentenceBuilder.cs", label="Exit CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_three_mutually_exclusive_options_in_two_set_fails()", span="84-84"];
m3_50 [cluster="CommandLine.Tests.Fakes.OptionsWithMultipleSetAndOneOption.OptionsWithMultipleSetAndOneOption()", file="SentenceBuilder.cs", label="Entry CommandLine.Tests.Fakes.OptionsWithMultipleSetAndOneOption.OptionsWithMultipleSetAndOneOption()", span="33-33"];
m5_38 [cluster="Unk.ThrowingValidate", file="SpecificationPropertyRules.cs", label="Entry Unk.ThrowingValidate", span=""];
m5_54 [cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="SpecificationPropertyRules.cs", label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="38-38"];
m5_3 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33"];
m5_19 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationPropertyRules.cs", label="var instance = factory()", span="40-40"];
m5_22 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationPropertyRules.cs", label="arguments.Any() && nameComparer.Equals(''--help'', arguments.First())", span="49-49"];
m5_24 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationPropertyRules.cs", label="var tokenizerResult = tokenizer(arguments, optionSpecs)", span="57-57"];
m5_26 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationPropertyRules.cs", label="var partitions = TokenPartitioner.Partition(\r\n                tokens,\r\n                name => TypeLookup.FindTypeDescriptor(name, optionSpecs, nameComparer))", span="61-63"];
m5_27 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=red, community=0, file="SpecificationPropertyRules.cs", label="2: var optionSpecProps = OptionMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                partitions.Options,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                nameComparer)", span="65-69"];
m5_28 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationPropertyRules.cs", label="var valueSpecProps = ValueMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                    partitions.Values,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture))", span="71-74"];
m5_29 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationPropertyRules.cs", label="var missingValueErrors = from token in partitions.Errors\r\n                                     select new MissingValueOptionError(\r\n                                         NameInfo.FromOptionSpecification(optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer))))", span="76-78"];
m5_20 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationPropertyRules.cs", label="var specProps = instance.GetType().GetSpecifications(pi => SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>()))", span="42-43"];
m5_23 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationPropertyRules.cs", label="return ParserResult.Create(\r\n                    ParserResultType.Options,\r\n                    instance,\r\n                    new[] { new HelpRequestedError() });", span="51-54"];
m5_31 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=red, community=0, file="SpecificationPropertyRules.cs", label="2: instance = instance\r\n                .SetProperties(specPropsWithValue,\r\n                    sp => sp.Value.IsJust(),\r\n                    sp => sp.Value.FromJust())\r\n                .SetProperties(specPropsWithValue,\r\n                    sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                    sp => sp.Specification.DefaultValue.FromJust())\r\n                .SetProperties(specPropsWithValue,\r\n                    sp => sp.Value.IsNothing()\r\n                        && sp.Specification.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                        && sp.Specification.DefaultValue.MatchNothing(),\r\n                    sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray())", span="82-93"];
m5_21 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationPropertyRules.cs", label="var optionSpecs = (from pt in specProps select pt.Specification)\r\n                .ThrowingValidate(SpecificationGuards.Lookup)\r\n                .OfType<OptionSpecification>()", span="45-47"];
m5_25 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationPropertyRules.cs", label="var tokens = tokenizerResult.Value", span="59-59"];
m5_33 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationPropertyRules.cs", label="return ParserResult.Create(\r\n                ParserResultType.Options,\r\n                instance,\r\n                tokenizerResult.Errors\r\n                    .Concat(missingValueErrors)\r\n                    .Concat(optionSpecProps.Errors)\r\n                    .Concat(valueSpecProps.Errors)\r\n                    .Concat(validationErrors));", span="98-105"];
m5_30 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationPropertyRules.cs", label="var specPropsWithValue = optionSpecProps.Value.Concat(valueSpecProps.Value)", span="80-80"];
m5_32 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationPropertyRules.cs", label="var validationErrors = specPropsWithValue.Validate(SpecificationPropertyRules.Lookup)\r\n                .OfType<Just<Error>>().Select(e => e.Value)", span="95-96"];
m5_34 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33"];
m5_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="44-44"];
m5_79 [cluster="string.MatchName(string, string, System.StringComparer)", file="SpecificationPropertyRules.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m5_46 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m5_72 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12"];
m5_83 [cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149"];
m5_99 [cluster="CommandLine.Infrastructure.Maybe<T>.MatchNothing()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.MatchNothing()", span="26-26"];
m5_49 [cluster="CommandLine.Core.Specification.IsValue()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m5_58 [cluster="Unk.Create", file="SpecificationPropertyRules.cs", label="Entry Unk.Create", span=""];
m5_87 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="134-134"];
m5_64 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21"];
m5_14 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m5_91 [cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="144-144"];
m5_42 [cluster="System.StringComparer.Equals(string, string)", file="SpecificationPropertyRules.cs", label="Entry System.StringComparer.Equals(string, string)", span="0-0"];
m5_37 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="SpecificationPropertyRules.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="12-12"];
m5_51 [cluster="Unk.Single", file="SpecificationPropertyRules.cs", label="Entry Unk.Single", span=""];
m5_35 [cluster="System.Func<TResult>.Invoke()", file="SpecificationPropertyRules.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m5_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="SpecificationPropertyRules.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m5_36 [cluster="object.GetType()", file="SpecificationPropertyRules.cs", label="Entry object.GetType()", span="0-0"];
m5_106 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="96-96"];
m5_5 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="22-22"];
m5_12 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="22-22"];
m5_6 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.WithSeparator(name, optionSpecs, nameComparer))", span="23-25"];
m5_16 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="NameLookup.WithSeparator(name, optionSpecs, nameComparer)", span="25-25"];
m5_4 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="20-27"];
m5_11 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="22-22"];
m5_7 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return explodedTokens;", span="26-26"];
m5_15 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="25-25"];
m5_8 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="20-27"];
m5_13 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="22-22"];
m5_17 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="25-25"];
m5_66 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="TypeLookup.FindTypeDescriptor(name, optionSpecs, nameComparer)", span="63-63"];
m5_70 [cluster="lambda expression", color=red, community=0, file="SpecificationPropertyRules.cs", label="0: TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="68-68"];
m5_74 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="74-74"];
m5_77 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="78-78"];
m5_59 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="42-43"];
m5_65 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="63-63"];
m5_69 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="68-68"];
m5_73 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="74-74"];
m5_76 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="78-78"];
m5_80 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="84-84"];
m5_84 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="85-85"];
m5_88 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="87-87"];
m5_92 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="88-88"];
m5_95 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="90-92"];
m5_100 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="93-93"];
m5_60 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>())", span="42-43"];
m5_61 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="42-43"];
m5_67 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="63-63"];
m5_71 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="68-68"];
m5_75 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="74-74"];
m5_78 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="78-78"];
m5_81 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="sp.Value.IsJust()", span="84-84"];
m5_82 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="84-84"];
m5_85 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="sp.Value.FromJust()", span="85-85"];
m5_86 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="85-85"];
m5_89 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust()", span="87-87"];
m5_90 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="87-87"];
m5_93 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="sp.Specification.DefaultValue.FromJust()", span="88-88"];
m5_94 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="88-88"];
m5_96 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="sp.Value.IsNothing()\r\n                        && sp.Specification.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                        && sp.Specification.DefaultValue.MatchNothing()", span="90-92"];
m5_97 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="90-92"];
m5_101 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray()", span="93-93"];
m5_102 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="93-93"];
m5_107 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="e.Value", span="96-96"];
m5_108 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="96-96"];
m5_41 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="SpecificationPropertyRules.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m5_44 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="100-100"];
m5_50 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261"];
m5_57 [cluster="Unk.Concat", file="SpecificationPropertyRules.cs", label="Entry Unk.Concat", span=""];
m5_104 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="SpecificationPropertyRules.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m5_18 [cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m5_56 [cluster="Unk.Select", file="SpecificationPropertyRules.cs", label="Entry Unk.Select", span=""];
m5_98 [cluster="System.Type.ToDescriptorKind()", file="SpecificationPropertyRules.cs", label="Entry System.Type.ToDescriptorKind()", span="22-22"];
m5_105 [cluster="System.Type.CreateEmptyArray()", file="SpecificationPropertyRules.cs", label="Entry System.Type.CreateEmptyArray()", span="81-81"];
m5_103 [cluster="System.Type.GetGenericArguments()", file="SpecificationPropertyRules.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m5_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m5_62 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="67-67"];
m5_47 [cluster="CommandLine.Core.Specification.IsOption()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m5_55 [cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="SpecificationPropertyRules.cs", label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", span="40-40"];
m5_63 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m5_39 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="SpecificationPropertyRules.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m5_68 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m5_43 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338"];
m5_52 [cluster="Unk.FromOptionSpecification", file="SpecificationPropertyRules.cs", label="Entry Unk.FromOptionSpecification", span=""];
m5_45 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="SpecificationPropertyRules.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m5_53 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="SpecificationPropertyRules.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m5_48 [cluster="Unk.MapValues", file="SpecificationPropertyRules.cs", label="Entry Unk.MapValues", span=""];
m5_0 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m5_1 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationPropertyRules.cs", label="return Build(\r\n                factory,\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.WithSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="18-30"];
m5_2 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m5_109 [file="SpecificationPropertyRules.cs", label="System.StringComparer", span=""];
m5_110 [file="SpecificationPropertyRules.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m5_111 [file="SpecificationPropertyRules.cs", label="System.StringComparer", span=""];
m5_112 [file="SpecificationPropertyRules.cs", label=optionSpecs, span=""];
m5_113 [file="SpecificationPropertyRules.cs", label="System.Globalization.CultureInfo", span=""];
m5_114 [file="SpecificationPropertyRules.cs", label=token, span=""];
m0_7 -> m0_8  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_11  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_9 -> m0_7  [color=blue, key=0, style=bold];
m0_18 -> m0_19  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_6  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_5 -> m0_3  [color=blue, key=0, style=bold];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_6  [key=2, style=dotted];
m0_11 -> m0_13  [key=2, style=dotted];
m0_11 -> m0_14  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_12 -> m0_10  [color=blue, key=0, style=bold];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=2, style=dotted];
m0_20 -> m0_18  [color=blue, key=0, style=bold];
m0_15 -> m0_16  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_19  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_17 -> m0_15  [color=blue, key=0, style=bold];
m0_34 -> m0_35  [color=green, key=0, style=solid];
m0_35 -> m0_36  [color=green, key=0, style=solid];
m0_36 -> m0_34  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_4  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m1_3 -> m1_19  [key=0, style=solid];
m1_3 -> m1_23  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m1_3 -> m1_95  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m1_3 -> m1_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_3 -> m1_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_3 -> m1_28  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", style=dashed];
m1_3 -> m1_30  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_3 -> m1_103  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_3 -> m1_31  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_3 -> m1_107  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_3 -> m1_32  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_3 -> m1_111  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_3 -> m1_33  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_3 -> m1_114  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_3 -> m1_37  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_46  [key=2, style=dotted];
m1_19 -> m1_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_19 -> m1_36  [color=darkseagreen4, key=1, label=typeInfo, style=dashed];
m1_19 -> m1_39  [color=darkseagreen4, key=1, label=typeInfo, style=dashed];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_27  [color=darkseagreen4, key=1, label=makeDefault, style=dashed];
m1_23 -> m1_23  [color=darkorchid, key=3, label="Local variable System.Func<T> makeDefault", style=bold];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_28  [key=0, style=solid];
m1_24 -> m1_50  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_51  [key=2, style=dotted];
m1_25 -> m1_52  [key=2, style=dotted];
m1_25 -> m1_27  [color=darkseagreen4, key=1, label=preprocessorErrors, style=dashed];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_56  [key=2, style=dotted];
m1_28 -> m1_43  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_58  [key=2, style=dotted];
m1_30 -> m1_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_30 -> m1_32  [color=darkseagreen4, key=1, label=partitions, style=dashed];
m1_30 -> m1_33  [color=darkseagreen4, key=1, label=partitions, style=dashed];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_59  [key=2, style=dotted];
m1_31 -> m1_60  [key=2, style=dotted];
m1_31 -> m1_31  [color=darkseagreen4, key=1, label=pt, style=dashed];
m1_31 -> m1_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_31 -> m1_34  [color=darkseagreen4, key=1, label=optionSpecPropsResult, style=dashed];
m1_31 -> m1_43  [color=darkseagreen4, key=1, label=optionSpecPropsResult, style=dashed];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_61  [key=2, style=dotted];
m1_32 -> m1_60  [key=2, style=dotted];
m1_32 -> m1_32  [color=darkseagreen4, key=1, label=pt, style=dashed];
m1_32 -> m1_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_32 -> m1_34  [color=darkseagreen4, key=1, label=valueSpecPropsResult, style=dashed];
m1_32 -> m1_43  [color=darkseagreen4, key=1, label=valueSpecPropsResult, style=dashed];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_62  [key=2, style=dotted];
m1_33 -> m1_63  [key=2, style=dotted];
m1_33 -> m1_64  [key=2, style=dotted];
m1_33 -> m1_33  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_33 -> m1_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_33 -> m1_114  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_33 -> m1_43  [color=darkseagreen4, key=1, label=missingValueErrors, style=dashed];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_67  [key=2, style=dotted];
m1_37 -> m1_46  [key=2, style=dotted];
m1_37 -> m1_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_47  [key=2, style=dotted];
m1_20 -> m1_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_20 -> m1_23  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m1_20 -> m1_95  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m1_20 -> m1_31  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m1_20 -> m1_32  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m1_20 -> m1_39  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_39  [key=0, style=solid];
m1_36 -> m1_66  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_69  [key=2, style=dotted];
m1_39 -> m1_70  [key=2, style=dotted];
m1_39 -> m1_39  [color=darkseagreen4, key=1, label=sp, style=dashed];
m1_39 -> m1_41  [color=darkseagreen4, key=1, label=ctor, style=dashed];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_21  [color=darkseagreen4, key=1, label=pt, style=dashed];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_48  [key=2, style=dotted];
m1_22 -> m1_49  [key=2, style=dotted];
m1_22 -> m1_28  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m1_22 -> m1_30  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m1_22 -> m1_103  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m1_22 -> m1_33  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m1_27 -> m1_45  [key=0, style=solid];
m1_27 -> m1_53  [key=2, style=dotted];
m1_27 -> m1_54  [key=2, style=dotted];
m1_27 -> m1_55  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_28  [key=0, style=solid];
m1_26 -> m1_50  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_57  [key=2, style=dotted];
m1_29 -> m1_42  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_78  [key=2, style=dotted];
m1_43 -> m1_79  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_76  [key=2, style=dotted];
m1_42 -> m1_77  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_57  [key=2, style=dotted];
m1_34 -> m1_65  [key=2, style=dotted];
m1_34 -> m1_38  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m1_34 -> m1_40  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m1_34 -> m1_42  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m1_35 -> m1_36  [key=0, style=solid];
m1_38 -> m1_42  [key=0, style=solid];
m1_38 -> m1_68  [key=2, style=dotted];
m1_38 -> m1_38  [color=darkseagreen4, key=1, label=instance, style=dashed];
m1_38 -> m1_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_38 -> m1_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_38 -> m1_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_38 -> m1_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_38 -> m1_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_38 -> m1_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_38 -> m1_44  [color=darkseagreen4, key=1, label=instance, style=dashed];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_71  [key=2, style=dotted];
m1_40 -> m1_72  [key=2, style=dotted];
m1_40 -> m1_73  [key=2, style=dotted];
m1_40 -> m1_74  [key=2, style=dotted];
m1_40 -> m1_46  [key=2, style=dotted];
m1_40 -> m1_69  [key=2, style=dotted];
m1_40 -> m1_40  [color=darkseagreen4, key=1, label=prms, style=dashed];
m1_40 -> m1_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_40 -> m1_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_75  [key=2, style=dotted];
m1_41 -> m1_44  [color=darkseagreen4, key=1, label=instance, style=dashed];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_80  [key=2, style=dotted];
m1_44 -> m1_81  [key=2, style=dotted];
m1_44 -> m1_55  [key=2, style=dotted];
m1_44 -> m1_82  [key=2, style=dotted];
m1_45 -> m1_3  [color=blue, key=0, style=bold];
m1_99 -> m1_100  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_9  [key=2, style=dotted];
m1_5 -> m1_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_14  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_10  [key=2, style=dotted];
m1_6 -> m1_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_18  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_4 -> m1_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_4 -> m1_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_11 -> m1_12  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_8 -> m1_4  [color=blue, key=0, style=bold];
m1_13 -> m1_11  [color=blue, key=0, style=bold];
m1_17 -> m1_15  [color=blue, key=0, style=bold];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_97  [key=2, style=dotted];
m1_95 -> m1_67  [key=2, style=dotted];
m1_95 -> m1_46  [key=2, style=dotted];
m1_95 -> m1_69  [key=2, style=dotted];
m1_95 -> m1_98  [key=2, style=dotted];
m1_95 -> m1_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_95 -> m1_95  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_105  [key=2, style=dotted];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_109  [key=2, style=dotted];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_109  [key=2, style=dotted];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_116  [key=2, style=dotted];
m1_83 -> m1_84  [key=0, style=solid];
m1_88 -> m1_89  [key=0, style=solid];
m1_102 -> m1_103  [key=0, style=solid];
m1_106 -> m1_107  [key=0, style=solid];
m1_110 -> m1_111  [key=0, style=solid];
m1_113 -> m1_114  [key=0, style=solid];
m1_117 -> m1_118  [key=0, style=solid];
m1_145 -> m1_146  [key=0, style=solid];
m1_148 -> m1_149  [key=0, style=solid];
m1_120 -> m1_121  [key=0, style=solid];
m1_124 -> m1_125  [key=0, style=solid];
m1_128 -> m1_129  [key=0, style=solid];
m1_132 -> m1_133  [key=0, style=solid];
m1_135 -> m1_136  [key=0, style=solid];
m1_139 -> m1_140  [key=0, style=solid];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_86  [key=2, style=dotted];
m1_84 -> m1_87  [key=2, style=dotted];
m1_85 -> m1_83  [color=blue, key=0, style=bold];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_91  [key=2, style=dotted];
m1_89 -> m1_92  [key=2, style=dotted];
m1_89 -> m1_93  [key=2, style=dotted];
m1_90 -> m1_88  [color=blue, key=0, style=bold];
m1_94 -> m1_95  [key=0, style=solid];
m1_96 -> m1_94  [color=blue, key=0, style=bold];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_86  [key=2, style=dotted];
m1_101 -> m1_99  [color=blue, key=0, style=bold];
m1_104 -> m1_102  [color=blue, key=0, style=bold];
m1_108 -> m1_106  [color=blue, key=0, style=bold];
m1_112 -> m1_110  [color=blue, key=0, style=bold];
m1_115 -> m1_113  [color=blue, key=0, style=bold];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_86  [key=2, style=dotted];
m1_119 -> m1_117  [color=blue, key=0, style=bold];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_123  [key=2, style=dotted];
m1_122 -> m1_120  [color=blue, key=0, style=bold];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_127  [key=2, style=dotted];
m1_126 -> m1_124  [color=blue, key=0, style=bold];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_131  [key=2, style=dotted];
m1_129 -> m1_123  [key=2, style=dotted];
m1_130 -> m1_128  [color=blue, key=0, style=bold];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_127  [key=2, style=dotted];
m1_134 -> m1_132  [color=blue, key=0, style=bold];
m1_136 -> m1_137  [key=0, style=solid];
m1_136 -> m1_131  [key=2, style=dotted];
m1_136 -> m1_138  [key=2, style=dotted];
m1_137 -> m1_135  [color=blue, key=0, style=bold];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_142  [key=2, style=dotted];
m1_140 -> m1_143  [key=2, style=dotted];
m1_140 -> m1_144  [key=2, style=dotted];
m1_141 -> m1_139  [color=blue, key=0, style=bold];
m1_146 -> m1_147  [key=0, style=solid];
m1_147 -> m1_145  [color=blue, key=0, style=bold];
m1_149 -> m1_150  [key=0, style=solid];
m1_150 -> m1_148  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_0 -> m1_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_0 -> m1_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_0 -> m1_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_0 -> m1_3  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<T> Build", style=bold];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1 -> m1_1  [color=darkorchid, key=3, label="method methodReturn RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error> ", style=bold];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_151 -> m1_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_151 -> m1_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_151 -> m1_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_151 -> m1_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_152 -> m1_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_152 -> m1_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_153 -> m1_95  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m1_154 -> m1_95  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m1_155 -> m1_103  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_155 -> m1_114  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_156 -> m1_103  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m1_157 -> m1_107  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_157 -> m1_111  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_158 -> m1_114  [color=darkseagreen4, key=1, label=token, style=dashed];
m2_0 -> m2_1  [key=0, style=solid];
m2_4 -> m2_10  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_1 -> m2_7  [key=2, style=dotted];
m2_1 -> m2_4  [color=darkseagreen4, key=1, label=writer, style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_13  [color=darkseagreen4, key=1, label=writer, style=dashed];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_9  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_11  [key=2, style=dotted];
m2_5 -> m2_3  [color=blue, key=0, style=bold];
m2_2 -> m2_8  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_13  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_6 -> m2_0  [color=blue, key=0, style=bold];
m2_6 -> m2_7  [key=0, style=solid];
m2_162 -> m2_163  [key=0, style=solid];
m2_173 -> m2_174  [color=green, key=0, style=solid];
m2_173 -> m2_45  [color=green, key=2, style=dotted];
m2_168 -> m2_173  [color=green, key=1, label=lines, style=dashed];
m2_168 -> m2_174  [color=green, key=1, label=lines, style=dashed];
m2_168 -> m2_175  [color=green, key=1, label=lines, style=dashed];
m2_168 -> m2_176  [color=green, key=1, label=lines, style=dashed];
m2_168 -> m2_169  [key=0, style=solid];
m2_168 -> m2_153  [key=2, style=dotted];
m2_168 -> m2_154  [key=2, style=dotted];
m2_168 -> m2_170  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_168 -> m2_171  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_168 -> m2_172  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_172 -> m2_173  [color=green, key=0, style=solid];
m2_172 -> m2_45  [key=2, style=dotted];
m2_174 -> m2_175  [color=green, key=0, style=solid];
m2_174 -> m2_45  [color=green, key=2, style=dotted];
m2_175 -> m2_176  [color=green, key=0, style=solid];
m2_175 -> m2_45  [color=green, key=2, style=dotted];
m2_176 -> m2_177  [color=green, key=0, style=solid];
m2_176 -> m2_45  [color=green, key=2, style=dotted];
m2_166 -> m2_168  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_166 -> m2_167  [key=0, style=solid];
m2_166 -> m2_10  [key=2, style=dotted];
m2_167 -> m2_168  [key=0, style=solid];
m2_167 -> m2_108  [key=2, style=dotted];
m2_167 -> m2_125  [key=2, style=dotted];
m2_169 -> m2_170  [key=0, style=solid];
m2_169 -> m2_108  [key=2, style=dotted];
m2_169 -> m2_155  [key=2, style=dotted];
m2_170 -> m2_45  [key=2, style=dotted];
m2_170 -> m2_171  [key=0, style=solid];
m2_171 -> m2_172  [key=0, style=solid];
m2_171 -> m2_45  [key=2, style=dotted];
m2_163 -> m2_166  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_7  [key=2, style=dotted];
m2_163 -> m2_179  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_165 -> m2_166  [key=0, style=solid];
m2_165 -> m2_33  [key=2, style=dotted];
m2_164 -> m2_165  [key=0, style=solid];
m2_164 -> m2_8  [key=2, style=dotted];
m2_164 -> m2_179  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m2_177 -> m2_162  [color=blue, key=0, style=bold];
m2_100 -> m2_101  [key=0, style=solid];
m2_105 -> m2_108  [key=2, style=dotted];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_110  [key=2, style=dotted];
m2_105 -> m2_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_104 -> m2_108  [key=2, style=dotted];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_109  [key=2, style=dotted];
m2_104 -> m2_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_101 -> m2_105  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_107  [key=2, style=dotted];
m2_101 -> m2_115  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m2_103 -> m2_105  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_9  [key=2, style=dotted];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_44  [key=2, style=dotted];
m2_106 -> m2_100  [color=blue, key=0, style=bold];
m2_8 -> m2_6  [color=blue, key=0, style=bold];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_41  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m2_38 -> m2_42  [color=darkseagreen4, key=1, label="System.Func<int, int, bool>", style=dashed];
m2_38 -> m2_43  [key=2, style=dotted];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_44  [key=2, style=dotted];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_43  [key=0, style=solid];
m2_41 -> m2_36  [key=2, style=dotted];
m2_41 -> m2_45  [key=2, style=dotted];
m2_42 -> m2_44  [key=0, style=solid];
m2_42 -> m2_45  [key=2, style=dotted];
m2_42 -> m2_37  [color=blue, key=0, style=bold];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_9  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_44 -> m2_38  [color=blue, key=0, style=bold];
m2_35 -> m2_36  [key=0, style=solid];
m2_118 -> m2_119  [key=0, style=solid];
m2_122 -> m2_10  [key=2, style=dotted];
m2_122 -> m2_123  [key=0, style=solid];
m2_123 -> m2_108  [key=2, style=dotted];
m2_123 -> m2_125  [key=2, style=dotted];
m2_123 -> m2_124  [key=0, style=solid];
m2_119 -> m2_7  [key=2, style=dotted];
m2_119 -> m2_122  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_127  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_9  [key=2, style=dotted];
m2_120 -> m2_8  [key=2, style=dotted];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_127  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m2_124 -> m2_118  [color=blue, key=0, style=bold];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_14  [key=0, style=solid];
m2_11 -> m2_19  [color=darkseagreen4, key=1, label=guard, style=dashed];
m2_11 -> m2_13  [color=darkseagreen4, key=1, label=guard, style=dashed];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_48  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m2_46 -> m2_49  [color=darkseagreen4, key=1, label="System.Func<int, bool>", style=dashed];
m2_50 -> m2_45  [key=2, style=dotted];
m2_50 -> m2_51  [key=0, style=solid];
m2_47 -> m2_50  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_52  [key=2, style=dotted];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_9  [key=2, style=dotted];
m2_49 -> m2_51  [key=0, style=solid];
m2_49 -> m2_21  [key=2, style=dotted];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_8  [key=2, style=dotted];
m2_48 -> m2_54  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m2_48 -> m2_50  [key=0, style=solid];
m2_48 -> m2_36  [key=2, style=dotted];
m2_51 -> m2_46  [color=blue, key=0, style=bold];
m2_37 -> m2_38  [key=0, style=solid];
m2_33 -> m2_22  [color=blue, key=0, style=bold];
m2_17 -> m2_8  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_24  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_29  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m2_16 -> m2_7  [key=2, style=dotted];
m2_16 -> m2_19  [color=darkseagreen4, key=1, label=writer, style=dashed];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_24  [color=darkseagreen4, key=1, label=writer, style=dashed];
m2_21 -> m2_15  [color=blue, key=0, style=bold];
m2_83 -> m2_84  [key=0, style=solid];
m2_88 -> m2_45  [key=2, style=dotted];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_84 -> m2_88  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_79  [key=2, style=dotted];
m2_86 -> m2_88  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_33  [key=2, style=dotted];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_64  [key=2, style=dotted];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_44  [key=2, style=dotted];
m2_89 -> m2_83  [color=blue, key=0, style=bold];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m2_10 -> m2_14  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_11  [key=0, style=solid];
m2_12 -> m2_16  [key=2, style=dotted];
m2_12 -> m2_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_12  [color=blue, key=0, style=bold];
m2_13 -> m2_15  [key=0, style=solid];
m2_13 -> m2_17  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid];
m2_15 -> m2_10  [color=blue, key=0, style=bold];
m2_15 -> m2_16  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_9  [key=2, style=dotted];
m2_56 -> m2_57  [key=0, style=solid];
m2_61 -> m2_45  [key=2, style=dotted];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_57 -> m2_61  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_63  [key=2, style=dotted];
m2_57 -> m2_52  [color=blue, key=0, style=bold];
m2_59 -> m2_61  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_22  [key=2, style=dotted];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_64  [key=2, style=dotted];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_8  [key=2, style=dotted];
m2_58 -> m2_66  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m2_58 -> m2_19  [color=darkseagreen4, key=1, label=guard, style=dashed];
m2_62 -> m2_56  [color=blue, key=0, style=bold];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_26  [key=0, style=solid];
m2_23 -> m2_34  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_32  [key=0, style=solid];
m2_29 -> m2_36  [key=2, style=dotted];
m2_29 -> m2_31  [color=darkseagreen4, key=1, label=max, style=dashed];
m2_29 -> m2_33  [key=2, style=dotted];
m2_24 -> m2_25  [key=0, style=solid];
m2_26 -> m2_27  [key=0, style=solid];
m2_25 -> m2_33  [key=0, style=solid];
m2_25 -> m2_35  [key=2, style=dotted];
m2_25 -> m2_23  [color=blue, key=0, style=bold];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_7  [key=2, style=dotted];
m2_27 -> m2_30  [color=darkseagreen4, key=1, label=writer, style=dashed];
m2_27 -> m2_35  [color=darkseagreen4, key=1, label=writer, style=dashed];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_8  [key=2, style=dotted];
m2_28 -> m2_35  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_32  [key=0, style=solid];
m2_30 -> m2_10  [key=2, style=dotted];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_37  [key=2, style=dotted];
m2_32 -> m2_26  [color=blue, key=0, style=bold];
m2_31 -> m2_33  [key=0, style=solid];
m2_31 -> m2_35  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_11  [key=2, style=dotted];
m2_129 -> m2_130  [key=0, style=solid];
m2_134 -> m2_108  [key=2, style=dotted];
m2_134 -> m2_135  [key=0, style=solid];
m2_134 -> m2_110  [key=2, style=dotted];
m2_134 -> m2_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_133 -> m2_108  [key=2, style=dotted];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_109  [key=2, style=dotted];
m2_133 -> m2_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_130 -> m2_134  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m2_130 -> m2_131  [key=0, style=solid];
m2_130 -> m2_136  [key=2, style=dotted];
m2_130 -> m2_141  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m2_132 -> m2_134  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_132 -> m2_133  [key=0, style=solid];
m2_132 -> m2_9  [key=2, style=dotted];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_44  [key=2, style=dotted];
m2_135 -> m2_129  [color=blue, key=0, style=bold];
m2_181 -> m2_182  [key=0, style=solid];
m2_191 -> m2_192  [color=green, key=0, style=solid];
m2_191 -> m2_45  [color=green, key=2, style=dotted];
m2_187 -> m2_191  [color=green, key=1, label=lines, style=dashed];
m2_187 -> m2_192  [color=green, key=1, label=lines, style=dashed];
m2_187 -> m2_193  [color=green, key=1, label=lines, style=dashed];
m2_187 -> m2_188  [key=0, style=solid];
m2_187 -> m2_153  [key=2, style=dotted];
m2_187 -> m2_154  [key=2, style=dotted];
m2_187 -> m2_189  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_187 -> m2_190  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_190 -> m2_191  [color=green, key=0, style=solid];
m2_190 -> m2_45  [key=2, style=dotted];
m2_192 -> m2_193  [color=green, key=0, style=solid];
m2_192 -> m2_45  [color=green, key=2, style=dotted];
m2_193 -> m2_194  [color=green, key=0, style=solid];
m2_193 -> m2_45  [color=green, key=2, style=dotted];
m2_189 -> m2_45  [key=2, style=dotted];
m2_189 -> m2_190  [key=0, style=solid];
m2_185 -> m2_187  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_185 -> m2_186  [key=0, style=solid];
m2_185 -> m2_10  [key=2, style=dotted];
m2_186 -> m2_187  [key=0, style=solid];
m2_186 -> m2_108  [key=2, style=dotted];
m2_186 -> m2_125  [key=2, style=dotted];
m2_188 -> m2_189  [key=0, style=solid];
m2_188 -> m2_108  [key=2, style=dotted];
m2_188 -> m2_155  [key=2, style=dotted];
m2_182 -> m2_185  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_182 -> m2_183  [key=0, style=solid];
m2_182 -> m2_7  [key=2, style=dotted];
m2_182 -> m2_196  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_184 -> m2_185  [key=0, style=solid];
m2_184 -> m2_33  [key=2, style=dotted];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_8  [key=2, style=dotted];
m2_183 -> m2_196  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m2_194 -> m2_181  [color=blue, key=0, style=bold];
m2_208 -> m2_209  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_21  [key=2, style=dotted];
m2_19 -> m2_10  [key=2, style=dotted];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_22  [key=2, style=dotted];
m2_20 -> m2_18  [color=blue, key=0, style=bold];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_11  [key=2, style=dotted];
m2_68 -> m2_69  [key=0, style=solid];
m2_80 -> m2_81  [key=0, style=solid];
m2_90 -> m2_91  [key=0, style=solid];
m2_179 -> m2_180  [key=0, style=solid];
m2_70 -> m2_68  [color=blue, key=0, style=bold];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_71  [key=2, style=dotted];
m2_82 -> m2_80  [color=blue, key=0, style=bold];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_71  [key=2, style=dotted];
m2_92 -> m2_90  [color=blue, key=0, style=bold];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_71  [key=2, style=dotted];
m2_196 -> m2_197  [key=0, style=solid];
m2_178 -> m2_179  [key=0, style=solid];
m2_180 -> m2_178  [color=blue, key=0, style=bold];
m2_114 -> m2_115  [key=0, style=solid];
m2_111 -> m2_112  [key=0, style=solid];
m2_140 -> m2_141  [key=0, style=solid];
m2_137 -> m2_138  [key=0, style=solid];
m2_159 -> m2_160  [key=0, style=solid];
m2_211 -> m2_212  [key=0, style=solid];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_56  [key=0, style=solid];
m2_54 -> m2_36  [key=2, style=dotted];
m2_66 -> m2_67  [key=0, style=solid];
m2_195 -> m2_196  [key=0, style=solid];
m2_197 -> m2_195  [color=blue, key=0, style=bold];
m2_127 -> m2_128  [key=0, style=solid];
m2_157 -> m2_158  [key=0, style=solid];
m2_209 -> m2_210  [key=0, style=solid];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_117  [key=2, style=dotted];
m2_116 -> m2_114  [color=blue, key=0, style=bold];
m2_113 -> m2_111  [color=blue, key=0, style=bold];
m2_112 -> m2_113  [key=0, style=solid];
m2_141 -> m2_142  [key=0, style=solid];
m2_141 -> m2_117  [key=2, style=dotted];
m2_142 -> m2_140  [color=blue, key=0, style=bold];
m2_139 -> m2_137  [color=blue, key=0, style=bold];
m2_138 -> m2_139  [key=0, style=solid];
m2_161 -> m2_159  [color=blue, key=0, style=bold];
m2_160 -> m2_161  [key=0, style=solid];
m2_213 -> m2_211  [color=blue, key=0, style=bold];
m2_212 -> m2_213  [key=0, style=solid];
m2_53 -> m2_54  [key=0, style=solid];
m2_55 -> m2_53  [color=blue, key=0, style=bold];
m2_55 -> m2_57  [key=0, style=solid];
m2_55 -> m2_21  [key=2, style=dotted];
m2_65 -> m2_66  [key=0, style=solid];
m2_67 -> m2_65  [color=blue, key=0, style=bold];
m2_34 -> m2_35  [key=0, style=solid];
m2_36 -> m2_34  [color=blue, key=0, style=bold];
m2_126 -> m2_127  [key=0, style=solid];
m2_128 -> m2_126  [color=blue, key=0, style=bold];
m2_156 -> m2_157  [key=0, style=solid];
m2_158 -> m2_156  [color=blue, key=0, style=bold];
m2_210 -> m2_208  [color=blue, key=0, style=bold];
m2_143 -> m2_144  [key=0, style=solid];
m2_149 -> m2_153  [key=2, style=dotted];
m2_149 -> m2_154  [key=2, style=dotted];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_151  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_147 -> m2_10  [key=2, style=dotted];
m2_147 -> m2_149  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_147 -> m2_148  [key=0, style=solid];
m2_148 -> m2_108  [key=2, style=dotted];
m2_148 -> m2_125  [key=2, style=dotted];
m2_148 -> m2_149  [key=0, style=solid];
m2_150 -> m2_108  [key=2, style=dotted];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_109  [key=2, style=dotted];
m2_150 -> m2_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_151 -> m2_108  [key=2, style=dotted];
m2_151 -> m2_155  [key=2, style=dotted];
m2_151 -> m2_152  [key=0, style=solid];
m2_144 -> m2_7  [key=2, style=dotted];
m2_144 -> m2_147  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_144 -> m2_145  [key=0, style=solid];
m2_144 -> m2_157  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_146 -> m2_147  [key=0, style=solid];
m2_146 -> m2_9  [key=2, style=dotted];
m2_145 -> m2_8  [key=2, style=dotted];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_157  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m2_152 -> m2_143  [color=blue, key=0, style=bold];
m2_93 -> m2_94  [key=0, style=solid];
m2_97 -> m2_45  [key=2, style=dotted];
m2_97 -> m2_98  [key=0, style=solid];
m2_94 -> m2_97  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_99  [key=2, style=dotted];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_9  [key=2, style=dotted];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_44  [key=2, style=dotted];
m2_98 -> m2_93  [color=blue, key=0, style=bold];
m2_72 -> m2_73  [key=0, style=solid];
m2_77 -> m2_45  [key=2, style=dotted];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_73 -> m2_77  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_79  [key=2, style=dotted];
m2_75 -> m2_77  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_22  [key=2, style=dotted];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_64  [key=2, style=dotted];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_44  [key=2, style=dotted];
m2_78 -> m2_72  [color=blue, key=0, style=bold];
m2_198 -> m2_199  [key=0, style=solid];
m2_198 -> m2_201  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_204 -> m2_153  [key=2, style=dotted];
m2_204 -> m2_154  [key=2, style=dotted];
m2_204 -> m2_205  [key=0, style=solid];
m2_204 -> m2_206  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_202 -> m2_10  [key=2, style=dotted];
m2_202 -> m2_204  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_202 -> m2_203  [key=0, style=solid];
m2_203 -> m2_108  [key=2, style=dotted];
m2_203 -> m2_125  [key=2, style=dotted];
m2_203 -> m2_204  [key=0, style=solid];
m2_205 -> m2_108  [key=2, style=dotted];
m2_205 -> m2_206  [key=0, style=solid];
m2_205 -> m2_109  [key=2, style=dotted];
m2_205 -> m2_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_206 -> m2_108  [key=2, style=dotted];
m2_206 -> m2_155  [key=2, style=dotted];
m2_206 -> m2_207  [key=0, style=solid];
m2_199 -> m2_7  [key=2, style=dotted];
m2_199 -> m2_202  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_199 -> m2_200  [key=0, style=solid];
m2_199 -> m2_209  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_201 -> m2_33  [key=2, style=dotted];
m2_201 -> m2_202  [key=0, style=solid];
m2_200 -> m2_8  [key=2, style=dotted];
m2_200 -> m2_201  [key=0, style=solid];
m2_200 -> m2_209  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m2_207 -> m2_198  [color=blue, key=0, style=bold];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_54  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m2_52 -> m2_55  [color=darkseagreen4, key=1, label="System.Func<int, bool>", style=dashed];
m2_221 -> m2_179  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_222 -> m2_196  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_214 -> m2_13  [color=darkseagreen4, key=1, label=writer, style=dashed];
m2_215 -> m2_24  [color=darkseagreen4, key=1, label=writer, style=dashed];
m2_216 -> m2_35  [color=darkseagreen4, key=1, label=writer, style=dashed];
m2_218 -> m2_127  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_220 -> m2_157  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_223 -> m2_209  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_217 -> m2_115  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m2_219 -> m2_141  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m3_12 -> m3_10  [color=blue, key=0, style=bold];
m3_51 -> m3_52  [key=0, style=solid];
m3_53 -> m3_8  [key=2, style=dotted];
m3_53 -> m3_9  [key=2, style=dotted];
m3_53 -> m3_54  [key=0, style=solid];
m3_56 -> m3_11  [key=2, style=dotted];
m3_56 -> m3_13  [key=2, style=dotted];
m3_56 -> m3_57  [key=0, style=solid];
m3_57 -> m3_11  [key=2, style=dotted];
m3_57 -> m3_13  [key=2, style=dotted];
m3_57 -> m3_58  [key=0, style=solid];
m3_58 -> m3_11  [key=2, style=dotted];
m3_58 -> m3_13  [key=2, style=dotted];
m3_58 -> m3_59  [key=0, style=solid];
m3_55 -> m3_11  [key=2, style=dotted];
m3_55 -> m3_12  [key=2, style=dotted];
m3_55 -> m3_56  [key=0, style=solid];
m3_54 -> m3_10  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_56  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_52 -> m3_57  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_52 -> m3_58  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_52 -> m3_54  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_52 -> m3_50  [key=2, style=dotted];
m3_59 -> m3_51  [color=blue, key=0, style=bold];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_17  [key=0, style=solid];
m3_14 -> m3_19  [key=0, style=solid];
m3_14 -> m3_21  [key=0, style=solid];
m3_14 -> m3_24  [key=0, style=solid];
m3_14 -> m3_26  [key=0, style=solid];
m3_14 -> m3_29  [key=0, style=solid];
m3_14 -> m3_32  [key=0, style=solid];
m3_14 -> m3_34  [key=0, style=solid];
m3_16 -> m3_7  [key=2, style=dotted];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_36  [key=0, style=solid];
m3_15 -> m3_8  [key=2, style=dotted];
m3_15 -> m3_9  [key=2, style=dotted];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_17  [color=darkseagreen4, key=1, label=parser, style=dashed];
m3_18 -> m3_11  [key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_20  [key=2, style=dotted];
m3_18 -> m3_36  [key=0, style=solid];
m3_17 -> m3_10  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_19 -> m3_14  [color=blue, key=0, style=bold];
m3_19 -> m3_20  [key=0, style=solid];
m3_8 -> m3_9  [key=0, style=solid];
m3_0 -> m3_1  [color=green, key=0, style=solid];
m3_1 -> m3_2  [color=green, key=0, style=solid];
m3_1 -> m3_7  [color=green, key=2, style=dotted];
m3_1 -> m3_3  [color=green, key=1, label=options, style=dashed];
m3_1 -> m3_5  [color=green, key=1, label=options, style=dashed];
m3_2 -> m3_3  [color=green, key=0, style=solid];
m3_2 -> m3_8  [color=green, key=2, style=dotted];
m3_2 -> m3_9  [color=green, key=2, style=dotted];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_10  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_11  [key=2, style=dotted];
m3_5 -> m3_13  [key=2, style=dotted];
m3_5 -> m3_14  [color=darkorchid, key=3, label="Property variable System.Func<string> RequiredWord", style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_11  [key=2, style=dotted];
m3_4 -> m3_12  [key=2, style=dotted];
m3_6 -> m3_0  [color=blue, key=0, style=bold];
m3_6 -> m3_4  [color=blue, key=0, style=bold];
m3_38 -> m3_39  [key=0, style=solid];
m3_21 -> m3_22  [key=0, style=solid];
m3_22 -> m3_7  [key=2, style=dotted];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_24  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_22 -> m3_26  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_22 -> m3_27  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_22 -> m3_25  [color=darkorchid, key=3, label="Property variable System.Func<bool, string> HelpCommandText", style=bold];
m3_23 -> m3_8  [key=2, style=dotted];
m3_23 -> m3_9  [key=2, style=dotted];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_36  [key=0, style=solid];
m3_26 -> m3_11  [key=2, style=dotted];
m3_26 -> m3_13  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_27 -> m3_11  [key=2, style=dotted];
m3_27 -> m3_13  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_25 -> m3_11  [key=2, style=dotted];
m3_25 -> m3_12  [key=2, style=dotted];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_36  [key=0, style=solid];
m3_24 -> m3_10  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_28 -> m3_21  [color=blue, key=0, style=bold];
m3_28 -> m3_36  [key=0, style=solid];
m3_9 -> m3_7  [color=blue, key=0, style=bold];
m3_10 -> m3_11  [key=0, style=solid];
m3_37 -> m3_36  [key=0, style=solid];
m3_37 -> m3_38  [key=2, style=dotted];
m3_20 -> m3_36  [key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_16  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_13 -> m3_18  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_13 -> m3_20  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_13 -> m3_22  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_13 -> m3_25  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_13 -> m3_27  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_13 -> m3_30  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_13 -> m3_33  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_13 -> m3_13  [color=darkorchid, key=3, label="method methodReturn string ", style=bold];
m3_7 -> m3_8  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_34  [color=green, key=1, label=options, style=dashed];
m3_30 -> m3_35  [color=green, key=1, label=options, style=dashed];
m3_30 -> m3_37  [key=2, style=dotted];
m3_30 -> m3_32  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_33 -> m3_36  [key=0, style=solid];
m3_33 -> m3_34  [color=green, key=0, style=solid];
m3_33 -> m3_11  [color=green, key=2, style=dotted];
m3_33 -> m3_12  [color=green, key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_32  [color=darkorchid, key=3, label="Property variable System.Func<CommandLine.Error, string> FormatError", style=bold];
m3_32 -> m3_33  [color=green, key=0, style=solid];
m3_32 -> m3_10  [key=2, style=dotted];
m3_32 -> m3_53  [color=darkorchid, key=3, label="method methodReturn string ", style=bold];
m3_34 -> m3_35  [color=green, key=0, style=solid];
m3_34 -> m3_11  [color=green, key=2, style=dotted];
m3_34 -> m3_13  [color=green, key=2, style=dotted];
m3_31 -> m3_36  [key=0, style=solid];
m3_31 -> m3_8  [key=2, style=dotted];
m3_31 -> m3_9  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_35 -> m3_36  [color=green, key=0, style=solid];
m3_35 -> m3_11  [color=green, key=2, style=dotted];
m3_35 -> m3_13  [color=green, key=2, style=dotted];
m3_36 -> m3_13  [color=blue, key=0, style=bold];
m3_36 -> m3_29  [color=blue, key=0, style=bold];
m3_44 -> m3_45  [key=0, style=solid];
m3_46 -> m3_8  [key=2, style=dotted];
m3_46 -> m3_9  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_48 -> m3_11  [key=2, style=dotted];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_20  [key=2, style=dotted];
m3_47 -> m3_10  [key=2, style=dotted];
m3_47 -> m3_48  [key=0, style=solid];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_47  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_45 -> m3_50  [key=2, style=dotted];
m3_49 -> m3_44  [color=blue, key=0, style=bold];
m3_39 -> m3_8  [key=2, style=dotted];
m3_39 -> m3_9  [key=2, style=dotted];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_41  [color=darkseagreen4, key=1, label=parser, style=dashed];
m3_42 -> m3_11  [key=2, style=dotted];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_20  [key=2, style=dotted];
m3_41 -> m3_10  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_40 -> m3_37  [key=2, style=dotted];
m3_40 -> m3_41  [key=0, style=solid];
m3_43 -> m3_38  [color=blue, key=0, style=bold];
m5_3 -> m5_19  [key=0, style=solid];
m5_3 -> m5_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m5_3 -> m5_24  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>", style=dashed];
m5_3 -> m5_26  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_3 -> m5_66  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_3 -> m5_27  [color=red, key=1, label="System.StringComparer", style=dashed];
m5_3 -> m5_70  [color=red, key=1, label="System.Globalization.CultureInfo", style=dashed];
m5_3 -> m5_28  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m5_3 -> m5_74  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m5_3 -> m5_29  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_3 -> m5_77  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_35  [key=2, style=dotted];
m5_19 -> m5_23  [color=darkseagreen4, key=1, label=instance, style=dashed];
m5_19 -> m5_31  [color=red, key=1, label=instance, style=dashed];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_24  [key=0, style=solid];
m5_22 -> m5_40  [key=2, style=dotted];
m5_22 -> m5_41  [key=2, style=dotted];
m5_22 -> m5_42  [key=2, style=dotted];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_45  [key=2, style=dotted];
m5_24 -> m5_33  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m5_26 -> m5_27  [color=red, key=0, style=solid];
m5_26 -> m5_46  [key=2, style=dotted];
m5_26 -> m5_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_26 -> m5_28  [color=darkseagreen4, key=1, label=partitions, style=dashed];
m5_26 -> m5_29  [color=darkseagreen4, key=1, label=partitions, style=dashed];
m5_27 -> m5_28  [color=red, key=0, style=solid];
m5_27 -> m5_47  [color=red, key=2, style=dotted];
m5_27 -> m5_48  [color=red, key=2, style=dotted];
m5_27 -> m5_27  [color=red, key=1, label=pt, style=dashed];
m5_27 -> m5_69  [color=red, key=1, label="lambda expression", style=dashed];
m5_27 -> m5_30  [color=red, key=1, label=optionSpecProps, style=dashed];
m5_27 -> m5_33  [color=red, key=1, label=optionSpecProps, style=dashed];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_49  [key=2, style=dotted];
m5_28 -> m5_48  [key=2, style=dotted];
m5_28 -> m5_28  [color=darkseagreen4, key=1, label=pt, style=dashed];
m5_28 -> m5_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_28 -> m5_30  [color=darkseagreen4, key=1, label=valueSpecProps, style=dashed];
m5_28 -> m5_33  [color=darkseagreen4, key=1, label=valueSpecProps, style=dashed];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_50  [key=2, style=dotted];
m5_29 -> m5_51  [key=2, style=dotted];
m5_29 -> m5_52  [key=2, style=dotted];
m5_29 -> m5_29  [color=darkseagreen4, key=1, label=token, style=dashed];
m5_29 -> m5_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_29 -> m5_77  [color=darkseagreen4, key=1, label=token, style=dashed];
m5_29 -> m5_33  [color=darkseagreen4, key=1, label=missingValueErrors, style=dashed];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_36  [key=2, style=dotted];
m5_20 -> m5_37  [key=2, style=dotted];
m5_20 -> m5_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_20 -> m5_27  [color=red, key=1, label=specProps, style=dashed];
m5_20 -> m5_28  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m5_23 -> m5_34  [key=0, style=solid];
m5_23 -> m5_43  [key=2, style=dotted];
m5_23 -> m5_44  [key=2, style=dotted];
m5_31 -> m5_32  [color=red, key=0, style=solid];
m5_31 -> m5_54  [color=red, key=2, style=dotted];
m5_31 -> m5_31  [color=red, key=1, label=instance, style=dashed];
m5_31 -> m5_80  [color=red, key=1, label="lambda expression", style=dashed];
m5_31 -> m5_84  [color=red, key=1, label="lambda expression", style=dashed];
m5_31 -> m5_88  [color=red, key=1, label="lambda expression", style=dashed];
m5_31 -> m5_92  [color=red, key=1, label="lambda expression", style=dashed];
m5_31 -> m5_95  [color=red, key=1, label="lambda expression", style=dashed];
m5_31 -> m5_100  [color=red, key=1, label="lambda expression", style=dashed];
m5_31 -> m5_33  [color=red, key=1, label=instance, style=dashed];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_38  [key=2, style=dotted];
m5_21 -> m5_39  [key=2, style=dotted];
m5_21 -> m5_21  [color=darkseagreen4, key=1, label=pt, style=dashed];
m5_21 -> m5_24  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m5_21 -> m5_26  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m5_21 -> m5_66  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m5_21 -> m5_29  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m5_25 -> m5_26  [key=0, style=solid];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_57  [key=2, style=dotted];
m5_33 -> m5_58  [key=2, style=dotted];
m5_30 -> m5_31  [color=red, key=0, style=solid];
m5_30 -> m5_53  [key=2, style=dotted];
m5_30 -> m5_32  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_55  [key=2, style=dotted];
m5_32 -> m5_39  [key=2, style=dotted];
m5_32 -> m5_56  [key=2, style=dotted];
m5_32 -> m5_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_34 -> m5_3  [color=blue, key=0, style=bold];
m5_106 -> m5_107  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_9  [key=2, style=dotted];
m5_5 -> m5_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_14  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_10  [key=2, style=dotted];
m5_6 -> m5_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_18  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m5_4 -> m5_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m5_4 -> m5_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m5_11 -> m5_12  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_15 -> m5_16  [key=0, style=solid];
m5_8 -> m5_4  [color=blue, key=0, style=bold];
m5_13 -> m5_11  [color=blue, key=0, style=bold];
m5_17 -> m5_15  [color=blue, key=0, style=bold];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_68  [key=2, style=dotted];
m5_70 -> m5_71  [color=red, key=0, style=solid];
m5_70 -> m5_72  [color=red, key=2, style=dotted];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_72  [key=2, style=dotted];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_79  [key=2, style=dotted];
m5_59 -> m5_60  [key=0, style=solid];
m5_65 -> m5_66  [key=0, style=solid];
m5_69 -> m5_70  [color=red, key=0, style=solid];
m5_73 -> m5_74  [key=0, style=solid];
m5_76 -> m5_77  [key=0, style=solid];
m5_80 -> m5_81  [key=0, style=solid];
m5_84 -> m5_85  [key=0, style=solid];
m5_88 -> m5_89  [key=0, style=solid];
m5_92 -> m5_93  [key=0, style=solid];
m5_95 -> m5_96  [key=0, style=solid];
m5_100 -> m5_101  [key=0, style=solid];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_62  [key=2, style=dotted];
m5_60 -> m5_63  [key=2, style=dotted];
m5_60 -> m5_64  [key=2, style=dotted];
m5_61 -> m5_59  [color=blue, key=0, style=bold];
m5_67 -> m5_65  [color=blue, key=0, style=bold];
m5_71 -> m5_69  [color=blue, key=0, style=bold];
m5_75 -> m5_73  [color=blue, key=0, style=bold];
m5_78 -> m5_76  [color=blue, key=0, style=bold];
m5_81 -> m5_82  [key=0, style=solid];
m5_81 -> m5_83  [key=2, style=dotted];
m5_82 -> m5_80  [color=blue, key=0, style=bold];
m5_85 -> m5_86  [key=0, style=solid];
m5_85 -> m5_87  [key=2, style=dotted];
m5_86 -> m5_84  [color=blue, key=0, style=bold];
m5_89 -> m5_90  [key=0, style=solid];
m5_89 -> m5_91  [key=2, style=dotted];
m5_89 -> m5_83  [key=2, style=dotted];
m5_90 -> m5_88  [color=blue, key=0, style=bold];
m5_93 -> m5_94  [key=0, style=solid];
m5_93 -> m5_87  [key=2, style=dotted];
m5_94 -> m5_92  [color=blue, key=0, style=bold];
m5_96 -> m5_97  [key=0, style=solid];
m5_96 -> m5_91  [key=2, style=dotted];
m5_96 -> m5_98  [key=2, style=dotted];
m5_96 -> m5_99  [key=2, style=dotted];
m5_97 -> m5_95  [color=blue, key=0, style=bold];
m5_101 -> m5_102  [key=0, style=solid];
m5_101 -> m5_103  [key=2, style=dotted];
m5_101 -> m5_104  [key=2, style=dotted];
m5_101 -> m5_105  [key=2, style=dotted];
m5_102 -> m5_100  [color=blue, key=0, style=bold];
m5_107 -> m5_108  [key=0, style=solid];
m5_108 -> m5_106  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_0 -> m5_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_0 -> m5_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_0 -> m5_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_1 -> m5_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_109 -> m5_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_109 -> m5_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_109 -> m5_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_109 -> m5_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_110 -> m5_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m5_110 -> m5_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m5_111 -> m5_66  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_111 -> m5_77  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_112 -> m5_66  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m5_113 -> m5_70  [color=red, key=1, label="System.Globalization.CultureInfo", style=dashed];
m5_113 -> m5_74  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m5_114 -> m5_77  [color=darkseagreen4, key=1, label=token, style=dashed];
}
