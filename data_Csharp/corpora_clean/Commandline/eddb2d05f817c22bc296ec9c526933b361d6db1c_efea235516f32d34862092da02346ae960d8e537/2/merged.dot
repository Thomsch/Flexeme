digraph  {
n9 [label=t, span=""];
n0 [label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11", cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)"];
n1 [label="return from t in tokens\r\n                   where typeLookup(t.Text).Return(info => t.IsName() && info.Tag == TypeDescriptorKind.Boolean, false)\r\n                   select t;", span="15-17", cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)"];
n2 [label="Exit CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11", cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)"];
n3 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)"];
n4 [label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="100-100", cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)"];
n5 [label="Entry lambda expression", span="16-16", cluster="lambda expression"];
n6 [label="t.IsName() && info.Tag == TypeDescriptorKind.Boolean", span="16-16", cluster="lambda expression"];
n7 [label="Exit lambda expression", span="16-16", cluster="lambda expression"];
n8 [label="Entry CommandLine.Core.Token.IsName()", span="68-68", cluster="CommandLine.Core.Token.IsName()"];
m1_19 [label="Entry System.Text.StringBuilder.AppendFormat(string, params object[])", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, params object[])", file="StringBuilderExtensions.cs"];
m1_47 [label="Entry CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", span="87-87", cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", file="StringBuilderExtensions.cs"];
m1_48 [label="builder.Length > 0", span="89-89", cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", color=green, community=0, file="StringBuilderExtensions.cs"];
m1_49 [label="builder[builder.Length - 1] == c", span="90-90", cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", color=green, community=0, file="StringBuilderExtensions.cs"];
m1_51 [label="return builder;", span="92-92", cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", color=green, community=0, file="StringBuilderExtensions.cs"];
m1_50 [label="builder.Remove(builder.Length - 1, 1)", span="91-91", cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", color=green, community=0, file="StringBuilderExtensions.cs"];
m1_52 [label="Exit CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", span="87-87", cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", file="StringBuilderExtensions.cs"];
m1_14 [label="Entry CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", span="33-33", cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="StringBuilderExtensions.cs"];
m1_16 [label="builder.AppendFormat(format, args)", span="37-37", cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", color=green, community=0, file="StringBuilderExtensions.cs"];
m1_15 [label=condition, span="35-35", cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="StringBuilderExtensions.cs"];
m1_17 [label="return builder;", span="39-39", cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", color=green, community=0, file="StringBuilderExtensions.cs"];
m1_18 [label="Exit CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", span="33-33", cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="StringBuilderExtensions.cs"];
m1_13 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="StringBuilderExtensions.cs"];
m1_7 [label="Entry CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", span="21-21", cluster="CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="StringBuilderExtensions.cs"];
m1_8 [label="builder == null", span="23-23", cluster="CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", color=green, community=1, file="StringBuilderExtensions.cs"];
m1_9 [label="return string.Empty;", span="25-25", cluster="CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", color=red, community=0];
m1_11 [label="Exit CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", span="21-21", cluster="CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", color=green, community=0, file="StringBuilderExtensions.cs"];
m1_10 [label="return builder.ToString();", span="27-27", cluster="CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", color=red, community=0];
m1_12 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="StringBuilderExtensions.cs"];
m1_46 [label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0", cluster="System.Text.StringBuilder.Remove(int, int)", file="StringBuilderExtensions.cs"];
m1_30 [label="Entry CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", span="59-59", cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs"];
m1_34 [label="return builder;", span="68-68", cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", color=green, community=0, file="StringBuilderExtensions.cs"];
m1_31 [label=values, span="61-61", cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs"];
m1_33 [label="builder.Append(value)", span="65-65", cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs"];
m1_32 [label="value.Length > 0", span="63-63", cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs"];
m1_35 [label="Exit CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", span="59-59", cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs"];
m1_40 [label="Entry CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", span="76-76", cluster="CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", file="StringBuilderExtensions.cs"];
m1_41 [label="return builder == null ? 0 : builder.Length;", span="78-78", cluster="CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", color=green, community=0, file="StringBuilderExtensions.cs"];
m1_42 [label="Exit CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", span="76-76", cluster="CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", file="StringBuilderExtensions.cs"];
m1_43 [label="Entry CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", span="81-81", cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", file="StringBuilderExtensions.cs"];
m1_44 [label="return builder.Length > 0\r\n                ? builder.Remove(builder.Length - 1, 1) : builder;", span="83-84", cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", color=green, community=0, file="StringBuilderExtensions.cs"];
m1_45 [label="Exit CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", span="81-81", cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", file="StringBuilderExtensions.cs"];
m1_0 [label="Entry CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", span="9-9", cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="StringBuilderExtensions.cs"];
m1_1 [label=condition, span="11-11", cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="StringBuilderExtensions.cs"];
m1_2 [label=values, span="13-13", cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="StringBuilderExtensions.cs"];
m1_3 [label="builder.Append(value)", span="15-15", cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="StringBuilderExtensions.cs"];
m1_4 [label="return builder;", span="18-18", cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", color=red, community=0, file="StringBuilderExtensions.cs"];
m1_5 [label="Exit CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", span="9-9", cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="StringBuilderExtensions.cs"];
m1_6 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="StringBuilderExtensions.cs"];
m1_53 [label="Entry CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", span="95-95", cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", file="StringBuilderExtensions.cs"];
m1_54 [label="return condition ? builder.TrimEndIfMatch(c) : builder;", span="97-97", cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", file="StringBuilderExtensions.cs"];
m1_55 [label="Exit CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", span="95-95", cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", file="StringBuilderExtensions.cs"];
m1_56 [label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="87-87", cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="StringBuilderExtensions.cs"];
n9 -> n6  [key=1, style=dashed, color=darkseagreen4, label=t];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n4  [key=2, style=dotted];
n1 -> n1  [key=1, style=dashed, color=darkseagreen4, label=t];
n1 -> n5  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n1 -> n6  [key=1, style=dashed, color=darkseagreen4, label=t];
n2 -> n0  [key=0, style=bold, color=blue];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n8  [key=2, style=dotted];
n7 -> n5  [key=0, style=bold, color=blue];
m1_47 -> m1_48  [key=0, style=solid, color=green];
m1_47 -> m1_49  [key=1, style=dashed, color=green, label="System.Text.StringBuilder"];
m1_47 -> m1_50  [key=1, style=dashed, color=green, label="System.Text.StringBuilder"];
m1_47 -> m1_51  [key=1, style=dashed, color=green, label="System.Text.StringBuilder"];
m1_47 -> m1_47  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Text.StringBuilder TrimEndIfMatch"];
m1_47 -> m1_53  [key=3, color=darkorchid, style=bold, label="Parameter variable char c"];
m1_48 -> m1_49  [key=0, style=solid, color=green];
m1_48 -> m1_51  [key=0, style=solid, color=green];
m1_49 -> m1_50  [key=0, style=solid, color=green];
m1_49 -> m1_51  [key=0, style=solid, color=green];
m1_51 -> m1_52  [key=0, style=solid, color=green];
m1_50 -> m1_51  [key=0, style=solid, color=green];
m1_50 -> m1_46  [key=2, style=dotted, color=green];
m1_52 -> m1_47  [key=0, style=bold, color=blue];
m1_14 -> m1_16  [key=1, style=dashed, color=green, label="System.Text.StringBuilder"];
m1_14 -> m1_17  [key=1, style=dashed, color=green, label="System.Text.StringBuilder"];
m1_14 -> m1_14  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Text.StringBuilder AppendFormatWhen"];
m1_14 -> m1_15  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid, color=green];
m1_16 -> m1_19  [key=2, style=dotted, color=green];
m1_15 -> m1_16  [key=0, style=solid, color=green];
m1_15 -> m1_17  [key=0, style=solid, color=green];
m1_17 -> m1_18  [key=0, style=solid, color=green];
m1_18 -> m1_14  [key=0, style=bold, color=blue];
m1_7 -> m1_8  [key=0, style=solid, color=green];
m1_7 -> m1_11  [key=1, style=dashed, color=green, label="System.Text.StringBuilder"];
m1_7 -> m1_7  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Text.StringBuilder AppendWhen"];
m1_7 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="params char[]"];
m1_7 -> m1_10  [key=1, style=dashed, color=red, label="System.Text.StringBuilder"];
m1_8 -> m1_9  [key=0, style=solid, color=red];
m1_8 -> m1_11  [key=0, style=solid, color=green];
m1_8 -> m1_10  [key=0, style=solid, color=red];
m1_9 -> m1_11  [key=0, style=solid, color=red];
m1_9 -> m1_10  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid, color=green];
m1_11 -> m1_7  [key=0, style=bold, color=blue];
m1_10 -> m1_9  [key=0, style=solid];
m1_10 -> m1_13  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid, color=red];
m1_10 -> m1_12  [key=2, style=dotted, color=red];
m1_12 -> m1_7  [key=0, style=bold, color=blue];
m1_30 -> m1_34  [key=1, style=dashed, color=green, label="System.Text.StringBuilder"];
m1_30 -> m1_30  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Text.StringBuilder AppendIfNotEmpty"];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m1_34 -> m1_35  [key=0, style=solid, color=green];
m1_31 -> m1_34  [key=0, style=solid, color=green];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_33 -> m1_31  [key=0, style=solid];
m1_33 -> m1_6  [key=2, style=dotted];
m1_32 -> m1_31  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_35 -> m1_30  [key=0, style=bold, color=blue];
m1_40 -> m1_41  [key=0, style=solid, color=green];
m1_41 -> m1_42  [key=0, style=solid, color=green];
m1_42 -> m1_40  [key=0, style=bold, color=blue];
m1_43 -> m1_44  [key=0, style=solid, color=green];
m1_44 -> m1_45  [key=0, style=solid, color=green];
m1_44 -> m1_46  [key=2, style=dotted, color=green];
m1_45 -> m1_43  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m1_0 -> m1_4  [key=1, style=dashed, color=red, label="System.Text.StringBuilder"];
m1_0 -> m1_0  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Text.StringBuilder AppendWhen"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_4  [key=0, style=solid, color=red];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_4  [key=0, style=solid, color=red];
m1_3 -> m1_2  [key=0, style=solid];
m1_3 -> m1_6  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid, color=red];
m1_5 -> m1_0  [key=0, style=bold, color=blue];
m1_53 -> m1_54  [key=0, style=solid];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_56  [key=2, style=dotted];
m1_55 -> m1_53  [key=0, style=bold, color=blue];
}
