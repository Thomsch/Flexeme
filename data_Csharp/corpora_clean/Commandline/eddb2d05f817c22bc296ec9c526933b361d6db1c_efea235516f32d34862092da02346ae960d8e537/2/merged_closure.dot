digraph  {
n9 [label=t, span=""];
n0 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
n1 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", label="return from t in tokens\r\n                   where typeLookup(t.Text).Return(info => t.IsName() && info.Tag == TypeDescriptorKind.Boolean, false)\r\n                   select t;", span="15-17"];
n2 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", label="Exit CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
n3 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
n4 [cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="100-100"];
n5 [cluster="lambda expression", label="Entry lambda expression", span="16-16"];
n6 [cluster="lambda expression", label="t.IsName() && info.Tag == TypeDescriptorKind.Boolean", span="16-16"];
n7 [cluster="lambda expression", label="Exit lambda expression", span="16-16"];
n8 [cluster="CommandLine.Core.Token.IsName()", label="Entry CommandLine.Core.Token.IsName()", span="68-68"];
m1_19 [cluster="System.Text.StringBuilder.AppendFormat(string, params object[])", file="StringBuilderExtensions.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, params object[])", span="0-0"];
m1_47 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", span="87-87"];
m1_48 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", color=green, community=0, file="StringBuilderExtensions.cs", label="builder.Length > 0", prediction=0, span="89-89"];
m1_49 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", color=green, community=0, file="StringBuilderExtensions.cs", label="builder[builder.Length - 1] == c", prediction=1, span="90-90"];
m1_51 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", color=green, community=0, file="StringBuilderExtensions.cs", label="return builder;", prediction=1, span="92-92"];
m1_50 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", color=green, community=0, file="StringBuilderExtensions.cs", label="builder.Remove(builder.Length - 1, 1)", prediction=1, span="91-91"];
m1_52 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", file="StringBuilderExtensions.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", span="87-87"];
m1_14 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="StringBuilderExtensions.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", span="33-33"];
m1_16 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", color=green, community=0, file="StringBuilderExtensions.cs", label="builder.AppendFormat(format, args)", prediction=4, span="37-37"];
m1_15 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="StringBuilderExtensions.cs", label=condition, span="35-35"];
m1_17 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", color=green, community=0, file="StringBuilderExtensions.cs", label="return builder;", prediction=4, span="39-39"];
m1_18 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="StringBuilderExtensions.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", span="33-33"];
m1_13 [cluster="System.Text.StringBuilder.Append(char)", file="StringBuilderExtensions.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m1_7 [cluster="CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", span="21-21"];
m1_8 [cluster="CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", color=green, community=1, file="StringBuilderExtensions.cs", label="builder == null", prediction=6, span="23-23"];
m1_11 [cluster="CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", color=green, community=0, file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", prediction=7, span="21-21"];
m1_12 [cluster="System.Text.StringBuilder.ToString()", file="StringBuilderExtensions.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m1_46 [cluster="System.Text.StringBuilder.Remove(int, int)", file="StringBuilderExtensions.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m1_30 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", span="59-59"];
m1_34 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", color=green, community=0, file="StringBuilderExtensions.cs", label="return builder;", prediction=8, span="68-68"];
m1_31 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label=values, span="61-61"];
m1_33 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label="builder.Append(value)", span="65-65"];
m1_32 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label="value.Length > 0", span="63-63"];
m1_35 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", span="59-59"];
m1_40 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", span="76-76"];
m1_41 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", color=green, community=0, file="StringBuilderExtensions.cs", label="return builder == null ? 0 : builder.Length;", prediction=9, span="78-78"];
m1_42 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", span="76-76"];
m1_43 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", span="81-81"];
m1_44 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", color=green, community=0, file="StringBuilderExtensions.cs", label="return builder.Length > 0\r\n                ? builder.Remove(builder.Length - 1, 1) : builder;", prediction=10, span="83-84"];
m1_45 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", file="StringBuilderExtensions.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", span="81-81"];
m1_0 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", span="9-9"];
m1_1 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="StringBuilderExtensions.cs", label=condition, span="11-11"];
m1_2 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="StringBuilderExtensions.cs", label=values, span="13-13"];
m1_3 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="StringBuilderExtensions.cs", label="builder.Append(value)", span="15-15"];
m1_5 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", span="9-9"];
m1_6 [cluster="System.Text.StringBuilder.Append(string)", file="StringBuilderExtensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m1_53 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", span="95-95"];
m1_54 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", file="StringBuilderExtensions.cs", label="return condition ? builder.TrimEndIfMatch(c) : builder;", span="97-97"];
m1_55 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", file="StringBuilderExtensions.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", span="95-95"];
m1_56 [cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="StringBuilderExtensions.cs", label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="87-87"];
n9 -> n6  [color=darkseagreen4, key=1, label=t, style=dashed];
n1 -> n1  [color=darkseagreen4, key=1, label=t, style=dashed];
n1 -> n5  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n1 -> n6  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_47 -> m1_49  [color=green, key=1, label="System.Text.StringBuilder", style=dashed];
m1_47 -> m1_50  [color=green, key=1, label="System.Text.StringBuilder", style=dashed];
m1_47 -> m1_51  [color=green, key=1, label="System.Text.StringBuilder", style=dashed];
m1_14 -> m1_16  [color=green, key=1, label="System.Text.StringBuilder", style=dashed];
m1_14 -> m1_17  [color=green, key=1, label="System.Text.StringBuilder", style=dashed];
m1_7 -> m1_11  [color=green, key=1, label="System.Text.StringBuilder", style=dashed];
m1_30 -> m1_34  [color=green, key=1, label="System.Text.StringBuilder", style=dashed];
m1_30 -> m1_33  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m1_31 -> m1_33  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
}
