digraph  {
m0_4 [label="Entry Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", span="12-12", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", file="ReflectionExtensions.cs"];
m0_5 [label="Exit Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", span="12-12", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", file="ReflectionExtensions.cs"];
m0_2 [label="Entry Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="ReflectionExtensions.cs"];
m0_3 [label="Exit Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="ReflectionExtensions.cs"];
m0_0 [label="Entry Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", span="9-9", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", file="ReflectionExtensions.cs"];
m0_1 [label="Exit Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", span="9-9", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", file="ReflectionExtensions.cs"];
m0_6 [label="Entry Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="13-13", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="ReflectionExtensions.cs"];
m0_7 [label="Exit Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="13-13", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="ReflectionExtensions.cs"];
m2_33 [label="Entry System.Type.GetVerbSpecification()", span="27-27", cluster="System.Type.GetVerbSpecification()", file="UnParserExtensions.cs"];
m2_41 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="UnParserExtensions.cs"];
m2_118 [label="Entry Unk.doubQt", span="", cluster="Unk.doubQt", file="UnParserExtensions.cs"];
m2_143 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="52-52", cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="UnParserExtensions.cs"];
m2_120 [label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="165-165", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs"];
m2_121 [label="return (spec as OptionSpecification).ToMaybe()\r\n                .Return(o => o.Separator != '\0' ? o.Separator : ' ', ' ');", span="167-168", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs"];
m2_122 [label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="165-165", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs"];
m2_82 [label="Entry CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="133-133", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m2_92 [label="builder.Append(format(e.Current)).Append(sep)", span="147-147", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m2_83 [label="var builder = new StringBuilder()", span="135-135", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m2_88 [label="var sep = spec.SeperatorOrSpace()", span="142-142", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m2_90 [label="var e = ((IEnumerable)value).GetEnumerator()", span="145-145", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m2_89 [label="Func<object, object> format = v\r\n                        => sep == ' ' ? FormatWithQuotesIfString(v) : v", span="143-144", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m2_91 [label="e.MoveNext()", span="146-146", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m2_94 [label="return builder.ToString();", span="151-151", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m2_84 [label="spec.TargetType", span="136-136", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m2_86 [label="builder.Append(FormatWithQuotesIfString(value))", span="139-139", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m2_93 [label="builder.TrimEndIfMatch(' ')", span="148-148", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m2_87 [label="TargetType.Sequence", span="141-141", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m2_85 [label="TargetType.Scalar", span="138-138", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m2_95 [label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="133-133", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m2_30 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="UnParserExtensions.cs"];
m2_99 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="UnParserExtensions.cs"];
m2_40 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="UnParserExtensions.cs"];
m2_36 [label="Entry object.IsEmpty()", span="203-203", cluster="object.IsEmpty()", file="UnParserExtensions.cs"];
m2_101 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="UnParserExtensions.cs"];
m2_131 [label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="179-179", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m2_133 [label="return\r\n                new StringBuilder(longName\r\n                    ? ''--''.JoinTo(optionSpec.LongName)\r\n                    : ''-''.JoinTo(optionSpec.ShortName))\r\n                        .AppendIf(longName && settings.UseEqualToken, ''='', '' '')\r\n                    .ToString();", span="184-189", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m2_132 [label="var longName =\r\n                optionSpec.LongName.Length > 0\r\n                && settings.NameStyleFormat == NameStyleFormat.PreferLongName", span="181-183", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m2_134 [label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="179-179", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m2_38 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="UnParserExtensions.cs"];
m2_136 [label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="42-42", cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="UnParserExtensions.cs"];
m2_47 [label="Entry Unk.TrimEndIfMatchWhen", span="", cluster="Unk.TrimEndIfMatchWhen", file="UnParserExtensions.cs"];
m2_114 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="UnParserExtensions.cs"];
m2_35 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="UnParserExtensions.cs"];
m2_67 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="UnParserExtensions.cs"];
m2_109 [label="Entry T.ToMaybe<T>()", span="249-249", cluster="T.ToMaybe<T>()", file="UnParserExtensions.cs"];
m2_113 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="UnParserExtensions.cs"];
m2_31 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="UnParserExtensions.cs"];
m2_110 [label="Entry lambda expression", span="156-157", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_71 [label="Entry lambda expression", span="118-118", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_75 [label="builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings)).Append(' ')", span="123-123", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_79 [label="builder.Append(FormatValue(val.Specification, val.Value)).Append(' ')", span="127-127", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_72 [label="((OptionSpecification)info.Specification).ShortName", span="118-118", cluster="lambda expression", color=green, community=0, file="UnParserExtensions.cs"];
m2_73 [label="Exit lambda expression", span="118-118", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_52 [label="builder.Append(verb.Name).Append(' ')", span="83-83", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_68 [label="Entry lambda expression", span="111-111", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_65 [label="!shortSwitches.Contains(info)", span="108-108", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_74 [label="Entry lambda expression", span="123-123", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_76 [label="Exit lambda expression", span="123-123", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_78 [label="Entry lambda expression", span="127-127", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_80 [label="Exit lambda expression", span="127-127", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_64 [label="Entry lambda expression", span="108-108", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_51 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_53 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_55 [label="Entry lambda expression", span="88-89", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_70 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_69 [label="i.Specification.Tag == SpecificationType.Value", span="111-111", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_61 [label="Entry lambda expression", span="94-94", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_66 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_56 [label="new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) }", span="88-89", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_57 [label="Exit lambda expression", span="88-89", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_63 [label="Exit lambda expression", span="94-94", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_62 [label="i.Specification.Tag == SpecificationType.Option", span="94-94", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_116 [label="v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v", span="161-162", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_104 [label="sep == ' ' ? FormatWithQuotesIfString(v) : v", span="144-144", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_115 [label="Entry lambda expression", span="161-162", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_123 [label="Entry lambda expression", span="168-168", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_117 [label="Exit lambda expression", span="161-162", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_103 [label="Entry lambda expression", span="143-144", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_105 [label="Exit lambda expression", span="143-144", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_111 [label="v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="157-157", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_125 [label="Exit lambda expression", span="168-168", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_124 [label="o.Separator != '\0' ? o.Separator : ' '", span="168-168", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_112 [label="Exit lambda expression", span="156-157", cluster="lambda expression", file="UnParserExtensions.cs"];
m2_130 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9", cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="UnParserExtensions.cs"];
m2_50 [label="Entry string.TrimEnd(params char[])", span="0-0", cluster="string.TrimEnd(params char[])", file="UnParserExtensions.cs"];
m2_102 [label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="87-87", cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="UnParserExtensions.cs"];
m2_142 [label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35", cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="UnParserExtensions.cs"];
m2_46 [label="Entry System.Text.StringBuilder.TrailingSpaces()", span="100-100", cluster="System.Text.StringBuilder.TrailingSpaces()", file="UnParserExtensions.cs"];
m2_54 [label="Entry Unk.Append", span="", cluster="Unk.Append", file="UnParserExtensions.cs"];
m2_42 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="UnParserExtensions.cs"];
m2_158 [label="Entry System.Type.GetDefaultValue()", span="119-119", cluster="System.Type.GetDefaultValue()", file="UnParserExtensions.cs"];
m2_81 [label="Entry Unk.FormatValue", span="", cluster="Unk.FormatValue", file="UnParserExtensions.cs"];
m2_77 [label="Entry Unk.FormatOption", span="", cluster="Unk.FormatOption", file="UnParserExtensions.cs"];
m2_37 [label="Entry Unk.Memorize", span="", cluster="Unk.Memorize", file="UnParserExtensions.cs"];
m2_39 [label="Entry Unk.UniqueName", span="", cluster="Unk.UniqueName", file="UnParserExtensions.cs"];
m2_144 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="39-39", cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="UnParserExtensions.cs"];
m2_119 [label="Entry string.JoinTo(params string[])", span="45-45", cluster="string.JoinTo(params string[])", file="UnParserExtensions.cs"];
m2_60 [label="Entry object.NormalizeValue()", span="192-192", cluster="object.NormalizeValue()", file="UnParserExtensions.cs"];
m2_34 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="UnParserExtensions.cs"];
m2_58 [label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="UnParserExtensions.cs"];
m2_49 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="UnParserExtensions.cs"];
m2_129 [label="Entry CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", span="179-179", cluster="CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m2_45 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="UnParserExtensions.cs"];
m2_98 [label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="165-165", cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="UnParserExtensions.cs"];
m2_96 [label="Entry CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="154-154", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs"];
m2_107 [label="return (value as string)\r\n                .ToMaybe()\r\n                .Return(v => v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v, value);", span="159-162", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs"];
m2_106 [label="Func<string, string> doubQt = v\r\n                => v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="156-157", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs"];
m2_108 [label="Exit CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="154-154", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs"];
m2_48 [label="Entry Unk.ForEach", span="", cluster="Unk.ForEach", file="UnParserExtensions.cs"];
m2_97 [label="Entry System.Text.StringBuilder.Append(object)", span="0-0", cluster="System.Text.StringBuilder.Append(object)", file="UnParserExtensions.cs"];
m2_44 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="UnParserExtensions.cs"];
m2_135 [label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(string)", file="UnParserExtensions.cs"];
m2_32 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="UnParserExtensions.cs"];
m2_29 [label="Entry CommandLine.UnParserSettings.UnParserSettings()", span="18-18", cluster="CommandLine.UnParserSettings.UnParserSettings()", file="UnParserExtensions.cs"];
m2_159 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)", file="UnParserExtensions.cs"];
m2_100 [label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()", file="UnParserExtensions.cs"];
m2_7 [label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="71-71", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m2_21 [label="builder = settings.GroupSwitches && shortSwitches.Any()\r\n                ? builder.Append('-').Append(string.Join(string.Empty, shortSwitches.Select(\r\n                    info => ((OptionSpecification)info.Specification).ShortName).ToArray())).Append(' ')\r\n                : builder", span="116-119", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="UnParserExtensions.cs"];
m2_10 [label="var settings = new UnParserSettings()", span="75-75", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m2_14 [label="var builder = new StringBuilder()", span="80-80", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m2_20 [label="var valSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Value)\r\n                let v = (ValueSpecification)info.Specification\r\n                orderby v.Index\r\n                select info", span="111-114", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m2_18 [label="var shortSwitches = from info in allOptSpecs\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType == TargetType.Switch\r\n                where o.ShortName.Length > 0\r\n                orderby o.UniqueName()\r\n                select info", span="100-105", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m2_22 [label="builder\r\n                .TrimEndIfMatchWhen(!optSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="120-121", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m2_23 [label="optSpecs.ForEach(\r\n                opt => builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings)).Append(' '))", span="122-123", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m2_24 [label="builder\r\n                .TrimEndIfMatchWhen(!valSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="124-125", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m2_25 [label="valSpecs.ForEach(\r\n                val => builder.Append(FormatValue(val.Specification, val.Value)).Append(' '))", span="126-127", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m2_26 [label="return builder\r\n                .ToString().TrimEnd(' ');", span="129-130", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m2_8 [label="options == null", span="73-73", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m2_11 [label="configuration(settings)", span="76-76", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m2_12 [label="settings.Consumed = true", span="77-77", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m2_19 [label="var optSpecs = settings.GroupSwitches\r\n                ? allOptSpecs.Where(info => !shortSwitches.Contains(info))\r\n                : allOptSpecs", span="107-109", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m2_13 [label="var type = options.GetType()", span="79-79", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m2_15 [label="type.GetVerbSpecification()\r\n                .Return(verb => builder.Append(verb.Name).Append(' '), builder)", span="82-83", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m2_16 [label="var specs =\r\n                (from info in\r\n                    type.GetSpecifications(\r\n                        pi => new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) })\r\n                where !info.PropertyValue.IsEmpty()\r\n                select info)\r\n                    .Memorize()", span="85-92", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m2_17 [label="var allOptSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Option)\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType != TargetType.Switch || (o.TargetType == TargetType.Switch && ((bool)info.Value))\r\n                orderby o.UniqueName()\r\n                select info", span="94-98", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m2_9 [label="throw new ArgumentNullException(''options'');", span="73-73", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m2_27 [label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="71-71", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m2_43 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="UnParserExtensions.cs"];
m2_126 [label="Entry CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="171-171", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m2_127 [label="return new StringBuilder()\r\n                    .Append(spec.FormatName(settings))\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, FormatValue(spec, value))\r\n                .ToString();", span="173-176", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m2_128 [label="Exit CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="171-171", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m2_145 [label="Entry CommandLine.UnParserExtensions.IsEmpty(object)", span="203-203", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m2_148 [label="ReflectionHelper.IsFSharpOptionType(value.GetType()) && !FSharpOptionHelper.IsSome(value)", span="206-206", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m2_150 [label="value is ValueType && value.Equals(value.GetType().GetDefaultValue())", span="207-207", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m2_146 [label="value == null", span="205-205", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m2_156 [label="return false;", span="210-210", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m2_149 [label="return true;", span="206-206", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m2_151 [label="return true;", span="207-207", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m2_152 [label="value is string && ((string)value).Length == 0", span="208-208", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m2_147 [label="return true;", span="205-205", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m2_154 [label="value is IEnumerable && !((IEnumerable)value).GetEnumerator().MoveNext()", span="209-209", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m2_153 [label="return true;", span="208-208", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m2_155 [label="return true;", span="209-209", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m2_157 [label="Exit CommandLine.UnParserExtensions.IsEmpty(object)", span="203-203", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m2_28 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="UnParserExtensions.cs"];
m2_59 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="UnParserExtensions.cs"];
m2_137 [label="Entry CommandLine.UnParserExtensions.NormalizeValue(object)", span="192-192", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs"];
m2_138 [label="value != null\r\n                && ReflectionHelper.IsFSharpOptionType(value.GetType())\r\n                && FSharpOptionHelper.IsSome(value)", span="194-196", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs"];
m2_139 [label="return FSharpOptionHelper.ValueOf(value);", span="198-198", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs"];
m2_140 [label="return value;", span="200-200", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs"];
m2_141 [label="Exit CommandLine.UnParserExtensions.NormalizeValue(object)", span="192-192", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs"];
m2_160 [label=builder, span="", file="UnParserExtensions.cs"];
m2_163 [label=settings, span="", file="UnParserExtensions.cs"];
m2_162 [label=shortSwitches, span="", file="UnParserExtensions.cs"];
m2_161 [label=T, span="", file="UnParserExtensions.cs"];
m2_165 [label=doubQt, span="", file="UnParserExtensions.cs"];
m2_164 [label=sep, span="", file="UnParserExtensions.cs"];
m3_51 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="UnParserExtensionsTests.cs"];
m3_33 [label="Entry Unk.Just", span="", cluster="Unk.Just", file="UnParserExtensionsTests.cs"];
m3_16 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="87-87", cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="UnParserExtensionsTests.cs"];
m3_34 [label="Entry Unk.>", span="", cluster="Unk.>", file="UnParserExtensionsTests.cs"];
m3_29 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="UnParserExtensionsTests.cs"];
m3_25 [label="Entry CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="69-69", cluster="CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="UnParserExtensionsTests.cs"];
m3_49 [label="return verb.Length > 0\r\n                      ? verbs.SingleOrDefault(v => nameComparer.Equals(v.Item1.Name, verb))\r\n                             .ToMaybe()\r\n                             .Return(\r\n                                 v => new HelpVerbRequestedError(v.Item1.Name, v.Item2, true),\r\n                                 new HelpVerbRequestedError(null, null, false))\r\n                      : new HelpVerbRequestedError(null, null, false);", span="74-80", cluster="CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="UnParserExtensionsTests.cs"];
m3_50 [label="Exit CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="69-69", cluster="CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="UnParserExtensionsTests.cs"];
m3_31 [label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="327-327", cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="UnParserExtensionsTests.cs"];
m3_53 [label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="353-353", cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="UnParserExtensionsTests.cs"];
m3_3 [label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="26-26", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m3_13 [label="return arguments.Empty()\r\n                ? ParserResult.Create<object>(\r\n                    ParserResultType.Verbs, new NullInstance(), new[] { new NoVerbSelectedError() }, Maybe.Just(types))\r\n                : nameComparer.Equals(''help'', arguments.First())\r\n                   ? ParserResult.Create<object>(\r\n                        ParserResultType.Verbs,\r\n                        new NullInstance(), new[] { CreateHelpVerbRequestedError(\r\n                            verbs,\r\n                            arguments.Skip(1).SingleOrDefault() ?? string.Empty,\r\n                            nameComparer) }, Maybe.Just(types))\r\n                   : MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture);", span="35-45", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="UnParserExtensionsTests.cs"];
m3_12 [label="var verbs = Verb.SelectFromTypes(types)", span="33-33", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m3_14 [label="Exit CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="26-26", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m3_11 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="UnParserExtensionsTests.cs"];
m3_22 [label="Entry System.StringComparer.Equals(string, string)", span="0-0", cluster="System.StringComparer.Equals(string, string)", file="UnParserExtensionsTests.cs"];
m3_52 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="UnParserExtensionsTests.cs"];
m3_41 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="UnParserExtensionsTests.cs"];
m3_8 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_35 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_38 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_46 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_36 [label="nameComparer.Equals(a.Item1.Name, arguments.First())", span="55-55", cluster="lambda expression", color=green, community=0, file="UnParserExtensionsTests.cs"];
m3_37 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_44 [label="nameComparer.Equals(v.Item1.Name, arguments.First())", span="57-57", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_56 [label="nameComparer.Equals(v.Item1.Name, verb)", span="75-75", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_39 [label="Activator.CreateInstance(verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2)", span="57-57", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_40 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_48 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_47 [label="v.Item2", span="66-66", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_4 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_43 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_45 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_55 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_57 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_58 [label="Entry lambda expression", span="78-78", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_5 [label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="19-19", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_9 [label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="19-19", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_6 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_60 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_59 [label="new HelpVerbRequestedError(v.Item1.Name, v.Item2, true)", span="78-78", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_10 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m3_21 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="UnParserExtensionsTests.cs"];
m3_23 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="UnParserExtensionsTests.cs"];
m3_19 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="UnParserExtensionsTests.cs"];
m3_32 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="UnParserExtensionsTests.cs"];
m3_18 [label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="391-391", cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="UnParserExtensionsTests.cs"];
m3_0 [label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m3_1 [label="return InstanceChooser.Choose(\r\n                (args, optionSpecs) => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer)),\r\n                types,\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="18-23", cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m3_2 [label="Exit CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m3_7 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="UnParserExtensionsTests.cs"];
m3_54 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="UnParserExtensionsTests.cs"];
m3_26 [label="Entry CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="48-48", cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m3_27 [label="return verbs.Any(a => nameComparer.Equals(a.Item1.Name, arguments.First()))\r\n                ? InstanceBuilder.Build(\r\n                    () => Activator.CreateInstance(verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2),\r\n                    tokenizer,\r\n                    arguments.Skip(1),\r\n                    nameComparer,\r\n                    parsingCulture)\r\n                : ParserResult.Create<object>(\r\n                    ParserResultType.Verbs,\r\n                    new NullInstance(),\r\n                    new[] { new BadVerbSelectedError(arguments.First()) },\r\n                    Maybe.Just(verbs.Select(v => v.Item2)));", span="55-66", cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="UnParserExtensionsTests.cs"];
m3_28 [label="Exit CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="48-48", cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m3_17 [label="Entry CommandLine.NullInstance.NullInstance()", span="9-9", cluster="CommandLine.NullInstance.NullInstance()", file="UnParserExtensionsTests.cs"];
m3_20 [label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", span="108-108", cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="UnParserExtensionsTests.cs"];
m3_42 [label="Entry Unk.CreateInstance", span="", cluster="Unk.CreateInstance", file="UnParserExtensionsTests.cs"];
m3_15 [label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="UnParserExtensionsTests.cs"];
m3_30 [label="Entry Unk.Build", span="", cluster="Unk.Build", file="UnParserExtensionsTests.cs"];
m3_24 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="UnParserExtensionsTests.cs"];
m3_61 [label="Entry HelpVerbRequestedError.cstr", span="", cluster="HelpVerbRequestedError.cstr", file="UnParserExtensionsTests.cs"];
m3_64 [label="System.Collections.Generic.IEnumerable<string>", span="", file="UnParserExtensionsTests.cs"];
m3_65 [label="System.StringComparer", span="", file="UnParserExtensionsTests.cs"];
m3_67 [label=string, span="", file="UnParserExtensionsTests.cs"];
m3_68 [label="System.StringComparer", span="", file="UnParserExtensionsTests.cs"];
m3_66 [label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span="", file="UnParserExtensionsTests.cs"];
m3_62 [label="System.StringComparer", span="", file="UnParserExtensionsTests.cs"];
m3_63 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", file="UnParserExtensionsTests.cs"];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_4  [key=0, style=bold, color=blue];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_2  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_6  [key=0, style=bold, color=blue];
m2_120 -> m2_121  [key=0, style=solid];
m2_121 -> m2_34  [key=2, style=dotted];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_109  [key=2, style=dotted];
m2_121 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_122 -> m2_120  [key=0, style=bold, color=blue];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_88  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m2_82 -> m2_90  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_82 -> m2_126  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m2_82 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m2_82 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_92 -> m2_41  [key=2, style=dotted];
m2_92 -> m2_91  [key=0, style=solid];
m2_92 -> m2_101  [key=2, style=dotted];
m2_92 -> m2_97  [key=2, style=dotted];
m2_83 -> m2_32  [key=2, style=dotted];
m2_83 -> m2_92  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_83 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_83 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_88 -> m2_92  [key=1, style=dashed, color=darkseagreen4, label=sep];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_98  [key=2, style=dotted];
m2_88 -> m2_104  [key=1, style=dashed, color=darkseagreen4, label=sep];
m2_90 -> m2_92  [key=1, style=dashed, color=darkseagreen4, label=e];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_99  [key=2, style=dotted];
m2_89 -> m2_92  [key=1, style=dashed, color=darkseagreen4, label=format];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_89  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<object, object> format"];
m2_89 -> m2_104  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_93  [key=0, style=solid];
m2_91 -> m2_100  [key=2, style=dotted];
m2_94 -> m2_49  [key=2, style=dotted];
m2_94 -> m2_95  [key=0, style=solid];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_87  [key=0, style=solid];
m2_86 -> m2_97  [key=2, style=dotted];
m2_86 -> m2_94  [key=0, style=solid];
m2_86 -> m2_96  [key=2, style=dotted];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_102  [key=2, style=dotted];
m2_87 -> m2_88  [key=0, style=solid];
m2_85 -> m2_86  [key=0, style=solid];
m2_95 -> m2_82  [key=0, style=bold, color=blue];
m2_36 -> m2_146  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsEmpty"];
m2_36 -> m2_156  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsEmpty"];
m2_131 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m2_131 -> m2_132  [key=0, style=solid];
m2_133 -> m2_49  [key=2, style=dotted];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_135  [key=2, style=dotted];
m2_133 -> m2_119  [key=2, style=dotted];
m2_133 -> m2_136  [key=2, style=dotted];
m2_132 -> m2_133  [key=0, style=solid];
m2_134 -> m2_131  [key=0, style=bold, color=blue];
m2_110 -> m2_111  [key=0, style=solid];
m2_71 -> m2_72  [key=0, style=solid, color=green];
m2_75 -> m2_41  [key=2, style=dotted];
m2_75 -> m2_45  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_77  [key=2, style=dotted];
m2_79 -> m2_41  [key=2, style=dotted];
m2_79 -> m2_45  [key=2, style=dotted];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_81  [key=2, style=dotted];
m2_72 -> m2_73  [key=0, style=solid, color=green];
m2_73 -> m2_71  [key=0, style=bold, color=blue];
m2_52 -> m2_41  [key=2, style=dotted];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_54  [key=2, style=dotted];
m2_68 -> m2_69  [key=0, style=solid];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_67  [key=2, style=dotted];
m2_74 -> m2_75  [key=0, style=solid];
m2_76 -> m2_74  [key=0, style=bold, color=blue];
m2_78 -> m2_79  [key=0, style=solid];
m2_80 -> m2_78  [key=0, style=bold, color=blue];
m2_64 -> m2_65  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_53 -> m2_51  [key=0, style=bold, color=blue];
m2_55 -> m2_56  [key=0, style=solid];
m2_70 -> m2_68  [key=0, style=bold, color=blue];
m2_69 -> m2_70  [key=0, style=solid];
m2_61 -> m2_62  [key=0, style=solid];
m2_66 -> m2_64  [key=0, style=bold, color=blue];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_58  [key=2, style=dotted];
m2_56 -> m2_59  [key=2, style=dotted];
m2_56 -> m2_60  [key=2, style=dotted];
m2_57 -> m2_55  [key=0, style=bold, color=blue];
m2_63 -> m2_61  [key=0, style=bold, color=blue];
m2_62 -> m2_63  [key=0, style=solid];
m2_116 -> m2_67  [key=2, style=dotted];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_118  [key=2, style=dotted];
m2_116 -> m2_119  [key=2, style=dotted];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_96  [key=2, style=dotted];
m2_115 -> m2_116  [key=0, style=solid];
m2_123 -> m2_124  [key=0, style=solid];
m2_117 -> m2_115  [key=0, style=bold, color=blue];
m2_103 -> m2_104  [key=0, style=solid];
m2_105 -> m2_103  [key=0, style=bold, color=blue];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_113  [key=2, style=dotted];
m2_111 -> m2_114  [key=2, style=dotted];
m2_125 -> m2_123  [key=0, style=bold, color=blue];
m2_124 -> m2_125  [key=0, style=solid];
m2_112 -> m2_110  [key=0, style=bold, color=blue];
m2_60 -> m2_60  [key=3, color=darkorchid, style=bold, label="method methodReturn object NormalizeValue"];
m2_129 -> m2_126  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.UnParserSettings settings"];
m2_96 -> m2_89  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m2_96 -> m2_82  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m2_96 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_96 -> m2_106  [key=0, style=solid];
m2_107 -> m2_34  [key=2, style=dotted];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_109  [key=2, style=dotted];
m2_107 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label=doubQt];
m2_106 -> m2_106  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<string, string> doubQt"];
m2_106 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_108 -> m2_96  [key=0, style=bold, color=blue];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="System.Action<CommandLine.UnParserSettings>"];
m2_7 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label=T];
m2_7 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label=T];
m2_7 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label=T];
m2_21 -> m2_21  [key=1, style=dashed, color=green, label=builder];
m2_21 -> m2_22  [key=0, style=solid, color=green];
m2_21 -> m2_40  [key=2, style=dotted, color=green];
m2_21 -> m2_41  [key=2, style=dotted, color=green];
m2_21 -> m2_42  [key=2, style=dotted, color=green];
m2_21 -> m2_43  [key=2, style=dotted, color=green];
m2_21 -> m2_44  [key=2, style=dotted, color=green];
m2_21 -> m2_45  [key=2, style=dotted, color=green];
m2_21 -> m2_71  [key=1, style=dashed, color=green, label="lambda expression"];
m2_21 -> m2_23  [key=1, style=dashed, color=green, label=builder];
m2_21 -> m2_75  [key=1, style=dashed, color=green, label=builder];
m2_21 -> m2_24  [key=1, style=dashed, color=green, label=builder];
m2_21 -> m2_25  [key=1, style=dashed, color=green, label=builder];
m2_21 -> m2_79  [key=1, style=dashed, color=green, label=builder];
m2_21 -> m2_26  [key=1, style=dashed, color=green, label=builder];
m2_10 -> m2_21  [key=1, style=dashed, color=green, label=settings];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_29  [key=2, style=dotted];
m2_10 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_10 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_10 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_10 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_14 -> m2_21  [key=1, style=dashed, color=green, label=builder];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_32  [key=2, style=dotted];
m2_14 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_20 -> m2_21  [key=0, style=solid, color=green];
m2_20 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label=info];
m2_20 -> m2_38  [key=2, style=dotted];
m2_20 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_20 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label=valSpecs];
m2_20 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label=valSpecs];
m2_18 -> m2_21  [key=1, style=dashed, color=green, label=shortSwitches];
m2_18 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label=info];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_39  [key=2, style=dotted];
m2_18 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label=shortSwitches];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_40  [key=2, style=dotted];
m2_22 -> m2_46  [key=2, style=dotted];
m2_22 -> m2_47  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_48  [key=2, style=dotted];
m2_23 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_24 -> m2_40  [key=2, style=dotted];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_46  [key=2, style=dotted];
m2_24 -> m2_47  [key=2, style=dotted];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_48  [key=2, style=dotted];
m2_25 -> m2_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_49  [key=2, style=dotted];
m2_26 -> m2_50  [key=2, style=dotted];
m2_8 -> m2_10  [key=0, style=solid];
m2_8 -> m2_9  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_30  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label=optSpecs];
m2_19 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label=optSpecs];
m2_19 -> m2_38  [key=2, style=dotted];
m2_19 -> m2_64  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_31  [key=2, style=dotted];
m2_13 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label=type];
m2_13 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label=type];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_33  [key=2, style=dotted];
m2_15 -> m2_34  [key=2, style=dotted];
m2_15 -> m2_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_16 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label=specs];
m2_16 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label=info];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_35  [key=2, style=dotted];
m2_16 -> m2_36  [key=2, style=dotted];
m2_16 -> m2_37  [key=2, style=dotted];
m2_16 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label=allOptSpecs];
m2_17 -> m2_38  [key=2, style=dotted];
m2_17 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label=info];
m2_17 -> m2_39  [key=2, style=dotted];
m2_17 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_9 -> m2_27  [key=0, style=solid];
m2_9 -> m2_28  [key=2, style=dotted];
m2_27 -> m2_7  [key=0, style=bold, color=blue];
m2_126 -> m2_127  [key=0, style=solid];
m2_127 -> m2_45  [key=2, style=dotted];
m2_127 -> m2_32  [key=2, style=dotted];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_129  [key=2, style=dotted];
m2_127 -> m2_82  [key=2, style=dotted];
m2_127 -> m2_130  [key=2, style=dotted];
m2_127 -> m2_49  [key=2, style=dotted];
m2_128 -> m2_126  [key=0, style=bold, color=blue];
m2_145 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_145 -> m2_150  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_152  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_145 -> m2_154  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_148 -> m2_31  [key=2, style=dotted];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_150  [key=0, style=solid];
m2_148 -> m2_142  [key=2, style=dotted];
m2_148 -> m2_143  [key=2, style=dotted];
m2_150 -> m2_31  [key=2, style=dotted];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_152  [key=0, style=solid];
m2_150 -> m2_158  [key=2, style=dotted];
m2_150 -> m2_159  [key=2, style=dotted];
m2_146 -> m2_148  [key=0, style=solid];
m2_146 -> m2_147  [key=0, style=solid];
m2_156 -> m2_157  [key=0, style=solid];
m2_149 -> m2_157  [key=0, style=solid];
m2_151 -> m2_157  [key=0, style=solid];
m2_152 -> m2_153  [key=0, style=solid];
m2_152 -> m2_154  [key=0, style=solid];
m2_147 -> m2_157  [key=0, style=solid];
m2_154 -> m2_156  [key=0, style=solid];
m2_154 -> m2_99  [key=2, style=dotted];
m2_154 -> m2_100  [key=2, style=dotted];
m2_154 -> m2_155  [key=0, style=solid];
m2_153 -> m2_157  [key=0, style=solid];
m2_155 -> m2_157  [key=0, style=solid];
m2_157 -> m2_145  [key=0, style=bold, color=blue];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_139  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_137 -> m2_140  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_138 -> m2_31  [key=2, style=dotted];
m2_138 -> m2_139  [key=0, style=solid];
m2_138 -> m2_140  [key=0, style=solid];
m2_138 -> m2_142  [key=2, style=dotted];
m2_138 -> m2_143  [key=2, style=dotted];
m2_139 -> m2_141  [key=0, style=solid];
m2_139 -> m2_144  [key=2, style=dotted];
m2_140 -> m2_141  [key=0, style=solid];
m2_141 -> m2_137  [key=0, style=bold, color=blue];
m2_160 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_160 -> m2_79  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_160 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_163 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_162 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label=shortSwitches];
m2_161 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label=T];
m2_165 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label=doubQt];
m2_164 -> m2_104  [key=1, style=dashed, color=darkseagreen4, label=sep];
m3_25 -> m3_49  [key=0, style=solid];
m3_25 -> m3_56  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_51  [key=2, style=dotted];
m3_49 -> m3_52  [key=2, style=dotted];
m3_49 -> m3_53  [key=2, style=dotted];
m3_49 -> m3_54  [key=2, style=dotted];
m3_49 -> m3_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_49 -> m3_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_50 -> m3_25  [key=0, style=bold, color=blue];
m3_3 -> m3_13  [key=1, style=dashed, color=green, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>"];
m3_3 -> m3_12  [key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid, color=green];
m3_13 -> m3_16  [key=2, style=dotted, color=green];
m3_13 -> m3_17  [key=2, style=dotted, color=green];
m3_13 -> m3_18  [key=2, style=dotted, color=green];
m3_13 -> m3_19  [key=2, style=dotted, color=green];
m3_13 -> m3_20  [key=2, style=dotted, color=green];
m3_13 -> m3_21  [key=2, style=dotted, color=green];
m3_13 -> m3_22  [key=2, style=dotted, color=green];
m3_13 -> m3_23  [key=2, style=dotted, color=green];
m3_13 -> m3_24  [key=2, style=dotted, color=green];
m3_13 -> m3_25  [key=2, style=dotted, color=green];
m3_13 -> m3_26  [key=2, style=dotted, color=green];
m3_12 -> m3_13  [key=0, style=solid, color=green];
m3_12 -> m3_15  [key=2, style=dotted];
m3_14 -> m3_3  [key=0, style=bold, color=blue];
m3_8 -> m3_9  [key=0, style=solid];
m3_35 -> m3_36  [key=0, style=solid, color=green];
m3_38 -> m3_39  [key=0, style=solid];
m3_46 -> m3_47  [key=0, style=solid];
m3_36 -> m3_37  [key=0, style=solid, color=green];
m3_36 -> m3_21  [key=2, style=dotted, color=green];
m3_36 -> m3_22  [key=2, style=dotted, color=green];
m3_37 -> m3_35  [key=0, style=bold, color=blue];
m3_44 -> m3_21  [key=2, style=dotted];
m3_44 -> m3_22  [key=2, style=dotted];
m3_44 -> m3_45  [key=0, style=solid];
m3_56 -> m3_22  [key=2, style=dotted];
m3_56 -> m3_57  [key=0, style=solid];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_41  [key=2, style=dotted];
m3_39 -> m3_42  [key=2, style=dotted];
m3_39 -> m3_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_40 -> m3_38  [key=0, style=bold, color=blue];
m3_48 -> m3_46  [key=0, style=bold, color=blue];
m3_47 -> m3_48  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m3_43 -> m3_44  [key=0, style=solid];
m3_45 -> m3_43  [key=0, style=bold, color=blue];
m3_55 -> m3_56  [key=0, style=solid];
m3_57 -> m3_55  [key=0, style=bold, color=blue];
m3_58 -> m3_59  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [key=2, style=dotted];
m3_5 -> m3_8  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_11  [key=2, style=dotted];
m3_6 -> m3_4  [key=0, style=bold, color=blue];
m3_60 -> m3_58  [key=0, style=bold, color=blue];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_61  [key=2, style=dotted];
m3_10 -> m3_8  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m3_0 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m3_1 -> m3_3  [key=2, style=dotted];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_26 -> m3_27  [key=0, style=solid, color=green];
m3_26 -> m3_36  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m3_26 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>"];
m3_26 -> m3_44  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m3_27 -> m3_28  [key=0, style=solid, color=green];
m3_27 -> m3_29  [key=2, style=dotted, color=green];
m3_27 -> m3_23  [key=2, style=dotted, color=green];
m3_27 -> m3_30  [key=2, style=dotted, color=green];
m3_27 -> m3_17  [key=2, style=dotted, color=green];
m3_27 -> m3_31  [key=2, style=dotted, color=green];
m3_27 -> m3_21  [key=2, style=dotted, color=green];
m3_27 -> m3_32  [key=2, style=dotted, color=green];
m3_27 -> m3_33  [key=2, style=dotted, color=green];
m3_27 -> m3_34  [key=2, style=dotted, color=green];
m3_27 -> m3_35  [key=1, style=dashed, color=green, label="lambda expression"];
m3_27 -> m3_38  [key=1, style=dashed, color=green, label="lambda expression"];
m3_27 -> m3_46  [key=1, style=dashed, color=green, label="lambda expression"];
m3_28 -> m3_26  [key=0, style=bold, color=blue];
m3_64 -> m3_36  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m3_64 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m3_64 -> m3_44  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m3_65 -> m3_36  [key=1, style=dashed, color=green, label="System.StringComparer"];
m3_65 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m3_65 -> m3_44  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m3_67 -> m3_56  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_68 -> m3_56  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m3_66 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>"];
m3_62 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m3_62 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m3_63 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
}
