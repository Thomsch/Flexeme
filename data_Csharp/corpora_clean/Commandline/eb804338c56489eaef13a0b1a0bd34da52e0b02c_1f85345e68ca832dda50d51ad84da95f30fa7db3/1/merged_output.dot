digraph  {
m0_4 [cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", file="ReflectionExtensions.cs", label="Entry Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", span="12-12"];
m0_5 [cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", file="ReflectionExtensions.cs", label="Exit Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", span="12-12"];
m0_2 [cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="ReflectionExtensions.cs", label="Entry Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10"];
m0_3 [cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="ReflectionExtensions.cs", label="Exit Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10"];
m0_0 [cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", file="ReflectionExtensions.cs", label="Entry Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", span="9-9"];
m0_1 [cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", file="ReflectionExtensions.cs", label="Exit Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", span="9-9"];
m0_6 [cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="ReflectionExtensions.cs", label="Entry Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="13-13"];
m0_7 [cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="ReflectionExtensions.cs", label="Exit Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="13-13"];
m2_33 [cluster="System.Type.GetVerbSpecification()", file="UnParserExtensions.cs", label="Entry System.Type.GetVerbSpecification()", span="27-27"];
m2_41 [cluster="System.Text.StringBuilder.Append(char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m2_118 [cluster="Unk.doubQt", file="UnParserExtensions.cs", label="Entry Unk.doubQt", span=""];
m2_143 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="52-52"];
m2_120 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="165-165"];
m2_121 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="return (spec as OptionSpecification).ToMaybe()\r\n                .Return(o => o.Separator != '\0' ? o.Separator : ' ', ' ');", span="167-168"];
m2_122 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="165-165"];
m2_82 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="133-133"];
m2_92 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.Append(format(e.Current)).Append(sep)", span="147-147"];
m2_83 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var builder = new StringBuilder()", span="135-135"];
m2_88 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var sep = spec.SeperatorOrSpace()", span="142-142"];
m2_90 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var e = ((IEnumerable)value).GetEnumerator()", span="145-145"];
m2_89 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Func<object, object> format = v\r\n                        => sep == ' ' ? FormatWithQuotesIfString(v) : v", span="143-144"];
m2_91 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="e.MoveNext()", span="146-146"];
m2_94 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="return builder.ToString();", span="151-151"];
m2_84 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="spec.TargetType", span="136-136"];
m2_86 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.Append(FormatWithQuotesIfString(value))", span="139-139"];
m2_93 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.TrimEndIfMatch(' ')", span="148-148"];
m2_87 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="TargetType.Sequence", span="141-141"];
m2_85 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="TargetType.Scalar", span="138-138"];
m2_95 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="133-133"];
m2_30 [cluster="System.Action<T>.Invoke(T)", file="UnParserExtensions.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m2_99 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="UnParserExtensions.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m2_40 [cluster="Unk.Any", file="UnParserExtensions.cs", label="Entry Unk.Any", span=""];
m2_36 [cluster="object.IsEmpty()", file="UnParserExtensions.cs", label="Entry object.IsEmpty()", span="203-203"];
m2_101 [cluster="System.Func<T, TResult>.Invoke(T)", file="UnParserExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m2_131 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="179-179"];
m2_133 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="return\r\n                new StringBuilder(longName\r\n                    ? ''--''.JoinTo(optionSpec.LongName)\r\n                    : ''-''.JoinTo(optionSpec.ShortName))\r\n                        .AppendIf(longName && settings.UseEqualToken, ''='', '' '')\r\n                    .ToString();", span="184-189"];
m2_132 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="var longName =\r\n                optionSpec.LongName.Length > 0\r\n                && settings.NameStyleFormat == NameStyleFormat.PreferLongName", span="181-183"];
m2_134 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="179-179"];
m2_38 [cluster="Unk.Where", file="UnParserExtensions.cs", label="Entry Unk.Where", span=""];
m2_136 [cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="42-42"];
m2_47 [cluster="Unk.TrimEndIfMatchWhen", file="UnParserExtensions.cs", label="Entry Unk.TrimEndIfMatchWhen", span=""];
m2_114 [cluster="string.Replace(string, string)", file="UnParserExtensions.cs", label="Entry string.Replace(string, string)", span="0-0"];
m2_35 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="UnParserExtensions.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m2_67 [cluster="Unk.Contains", file="UnParserExtensions.cs", label="Entry Unk.Contains", span=""];
m2_109 [cluster="T.ToMaybe<T>()", file="UnParserExtensions.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m2_113 [cluster="string.Contains(string)", file="UnParserExtensions.cs", label="Entry string.Contains(string)", span="0-0"];
m2_31 [cluster="object.GetType()", file="UnParserExtensions.cs", label="Entry object.GetType()", span="0-0"];
m2_110 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="156-157"];
m2_71 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="118-118"];
m2_75 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings)).Append(' ')", span="123-123"];
m2_79 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(FormatValue(val.Specification, val.Value)).Append(' ')", span="127-127"];
m2_72 [cluster="lambda expression", color=green, community=0, file="UnParserExtensions.cs", label="6: ((OptionSpecification)info.Specification).ShortName", span="118-118"];
m2_73 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="118-118"];
m2_52 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(verb.Name).Append(' ')", span="83-83"];
m2_68 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="111-111"];
m2_65 [cluster="lambda expression", file="UnParserExtensions.cs", label="!shortSwitches.Contains(info)", span="108-108"];
m2_74 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="123-123"];
m2_76 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="123-123"];
m2_78 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="127-127"];
m2_80 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="127-127"];
m2_64 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="108-108"];
m2_51 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="83-83"];
m2_53 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="83-83"];
m2_55 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="88-89"];
m2_70 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="111-111"];
m2_69 [cluster="lambda expression", file="UnParserExtensions.cs", label="i.Specification.Tag == SpecificationType.Value", span="111-111"];
m2_61 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="94-94"];
m2_66 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="108-108"];
m2_56 [cluster="lambda expression", file="UnParserExtensions.cs", label="new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) }", span="88-89"];
m2_57 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="88-89"];
m2_63 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="94-94"];
m2_62 [cluster="lambda expression", file="UnParserExtensions.cs", label="i.Specification.Tag == SpecificationType.Option", span="94-94"];
m2_116 [cluster="lambda expression", file="UnParserExtensions.cs", label="v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v", span="161-162"];
m2_104 [cluster="lambda expression", file="UnParserExtensions.cs", label="sep == ' ' ? FormatWithQuotesIfString(v) : v", span="144-144"];
m2_115 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="161-162"];
m2_123 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="168-168"];
m2_117 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="161-162"];
m2_103 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="143-144"];
m2_105 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="143-144"];
m2_111 [cluster="lambda expression", file="UnParserExtensions.cs", label="v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="157-157"];
m2_125 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="168-168"];
m2_124 [cluster="lambda expression", file="UnParserExtensions.cs", label="o.Separator != '\0' ? o.Separator : ' '", span="168-168"];
m2_112 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="156-157"];
m2_130 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m2_50 [cluster="string.TrimEnd(params char[])", file="UnParserExtensions.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m2_102 [cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="87-87"];
m2_142 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35"];
m2_46 [cluster="System.Text.StringBuilder.TrailingSpaces()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.TrailingSpaces()", span="100-100"];
m2_54 [cluster="Unk.Append", file="UnParserExtensions.cs", label="Entry Unk.Append", span=""];
m2_42 [cluster="Unk.Select", file="UnParserExtensions.cs", label="Entry Unk.Select", span=""];
m2_158 [cluster="System.Type.GetDefaultValue()", file="UnParserExtensions.cs", label="Entry System.Type.GetDefaultValue()", span="119-119"];
m2_81 [cluster="Unk.FormatValue", file="UnParserExtensions.cs", label="Entry Unk.FormatValue", span=""];
m2_77 [cluster="Unk.FormatOption", file="UnParserExtensions.cs", label="Entry Unk.FormatOption", span=""];
m2_37 [cluster="Unk.Memorize", file="UnParserExtensions.cs", label="Entry Unk.Memorize", span=""];
m2_39 [cluster="Unk.UniqueName", file="UnParserExtensions.cs", label="Entry Unk.UniqueName", span=""];
m2_144 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="39-39"];
m2_119 [cluster="string.JoinTo(params string[])", file="UnParserExtensions.cs", label="Entry string.JoinTo(params string[])", span="45-45"];
m2_60 [cluster="object.NormalizeValue()", file="UnParserExtensions.cs", label="Entry object.NormalizeValue()", span="192-192"];
m2_34 [cluster="Unk.Return", file="UnParserExtensions.cs", label="Entry Unk.Return", span=""];
m2_58 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="UnParserExtensions.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105"];
m2_49 [cluster="System.Text.StringBuilder.ToString()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m2_129 [cluster="CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Entry CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", span="179-179"];
m2_45 [cluster="System.Text.StringBuilder.Append(string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m2_98 [cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="UnParserExtensions.cs", label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="165-165"];
m2_96 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="154-154"];
m2_107 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="return (value as string)\r\n                .ToMaybe()\r\n                .Return(v => v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v, value);", span="159-162"];
m2_106 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Func<string, string> doubQt = v\r\n                => v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="156-157"];
m2_108 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="154-154"];
m2_48 [cluster="Unk.ForEach", file="UnParserExtensions.cs", label="Entry Unk.ForEach", span=""];
m2_97 [cluster="System.Text.StringBuilder.Append(object)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m2_44 [cluster="Unk.Join", file="UnParserExtensions.cs", label="Entry Unk.Join", span=""];
m2_135 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m2_32 [cluster="System.Text.StringBuilder.StringBuilder()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m2_29 [cluster="CommandLine.UnParserSettings.UnParserSettings()", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserSettings.UnParserSettings()", span="18-18"];
m2_159 [cluster="object.Equals(object)", file="UnParserExtensions.cs", label="Entry object.Equals(object)", span="0-0"];
m2_100 [cluster="System.Collections.IEnumerator.MoveNext()", file="UnParserExtensions.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m2_7 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="71-71"];
m2_21 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="UnParserExtensions.cs", label="13: builder = settings.GroupSwitches && shortSwitches.Any()\r\n                ? builder.Append('-').Append(string.Join(string.Empty, shortSwitches.Select(\r\n                    info => ((OptionSpecification)info.Specification).ShortName).ToArray())).Append(' ')\r\n                : builder", span="116-119"];
m2_10 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var settings = new UnParserSettings()", span="75-75"];
m2_14 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var builder = new StringBuilder()", span="80-80"];
m2_20 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var valSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Value)\r\n                let v = (ValueSpecification)info.Specification\r\n                orderby v.Index\r\n                select info", span="111-114"];
m2_18 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var shortSwitches = from info in allOptSpecs\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType == TargetType.Switch\r\n                where o.ShortName.Length > 0\r\n                orderby o.UniqueName()\r\n                select info", span="100-105"];
m2_22 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="builder\r\n                .TrimEndIfMatchWhen(!optSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="120-121"];
m2_23 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="optSpecs.ForEach(\r\n                opt => builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings)).Append(' '))", span="122-123"];
m2_24 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="builder\r\n                .TrimEndIfMatchWhen(!valSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="124-125"];
m2_25 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="valSpecs.ForEach(\r\n                val => builder.Append(FormatValue(val.Specification, val.Value)).Append(' '))", span="126-127"];
m2_26 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="return builder\r\n                .ToString().TrimEnd(' ');", span="129-130"];
m2_8 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="options == null", span="73-73"];
m2_11 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="configuration(settings)", span="76-76"];
m2_12 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="settings.Consumed = true", span="77-77"];
m2_19 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var optSpecs = settings.GroupSwitches\r\n                ? allOptSpecs.Where(info => !shortSwitches.Contains(info))\r\n                : allOptSpecs", span="107-109"];
m2_13 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var type = options.GetType()", span="79-79"];
m2_15 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="type.GetVerbSpecification()\r\n                .Return(verb => builder.Append(verb.Name).Append(' '), builder)", span="82-83"];
m2_16 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var specs =\r\n                (from info in\r\n                    type.GetSpecifications(\r\n                        pi => new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) })\r\n                where !info.PropertyValue.IsEmpty()\r\n                select info)\r\n                    .Memorize()", span="85-92"];
m2_17 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var allOptSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Option)\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType != TargetType.Switch || (o.TargetType == TargetType.Switch && ((bool)info.Value))\r\n                orderby o.UniqueName()\r\n                select info", span="94-98"];
m2_9 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="throw new ArgumentNullException(''options'');", span="73-73"];
m2_27 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="71-71"];
m2_43 [cluster="Unk.ToArray", file="UnParserExtensions.cs", label="Entry Unk.ToArray", span=""];
m2_126 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="171-171"];
m2_127 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="return new StringBuilder()\r\n                    .Append(spec.FormatName(settings))\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, FormatValue(spec, value))\r\n                .ToString();", span="173-176"];
m2_128 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="171-171"];
m2_145 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.IsEmpty(object)", span="203-203"];
m2_148 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="ReflectionHelper.IsFSharpOptionType(value.GetType()) && !FSharpOptionHelper.IsSome(value)", span="206-206"];
m2_150 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is ValueType && value.Equals(value.GetType().GetDefaultValue())", span="207-207"];
m2_146 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value == null", span="205-205"];
m2_156 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return false;", span="210-210"];
m2_149 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="206-206"];
m2_151 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="207-207"];
m2_152 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is string && ((string)value).Length == 0", span="208-208"];
m2_147 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="205-205"];
m2_154 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is IEnumerable && !((IEnumerable)value).GetEnumerator().MoveNext()", span="209-209"];
m2_153 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="208-208"];
m2_155 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="209-209"];
m2_157 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.IsEmpty(object)", span="203-203"];
m2_28 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="UnParserExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m2_59 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="UnParserExtensions.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m2_137 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.NormalizeValue(object)", span="192-192"];
m2_138 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="value != null\r\n                && ReflectionHelper.IsFSharpOptionType(value.GetType())\r\n                && FSharpOptionHelper.IsSome(value)", span="194-196"];
m2_139 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="return FSharpOptionHelper.ValueOf(value);", span="198-198"];
m2_140 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="return value;", span="200-200"];
m2_141 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.NormalizeValue(object)", span="192-192"];
m2_160 [file="UnParserExtensions.cs", label=builder, span=""];
m2_163 [file="UnParserExtensions.cs", label=settings, span=""];
m2_162 [file="UnParserExtensions.cs", label=shortSwitches, span=""];
m2_161 [file="UnParserExtensions.cs", label=T, span=""];
m2_165 [file="UnParserExtensions.cs", label=doubQt, span=""];
m2_164 [file="UnParserExtensions.cs", label=sep, span=""];
m3_51 [cluster="Unk.SingleOrDefault", file="UnParserExtensionsTests.cs", label="Entry Unk.SingleOrDefault", span=""];
m3_33 [cluster="Unk.Just", file="UnParserExtensionsTests.cs", label="Entry Unk.Just", span=""];
m3_16 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="UnParserExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="87-87"];
m3_34 [cluster="Unk.>", file="UnParserExtensionsTests.cs", label="Entry Unk.>", span=""];
m3_29 [cluster="Unk.Any", file="UnParserExtensionsTests.cs", label="Entry Unk.Any", span=""];
m3_25 [cluster="CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="69-69"];
m3_49 [cluster="CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="UnParserExtensionsTests.cs", label="return verb.Length > 0\r\n                      ? verbs.SingleOrDefault(v => nameComparer.Equals(v.Item1.Name, verb))\r\n                             .ToMaybe()\r\n                             .Return(\r\n                                 v => new HelpVerbRequestedError(v.Item1.Name, v.Item2, true),\r\n                                 new HelpVerbRequestedError(null, null, false))\r\n                      : new HelpVerbRequestedError(null, null, false);", span="74-80"];
m3_50 [cluster="CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="69-69"];
m3_31 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="327-327"];
m3_53 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="353-353"];
m3_3 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="26-26"];
m3_13 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="UnParserExtensionsTests.cs", label="4: return arguments.Empty()\r\n                ? ParserResult.Create<object>(\r\n                    ParserResultType.Verbs, new NullInstance(), new[] { new NoVerbSelectedError() }, Maybe.Just(types))\r\n                : nameComparer.Equals(''help'', arguments.First())\r\n                   ? ParserResult.Create<object>(\r\n                        ParserResultType.Verbs,\r\n                        new NullInstance(), new[] { CreateHelpVerbRequestedError(\r\n                            verbs,\r\n                            arguments.Skip(1).SingleOrDefault() ?? string.Empty,\r\n                            nameComparer) }, Maybe.Just(types))\r\n                   : MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture);", span="35-45"];
m3_12 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs", label="var verbs = Verb.SelectFromTypes(types)", span="33-33"];
m3_14 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="26-26"];
m3_11 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12"];
m3_22 [cluster="System.StringComparer.Equals(string, string)", file="UnParserExtensionsTests.cs", label="Entry System.StringComparer.Equals(string, string)", span="0-0"];
m3_52 [cluster="Unk.ToMaybe", file="UnParserExtensionsTests.cs", label="Entry Unk.ToMaybe", span=""];
m3_41 [cluster="Unk.Single", file="UnParserExtensionsTests.cs", label="Entry Unk.Single", span=""];
m3_8 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Entry lambda expression", span="19-19"];
m3_35 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Entry lambda expression", span="55-55"];
m3_38 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Entry lambda expression", span="57-57"];
m3_46 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Entry lambda expression", span="66-66"];
m3_36 [cluster="lambda expression", color=green, community=0, file="UnParserExtensionsTests.cs", label="8: nameComparer.Equals(a.Item1.Name, arguments.First())", span="55-55"];
m3_37 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Exit lambda expression", span="55-55"];
m3_44 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="nameComparer.Equals(v.Item1.Name, arguments.First())", span="57-57"];
m3_56 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="nameComparer.Equals(v.Item1.Name, verb)", span="75-75"];
m3_39 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Activator.CreateInstance(verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2)", span="57-57"];
m3_40 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Exit lambda expression", span="57-57"];
m3_48 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Exit lambda expression", span="66-66"];
m3_47 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="v.Item2", span="66-66"];
m3_4 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Entry lambda expression", span="19-19"];
m3_43 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Entry lambda expression", span="57-57"];
m3_45 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Exit lambda expression", span="57-57"];
m3_55 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Entry lambda expression", span="75-75"];
m3_57 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Exit lambda expression", span="75-75"];
m3_58 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Entry lambda expression", span="78-78"];
m3_5 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="19-19"];
m3_9 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="19-19"];
m3_6 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Exit lambda expression", span="19-19"];
m3_60 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Exit lambda expression", span="78-78"];
m3_59 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="new HelpVerbRequestedError(v.Item1.Name, v.Item2, true)", span="78-78"];
m3_10 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Exit lambda expression", span="19-19"];
m3_21 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="UnParserExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m3_23 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="UnParserExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m3_19 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m3_32 [cluster="Unk.Select", file="UnParserExtensionsTests.cs", label="Entry Unk.Select", span=""];
m3_18 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="391-391"];
m3_0 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m3_1 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs", label="return InstanceChooser.Choose(\r\n                (args, optionSpecs) => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer)),\r\n                types,\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="18-23"];
m3_2 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m3_7 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m3_54 [cluster="Unk.Return", file="UnParserExtensionsTests.cs", label="Entry Unk.Return", span=""];
m3_26 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="48-48"];
m3_27 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="UnParserExtensionsTests.cs", label="10: return verbs.Any(a => nameComparer.Equals(a.Item1.Name, arguments.First()))\r\n                ? InstanceBuilder.Build(\r\n                    () => Activator.CreateInstance(verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2),\r\n                    tokenizer,\r\n                    arguments.Skip(1),\r\n                    nameComparer,\r\n                    parsingCulture)\r\n                : ParserResult.Create<object>(\r\n                    ParserResultType.Verbs,\r\n                    new NullInstance(),\r\n                    new[] { new BadVerbSelectedError(arguments.First()) },\r\n                    Maybe.Just(verbs.Select(v => v.Item2)));", span="55-66"];
m3_28 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="48-48"];
m3_17 [cluster="CommandLine.NullInstance.NullInstance()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.NullInstance.NullInstance()", span="9-9"];
m3_20 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", span="108-108"];
m3_42 [cluster="Unk.CreateInstance", file="UnParserExtensionsTests.cs", label="Entry Unk.CreateInstance", span=""];
m3_15 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m3_30 [cluster="Unk.Build", file="UnParserExtensionsTests.cs", label="Entry Unk.Build", span=""];
m3_24 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="UnParserExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m3_61 [cluster="HelpVerbRequestedError.cstr", file="UnParserExtensionsTests.cs", label="Entry HelpVerbRequestedError.cstr", span=""];
m3_64 [file="UnParserExtensionsTests.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m3_65 [file="UnParserExtensionsTests.cs", label="System.StringComparer", span=""];
m3_67 [file="UnParserExtensionsTests.cs", label=string, span=""];
m3_68 [file="UnParserExtensionsTests.cs", label="System.StringComparer", span=""];
m3_66 [file="UnParserExtensionsTests.cs", label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span=""];
m3_62 [file="UnParserExtensionsTests.cs", label="System.StringComparer", span=""];
m3_63 [file="UnParserExtensionsTests.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_4  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_2  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_6  [color=blue, key=0, style=bold];
m2_120 -> m2_121  [key=0, style=solid];
m2_121 -> m2_34  [key=2, style=dotted];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_109  [key=2, style=dotted];
m2_121 -> m2_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_122 -> m2_120  [color=blue, key=0, style=bold];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_88  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m2_82 -> m2_90  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_82 -> m2_126  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_82 -> m2_84  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m2_82 -> m2_86  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_92 -> m2_41  [key=2, style=dotted];
m2_92 -> m2_91  [key=0, style=solid];
m2_92 -> m2_101  [key=2, style=dotted];
m2_92 -> m2_97  [key=2, style=dotted];
m2_83 -> m2_32  [key=2, style=dotted];
m2_83 -> m2_92  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_86  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_83 -> m2_93  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_83 -> m2_94  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_88 -> m2_92  [color=darkseagreen4, key=1, label=sep, style=dashed];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_98  [key=2, style=dotted];
m2_88 -> m2_104  [color=darkseagreen4, key=1, label=sep, style=dashed];
m2_90 -> m2_92  [color=darkseagreen4, key=1, label=e, style=dashed];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_99  [key=2, style=dotted];
m2_89 -> m2_92  [color=darkseagreen4, key=1, label=format, style=dashed];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_89  [color=darkorchid, key=3, label="Local variable System.Func<object, object> format", style=bold];
m2_89 -> m2_104  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_93  [key=0, style=solid];
m2_91 -> m2_100  [key=2, style=dotted];
m2_94 -> m2_49  [key=2, style=dotted];
m2_94 -> m2_95  [key=0, style=solid];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_87  [key=0, style=solid];
m2_86 -> m2_97  [key=2, style=dotted];
m2_86 -> m2_94  [key=0, style=solid];
m2_86 -> m2_96  [key=2, style=dotted];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_102  [key=2, style=dotted];
m2_87 -> m2_88  [key=0, style=solid];
m2_85 -> m2_86  [key=0, style=solid];
m2_95 -> m2_82  [color=blue, key=0, style=bold];
m2_36 -> m2_146  [color=darkorchid, key=3, label="method methodReturn bool IsEmpty", style=bold];
m2_36 -> m2_156  [color=darkorchid, key=3, label="method methodReturn bool IsEmpty", style=bold];
m2_131 -> m2_133  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m2_131 -> m2_132  [key=0, style=solid];
m2_133 -> m2_49  [key=2, style=dotted];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_135  [key=2, style=dotted];
m2_133 -> m2_119  [key=2, style=dotted];
m2_133 -> m2_136  [key=2, style=dotted];
m2_132 -> m2_133  [key=0, style=solid];
m2_134 -> m2_131  [color=blue, key=0, style=bold];
m2_110 -> m2_111  [key=0, style=solid];
m2_71 -> m2_72  [color=green, key=0, style=solid];
m2_75 -> m2_41  [key=2, style=dotted];
m2_75 -> m2_45  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_77  [key=2, style=dotted];
m2_79 -> m2_41  [key=2, style=dotted];
m2_79 -> m2_45  [key=2, style=dotted];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_81  [key=2, style=dotted];
m2_72 -> m2_73  [color=green, key=0, style=solid];
m2_73 -> m2_71  [color=blue, key=0, style=bold];
m2_52 -> m2_41  [key=2, style=dotted];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_54  [key=2, style=dotted];
m2_68 -> m2_69  [key=0, style=solid];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_67  [key=2, style=dotted];
m2_74 -> m2_75  [key=0, style=solid];
m2_76 -> m2_74  [color=blue, key=0, style=bold];
m2_78 -> m2_79  [key=0, style=solid];
m2_80 -> m2_78  [color=blue, key=0, style=bold];
m2_64 -> m2_65  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_53 -> m2_51  [color=blue, key=0, style=bold];
m2_55 -> m2_56  [key=0, style=solid];
m2_70 -> m2_68  [color=blue, key=0, style=bold];
m2_69 -> m2_70  [key=0, style=solid];
m2_61 -> m2_62  [key=0, style=solid];
m2_66 -> m2_64  [color=blue, key=0, style=bold];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_58  [key=2, style=dotted];
m2_56 -> m2_59  [key=2, style=dotted];
m2_56 -> m2_60  [key=2, style=dotted];
m2_57 -> m2_55  [color=blue, key=0, style=bold];
m2_63 -> m2_61  [color=blue, key=0, style=bold];
m2_62 -> m2_63  [key=0, style=solid];
m2_116 -> m2_67  [key=2, style=dotted];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_118  [key=2, style=dotted];
m2_116 -> m2_119  [key=2, style=dotted];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_96  [key=2, style=dotted];
m2_115 -> m2_116  [key=0, style=solid];
m2_123 -> m2_124  [key=0, style=solid];
m2_117 -> m2_115  [color=blue, key=0, style=bold];
m2_103 -> m2_104  [key=0, style=solid];
m2_105 -> m2_103  [color=blue, key=0, style=bold];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_113  [key=2, style=dotted];
m2_111 -> m2_114  [key=2, style=dotted];
m2_125 -> m2_123  [color=blue, key=0, style=bold];
m2_124 -> m2_125  [key=0, style=solid];
m2_112 -> m2_110  [color=blue, key=0, style=bold];
m2_60 -> m2_60  [color=darkorchid, key=3, label="method methodReturn object NormalizeValue", style=bold];
m2_129 -> m2_126  [color=darkorchid, key=3, label="Parameter variable CommandLine.UnParserSettings settings", style=bold];
m2_96 -> m2_89  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_96 -> m2_82  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_96 -> m2_107  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_96 -> m2_106  [key=0, style=solid];
m2_107 -> m2_34  [key=2, style=dotted];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_109  [key=2, style=dotted];
m2_107 -> m2_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_116  [color=darkseagreen4, key=1, label=doubQt, style=dashed];
m2_106 -> m2_106  [color=darkorchid, key=3, label="Local variable System.Func<string, string> doubQt", style=bold];
m2_106 -> m2_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_108 -> m2_96  [color=blue, key=0, style=bold];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_11  [color=darkseagreen4, key=1, label="System.Action<CommandLine.UnParserSettings>", style=dashed];
m2_7 -> m2_13  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_7 -> m2_16  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_7 -> m2_56  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_21 -> m2_21  [color=green, key=1, label=builder, style=dashed];
m2_21 -> m2_22  [color=green, key=0, style=solid];
m2_21 -> m2_40  [color=green, key=2, style=dotted];
m2_21 -> m2_41  [color=green, key=2, style=dotted];
m2_21 -> m2_42  [color=green, key=2, style=dotted];
m2_21 -> m2_43  [color=green, key=2, style=dotted];
m2_21 -> m2_44  [color=green, key=2, style=dotted];
m2_21 -> m2_45  [color=green, key=2, style=dotted];
m2_21 -> m2_71  [color=green, key=1, label="lambda expression", style=dashed];
m2_21 -> m2_23  [color=green, key=1, label=builder, style=dashed];
m2_21 -> m2_75  [color=green, key=1, label=builder, style=dashed];
m2_21 -> m2_24  [color=green, key=1, label=builder, style=dashed];
m2_21 -> m2_25  [color=green, key=1, label=builder, style=dashed];
m2_21 -> m2_79  [color=green, key=1, label=builder, style=dashed];
m2_21 -> m2_26  [color=green, key=1, label=builder, style=dashed];
m2_10 -> m2_21  [color=green, key=1, label=settings, style=dashed];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_29  [key=2, style=dotted];
m2_10 -> m2_12  [color=darkseagreen4, key=1, label=settings, style=dashed];
m2_10 -> m2_19  [color=darkseagreen4, key=1, label=settings, style=dashed];
m2_10 -> m2_23  [color=darkseagreen4, key=1, label=settings, style=dashed];
m2_10 -> m2_75  [color=darkseagreen4, key=1, label=settings, style=dashed];
m2_14 -> m2_21  [color=green, key=1, label=builder, style=dashed];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_32  [key=2, style=dotted];
m2_14 -> m2_52  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_20 -> m2_21  [color=green, key=0, style=solid];
m2_20 -> m2_20  [color=darkseagreen4, key=1, label=info, style=dashed];
m2_20 -> m2_38  [key=2, style=dotted];
m2_20 -> m2_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_20 -> m2_24  [color=darkseagreen4, key=1, label=valSpecs, style=dashed];
m2_20 -> m2_25  [color=darkseagreen4, key=1, label=valSpecs, style=dashed];
m2_18 -> m2_21  [color=green, key=1, label=shortSwitches, style=dashed];
m2_18 -> m2_18  [color=darkseagreen4, key=1, label=info, style=dashed];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_39  [key=2, style=dotted];
m2_18 -> m2_65  [color=darkseagreen4, key=1, label=shortSwitches, style=dashed];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_40  [key=2, style=dotted];
m2_22 -> m2_46  [key=2, style=dotted];
m2_22 -> m2_47  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_48  [key=2, style=dotted];
m2_23 -> m2_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_24 -> m2_40  [key=2, style=dotted];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_46  [key=2, style=dotted];
m2_24 -> m2_47  [key=2, style=dotted];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_48  [key=2, style=dotted];
m2_25 -> m2_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_49  [key=2, style=dotted];
m2_26 -> m2_50  [key=2, style=dotted];
m2_8 -> m2_10  [key=0, style=solid];
m2_8 -> m2_9  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_30  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_22  [color=darkseagreen4, key=1, label=optSpecs, style=dashed];
m2_19 -> m2_23  [color=darkseagreen4, key=1, label=optSpecs, style=dashed];
m2_19 -> m2_38  [key=2, style=dotted];
m2_19 -> m2_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_31  [key=2, style=dotted];
m2_13 -> m2_15  [color=darkseagreen4, key=1, label=type, style=dashed];
m2_13 -> m2_16  [color=darkseagreen4, key=1, label=type, style=dashed];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_33  [key=2, style=dotted];
m2_15 -> m2_34  [key=2, style=dotted];
m2_15 -> m2_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_16 -> m2_20  [color=darkseagreen4, key=1, label=specs, style=dashed];
m2_16 -> m2_16  [color=darkseagreen4, key=1, label=info, style=dashed];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_35  [key=2, style=dotted];
m2_16 -> m2_36  [key=2, style=dotted];
m2_16 -> m2_37  [key=2, style=dotted];
m2_16 -> m2_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [color=darkseagreen4, key=1, label=allOptSpecs, style=dashed];
m2_17 -> m2_38  [key=2, style=dotted];
m2_17 -> m2_17  [color=darkseagreen4, key=1, label=info, style=dashed];
m2_17 -> m2_39  [key=2, style=dotted];
m2_17 -> m2_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_9 -> m2_27  [key=0, style=solid];
m2_9 -> m2_28  [key=2, style=dotted];
m2_27 -> m2_7  [color=blue, key=0, style=bold];
m2_126 -> m2_127  [key=0, style=solid];
m2_127 -> m2_45  [key=2, style=dotted];
m2_127 -> m2_32  [key=2, style=dotted];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_129  [key=2, style=dotted];
m2_127 -> m2_82  [key=2, style=dotted];
m2_127 -> m2_130  [key=2, style=dotted];
m2_127 -> m2_49  [key=2, style=dotted];
m2_128 -> m2_126  [color=blue, key=0, style=bold];
m2_145 -> m2_148  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_145 -> m2_150  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_152  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_145 -> m2_154  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_148 -> m2_31  [key=2, style=dotted];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_150  [key=0, style=solid];
m2_148 -> m2_142  [key=2, style=dotted];
m2_148 -> m2_143  [key=2, style=dotted];
m2_150 -> m2_31  [key=2, style=dotted];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_152  [key=0, style=solid];
m2_150 -> m2_158  [key=2, style=dotted];
m2_150 -> m2_159  [key=2, style=dotted];
m2_146 -> m2_148  [key=0, style=solid];
m2_146 -> m2_147  [key=0, style=solid];
m2_156 -> m2_157  [key=0, style=solid];
m2_149 -> m2_157  [key=0, style=solid];
m2_151 -> m2_157  [key=0, style=solid];
m2_152 -> m2_153  [key=0, style=solid];
m2_152 -> m2_154  [key=0, style=solid];
m2_147 -> m2_157  [key=0, style=solid];
m2_154 -> m2_156  [key=0, style=solid];
m2_154 -> m2_99  [key=2, style=dotted];
m2_154 -> m2_100  [key=2, style=dotted];
m2_154 -> m2_155  [key=0, style=solid];
m2_153 -> m2_157  [key=0, style=solid];
m2_155 -> m2_157  [key=0, style=solid];
m2_157 -> m2_145  [color=blue, key=0, style=bold];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_139  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_137 -> m2_140  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_138 -> m2_31  [key=2, style=dotted];
m2_138 -> m2_139  [key=0, style=solid];
m2_138 -> m2_140  [key=0, style=solid];
m2_138 -> m2_142  [key=2, style=dotted];
m2_138 -> m2_143  [key=2, style=dotted];
m2_139 -> m2_141  [key=0, style=solid];
m2_139 -> m2_144  [key=2, style=dotted];
m2_140 -> m2_141  [key=0, style=solid];
m2_141 -> m2_137  [color=blue, key=0, style=bold];
m2_160 -> m2_75  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_160 -> m2_79  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_160 -> m2_52  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_163 -> m2_75  [color=darkseagreen4, key=1, label=settings, style=dashed];
m2_162 -> m2_65  [color=darkseagreen4, key=1, label=shortSwitches, style=dashed];
m2_161 -> m2_56  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_165 -> m2_116  [color=darkseagreen4, key=1, label=doubQt, style=dashed];
m2_164 -> m2_104  [color=darkseagreen4, key=1, label=sep, style=dashed];
m3_25 -> m3_49  [key=0, style=solid];
m3_25 -> m3_56  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_51  [key=2, style=dotted];
m3_49 -> m3_52  [key=2, style=dotted];
m3_49 -> m3_53  [key=2, style=dotted];
m3_49 -> m3_54  [key=2, style=dotted];
m3_49 -> m3_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_49 -> m3_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_50 -> m3_25  [color=blue, key=0, style=bold];
m3_3 -> m3_13  [color=green, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>", style=dashed];
m3_3 -> m3_12  [key=0, style=solid];
m3_13 -> m3_14  [color=green, key=0, style=solid];
m3_13 -> m3_16  [color=green, key=2, style=dotted];
m3_13 -> m3_17  [color=green, key=2, style=dotted];
m3_13 -> m3_18  [color=green, key=2, style=dotted];
m3_13 -> m3_19  [color=green, key=2, style=dotted];
m3_13 -> m3_20  [color=green, key=2, style=dotted];
m3_13 -> m3_21  [color=green, key=2, style=dotted];
m3_13 -> m3_22  [color=green, key=2, style=dotted];
m3_13 -> m3_23  [color=green, key=2, style=dotted];
m3_13 -> m3_24  [color=green, key=2, style=dotted];
m3_13 -> m3_25  [color=green, key=2, style=dotted];
m3_13 -> m3_26  [color=green, key=2, style=dotted];
m3_12 -> m3_13  [color=green, key=0, style=solid];
m3_12 -> m3_15  [key=2, style=dotted];
m3_14 -> m3_3  [color=blue, key=0, style=bold];
m3_8 -> m3_9  [key=0, style=solid];
m3_35 -> m3_36  [color=green, key=0, style=solid];
m3_38 -> m3_39  [key=0, style=solid];
m3_46 -> m3_47  [key=0, style=solid];
m3_36 -> m3_37  [color=green, key=0, style=solid];
m3_36 -> m3_21  [color=green, key=2, style=dotted];
m3_36 -> m3_22  [color=green, key=2, style=dotted];
m3_37 -> m3_35  [color=blue, key=0, style=bold];
m3_44 -> m3_21  [key=2, style=dotted];
m3_44 -> m3_22  [key=2, style=dotted];
m3_44 -> m3_45  [key=0, style=solid];
m3_56 -> m3_22  [key=2, style=dotted];
m3_56 -> m3_57  [key=0, style=solid];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_41  [key=2, style=dotted];
m3_39 -> m3_42  [key=2, style=dotted];
m3_39 -> m3_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_40 -> m3_38  [color=blue, key=0, style=bold];
m3_48 -> m3_46  [color=blue, key=0, style=bold];
m3_47 -> m3_48  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m3_43 -> m3_44  [key=0, style=solid];
m3_45 -> m3_43  [color=blue, key=0, style=bold];
m3_55 -> m3_56  [key=0, style=solid];
m3_57 -> m3_55  [color=blue, key=0, style=bold];
m3_58 -> m3_59  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [key=2, style=dotted];
m3_5 -> m3_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_11  [key=2, style=dotted];
m3_6 -> m3_4  [color=blue, key=0, style=bold];
m3_60 -> m3_58  [color=blue, key=0, style=bold];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_61  [key=2, style=dotted];
m3_10 -> m3_8  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_0 -> m3_9  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_1 -> m3_3  [key=2, style=dotted];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_26 -> m3_27  [color=green, key=0, style=solid];
m3_26 -> m3_36  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_26 -> m3_39  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m3_26 -> m3_44  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_27 -> m3_28  [color=green, key=0, style=solid];
m3_27 -> m3_29  [color=green, key=2, style=dotted];
m3_27 -> m3_23  [color=green, key=2, style=dotted];
m3_27 -> m3_30  [color=green, key=2, style=dotted];
m3_27 -> m3_17  [color=green, key=2, style=dotted];
m3_27 -> m3_31  [color=green, key=2, style=dotted];
m3_27 -> m3_21  [color=green, key=2, style=dotted];
m3_27 -> m3_32  [color=green, key=2, style=dotted];
m3_27 -> m3_33  [color=green, key=2, style=dotted];
m3_27 -> m3_34  [color=green, key=2, style=dotted];
m3_27 -> m3_35  [color=green, key=1, label="lambda expression", style=dashed];
m3_27 -> m3_38  [color=green, key=1, label="lambda expression", style=dashed];
m3_27 -> m3_46  [color=green, key=1, label="lambda expression", style=dashed];
m3_28 -> m3_26  [color=blue, key=0, style=bold];
m3_64 -> m3_36  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_64 -> m3_39  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_64 -> m3_44  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_65 -> m3_36  [color=green, key=1, label="System.StringComparer", style=dashed];
m3_65 -> m3_39  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_65 -> m3_44  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_67 -> m3_56  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_68 -> m3_56  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_66 -> m3_39  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m3_62 -> m3_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_62 -> m3_9  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_63 -> m3_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
}
