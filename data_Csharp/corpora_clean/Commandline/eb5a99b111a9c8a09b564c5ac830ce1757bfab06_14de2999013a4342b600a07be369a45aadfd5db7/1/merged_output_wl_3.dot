digraph  {
n41 [label="Ninject.Activation.Caching.ActivationCache", span=""];
n0 [cluster="Ninject.Activation.Caching.ActivationCache.ActivationCache(Ninject.Activation.Caching.ICachePruner)", label="Entry Ninject.Activation.Caching.ActivationCache.ActivationCache(Ninject.Activation.Caching.ICachePruner)", span="39-39"];
n1 [cluster="Ninject.Activation.Caching.ActivationCache.ActivationCache(Ninject.Activation.Caching.ICachePruner)", label="cachePruner.Start(this)", span="41-41"];
n2 [cluster="Ninject.Activation.Caching.ActivationCache.ActivationCache(Ninject.Activation.Caching.ICachePruner)", label="Exit Ninject.Activation.Caching.ActivationCache.ActivationCache(Ninject.Activation.Caching.ICachePruner)", span="39-39"];
n3 [cluster="Ninject.Activation.Caching.ICachePruner.Start(Ninject.Activation.Caching.IPruneable)", label="Entry Ninject.Activation.Caching.ICachePruner.Start(Ninject.Activation.Caching.IPruneable)", span="25-25"];
n4 [cluster="Ninject.Activation.Caching.ActivationCache.Clear()", label="Entry Ninject.Activation.Caching.ActivationCache.Clear()", span="71-71"];
n5 [cluster="Ninject.Activation.Caching.ActivationCache.Clear()", label="this.activatedObjects", span="73-73"];
n6 [cluster="Ninject.Activation.Caching.ActivationCache.Clear()", label="this.activatedObjects.Clear()", span="75-75"];
n7 [cluster="Ninject.Activation.Caching.ActivationCache.Clear()", label="this.deactivatedObjects", span="78-78"];
n10 [cluster="System.Collections.Generic.HashSet<T>.Clear()", label="Entry System.Collections.Generic.HashSet<T>.Clear()", span="0-0"];
n8 [cluster="Ninject.Activation.Caching.ActivationCache.Clear()", label="this.deactivatedObjects.Clear()", span="80-80"];
n9 [cluster="Ninject.Activation.Caching.ActivationCache.Clear()", label="Exit Ninject.Activation.Caching.ActivationCache.Clear()", span="71-71"];
n11 [cluster="Ninject.Activation.Caching.ActivationCache.AddActivatedInstance(object)", label="Entry Ninject.Activation.Caching.ActivationCache.AddActivatedInstance(object)", span="88-88"];
n12 [cluster="Ninject.Activation.Caching.ActivationCache.AddActivatedInstance(object)", label="this.activatedObjects", span="90-90"];
n13 [cluster="Ninject.Activation.Caching.ActivationCache.AddActivatedInstance(object)", label="this.activatedObjects.Add(new ReferenceEqualWeakReference(instance))", span="95-95"];
n14 [cluster="Ninject.Activation.Caching.ActivationCache.AddActivatedInstance(object)", label="Exit Ninject.Activation.Caching.ActivationCache.AddActivatedInstance(object)", span="88-88"];
n15 [cluster="Ninject.Infrastructure.ReferenceEqualWeakReference.ReferenceEqualWeakReference(object)", label="Entry Ninject.Infrastructure.ReferenceEqualWeakReference.ReferenceEqualWeakReference(object)", span="29-29"];
n16 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
n17 [cluster="Ninject.Activation.Caching.ActivationCache.AddDeactivatedInstance(object)", label="Entry Ninject.Activation.Caching.ActivationCache.AddDeactivatedInstance(object)", span="104-104"];
n18 [cluster="Ninject.Activation.Caching.ActivationCache.AddDeactivatedInstance(object)", label="this.deactivatedObjects", span="106-106"];
n19 [cluster="Ninject.Activation.Caching.ActivationCache.AddDeactivatedInstance(object)", label="this.deactivatedObjects.Add(new ReferenceEqualWeakReference(instance))", span="111-111"];
n20 [cluster="Ninject.Activation.Caching.ActivationCache.AddDeactivatedInstance(object)", label="Exit Ninject.Activation.Caching.ActivationCache.AddDeactivatedInstance(object)", span="104-104"];
n21 [cluster="Ninject.Activation.Caching.ActivationCache.IsActivated(object)", label="Entry Ninject.Activation.Caching.ActivationCache.IsActivated(object)", span="123-123"];
n22 [cluster="Ninject.Activation.Caching.ActivationCache.IsActivated(object)", label="return this.activatedObjects.Contains(instance);", span="128-128"];
n23 [cluster="Ninject.Activation.Caching.ActivationCache.IsActivated(object)", label="Exit Ninject.Activation.Caching.ActivationCache.IsActivated(object)", span="123-123"];
n24 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
n25 [cluster="Ninject.Activation.Caching.ActivationCache.IsDeactivated(object)", label="Entry Ninject.Activation.Caching.ActivationCache.IsDeactivated(object)", span="139-139"];
n26 [cluster="Ninject.Activation.Caching.ActivationCache.IsDeactivated(object)", label="return this.deactivatedObjects.Contains(instance);", span="144-144"];
n27 [cluster="Ninject.Activation.Caching.ActivationCache.IsDeactivated(object)", label="Exit Ninject.Activation.Caching.ActivationCache.IsDeactivated(object)", span="139-139"];
n28 [cluster="Ninject.Activation.Caching.ActivationCache.Prune()", label="Entry Ninject.Activation.Caching.ActivationCache.Prune()", span="151-151"];
n29 [cluster="Ninject.Activation.Caching.ActivationCache.Prune()", label="this.activatedObjects", span="153-153"];
n30 [cluster="Ninject.Activation.Caching.ActivationCache.Prune()", label="RemoveDeadObjects(this.activatedObjects)", span="155-155"];
n31 [cluster="Ninject.Activation.Caching.ActivationCache.Prune()", label="this.deactivatedObjects", span="158-158"];
n34 [cluster="Ninject.Activation.Caching.ActivationCache.RemoveDeadObjects(System.Collections.Generic.HashSet<object>)", label="Entry Ninject.Activation.Caching.ActivationCache.RemoveDeadObjects(System.Collections.Generic.HashSet<object>)", span="182-182"];
n32 [cluster="Ninject.Activation.Caching.ActivationCache.Prune()", label="RemoveDeadObjects(this.deactivatedObjects)", span="160-160"];
n33 [cluster="Ninject.Activation.Caching.ActivationCache.Prune()", label="Exit Ninject.Activation.Caching.ActivationCache.Prune()", span="151-151"];
n35 [cluster="Ninject.Activation.Caching.ActivationCache.RemoveDeadObjects(System.Collections.Generic.HashSet<object>)", label="objects.RemoveWhere(reference => !((ReferenceEqualWeakReference)reference).IsAlive)", span="184-184"];
n36 [cluster="Ninject.Activation.Caching.ActivationCache.RemoveDeadObjects(System.Collections.Generic.HashSet<object>)", label="Exit Ninject.Activation.Caching.ActivationCache.RemoveDeadObjects(System.Collections.Generic.HashSet<object>)", span="182-182"];
n37 [cluster="System.Collections.Generic.HashSet<T>.RemoveWhere(System.Predicate<T>)", label="Entry System.Collections.Generic.HashSet<T>.RemoveWhere(System.Predicate<T>)", span="0-0"];
n38 [cluster="lambda expression", label="Entry lambda expression", span="184-184"];
n39 [cluster="lambda expression", label="!((ReferenceEqualWeakReference)reference).IsAlive", span="184-184"];
n40 [cluster="lambda expression", label="Exit lambda expression", span="184-184"];
m0_16 [cluster="Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", file="FakeInterfaceOptions.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", span="116-116"];
m0_17 [cluster="Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", file="FakeInterfaceOptions.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToConstructor<TImplementation>(System.Linq.Expressions.Expression<System.Func<Ninject.Syntax.IConstructorArgumentSyntax, TImplementation>>)", span="116-116"];
m0_0 [cluster="Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.To<TImplementation>()", file="FakeInterfaceOptions.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.To<TImplementation>()", span="44-44"];
m0_1 [cluster="Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.To<TImplementation>()", file="FakeInterfaceOptions.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.To<TImplementation>()", span="44-44"];
m0_14 [cluster="Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToConstant<TImplementation>(TImplementation)", file="FakeInterfaceOptions.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToConstant<TImplementation>(TImplementation)", span="106-106"];
m0_15 [cluster="Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToConstant<TImplementation>(TImplementation)", file="FakeInterfaceOptions.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToConstant<TImplementation>(TImplementation)", span="106-106"];
m0_4 [cluster="Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToProvider<TProvider>()", file="FakeInterfaceOptions.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToProvider<TProvider>()", span="60-60"];
m0_5 [cluster="Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToProvider<TProvider>()", file="FakeInterfaceOptions.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToProvider<TProvider>()", span="60-60"];
m0_10 [cluster="Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToProvider<TImplementation>(Ninject.Activation.IProvider<TImplementation>)", file="FakeInterfaceOptions.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToProvider<TImplementation>(Ninject.Activation.IProvider<TImplementation>)", span="87-87"];
m0_11 [cluster="Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToProvider<TImplementation>(Ninject.Activation.IProvider<TImplementation>)", file="FakeInterfaceOptions.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToProvider<TImplementation>(Ninject.Activation.IProvider<TImplementation>)", span="87-87"];
m0_6 [cluster="Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToProvider<TProvider, TImplementation>()", file="FakeInterfaceOptions.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToProvider<TProvider, TImplementation>()", span="69-69"];
m0_7 [cluster="Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToProvider<TProvider, TImplementation>()", file="FakeInterfaceOptions.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToProvider<TProvider, TImplementation>()", span="69-69"];
m0_8 [cluster="Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToProvider(System.Type)", file="FakeInterfaceOptions.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToProvider(System.Type)", span="79-79"];
m0_9 [cluster="Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToProvider(System.Type)", file="FakeInterfaceOptions.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToProvider(System.Type)", span="79-79"];
m0_2 [cluster="Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.To(System.Type)", file="FakeInterfaceOptions.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.To(System.Type)", span="52-52"];
m0_3 [cluster="Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.To(System.Type)", file="FakeInterfaceOptions.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.To(System.Type)", span="52-52"];
m0_12 [cluster="Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToMethod<TImplementation>(System.Func<Ninject.Activation.IContext, TImplementation>)", file="FakeInterfaceOptions.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToMethod<TImplementation>(System.Func<Ninject.Activation.IContext, TImplementation>)", span="96-96"];
m0_13 [cluster="Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToMethod<TImplementation>(System.Func<Ninject.Activation.IContext, TImplementation>)", file="FakeInterfaceOptions.cs", label="Exit Ninject.Syntax.IBindingToSyntax<T1, T2, T3>.ToMethod<TImplementation>(System.Func<Ninject.Activation.IContext, TImplementation>)", span="96-96"];
m4_0 [cluster="Ninject.Activation.Strategies.BindingActionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithEnum.cs", label="Entry Ninject.Activation.Strategies.BindingActionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="27-27"];
m4_1 [cluster="Ninject.Activation.Strategies.BindingActionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithEnum.cs", label="context.Binding.ActivationActions.Map(action => action(context, reference.Instance))", span="29-29"];
m4_2 [cluster="Ninject.Activation.Strategies.BindingActionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithEnum.cs", label="Exit Ninject.Activation.Strategies.BindingActionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="27-27"];
m4_7 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="FakeOptionsWithEnum.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m4_3 [cluster="System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", file="FakeOptionsWithEnum.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", span="28-28"];
m4_11 [cluster="lambda expression", file="FakeOptionsWithEnum.cs", label="Entry lambda expression", span="39-39"];
m4_5 [cluster="lambda expression", file="FakeOptionsWithEnum.cs", label="action(context, reference.Instance)", span="29-29"];
m4_4 [cluster="lambda expression", file="FakeOptionsWithEnum.cs", label="Entry lambda expression", span="29-29"];
m4_6 [cluster="lambda expression", file="FakeOptionsWithEnum.cs", label="Exit lambda expression", span="29-29"];
m4_12 [cluster="lambda expression", file="FakeOptionsWithEnum.cs", label="action(context, reference.Instance)", span="39-39"];
m4_13 [cluster="lambda expression", file="FakeOptionsWithEnum.cs", label="Exit lambda expression", span="39-39"];
m4_8 [cluster="Ninject.Activation.Strategies.BindingActionStrategy.Deactivate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithEnum.cs", label="Entry Ninject.Activation.Strategies.BindingActionStrategy.Deactivate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="37-37"];
m4_9 [cluster="Ninject.Activation.Strategies.BindingActionStrategy.Deactivate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithEnum.cs", label="context.Binding.DeactivationActions.Map(action => action(context, reference.Instance))", span="39-39"];
m4_10 [cluster="Ninject.Activation.Strategies.BindingActionStrategy.Deactivate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithEnum.cs", label="Exit Ninject.Activation.Strategies.BindingActionStrategy.Deactivate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="37-37"];
m4_14 [file="FakeOptionsWithEnum.cs", label="Ninject.Activation.IContext", span=""];
m4_15 [file="FakeOptionsWithEnum.cs", label="Ninject.Activation.InstanceReference", span=""];
m4_16 [file="FakeOptionsWithEnum.cs", label="Ninject.Activation.IContext", span=""];
m4_17 [file="FakeOptionsWithEnum.cs", label="Ninject.Activation.InstanceReference", span=""];
m11_14 [cluster="System.Reflection.Assembly.HasNinjectModules()", file="FakeOptionsWithMinZero.cs", label="Entry System.Reflection.Assembly.HasNinjectModules()", span="22-22"];
m11_10 [cluster="Unk.Load", file="FakeOptionsWithMinZero.cs", label="Entry Unk.Load", span=""];
m11_9 [cluster="Unk.Select", file="FakeOptionsWithMinZero.cs", label="Entry Unk.Select", span=""];
m11_4 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="FakeOptionsWithMinZero.cs", label="Entry Ninject.Modules.CompiledModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="76-76"];
m11_5 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="FakeOptionsWithMinZero.cs", label="var assembliesWithModules = this.assemblyNameRetriever.GetAssemblyNames(filenames, asm => asm.HasNinjectModules())", span="78-78"];
m11_6 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="FakeOptionsWithMinZero.cs", label="this.KernelConfiguration.Load(assembliesWithModules.Select(Assembly.Load))", span="79-79"];
m11_7 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="FakeOptionsWithMinZero.cs", label="Exit Ninject.Modules.CompiledModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="76-76"];
m11_0 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.CompiledModuleLoaderPlugin(Ninject.IKernelConfiguration, Ninject.Modules.IAssemblyNameRetriever)", file="FakeOptionsWithMinZero.cs", label="Entry Ninject.Modules.CompiledModuleLoaderPlugin.CompiledModuleLoaderPlugin(Ninject.IKernelConfiguration, Ninject.Modules.IAssemblyNameRetriever)", span="53-53"];
m11_1 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.CompiledModuleLoaderPlugin(Ninject.IKernelConfiguration, Ninject.Modules.IAssemblyNameRetriever)", file="FakeOptionsWithMinZero.cs", label="this.KernelConfiguration = kernelConfiguration", span="55-55"];
m11_2 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.CompiledModuleLoaderPlugin(Ninject.IKernelConfiguration, Ninject.Modules.IAssemblyNameRetriever)", file="FakeOptionsWithMinZero.cs", label="this.assemblyNameRetriever = assemblyNameRetriever", span="56-56"];
m11_3 [cluster="Ninject.Modules.CompiledModuleLoaderPlugin.CompiledModuleLoaderPlugin(Ninject.IKernelConfiguration, Ninject.Modules.IAssemblyNameRetriever)", file="FakeOptionsWithMinZero.cs", label="Exit Ninject.Modules.CompiledModuleLoaderPlugin.CompiledModuleLoaderPlugin(Ninject.IKernelConfiguration, Ninject.Modules.IAssemblyNameRetriever)", span="53-53"];
m11_11 [cluster="lambda expression", file="FakeOptionsWithMinZero.cs", label="Entry lambda expression", span="78-78"];
m11_12 [cluster="lambda expression", file="FakeOptionsWithMinZero.cs", label="asm.HasNinjectModules()", span="78-78"];
m11_13 [cluster="lambda expression", file="FakeOptionsWithMinZero.cs", label="Exit lambda expression", span="78-78"];
m11_8 [cluster="Ninject.Modules.IAssemblyNameRetriever.GetAssemblyNames(System.Collections.Generic.IEnumerable<string>, System.Predicate<System.Reflection.Assembly>)", file="FakeOptionsWithMinZero.cs", label="Entry Ninject.Modules.IAssemblyNameRetriever.GetAssemblyNames(System.Collections.Generic.IEnumerable<string>, System.Predicate<System.Reflection.Assembly>)", span="41-41"];
m11_15 [file="FakeOptionsWithMinZero.cs", label="Ninject.Modules.CompiledModuleLoaderPlugin", span=""];
m18_134 [cluster="Ninject.KernelBase.Release(object)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.Release(object)", span="304-304"];
m18_135 [cluster="Ninject.KernelBase.Release(object)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ensure.ArgumentNotNull(instance, ''instance'')", span="306-306"];
m18_137 [cluster="Ninject.KernelBase.Release(object)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="return cache.Release(instance);", span="308-308"];
m18_136 [cluster="Ninject.KernelBase.Release(object)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="var cache = this.Components.Get<ICache>()", span="307-307"];
m18_138 [cluster="Ninject.KernelBase.Release(object)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.Release(object)", span="304-304"];
m18_38 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", span="37-37"];
m18_146 [cluster="Unk.Any", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Unk.Any", span=""];
m18_65 [cluster="Ninject.KernelBase.GetModules()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.GetModules()", span="194-194"];
m18_66 [cluster="Ninject.KernelBase.GetModules()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="return this.modules.Values.ToArray();", span="196-196"];
m18_67 [cluster="Ninject.KernelBase.GetModules()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.GetModules()", span="194-194"];
m18_199 [cluster="System.Collections.Generic.IComparer<T>.Compare(T, T)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry System.Collections.Generic.IComparer<T>.Compare(T, T)", span="0-0"];
m18_145 [cluster="Ninject.KernelBase.SatifiesRequest(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.SatifiesRequest(Ninject.Activation.IRequest)", span="462-462"];
m18_240 [cluster="Ninject.KernelBase.SatifiesRequest(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="return binding => binding.Matches(request) && request.Matches(binding);", span="464-464"];
m18_241 [cluster="Ninject.KernelBase.SatifiesRequest(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.SatifiesRequest(Ninject.Activation.IRequest)", span="462-462"];
m18_0 [cluster="Ninject.KernelBase.KernelBase()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.KernelBase()", span="50-50"];
m18_1 [cluster="Ninject.KernelBase.KernelBase()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.KernelBase()", span="50-50"];
m18_98 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m18_58 [cluster="Ninject.Infrastructure.Multimap<K, V>.Remove(K, V)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Infrastructure.Multimap<K, V>.Remove(K, V)", span="78-78"];
m18_183 [cluster="Ninject.ActivationException.ActivationException(string)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.ActivationException.ActivationException(string)", span="35-35"];
m18_284 [cluster="Ninject.Activation.Context.Context(Ninject.IReadonlyKernel, Ninject.Activation.IRequest, Ninject.Planning.Bindings.IBinding, Ninject.Activation.Caching.ICache, Ninject.Planning.IPlanner, Ninject.Activation.IPipeline)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Activation.Context.Context(Ninject.IReadonlyKernel, Ninject.Activation.IRequest, Ninject.Planning.Bindings.IBinding, Ninject.Activation.Caching.ICache, Ninject.Planning.IPlanner, Ninject.Activation.IPipeline)", span="91-91"];
m18_83 [cluster="string.IsNullOrEmpty(string)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m18_27 [cluster="Ninject.KernelBase.Dispose(bool)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.Dispose(bool)", span="121-121"];
m18_28 [cluster="Ninject.KernelBase.Dispose(bool)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="disposing && !IsDisposed", span="123-123"];
m18_33 [cluster="Ninject.KernelBase.Dispose(bool)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="base.Dispose(disposing)", span="135-135"];
m18_29 [cluster="Ninject.KernelBase.Dispose(bool)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.Components != null", span="125-125"];
m18_30 [cluster="Ninject.KernelBase.Dispose(bool)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="var cache = this.Components.Get<ICache>()", span="128-128"];
m18_31 [cluster="Ninject.KernelBase.Dispose(bool)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="cache.Clear()", span="129-129"];
m18_32 [cluster="Ninject.KernelBase.Dispose(bool)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.Components.Dispose()", span="131-131"];
m18_34 [cluster="Ninject.KernelBase.Dispose(bool)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.Dispose(bool)", span="121-121"];
m18_86 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m18_133 [cluster="Ninject.Activation.IPipeline.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Activation.IPipeline.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="33-33"];
m18_95 [cluster="Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", span="248-248"];
m18_96 [cluster="Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.Load(assemblies.SelectMany(asm => asm.GetNinjectModules()))", span="250-250"];
m18_97 [cluster="Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", span="248-248"];
m18_188 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m18_226 [cluster="Ninject.Infrastructure.Multimap<K, V>.ContainsKey(K)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Infrastructure.Multimap<K, V>.ContainsKey(K)", span="113-113"];
m18_189 [cluster="Unk.Format", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Unk.Format", span=""];
m18_228 [cluster="System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", span="28-28"];
m18_45 [cluster="Ninject.Infrastructure.Multimap<K, V>.RemoveAll(K)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Infrastructure.Multimap<K, V>.RemoveAll(K)", span="94-94"];
m18_36 [cluster="Ninject.Activation.Caching.ICache.Clear()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Activation.Caching.ICache.Clear()", span="57-57"];
m18_37 [cluster="System.IDisposable.Dispose()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m18_89 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m18_277 [cluster="Ninject.KernelBase.TypeIsSelfBindable(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.TypeIsSelfBindable(System.Type)", span="529-529"];
m18_278 [cluster="Ninject.KernelBase.TypeIsSelfBindable(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="return !service.IsInterface\r\n                && !service.IsAbstract\r\n                && !service.IsValueType\r\n                && service != typeof(string)\r\n                && !service.ContainsGenericParameters;", span="531-535"];
m18_279 [cluster="Ninject.KernelBase.TypeIsSelfBindable(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.TypeIsSelfBindable(System.Type)", span="529-529"];
m18_111 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(string)", span="87-87"];
m18_128 [cluster="Ninject.Planning.Bindings.Binding.Binding(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Planning.Bindings.Binding.Binding(System.Type)", span="28-28"];
m18_68 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m18_218 [cluster="Ninject.Activation.Blocks.ActivationBlock.ActivationBlock(Ninject.Syntax.IResolutionRoot)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Activation.Blocks.ActivationBlock.ActivationBlock(Ninject.Syntax.IResolutionRoot)", span="41-41"];
m18_185 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)", span="0-0"];
m18_227 [cluster="Ninject.Components.IComponentContainer.GetAll<T>()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Components.IComponentContainer.GetAll<T>()", span="66-66"];
m18_22 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="49-49"];
m18_155 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", span="343-343"];
m18_156 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ensure.ArgumentNotNull(request, ''request'')", span="345-345"];
m18_159 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.CanResolve(request) || this.HandleMissingBinding(request)", span="350-350"];
m18_160 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="resolveBindings = this.GetBindings(request.Service)\r\n                                      .Where(this.SatifiesRequest(request))", span="352-353"];
m18_162 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="request.IsOptional", span="359-359"];
m18_164 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="throw new ActivationException(ExceptionFormatter.CouldNotResolveBinding(request));", span="364-364"];
m18_165 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="request.IsUnique", span="367-367"];
m18_170 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="request.IsOptional && !request.ForceUnique", span="376-376"];
m18_172 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="var formattedBindings =\r\n                        from binding in resolveBindings\r\n                        let context = this.CreateContext(request, binding)\r\n                        select binding.Format(context)", span="381-384"];
m18_173 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="throw new ActivationException(ExceptionFormatter.CouldNotUniquelyResolveBinding(request, formattedBindings.ToArray()));", span="385-385"];
m18_176 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="return resolveBindings\r\n                .Select(binding => this.CreateContext(request, binding).Resolve());", span="394-395"];
m18_157 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="var bindingPrecedenceComparer = this.GetBindingPrecedenceComparer()", span="347-347"];
m18_158 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="var resolveBindings = Enumerable.Empty<IBinding>()", span="348-348"];
m18_166 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="resolveBindings = resolveBindings.OrderByDescending(b => b, bindingPrecedenceComparer).ToList()", span="369-369"];
m18_168 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="resolveBindings =\r\n                    resolveBindings.TakeWhile(binding => bindingPrecedenceComparer.Compare(binding, model) == 0)", span="371-372"];
m18_161 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="!resolveBindings.Any()", span="357-357"];
m18_174 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="resolveBindings.Any(binding => !binding.IsImplicit)", span="389-389"];
m18_175 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="resolveBindings = resolveBindings.Where(binding => !binding.IsImplicit)", span="391-391"];
m18_163 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="return Enumerable.Empty<object>();", span="361-361"];
m18_167 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="var model = resolveBindings.First()", span="370-370"];
m18_169 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="resolveBindings.Count() > 1", span="374-374"];
m18_171 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="return Enumerable.Empty<object>();", span="378-378"];
m18_177 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", span="343-343"];
m18_46 [cluster="Ninject.Infrastructure.Multimap<K, V>.Clear()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Infrastructure.Multimap<K, V>.Clear()", span="103-103"];
m18_245 [cluster="Ninject.Planning.Bindings.IBindingConfiguration.Matches(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Planning.Bindings.IBindingConfiguration.Matches(Ninject.Activation.IRequest)", span="103-103"];
m18_314 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry lambda expression", span="580-580"];
m18_99 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry lambda expression", span="250-250"];
m18_100 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="asm.GetNinjectModules()", span="250-250"];
m18_101 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit lambda expression", span="250-250"];
m18_152 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="(!ignoreImplicitBindings || !binding.IsImplicit) && this.SatifiesRequest(request)(binding)", span="334-334"];
m18_151 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry lambda expression", span="334-334"];
m18_153 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit lambda expression", span="334-334"];
m18_207 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.CreateContext(request, binding).Resolve()", span="395-395"];
m18_197 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="bindingPrecedenceComparer.Compare(binding, model) == 0", span="372-372"];
m18_193 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry lambda expression", span="369-369"];
m18_196 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry lambda expression", span="372-372"];
m18_200 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry lambda expression", span="389-389"];
m18_203 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry lambda expression", span="391-391"];
m18_206 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry lambda expression", span="395-395"];
m18_194 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label=b, span="369-369"];
m18_195 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit lambda expression", span="369-369"];
m18_198 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit lambda expression", span="372-372"];
m18_201 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="!binding.IsImplicit", span="389-389"];
m18_202 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit lambda expression", span="389-389"];
m18_204 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="!binding.IsImplicit", span="391-391"];
m18_205 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit lambda expression", span="391-391"];
m18_208 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit lambda expression", span="395-395"];
m18_230 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="resolver.Resolve(this.bindings, service)", span="440-440"];
m18_234 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.bindingCache.Add(service, binding)", span="441-441"];
m18_229 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry lambda expression", span="440-440"];
m18_233 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry lambda expression", span="441-441"];
m18_231 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit lambda expression", span="440-440"];
m18_235 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit lambda expression", span="441-441"];
m18_243 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="binding.Matches(request) && request.Matches(binding)", span="464-464"];
m18_242 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry lambda expression", span="464-464"];
m18_244 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit lambda expression", span="464-464"];
m18_268 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="c.Resolve(this.bindings, request).ToList()", span="503-503"];
m18_267 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry lambda expression", span="503-503"];
m18_271 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry lambda expression", span="504-504"];
m18_274 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry lambda expression", span="515-515"];
m18_269 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit lambda expression", span="503-503"];
m18_272 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="b.Any()", span="504-504"];
m18_273 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit lambda expression", span="504-504"];
m18_275 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="binding.IsImplicit = true", span="515-515"];
m18_276 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit lambda expression", span="515-515"];
m18_289 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry lambda expression", span="554-554"];
m18_290 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.bindings.Add(binding.Service, binding)", span="554-554"];
m18_291 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit lambda expression", span="554-554"];
m18_306 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="b != null", span="577-577"];
m18_309 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="b.IsConditional", span="578-578"];
m18_312 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="!b.Service.ContainsGenericParameters", span="579-579"];
m18_315 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="!b.IsImplicit", span="580-580"];
m18_305 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry lambda expression", span="577-577"];
m18_307 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit lambda expression", span="577-577"];
m18_308 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry lambda expression", span="578-578"];
m18_310 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit lambda expression", span="578-578"];
m18_311 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry lambda expression", span="579-579"];
m18_313 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit lambda expression", span="579-579"];
m18_316 [cluster="lambda expression", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit lambda expression", span="580-580"];
m18_139 [cluster="Ninject.Activation.Caching.ICache.Release(object)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Activation.Caching.ICache.Release(object)", span="45-45"];
m18_186 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m18_64 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m18_140 [cluster="Ninject.KernelBase.CanResolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.CanResolve(Ninject.Activation.IRequest)", span="316-316"];
m18_141 [cluster="Ninject.KernelBase.CanResolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ensure.ArgumentNotNull(request, ''request'')", span="318-318"];
m18_142 [cluster="Ninject.KernelBase.CanResolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="return this.GetBindings(request.Service).Any(this.SatifiesRequest(request));", span="319-319"];
m18_143 [cluster="Ninject.KernelBase.CanResolve(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.CanResolve(Ninject.Activation.IRequest)", span="316-316"];
m18_6 [cluster="Ninject.KernelBase.KernelBase(Ninject.Components.IComponentContainer, Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.KernelBase(Ninject.Components.IComponentContainer, Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", span="80-80"];
m18_7 [cluster="Ninject.KernelBase.KernelBase(Ninject.Components.IComponentContainer, Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ensure.ArgumentNotNull(components, ''components'')", span="82-82"];
m18_8 [cluster="Ninject.KernelBase.KernelBase(Ninject.Components.IComponentContainer, Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ensure.ArgumentNotNull(settings, ''settings'')", span="83-83"];
m18_9 [cluster="Ninject.KernelBase.KernelBase(Ninject.Components.IComponentContainer, Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ensure.ArgumentNotNull(modules, ''modules'')", span="84-84"];
m18_10 [cluster="Ninject.KernelBase.KernelBase(Ninject.Components.IComponentContainer, Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.settings = settings", span="86-86"];
m18_11 [cluster="Ninject.KernelBase.KernelBase(Ninject.Components.IComponentContainer, Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.Components = components", span="88-88"];
m18_12 [cluster="Ninject.KernelBase.KernelBase(Ninject.Components.IComponentContainer, Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="components.Kernel = this", span="89-89"];
m18_18 [cluster="Ninject.KernelBase.KernelBase(Ninject.Components.IComponentContainer, Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.Load(modules)", span="102-102"];
m18_13 [cluster="Ninject.KernelBase.KernelBase(Ninject.Components.IComponentContainer, Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.AddComponents()", span="91-91"];
m18_14 [cluster="Ninject.KernelBase.KernelBase(Ninject.Components.IComponentContainer, Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.Bind<IKernel>().ToConstant(this).InTransientScope()", span="93-93"];
m18_15 [cluster="Ninject.KernelBase.KernelBase(Ninject.Components.IComponentContainer, Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.Bind<IResolutionRoot>().ToConstant(this).InTransientScope()", span="94-94"];
m18_16 [cluster="Ninject.KernelBase.KernelBase(Ninject.Components.IComponentContainer, Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.settings.LoadExtensions", span="97-97"];
m18_17 [cluster="Ninject.KernelBase.KernelBase(Ninject.Components.IComponentContainer, Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.Load(this.settings.ExtensionSearchPatterns)", span="99-99"];
m18_19 [cluster="Ninject.KernelBase.KernelBase(Ninject.Components.IComponentContainer, Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.KernelBase(Ninject.Components.IComponentContainer, Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", span="80-80"];
m18_63 [cluster="Ninject.Infrastructure.Ensure.ArgumentNotNullOrEmpty(string, string)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNullOrEmpty(string, string)", span="22-22"];
m18_296 [cluster="Ninject.KernelBase.BindingPrecedenceComparer.Compare(Ninject.Planning.Bindings.IBinding, Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.BindingPrecedenceComparer.Compare(Ninject.Planning.Bindings.IBinding, Ninject.Planning.Bindings.IBinding)", span="567-567"];
m18_297 [cluster="Ninject.KernelBase.BindingPrecedenceComparer.Compare(Ninject.Planning.Bindings.IBinding, Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="x == y", span="569-569"];
m18_300 [cluster="Ninject.KernelBase.BindingPrecedenceComparer.Compare(Ninject.Planning.Bindings.IBinding, Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="var q = from func in funcs\r\n                        let xVal = func(x)\r\n                        where xVal != func(y) \r\n                        select xVal ? 1 : -1", span="583-586"];
m18_298 [cluster="Ninject.KernelBase.BindingPrecedenceComparer.Compare(Ninject.Planning.Bindings.IBinding, Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="return 0;", span="571-571"];
m18_299 [cluster="Ninject.KernelBase.BindingPrecedenceComparer.Compare(Ninject.Planning.Bindings.IBinding, Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="var funcs = new List<Func<IBinding, bool>>\r\n                            {\r\n                                b => b != null,       // null bindings should never happen, but just in case\r\n                                b => b.IsConditional, // conditional bindings > unconditional\r\n                                b => !b.Service.ContainsGenericParameters, // closed generics > open generics\r\n                                b => !b.IsImplicit,   // explicit bindings > implicit\r\n                            }", span="575-581"];
m18_301 [cluster="Ninject.KernelBase.BindingPrecedenceComparer.Compare(Ninject.Planning.Bindings.IBinding, Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="return q.FirstOrDefault();", span="590-590"];
m18_302 [cluster="Ninject.KernelBase.BindingPrecedenceComparer.Compare(Ninject.Planning.Bindings.IBinding, Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.BindingPrecedenceComparer.Compare(Ninject.Planning.Bindings.IBinding, Ninject.Planning.Bindings.IBinding)", span="567-567"];
m18_39 [cluster="Ninject.KernelBase.Unbind(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.Unbind(System.Type)", span="142-142"];
m18_40 [cluster="Ninject.KernelBase.Unbind(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ensure.ArgumentNotNull(service, ''service'')", span="144-144"];
m18_41 [cluster="Ninject.KernelBase.Unbind(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.bindings.RemoveAll(service)", span="146-146"];
m18_42 [cluster="Ninject.KernelBase.Unbind(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.bindingCache", span="148-148"];
m18_43 [cluster="Ninject.KernelBase.Unbind(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.bindingCache.Clear()", span="150-150"];
m18_44 [cluster="Ninject.KernelBase.Unbind(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.Unbind(System.Type)", span="142-142"];
m18_85 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModulesWithNullOrEmptyNamesAreNotSupported()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.ModulesWithNullOrEmptyNamesAreNotSupported()", span="44-44"];
m18_248 [cluster="Ninject.KernelBase.HandleMissingBinding(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.HandleMissingBinding(System.Type)", span="478-478"];
m18_249 [cluster="Ninject.KernelBase.HandleMissingBinding(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="return false;", span="480-480"];
m18_250 [cluster="Ninject.KernelBase.HandleMissingBinding(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.HandleMissingBinding(System.Type)", span="478-478"];
m18_303 [cluster="System.Collections.Generic.List<T>.List()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m18_236 [cluster="Ninject.Infrastructure.Multimap<K, V>.Add(K, V)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Infrastructure.Multimap<K, V>.Add(K, V)", span="64-64"];
m18_21 [cluster="Ninject.KernelBase.AddComponents()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.AddComponents()", span="470-470"];
m18_247 [cluster="Ninject.KernelBase.AddComponents()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.AddComponents()", span="470-470"];
m18_90 [cluster="Ninject.Modules.INinjectModule.OnVerifyRequiredModules()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Modules.INinjectModule.OnVerifyRequiredModules()", span="48-48"];
m18_24 [cluster="Ninject.Syntax.IBindingInSyntax<T>.InTransientScope()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Syntax.IBindingInSyntax<T>.InTransientScope()", span="47-47"];
m18_51 [cluster="Ninject.KernelBase.AddBindings(System.Collections.Generic.IEnumerable<Ninject.Planning.Bindings.IBinding>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.AddBindings(System.Collections.Generic.IEnumerable<Ninject.Planning.Bindings.IBinding>)", span="552-552"];
m18_285 [cluster="Ninject.KernelBase.AddBindings(System.Collections.Generic.IEnumerable<Ninject.Planning.Bindings.IBinding>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="bindings.Map(binding => this.bindings.Add(binding.Service, binding))", span="554-554"];
m18_286 [cluster="Ninject.KernelBase.AddBindings(System.Collections.Generic.IEnumerable<Ninject.Planning.Bindings.IBinding>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.bindingCache", span="556-556"];
m18_287 [cluster="Ninject.KernelBase.AddBindings(System.Collections.Generic.IEnumerable<Ninject.Planning.Bindings.IBinding>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.bindingCache.Clear()", span="557-557"];
m18_288 [cluster="Ninject.KernelBase.AddBindings(System.Collections.Generic.IEnumerable<Ninject.Planning.Bindings.IBinding>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.AddBindings(System.Collections.Generic.IEnumerable<Ninject.Planning.Bindings.IBinding>)", span="552-552"];
m18_131 [cluster="Ninject.Planning.IPlanner.GetPlan(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Planning.IPlanner.GetPlan(System.Type)", span="33-33"];
m18_264 [cluster="Unk.FirstOrDefault", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Unk.FirstOrDefault", span=""];
m18_82 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m18_246 [cluster="Ninject.Activation.IRequest.Matches(Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Activation.IRequest.Matches(Ninject.Planning.Bindings.IBinding)", span="91-91"];
m18_103 [cluster="Ninject.KernelBase.Unload(string)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.Unload(string)", span="258-258"];
m18_104 [cluster="Ninject.KernelBase.Unload(string)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ensure.ArgumentNotNullOrEmpty(name, ''name'')", span="260-260"];
m18_106 [cluster="Ninject.KernelBase.Unload(string)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="!this.modules.TryGetValue(name, out module)", span="264-264"];
m18_107 [cluster="Ninject.KernelBase.Unload(string)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="throw new NotSupportedException(ExceptionFormatter.NoModuleLoadedWithTheSpecifiedName(name));", span="266-266"];
m18_109 [cluster="Ninject.KernelBase.Unload(string)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.modules.Remove(name)", span="271-271"];
m18_105 [cluster="Ninject.KernelBase.Unload(string)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="INinjectModule module", span="262-262"];
m18_108 [cluster="Ninject.KernelBase.Unload(string)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="module.OnUnload(this)", span="269-269"];
m18_110 [cluster="Ninject.KernelBase.Unload(string)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.Unload(string)", span="258-258"];
m18_154 [cluster="System.Func<T, TResult>.Invoke(T)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m18_147 [cluster="Ninject.KernelBase.CanResolve(Ninject.Activation.IRequest, bool)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.CanResolve(Ninject.Activation.IRequest, bool)", span="330-330"];
m18_148 [cluster="Ninject.KernelBase.CanResolve(Ninject.Activation.IRequest, bool)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ensure.ArgumentNotNull(request, ''request'')", span="332-332"];
m18_149 [cluster="Ninject.KernelBase.CanResolve(Ninject.Activation.IRequest, bool)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="return this.GetBindings(request.Service)\r\n                .Any(binding => (!ignoreImplicitBindings || !binding.IsImplicit) && this.SatifiesRequest(request)(binding));", span="333-334"];
m18_150 [cluster="Ninject.KernelBase.CanResolve(Ninject.Activation.IRequest, bool)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.CanResolve(Ninject.Activation.IRequest, bool)", span="330-330"];
m18_179 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m18_181 [cluster="Unk.Where", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Unk.Where", span=""];
m18_239 [cluster="Ninject.KernelBase.BindingPrecedenceComparer.BindingPrecedenceComparer()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.BindingPrecedenceComparer.BindingPrecedenceComparer()", span="565-565"];
m18_20 [cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="17-17"];
m18_88 [cluster="Ninject.Modules.INinjectModule.OnLoad(Ninject.IKernelConfiguration)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Modules.INinjectModule.OnLoad(Ninject.IKernelConfiguration)", span="37-37"];
m18_129 [cluster="Ninject.KernelBase.CreateRequest(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, bool, bool)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.CreateRequest(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, bool, bool)", span="407-407"];
m18_210 [cluster="Ninject.KernelBase.CreateRequest(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, bool, bool)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ensure.ArgumentNotNull(service, ''service'')", span="409-409"];
m18_211 [cluster="Ninject.KernelBase.CreateRequest(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, bool, bool)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ensure.ArgumentNotNull(parameters, ''parameters'')", span="410-410"];
m18_212 [cluster="Ninject.KernelBase.CreateRequest(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, bool, bool)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="return new Request(service, constraint, parameters, null, isOptional, isUnique);", span="412-412"];
m18_213 [cluster="Ninject.KernelBase.CreateRequest(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, bool, bool)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.CreateRequest(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, bool, bool)", span="407-407"];
m18_214 [cluster="Ninject.Activation.Request.Request(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, System.Func<object>, bool, bool)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Activation.Request.Request(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, System.Func<object>, bool, bool)", span="103-103"];
m18_144 [cluster="Ninject.KernelBase.GetBindings(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.GetBindings(System.Type)", span="429-429"];
m18_219 [cluster="Ninject.KernelBase.GetBindings(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ensure.ArgumentNotNull(service, ''service'')", span="431-431"];
m18_221 [cluster="Ninject.KernelBase.GetBindings(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="!this.bindingCache.ContainsKey(service)", span="435-435"];
m18_223 [cluster="Ninject.KernelBase.GetBindings(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="resolvers\r\n                        .SelectMany(resolver => resolver.Resolve(this.bindings, service))\r\n                        .Map(binding => this.bindingCache.Add(service, binding))", span="439-441"];
m18_224 [cluster="Ninject.KernelBase.GetBindings(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="return this.bindingCache[service];", span="444-444"];
m18_220 [cluster="Ninject.KernelBase.GetBindings(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.bindingCache", span="433-433"];
m18_222 [cluster="Ninject.KernelBase.GetBindings(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="var resolvers = this.Components.GetAll<IBindingResolver>()", span="437-437"];
m18_225 [cluster="Ninject.KernelBase.GetBindings(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.GetBindings(System.Type)", span="429-429"];
m18_187 [cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m18_184 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.CouldNotResolveBinding(Ninject.Activation.IRequest)", span="134-134"];
m18_4 [cluster="Ninject.KernelBase.KernelBase(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.KernelBase(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", span="69-69"];
m18_5 [cluster="Ninject.KernelBase.KernelBase(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.KernelBase(Ninject.INinjectSettings, params Ninject.Modules.INinjectModule[])", span="69-69"];
m18_266 [cluster="Unk.AddBindings", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Unk.AddBindings", span=""];
m18_304 [cluster="Unk.func", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Unk.func", span=""];
m18_292 [cluster="Ninject.KernelBase.System.IServiceProvider.GetService(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.System.IServiceProvider.GetService(System.Type)", span="560-560"];
m18_293 [cluster="Ninject.KernelBase.System.IServiceProvider.GetService(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="return this.Get(service);", span="562-562"];
m18_294 [cluster="Ninject.KernelBase.System.IServiceProvider.GetService(System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.System.IServiceProvider.GetService(System.Type)", span="560-560"];
m18_295 [cluster="Ninject.Syntax.IResolutionRoot.Get(System.Type, params Ninject.Parameters.IParameter[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get(System.Type, params Ninject.Parameters.IParameter[])", span="186-186"];
m18_102 [cluster="System.Reflection.Assembly.GetNinjectModules()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry System.Reflection.Assembly.GetNinjectModules()", span="27-27"];
m18_265 [cluster="Unk.Map", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Unk.Map", span=""];
m18_87 [cluster="Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Infrastructure.Introspection.ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(Ninject.Modules.INinjectModule, Ninject.Modules.INinjectModule)", span="64-64"];
m18_25 [cluster="Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<string>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<string>)", span="238-238"];
m18_91 [cluster="Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<string>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="var moduleLoader = this.Components.Get<IModuleLoader>()", span="240-240"];
m18_92 [cluster="Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<string>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="moduleLoader.LoadModules(filePatterns)", span="241-241"];
m18_93 [cluster="Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<string>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<string>)", span="238-238"];
m18_190 [cluster="Unk.ToArray", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Unk.ToArray", span=""];
m18_178 [cluster="Ninject.KernelBase.GetBindingPrecedenceComparer()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.GetBindingPrecedenceComparer()", span="452-452"];
m18_237 [cluster="Ninject.KernelBase.GetBindingPrecedenceComparer()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="return new BindingPrecedenceComparer();", span="454-454"];
m18_238 [cluster="Ninject.KernelBase.GetBindingPrecedenceComparer()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.GetBindingPrecedenceComparer()", span="452-452"];
m18_114 [cluster="Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", span="279-279"];
m18_115 [cluster="Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ensure.ArgumentNotNull(instance, ''instance'')", span="281-281"];
m18_116 [cluster="Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ensure.ArgumentNotNull(parameters, ''parameters'')", span="282-282"];
m18_117 [cluster="Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Type service = instance.GetType()", span="284-284"];
m18_121 [cluster="Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="var request = this.CreateRequest(service, null, parameters, false, false)", span="290-290"];
m18_124 [cluster="Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="var reference = new InstanceReference { Instance = instance }", span="295-295"];
m18_118 [cluster="Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="var planner = this.Components.Get<IPlanner>()", span="286-286"];
m18_120 [cluster="Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="var binding = new Binding(service)", span="289-289"];
m18_123 [cluster="Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="context.Plan = planner.GetPlan(service)", span="293-293"];
m18_119 [cluster="Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="var pipeline = this.Components.Get<IPipeline>()", span="287-287"];
m18_125 [cluster="Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="pipeline.Activate(context, reference)", span="296-296"];
m18_122 [cluster="Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="var context = this.CreateContext(request, binding)", span="291-291"];
m18_126 [cluster="Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", span="279-279"];
m18_94 [cluster="Ninject.Modules.IModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Modules.IModuleLoader.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="27-27"];
m18_130 [cluster="Ninject.KernelBase.CreateContext(Ninject.Activation.IRequest, Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.CreateContext(Ninject.Activation.IRequest, Ninject.Planning.Bindings.IBinding)", span="544-544"];
m18_280 [cluster="Ninject.KernelBase.CreateContext(Ninject.Activation.IRequest, Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ensure.ArgumentNotNull(request, ''request'')", span="546-546"];
m18_281 [cluster="Ninject.KernelBase.CreateContext(Ninject.Activation.IRequest, Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ensure.ArgumentNotNull(binding, ''binding'')", span="547-547"];
m18_282 [cluster="Ninject.KernelBase.CreateContext(Ninject.Activation.IRequest, Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="return new Context(this, request, binding, this.Components.Get<ICache>(), this.Components.Get<IPlanner>(), this.Components.Get<IPipeline>());", span="549-549"];
m18_283 [cluster="Ninject.KernelBase.CreateContext(Ninject.Activation.IRequest, Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.CreateContext(Ninject.Activation.IRequest, Ninject.Planning.Bindings.IBinding)", span="544-544"];
m18_35 [cluster="Ninject.Components.IComponentContainer.Get<T>()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Components.IComponentContainer.Get<T>()", span="59-59"];
m18_52 [cluster="Ninject.KernelBase.RemoveBinding(Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.RemoveBinding(Ninject.Planning.Bindings.IBinding)", span="169-169"];
m18_53 [cluster="Ninject.KernelBase.RemoveBinding(Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ensure.ArgumentNotNull(binding, ''binding'')", span="171-171"];
m18_54 [cluster="Ninject.KernelBase.RemoveBinding(Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.bindings.Remove(binding.Service, binding)", span="173-173"];
m18_55 [cluster="Ninject.KernelBase.RemoveBinding(Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.bindingCache", span="175-175"];
m18_56 [cluster="Ninject.KernelBase.RemoveBinding(Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.bindingCache.Clear()", span="176-176"];
m18_57 [cluster="Ninject.KernelBase.RemoveBinding(Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.RemoveBinding(Ninject.Planning.Bindings.IBinding)", span="169-169"];
m18_84 [cluster="System.NotSupportedException.NotSupportedException(string)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m18_182 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m18_113 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m18_127 [cluster="object.GetType()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry object.GetType()", span="0-0"];
m18_59 [cluster="Ninject.KernelBase.HasModule(string)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.HasModule(string)", span="184-184"];
m18_60 [cluster="Ninject.KernelBase.HasModule(string)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ensure.ArgumentNotNullOrEmpty(name, ''name'')", span="186-186"];
m18_61 [cluster="Ninject.KernelBase.HasModule(string)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="return this.modules.ContainsKey(name);", span="187-187"];
m18_62 [cluster="Ninject.KernelBase.HasModule(string)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.HasModule(string)", span="184-184"];
m18_47 [cluster="Ninject.KernelBase.AddBinding(Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.AddBinding(Ninject.Planning.Bindings.IBinding)", span="158-158"];
m18_48 [cluster="Ninject.KernelBase.AddBinding(Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ensure.ArgumentNotNull(binding, ''binding'')", span="160-160"];
m18_49 [cluster="Ninject.KernelBase.AddBinding(Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.AddBindings(new[] { binding })", span="162-162"];
m18_50 [cluster="Ninject.KernelBase.AddBinding(Ninject.Planning.Bindings.IBinding)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.AddBinding(Ninject.Planning.Bindings.IBinding)", span="158-158"];
m18_215 [cluster="Ninject.KernelBase.BeginBlock()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.BeginBlock()", span="419-419"];
m18_216 [cluster="Ninject.KernelBase.BeginBlock()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="return new ActivationBlock(this);", span="421-421"];
m18_217 [cluster="Ninject.KernelBase.BeginBlock()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.BeginBlock()", span="419-419"];
m18_23 [cluster="Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T1>.ToConstant<TImplementation>(TImplementation)", span="107-107"];
m18_26 [cluster="Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", span="203-203"];
m18_69 [cluster="Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ensure.ArgumentNotNull(m, ''modules'')", span="205-205"];
m18_70 [cluster="Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="m = m.ToList()", span="207-207"];
m18_71 [cluster="Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label=m, span="208-208"];
m18_79 [cluster="Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label=m, span="227-227"];
m18_72 [cluster="Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="string.IsNullOrEmpty(module.Name)", span="210-210"];
m18_75 [cluster="Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.modules.TryGetValue(module.Name, out existingModule)", span="217-217"];
m18_76 [cluster="Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="throw new NotSupportedException(ExceptionFormatter.ModuleWithSameNameIsAlreadyLoaded(module, existingModule));", span="219-219"];
m18_77 [cluster="Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="module.OnLoad(this)", span="222-222"];
m18_78 [cluster="Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.modules.Add(module.Name, module)", span="224-224"];
m18_73 [cluster="Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="throw new NotSupportedException(ExceptionFormatter.ModulesWithNullOrEmptyNamesAreNotSupported());", span="212-212"];
m18_74 [cluster="Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="INinjectModule existingModule", span="215-215"];
m18_80 [cluster="Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="module.OnVerifyRequiredModules()", span="229-229"];
m18_81 [cluster="Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.Load(System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>)", span="203-203"];
m18_132 [cluster="Ninject.Activation.InstanceReference.InstanceReference()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Activation.InstanceReference.InstanceReference()", span="22-22"];
m18_192 [cluster="Unk.Select", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Unk.Select", span=""];
m18_209 [cluster="Ninject.Activation.IContext.Resolve()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Activation.IContext.Resolve()", span="77-77"];
m18_112 [cluster="Ninject.Modules.INinjectModule.OnUnload(Ninject.IKernelConfiguration)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Modules.INinjectModule.OnUnload(Ninject.IKernelConfiguration)", span="43-43"];
m18_232 [cluster="Ninject.Planning.Bindings.Resolvers.IBindingResolver.Resolve(Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>, System.Type)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Planning.Bindings.Resolvers.IBindingResolver.Resolve(Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>, System.Type)", span="31-31"];
m18_191 [cluster="Unk.CouldNotUniquelyResolveBinding", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Unk.CouldNotUniquelyResolveBinding", span=""];
m18_2 [cluster="Ninject.KernelBase.KernelBase(params Ninject.Modules.INinjectModule[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.KernelBase(params Ninject.Modules.INinjectModule[])", span="59-59"];
m18_3 [cluster="Ninject.KernelBase.KernelBase(params Ninject.Modules.INinjectModule[])", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.KernelBase(params Ninject.Modules.INinjectModule[])", span="59-59"];
m18_270 [cluster="Ninject.Planning.Bindings.Resolvers.IMissingBindingResolver.Resolve(Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>, Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.Planning.Bindings.Resolvers.IMissingBindingResolver.Resolve(Ninject.Infrastructure.Multimap<System.Type, Ninject.Planning.Bindings.IBinding>, Ninject.Activation.IRequest)", span="33-33"];
m18_180 [cluster="Ninject.KernelBase.HandleMissingBinding(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Entry Ninject.KernelBase.HandleMissingBinding(Ninject.Activation.IRequest)", span="488-488"];
m18_251 [cluster="Ninject.KernelBase.HandleMissingBinding(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ensure.ArgumentNotNull(request, ''request'')", span="490-490"];
m18_252 [cluster="Ninject.KernelBase.HandleMissingBinding(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.HandleMissingBinding(request.Service)", span="493-493"];
m18_255 [cluster="Ninject.KernelBase.HandleMissingBinding(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="var bindings = components\r\n                .Select(c => c.Resolve(this.bindings, request).ToList())\r\n                .FirstOrDefault(b => b.Any())", span="502-504"];
m18_259 [cluster="Ninject.KernelBase.HandleMissingBinding(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="!this.CanResolve(request)", span="513-513"];
m18_253 [cluster="Ninject.KernelBase.HandleMissingBinding(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="return true;", span="495-495"];
m18_254 [cluster="Ninject.KernelBase.HandleMissingBinding(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="var components = this.Components.GetAll<IMissingBindingResolver>()", span="499-499"];
m18_256 [cluster="Ninject.KernelBase.HandleMissingBinding(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="bindings == null", span="506-506"];
m18_260 [cluster="Ninject.KernelBase.HandleMissingBinding(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="bindings.Map(binding => binding.IsImplicit = true)", span="515-515"];
m18_261 [cluster="Ninject.KernelBase.HandleMissingBinding(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.AddBindings(bindings)", span="516-516"];
m18_257 [cluster="Ninject.KernelBase.HandleMissingBinding(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="return false;", span="508-508"];
m18_258 [cluster="Ninject.KernelBase.HandleMissingBinding(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="this.HandleMissingBindingLockObject", span="511-511"];
m18_262 [cluster="Ninject.KernelBase.HandleMissingBinding(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="return true;", span="520-520"];
m18_263 [cluster="Ninject.KernelBase.HandleMissingBinding(Ninject.Activation.IRequest)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Exit Ninject.KernelBase.HandleMissingBinding(Ninject.Activation.IRequest)", span="488-488"];
m18_317 [file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ninject.KernelBase", span=""];
m18_318 [file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ninject.Activation.IRequest", span=""];
m18_319 [file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label=bool, span=""];
m18_320 [file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label=bindingPrecedenceComparer, span=""];
m18_321 [file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label=model, span=""];
m18_322 [file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ninject.Activation.IRequest", span=""];
m18_323 [file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="System.Type", span=""];
m18_324 [file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ninject.Activation.IRequest", span=""];
m18_325 [file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs", label="Ninject.Activation.IRequest", span=""];
m25_0 [cluster="CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", file="FakeOptionsWithSimpleType.cs", label="Entry CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", span="12-12"];
m25_1 [cluster="CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", file="FakeOptionsWithSimpleType.cs", label="this.value = value", span="14-14"];
m25_2 [cluster="CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", file="FakeOptionsWithSimpleType.cs", label="Exit CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", span="12-12"];
m25_3 [file="FakeOptionsWithSimpleType.cs", label="CommandLine.Tests.Fakes.MySimpleType", span=""];
m30_22 [cluster="Ninject.Activation.Caching.ActivationCache.IsActivated(object)", file="FSharpOptionHelperTests.cs", label="return this.activatedObjects.Contains(instance);", span="128-128"];
m30_34 [cluster="Ninject.Activation.Caching.ActivationCache.RemoveDeadObjects(System.Collections.Generic.HashSet<object>)", file="FSharpOptionHelperTests.cs", label="Entry Ninject.Activation.Caching.ActivationCache.RemoveDeadObjects(System.Collections.Generic.HashSet<object>)", span="182-182"];
m30_35 [cluster="Ninject.Activation.Caching.ActivationCache.RemoveDeadObjects(System.Collections.Generic.HashSet<object>)", file="FSharpOptionHelperTests.cs", label="objects.RemoveWhere(reference => !((ReferenceEqualWeakReference)reference).IsAlive)", span="184-184"];
m30_36 [cluster="Ninject.Activation.Caching.ActivationCache.RemoveDeadObjects(System.Collections.Generic.HashSet<object>)", file="FSharpOptionHelperTests.cs", label="Exit Ninject.Activation.Caching.ActivationCache.RemoveDeadObjects(System.Collections.Generic.HashSet<object>)", span="182-182"];
m30_16 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="FSharpOptionHelperTests.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m30_37 [cluster="System.Collections.Generic.HashSet<T>.RemoveWhere(System.Predicate<T>)", file="FSharpOptionHelperTests.cs", label="Entry System.Collections.Generic.HashSet<T>.RemoveWhere(System.Predicate<T>)", span="0-0"];
m30_17 [cluster="Ninject.Activation.Caching.ActivationCache.AddDeactivatedInstance(object)", file="FSharpOptionHelperTests.cs", label="Entry Ninject.Activation.Caching.ActivationCache.AddDeactivatedInstance(object)", span="104-104"];
m30_18 [cluster="Ninject.Activation.Caching.ActivationCache.AddDeactivatedInstance(object)", file="FSharpOptionHelperTests.cs", label="this.deactivatedObjects", span="106-106"];
m30_19 [cluster="Ninject.Activation.Caching.ActivationCache.AddDeactivatedInstance(object)", file="FSharpOptionHelperTests.cs", label="this.deactivatedObjects.Add(new ReferenceEqualWeakReference(instance))", span="111-111"];
m30_20 [cluster="Ninject.Activation.Caching.ActivationCache.AddDeactivatedInstance(object)", file="FSharpOptionHelperTests.cs", label="Exit Ninject.Activation.Caching.ActivationCache.AddDeactivatedInstance(object)", span="104-104"];
m30_10 [cluster="System.Collections.Generic.HashSet<T>.Clear()", file="FSharpOptionHelperTests.cs", label="Entry System.Collections.Generic.HashSet<T>.Clear()", span="0-0"];
m30_28 [cluster="Ninject.Activation.Caching.ActivationCache.Prune()", file="FSharpOptionHelperTests.cs", label="Entry Ninject.Activation.Caching.ActivationCache.Prune()", span="151-151"];
m30_29 [cluster="Ninject.Activation.Caching.ActivationCache.Prune()", file="FSharpOptionHelperTests.cs", label="this.activatedObjects", span="153-153"];
m30_30 [cluster="Ninject.Activation.Caching.ActivationCache.Prune()", file="FSharpOptionHelperTests.cs", label="RemoveDeadObjects(this.activatedObjects)", span="155-155"];
m30_31 [cluster="Ninject.Activation.Caching.ActivationCache.Prune()", file="FSharpOptionHelperTests.cs", label="this.deactivatedObjects", span="158-158"];
m30_32 [cluster="Ninject.Activation.Caching.ActivationCache.Prune()", file="FSharpOptionHelperTests.cs", label="RemoveDeadObjects(this.deactivatedObjects)", span="160-160"];
m30_33 [cluster="Ninject.Activation.Caching.ActivationCache.Prune()", file="FSharpOptionHelperTests.cs", label="Exit Ninject.Activation.Caching.ActivationCache.Prune()", span="151-151"];
m30_24 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="FSharpOptionHelperTests.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m30_25 [cluster="Ninject.Activation.Caching.ActivationCache.IsDeactivated(object)", file="FSharpOptionHelperTests.cs", label="Entry Ninject.Activation.Caching.ActivationCache.IsDeactivated(object)", span="139-139"];
m30_26 [cluster="Ninject.Activation.Caching.ActivationCache.IsDeactivated(object)", file="FSharpOptionHelperTests.cs", label="return this.deactivatedObjects.Contains(instance);", span="144-144"];
m30_27 [cluster="Ninject.Activation.Caching.ActivationCache.IsDeactivated(object)", file="FSharpOptionHelperTests.cs", label="Exit Ninject.Activation.Caching.ActivationCache.IsDeactivated(object)", span="139-139"];
m30_11 [cluster="Ninject.Activation.Caching.ActivationCache.AddActivatedInstance(object)", file="FSharpOptionHelperTests.cs", label="Entry Ninject.Activation.Caching.ActivationCache.AddActivatedInstance(object)", span="88-88"];
m30_12 [cluster="Ninject.Activation.Caching.ActivationCache.AddActivatedInstance(object)", file="FSharpOptionHelperTests.cs", label="this.activatedObjects", span="90-90"];
m30_13 [cluster="Ninject.Activation.Caching.ActivationCache.AddActivatedInstance(object)", file="FSharpOptionHelperTests.cs", label="this.activatedObjects.Add(new ReferenceEqualWeakReference(instance))", span="95-95"];
m30_14 [cluster="Ninject.Activation.Caching.ActivationCache.AddActivatedInstance(object)", file="FSharpOptionHelperTests.cs", label="Exit Ninject.Activation.Caching.ActivationCache.AddActivatedInstance(object)", span="88-88"];
m30_0 [cluster="Ninject.Activation.Caching.ActivationCache.ActivationCache(Ninject.Activation.Caching.ICachePruner)", file="FSharpOptionHelperTests.cs", label="Entry Ninject.Activation.Caching.ActivationCache.ActivationCache(Ninject.Activation.Caching.ICachePruner)", span="39-39"];
m30_1 [cluster="Ninject.Activation.Caching.ActivationCache.ActivationCache(Ninject.Activation.Caching.ICachePruner)", file="FSharpOptionHelperTests.cs", label="cachePruner.Start(this)", span="41-41"];
m30_2 [cluster="Ninject.Activation.Caching.ActivationCache.ActivationCache(Ninject.Activation.Caching.ICachePruner)", file="FSharpOptionHelperTests.cs", label="Exit Ninject.Activation.Caching.ActivationCache.ActivationCache(Ninject.Activation.Caching.ICachePruner)", span="39-39"];
m30_38 [cluster="lambda expression", file="FSharpOptionHelperTests.cs", label="Entry lambda expression", span="184-184"];
m30_39 [cluster="lambda expression", file="FSharpOptionHelperTests.cs", label="!((ReferenceEqualWeakReference)reference).IsAlive", span="184-184"];
m30_40 [cluster="lambda expression", file="FSharpOptionHelperTests.cs", label="Exit lambda expression", span="184-184"];
m30_15 [cluster="Ninject.Infrastructure.ReferenceEqualWeakReference.ReferenceEqualWeakReference(object)", file="FSharpOptionHelperTests.cs", label="Entry Ninject.Infrastructure.ReferenceEqualWeakReference.ReferenceEqualWeakReference(object)", span="29-29"];
m30_4 [cluster="Ninject.Activation.Caching.ActivationCache.Clear()", file="FSharpOptionHelperTests.cs", label="Entry Ninject.Activation.Caching.ActivationCache.Clear()", span="71-71"];
m30_5 [cluster="Ninject.Activation.Caching.ActivationCache.Clear()", file="FSharpOptionHelperTests.cs", label="this.activatedObjects", span="73-73"];
m30_6 [cluster="Ninject.Activation.Caching.ActivationCache.Clear()", file="FSharpOptionHelperTests.cs", label="this.activatedObjects.Clear()", span="75-75"];
m30_7 [cluster="Ninject.Activation.Caching.ActivationCache.Clear()", file="FSharpOptionHelperTests.cs", label="this.deactivatedObjects", span="78-78"];
m30_8 [cluster="Ninject.Activation.Caching.ActivationCache.Clear()", file="FSharpOptionHelperTests.cs", label="this.deactivatedObjects.Clear()", span="80-80"];
m30_9 [cluster="Ninject.Activation.Caching.ActivationCache.Clear()", file="FSharpOptionHelperTests.cs", label="Exit Ninject.Activation.Caching.ActivationCache.Clear()", span="71-71"];
m30_3 [cluster="Ninject.Activation.Caching.ICachePruner.Start(Ninject.Activation.Caching.IPruneable)", file="FSharpOptionHelperTests.cs", label="Entry Ninject.Activation.Caching.ICachePruner.Start(Ninject.Activation.Caching.IPruneable)", span="25-25"];
m30_41 [file="FSharpOptionHelperTests.cs", label="Ninject.Activation.Caching.ActivationCache", span=""];
m32_50 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="96-96"];
m32_51 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", color=green, community=0, file="HelpTextTests.cs", label="0: var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextEnum>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextEnum)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="100-103"];
m32_52 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="107-107"];
m32_53 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="108-108"];
m32_54 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="109-109"];
m32_55 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here.'')", span="110-110"];
m32_56 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="111-111"];
m32_57 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--version        Display version information.'')", span="112-112"];
m32_58 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''post-options'')", span="113-113"];
m32_59 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="96-96"];
m32_16 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="82-82"];
m32_126 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458"];
m32_22 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="49-49"];
m32_23 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", color=green, community=0, file="HelpTextTests.cs", label="0: var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptions>(TypeInfo.Create(typeof(FakeOptions)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="53-56"];
m32_24 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="60-60"];
m32_25 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="61-61"];
m32_26 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="62-62"];
m32_27 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="63-63"];
m32_28 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="64-64"];
m32_29 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="65-65"];
m32_30 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="66-66"];
m32_31 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''value pos. 0     Define a long value here.'')", span="67-67"];
m32_32 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[7].ShouldBeEquivalentTo(''post-options'')", span="68-68"];
m32_33 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="49-49"];
m32_66 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="134-134"];
m32_67 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="138-138"];
m32_68 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="139-139"];
m32_69 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", color=green, community=0, file="HelpTextTests.cs", label="0: sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescription>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescription)),\r\n                    Enumerable.Empty<Error>()))", span="140-143"];
m32_70 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="146-146"];
m32_71 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description'')", span="147-147"];
m32_72 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''                of the verbosity to '')", span="149-149"];
m32_73 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''                test out the wrapping '')", span="150-150"];
m32_74 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''                capabilities of the '')", span="151-151"];
m32_75 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''                Help Text.'')", span="152-152"];
m32_76 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="134-134"];
m32_218 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516"];
m32_78 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="157-157"];
m32_79 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="161-161"];
m32_80 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="162-162"];
m32_81 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", color=green, community=0, file="HelpTextTests.cs", label="0: sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescriptionAndNoSpaces>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescriptionAndNoSpaces)),\r\n                    Enumerable.Empty<Error>()))", span="163-166"];
m32_82 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="169-169"];
m32_83 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''  v, verbose    Before '')", span="170-170"];
m32_84 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="171-171"];
m32_85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''                After'')", span="172-172"];
m32_86 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''  input-file    Before '')", span="173-173"];
m32_87 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="174-174"];
m32_88 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''                456789 After'')", span="175-175"];
m32_89 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="157-157"];
m32_191 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpTextTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m32_116 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="HelpTextTests.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
m32_149 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="262-262"];
m32_150 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", color=green, community=0, file="HelpTextTests.cs", label="0: var fakeResult = new NotParsed<FakeOptions>(\r\n                TypeInfo.Create(typeof(FakeOptions)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="265-271"];
m32_151 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="274-274"];
m32_152 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="277-277"];
m32_153 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="278-278"];
m32_154 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="279-279"];
m32_155 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="280-280"];
m32_156 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="281-281"];
m32_157 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''A sequence option 'i' is defined with fewer or more items than required.'')", span="282-282"];
m32_158 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="283-283"];
m32_159 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="284-284"];
m32_160 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[7].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="285-285"];
m32_161 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[8].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="286-286"];
m32_162 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="262-262"];
m32_193 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="345-345"];
m32_194 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", color=green, community=0, file="HelpTextTests.cs", label="0: var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextValue>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextValue)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="349-352"];
m32_195 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="356-356"];
m32_196 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="357-357"];
m32_197 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue=STR            Define a string value here.'')", span="358-358"];
m32_198 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''-i INTSEQ                    Define a int sequence here.'')", span="359-359"];
m32_199 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''-x                           Define a boolean or switch value here.'')", span="360-360"];
m32_200 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--help                       Display this help screen.'')", span="361-361"];
m32_201 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--version                    Display version information.'')", span="362-362"];
m32_202 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''number (pos. 0) NUM          Define a long value here.'')", span="363-363"];
m32_203 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[7].ShouldBeEquivalentTo(''paintcolor (pos. 1) COLOR    Define a color value here.'')", span="364-364"];
m32_204 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[8].ShouldBeEquivalentTo(''post-options'', lines[8])", span="365-365"];
m32_205 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="345-345"];
m32_39 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="73-73"];
m32_40 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", color=green, community=0, file="HelpTextTests.cs", label="0: var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextEnum>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextEnum)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="77-80"];
m32_41 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="84-84"];
m32_42 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="85-85"];
m32_43 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="86-86"];
m32_44 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here. Valid values: Circle, Square,'')", span="87-87"];
m32_45 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''Triangle'')", span="88-88"];
m32_46 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="89-89"];
m32_47 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="90-90"];
m32_48 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''post-options'')", span="91-91"];
m32_49 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="73-73"];
m32_120 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m32_90 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="180-180"];
m32_91 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="var sut = new HelpText(''Heading Info.'')", span="184-184"];
m32_92 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="185-185"];
m32_93 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", color=green, community=0, file="HelpTextTests.cs", label="0: sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new NotParsed<FakeOptionsForHelp>(TypeInfo.Create(typeof(FakeOptionsForHelp)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="186-188"];
m32_94 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="191-191"];
m32_95 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''Before '')", span="192-192"];
m32_96 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="193-193"];
m32_97 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''012 After'')", span="194-194"];
m32_98 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 3].ShouldBeEquivalentTo(''Before '')", span="195-195"];
m32_99 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="196-196"];
m32_100 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 1].ShouldBeEquivalentTo('' After'')", span="197-197"];
m32_101 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="180-180"];
m32_178 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="318-318"];
m32_179 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", color=green, community=0, file="HelpTextTests.cs", label="0: var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb) })", span="321-322"];
m32_180 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance),\r\n                    verbTypes),\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="323-326"];
m32_181 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="329-329"];
m32_182 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="332-332"];
m32_183 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="334-334"];
m32_184 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="335-335"];
m32_185 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="336-336"];
m32_186 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="337-337"];
m32_187 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="338-338"];
m32_188 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="339-339"];
m32_189 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="340-340"];
m32_190 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="318-318"];
m32_0 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="19-19"];
m32_1 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="string.Empty.ShouldBeEquivalentTo(new HelpText().ToString())", span="21-21"];
m32_2 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="19-19"];
m32_256 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="HelpTextTests.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m32_258 [cluster="System.Type.ToTypeInfo()", file="HelpTextTests.cs", label="Entry System.Type.ToTypeInfo()", span="174-174"];
m32_145 [cluster="System.InvalidOperationException.InvalidOperationException()", file="HelpTextTests.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m32_36 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpTextTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m32_38 [cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="HelpTextTests.cs", label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15"];
m32_34 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpTextTests.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m32_123 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="HelpTextTests.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357"];
m32_3 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36"];
m32_60 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="118-118"];
m32_61 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", color=green, community=0, file="HelpTextTests.cs", label="0: var sut =\r\n                new HelpText(''Meta Value.'').AddOptions(\r\n                    new NotParsed<FakeOptionsWithMetaValue>(TypeInfo.Create(typeof(FakeOptionsWithMetaValue)), Enumerable.Empty<Error>()))", span="122-124"];
m32_62 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="127-127"];
m32_63 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="129-129"];
m32_64 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="118-118"];
m32_19 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322"];
m32_125 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="HelpTextTests.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
m32_206 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="370-370"];
m32_207 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", color=green, community=0, file="HelpTextTests.cs", label="0: ParserResult<FakeOptionsWithUsageText> result =\r\n                new NotParsed<FakeOptionsWithUsageText>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithUsageText)), Enumerable.Empty<Error>())", span="373-375"];
m32_208 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="var text = HelpText.RenderUsageText(result)", span="378-378"];
m32_209 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="var lines = text.ToNotEmptyLines()", span="381-381"];
m32_210 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''Normal scenario:'')", span="384-384"];
m32_211 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''  mono testapp.exe --input file.bin --output out.bin'')", span="385-385"];
m32_212 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''Logging warnings:'')", span="386-386"];
m32_213 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''  mono testapp.exe -w --input file.bin'')", span="387-387"];
m32_214 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''Logging errors:'')", span="388-388"];
m32_215 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''  mono testapp.exe -e --input file.bin'')", span="389-389"];
m32_216 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''  mono testapp.exe --errs --input=file.bin'')", span="390-390"];
m32_217 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="370-370"];
m32_121 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335"];
m32_37 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389"];
m32_146 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="243-243"];
m32_128 [cluster="lambda expression", file="HelpTextTests.cs", label="err.Tag", span="222-222"];
m32_130 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="225-225"];
m32_132 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="227-227"];
m32_134 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="229-229"];
m32_136 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="231-231"];
m32_138 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="233-233"];
m32_142 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="237-237"];
m32_127 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="220-241"];
m32_129 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.BadFormatTokenError", span="224-224"];
m32_131 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MissingValueOptionError", span="226-226"];
m32_133 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.UnknownOptionError", span="228-228"];
m32_135 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MissingRequiredOptionError", span="230-230"];
m32_137 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.SequenceOutOfRangeError", span="232-232"];
m32_139 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.NoVerbSelectedError", span="234-234"];
m32_141 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.BadVerbSelectedError", span="236-236"];
m32_143 [cluster="lambda expression", file="HelpTextTests.cs", label="throw new InvalidOperationException();", span="239-239"];
m32_140 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR no-verb-selected'';", span="235-235"];
m32_144 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="220-241"];
m32_147 [cluster="lambda expression", file="HelpTextTests.cs", label="string.Empty", span="243-243"];
m32_148 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="243-243"];
m32_192 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="HelpTextTests.cs", label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m32_244 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", span="434-434"];
m32_245 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="var handlers = new CultureInfo(''en-US'').MakeCultureHandlers()", span="437-437"];
m32_246 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", color=green, community=0, file="HelpTextTests.cs", label="0: var fakeResult =\r\n                new NotParsed<FakeOptionsWithDefaultSetToSequence>(\r\n                    typeof(FakeOptionsWithDefaultSetToSequence).ToTypeInfo(),\r\n                    new Error[] { new BadFormatTokenError(''badtoken'') })", span="438-441"];
m32_247 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="handlers.ChangeCulture()", span="444-444"];
m32_249 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="handlers.ResetCulture()", span="446-446"];
m32_248 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="445-445"];
m32_250 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="var text = helpText.ToString()", span="449-449"];
m32_251 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="450-450"];
m32_252 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="lines[4].Should().Be(''-z, --strseq    (Default: a b c)'')", span="452-452"];
m32_253 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="lines[5].Should().Be(''-y, --intseq    (Default: 1 2 3)'')", span="453-453"];
m32_254 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="lines[6].Should().Be(''-q, --dblseq    (Default: 1.1 2.2 3.3)'')", span="454-454"];
m32_255 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", span="434-434"];
m32_35 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="HelpTextTests.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m32_65 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
m32_117 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m32_164 [cluster="Unk.Should", file="HelpTextTests.cs", label="Entry Unk.Should", span=""];
m32_257 [cluster="System.Globalization.CultureInfo.MakeCultureHandlers()", file="HelpTextTests.cs", label="Entry System.Globalization.CultureInfo.MakeCultureHandlers()", span="20-20"];
m32_260 [cluster="Unk.Be", file="HelpTextTests.cs", label="Entry Unk.Be", span=""];
m32_4 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="580-580"];
m32_165 [cluster="Unk.StartWithEquivalent", file="HelpTextTests.cs", label="Entry Unk.StartWithEquivalent", span=""];
m32_163 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260"];
m32_122 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="HelpTextTests.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m32_17 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27"];
m32_119 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="HelpTextTests.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280"];
m32_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="HelpTextTests.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60"];
m32_20 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333"];
m32_21 [cluster="string.ToNotEmptyLines()", file="HelpTextTests.cs", label="Entry string.ToNotEmptyLines()", span="10-10"];
m32_219 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="394-394"];
m32_220 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", color=green, community=0, file="HelpTextTests.cs", label="0: var fakeResult = new NotParsed<FakeOptionsWithUsageText>(\r\n                TypeInfo.Create(typeof(FakeOptionsWithUsageText)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken'')\r\n                    })", span="397-402"];
m32_221 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="405-405"];
m32_222 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var text = helpText.ToString()", span="408-408"];
m32_223 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="409-409"];
m32_224 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="410-410"];
m32_225 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="411-411"];
m32_226 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="412-412"];
m32_227 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="413-413"];
m32_228 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''USAGE:'')", span="414-414"];
m32_229 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''Normal scenario:'')", span="415-415"];
m32_230 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''mono testapp.exe --input file.bin --output out.bin'')", span="416-416"];
m32_231 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[7].ShouldBeEquivalentTo(''Logging warnings:'')", span="417-417"];
m32_232 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[8].ShouldBeEquivalentTo(''mono testapp.exe -w --input file.bin'')", span="418-418"];
m32_233 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[9].ShouldBeEquivalentTo(''Logging errors:'')", span="419-419"];
m32_234 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[10].ShouldBeEquivalentTo(''mono testapp.exe -e --input file.bin'')", span="420-420"];
m32_235 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[11].ShouldBeEquivalentTo(''mono testapp.exe --errs --input=file.bin'')", span="421-421"];
m32_236 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[12].ShouldBeEquivalentTo(''-i, --input     Set input file.'')", span="422-422"];
m32_237 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[13].ShouldBeEquivalentTo(''-i, --output    Set output file.'')", span="423-423"];
m32_238 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[14].ShouldBeEquivalentTo(''--verbose       Set verbosity level.'')", span="424-424"];
m32_239 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[15].ShouldBeEquivalentTo(''-w, --warns     Log warnings.'')", span="425-425"];
m32_240 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[16].ShouldBeEquivalentTo(''-e, --errs      Log errors.'')", span="426-426"];
m32_241 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[17].ShouldBeEquivalentTo(''--help          Display this help screen.'')", span="427-427"];
m32_242 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[18].ShouldBeEquivalentTo(''--version       Display version information.'')", span="428-428"];
m32_243 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="394-394"];
m32_118 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m32_6 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="25-25"];
m32_7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="29-34"];
m32_8 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="37-37"];
m32_9 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''Unit-tests 2.0'')", span="39-39"];
m32_10 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (C) 2005 - 2013 Author'')", span="40-40"];
m32_11 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''pre-options line 1'')", span="41-41"];
m32_12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''pre-options line 2'')", span="42-42"];
m32_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''post-options line 1'')", span="43-43"];
m32_14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''post-options line 2'')", span="44-44"];
m32_15 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="25-25"];
m32_102 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="203-203"];
m32_103 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="206-219"];
m32_104 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="220-241"];
m32_106 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, fakeMutExclRenderer, 2)", span="246-246"];
m32_105 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Func<IEnumerable<MutuallyExclusiveSetError>, string> fakeMutExclRenderer =\r\n                _ => string.Empty", span="242-243"];
m32_107 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = errorsText.ToNotEmptyLines()", span="249-249"];
m32_108 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''  ERR badtoken'')", span="251-251"];
m32_109 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''  ERR x, switch'')", span="252-252"];
m32_110 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''  ERR unknown'')", span="253-253"];
m32_111 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''  ERR missing'')", span="254-254"];
m32_112 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''  ERR s, sequence'')", span="255-255"];
m32_113 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''  ERR no-verb-selected'')", span="256-256"];
m32_114 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''  ERR badverb'')", span="257-257"];
m32_115 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="203-203"];
m32_166 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="291-291"];
m32_167 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", color=green, community=0, file="HelpTextTests.cs", label="0: var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(Commit_Verb), true)\r\n                    })", span="294-299"];
m32_168 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="302-302"];
m32_169 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="305-305"];
m32_170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="307-307"];
m32_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="308-308"];
m32_172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''-p, --patch      Use the interactive patch selection interface to chose which'')", span="309-309"];
m32_173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''changes to commit.'')", span="310-310"];
m32_174 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--amend          Used to amend the tip of the current branch.'')", span="311-311"];
m32_175 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''-m, --message    Use the given message as the commit message.'')", span="312-312"];
m32_176 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="313-313"];
m32_177 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="291-291"];
m32_259 [cluster="System.Action.Invoke()", file="HelpTextTests.cs", label="Entry System.Action.Invoke()", span="0-0"];
m32_124 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="HelpTextTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368"];
m32_77 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextTests.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m32_5 [cluster="Unk.ShouldBeEquivalentTo", file="HelpTextTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m33_29 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.PruneCacheIfGarbageCollectorHasRun(object)", file="IFakeInterfaceOptions.cs", label="Entry Ninject.Activation.Caching.GarbageCollectionCachePruner.PruneCacheIfGarbageCollectorHasRun(object)", span="94-94"];
m33_30 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.PruneCacheIfGarbageCollectorHasRun(object)", file="IFakeInterfaceOptions.cs", label=this, span="96-96"];
m33_31 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.PruneCacheIfGarbageCollectorHasRun(object)", file="IFakeInterfaceOptions.cs", label="this.stop", span="98-98"];
m33_32 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.PruneCacheIfGarbageCollectorHasRun(object)", file="IFakeInterfaceOptions.cs", label="return;", span="100-100"];
m33_33 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.PruneCacheIfGarbageCollectorHasRun(object)", file="IFakeInterfaceOptions.cs", label="this.indicator.IsAlive", span="105-105"];
m33_34 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.PruneCacheIfGarbageCollectorHasRun(object)", file="IFakeInterfaceOptions.cs", label="return;", span="107-107"];
m33_35 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.PruneCacheIfGarbageCollectorHasRun(object)", file="IFakeInterfaceOptions.cs", label="this.caches.Map(cache => cache.Prune())", span="110-110"];
m33_36 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.PruneCacheIfGarbageCollectorHasRun(object)", file="IFakeInterfaceOptions.cs", label="this.indicator.Target = new object()", span="111-111"];
m33_37 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.PruneCacheIfGarbageCollectorHasRun(object)", file="IFakeInterfaceOptions.cs", label="Exit Ninject.Activation.Caching.GarbageCollectionCachePruner.PruneCacheIfGarbageCollectorHasRun(object)", span="94-94"];
m33_16 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.GetTimeoutInMilliseconds()", file="IFakeInterfaceOptions.cs", label="Entry Ninject.Activation.Caching.GarbageCollectionCachePruner.GetTimeoutInMilliseconds()", span="120-120"];
m33_44 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.GetTimeoutInMilliseconds()", file="IFakeInterfaceOptions.cs", label="TimeSpan interval = Settings.CachePruningInterval", span="122-122"];
m33_45 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.GetTimeoutInMilliseconds()", file="IFakeInterfaceOptions.cs", label="return interval == TimeSpan.MaxValue ? -1 : (int)interval.TotalMilliseconds;", span="123-123"];
m33_46 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.GetTimeoutInMilliseconds()", file="IFakeInterfaceOptions.cs", label="Exit Ninject.Activation.Caching.GarbageCollectionCachePruner.GetTimeoutInMilliseconds()", span="120-120"];
m33_25 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="IFakeInterfaceOptions.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m33_26 [cluster="System.Threading.Timer.Dispose(System.Threading.WaitHandle)", file="IFakeInterfaceOptions.cs", label="Entry System.Threading.Timer.Dispose(System.Threading.WaitHandle)", span="0-0"];
m33_7 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.Start(Ninject.Activation.Caching.IPruneable)", file="IFakeInterfaceOptions.cs", label="Entry Ninject.Activation.Caching.GarbageCollectionCachePruner.Start(Ninject.Activation.Caching.IPruneable)", span="59-59"];
m33_8 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.Start(Ninject.Activation.Caching.IPruneable)", file="IFakeInterfaceOptions.cs", label="Ensure.ArgumentNotNull(pruneable, ''pruneable'')", span="61-61"];
m33_9 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.Start(Ninject.Activation.Caching.IPruneable)", file="IFakeInterfaceOptions.cs", label="this.caches.Add(pruneable)", span="63-63"];
m33_10 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.Start(Ninject.Activation.Caching.IPruneable)", file="IFakeInterfaceOptions.cs", label="this.timer == null", span="64-64"];
m33_11 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.Start(Ninject.Activation.Caching.IPruneable)", file="IFakeInterfaceOptions.cs", label="this.timer = new Timer(this.PruneCacheIfGarbageCollectorHasRun, null, this.GetTimeoutInMilliseconds(), Timeout.Infinite)", span="66-66"];
m33_12 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.Start(Ninject.Activation.Caching.IPruneable)", file="IFakeInterfaceOptions.cs", label="Exit Ninject.Activation.Caching.GarbageCollectionCachePruner.Start(Ninject.Activation.Caching.IPruneable)", span="59-59"];
m33_15 [cluster="System.Threading.Timer.Timer(System.Threading.TimerCallback, object, int, int)", file="IFakeInterfaceOptions.cs", label="Entry System.Threading.Timer.Timer(System.Threading.TimerCallback, object, int, int)", span="0-0"];
m33_43 [cluster="Ninject.Activation.Caching.IPruneable.Prune()", file="IFakeInterfaceOptions.cs", label="Entry Ninject.Activation.Caching.IPruneable.Prune()", span="10-10"];
m33_13 [cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="IFakeInterfaceOptions.cs", label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="17-17"];
m33_28 [cluster="System.Collections.Generic.List<T>.Clear()", file="IFakeInterfaceOptions.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m33_38 [cluster="System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", file="IFakeInterfaceOptions.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", span="28-28"];
m33_40 [cluster="lambda expression", file="IFakeInterfaceOptions.cs", label="Entry lambda expression", span="110-110"];
m33_41 [cluster="lambda expression", file="IFakeInterfaceOptions.cs", label="cache.Prune()", span="110-110"];
m33_42 [cluster="lambda expression", file="IFakeInterfaceOptions.cs", label="Exit lambda expression", span="110-110"];
m33_6 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", file="IFakeInterfaceOptions.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", span="37-37"];
m33_14 [cluster="System.Collections.Generic.List<T>.Add(T)", file="IFakeInterfaceOptions.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m33_0 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.Dispose(bool)", file="IFakeInterfaceOptions.cs", label="Entry Ninject.Activation.Caching.GarbageCollectionCachePruner.Dispose(bool)", span="45-45"];
m33_1 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.Dispose(bool)", file="IFakeInterfaceOptions.cs", label="disposing && !IsDisposed && this.timer != null", span="47-47"];
m33_3 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.Dispose(bool)", file="IFakeInterfaceOptions.cs", label="base.Dispose(disposing)", span="52-52"];
m33_2 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.Dispose(bool)", file="IFakeInterfaceOptions.cs", label="this.Stop()", span="49-49"];
m33_4 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.Dispose(bool)", file="IFakeInterfaceOptions.cs", label="Exit Ninject.Activation.Caching.GarbageCollectionCachePruner.Dispose(bool)", span="45-45"];
m33_39 [cluster="object.Object()", file="IFakeInterfaceOptions.cs", label="Entry object.Object()", span="0-0"];
m33_27 [cluster="System.Threading.WaitHandle.WaitOne()", file="IFakeInterfaceOptions.cs", label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
m33_5 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.Stop()", file="IFakeInterfaceOptions.cs", label="Entry Ninject.Activation.Caching.GarbageCollectionCachePruner.Stop()", span="73-73"];
m33_17 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.Stop()", file="IFakeInterfaceOptions.cs", label=this, span="75-75"];
m33_18 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.Stop()", file="IFakeInterfaceOptions.cs", label="this.stop = true", span="77-77"];
m33_19 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.Stop()", file="IFakeInterfaceOptions.cs", label="var signal = new ManualResetEvent(false)", span="80-80"];
m33_20 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.Stop()", file="IFakeInterfaceOptions.cs", label="this.timer.Dispose(signal)", span="83-83"];
m33_21 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.Stop()", file="IFakeInterfaceOptions.cs", label="signal.WaitOne()", span="84-84"];
m33_22 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.Stop()", file="IFakeInterfaceOptions.cs", label="this.timer = null", span="89-89"];
m33_23 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.Stop()", file="IFakeInterfaceOptions.cs", label="this.caches.Clear()", span="90-90"];
m33_24 [cluster="Ninject.Activation.Caching.GarbageCollectionCachePruner.Stop()", file="IFakeInterfaceOptions.cs", label="Exit Ninject.Activation.Caching.GarbageCollectionCachePruner.Stop()", span="73-73"];
m33_47 [file="IFakeInterfaceOptions.cs", label="Ninject.Activation.Caching.GarbageCollectionCachePruner", span=""];
m34_0 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="ImmutableVerbFakes.cs", label="Entry CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", span="13-13"];
m34_1 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="ImmutableVerbFakes.cs", label="this.patch = patch", span="15-15"];
m34_2 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="ImmutableVerbFakes.cs", label="this.force = force", span="16-16"];
m34_3 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="ImmutableVerbFakes.cs", label="this.fileName = fileName", span="17-17"];
m34_4 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="ImmutableVerbFakes.cs", label="Exit CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", span="13-13"];
m34_5 [cluster="CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", file="ImmutableVerbFakes.cs", label="Entry CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", span="38-38"];
m34_6 [cluster="CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", file="ImmutableVerbFakes.cs", label="this.patch = patch", span="40-40"];
m34_7 [cluster="CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", file="ImmutableVerbFakes.cs", label="this.amend = amend", span="41-41"];
m34_8 [cluster="CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", file="ImmutableVerbFakes.cs", label="Exit CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", span="38-38"];
m34_9 [cluster="CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", file="ImmutableVerbFakes.cs", label="Entry CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", span="59-59"];
m34_10 [cluster="CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", file="ImmutableVerbFakes.cs", label="this.noHardLinks = noHardLinks", span="61-61"];
m34_11 [cluster="CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", file="ImmutableVerbFakes.cs", label="this.quiet = quiet", span="62-62"];
m34_12 [cluster="CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", file="ImmutableVerbFakes.cs", label="this.urls = urls", span="63-63"];
m34_13 [cluster="CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", file="ImmutableVerbFakes.cs", label="Exit CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", span="59-59"];
m34_14 [file="ImmutableVerbFakes.cs", label="CommandLine.Tests.Fakes.ImmutableAddOptions", span=""];
m34_15 [file="ImmutableVerbFakes.cs", label="CommandLine.Tests.Fakes.ImmutableCommitOptions", span=""];
m34_16 [file="ImmutableVerbFakes.cs", label="CommandLine.Tests.Fakes.ImmutableCloneOptions", span=""];
m35_40 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", span="115-115"];
m35_41 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="120-125"];
m35_42 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((Parsed<FakeOptions>)result).Value.IntSequence.ShouldBeEquivalentTo(expected)", span="128-128"];
m35_43 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", span="115-115"];
m35_223 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithRequired.FakeOptionsWithRequired()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithRequired.FakeOptionsWithRequired()", span="4-4"];
m35_347 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", span="852-852"];
m35_348 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: Action test = () => InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithMinMaxZero>>(() => new FakeOptionsWithMinMaxZero()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="855-860"];
m35_349 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Assert.Throws<ApplicationException>(test)", span="863-863"];
m35_350 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", span="852-852"];
m35_171 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="37-37"];
m35_328 [cluster="Unk.>", file="InstanceBuilderTests.cs", label="Entry Unk.>", span=""];
m35_62 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraint.FakeOptionsWithSequenceAndOnlyMaxConstraint()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraint.FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="6-6"];
m35_150 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", span="400-400"];
m35_151 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndSeparator>>(() => new FakeOptionsWithSequenceAndSeparator()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="405-410"];
m35_152 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", color=green, community=0, file="InstanceBuilderTests.cs", label="0: expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithSequenceAndSeparator>)result).Value.LongSequence)", span="413-413"];
m35_153 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", span="400-400"];
m35_54 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraint.FakeOptionsWithSequenceAndOnlyMinConstraint()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraint.FakeOptionsWithSequenceAndOnlyMinConstraint()", span="6-6"];
m35_257 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", span="643-643"];
m35_258 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="648-653"];
m35_259 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((Parsed<FakeOptions>)result).Value.StringValue.ShouldBeEquivalentTo(expected)", span="656-656"];
m35_260 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", span="643-643"];
m35_324 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", span="822-822"];
m35_325 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: Action test = () => InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithMinZero>>(() => new FakeOptionsWithMinZero()),\r\n                new string[] {},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="825-830"];
m35_326 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Assert.Throws<ApplicationException>(test)", span="833-833"];
m35_327 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", span="822-822"];
m35_297 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", span="752-752"];
m35_298 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithNullables>>(() => new FakeOptionsWithNullables()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="757-762"];
m35_299 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithNullables>)result).Value.NullableLong)", span="765-765"];
m35_300 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", span="752-752"];
m35_78 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335"];
m35_8 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="InstanceBuilderTests.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m35_165 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="445-445"];
m35_166 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''str1'',\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''-a'', ''--bee'', ''-c'' },\r\n                    IntValue = 20\r\n                }", span="448-454"];
m35_167 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="var arguments = new[] { ''--stringvalue'', ''str1'', ''--'', ''10'', ''-a'', ''--bee'', ''-c'', ''20'' }", span="455-455"];
m35_169 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: expectedResult.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithValues>)result).Value)", span="469-469"];
m35_168 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithValues>>(() => new FakeOptionsWithValues()),\r\n                (a, optionSpecs) =>\r\n                    Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="458-466"];
m35_170 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="445-445"];
m35_249 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="621-621"];
m35_250 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="624-624"];
m35_251 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                new[] { ''-zx'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="627-632"];
m35_252 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((NotParsed<FakeOptions>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="635-635"];
m35_253 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="621-621"];
m35_384 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", span="912-912"];
m35_385 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeInterfaceOptions>>(() => new FakeInterfaceOptions()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="915-920"];
m35_386 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: expected.ShouldBeEquivalentTo(((Parsed<FakeInterfaceOptions>)result).Value.InputFile)", span="923-923"];
m35_387 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", span="912-912"];
m35_107 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", span="11-11"];
m35_73 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="201-201"];
m35_74 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="204-204"];
m35_75 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndOnlyMinConstraintAsValue>>(() => new FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="207-212"];
m35_76 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((NotParsed<FakeOptionsWithSequenceAndOnlyMinConstraintAsValue>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="215-215"];
m35_77 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="201-201"];
m35_237 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280"];
m35_91 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="241-241"];
m35_92 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="244-244"];
m35_93 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue>>(() => new FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()),\r\n                new[] { ''one'', ''two'', ''three'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="247-252"];
m35_94 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((NotParsed<FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="255-255"];
m35_95 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="241-241"];
m35_446 [cluster="CSharpx.Maybe.Nothing<T>()", file="InstanceBuilderTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m35_304 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", span="773-773"];
m35_305 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithFSharpOption>>(() => new FakeOptionsWithFSharpOption()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="778-783"];
m35_307 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: expectedValue.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithFSharpOption>)result).Value.FileName.Value)", span="788-788"];
m35_308 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: expectedSome.ShouldBeEquivalentTo(FSharpOption<string>.get_IsSome(((Parsed<FakeOptionsWithFSharpOption>)result).Value.FileName))", span="790-790"];
m35_306 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((Parsed<FakeOptionsWithFSharpOption>)result).Value.FileName != null", span="786-786"];
m35_309 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", span="773-773"];
m35_288 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceMinMaxEqual.FakeOptionsWithSequenceMinMaxEqual()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceMinMaxEqual.FakeOptionsWithSequenceMinMaxEqual()", span="9-9"];
m35_296 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithNullables.FakeOptionsWithNullables()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithNullables.FakeOptionsWithNullables()", span="4-4"];
m35_182 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", span="13-13"];
m35_429 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", span="1022-1022"];
m35_430 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithTwoRequired>>(() => new FakeOptionsWithTwoRequired()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="1025-1030"];
m35_432 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="InstanceBuilderTests.cs", label="errors.OfType<MissingRequiredOptionError>().Should().HaveCount(x => x == expected)", span="1034-1034"];
m35_431 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var errors = ((NotParsed<FakeOptionsWithTwoRequired>)result).Errors", span="1033-1033"];
m35_433 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", span="1022-1022"];
m35_6 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m35_241 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="601-601"];
m35_242 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="604-604"];
m35_243 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                new[] { ''-z'', ''-x'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="607-612"];
m35_244 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((NotParsed<FakeOptions>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="615-615"];
m35_245 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="601-601"];
m35_108 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", span="286-286"];
m35_109 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="289-289"];
m35_110 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithEnum>>(() => new FakeOptionsWithEnum()),\r\n                new[] { ''--colors'', ''3'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="292-297"];
m35_111 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((NotParsed<FakeOptionsWithEnum>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="300-300"];
m35_112 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", span="286-286"];
m35_9 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368"];
m35_370 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithNamedAndEmptySets.FakeOptionsWithNamedAndEmptySets()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithNamedAndEmptySets.FakeOptionsWithNamedAndEmptySets()", span="4-4"];
m35_13 [cluster="Unk.ShouldBeEquivalentTo", file="InstanceBuilderTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m35_413 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", span="977-977"];
m35_414 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithScalarValueAndSequenceStringAdjacent>>(() => new FakeOptionsWithScalarValueAndSequenceStringAdjacent()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="982-987"];
m35_415 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithScalarValueAndSequenceStringAdjacent>)result).Value)", span="990-990"];
m35_416 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", span="977-977"];
m35_82 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", span="6-6"];
m35_142 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", span="377-377"];
m35_143 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceWithoutRange>>(() => new FakeOptionsWithSequenceWithoutRange()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="382-387"];
m35_144 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", color=green, community=0, file="InstanceBuilderTests.cs", label="0: expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithSequenceWithoutRange>)result).Value.LongSequence)", span="390-390"];
m35_145 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", span="377-377"];
m35_55 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="162-162"];
m35_56 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndOnlyMaxConstraint>>(() => new FakeOptionsWithSequenceAndOnlyMaxConstraint()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="167-172"];
m35_57 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((Parsed<FakeOptionsWithSequenceAndOnlyMaxConstraint>)result).Value.StringSequence.ShouldBeEquivalentTo(expected)", span="175-175"];
m35_58 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="162-162"];
m35_358 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", span="872-872"];
m35_359 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithNamedAndEmptySets>>(() => new FakeOptionsWithNamedAndEmptySets()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="875-880"];
m35_360 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="type == ParserResultType.NotParsed", span="883-883"];
m35_361 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", color=green, community=0, file="InstanceBuilderTests.cs", label="1: ((NotParsed<FakeOptionsWithNamedAndEmptySets>)result).Errors.Should().HaveCount(x => x == expected)", span="885-885"];
m35_362 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="type == ParserResultType.Parsed", span="887-887"];
m35_363 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: result.Should().BeOfType<Parsed<FakeOptionsWithNamedAndEmptySets>>()", span="889-889"];
m35_364 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", span="872-872"];
m35_32 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", span="92-92"];
m35_33 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequence>>(() => new FakeOptionsWithSequence()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="97-102"];
m35_34 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((Parsed<FakeOptionsWithSequence>)result).Value.IntSequence.ShouldBeEquivalentTo(expected)", span="105-105"];
m35_35 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", span="92-92"];
m35_455 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="1065-1065"];
m35_15 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="1: fakeOptions", span="27-27"];
m35_14 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="27-27"];
m35_16 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="27-27"];
m35_21 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="49-49"];
m35_22 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptions()", span="49-49"];
m35_23 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="49-49"];
m35_28 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="73-73"];
m35_29 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithDouble()", span="73-73"];
m35_30 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="73-73"];
m35_36 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="98-98"];
m35_37 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithSequence()", span="98-98"];
m35_38 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="98-98"];
m35_44 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="121-121"];
m35_45 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptions()", span="121-121"];
m35_46 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="121-121"];
m35_51 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="145-145"];
m35_52 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithSequenceAndOnlyMinConstraint()", span="145-145"];
m35_53 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="145-145"];
m35_59 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="168-168"];
m35_60 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="168-168"];
m35_61 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="168-168"];
m35_70 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="188-188"];
m35_71 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithSequenceAndOnlyMinConstraint()", span="188-188"];
m35_72 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="188-188"];
m35_79 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="208-208"];
m35_80 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", span="208-208"];
m35_81 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="208-208"];
m35_88 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="228-228"];
m35_89 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="228-228"];
m35_90 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="228-228"];
m35_96 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="248-248"];
m35_97 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", span="248-248"];
m35_98 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="248-248"];
m35_104 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="273-273"];
m35_105 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithEnum()", span="273-273"];
m35_106 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="273-273"];
m35_114 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="293-293"];
m35_115 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithEnum()", span="293-293"];
m35_116 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="293-293"];
m35_122 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="313-313"];
m35_123 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithEnum()", span="313-313"];
m35_124 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="313-313"];
m35_130 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="333-333"];
m35_131 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithEnum()", span="333-333"];
m35_132 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="333-333"];
m35_139 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="359-359"];
m35_140 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithValues()", span="359-359"];
m35_141 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="359-359"];
m35_146 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="383-383"];
m35_147 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithSequenceWithoutRange()", span="383-383"];
m35_148 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="383-383"];
m35_154 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="406-406"];
m35_155 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithSequenceAndSeparator()", span="406-406"];
m35_156 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="406-406"];
m35_162 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="429-429"];
m35_163 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithSequenceAndSeparator()", span="429-429"];
m35_164 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="429-429"];
m35_172 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="459-459"];
m35_175 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="460-462"];
m35_173 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithValues()", span="459-459"];
m35_174 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="459-459"];
m35_176 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)))", span="461-462"];
m35_180 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))", span="462-462"];
m35_184 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)", span="462-462"];
m35_177 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="460-462"];
m35_179 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="462-462"];
m35_181 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="462-462"];
m35_183 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="462-462"];
m35_185 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="462-462"];
m35_193 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="486-486"];
m35_194 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithSets()", span="486-486"];
m35_195 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="486-486"];
m35_203 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="507-507"];
m35_204 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithRequiredAndSet()", span="507-507"];
m35_205 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="507-507"];
m35_212 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="528-528"];
m35_213 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithRequiredAndSet()", span="528-528"];
m35_214 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="528-528"];
m35_220 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="548-548"];
m35_221 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithRequired()", span="548-548"];
m35_222 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="548-548"];
m35_229 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="568-568"];
m35_230 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptions()", span="568-568"];
m35_231 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="568-568"];
m35_238 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="588-588"];
m35_239 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptions()", span="588-588"];
m35_240 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="588-588"];
m35_246 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="608-608"];
m35_247 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptions()", span="608-608"];
m35_248 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="608-608"];
m35_254 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="628-628"];
m35_255 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptions()", span="628-628"];
m35_256 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="628-628"];
m35_261 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="649-649"];
m35_262 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptions()", span="649-649"];
m35_263 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="649-649"];
m35_269 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="669-669"];
m35_270 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithRequiredValue()", span="669-669"];
m35_271 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="669-669"];
m35_277 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="692-692"];
m35_278 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptions()", span="692-692"];
m35_279 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="692-692"];
m35_285 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="712-712"];
m35_286 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithSequenceMinMaxEqual()", span="712-712"];
m35_287 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="712-712"];
m35_293 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="735-735"];
m35_294 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithNullables()", span="735-735"];
m35_295 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="735-735"];
m35_301 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="758-758"];
m35_302 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithNullables()", span="758-758"];
m35_303 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="758-758"];
m35_311 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="779-779"];
m35_312 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithFSharpOption()", span="779-779"];
m35_313 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="779-779"];
m35_321 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="804-804"];
m35_322 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithFSharpOption()", span="804-804"];
m35_323 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="804-804"];
m35_329 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="825-830"];
m35_330 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithMinZero>>(() => new FakeOptionsWithMinZero()),\r\n                new string[] {},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="825-830"];
m35_331 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="825-830"];
m35_332 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="826-826"];
m35_333 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithMinZero()", span="826-826"];
m35_334 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="826-826"];
m35_340 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="840-845"];
m35_341 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithMaxZero>>(() => new FakeOptionsWithMaxZero()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="840-845"];
m35_342 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="840-845"];
m35_343 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="841-841"];
m35_344 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithMaxZero()", span="841-841"];
m35_345 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="841-841"];
m35_351 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="855-860"];
m35_352 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithMinMaxZero>>(() => new FakeOptionsWithMinMaxZero()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="855-860"];
m35_353 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="855-860"];
m35_354 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="856-856"];
m35_355 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithMinMaxZero()", span="856-856"];
m35_356 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="856-856"];
m35_372 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="1: x == expected", span="885-885"];
m35_367 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="876-876"];
m35_371 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="885-885"];
m35_368 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithNamedAndEmptySets()", span="876-876"];
m35_369 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="876-876"];
m35_373 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="885-885"];
m35_382 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: x == expected", span="906-906"];
m35_378 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="899-899"];
m35_381 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="906-906"];
m35_379 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptions()", span="899-899"];
m35_380 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="899-899"];
m35_383 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="906-906"];
m35_388 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="916-916"];
m35_389 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="1: new FakeInterfaceOptions()", span="916-916"];
m35_390 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="916-916"];
m35_404 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: x == expected", span="947-947"];
m35_399 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="938-938"];
m35_403 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="947-947"];
m35_400 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithTwoRequiredAndSets()", span="938-938"];
m35_401 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="938-938"];
m35_405 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="947-947"];
m35_410 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="963-963"];
m35_411 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithRequiredValue()", span="963-963"];
m35_412 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="963-963"];
m35_417 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="983-983"];
m35_418 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithScalarValueAndSequenceStringAdjacent()", span="983-983"];
m35_419 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="983-983"];
m35_426 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="1003-1003"];
m35_427 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptions()", span="1003-1003"];
m35_428 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="1003-1003"];
m35_440 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="x == expected", span="1034-1034"];
m35_435 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="1026-1026"];
m35_439 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="1034-1034"];
m35_436 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithTwoRequired()", span="1026-1026"];
m35_437 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="1026-1026"];
m35_441 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="1034-1034"];
m35_456 [cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithSimpleType()", span="1065-1065"];
m35_457 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="1065-1065"];
m35_31 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", span="4-4"];
m35_157 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", span="6-6"];
m35_374 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", span="895-895"];
m35_375 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", color=green, community=0, file="InstanceBuilderTests.cs", label="1: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="898-903"];
m35_376 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((NotParsed<FakeOptions>)result).Errors.Should().HaveCount(x => x == expected)", span="906-906"];
m35_377 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", span="895-895"];
m35_392 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", span="934-934"];
m35_393 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", color=green, community=0, file="InstanceBuilderTests.cs", label="1: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithTwoRequiredAndSets>>(() => new FakeOptionsWithTwoRequiredAndSets()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="937-942"];
m35_394 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="type == ParserResultType.NotParsed", span="945-945"];
m35_395 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((NotParsed<FakeOptionsWithTwoRequiredAndSets>)result).Errors.Should().HaveCount(x => x == expected)", span="947-947"];
m35_396 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="type == ParserResultType.Parsed", span="949-949"];
m35_397 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: result.Should().BeOfType<Parsed<FakeOptionsWithTwoRequiredAndSets>>()", span="951-951"];
m35_398 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", span="934-934"];
m35_47 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="139-139"];
m35_48 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndOnlyMinConstraint>>(() => new FakeOptionsWithSequenceAndOnlyMinConstraint()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="144-149"];
m35_49 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((Parsed<FakeOptionsWithSequenceAndOnlyMinConstraint>)result).Value.StringSequence.ShouldBeEquivalentTo(expected)", span="152-152"];
m35_50 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="139-139"];
m35_117 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", span="306-306"];
m35_118 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="309-309"];
m35_119 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithEnum>>(() => new FakeOptionsWithEnum()),\r\n                new[] { ''--colors'', ''Yellow'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="312-317"];
m35_120 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((NotParsed<FakeOptionsWithEnum>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="320-320"];
m35_121 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", span="306-306"];
m35_138 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6"];
m35_24 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", span="67-67"];
m35_25 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithDouble>>(() => new FakeOptionsWithDouble()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="72-77"];
m35_26 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((Parsed<FakeOptionsWithDouble>)result).Value.DoubleValue.ShouldBeEquivalentTo(expected)", span="80-80"];
m35_27 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", span="67-67"];
m35_272 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue.FakeOptionsWithRequiredValue()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue.FakeOptionsWithRequiredValue()", span="4-4"];
m35_357 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithMinMaxZero.FakeOptionsWithMinMaxZero()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMinMaxZero.FakeOptionsWithMinMaxZero()", span="6-6"];
m35_202 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithRequiredAndSet.FakeOptionsWithRequiredAndSet()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithRequiredAndSet.FakeOptionsWithRequiredAndSet()", span="4-4"];
m35_453 [cluster="System.Uri.Uri(string)", file="InstanceBuilderTests.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m35_264 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", span="662-662"];
m35_265 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(NameInfo.EmptyName) }", span="665-665"];
m35_266 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithRequiredValue>>(() => new FakeOptionsWithRequiredValue()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="668-673"];
m35_267 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((NotParsed<FakeOptionsWithRequiredValue>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="676-676"];
m35_268 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", span="662-662"];
m35_224 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="561-561"];
m35_225 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''i'', '''')) }", span="564-564"];
m35_226 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                new [] { ''-i'', ''10'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="567-572"];
m35_227 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((NotParsed<FakeOptions>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="575-575"];
m35_228 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="561-561"];
m35_314 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithFSharpOption.FakeOptionsWithFSharpOption()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithFSharpOption.FakeOptionsWithFSharpOption()", span="6-6"];
m35_310 [cluster="Unk.get_IsSome", file="InstanceBuilderTests.cs", label="Entry Unk.get_IsSome", span=""];
m35_11 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="InstanceBuilderTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m35_7 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m35_186 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="18-18"];
m35_0 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="18-18"];
m35_1 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var fakeOptions = new FakeOptions()", span="21-21"];
m35_2 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var expectedResult = new NotParsed<FakeOptions>(\r\n                TypeInfo.Create(typeof(FakeOptions)), new Error[] { new HelpRequestedError() })", span="22-23"];
m35_3 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => fakeOptions),\r\n                new[] { ''--help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="26-31"];
m35_4 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="result.ShouldBeEquivalentTo(expectedResult)", span="34-34"];
m35_5 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="18-18"];
m35_215 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="541-541"];
m35_216 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(new NameInfo('''', ''str'')) }", span="544-544"];
m35_217 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithRequired>>(() => new FakeOptionsWithRequired()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="547-552"];
m35_218 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((NotParsed<FakeOptionsWithRequired>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="555-555"];
m35_219 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="541-541"];
m35_452 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSimpleType.FakeOptionsWithSimpleType()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSimpleType.FakeOptionsWithSimpleType()", span="23-23"];
m35_206 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="519-519"];
m35_207 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="var expectedResult = new[]\r\n            {\r\n                new MissingRequiredOptionError(new NameInfo('''', ''ftpurl'')),\r\n                new MissingRequiredOptionError(new NameInfo('''', ''weburl''))\r\n            }", span="521-525"];
m35_208 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithRequiredAndSet>>(() => new FakeOptionsWithRequiredAndSet()),\r\n                new[] {''''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="527-532"];
m35_209 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((NotParsed<FakeOptionsWithRequiredAndSet>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="535-535"];
m35_210 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="519-519"];
m35_125 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", span="326-326"];
m35_126 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="329-329"];
m35_127 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithEnum>>(() => new FakeOptionsWithEnum()),\r\n                new[] { ''--colors'', ''RED'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="332-337"];
m35_128 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((NotParsed<FakeOptionsWithEnum>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="340-340"];
m35_129 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", span="326-326"];
m35_68 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m35_406 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", span="957-957"];
m35_407 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithRequiredValue>>(() => new FakeOptionsWithRequiredValue()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="962-967"];
m35_408 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithRequiredValue>)result).Value)", span="970-970"];
m35_409 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", span="957-957"];
m35_83 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="221-221"];
m35_84 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''s'', ''string-seq'')) }", span="224-224"];
m35_85 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndOnlyMaxConstraint>>(() => new FakeOptionsWithSequenceAndOnlyMaxConstraint()),\r\n                new[] { ''--string-seq=one'', ''two'', ''three'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="227-232"];
m35_86 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((NotParsed<FakeOptionsWithSequenceAndOnlyMaxConstraint>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="235-235"];
m35_87 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="221-221"];
m35_63 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="181-181"];
m35_64 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new MissingValueOptionError(new NameInfo(''s'', ''string-seq'')) }", span="184-184"];
m35_65 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndOnlyMinConstraint>>(() => new FakeOptionsWithSequenceAndOnlyMinConstraint()),\r\n                new[] { ''-s'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="187-192"];
m35_66 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((NotParsed<FakeOptionsWithSequenceAndOnlyMinConstraint>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="195-195"];
m35_67 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="181-181"];
m35_133 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="346-346"];
m35_134 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = string.Empty,\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''a'', ''b'', ''c'' },\r\n                    IntValue = 20\r\n                }", span="349-355"];
m35_135 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithValues>>(() => new FakeOptionsWithValues()),\r\n                new[] { ''10'', ''a'', ''b'', ''c'', ''20'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="358-363"];
m35_136 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: expectedResult.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithValues>)result).Value)", span="366-366"];
m35_137 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="346-346"];
m35_420 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent.FakeOptionsWithScalarValueAndSequenceStringAdjacent()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent.FakeOptionsWithScalarValueAndSequenceStringAdjacent()", span="6-6"];
m35_346 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithMaxZero.FakeOptionsWithMaxZero()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMaxZero.FakeOptionsWithMaxZero()", span="6-6"];
m35_366 [cluster="Unk.HaveCount", file="InstanceBuilderTests.cs", label="Entry Unk.HaveCount", span=""];
m35_196 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", span="4-4"];
m35_12 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14"];
m35_69 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m35_17 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", span="43-43"];
m35_18 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="48-53"];
m35_19 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((Parsed<FakeOptions>)result).Value.LongValue.ShouldBeEquivalentTo(expected)", span="56-56"];
m35_20 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", span="43-43"];
m35_391 [cluster="CommandLine.Tests.Fakes.FakeInterfaceOptions.FakeInterfaceOptions()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeInterfaceOptions.FakeInterfaceOptions()", span="2-2"];
m35_315 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", span="798-798"];
m35_316 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithFSharpOption>>(() => new FakeOptionsWithFSharpOption()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="803-808"];
m35_318 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: expectedValue.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithFSharpOption>)result).Value.Offset.Value)", span="813-813"];
m35_319 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: expectedSome.ShouldBeEquivalentTo(FSharpOption<int>.get_IsSome(((Parsed<FakeOptionsWithFSharpOption>)result).Value.Offset))", span="815-815"];
m35_317 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((Parsed<FakeOptionsWithFSharpOption>)result).Value.Offset != null", span="811-811"];
m35_320 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", span="798-798"];
m35_421 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", span="996-996"];
m35_422 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var expectedResult = new FakeOptions { StringValue=''strval0'', IntSequence=new[] { 9, 7, 8 }, BoolValue = true,  LongValue = 9876543210L }", span="999-999"];
m35_423 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                new[] { ''--stringvalue=strval0'', ''-i'', ''9'', ''7'', ''8'', ''-x'', ''9876543210'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="1002-1007"];
m35_424 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: expectedResult.ShouldBeEquivalentTo(((Parsed<FakeOptions>)result).Value)", span="1010-1010"];
m35_425 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", span="996-996"];
m35_149 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", span="6-6"];
m35_192 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", span="304-304"];
m35_178 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="44-44"];
m35_158 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", span="423-423"];
m35_159 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndSeparator>>(() => new FakeOptionsWithSequenceAndSeparator()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="428-433"];
m35_160 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", color=green, community=0, file="InstanceBuilderTests.cs", label="0: expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithSequenceAndSeparator>)result).Value.StringSequence)", span="436-436"];
m35_161 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", span="423-423"];
m35_211 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m35_289 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", span="729-729"];
m35_290 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithNullables>>(() => new FakeOptionsWithNullables()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="734-739"];
m35_291 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithNullables>)result).Value.NullableInt)", span="742-742"];
m35_292 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", span="729-729"];
m35_232 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="581-581"];
m35_233 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new UnknownOptionError(''xyz'') }", span="584-584"];
m35_234 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                new[] { ''--stringvalue'', ''abc'', ''--xyz'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="587-592"];
m35_235 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((NotParsed<FakeOptions>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="595-595"];
m35_236 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="581-581"];
m35_197 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="499-499"];
m35_198 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var expectedResult = new FakeOptionsWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = ''str2''\r\n            }", span="501-504"];
m35_199 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithRequiredAndSet>>(() => new FakeOptionsWithRequiredAndSet()),\r\n                new[] { ''--ftpurl'', ''str1'', ''--weburl'', ''str2'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="506-511"];
m35_200 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: expectedResult.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithRequiredAndSet>)result).Value)", span="514-514"];
m35_201 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="499-499"];
m35_280 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="705-705"];
m35_281 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="708-708"];
m35_282 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceMinMaxEqual>>(() => new FakeOptionsWithSequenceMinMaxEqual()),\r\n                new[] { ''one'', ''two'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="711-716"];
m35_283 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((NotParsed<FakeOptionsWithSequenceMinMaxEqual>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="719-719"];
m35_284 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="705-705"];
m35_10 [cluster="CSharpx.Maybe.Just<T>(T)", file="InstanceBuilderTests.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m35_402 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithTwoRequiredAndSets.FakeOptionsWithTwoRequiredAndSets()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithTwoRequiredAndSets.FakeOptionsWithTwoRequiredAndSets()", span="4-4"];
m35_100 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", span="267-267"];
m35_101 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithEnum>>(() => new FakeOptionsWithEnum()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="272-277"];
m35_102 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithEnum>)result).Value.Colors)", span="280-280"];
m35_103 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", span="267-267"];
m35_442 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.FakeImmutableOptions)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.FakeImmutableOptions)", span="1039-1039"];
m35_443 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.FakeImmutableOptions)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Nothing<Func<FakeImmutableOptions>>(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="1044-1049"];
m35_444 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.FakeImmutableOptions)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: expected.ShouldBeEquivalentTo(((Parsed<FakeImmutableOptions>)result).Value)", span="1052-1052"];
m35_445 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.FakeImmutableOptions)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.FakeImmutableOptions)", span="1039-1039"];
m35_99 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", span="6-6"];
m35_365 [cluster="Unk.Should", file="InstanceBuilderTests.cs", label="Entry Unk.Should", span=""];
m35_454 [cluster="CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", span="12-12"];
m35_273 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", span="686-686"];
m35_274 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="691-696"];
m35_275 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", color=green, community=0, file="InstanceBuilderTests.cs", label="0: expected.ShouldBeEquivalentTo(((Parsed<FakeOptions>)result).Value.StringValue)", span="699-699"];
m35_276 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", span="686-686"];
m35_113 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="324-324"];
m35_447 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", span="1058-1058"];
m35_448 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var expectedResult = new FakeOptionsWithSimpleType { EndPoint = new Uri(''http://localhost/test/''), MyValue = new MySimpleType(''custom-value'') }", span="1061-1061"];
m35_449 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSimpleType>>(() => new FakeOptionsWithSimpleType()),\r\n                new[] { ''--endpoint=http://localhost/test/'', ''custom-value'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="1064-1069"];
m35_450 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: expectedResult.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithSimpleType>)result).Value)", span="1072-1072"];
m35_451 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", span="1058-1058"];
m35_438 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithTwoRequired.FakeOptionsWithTwoRequired()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithTwoRequired.FakeOptionsWithTwoRequired()", span="4-4"];
m35_434 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="InstanceBuilderTests.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m35_39 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", span="6-6"];
m35_335 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithMinZero.FakeOptionsWithMinZero()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMinZero.FakeOptionsWithMinZero()", span="6-6"];
m35_336 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", span="837-837"];
m35_337 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: Action test = () => InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithMaxZero>>(() => new FakeOptionsWithMaxZero()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="840-845"];
m35_338 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Assert.Throws<ApplicationException>(test)", span="848-848"];
m35_339 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", span="837-837"];
m35_187 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="475-475"];
m35_188 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[]\r\n                {\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''weburl''), string.Empty),\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''ftpurl''), string.Empty)\r\n                }", span="478-482"];
m35_189 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSets>>(() => new FakeOptionsWithSets()),\r\n                new[] { ''--weburl'', ''http://mywebsite.org/'', ''--ftpurl'', ''fpt://ftpsite.org/'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="485-490"];
m35_190 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: ((NotParsed<FakeOptionsWithSets>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="493-493"];
m35_191 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="475-475"];
m35_458 [file="InstanceBuilderTests.cs", label=fakeOptions, span=""];
m35_459 [file="InstanceBuilderTests.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m35_460 [file="InstanceBuilderTests.cs", label=int, span=""];
m35_461 [file="InstanceBuilderTests.cs", label=int, span=""];
m35_462 [file="InstanceBuilderTests.cs", label=int, span=""];
m35_463 [file="InstanceBuilderTests.cs", label=int, span=""];
m36_6 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="InstanceChooserTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m36_33 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", span="115-115"];
m36_34 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", color=red, community=0, file="InstanceChooserTests.cs", label="0: var expected = new ImmutableAddOptions(true, default(bool), ''dummy.bin'')", span="118-118"];
m36_35 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", color=red, community=0, file="InstanceChooserTests.cs", label="0: var result = InstanceChooser.Choose(\r\n                new[] { typeof(ImmutableAddOptions), typeof(ImmutableCommitOptions), typeof(ImmutableCloneOptions) },\r\n                new[] { ''add'', ''--patch'', ''dummy.bin'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="121-126"];
m36_37 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="130-130"];
m36_36 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", color=red, community=0, file="InstanceChooserTests.cs", label="0: Assert.IsType<ImmutableAddOptions>(((Parsed<object>)result).Value)", span="129-129"];
m36_38 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", span="115-115"];
m36_40 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", span="135-135"];
m36_41 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="var expected = new SequenceOptions { LongSequence = new long[] { }, StringSequence = new[] { ''aa'', ''b'' } }", span="138-138"];
m36_42 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", color=red, community=0, file="InstanceChooserTests.cs", label="0: var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions), typeof(SequenceOptions) },\r\n                new[] { ''sequence'', ''-s'', ''aa'', ''b'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="141-146"];
m36_44 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="150-150"];
m36_43 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Assert.IsType<SequenceOptions>(((Parsed<object>)result).Value)", span="149-149"];
m36_45 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", span="135-135"];
m36_14 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="InstanceChooserTests.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
m36_15 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", span="55-55"];
m36_16 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", color=red, community=0, file="InstanceChooserTests.cs", label="0: var expectedErrors = new[] { new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true) }", span="58-58"];
m36_17 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", color=red, community=0, file="InstanceChooserTests.cs", label="0: var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'', ''commit'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="61-66"];
m36_18 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs", label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="69-69"];
m36_19 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", span="55-55"];
m36_39 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", span="13-13"];
m36_5 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="InstanceChooserTests.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m36_25 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", span="95-95"];
m36_26 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", color=red, community=0, file="InstanceChooserTests.cs", label="0: var expected = new AddOptions { Patch = true, FileName = ''dummy.bin''}", span="98-98"];
m36_27 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", color=red, community=0, file="InstanceChooserTests.cs", label="0: var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''add'', ''--patch'', ''dummy.bin'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="101-106"];
m36_29 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="110-110"];
m36_28 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", color=red, community=0, file="InstanceChooserTests.cs", label="0: Assert.IsType<AddOptions>(((Parsed<object>)result).Value)", span="109-109"];
m36_30 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", span="95-95"];
m36_31 [cluster="CommandLine.Tests.Fakes.AddOptions.AddOptions()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Fakes.AddOptions.AddOptions()", span="7-7"];
m36_0 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", span="15-15"];
m36_1 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="var expectedErrors = new[] { new NoVerbSelectedError() }", span="18-18"];
m36_2 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", color=red, community=0, file="InstanceChooserTests.cs", label="0: var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="21-26"];
m36_3 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="29-29"];
m36_4 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", span="15-15"];
m36_9 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", span="35-35"];
m36_10 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="var expectedErrors = new[] { new HelpVerbRequestedError(null, null, false) }", span="38-38"];
m36_11 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", color=red, community=0, file="InstanceChooserTests.cs", label="0: var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="41-46"];
m36_12 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="49-49"];
m36_13 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", span="35-35"];
m36_32 [cluster="Unk.>", file="InstanceChooserTests.cs", label="Entry Unk.>", span=""];
m36_20 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="75-75"];
m36_21 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="var expectedErrors = new[] { new HelpVerbRequestedError(null, null, false) }", span="78-78"];
m36_22 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", color=red, community=0, file="InstanceChooserTests.cs", label="0: var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'', ''earthunderalienattack'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="81-86"];
m36_23 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="89-89"];
m36_24 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="75-75"];
m36_47 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", span="159-159"];
m36_48 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs", label="var expected = new SequenceOptions { LongSequence = new long[] { }, StringSequence = expectedString }", span="162-162"];
m36_49 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", color=red, community=0, file="InstanceChooserTests.cs", label="0: var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions), typeof(SequenceOptions) },\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="165-170"];
m36_51 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="174-174"];
m36_50 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs", label="Assert.IsType<SequenceOptions>(((Parsed<object>)result).Value)", span="173-173"];
m36_52 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", span="159-159"];
m36_7 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceChooserTests.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14"];
m36_46 [cluster="CommandLine.Tests.Fakes.SequenceOptions.SequenceOptions()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Fakes.SequenceOptions.SequenceOptions()", span="51-51"];
m36_8 [cluster="Unk.ShouldBeEquivalentTo", file="InstanceChooserTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m37_13 [cluster="Unk.Where", file="OptionMapperTests.cs", label="Entry Unk.Where", span=""];
m37_12 [cluster="Unk.Create", file="OptionMapperTests.cs", label="Entry Unk.Create", span=""];
m37_6 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="OptionMapperTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m37_11 [cluster="Unk.Single", file="OptionMapperTests.cs", label="Entry Unk.Single", span=""];
m37_15 [cluster="Unk.NotNull", file="OptionMapperTests.cs", label="Entry Unk.NotNull", span=""];
m37_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m37_27 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="13-13"];
m37_0 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Entry CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="17-17"];
m37_1 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var tokenPartitions = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''x'', new [] { ''true'' })\r\n                }", span="20-23"];
m37_2 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", color=green, community=0, file="OptionMapperTests.cs", label="0: var specProps = new[]\r\n                {\r\n                    SpecificationProperty.Create(\r\n                        new OptionSpecification(''x'', string.Empty, false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '\0', Maybe.Nothing<object>(), string.Empty, string.Empty, new List<string>(), typeof(bool), TargetType.Switch), \r\n                        typeof(FakeOptions).GetProperties().Single(p => p.Name.Equals(''BoolValue'', StringComparison.Ordinal)),\r\n                        Maybe.Nothing<object>())\r\n                }", span="24-30"];
m37_3 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var result = OptionMapper.MapValues(\r\n                specProps.Where(pt => pt.Specification.IsOption()),\r\n                tokenPartitions,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture),\r\n                StringComparer.InvariantCulture)", span="33-37"];
m37_4 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Assert.NotNull(((Ok<IEnumerable<SpecificationProperty>, Error>)result).Value.Success.Single(\r\n                a => a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value))", span="40-43"];
m37_5 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Exit CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="17-17"];
m37_28 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="41-43"];
m37_16 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="28-28"];
m37_20 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="34-34"];
m37_24 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="36-36"];
m37_17 [cluster="lambda expression", color=green, community=0, file="OptionMapperTests.cs", label="0: p.Name.Equals(''BoolValue'', StringComparison.Ordinal)", span="28-28"];
m37_18 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="28-28"];
m37_21 [cluster="lambda expression", file="OptionMapperTests.cs", label="pt.Specification.IsOption()", span="34-34"];
m37_22 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="34-34"];
m37_25 [cluster="lambda expression", file="OptionMapperTests.cs", label="TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture)", span="36-36"];
m37_26 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="36-36"];
m37_29 [cluster="lambda expression", file="OptionMapperTests.cs", label="a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value", span="41-43"];
m37_30 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="41-43"];
m37_31 [cluster="Unk.IsOption", file="OptionMapperTests.cs", label="Entry Unk.IsOption", span=""];
m37_32 [cluster="string.Equals(string)", file="OptionMapperTests.cs", label="Entry string.Equals(string)", span="0-0"];
m37_8 [cluster="CSharpx.Maybe.Nothing<T>()", file="OptionMapperTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m37_19 [cluster="string.Equals(string, System.StringComparison)", file="OptionMapperTests.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m37_23 [cluster="CommandLine.Core.Specification.IsOption()", file="OptionMapperTests.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m37_14 [cluster="Unk.MapValues", file="OptionMapperTests.cs", label="Entry Unk.MapValues", span=""];
m37_10 [cluster="System.Type.GetProperties()", file="OptionMapperTests.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m37_9 [cluster="System.Collections.Generic.List<T>.List()", file="OptionMapperTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m38_3 [cluster="object.Equals(object)", file="ParserTests.cs", label="Entry object.Equals(object)", span="0-0"];
m38_4 [cluster="Ninject.Activation.Caching.WeakReferenceEqualityComparer.GetHashCode(object)", file="ParserTests.cs", label="Entry Ninject.Activation.Caching.WeakReferenceEqualityComparer.GetHashCode(object)", span="28-28"];
m38_5 [cluster="Ninject.Activation.Caching.WeakReferenceEqualityComparer.GetHashCode(object)", file="ParserTests.cs", label="var weakReference = obj as ReferenceEqualWeakReference", span="30-30"];
m38_6 [cluster="Ninject.Activation.Caching.WeakReferenceEqualityComparer.GetHashCode(object)", file="ParserTests.cs", label="return weakReference != null ? weakReference.GetHashCode() : \r\n#if !NETCF\r\n                RuntimeHelpers.GetHashCode(obj);", span="31-33"];
m38_7 [cluster="Ninject.Activation.Caching.WeakReferenceEqualityComparer.GetHashCode(object)", file="ParserTests.cs", label="Exit Ninject.Activation.Caching.WeakReferenceEqualityComparer.GetHashCode(object)", span="28-28"];
m38_8 [cluster="Ninject.Infrastructure.ReferenceEqualWeakReference.GetHashCode()", file="ParserTests.cs", label="Entry Ninject.Infrastructure.ReferenceEqualWeakReference.GetHashCode()", span="81-81"];
m38_0 [cluster="Ninject.Activation.Caching.WeakReferenceEqualityComparer.Equals(object, object)", file="ParserTests.cs", label="Entry Ninject.Activation.Caching.WeakReferenceEqualityComparer.Equals(object, object)", span="18-18"];
m38_1 [cluster="Ninject.Activation.Caching.WeakReferenceEqualityComparer.Equals(object, object)", file="ParserTests.cs", label="return x.Equals(y);", span="20-20"];
m38_2 [cluster="Ninject.Activation.Caching.WeakReferenceEqualityComparer.Equals(object, object)", file="ParserTests.cs", label="Exit Ninject.Activation.Caching.WeakReferenceEqualityComparer.Equals(object, object)", span="18-18"];
m38_9 [cluster="System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode(object)", file="ParserTests.cs", label="Entry System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode(object)", span="0-0"];
m39_5 [cluster="Unk.BeTrue", file="ReflectionExtensions.cs", label="Entry Unk.BeTrue", span=""];
m39_9 [cluster="Unk.BeFalse", file="ReflectionExtensions.cs", label="Entry Unk.BeFalse", span=""];
m39_0 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_with_public_set_properties_or_fields_is_ranked_mutable()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_with_public_set_properties_or_fields_is_ranked_mutable()", span="12-12"];
m39_1 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_with_public_set_properties_or_fields_is_ranked_mutable()", color=green, community=0, file="ReflectionExtensions.cs", label="0: typeof(FakeOptions).IsMutable().Should().BeTrue()", span="14-14"];
m39_2 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_with_public_set_properties_or_fields_is_ranked_mutable()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_with_public_set_properties_or_fields_is_ranked_mutable()", span="12-12"];
m39_6 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_without_public_set_properties_or_fields_is_ranked_immutable()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_without_public_set_properties_or_fields_is_ranked_immutable()", span="18-18"];
m39_7 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_without_public_set_properties_or_fields_is_ranked_immutable()", color=green, community=0, file="ReflectionExtensions.cs", label="0: typeof(FakeImmutableOptions).IsMutable().Should().BeFalse()", span="20-20"];
m39_8 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_without_public_set_properties_or_fields_is_ranked_immutable()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_without_public_set_properties_or_fields_is_ranked_immutable()", span="18-18"];
m39_4 [cluster="Unk.Should", file="ReflectionExtensions.cs", label="Entry Unk.Should", span=""];
m39_3 [cluster="System.Type.IsMutable()", file="ReflectionExtensions.cs", label="Entry System.Type.IsMutable()", span="139-139"];
m40_28 [cluster="Unk.>", file="UnParserExtensionsTests.cs", label="Entry Unk.>", span=""];
m40_25 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="UnParserExtensionsTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", span="49-49"];
m40_26 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="UnParserExtensionsTests.cs", label="Assert.Throws<ActivationException>(() => kernel.Get<TwoWayConstructorFoo>())", span="51-51"];
m40_27 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="UnParserExtensionsTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", span="49-49"];
m40_68 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties()", file="UnParserExtensionsTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties()", span="108-108"];
m40_69 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties()", file="UnParserExtensionsTests.cs", label="kernel.Bind<ThreeWayPropertyFoo>().ToSelf().InSingletonScope()", span="110-110"];
m40_70 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties()", file="UnParserExtensionsTests.cs", label="kernel.Bind<ThreeWayPropertyBar>().ToSelf().InSingletonScope()", span="111-111"];
m40_71 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties()", file="UnParserExtensionsTests.cs", label="kernel.Bind<ThreeWayPropertyBaz>().ToSelf().InSingletonScope()", span="112-112"];
m40_72 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties()", file="UnParserExtensionsTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties()", span="108-108"];
m40_11 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", file="UnParserExtensionsTests.cs", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="27-27"];
m40_19 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="UnParserExtensionsTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m40_6 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="UnParserExtensionsTests.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="36-36"];
m40_24 [cluster="Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", file="UnParserExtensionsTests.cs", label="Entry Ninject.KernelBase.Resolve(Ninject.Activation.IRequest)", span="317-317"];
m40_43 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="UnParserExtensionsTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", span="71-71"];
m40_44 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", color=red, community=0, file="UnParserExtensionsTests.cs", label="0: var foo = kernel.Get<TwoWayPropertyFoo>()", span="73-73"];
m40_45 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", color=red, community=0, file="UnParserExtensionsTests.cs", label="0: var bar = kernel.Get<TwoWayPropertyBar>()", span="74-74"];
m40_46 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", color=red, community=0, file="UnParserExtensionsTests.cs", label="0: foo.Bar.ShouldBeSameAs(bar)", span="76-76"];
m40_47 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", color=red, community=0, file="UnParserExtensionsTests.cs", label="0: bar.Foo.ShouldBeSameAs(foo)", span="77-77"];
m40_48 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="UnParserExtensionsTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.ScopeIsRespected()", span="71-71"];
m40_55 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="UnParserExtensionsTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", span="92-92"];
m40_56 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="UnParserExtensionsTests.cs", label="var request = new Request(typeof(ThreeWayConstructorFoo), null, Enumerable.Empty<IParameter>(), null, false, false)", span="94-94"];
m40_57 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="UnParserExtensionsTests.cs", label="Assert.DoesNotThrow(() => kernel.Resolve(request))", span="95-95"];
m40_58 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="UnParserExtensionsTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", span="92-92"];
m40_76 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Entry lambda expression", span="118-118"];
m40_22 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="kernel.Resolve(request)", span="45-45"];
m40_21 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Entry lambda expression", span="45-45"];
m40_23 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Exit lambda expression", span="45-45"];
m40_29 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Entry lambda expression", span="51-51"];
m40_30 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="kernel.Get<TwoWayConstructorFoo>()", span="51-51"];
m40_31 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Exit lambda expression", span="51-51"];
m40_40 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Entry lambda expression", span="67-67"];
m40_41 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="kernel.Get<TwoWayPropertyFoo>()", span="67-67"];
m40_42 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Exit lambda expression", span="67-67"];
m40_60 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="kernel.Resolve(request)", span="95-95"];
m40_59 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Entry lambda expression", span="95-95"];
m40_61 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Exit lambda expression", span="95-95"];
m40_65 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Entry lambda expression", span="101-101"];
m40_66 [cluster="lambda expression", color=red, community=0, file="UnParserExtensionsTests.cs", label="0: kernel.Get<ThreeWayConstructorFoo>()", span="101-101"];
m40_67 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Exit lambda expression", span="101-101"];
m40_77 [cluster="lambda expression", color=red, community=0, file="UnParserExtensionsTests.cs", label="0: kernel.Get<ThreeWayPropertyFoo>()", span="118-118"];
m40_78 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Exit lambda expression", span="118-118"];
m40_20 [cluster="Unk.DoesNotThrow", file="UnParserExtensionsTests.cs", label="Entry Unk.DoesNotThrow", span=""];
m40_18 [cluster="Ninject.Activation.Request.Request(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, System.Func<object>, bool, bool)", file="UnParserExtensionsTests.cs", label="Entry Ninject.Activation.Request.Request(System.Type, System.Func<Ninject.Planning.Bindings.IBindingMetadata, bool>, System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>, System.Func<object>, bool, bool)", span="93-93"];
m40_33 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties()", file="UnParserExtensionsTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties()", span="58-58"];
m40_34 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties()", file="UnParserExtensionsTests.cs", label="kernel.Bind<TwoWayPropertyFoo>().ToSelf().InSingletonScope()", span="60-60"];
m40_35 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties()", color=red, community=0, file="UnParserExtensionsTests.cs", label="0: kernel.Bind<TwoWayPropertyBar>().ToSelf().InSingletonScope()", span="61-61"];
m40_36 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties()", file="UnParserExtensionsTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties()", span="58-58"];
m40_0 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.CircularDependenciesContext.CircularDependenciesContext()", file="UnParserExtensionsTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.CircularDependenciesContext.CircularDependenciesContext()", span="20-20"];
m40_1 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.CircularDependenciesContext.CircularDependenciesContext()", file="UnParserExtensionsTests.cs", label="this.SetUp()", span="22-22"];
m40_2 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.CircularDependenciesContext.CircularDependenciesContext()", file="UnParserExtensionsTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.CircularDependenciesContext.CircularDependenciesContext()", span="20-20"];
m40_12 [cluster="Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", file="UnParserExtensionsTests.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.ToSelf()", span="34-34"];
m40_13 [cluster="Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", file="UnParserExtensionsTests.cs", label="Entry Ninject.Syntax.IBindingInSyntax<T>.InSingletonScope()", span="165-165"];
m40_93 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBar.ThreeWayConstructorBar(Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBaz)", file="UnParserExtensionsTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBar.ThreeWayConstructorBar(Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBaz)", span="161-161"];
m40_94 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBar.ThreeWayConstructorBar(Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBaz)", file="UnParserExtensionsTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBar.ThreeWayConstructorBar(Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBaz)", span="161-161"];
m40_87 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo.TwoWayConstructorFoo(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorBar)", file="UnParserExtensionsTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo.TwoWayConstructorFoo(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorBar)", span="136-136"];
m40_88 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo.TwoWayConstructorFoo(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorBar)", file="UnParserExtensionsTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo.TwoWayConstructorFoo(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorBar)", span="136-136"];
m40_91 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorFoo.ThreeWayConstructorFoo(Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBar)", file="UnParserExtensionsTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorFoo.ThreeWayConstructorFoo(Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBar)", span="156-156"];
m40_92 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorFoo.ThreeWayConstructorFoo(Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBar)", file="UnParserExtensionsTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorFoo.ThreeWayConstructorFoo(Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBar)", span="156-156"];
m40_7 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", file="UnParserExtensionsTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", span="35-35"];
m40_8 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", file="UnParserExtensionsTests.cs", label="kernel.Bind<TwoWayConstructorFoo>().ToSelf().InSingletonScope()", span="37-37"];
m40_9 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", file="UnParserExtensionsTests.cs", label="kernel.Bind<TwoWayConstructorBar>().ToSelf().InSingletonScope()", span="38-38"];
m40_10 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", file="UnParserExtensionsTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors()", span="35-35"];
m40_14 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="UnParserExtensionsTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", span="42-42"];
m40_15 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="UnParserExtensionsTests.cs", label="var request = new Request(typeof(TwoWayConstructorFoo), null, Enumerable.Empty<IParameter>(), null, false, false)", span="44-44"];
m40_16 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="UnParserExtensionsTests.cs", label="Assert.DoesNotThrow(() => kernel.Resolve(request))", span="45-45"];
m40_17 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", file="UnParserExtensionsTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors.DoesNotThrowExceptionIfHookIsCreated()", span="42-42"];
m40_73 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="UnParserExtensionsTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", span="116-116"];
m40_74 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", color=red, community=0, file="UnParserExtensionsTests.cs", label="0: Assert.DoesNotThrow(() => kernel.Get<ThreeWayPropertyFoo>())", span="118-118"];
m40_75 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="UnParserExtensionsTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.DoesNotThrowException()", span="116-116"];
m40_79 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="UnParserExtensionsTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", span="122-122"];
m40_80 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="UnParserExtensionsTests.cs", label="var foo = kernel.Get<ThreeWayPropertyFoo>()", span="124-124"];
m40_81 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="UnParserExtensionsTests.cs", label="var bar = kernel.Get<ThreeWayPropertyBar>()", span="125-125"];
m40_83 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="UnParserExtensionsTests.cs", label="foo.Bar.ShouldBeSameAs(bar)", span="128-128"];
m40_85 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="UnParserExtensionsTests.cs", label="baz.Foo.ShouldBeSameAs(foo)", span="130-130"];
m40_82 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="UnParserExtensionsTests.cs", label="var baz = kernel.Get<ThreeWayPropertyBaz>()", span="126-126"];
m40_84 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="UnParserExtensionsTests.cs", label="bar.Baz.ShouldBeSameAs(baz)", span="129-129"];
m40_86 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", file="UnParserExtensionsTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties.ScopeIsRespected()", span="122-122"];
m40_95 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBaz.ThreeWayConstructorBaz(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo)", file="UnParserExtensionsTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBaz.ThreeWayConstructorBaz(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo)", span="166-166"];
m40_96 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBaz.ThreeWayConstructorBaz(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo)", file="UnParserExtensionsTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.ThreeWayConstructorBaz.ThreeWayConstructorBaz(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo)", span="166-166"];
m40_3 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.CircularDependenciesContext.SetUp()", file="UnParserExtensionsTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.CircularDependenciesContext.SetUp()", span="26-26"];
m40_4 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.CircularDependenciesContext.SetUp()", file="UnParserExtensionsTests.cs", label="this.kernel = new StandardKernel()", span="28-28"];
m40_5 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.CircularDependenciesContext.SetUp()", file="UnParserExtensionsTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.CircularDependenciesContext.SetUp()", span="26-26"];
m40_32 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="UnParserExtensionsTests.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="34-34"];
m40_49 [cluster="Unk.ShouldBeSameAs", file="UnParserExtensionsTests.cs", label="Entry Unk.ShouldBeSameAs", span=""];
m40_50 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", file="UnParserExtensionsTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", span="84-84"];
m40_51 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", file="UnParserExtensionsTests.cs", label="kernel.Bind<ThreeWayConstructorFoo>().ToSelf().InSingletonScope()", span="86-86"];
m40_52 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", file="UnParserExtensionsTests.cs", label="kernel.Bind<ThreeWayConstructorBar>().ToSelf().InSingletonScope()", span="87-87"];
m40_53 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", file="UnParserExtensionsTests.cs", label="kernel.Bind<ThreeWayConstructorBaz>().ToSelf().InSingletonScope()", span="88-88"];
m40_54 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", file="UnParserExtensionsTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors()", span="84-84"];
m40_89 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorBar.TwoWayConstructorBar(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo)", file="UnParserExtensionsTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorBar.TwoWayConstructorBar(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo)", span="141-141"];
m40_90 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorBar.TwoWayConstructorBar(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo)", file="UnParserExtensionsTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorBar.TwoWayConstructorBar(Ninject.Tests.Integration.CircularDependenciesTests.TwoWayConstructorFoo)", span="141-141"];
m40_37 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="UnParserExtensionsTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", span="65-65"];
m40_38 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="UnParserExtensionsTests.cs", label="Assert.DoesNotThrow(() => kernel.Get<TwoWayPropertyFoo>())", span="67-67"];
m40_39 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", file="UnParserExtensionsTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties.DoesNotThrowException()", span="65-65"];
m40_62 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="UnParserExtensionsTests.cs", label="Entry Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", span="99-99"];
m40_63 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", color=red, community=0, file="UnParserExtensionsTests.cs", label="1: Assert.Throws<ActivationException>(() => kernel.Get<ThreeWayConstructorFoo>())", span="101-101"];
m40_64 [cluster="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", file="UnParserExtensionsTests.cs", label="Exit Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors.ThrowsActivationExceptionWhenHookIsResolved()", span="99-99"];
m40_97 [file="UnParserExtensionsTests.cs", label="Ninject.Tests.Integration.CircularDependenciesTests.CircularDependenciesContext", span=""];
m40_98 [file="UnParserExtensionsTests.cs", label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", span=""];
m40_99 [file="UnParserExtensionsTests.cs", label=request, span=""];
m40_100 [file="UnParserExtensionsTests.cs", label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties", span=""];
m40_101 [file="UnParserExtensionsTests.cs", label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", span=""];
m40_102 [file="UnParserExtensionsTests.cs", label=request, span=""];
m40_103 [file="UnParserExtensionsTests.cs", label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", span=""];
n41 -> n1  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
n41 -> n5  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
n41 -> n6  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
n41 -> n7  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
n41 -> n8  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
n41 -> n12  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
n41 -> n13  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
n41 -> n18  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
n41 -> n19  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
n41 -> n22  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
n41 -> n26  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
n41 -> n29  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
n41 -> n30  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
n41 -> n31  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
n41 -> n32  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n2 -> n0  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n10  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n8 -> n10  [key=2, style=dotted];
n9 -> n4  [color=blue, key=0, style=bold];
n11 -> n12  [key=0, style=solid];
n11 -> n13  [color=darkseagreen4, key=1, label=object, style=dashed];
n12 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=2, style=dotted];
n13 -> n16  [key=2, style=dotted];
n14 -> n11  [color=blue, key=0, style=bold];
n17 -> n18  [key=0, style=solid];
n17 -> n19  [color=darkseagreen4, key=1, label=object, style=dashed];
n18 -> n19  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n19 -> n15  [key=2, style=dotted];
n19 -> n16  [key=2, style=dotted];
n20 -> n17  [color=blue, key=0, style=bold];
n21 -> n22  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n22 -> n24  [key=2, style=dotted];
n23 -> n21  [color=blue, key=0, style=bold];
n25 -> n26  [key=0, style=solid];
n26 -> n27  [key=0, style=solid];
n26 -> n24  [key=2, style=dotted];
n27 -> n25  [color=blue, key=0, style=bold];
n28 -> n29  [key=0, style=solid];
n29 -> n30  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n34  [key=2, style=dotted];
n31 -> n32  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n32 -> n34  [key=2, style=dotted];
n33 -> n28  [color=blue, key=0, style=bold];
n35 -> n36  [key=0, style=solid];
n35 -> n37  [key=2, style=dotted];
n35 -> n38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n36 -> n34  [color=blue, key=0, style=bold];
n38 -> n39  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n40 -> n38  [color=blue, key=0, style=bold];
m0_16 -> m0_17  [key=0, style=solid];
m0_17 -> m0_16  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_14 -> m0_15  [key=0, style=solid];
m0_15 -> m0_14  [color=blue, key=0, style=bold];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_4  [color=blue, key=0, style=bold];
m0_10 -> m0_11  [key=0, style=solid];
m0_11 -> m0_10  [color=blue, key=0, style=bold];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_6  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_8  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_2  [color=blue, key=0, style=bold];
m0_12 -> m0_13  [key=0, style=solid];
m0_13 -> m0_12  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_5  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=2, style=dotted];
m4_1 -> m4_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_11 -> m4_12  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_7  [key=2, style=dotted];
m4_4 -> m4_5  [key=0, style=solid];
m4_6 -> m4_4  [color=blue, key=0, style=bold];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_7  [key=2, style=dotted];
m4_13 -> m4_11  [color=blue, key=0, style=bold];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_12  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_3  [key=2, style=dotted];
m4_9 -> m4_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_10 -> m4_8  [color=blue, key=0, style=bold];
m4_14 -> m4_5  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m4_15 -> m4_5  [color=darkseagreen4, key=1, label="Ninject.Activation.InstanceReference", style=dashed];
m4_16 -> m4_12  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m4_17 -> m4_12  [color=darkseagreen4, key=1, label="Ninject.Activation.InstanceReference", style=dashed];
m11_4 -> m11_5  [key=0, style=solid];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_8  [key=2, style=dotted];
m11_5 -> m11_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_9  [key=2, style=dotted];
m11_6 -> m11_10  [key=2, style=dotted];
m11_7 -> m11_4  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_2  [color=darkseagreen4, key=1, label="Ninject.Modules.IAssemblyNameRetriever", style=dashed];
m11_1 -> m11_2  [key=0, style=solid];
m11_2 -> m11_3  [key=0, style=solid];
m11_3 -> m11_0  [color=blue, key=0, style=bold];
m11_11 -> m11_12  [key=0, style=solid];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_14  [key=2, style=dotted];
m11_13 -> m11_11  [color=blue, key=0, style=bold];
m11_15 -> m11_1  [color=darkseagreen4, key=1, label="Ninject.Modules.CompiledModuleLoaderPlugin", style=dashed];
m11_15 -> m11_2  [color=darkseagreen4, key=1, label="Ninject.Modules.CompiledModuleLoaderPlugin", style=dashed];
m11_15 -> m11_5  [color=darkseagreen4, key=1, label="Ninject.Modules.CompiledModuleLoaderPlugin", style=dashed];
m11_15 -> m11_6  [color=darkseagreen4, key=1, label="Ninject.Modules.CompiledModuleLoaderPlugin", style=dashed];
m18_134 -> m18_135  [key=0, style=solid];
m18_134 -> m18_137  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_135 -> m18_136  [key=0, style=solid];
m18_135 -> m18_20  [key=2, style=dotted];
m18_137 -> m18_138  [key=0, style=solid];
m18_137 -> m18_139  [key=2, style=dotted];
m18_136 -> m18_137  [key=0, style=solid];
m18_136 -> m18_35  [key=2, style=dotted];
m18_138 -> m18_134  [color=blue, key=0, style=bold];
m18_65 -> m18_66  [key=0, style=solid];
m18_66 -> m18_67  [key=0, style=solid];
m18_66 -> m18_68  [key=2, style=dotted];
m18_67 -> m18_65  [color=blue, key=0, style=bold];
m18_145 -> m18_240  [key=0, style=solid];
m18_145 -> m18_243  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m18_240 -> m18_241  [key=0, style=solid];
m18_240 -> m18_243  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
m18_241 -> m18_145  [color=blue, key=0, style=bold];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_0  [color=blue, key=0, style=bold];
m18_27 -> m18_28  [key=0, style=solid];
m18_27 -> m18_33  [color=darkseagreen4, key=1, label=bool, style=dashed];
m18_28 -> m18_29  [key=0, style=solid];
m18_28 -> m18_33  [key=0, style=solid];
m18_33 -> m18_34  [key=0, style=solid];
m18_33 -> m18_38  [key=2, style=dotted];
m18_29 -> m18_30  [key=0, style=solid];
m18_29 -> m18_33  [key=0, style=solid];
m18_30 -> m18_31  [key=0, style=solid];
m18_30 -> m18_35  [key=2, style=dotted];
m18_31 -> m18_32  [key=0, style=solid];
m18_31 -> m18_36  [key=2, style=dotted];
m18_32 -> m18_33  [key=0, style=solid];
m18_32 -> m18_37  [key=2, style=dotted];
m18_34 -> m18_27  [color=blue, key=0, style=bold];
m18_95 -> m18_96  [key=0, style=solid];
m18_96 -> m18_97  [key=0, style=solid];
m18_96 -> m18_98  [key=2, style=dotted];
m18_96 -> m18_26  [key=2, style=dotted];
m18_96 -> m18_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_97 -> m18_95  [color=blue, key=0, style=bold];
m18_277 -> m18_278  [key=0, style=solid];
m18_278 -> m18_279  [key=0, style=solid];
m18_279 -> m18_277  [color=blue, key=0, style=bold];
m18_155 -> m18_156  [key=0, style=solid];
m18_155 -> m18_159  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m18_155 -> m18_160  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m18_155 -> m18_162  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m18_155 -> m18_164  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m18_155 -> m18_165  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m18_155 -> m18_170  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m18_155 -> m18_172  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m18_155 -> m18_173  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m18_155 -> m18_176  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m18_155 -> m18_207  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m18_156 -> m18_157  [key=0, style=solid];
m18_156 -> m18_20  [key=2, style=dotted];
m18_159 -> m18_160  [key=0, style=solid];
m18_159 -> m18_161  [key=0, style=solid];
m18_159 -> m18_140  [key=2, style=dotted];
m18_159 -> m18_180  [key=2, style=dotted];
m18_160 -> m18_161  [key=0, style=solid];
m18_160 -> m18_144  [key=2, style=dotted];
m18_160 -> m18_145  [key=2, style=dotted];
m18_160 -> m18_181  [key=2, style=dotted];
m18_160 -> m18_166  [color=darkseagreen4, key=1, label=resolveBindings, style=dashed];
m18_160 -> m18_174  [color=darkseagreen4, key=1, label=resolveBindings, style=dashed];
m18_160 -> m18_175  [color=darkseagreen4, key=1, label=resolveBindings, style=dashed];
m18_160 -> m18_176  [color=darkseagreen4, key=1, label=resolveBindings, style=dashed];
m18_162 -> m18_163  [key=0, style=solid];
m18_162 -> m18_164  [key=0, style=solid];
m18_164 -> m18_177  [key=0, style=solid];
m18_164 -> m18_183  [key=2, style=dotted];
m18_164 -> m18_184  [key=2, style=dotted];
m18_165 -> m18_166  [key=0, style=solid];
m18_165 -> m18_174  [key=0, style=solid];
m18_170 -> m18_171  [key=0, style=solid];
m18_170 -> m18_172  [key=0, style=solid];
m18_172 -> m18_173  [key=0, style=solid];
m18_172 -> m18_130  [key=2, style=dotted];
m18_172 -> m18_189  [key=2, style=dotted];
m18_172 -> m18_172  [color=darkseagreen4, key=1, label=binding, style=dashed];
m18_173 -> m18_177  [key=0, style=solid];
m18_173 -> m18_183  [key=2, style=dotted];
m18_173 -> m18_190  [key=2, style=dotted];
m18_173 -> m18_191  [key=2, style=dotted];
m18_176 -> m18_177  [key=0, style=solid];
m18_176 -> m18_192  [key=2, style=dotted];
m18_176 -> m18_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_157 -> m18_158  [key=0, style=solid];
m18_157 -> m18_178  [key=2, style=dotted];
m18_157 -> m18_166  [color=darkseagreen4, key=1, label=bindingPrecedenceComparer, style=dashed];
m18_157 -> m18_168  [color=darkseagreen4, key=1, label=bindingPrecedenceComparer, style=dashed];
m18_157 -> m18_197  [color=darkseagreen4, key=1, label=bindingPrecedenceComparer, style=dashed];
m18_158 -> m18_159  [key=0, style=solid];
m18_158 -> m18_179  [key=2, style=dotted];
m18_158 -> m18_161  [color=darkseagreen4, key=1, label=resolveBindings, style=dashed];
m18_158 -> m18_166  [color=darkseagreen4, key=1, label=resolveBindings, style=dashed];
m18_158 -> m18_174  [color=darkseagreen4, key=1, label=resolveBindings, style=dashed];
m18_158 -> m18_175  [color=darkseagreen4, key=1, label=resolveBindings, style=dashed];
m18_158 -> m18_176  [color=darkseagreen4, key=1, label=resolveBindings, style=dashed];
m18_166 -> m18_167  [key=0, style=solid];
m18_166 -> m18_185  [key=2, style=dotted];
m18_166 -> m18_82  [key=2, style=dotted];
m18_166 -> m18_166  [color=darkseagreen4, key=1, label=resolveBindings, style=dashed];
m18_166 -> m18_193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_166 -> m18_168  [color=darkseagreen4, key=1, label=resolveBindings, style=dashed];
m18_168 -> m18_169  [key=0, style=solid];
m18_168 -> m18_187  [key=2, style=dotted];
m18_168 -> m18_168  [color=darkseagreen4, key=1, label=resolveBindings, style=dashed];
m18_168 -> m18_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_168 -> m18_172  [color=darkseagreen4, key=1, label=resolveBindings, style=dashed];
m18_168 -> m18_174  [color=darkseagreen4, key=1, label=resolveBindings, style=dashed];
m18_168 -> m18_175  [color=darkseagreen4, key=1, label=resolveBindings, style=dashed];
m18_168 -> m18_176  [color=darkseagreen4, key=1, label=resolveBindings, style=dashed];
m18_161 -> m18_162  [key=0, style=solid];
m18_161 -> m18_165  [key=0, style=solid];
m18_161 -> m18_182  [key=2, style=dotted];
m18_174 -> m18_175  [key=0, style=solid];
m18_174 -> m18_176  [key=0, style=solid];
m18_174 -> m18_146  [key=2, style=dotted];
m18_174 -> m18_200  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_175 -> m18_176  [key=0, style=solid];
m18_175 -> m18_181  [key=2, style=dotted];
m18_175 -> m18_175  [color=darkseagreen4, key=1, label=resolveBindings, style=dashed];
m18_175 -> m18_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_163 -> m18_177  [key=0, style=solid];
m18_163 -> m18_179  [key=2, style=dotted];
m18_167 -> m18_168  [key=0, style=solid];
m18_167 -> m18_186  [key=2, style=dotted];
m18_167 -> m18_197  [color=darkseagreen4, key=1, label=model, style=dashed];
m18_169 -> m18_170  [key=0, style=solid];
m18_169 -> m18_174  [key=0, style=solid];
m18_169 -> m18_188  [key=2, style=dotted];
m18_171 -> m18_177  [key=0, style=solid];
m18_171 -> m18_179  [key=2, style=dotted];
m18_177 -> m18_155  [color=blue, key=0, style=bold];
m18_314 -> m18_315  [key=0, style=solid];
m18_99 -> m18_100  [key=0, style=solid];
m18_100 -> m18_101  [key=0, style=solid];
m18_100 -> m18_102  [key=2, style=dotted];
m18_101 -> m18_99  [color=blue, key=0, style=bold];
m18_152 -> m18_153  [key=0, style=solid];
m18_152 -> m18_145  [key=2, style=dotted];
m18_152 -> m18_154  [key=2, style=dotted];
m18_151 -> m18_152  [key=0, style=solid];
m18_153 -> m18_151  [color=blue, key=0, style=bold];
m18_207 -> m18_208  [key=0, style=solid];
m18_207 -> m18_130  [key=2, style=dotted];
m18_207 -> m18_209  [key=2, style=dotted];
m18_197 -> m18_198  [key=0, style=solid];
m18_197 -> m18_199  [key=2, style=dotted];
m18_193 -> m18_194  [key=0, style=solid];
m18_196 -> m18_197  [key=0, style=solid];
m18_200 -> m18_201  [key=0, style=solid];
m18_203 -> m18_204  [key=0, style=solid];
m18_206 -> m18_207  [key=0, style=solid];
m18_194 -> m18_195  [key=0, style=solid];
m18_195 -> m18_193  [color=blue, key=0, style=bold];
m18_198 -> m18_196  [color=blue, key=0, style=bold];
m18_201 -> m18_202  [key=0, style=solid];
m18_202 -> m18_200  [color=blue, key=0, style=bold];
m18_204 -> m18_205  [key=0, style=solid];
m18_205 -> m18_203  [color=blue, key=0, style=bold];
m18_208 -> m18_206  [color=blue, key=0, style=bold];
m18_230 -> m18_231  [key=0, style=solid];
m18_230 -> m18_232  [key=2, style=dotted];
m18_234 -> m18_235  [key=0, style=solid];
m18_234 -> m18_236  [key=2, style=dotted];
m18_229 -> m18_230  [key=0, style=solid];
m18_233 -> m18_234  [key=0, style=solid];
m18_231 -> m18_229  [color=blue, key=0, style=bold];
m18_235 -> m18_233  [color=blue, key=0, style=bold];
m18_243 -> m18_244  [key=0, style=solid];
m18_243 -> m18_245  [key=2, style=dotted];
m18_243 -> m18_246  [key=2, style=dotted];
m18_242 -> m18_243  [key=0, style=solid];
m18_244 -> m18_242  [color=blue, key=0, style=bold];
m18_268 -> m18_269  [key=0, style=solid];
m18_268 -> m18_270  [key=2, style=dotted];
m18_268 -> m18_82  [key=2, style=dotted];
m18_267 -> m18_268  [key=0, style=solid];
m18_271 -> m18_272  [key=0, style=solid];
m18_274 -> m18_275  [key=0, style=solid];
m18_269 -> m18_267  [color=blue, key=0, style=bold];
m18_272 -> m18_273  [key=0, style=solid];
m18_272 -> m18_146  [key=2, style=dotted];
m18_273 -> m18_271  [color=blue, key=0, style=bold];
m18_275 -> m18_276  [key=0, style=solid];
m18_275 -> m18_275  [color=darkseagreen4, key=1, label=T, style=dashed];
m18_276 -> m18_274  [color=blue, key=0, style=bold];
m18_289 -> m18_290  [key=0, style=solid];
m18_290 -> m18_291  [key=0, style=solid];
m18_290 -> m18_236  [key=2, style=dotted];
m18_291 -> m18_289  [color=blue, key=0, style=bold];
m18_306 -> m18_307  [key=0, style=solid];
m18_309 -> m18_310  [key=0, style=solid];
m18_312 -> m18_313  [key=0, style=solid];
m18_315 -> m18_316  [key=0, style=solid];
m18_305 -> m18_306  [key=0, style=solid];
m18_307 -> m18_305  [color=blue, key=0, style=bold];
m18_308 -> m18_309  [key=0, style=solid];
m18_310 -> m18_308  [color=blue, key=0, style=bold];
m18_311 -> m18_312  [key=0, style=solid];
m18_313 -> m18_311  [color=blue, key=0, style=bold];
m18_316 -> m18_314  [color=blue, key=0, style=bold];
m18_140 -> m18_141  [key=0, style=solid];
m18_140 -> m18_142  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m18_141 -> m18_142  [key=0, style=solid];
m18_141 -> m18_20  [key=2, style=dotted];
m18_142 -> m18_143  [key=0, style=solid];
m18_142 -> m18_144  [key=2, style=dotted];
m18_142 -> m18_145  [key=2, style=dotted];
m18_142 -> m18_146  [key=2, style=dotted];
m18_143 -> m18_140  [color=blue, key=0, style=bold];
m18_6 -> m18_7  [key=0, style=solid];
m18_6 -> m18_8  [color=darkseagreen4, key=1, label="Ninject.INinjectSettings", style=dashed];
m18_6 -> m18_9  [color=darkseagreen4, key=1, label="params Ninject.Modules.INinjectModule[]", style=dashed];
m18_6 -> m18_10  [color=darkseagreen4, key=1, label="Ninject.INinjectSettings", style=dashed];
m18_6 -> m18_11  [color=darkseagreen4, key=1, label="Ninject.Components.IComponentContainer", style=dashed];
m18_6 -> m18_12  [color=darkseagreen4, key=1, label="Ninject.Components.IComponentContainer", style=dashed];
m18_6 -> m18_18  [color=darkseagreen4, key=1, label="params Ninject.Modules.INinjectModule[]", style=dashed];
m18_7 -> m18_8  [key=0, style=solid];
m18_7 -> m18_20  [key=2, style=dotted];
m18_8 -> m18_9  [key=0, style=solid];
m18_8 -> m18_20  [key=2, style=dotted];
m18_9 -> m18_10  [key=0, style=solid];
m18_9 -> m18_20  [key=2, style=dotted];
m18_10 -> m18_11  [key=0, style=solid];
m18_11 -> m18_12  [key=0, style=solid];
m18_12 -> m18_13  [key=0, style=solid];
m18_18 -> m18_19  [key=0, style=solid];
m18_18 -> m18_26  [key=2, style=dotted];
m18_13 -> m18_14  [key=0, style=solid];
m18_13 -> m18_21  [key=2, style=dotted];
m18_14 -> m18_15  [key=0, style=solid];
m18_14 -> m18_22  [key=2, style=dotted];
m18_14 -> m18_23  [key=2, style=dotted];
m18_14 -> m18_24  [key=2, style=dotted];
m18_15 -> m18_16  [key=0, style=solid];
m18_15 -> m18_22  [key=2, style=dotted];
m18_15 -> m18_23  [key=2, style=dotted];
m18_15 -> m18_24  [key=2, style=dotted];
m18_16 -> m18_17  [key=0, style=solid];
m18_16 -> m18_18  [key=0, style=solid];
m18_17 -> m18_18  [key=0, style=solid];
m18_17 -> m18_25  [key=2, style=dotted];
m18_19 -> m18_6  [color=blue, key=0, style=bold];
m18_296 -> m18_297  [key=0, style=solid];
m18_296 -> m18_300  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
m18_297 -> m18_298  [key=0, style=solid];
m18_297 -> m18_299  [key=0, style=solid];
m18_300 -> m18_301  [key=0, style=solid];
m18_300 -> m18_154  [key=2, style=dotted];
m18_300 -> m18_304  [key=2, style=dotted];
m18_300 -> m18_300  [color=darkseagreen4, key=1, label=func, style=dashed];
m18_298 -> m18_302  [key=0, style=solid];
m18_299 -> m18_300  [key=0, style=solid];
m18_299 -> m18_303  [key=2, style=dotted];
m18_299 -> m18_306  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
m18_299 -> m18_309  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
m18_299 -> m18_312  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
m18_299 -> m18_315  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
m18_301 -> m18_302  [key=0, style=solid];
m18_301 -> m18_264  [key=2, style=dotted];
m18_302 -> m18_296  [color=blue, key=0, style=bold];
m18_39 -> m18_40  [key=0, style=solid];
m18_39 -> m18_41  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m18_40 -> m18_41  [key=0, style=solid];
m18_40 -> m18_20  [key=2, style=dotted];
m18_41 -> m18_42  [key=0, style=solid];
m18_41 -> m18_45  [key=2, style=dotted];
m18_42 -> m18_43  [key=0, style=solid];
m18_43 -> m18_44  [key=0, style=solid];
m18_43 -> m18_46  [key=2, style=dotted];
m18_44 -> m18_39  [color=blue, key=0, style=bold];
m18_248 -> m18_249  [key=0, style=solid];
m18_249 -> m18_250  [key=0, style=solid];
m18_250 -> m18_248  [color=blue, key=0, style=bold];
m18_21 -> m18_247  [key=0, style=solid];
m18_247 -> m18_21  [color=blue, key=0, style=bold];
m18_51 -> m18_285  [key=0, style=solid];
m18_285 -> m18_286  [key=0, style=solid];
m18_285 -> m18_228  [key=2, style=dotted];
m18_285 -> m18_289  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_286 -> m18_287  [key=0, style=solid];
m18_287 -> m18_288  [key=0, style=solid];
m18_287 -> m18_46  [key=2, style=dotted];
m18_288 -> m18_51  [color=blue, key=0, style=bold];
m18_103 -> m18_104  [key=0, style=solid];
m18_103 -> m18_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_103 -> m18_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_103 -> m18_109  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_104 -> m18_105  [key=0, style=solid];
m18_104 -> m18_63  [key=2, style=dotted];
m18_106 -> m18_107  [key=0, style=solid];
m18_106 -> m18_108  [key=0, style=solid];
m18_106 -> m18_86  [key=2, style=dotted];
m18_107 -> m18_110  [key=0, style=solid];
m18_107 -> m18_84  [key=2, style=dotted];
m18_107 -> m18_111  [key=2, style=dotted];
m18_109 -> m18_110  [key=0, style=solid];
m18_109 -> m18_113  [key=2, style=dotted];
m18_105 -> m18_106  [key=0, style=solid];
m18_108 -> m18_109  [key=0, style=solid];
m18_108 -> m18_112  [key=2, style=dotted];
m18_110 -> m18_103  [color=blue, key=0, style=bold];
m18_147 -> m18_148  [key=0, style=solid];
m18_147 -> m18_149  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m18_147 -> m18_152  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m18_148 -> m18_149  [key=0, style=solid];
m18_148 -> m18_20  [key=2, style=dotted];
m18_149 -> m18_150  [key=0, style=solid];
m18_149 -> m18_144  [key=2, style=dotted];
m18_149 -> m18_146  [key=2, style=dotted];
m18_149 -> m18_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_150 -> m18_147  [color=blue, key=0, style=bold];
m18_129 -> m18_210  [key=0, style=solid];
m18_129 -> m18_211  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Ninject.Parameters.IParameter>", style=dashed];
m18_129 -> m18_212  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m18_210 -> m18_211  [key=0, style=solid];
m18_210 -> m18_20  [key=2, style=dotted];
m18_211 -> m18_212  [key=0, style=solid];
m18_211 -> m18_20  [key=2, style=dotted];
m18_212 -> m18_213  [key=0, style=solid];
m18_212 -> m18_214  [key=2, style=dotted];
m18_213 -> m18_129  [color=blue, key=0, style=bold];
m18_144 -> m18_219  [key=0, style=solid];
m18_144 -> m18_221  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m18_144 -> m18_223  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m18_144 -> m18_230  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m18_144 -> m18_234  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m18_144 -> m18_224  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m18_219 -> m18_220  [key=0, style=solid];
m18_219 -> m18_20  [key=2, style=dotted];
m18_221 -> m18_222  [key=0, style=solid];
m18_221 -> m18_224  [key=0, style=solid];
m18_221 -> m18_226  [key=2, style=dotted];
m18_223 -> m18_224  [key=0, style=solid];
m18_223 -> m18_98  [key=2, style=dotted];
m18_223 -> m18_228  [key=2, style=dotted];
m18_223 -> m18_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_223 -> m18_233  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_224 -> m18_225  [key=0, style=solid];
m18_220 -> m18_221  [key=0, style=solid];
m18_222 -> m18_223  [key=0, style=solid];
m18_222 -> m18_227  [key=2, style=dotted];
m18_225 -> m18_144  [color=blue, key=0, style=bold];
m18_4 -> m18_5  [key=0, style=solid];
m18_5 -> m18_4  [color=blue, key=0, style=bold];
m18_292 -> m18_293  [key=0, style=solid];
m18_293 -> m18_294  [key=0, style=solid];
m18_293 -> m18_295  [key=2, style=dotted];
m18_294 -> m18_292  [color=blue, key=0, style=bold];
m18_25 -> m18_91  [key=0, style=solid];
m18_25 -> m18_92  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m18_91 -> m18_92  [key=0, style=solid];
m18_91 -> m18_35  [key=2, style=dotted];
m18_92 -> m18_93  [key=0, style=solid];
m18_92 -> m18_94  [key=2, style=dotted];
m18_93 -> m18_25  [color=blue, key=0, style=bold];
m18_178 -> m18_237  [key=0, style=solid];
m18_237 -> m18_238  [key=0, style=solid];
m18_237 -> m18_239  [key=2, style=dotted];
m18_238 -> m18_178  [color=blue, key=0, style=bold];
m18_114 -> m18_115  [key=0, style=solid];
m18_114 -> m18_116  [color=darkseagreen4, key=1, label="params Ninject.Parameters.IParameter[]", style=dashed];
m18_114 -> m18_117  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_114 -> m18_121  [color=darkseagreen4, key=1, label="params Ninject.Parameters.IParameter[]", style=dashed];
m18_114 -> m18_124  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_115 -> m18_116  [key=0, style=solid];
m18_115 -> m18_20  [key=2, style=dotted];
m18_116 -> m18_117  [key=0, style=solid];
m18_116 -> m18_20  [key=2, style=dotted];
m18_117 -> m18_118  [key=0, style=solid];
m18_117 -> m18_127  [key=2, style=dotted];
m18_117 -> m18_120  [color=darkseagreen4, key=1, label=service, style=dashed];
m18_117 -> m18_121  [color=darkseagreen4, key=1, label=service, style=dashed];
m18_117 -> m18_123  [color=darkseagreen4, key=1, label=service, style=dashed];
m18_121 -> m18_122  [key=0, style=solid];
m18_121 -> m18_129  [key=2, style=dotted];
m18_124 -> m18_125  [key=0, style=solid];
m18_124 -> m18_132  [key=2, style=dotted];
m18_118 -> m18_119  [key=0, style=solid];
m18_118 -> m18_35  [key=2, style=dotted];
m18_118 -> m18_123  [color=darkseagreen4, key=1, label=planner, style=dashed];
m18_120 -> m18_121  [key=0, style=solid];
m18_120 -> m18_128  [key=2, style=dotted];
m18_120 -> m18_122  [color=darkseagreen4, key=1, label=binding, style=dashed];
m18_123 -> m18_124  [key=0, style=solid];
m18_123 -> m18_131  [key=2, style=dotted];
m18_119 -> m18_120  [key=0, style=solid];
m18_119 -> m18_35  [key=2, style=dotted];
m18_119 -> m18_125  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m18_125 -> m18_126  [key=0, style=solid];
m18_125 -> m18_133  [key=2, style=dotted];
m18_122 -> m18_123  [key=0, style=solid];
m18_122 -> m18_130  [key=2, style=dotted];
m18_122 -> m18_125  [color=darkseagreen4, key=1, label=context, style=dashed];
m18_126 -> m18_114  [color=blue, key=0, style=bold];
m18_130 -> m18_280  [key=0, style=solid];
m18_130 -> m18_281  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
m18_130 -> m18_282  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m18_280 -> m18_281  [key=0, style=solid];
m18_280 -> m18_20  [key=2, style=dotted];
m18_281 -> m18_282  [key=0, style=solid];
m18_281 -> m18_20  [key=2, style=dotted];
m18_282 -> m18_283  [key=0, style=solid];
m18_282 -> m18_284  [key=2, style=dotted];
m18_282 -> m18_35  [key=2, style=dotted];
m18_283 -> m18_130  [color=blue, key=0, style=bold];
m18_52 -> m18_53  [key=0, style=solid];
m18_52 -> m18_54  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
m18_53 -> m18_54  [key=0, style=solid];
m18_53 -> m18_20  [key=2, style=dotted];
m18_54 -> m18_55  [key=0, style=solid];
m18_54 -> m18_58  [key=2, style=dotted];
m18_55 -> m18_56  [key=0, style=solid];
m18_56 -> m18_57  [key=0, style=solid];
m18_56 -> m18_46  [key=2, style=dotted];
m18_57 -> m18_52  [color=blue, key=0, style=bold];
m18_59 -> m18_60  [key=0, style=solid];
m18_59 -> m18_61  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_60 -> m18_61  [key=0, style=solid];
m18_60 -> m18_63  [key=2, style=dotted];
m18_61 -> m18_62  [key=0, style=solid];
m18_61 -> m18_64  [key=2, style=dotted];
m18_62 -> m18_59  [color=blue, key=0, style=bold];
m18_47 -> m18_48  [key=0, style=solid];
m18_47 -> m18_49  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.IBinding", style=dashed];
m18_48 -> m18_49  [key=0, style=solid];
m18_48 -> m18_20  [key=2, style=dotted];
m18_49 -> m18_50  [key=0, style=solid];
m18_49 -> m18_51  [key=2, style=dotted];
m18_50 -> m18_47  [color=blue, key=0, style=bold];
m18_215 -> m18_216  [key=0, style=solid];
m18_216 -> m18_217  [key=0, style=solid];
m18_216 -> m18_218  [key=2, style=dotted];
m18_217 -> m18_215  [color=blue, key=0, style=bold];
m18_26 -> m18_69  [key=0, style=solid];
m18_26 -> m18_70  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>", style=dashed];
m18_69 -> m18_70  [key=0, style=solid];
m18_69 -> m18_20  [key=2, style=dotted];
m18_70 -> m18_71  [key=0, style=solid];
m18_70 -> m18_82  [key=2, style=dotted];
m18_70 -> m18_70  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>", style=dashed];
m18_70 -> m18_79  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Ninject.Modules.INinjectModule>", style=dashed];
m18_71 -> m18_72  [key=0, style=solid];
m18_71 -> m18_79  [key=0, style=solid];
m18_71 -> m18_75  [color=darkseagreen4, key=1, label=module, style=dashed];
m18_71 -> m18_76  [color=darkseagreen4, key=1, label=module, style=dashed];
m18_71 -> m18_77  [color=darkseagreen4, key=1, label=module, style=dashed];
m18_71 -> m18_78  [color=darkseagreen4, key=1, label=module, style=dashed];
m18_79 -> m18_80  [key=0, style=solid];
m18_79 -> m18_81  [key=0, style=solid];
m18_72 -> m18_73  [key=0, style=solid];
m18_72 -> m18_74  [key=0, style=solid];
m18_72 -> m18_83  [key=2, style=dotted];
m18_75 -> m18_76  [key=0, style=solid];
m18_75 -> m18_77  [key=0, style=solid];
m18_75 -> m18_86  [key=2, style=dotted];
m18_76 -> m18_81  [key=0, style=solid];
m18_76 -> m18_84  [key=2, style=dotted];
m18_76 -> m18_87  [key=2, style=dotted];
m18_77 -> m18_78  [key=0, style=solid];
m18_77 -> m18_88  [key=2, style=dotted];
m18_78 -> m18_71  [key=0, style=solid];
m18_78 -> m18_89  [key=2, style=dotted];
m18_73 -> m18_81  [key=0, style=solid];
m18_73 -> m18_84  [key=2, style=dotted];
m18_73 -> m18_85  [key=2, style=dotted];
m18_74 -> m18_75  [key=0, style=solid];
m18_80 -> m18_79  [key=0, style=solid];
m18_80 -> m18_90  [key=2, style=dotted];
m18_81 -> m18_26  [color=blue, key=0, style=bold];
m18_2 -> m18_3  [key=0, style=solid];
m18_3 -> m18_2  [color=blue, key=0, style=bold];
m18_180 -> m18_251  [key=0, style=solid];
m18_180 -> m18_252  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m18_180 -> m18_255  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m18_180 -> m18_268  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m18_180 -> m18_259  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m18_251 -> m18_252  [key=0, style=solid];
m18_251 -> m18_20  [key=2, style=dotted];
m18_252 -> m18_253  [key=0, style=solid];
m18_252 -> m18_254  [key=0, style=solid];
m18_252 -> m18_248  [key=2, style=dotted];
m18_255 -> m18_256  [key=0, style=solid];
m18_255 -> m18_192  [key=2, style=dotted];
m18_255 -> m18_264  [key=2, style=dotted];
m18_255 -> m18_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_255 -> m18_271  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_255 -> m18_260  [color=darkseagreen4, key=1, label=bindings, style=dashed];
m18_255 -> m18_261  [color=darkseagreen4, key=1, label=bindings, style=dashed];
m18_259 -> m18_260  [key=0, style=solid];
m18_259 -> m18_262  [key=0, style=solid];
m18_259 -> m18_140  [key=2, style=dotted];
m18_253 -> m18_263  [key=0, style=solid];
m18_254 -> m18_255  [key=0, style=solid];
m18_254 -> m18_227  [key=2, style=dotted];
m18_256 -> m18_257  [key=0, style=solid];
m18_256 -> m18_258  [key=0, style=solid];
m18_260 -> m18_261  [key=0, style=solid];
m18_260 -> m18_265  [key=2, style=dotted];
m18_260 -> m18_274  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_261 -> m18_262  [key=0, style=solid];
m18_261 -> m18_266  [key=2, style=dotted];
m18_257 -> m18_263  [key=0, style=solid];
m18_258 -> m18_259  [key=0, style=solid];
m18_262 -> m18_263  [key=0, style=solid];
m18_263 -> m18_180  [color=blue, key=0, style=bold];
m18_317 -> m18_10  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_11  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_12  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_13  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_14  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_15  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_16  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_17  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_18  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_28  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_29  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_30  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_32  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_33  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_41  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_42  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_43  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_49  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_54  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_55  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_56  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_61  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_66  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_75  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_77  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_78  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_91  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_96  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_106  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_108  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_109  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_118  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_119  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_121  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_122  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_136  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_142  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_149  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_152  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_157  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_159  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_160  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_172  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_176  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_207  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_216  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_220  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_221  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_222  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_223  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_230  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_234  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_224  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_252  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_254  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_255  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_268  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_258  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_259  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_261  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_282  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_285  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_290  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_286  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_287  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_317 -> m18_293  [color=darkseagreen4, key=1, label="Ninject.KernelBase", style=dashed];
m18_318 -> m18_152  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m18_319 -> m18_152  [color=darkseagreen4, key=1, label=bool, style=dashed];
m18_320 -> m18_197  [color=darkseagreen4, key=1, label=bindingPrecedenceComparer, style=dashed];
m18_321 -> m18_197  [color=darkseagreen4, key=1, label=model, style=dashed];
m18_322 -> m18_207  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m18_323 -> m18_230  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m18_323 -> m18_234  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m18_324 -> m18_243  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m18_325 -> m18_268  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_2  [key=0, style=solid];
m25_2 -> m25_0  [color=blue, key=0, style=bold];
m25_3 -> m25_1  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.MySimpleType", style=dashed];
m30_22 -> n23  [key=0, style=solid];
m30_22 -> m30_24  [key=2, style=dotted];
m30_34 -> m30_35  [key=0, style=solid];
m30_35 -> m30_36  [key=0, style=solid];
m30_35 -> m30_37  [key=2, style=dotted];
m30_35 -> m30_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_36 -> m30_34  [color=blue, key=0, style=bold];
m30_17 -> m30_18  [key=0, style=solid];
m30_17 -> m30_19  [color=darkseagreen4, key=1, label=object, style=dashed];
m30_18 -> m30_19  [key=0, style=solid];
m30_19 -> m30_20  [key=0, style=solid];
m30_19 -> m30_15  [key=2, style=dotted];
m30_19 -> m30_16  [key=2, style=dotted];
m30_20 -> m30_17  [color=blue, key=0, style=bold];
m30_28 -> m30_29  [key=0, style=solid];
m30_29 -> m30_30  [key=0, style=solid];
m30_30 -> m30_31  [key=0, style=solid];
m30_30 -> m30_34  [key=2, style=dotted];
m30_31 -> m30_32  [key=0, style=solid];
m30_32 -> m30_33  [key=0, style=solid];
m30_32 -> m30_34  [key=2, style=dotted];
m30_33 -> m30_28  [color=blue, key=0, style=bold];
m30_25 -> m30_26  [key=0, style=solid];
m30_26 -> m30_27  [key=0, style=solid];
m30_26 -> m30_24  [key=2, style=dotted];
m30_27 -> m30_25  [color=blue, key=0, style=bold];
m30_11 -> m30_12  [key=0, style=solid];
m30_11 -> m30_13  [color=darkseagreen4, key=1, label=object, style=dashed];
m30_12 -> m30_13  [key=0, style=solid];
m30_13 -> m30_14  [key=0, style=solid];
m30_13 -> m30_15  [key=2, style=dotted];
m30_13 -> m30_16  [key=2, style=dotted];
m30_14 -> m30_11  [color=blue, key=0, style=bold];
m30_0 -> m30_1  [key=0, style=solid];
m30_1 -> m30_2  [key=0, style=solid];
m30_1 -> m30_3  [key=2, style=dotted];
m30_2 -> m30_0  [color=blue, key=0, style=bold];
m30_38 -> m30_39  [key=0, style=solid];
m30_39 -> m30_40  [key=0, style=solid];
m30_40 -> m30_38  [color=blue, key=0, style=bold];
m30_4 -> m30_5  [key=0, style=solid];
m30_5 -> m30_6  [key=0, style=solid];
m30_6 -> m30_7  [key=0, style=solid];
m30_6 -> m30_10  [key=2, style=dotted];
m30_7 -> m30_8  [key=0, style=solid];
m30_8 -> m30_9  [key=0, style=solid];
m30_8 -> m30_10  [key=2, style=dotted];
m30_9 -> m30_4  [color=blue, key=0, style=bold];
m30_41 -> m30_1  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
m30_41 -> m30_5  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
m30_41 -> m30_6  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
m30_41 -> m30_7  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
m30_41 -> m30_8  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
m30_41 -> m30_12  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
m30_41 -> m30_13  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
m30_41 -> m30_18  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
m30_41 -> m30_19  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
m30_41 -> m30_22  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
m30_41 -> m30_26  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
m30_41 -> m30_29  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
m30_41 -> m30_30  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
m30_41 -> m30_31  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
m30_41 -> m30_32  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ActivationCache", style=dashed];
m32_50 -> m32_51  [color=green, key=0, style=solid];
m32_51 -> m32_52  [color=green, key=0, style=solid];
m32_51 -> m32_3  [color=green, key=2, style=dotted];
m32_51 -> m32_19  [color=green, key=2, style=dotted];
m32_51 -> m32_34  [color=green, key=2, style=dotted];
m32_51 -> m32_35  [color=green, key=2, style=dotted];
m32_51 -> m32_36  [color=green, key=2, style=dotted];
m32_51 -> m32_37  [color=green, key=2, style=dotted];
m32_51 -> m32_20  [color=green, key=2, style=dotted];
m32_52 -> m32_53  [key=0, style=solid];
m32_52 -> m32_4  [key=2, style=dotted];
m32_52 -> m32_21  [key=2, style=dotted];
m32_52 -> m32_38  [key=2, style=dotted];
m32_52 -> m32_54  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_52 -> m32_55  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_52 -> m32_56  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_52 -> m32_57  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_52 -> m32_58  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_53 -> m32_54  [key=0, style=solid];
m32_53 -> m32_5  [key=2, style=dotted];
m32_54 -> m32_55  [key=0, style=solid];
m32_54 -> m32_5  [key=2, style=dotted];
m32_55 -> m32_56  [key=0, style=solid];
m32_55 -> m32_5  [key=2, style=dotted];
m32_56 -> m32_57  [key=0, style=solid];
m32_56 -> m32_5  [key=2, style=dotted];
m32_57 -> m32_58  [key=0, style=solid];
m32_57 -> m32_5  [key=2, style=dotted];
m32_58 -> m32_59  [key=0, style=solid];
m32_58 -> m32_5  [key=2, style=dotted];
m32_59 -> m32_50  [color=blue, key=0, style=bold];
m32_22 -> m32_23  [color=green, key=0, style=solid];
m32_23 -> m32_24  [color=green, key=0, style=solid];
m32_23 -> m32_3  [color=green, key=2, style=dotted];
m32_23 -> m32_19  [color=green, key=2, style=dotted];
m32_23 -> m32_34  [color=green, key=2, style=dotted];
m32_23 -> m32_35  [color=green, key=2, style=dotted];
m32_23 -> m32_36  [color=green, key=2, style=dotted];
m32_23 -> m32_37  [color=green, key=2, style=dotted];
m32_23 -> m32_20  [color=green, key=2, style=dotted];
m32_24 -> m32_25  [key=0, style=solid];
m32_24 -> m32_4  [key=2, style=dotted];
m32_24 -> m32_21  [key=2, style=dotted];
m32_24 -> m32_38  [key=2, style=dotted];
m32_24 -> m32_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_24 -> m32_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_24 -> m32_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_24 -> m32_29  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_24 -> m32_30  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_24 -> m32_31  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_24 -> m32_32  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_25 -> m32_26  [key=0, style=solid];
m32_25 -> m32_5  [key=2, style=dotted];
m32_26 -> m32_27  [key=0, style=solid];
m32_26 -> m32_5  [key=2, style=dotted];
m32_27 -> m32_28  [key=0, style=solid];
m32_27 -> m32_5  [key=2, style=dotted];
m32_28 -> m32_29  [key=0, style=solid];
m32_28 -> m32_5  [key=2, style=dotted];
m32_29 -> m32_30  [key=0, style=solid];
m32_29 -> m32_5  [key=2, style=dotted];
m32_30 -> m32_31  [key=0, style=solid];
m32_30 -> m32_5  [key=2, style=dotted];
m32_31 -> m32_32  [key=0, style=solid];
m32_31 -> m32_5  [key=2, style=dotted];
m32_32 -> m32_33  [key=0, style=solid];
m32_32 -> m32_5  [key=2, style=dotted];
m32_33 -> m32_22  [color=blue, key=0, style=bold];
m32_66 -> m32_67  [key=0, style=solid];
m32_67 -> m32_68  [key=0, style=solid];
m32_67 -> m32_65  [key=2, style=dotted];
m32_67 -> m32_17  [key=2, style=dotted];
m32_67 -> m32_69  [color=green, key=1, label=sut, style=dashed];
m32_67 -> m32_70  [color=darkseagreen4, key=1, label=sut, style=dashed];
m32_68 -> m32_69  [color=green, key=0, style=solid];
m32_69 -> m32_70  [color=green, key=0, style=solid];
m32_69 -> m32_34  [color=green, key=2, style=dotted];
m32_69 -> m32_35  [color=green, key=2, style=dotted];
m32_69 -> m32_36  [color=green, key=2, style=dotted];
m32_69 -> m32_37  [color=green, key=2, style=dotted];
m32_70 -> m32_71  [key=0, style=solid];
m32_70 -> m32_4  [key=2, style=dotted];
m32_70 -> m32_77  [key=2, style=dotted];
m32_70 -> m32_72  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_70 -> m32_73  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_70 -> m32_74  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_70 -> m32_75  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_71 -> m32_72  [key=0, style=solid];
m32_71 -> m32_5  [key=2, style=dotted];
m32_72 -> m32_73  [key=0, style=solid];
m32_72 -> m32_5  [key=2, style=dotted];
m32_73 -> m32_74  [key=0, style=solid];
m32_73 -> m32_5  [key=2, style=dotted];
m32_74 -> m32_75  [key=0, style=solid];
m32_74 -> m32_5  [key=2, style=dotted];
m32_75 -> m32_76  [key=0, style=solid];
m32_75 -> m32_5  [key=2, style=dotted];
m32_76 -> m32_66  [color=blue, key=0, style=bold];
m32_78 -> m32_79  [key=0, style=solid];
m32_79 -> m32_80  [key=0, style=solid];
m32_79 -> m32_65  [key=2, style=dotted];
m32_79 -> m32_17  [key=2, style=dotted];
m32_79 -> m32_81  [color=green, key=1, label=sut, style=dashed];
m32_79 -> m32_82  [color=darkseagreen4, key=1, label=sut, style=dashed];
m32_80 -> m32_81  [color=green, key=0, style=solid];
m32_81 -> m32_82  [color=green, key=0, style=solid];
m32_81 -> m32_34  [color=green, key=2, style=dotted];
m32_81 -> m32_35  [color=green, key=2, style=dotted];
m32_81 -> m32_36  [color=green, key=2, style=dotted];
m32_81 -> m32_37  [color=green, key=2, style=dotted];
m32_82 -> m32_83  [key=0, style=solid];
m32_82 -> m32_4  [key=2, style=dotted];
m32_82 -> m32_21  [key=2, style=dotted];
m32_82 -> m32_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_82 -> m32_85  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_82 -> m32_86  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_82 -> m32_87  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_82 -> m32_88  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_83 -> m32_84  [key=0, style=solid];
m32_83 -> m32_5  [key=2, style=dotted];
m32_84 -> m32_85  [key=0, style=solid];
m32_84 -> m32_5  [key=2, style=dotted];
m32_85 -> m32_86  [key=0, style=solid];
m32_85 -> m32_5  [key=2, style=dotted];
m32_86 -> m32_87  [key=0, style=solid];
m32_86 -> m32_5  [key=2, style=dotted];
m32_87 -> m32_88  [key=0, style=solid];
m32_87 -> m32_5  [key=2, style=dotted];
m32_88 -> m32_89  [key=0, style=solid];
m32_88 -> m32_5  [key=2, style=dotted];
m32_89 -> m32_78  [color=blue, key=0, style=bold];
m32_149 -> m32_150  [color=green, key=0, style=solid];
m32_150 -> m32_151  [color=green, key=0, style=solid];
m32_150 -> m32_34  [color=green, key=2, style=dotted];
m32_150 -> m32_35  [color=green, key=2, style=dotted];
m32_150 -> m32_116  [color=green, key=2, style=dotted];
m32_150 -> m32_121  [color=green, key=2, style=dotted];
m32_150 -> m32_118  [color=green, key=2, style=dotted];
m32_151 -> m32_152  [key=0, style=solid];
m32_151 -> m32_163  [key=2, style=dotted];
m32_152 -> m32_153  [key=0, style=solid];
m32_152 -> m32_4  [key=2, style=dotted];
m32_152 -> m32_21  [key=2, style=dotted];
m32_152 -> m32_38  [key=2, style=dotted];
m32_152 -> m32_154  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_152 -> m32_155  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_152 -> m32_156  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_152 -> m32_157  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_152 -> m32_158  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_152 -> m32_159  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_152 -> m32_160  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_152 -> m32_161  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_153 -> m32_154  [key=0, style=solid];
m32_153 -> m32_164  [key=2, style=dotted];
m32_153 -> m32_165  [key=2, style=dotted];
m32_154 -> m32_155  [key=0, style=solid];
m32_154 -> m32_164  [key=2, style=dotted];
m32_154 -> m32_165  [key=2, style=dotted];
m32_155 -> m32_156  [key=0, style=solid];
m32_155 -> m32_5  [key=2, style=dotted];
m32_156 -> m32_157  [key=0, style=solid];
m32_156 -> m32_5  [key=2, style=dotted];
m32_157 -> m32_158  [key=0, style=solid];
m32_157 -> m32_5  [key=2, style=dotted];
m32_158 -> m32_159  [key=0, style=solid];
m32_158 -> m32_5  [key=2, style=dotted];
m32_159 -> m32_160  [key=0, style=solid];
m32_159 -> m32_5  [key=2, style=dotted];
m32_160 -> m32_161  [key=0, style=solid];
m32_160 -> m32_5  [key=2, style=dotted];
m32_161 -> m32_162  [key=0, style=solid];
m32_161 -> m32_5  [key=2, style=dotted];
m32_162 -> m32_149  [color=blue, key=0, style=bold];
m32_193 -> m32_194  [color=green, key=0, style=solid];
m32_194 -> m32_195  [color=green, key=0, style=solid];
m32_194 -> m32_3  [color=green, key=2, style=dotted];
m32_194 -> m32_19  [color=green, key=2, style=dotted];
m32_194 -> m32_34  [color=green, key=2, style=dotted];
m32_194 -> m32_35  [color=green, key=2, style=dotted];
m32_194 -> m32_36  [color=green, key=2, style=dotted];
m32_194 -> m32_37  [color=green, key=2, style=dotted];
m32_194 -> m32_20  [color=green, key=2, style=dotted];
m32_195 -> m32_196  [key=0, style=solid];
m32_195 -> m32_4  [key=2, style=dotted];
m32_195 -> m32_21  [key=2, style=dotted];
m32_195 -> m32_38  [key=2, style=dotted];
m32_195 -> m32_197  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_195 -> m32_198  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_195 -> m32_199  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_195 -> m32_200  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_195 -> m32_201  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_195 -> m32_202  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_195 -> m32_203  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_195 -> m32_204  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_196 -> m32_197  [key=0, style=solid];
m32_196 -> m32_5  [key=2, style=dotted];
m32_197 -> m32_198  [key=0, style=solid];
m32_197 -> m32_5  [key=2, style=dotted];
m32_198 -> m32_199  [key=0, style=solid];
m32_198 -> m32_5  [key=2, style=dotted];
m32_199 -> m32_200  [key=0, style=solid];
m32_199 -> m32_5  [key=2, style=dotted];
m32_200 -> m32_201  [key=0, style=solid];
m32_200 -> m32_5  [key=2, style=dotted];
m32_201 -> m32_202  [key=0, style=solid];
m32_201 -> m32_5  [key=2, style=dotted];
m32_202 -> m32_203  [key=0, style=solid];
m32_202 -> m32_5  [key=2, style=dotted];
m32_203 -> m32_204  [key=0, style=solid];
m32_203 -> m32_5  [key=2, style=dotted];
m32_204 -> m32_205  [key=0, style=solid];
m32_204 -> m32_5  [key=2, style=dotted];
m32_205 -> m32_193  [color=blue, key=0, style=bold];
m32_39 -> m32_40  [color=green, key=0, style=solid];
m32_40 -> m32_41  [color=green, key=0, style=solid];
m32_40 -> m32_3  [color=green, key=2, style=dotted];
m32_40 -> m32_19  [color=green, key=2, style=dotted];
m32_40 -> m32_34  [color=green, key=2, style=dotted];
m32_40 -> m32_35  [color=green, key=2, style=dotted];
m32_40 -> m32_36  [color=green, key=2, style=dotted];
m32_40 -> m32_37  [color=green, key=2, style=dotted];
m32_40 -> m32_20  [color=green, key=2, style=dotted];
m32_41 -> m32_42  [key=0, style=solid];
m32_41 -> m32_4  [key=2, style=dotted];
m32_41 -> m32_21  [key=2, style=dotted];
m32_41 -> m32_38  [key=2, style=dotted];
m32_41 -> m32_43  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_41 -> m32_44  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_41 -> m32_45  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_41 -> m32_46  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_41 -> m32_47  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_41 -> m32_48  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_42 -> m32_43  [key=0, style=solid];
m32_42 -> m32_5  [key=2, style=dotted];
m32_43 -> m32_44  [key=0, style=solid];
m32_43 -> m32_5  [key=2, style=dotted];
m32_44 -> m32_45  [key=0, style=solid];
m32_44 -> m32_5  [key=2, style=dotted];
m32_45 -> m32_46  [key=0, style=solid];
m32_45 -> m32_5  [key=2, style=dotted];
m32_46 -> m32_47  [key=0, style=solid];
m32_46 -> m32_5  [key=2, style=dotted];
m32_47 -> m32_48  [key=0, style=solid];
m32_47 -> m32_5  [key=2, style=dotted];
m32_48 -> m32_49  [key=0, style=solid];
m32_48 -> m32_5  [key=2, style=dotted];
m32_49 -> m32_39  [color=blue, key=0, style=bold];
m32_90 -> m32_91  [key=0, style=solid];
m32_91 -> m32_92  [key=0, style=solid];
m32_91 -> m32_65  [key=2, style=dotted];
m32_91 -> m32_93  [color=green, key=1, label=sut, style=dashed];
m32_91 -> m32_94  [color=darkseagreen4, key=1, label=sut, style=dashed];
m32_92 -> m32_93  [color=green, key=0, style=solid];
m32_93 -> m32_94  [color=green, key=0, style=solid];
m32_93 -> m32_19  [color=green, key=2, style=dotted];
m32_93 -> m32_34  [color=green, key=2, style=dotted];
m32_93 -> m32_35  [color=green, key=2, style=dotted];
m32_93 -> m32_36  [color=green, key=2, style=dotted];
m32_93 -> m32_37  [color=green, key=2, style=dotted];
m32_93 -> m32_20  [color=green, key=2, style=dotted];
m32_94 -> m32_95  [key=0, style=solid];
m32_94 -> m32_4  [key=2, style=dotted];
m32_94 -> m32_21  [key=2, style=dotted];
m32_94 -> m32_96  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_94 -> m32_97  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_94 -> m32_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_94 -> m32_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_94 -> m32_100  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_95 -> m32_96  [key=0, style=solid];
m32_95 -> m32_5  [key=2, style=dotted];
m32_96 -> m32_97  [key=0, style=solid];
m32_96 -> m32_5  [key=2, style=dotted];
m32_97 -> m32_98  [key=0, style=solid];
m32_97 -> m32_5  [key=2, style=dotted];
m32_98 -> m32_99  [key=0, style=solid];
m32_98 -> m32_5  [key=2, style=dotted];
m32_99 -> m32_100  [key=0, style=solid];
m32_99 -> m32_5  [key=2, style=dotted];
m32_100 -> m32_101  [key=0, style=solid];
m32_100 -> m32_5  [key=2, style=dotted];
m32_101 -> m32_90  [color=blue, key=0, style=bold];
m32_178 -> m32_179  [color=green, key=0, style=solid];
m32_179 -> m32_180  [color=green, key=0, style=solid];
m32_179 -> m32_36  [color=green, key=2, style=dotted];
m32_179 -> m32_191  [color=green, key=2, style=dotted];
m32_180 -> m32_181  [key=0, style=solid];
m32_180 -> m32_34  [key=2, style=dotted];
m32_180 -> m32_192  [key=2, style=dotted];
m32_180 -> m32_125  [key=2, style=dotted];
m32_181 -> m32_182  [key=0, style=solid];
m32_181 -> m32_163  [key=2, style=dotted];
m32_182 -> m32_183  [key=0, style=solid];
m32_182 -> m32_4  [key=2, style=dotted];
m32_182 -> m32_21  [key=2, style=dotted];
m32_182 -> m32_38  [key=2, style=dotted];
m32_182 -> m32_184  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_182 -> m32_185  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_182 -> m32_186  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_182 -> m32_187  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_182 -> m32_188  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_182 -> m32_189  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_183 -> m32_184  [key=0, style=solid];
m32_183 -> m32_164  [key=2, style=dotted];
m32_183 -> m32_165  [key=2, style=dotted];
m32_184 -> m32_185  [key=0, style=solid];
m32_184 -> m32_164  [key=2, style=dotted];
m32_184 -> m32_165  [key=2, style=dotted];
m32_185 -> m32_186  [key=0, style=solid];
m32_185 -> m32_5  [key=2, style=dotted];
m32_186 -> m32_187  [key=0, style=solid];
m32_186 -> m32_5  [key=2, style=dotted];
m32_187 -> m32_188  [key=0, style=solid];
m32_187 -> m32_5  [key=2, style=dotted];
m32_188 -> m32_189  [key=0, style=solid];
m32_188 -> m32_5  [key=2, style=dotted];
m32_189 -> m32_190  [key=0, style=solid];
m32_189 -> m32_5  [key=2, style=dotted];
m32_190 -> m32_178  [color=blue, key=0, style=bold];
m32_0 -> m32_1  [key=0, style=solid];
m32_1 -> m32_2  [key=0, style=solid];
m32_1 -> m32_3  [key=2, style=dotted];
m32_1 -> m32_4  [key=2, style=dotted];
m32_1 -> m32_5  [key=2, style=dotted];
m32_2 -> m32_0  [color=blue, key=0, style=bold];
m32_60 -> m32_61  [color=green, key=0, style=solid];
m32_61 -> m32_62  [color=green, key=0, style=solid];
m32_61 -> m32_65  [color=green, key=2, style=dotted];
m32_61 -> m32_34  [color=green, key=2, style=dotted];
m32_61 -> m32_35  [color=green, key=2, style=dotted];
m32_61 -> m32_36  [color=green, key=2, style=dotted];
m32_61 -> m32_37  [color=green, key=2, style=dotted];
m32_62 -> m32_63  [key=0, style=solid];
m32_62 -> m32_4  [key=2, style=dotted];
m32_62 -> m32_21  [key=2, style=dotted];
m32_62 -> m32_38  [key=2, style=dotted];
m32_63 -> m32_64  [key=0, style=solid];
m32_63 -> m32_5  [key=2, style=dotted];
m32_64 -> m32_60  [color=blue, key=0, style=bold];
m32_206 -> m32_207  [color=green, key=0, style=solid];
m32_207 -> m32_208  [color=green, key=0, style=solid];
m32_207 -> m32_34  [color=green, key=2, style=dotted];
m32_207 -> m32_35  [color=green, key=2, style=dotted];
m32_207 -> m32_36  [color=green, key=2, style=dotted];
m32_208 -> m32_209  [key=0, style=solid];
m32_208 -> m32_218  [key=2, style=dotted];
m32_209 -> m32_210  [key=0, style=solid];
m32_209 -> m32_21  [key=2, style=dotted];
m32_209 -> m32_211  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_209 -> m32_212  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_209 -> m32_213  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_209 -> m32_214  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_209 -> m32_215  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_209 -> m32_216  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_210 -> m32_211  [key=0, style=solid];
m32_210 -> m32_5  [key=2, style=dotted];
m32_211 -> m32_212  [key=0, style=solid];
m32_211 -> m32_5  [key=2, style=dotted];
m32_212 -> m32_213  [key=0, style=solid];
m32_212 -> m32_5  [key=2, style=dotted];
m32_213 -> m32_214  [key=0, style=solid];
m32_213 -> m32_5  [key=2, style=dotted];
m32_214 -> m32_215  [key=0, style=solid];
m32_214 -> m32_5  [key=2, style=dotted];
m32_215 -> m32_216  [key=0, style=solid];
m32_215 -> m32_5  [key=2, style=dotted];
m32_216 -> m32_217  [key=0, style=solid];
m32_216 -> m32_5  [key=2, style=dotted];
m32_217 -> m32_206  [color=blue, key=0, style=bold];
m32_146 -> m32_147  [key=0, style=solid];
m32_128 -> m32_129  [key=0, style=solid];
m32_128 -> m32_131  [key=0, style=solid];
m32_128 -> m32_133  [key=0, style=solid];
m32_128 -> m32_135  [key=0, style=solid];
m32_128 -> m32_137  [key=0, style=solid];
m32_128 -> m32_139  [key=0, style=solid];
m32_128 -> m32_141  [key=0, style=solid];
m32_128 -> m32_143  [key=0, style=solid];
m32_130 -> m32_144  [key=0, style=solid];
m32_132 -> m32_144  [key=0, style=solid];
m32_134 -> m32_144  [key=0, style=solid];
m32_136 -> m32_144  [key=0, style=solid];
m32_138 -> m32_144  [key=0, style=solid];
m32_142 -> m32_144  [key=0, style=solid];
m32_127 -> m32_128  [key=0, style=solid];
m32_127 -> m32_130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_127 -> m32_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_127 -> m32_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_127 -> m32_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_127 -> m32_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_127 -> m32_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_129 -> m32_130  [key=0, style=solid];
m32_131 -> m32_132  [key=0, style=solid];
m32_133 -> m32_134  [key=0, style=solid];
m32_135 -> m32_136  [key=0, style=solid];
m32_137 -> m32_138  [key=0, style=solid];
m32_139 -> m32_140  [key=0, style=solid];
m32_141 -> m32_142  [key=0, style=solid];
m32_143 -> m32_144  [key=0, style=solid];
m32_143 -> m32_145  [key=2, style=dotted];
m32_140 -> m32_144  [key=0, style=solid];
m32_144 -> m32_127  [color=blue, key=0, style=bold];
m32_147 -> m32_148  [key=0, style=solid];
m32_148 -> m32_146  [color=blue, key=0, style=bold];
m32_244 -> m32_245  [key=0, style=solid];
m32_245 -> m32_246  [color=green, key=0, style=solid];
m32_245 -> m32_256  [key=2, style=dotted];
m32_245 -> m32_257  [key=2, style=dotted];
m32_245 -> m32_247  [color=darkseagreen4, key=1, label=handlers, style=dashed];
m32_245 -> m32_249  [color=darkseagreen4, key=1, label=handlers, style=dashed];
m32_246 -> m32_247  [color=green, key=0, style=solid];
m32_246 -> m32_34  [color=green, key=2, style=dotted];
m32_246 -> m32_258  [color=green, key=2, style=dotted];
m32_246 -> m32_116  [color=green, key=2, style=dotted];
m32_246 -> m32_248  [color=green, key=1, label=fakeResult, style=dashed];
m32_247 -> m32_248  [key=0, style=solid];
m32_247 -> m32_259  [key=2, style=dotted];
m32_249 -> m32_250  [key=0, style=solid];
m32_249 -> m32_259  [key=2, style=dotted];
m32_248 -> m32_249  [key=0, style=solid];
m32_248 -> m32_163  [key=2, style=dotted];
m32_248 -> m32_250  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m32_250 -> m32_251  [key=0, style=solid];
m32_250 -> m32_4  [key=2, style=dotted];
m32_251 -> m32_252  [key=0, style=solid];
m32_251 -> m32_21  [key=2, style=dotted];
m32_251 -> m32_38  [key=2, style=dotted];
m32_251 -> m32_253  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_251 -> m32_254  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_252 -> m32_253  [key=0, style=solid];
m32_252 -> m32_164  [key=2, style=dotted];
m32_252 -> m32_260  [key=2, style=dotted];
m32_253 -> m32_254  [key=0, style=solid];
m32_253 -> m32_164  [key=2, style=dotted];
m32_253 -> m32_260  [key=2, style=dotted];
m32_254 -> m32_255  [key=0, style=solid];
m32_254 -> m32_164  [key=2, style=dotted];
m32_254 -> m32_260  [key=2, style=dotted];
m32_255 -> m32_244  [color=blue, key=0, style=bold];
m32_219 -> m32_220  [color=green, key=0, style=solid];
m32_220 -> m32_221  [color=green, key=0, style=solid];
m32_220 -> m32_34  [color=green, key=2, style=dotted];
m32_220 -> m32_35  [color=green, key=2, style=dotted];
m32_220 -> m32_116  [color=green, key=2, style=dotted];
m32_221 -> m32_222  [key=0, style=solid];
m32_221 -> m32_163  [key=2, style=dotted];
m32_222 -> m32_223  [key=0, style=solid];
m32_222 -> m32_4  [key=2, style=dotted];
m32_223 -> m32_224  [key=0, style=solid];
m32_223 -> m32_21  [key=2, style=dotted];
m32_223 -> m32_38  [key=2, style=dotted];
m32_223 -> m32_225  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_226  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_227  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_228  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_229  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_230  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_231  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_232  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_233  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_234  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_235  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_236  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_237  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_238  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_239  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_240  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_241  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_223 -> m32_242  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_224 -> m32_225  [key=0, style=solid];
m32_224 -> m32_164  [key=2, style=dotted];
m32_224 -> m32_165  [key=2, style=dotted];
m32_225 -> m32_226  [key=0, style=solid];
m32_225 -> m32_164  [key=2, style=dotted];
m32_225 -> m32_165  [key=2, style=dotted];
m32_226 -> m32_227  [key=0, style=solid];
m32_226 -> m32_5  [key=2, style=dotted];
m32_227 -> m32_228  [key=0, style=solid];
m32_227 -> m32_5  [key=2, style=dotted];
m32_228 -> m32_229  [key=0, style=solid];
m32_228 -> m32_5  [key=2, style=dotted];
m32_229 -> m32_230  [key=0, style=solid];
m32_229 -> m32_5  [key=2, style=dotted];
m32_230 -> m32_231  [key=0, style=solid];
m32_230 -> m32_5  [key=2, style=dotted];
m32_231 -> m32_232  [key=0, style=solid];
m32_231 -> m32_5  [key=2, style=dotted];
m32_232 -> m32_233  [key=0, style=solid];
m32_232 -> m32_5  [key=2, style=dotted];
m32_233 -> m32_234  [key=0, style=solid];
m32_233 -> m32_5  [key=2, style=dotted];
m32_234 -> m32_235  [key=0, style=solid];
m32_234 -> m32_5  [key=2, style=dotted];
m32_235 -> m32_236  [key=0, style=solid];
m32_235 -> m32_5  [key=2, style=dotted];
m32_236 -> m32_237  [key=0, style=solid];
m32_236 -> m32_5  [key=2, style=dotted];
m32_237 -> m32_238  [key=0, style=solid];
m32_237 -> m32_5  [key=2, style=dotted];
m32_238 -> m32_239  [key=0, style=solid];
m32_238 -> m32_5  [key=2, style=dotted];
m32_239 -> m32_240  [key=0, style=solid];
m32_239 -> m32_5  [key=2, style=dotted];
m32_240 -> m32_241  [key=0, style=solid];
m32_240 -> m32_5  [key=2, style=dotted];
m32_241 -> m32_242  [key=0, style=solid];
m32_241 -> m32_5  [key=2, style=dotted];
m32_242 -> m32_243  [key=0, style=solid];
m32_242 -> m32_5  [key=2, style=dotted];
m32_243 -> m32_219  [color=blue, key=0, style=bold];
m32_6 -> m32_7  [key=0, style=solid];
m32_7 -> m32_8  [key=0, style=solid];
m32_7 -> m32_16  [key=2, style=dotted];
m32_7 -> m32_17  [key=2, style=dotted];
m32_7 -> m32_18  [key=2, style=dotted];
m32_7 -> m32_19  [key=2, style=dotted];
m32_7 -> m32_20  [key=2, style=dotted];
m32_8 -> m32_9  [key=0, style=solid];
m32_8 -> m32_4  [key=2, style=dotted];
m32_8 -> m32_21  [key=2, style=dotted];
m32_8 -> m32_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_8 -> m32_11  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_8 -> m32_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_8 -> m32_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_8 -> m32_14  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_9 -> m32_10  [key=0, style=solid];
m32_9 -> m32_5  [key=2, style=dotted];
m32_10 -> m32_11  [key=0, style=solid];
m32_10 -> m32_5  [key=2, style=dotted];
m32_11 -> m32_12  [key=0, style=solid];
m32_11 -> m32_5  [key=2, style=dotted];
m32_12 -> m32_13  [key=0, style=solid];
m32_12 -> m32_5  [key=2, style=dotted];
m32_13 -> m32_14  [key=0, style=solid];
m32_13 -> m32_5  [key=2, style=dotted];
m32_14 -> m32_15  [key=0, style=solid];
m32_14 -> m32_5  [key=2, style=dotted];
m32_15 -> m32_6  [color=blue, key=0, style=bold];
m32_102 -> m32_103  [key=0, style=solid];
m32_103 -> m32_104  [key=0, style=solid];
m32_103 -> m32_34  [key=2, style=dotted];
m32_103 -> m32_35  [key=2, style=dotted];
m32_103 -> m32_116  [key=2, style=dotted];
m32_103 -> m32_117  [key=2, style=dotted];
m32_103 -> m32_118  [key=2, style=dotted];
m32_103 -> m32_119  [key=2, style=dotted];
m32_103 -> m32_120  [key=2, style=dotted];
m32_103 -> m32_121  [key=2, style=dotted];
m32_103 -> m32_122  [key=2, style=dotted];
m32_103 -> m32_123  [key=2, style=dotted];
m32_103 -> m32_124  [key=2, style=dotted];
m32_103 -> m32_125  [key=2, style=dotted];
m32_103 -> m32_106  [color=darkseagreen4, key=1, label=fakeResult, style=dashed];
m32_104 -> m32_105  [key=0, style=solid];
m32_104 -> m32_128  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_104 -> m32_130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_104 -> m32_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_104 -> m32_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_104 -> m32_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_104 -> m32_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_104 -> m32_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m32_104 -> m32_106  [color=darkseagreen4, key=1, label=fakeRenderer, style=dashed];
m32_104 -> m32_104  [color=darkorchid, key=3, label="Local variable System.Func<CommandLine.Error, string> fakeRenderer", style=bold];
m32_106 -> m32_107  [key=0, style=solid];
m32_106 -> m32_126  [key=2, style=dotted];
m32_105 -> m32_106  [key=0, style=solid];
m32_105 -> m32_105  [color=darkorchid, key=3, label="Local variable System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string> fakeMutExclRenderer", style=bold];
m32_107 -> m32_108  [key=0, style=solid];
m32_107 -> m32_21  [key=2, style=dotted];
m32_107 -> m32_109  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_107 -> m32_110  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_107 -> m32_111  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_107 -> m32_112  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_107 -> m32_113  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_107 -> m32_114  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_108 -> m32_109  [key=0, style=solid];
m32_108 -> m32_5  [key=2, style=dotted];
m32_109 -> m32_110  [key=0, style=solid];
m32_109 -> m32_5  [key=2, style=dotted];
m32_110 -> m32_111  [key=0, style=solid];
m32_110 -> m32_5  [key=2, style=dotted];
m32_111 -> m32_112  [key=0, style=solid];
m32_111 -> m32_5  [key=2, style=dotted];
m32_112 -> m32_113  [key=0, style=solid];
m32_112 -> m32_5  [key=2, style=dotted];
m32_113 -> m32_114  [key=0, style=solid];
m32_113 -> m32_5  [key=2, style=dotted];
m32_114 -> m32_115  [key=0, style=solid];
m32_114 -> m32_5  [key=2, style=dotted];
m32_115 -> m32_102  [color=blue, key=0, style=bold];
m32_166 -> m32_167  [color=green, key=0, style=solid];
m32_167 -> m32_168  [color=green, key=0, style=solid];
m32_167 -> m32_34  [color=green, key=2, style=dotted];
m32_167 -> m32_35  [color=green, key=2, style=dotted];
m32_167 -> m32_125  [color=green, key=2, style=dotted];
m32_168 -> m32_169  [key=0, style=solid];
m32_168 -> m32_163  [key=2, style=dotted];
m32_169 -> m32_170  [key=0, style=solid];
m32_169 -> m32_4  [key=2, style=dotted];
m32_169 -> m32_21  [key=2, style=dotted];
m32_169 -> m32_38  [key=2, style=dotted];
m32_169 -> m32_171  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_169 -> m32_172  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_169 -> m32_173  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_169 -> m32_174  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_169 -> m32_175  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_169 -> m32_176  [color=darkseagreen4, key=1, label=lines, style=dashed];
m32_170 -> m32_171  [key=0, style=solid];
m32_170 -> m32_164  [key=2, style=dotted];
m32_170 -> m32_165  [key=2, style=dotted];
m32_171 -> m32_172  [key=0, style=solid];
m32_171 -> m32_164  [key=2, style=dotted];
m32_171 -> m32_165  [key=2, style=dotted];
m32_172 -> m32_173  [key=0, style=solid];
m32_172 -> m32_5  [key=2, style=dotted];
m32_173 -> m32_174  [key=0, style=solid];
m32_173 -> m32_5  [key=2, style=dotted];
m32_174 -> m32_175  [key=0, style=solid];
m32_174 -> m32_5  [key=2, style=dotted];
m32_175 -> m32_176  [key=0, style=solid];
m32_175 -> m32_5  [key=2, style=dotted];
m32_176 -> m32_177  [key=0, style=solid];
m32_176 -> m32_5  [key=2, style=dotted];
m32_177 -> m32_166  [color=blue, key=0, style=bold];
m33_29 -> m33_30  [key=0, style=solid];
m33_30 -> m33_31  [key=0, style=solid];
m33_31 -> m33_32  [key=0, style=solid];
m33_31 -> m33_33  [key=0, style=solid];
m33_32 -> m33_37  [key=0, style=solid];
m33_33 -> m33_34  [key=0, style=solid];
m33_33 -> m33_35  [key=0, style=solid];
m33_34 -> m33_37  [key=0, style=solid];
m33_35 -> m33_36  [key=0, style=solid];
m33_35 -> m33_38  [key=2, style=dotted];
m33_35 -> m33_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_36 -> m33_37  [key=0, style=solid];
m33_36 -> m33_39  [key=2, style=dotted];
m33_37 -> m33_29  [color=blue, key=0, style=bold];
m33_16 -> m33_44  [key=0, style=solid];
m33_44 -> m33_45  [key=0, style=solid];
m33_45 -> m33_46  [key=0, style=solid];
m33_45 -> m33_45  [color=darkseagreen4, key=1, label=interval, style=dashed];
m33_46 -> m33_16  [color=blue, key=0, style=bold];
m33_7 -> m33_8  [key=0, style=solid];
m33_7 -> m33_9  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.IPruneable", style=dashed];
m33_8 -> m33_9  [key=0, style=solid];
m33_8 -> m33_13  [key=2, style=dotted];
m33_9 -> m33_10  [key=0, style=solid];
m33_9 -> m33_14  [key=2, style=dotted];
m33_10 -> m33_11  [key=0, style=solid];
m33_10 -> m33_12  [key=0, style=solid];
m33_11 -> m33_12  [key=0, style=solid];
m33_11 -> m33_15  [key=2, style=dotted];
m33_11 -> m33_16  [key=2, style=dotted];
m33_12 -> m33_7  [color=blue, key=0, style=bold];
m33_40 -> m33_41  [key=0, style=solid];
m33_41 -> m33_42  [key=0, style=solid];
m33_41 -> m33_43  [key=2, style=dotted];
m33_42 -> m33_40  [color=blue, key=0, style=bold];
m33_0 -> m33_1  [key=0, style=solid];
m33_0 -> m33_3  [color=darkseagreen4, key=1, label=bool, style=dashed];
m33_1 -> m33_2  [key=0, style=solid];
m33_1 -> m33_3  [key=0, style=solid];
m33_3 -> m33_4  [key=0, style=solid];
m33_3 -> m33_6  [key=2, style=dotted];
m33_2 -> m33_3  [key=0, style=solid];
m33_2 -> m33_5  [key=2, style=dotted];
m33_4 -> m33_0  [color=blue, key=0, style=bold];
m33_5 -> m33_17  [key=0, style=solid];
m33_17 -> m33_18  [key=0, style=solid];
m33_18 -> m33_19  [key=0, style=solid];
m33_19 -> m33_20  [key=0, style=solid];
m33_19 -> m33_25  [key=2, style=dotted];
m33_19 -> m33_21  [color=darkseagreen4, key=1, label=signal, style=dashed];
m33_20 -> m33_21  [key=0, style=solid];
m33_20 -> m33_26  [key=2, style=dotted];
m33_21 -> m33_22  [key=0, style=solid];
m33_21 -> m33_27  [key=2, style=dotted];
m33_22 -> m33_23  [key=0, style=solid];
m33_23 -> m33_24  [key=0, style=solid];
m33_23 -> m33_28  [key=2, style=dotted];
m33_24 -> m33_5  [color=blue, key=0, style=bold];
m33_47 -> m33_1  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.GarbageCollectionCachePruner", style=dashed];
m33_47 -> m33_2  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.GarbageCollectionCachePruner", style=dashed];
m33_47 -> m33_3  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.GarbageCollectionCachePruner", style=dashed];
m33_47 -> m33_9  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.GarbageCollectionCachePruner", style=dashed];
m33_47 -> m33_10  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.GarbageCollectionCachePruner", style=dashed];
m33_47 -> m33_11  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.GarbageCollectionCachePruner", style=dashed];
m33_47 -> m33_17  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.GarbageCollectionCachePruner", style=dashed];
m33_47 -> m33_18  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.GarbageCollectionCachePruner", style=dashed];
m33_47 -> m33_20  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.GarbageCollectionCachePruner", style=dashed];
m33_47 -> m33_22  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.GarbageCollectionCachePruner", style=dashed];
m33_47 -> m33_23  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.GarbageCollectionCachePruner", style=dashed];
m33_47 -> m33_30  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.GarbageCollectionCachePruner", style=dashed];
m33_47 -> m33_31  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.GarbageCollectionCachePruner", style=dashed];
m33_47 -> m33_33  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.GarbageCollectionCachePruner", style=dashed];
m33_47 -> m33_35  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.GarbageCollectionCachePruner", style=dashed];
m33_47 -> m33_36  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.GarbageCollectionCachePruner", style=dashed];
m33_47 -> m33_44  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.GarbageCollectionCachePruner", style=dashed];
m34_0 -> m34_1  [key=0, style=solid];
m34_0 -> m34_2  [color=darkseagreen4, key=1, label=bool, style=dashed];
m34_0 -> m34_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_1 -> m34_2  [key=0, style=solid];
m34_2 -> m34_3  [key=0, style=solid];
m34_3 -> m34_4  [key=0, style=solid];
m34_4 -> m34_0  [color=blue, key=0, style=bold];
m34_5 -> m34_6  [key=0, style=solid];
m34_5 -> m34_7  [color=darkseagreen4, key=1, label=bool, style=dashed];
m34_6 -> m34_7  [key=0, style=solid];
m34_7 -> m34_8  [key=0, style=solid];
m34_8 -> m34_5  [color=blue, key=0, style=bold];
m34_9 -> m34_10  [key=0, style=solid];
m34_9 -> m34_11  [color=darkseagreen4, key=1, label=bool, style=dashed];
m34_9 -> m34_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m34_10 -> m34_11  [key=0, style=solid];
m34_11 -> m34_12  [key=0, style=solid];
m34_12 -> m34_13  [key=0, style=solid];
m34_13 -> m34_9  [color=blue, key=0, style=bold];
m34_14 -> m34_1  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableAddOptions", style=dashed];
m34_14 -> m34_2  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableAddOptions", style=dashed];
m34_14 -> m34_3  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableAddOptions", style=dashed];
m34_15 -> m34_6  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableCommitOptions", style=dashed];
m34_15 -> m34_7  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableCommitOptions", style=dashed];
m34_16 -> m34_10  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableCloneOptions", style=dashed];
m34_16 -> m34_11  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableCloneOptions", style=dashed];
m34_16 -> m34_12  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.ImmutableCloneOptions", style=dashed];
m35_40 -> m35_41  [color=green, key=0, style=solid];
m35_40 -> m35_42  [color=green, key=1, label="int[]", style=dashed];
m35_41 -> m35_42  [color=green, key=0, style=solid];
m35_41 -> m35_10  [color=green, key=2, style=dotted];
m35_41 -> m35_11  [color=green, key=2, style=dotted];
m35_41 -> m35_12  [color=green, key=2, style=dotted];
m35_41 -> m35_44  [color=green, key=1, label="lambda expression", style=dashed];
m35_42 -> m35_43  [color=green, key=0, style=solid];
m35_42 -> m35_13  [color=green, key=2, style=dotted];
m35_43 -> m35_40  [color=blue, key=0, style=bold];
m35_347 -> m35_348  [color=green, key=0, style=solid];
m35_348 -> m35_349  [color=green, key=0, style=solid];
m35_348 -> m35_348  [color=green, key=3, label="Local variable System.Action test", style=bold];
m35_349 -> m35_350  [key=0, style=solid];
m35_349 -> m35_328  [key=2, style=dotted];
m35_350 -> m35_347  [color=blue, key=0, style=bold];
m35_150 -> m35_151  [color=green, key=0, style=solid];
m35_150 -> m35_152  [color=green, key=1, label="long[]", style=dashed];
m35_151 -> m35_152  [color=green, key=0, style=solid];
m35_151 -> m35_10  [color=green, key=2, style=dotted];
m35_151 -> m35_11  [color=green, key=2, style=dotted];
m35_151 -> m35_12  [color=green, key=2, style=dotted];
m35_151 -> m35_154  [color=green, key=1, label="lambda expression", style=dashed];
m35_152 -> m35_153  [color=green, key=0, style=solid];
m35_152 -> m35_13  [color=green, key=2, style=dotted];
m35_153 -> m35_150  [color=blue, key=0, style=bold];
m35_257 -> m35_258  [color=green, key=0, style=solid];
m35_257 -> m35_259  [color=green, key=1, label=string, style=dashed];
m35_258 -> m35_259  [color=green, key=0, style=solid];
m35_258 -> m35_10  [color=green, key=2, style=dotted];
m35_258 -> m35_11  [color=green, key=2, style=dotted];
m35_258 -> m35_12  [color=green, key=2, style=dotted];
m35_258 -> m35_261  [color=green, key=1, label="lambda expression", style=dashed];
m35_259 -> m35_260  [color=green, key=0, style=solid];
m35_259 -> m35_13  [color=green, key=2, style=dotted];
m35_260 -> m35_257  [color=blue, key=0, style=bold];
m35_324 -> m35_325  [color=green, key=0, style=solid];
m35_325 -> m35_326  [color=green, key=0, style=solid];
m35_325 -> m35_325  [color=green, key=3, label="Local variable System.Action test", style=bold];
m35_326 -> m35_327  [key=0, style=solid];
m35_326 -> m35_328  [key=2, style=dotted];
m35_327 -> m35_324  [color=blue, key=0, style=bold];
m35_297 -> m35_298  [color=green, key=0, style=solid];
m35_297 -> m35_299  [color=green, key=1, label="long?", style=dashed];
m35_298 -> m35_299  [color=green, key=0, style=solid];
m35_298 -> m35_10  [color=green, key=2, style=dotted];
m35_298 -> m35_11  [color=green, key=2, style=dotted];
m35_298 -> m35_12  [color=green, key=2, style=dotted];
m35_298 -> m35_301  [color=green, key=1, label="lambda expression", style=dashed];
m35_299 -> m35_300  [color=green, key=0, style=solid];
m35_299 -> m35_13  [color=green, key=2, style=dotted];
m35_300 -> m35_297  [color=blue, key=0, style=bold];
m35_165 -> m35_166  [color=green, key=0, style=solid];
m35_166 -> m35_167  [color=green, key=0, style=solid];
m35_166 -> m35_138  [color=green, key=2, style=dotted];
m35_166 -> m35_169  [color=green, key=1, label=expectedResult, style=dashed];
m35_167 -> m35_168  [color=green, key=0, style=solid];
m35_169 -> m35_170  [color=green, key=0, style=solid];
m35_169 -> m35_13  [color=green, key=2, style=dotted];
m35_168 -> m35_169  [color=green, key=0, style=solid];
m35_168 -> m35_10  [color=green, key=2, style=dotted];
m35_168 -> m35_11  [color=green, key=2, style=dotted];
m35_168 -> m35_171  [color=green, key=2, style=dotted];
m35_168 -> m35_172  [color=green, key=1, label="lambda expression", style=dashed];
m35_168 -> m35_175  [color=green, key=1, label="lambda expression", style=dashed];
m35_170 -> m35_165  [color=blue, key=0, style=bold];
m35_249 -> m35_250  [key=0, style=solid];
m35_250 -> m35_251  [color=green, key=0, style=solid];
m35_250 -> m35_237  [key=2, style=dotted];
m35_250 -> m35_252  [color=green, key=1, label=expectedResult, style=dashed];
m35_251 -> m35_252  [color=green, key=0, style=solid];
m35_251 -> m35_10  [color=green, key=2, style=dotted];
m35_251 -> m35_11  [color=green, key=2, style=dotted];
m35_251 -> m35_12  [color=green, key=2, style=dotted];
m35_251 -> m35_254  [color=green, key=1, label="lambda expression", style=dashed];
m35_252 -> m35_253  [color=green, key=0, style=solid];
m35_252 -> m35_13  [color=green, key=2, style=dotted];
m35_253 -> m35_249  [color=blue, key=0, style=bold];
m35_384 -> m35_385  [color=green, key=0, style=solid];
m35_384 -> m35_386  [color=green, key=1, label=string, style=dashed];
m35_385 -> m35_386  [color=green, key=0, style=solid];
m35_385 -> m35_10  [color=green, key=2, style=dotted];
m35_385 -> m35_11  [color=green, key=2, style=dotted];
m35_385 -> m35_12  [color=green, key=2, style=dotted];
m35_385 -> m35_388  [color=green, key=1, label="lambda expression", style=dashed];
m35_386 -> m35_387  [color=green, key=0, style=solid];
m35_386 -> m35_13  [color=green, key=2, style=dotted];
m35_387 -> m35_384  [color=blue, key=0, style=bold];
m35_73 -> m35_74  [key=0, style=solid];
m35_74 -> m35_75  [color=green, key=0, style=solid];
m35_74 -> m35_78  [key=2, style=dotted];
m35_74 -> m35_76  [color=green, key=1, label=expectedResult, style=dashed];
m35_75 -> m35_76  [color=green, key=0, style=solid];
m35_75 -> m35_10  [color=green, key=2, style=dotted];
m35_75 -> m35_11  [color=green, key=2, style=dotted];
m35_75 -> m35_12  [color=green, key=2, style=dotted];
m35_75 -> m35_79  [color=green, key=1, label="lambda expression", style=dashed];
m35_76 -> m35_77  [color=green, key=0, style=solid];
m35_76 -> m35_13  [color=green, key=2, style=dotted];
m35_77 -> m35_73  [color=blue, key=0, style=bold];
m35_91 -> m35_92  [key=0, style=solid];
m35_92 -> m35_93  [color=green, key=0, style=solid];
m35_92 -> m35_78  [key=2, style=dotted];
m35_92 -> m35_94  [color=green, key=1, label=expectedResult, style=dashed];
m35_93 -> m35_94  [color=green, key=0, style=solid];
m35_93 -> m35_10  [color=green, key=2, style=dotted];
m35_93 -> m35_11  [color=green, key=2, style=dotted];
m35_93 -> m35_12  [color=green, key=2, style=dotted];
m35_93 -> m35_96  [color=green, key=1, label="lambda expression", style=dashed];
m35_94 -> m35_95  [color=green, key=0, style=solid];
m35_94 -> m35_13  [color=green, key=2, style=dotted];
m35_95 -> m35_91  [color=blue, key=0, style=bold];
m35_304 -> m35_305  [color=green, key=0, style=solid];
m35_304 -> m35_307  [color=green, key=1, label=string, style=dashed];
m35_304 -> m35_308  [color=green, key=1, label=bool, style=dashed];
m35_305 -> m35_306  [color=green, key=0, style=solid];
m35_305 -> m35_10  [color=green, key=2, style=dotted];
m35_305 -> m35_11  [color=green, key=2, style=dotted];
m35_305 -> m35_12  [color=green, key=2, style=dotted];
m35_305 -> m35_311  [color=green, key=1, label="lambda expression", style=dashed];
m35_305 -> m35_307  [color=green, key=1, label=result, style=dashed];
m35_305 -> m35_308  [color=green, key=1, label=result, style=dashed];
m35_307 -> m35_308  [color=green, key=0, style=solid];
m35_307 -> m35_13  [color=green, key=2, style=dotted];
m35_308 -> m35_309  [color=green, key=0, style=solid];
m35_308 -> m35_310  [color=green, key=2, style=dotted];
m35_308 -> m35_13  [color=green, key=2, style=dotted];
m35_306 -> m35_307  [color=green, key=0, style=solid];
m35_306 -> m35_308  [color=green, key=0, style=solid];
m35_309 -> m35_304  [color=blue, key=0, style=bold];
m35_429 -> m35_430  [color=green, key=0, style=solid];
m35_429 -> m35_432  [color=darkseagreen4, key=1, label=int, style=dashed];
m35_429 -> m35_440  [color=darkseagreen4, key=1, label=int, style=dashed];
m35_430 -> m35_431  [color=green, key=0, style=solid];
m35_430 -> m35_10  [color=green, key=2, style=dotted];
m35_430 -> m35_11  [color=green, key=2, style=dotted];
m35_430 -> m35_12  [color=green, key=2, style=dotted];
m35_430 -> m35_435  [color=green, key=1, label="lambda expression", style=dashed];
m35_432 -> m35_433  [key=0, style=solid];
m35_432 -> m35_434  [key=2, style=dotted];
m35_432 -> m35_365  [key=2, style=dotted];
m35_432 -> m35_366  [key=2, style=dotted];
m35_432 -> m35_439  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_431 -> m35_432  [color=green, key=0, style=solid];
m35_433 -> m35_429  [color=blue, key=0, style=bold];
m35_241 -> m35_242  [key=0, style=solid];
m35_242 -> m35_243  [color=green, key=0, style=solid];
m35_242 -> m35_237  [key=2, style=dotted];
m35_242 -> m35_244  [color=green, key=1, label=expectedResult, style=dashed];
m35_243 -> m35_244  [color=green, key=0, style=solid];
m35_243 -> m35_10  [color=green, key=2, style=dotted];
m35_243 -> m35_11  [color=green, key=2, style=dotted];
m35_243 -> m35_12  [color=green, key=2, style=dotted];
m35_243 -> m35_246  [color=green, key=1, label="lambda expression", style=dashed];
m35_244 -> m35_245  [color=green, key=0, style=solid];
m35_244 -> m35_13  [color=green, key=2, style=dotted];
m35_245 -> m35_241  [color=blue, key=0, style=bold];
m35_108 -> m35_109  [key=0, style=solid];
m35_109 -> m35_110  [color=green, key=0, style=solid];
m35_109 -> m35_113  [key=2, style=dotted];
m35_109 -> m35_69  [key=2, style=dotted];
m35_109 -> m35_111  [color=green, key=1, label=expectedResult, style=dashed];
m35_110 -> m35_111  [color=green, key=0, style=solid];
m35_110 -> m35_10  [color=green, key=2, style=dotted];
m35_110 -> m35_11  [color=green, key=2, style=dotted];
m35_110 -> m35_12  [color=green, key=2, style=dotted];
m35_110 -> m35_114  [color=green, key=1, label="lambda expression", style=dashed];
m35_111 -> m35_112  [color=green, key=0, style=solid];
m35_111 -> m35_13  [color=green, key=2, style=dotted];
m35_112 -> m35_108  [color=blue, key=0, style=bold];
m35_413 -> m35_414  [color=green, key=0, style=solid];
m35_413 -> m35_415  [color=green, key=1, label="CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent", style=dashed];
m35_414 -> m35_415  [color=green, key=0, style=solid];
m35_414 -> m35_10  [color=green, key=2, style=dotted];
m35_414 -> m35_11  [color=green, key=2, style=dotted];
m35_414 -> m35_12  [color=green, key=2, style=dotted];
m35_414 -> m35_417  [color=green, key=1, label="lambda expression", style=dashed];
m35_415 -> m35_416  [color=green, key=0, style=solid];
m35_415 -> m35_13  [color=green, key=2, style=dotted];
m35_416 -> m35_413  [color=blue, key=0, style=bold];
m35_142 -> m35_143  [color=green, key=0, style=solid];
m35_142 -> m35_144  [color=green, key=1, label="long[]", style=dashed];
m35_143 -> m35_144  [color=green, key=0, style=solid];
m35_143 -> m35_10  [color=green, key=2, style=dotted];
m35_143 -> m35_11  [color=green, key=2, style=dotted];
m35_143 -> m35_12  [color=green, key=2, style=dotted];
m35_143 -> m35_146  [color=green, key=1, label="lambda expression", style=dashed];
m35_144 -> m35_145  [color=green, key=0, style=solid];
m35_144 -> m35_13  [color=green, key=2, style=dotted];
m35_145 -> m35_142  [color=blue, key=0, style=bold];
m35_55 -> m35_56  [color=green, key=0, style=solid];
m35_55 -> m35_57  [color=green, key=1, label="string[]", style=dashed];
m35_56 -> m35_57  [color=green, key=0, style=solid];
m35_56 -> m35_10  [color=green, key=2, style=dotted];
m35_56 -> m35_11  [color=green, key=2, style=dotted];
m35_56 -> m35_12  [color=green, key=2, style=dotted];
m35_56 -> m35_59  [color=green, key=1, label="lambda expression", style=dashed];
m35_57 -> m35_58  [color=green, key=0, style=solid];
m35_57 -> m35_13  [color=green, key=2, style=dotted];
m35_58 -> m35_55  [color=blue, key=0, style=bold];
m35_358 -> m35_359  [color=green, key=0, style=solid];
m35_358 -> m35_360  [color=darkseagreen4, key=1, label="CommandLine.ParserResultType", style=dashed];
m35_358 -> m35_361  [color=green, key=1, label=int, style=dashed];
m35_358 -> m35_372  [color=green, key=1, label=int, style=dashed];
m35_358 -> m35_362  [color=darkseagreen4, key=1, label="CommandLine.ParserResultType", style=dashed];
m35_359 -> m35_360  [color=green, key=0, style=solid];
m35_359 -> m35_10  [color=green, key=2, style=dotted];
m35_359 -> m35_11  [color=green, key=2, style=dotted];
m35_359 -> m35_12  [color=green, key=2, style=dotted];
m35_359 -> m35_367  [color=green, key=1, label="lambda expression", style=dashed];
m35_359 -> m35_361  [color=green, key=1, label=result, style=dashed];
m35_359 -> m35_363  [color=green, key=1, label=result, style=dashed];
m35_360 -> m35_361  [color=green, key=0, style=solid];
m35_360 -> m35_362  [key=0, style=solid];
m35_361 -> m35_364  [color=green, key=0, style=solid];
m35_361 -> m35_365  [color=green, key=2, style=dotted];
m35_361 -> m35_366  [color=green, key=2, style=dotted];
m35_361 -> m35_371  [color=green, key=1, label="lambda expression", style=dashed];
m35_362 -> m35_363  [color=green, key=0, style=solid];
m35_362 -> m35_364  [key=0, style=solid];
m35_363 -> m35_364  [color=green, key=0, style=solid];
m35_363 -> m35_365  [color=green, key=2, style=dotted];
m35_363 -> m35_328  [color=green, key=2, style=dotted];
m35_364 -> m35_358  [color=blue, key=0, style=bold];
m35_32 -> m35_33  [color=green, key=0, style=solid];
m35_32 -> m35_34  [color=green, key=1, label="int[]", style=dashed];
m35_33 -> m35_34  [color=green, key=0, style=solid];
m35_33 -> m35_10  [color=green, key=2, style=dotted];
m35_33 -> m35_11  [color=green, key=2, style=dotted];
m35_33 -> m35_12  [color=green, key=2, style=dotted];
m35_33 -> m35_36  [color=green, key=1, label="lambda expression", style=dashed];
m35_34 -> m35_35  [color=green, key=0, style=solid];
m35_34 -> m35_13  [color=green, key=2, style=dotted];
m35_35 -> m35_32  [color=blue, key=0, style=bold];
m35_455 -> m35_456  [color=green, key=0, style=solid];
m35_15 -> m35_16  [color=green, key=0, style=solid];
m35_14 -> m35_15  [color=green, key=0, style=solid];
m35_16 -> m35_14  [color=blue, key=0, style=bold];
m35_21 -> m35_22  [color=green, key=0, style=solid];
m35_22 -> m35_23  [color=green, key=0, style=solid];
m35_22 -> m35_6  [color=green, key=2, style=dotted];
m35_23 -> m35_21  [color=blue, key=0, style=bold];
m35_28 -> m35_29  [color=green, key=0, style=solid];
m35_29 -> m35_30  [color=green, key=0, style=solid];
m35_29 -> m35_31  [color=green, key=2, style=dotted];
m35_30 -> m35_28  [color=blue, key=0, style=bold];
m35_36 -> m35_37  [color=green, key=0, style=solid];
m35_37 -> m35_38  [color=green, key=0, style=solid];
m35_37 -> m35_39  [color=green, key=2, style=dotted];
m35_38 -> m35_36  [color=blue, key=0, style=bold];
m35_44 -> m35_45  [color=green, key=0, style=solid];
m35_45 -> m35_46  [color=green, key=0, style=solid];
m35_45 -> m35_6  [color=green, key=2, style=dotted];
m35_46 -> m35_44  [color=blue, key=0, style=bold];
m35_51 -> m35_52  [color=green, key=0, style=solid];
m35_52 -> m35_53  [color=green, key=0, style=solid];
m35_52 -> m35_54  [color=green, key=2, style=dotted];
m35_53 -> m35_51  [color=blue, key=0, style=bold];
m35_59 -> m35_60  [color=green, key=0, style=solid];
m35_60 -> m35_61  [color=green, key=0, style=solid];
m35_60 -> m35_62  [color=green, key=2, style=dotted];
m35_61 -> m35_59  [color=blue, key=0, style=bold];
m35_70 -> m35_71  [color=green, key=0, style=solid];
m35_71 -> m35_72  [color=green, key=0, style=solid];
m35_71 -> m35_54  [color=green, key=2, style=dotted];
m35_72 -> m35_70  [color=blue, key=0, style=bold];
m35_79 -> m35_80  [color=green, key=0, style=solid];
m35_80 -> m35_81  [color=green, key=0, style=solid];
m35_80 -> m35_82  [color=green, key=2, style=dotted];
m35_81 -> m35_79  [color=blue, key=0, style=bold];
m35_88 -> m35_89  [color=green, key=0, style=solid];
m35_89 -> m35_90  [color=green, key=0, style=solid];
m35_89 -> m35_62  [color=green, key=2, style=dotted];
m35_90 -> m35_88  [color=blue, key=0, style=bold];
m35_96 -> m35_97  [color=green, key=0, style=solid];
m35_97 -> m35_98  [color=green, key=0, style=solid];
m35_97 -> m35_99  [color=green, key=2, style=dotted];
m35_98 -> m35_96  [color=blue, key=0, style=bold];
m35_104 -> m35_105  [color=green, key=0, style=solid];
m35_105 -> m35_106  [color=green, key=0, style=solid];
m35_105 -> m35_107  [color=green, key=2, style=dotted];
m35_106 -> m35_104  [color=blue, key=0, style=bold];
m35_114 -> m35_115  [color=green, key=0, style=solid];
m35_115 -> m35_116  [color=green, key=0, style=solid];
m35_115 -> m35_107  [color=green, key=2, style=dotted];
m35_116 -> m35_114  [color=blue, key=0, style=bold];
m35_122 -> m35_123  [color=green, key=0, style=solid];
m35_123 -> m35_124  [color=green, key=0, style=solid];
m35_123 -> m35_107  [color=green, key=2, style=dotted];
m35_124 -> m35_122  [color=blue, key=0, style=bold];
m35_130 -> m35_131  [color=green, key=0, style=solid];
m35_131 -> m35_132  [color=green, key=0, style=solid];
m35_131 -> m35_107  [color=green, key=2, style=dotted];
m35_132 -> m35_130  [color=blue, key=0, style=bold];
m35_139 -> m35_140  [color=green, key=0, style=solid];
m35_140 -> m35_141  [color=green, key=0, style=solid];
m35_140 -> m35_138  [color=green, key=2, style=dotted];
m35_141 -> m35_139  [color=blue, key=0, style=bold];
m35_146 -> m35_147  [color=green, key=0, style=solid];
m35_147 -> m35_148  [color=green, key=0, style=solid];
m35_147 -> m35_149  [color=green, key=2, style=dotted];
m35_148 -> m35_146  [color=blue, key=0, style=bold];
m35_154 -> m35_155  [color=green, key=0, style=solid];
m35_155 -> m35_156  [color=green, key=0, style=solid];
m35_155 -> m35_157  [color=green, key=2, style=dotted];
m35_156 -> m35_154  [color=blue, key=0, style=bold];
m35_162 -> m35_163  [color=green, key=0, style=solid];
m35_163 -> m35_164  [color=green, key=0, style=solid];
m35_163 -> m35_157  [color=green, key=2, style=dotted];
m35_164 -> m35_162  [color=blue, key=0, style=bold];
m35_172 -> m35_173  [color=green, key=0, style=solid];
m35_175 -> m35_176  [key=0, style=solid];
m35_175 -> m35_180  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m35_175 -> m35_184  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m35_173 -> m35_174  [color=green, key=0, style=solid];
m35_173 -> m35_138  [color=green, key=2, style=dotted];
m35_174 -> m35_172  [color=blue, key=0, style=bold];
m35_176 -> m35_177  [key=0, style=solid];
m35_176 -> m35_178  [key=2, style=dotted];
m35_176 -> m35_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_180 -> m35_181  [key=0, style=solid];
m35_180 -> m35_182  [key=2, style=dotted];
m35_180 -> m35_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_184 -> m35_185  [key=0, style=solid];
m35_184 -> m35_186  [key=2, style=dotted];
m35_177 -> m35_175  [color=blue, key=0, style=bold];
m35_179 -> m35_180  [key=0, style=solid];
m35_181 -> m35_179  [color=blue, key=0, style=bold];
m35_183 -> m35_184  [key=0, style=solid];
m35_185 -> m35_183  [color=blue, key=0, style=bold];
m35_193 -> m35_194  [color=green, key=0, style=solid];
m35_194 -> m35_195  [color=green, key=0, style=solid];
m35_194 -> m35_196  [color=green, key=2, style=dotted];
m35_195 -> m35_193  [color=blue, key=0, style=bold];
m35_203 -> m35_204  [color=green, key=0, style=solid];
m35_204 -> m35_205  [color=green, key=0, style=solid];
m35_204 -> m35_202  [color=green, key=2, style=dotted];
m35_205 -> m35_203  [color=blue, key=0, style=bold];
m35_212 -> m35_213  [color=green, key=0, style=solid];
m35_213 -> m35_214  [color=green, key=0, style=solid];
m35_213 -> m35_202  [color=green, key=2, style=dotted];
m35_214 -> m35_212  [color=blue, key=0, style=bold];
m35_220 -> m35_221  [color=green, key=0, style=solid];
m35_221 -> m35_222  [color=green, key=0, style=solid];
m35_221 -> m35_223  [color=green, key=2, style=dotted];
m35_222 -> m35_220  [color=blue, key=0, style=bold];
m35_229 -> m35_230  [color=green, key=0, style=solid];
m35_230 -> m35_231  [color=green, key=0, style=solid];
m35_230 -> m35_6  [color=green, key=2, style=dotted];
m35_231 -> m35_229  [color=blue, key=0, style=bold];
m35_238 -> m35_239  [color=green, key=0, style=solid];
m35_239 -> m35_240  [color=green, key=0, style=solid];
m35_239 -> m35_6  [color=green, key=2, style=dotted];
m35_240 -> m35_238  [color=blue, key=0, style=bold];
m35_246 -> m35_247  [color=green, key=0, style=solid];
m35_247 -> m35_248  [color=green, key=0, style=solid];
m35_247 -> m35_6  [color=green, key=2, style=dotted];
m35_248 -> m35_246  [color=blue, key=0, style=bold];
m35_254 -> m35_255  [color=green, key=0, style=solid];
m35_255 -> m35_256  [color=green, key=0, style=solid];
m35_255 -> m35_6  [color=green, key=2, style=dotted];
m35_256 -> m35_254  [color=blue, key=0, style=bold];
m35_261 -> m35_262  [color=green, key=0, style=solid];
m35_262 -> m35_263  [color=green, key=0, style=solid];
m35_262 -> m35_6  [color=green, key=2, style=dotted];
m35_263 -> m35_261  [color=blue, key=0, style=bold];
m35_269 -> m35_270  [color=green, key=0, style=solid];
m35_270 -> m35_271  [color=green, key=0, style=solid];
m35_270 -> m35_272  [color=green, key=2, style=dotted];
m35_271 -> m35_269  [color=blue, key=0, style=bold];
m35_277 -> m35_278  [color=green, key=0, style=solid];
m35_278 -> m35_279  [color=green, key=0, style=solid];
m35_278 -> m35_6  [color=green, key=2, style=dotted];
m35_279 -> m35_277  [color=blue, key=0, style=bold];
m35_285 -> m35_286  [color=green, key=0, style=solid];
m35_286 -> m35_287  [color=green, key=0, style=solid];
m35_286 -> m35_288  [color=green, key=2, style=dotted];
m35_287 -> m35_285  [color=blue, key=0, style=bold];
m35_293 -> m35_294  [color=green, key=0, style=solid];
m35_294 -> m35_295  [color=green, key=0, style=solid];
m35_294 -> m35_296  [color=green, key=2, style=dotted];
m35_295 -> m35_293  [color=blue, key=0, style=bold];
m35_301 -> m35_302  [color=green, key=0, style=solid];
m35_302 -> m35_303  [color=green, key=0, style=solid];
m35_302 -> m35_296  [color=green, key=2, style=dotted];
m35_303 -> m35_301  [color=blue, key=0, style=bold];
m35_311 -> m35_312  [color=green, key=0, style=solid];
m35_312 -> m35_313  [color=green, key=0, style=solid];
m35_312 -> m35_314  [color=green, key=2, style=dotted];
m35_313 -> m35_311  [color=blue, key=0, style=bold];
m35_321 -> m35_322  [color=green, key=0, style=solid];
m35_322 -> m35_323  [color=green, key=0, style=solid];
m35_322 -> m35_314  [color=green, key=2, style=dotted];
m35_323 -> m35_321  [color=blue, key=0, style=bold];
m35_329 -> m35_330  [color=green, key=0, style=solid];
m35_330 -> m35_331  [color=green, key=0, style=solid];
m35_330 -> m35_10  [color=green, key=2, style=dotted];
m35_330 -> m35_11  [color=green, key=2, style=dotted];
m35_330 -> m35_12  [color=green, key=2, style=dotted];
m35_330 -> m35_332  [color=green, key=1, label="lambda expression", style=dashed];
m35_331 -> m35_329  [color=blue, key=0, style=bold];
m35_332 -> m35_333  [color=green, key=0, style=solid];
m35_333 -> m35_334  [color=green, key=0, style=solid];
m35_333 -> m35_335  [color=green, key=2, style=dotted];
m35_334 -> m35_332  [color=blue, key=0, style=bold];
m35_340 -> m35_341  [color=green, key=0, style=solid];
m35_341 -> m35_342  [color=green, key=0, style=solid];
m35_341 -> m35_10  [color=green, key=2, style=dotted];
m35_341 -> m35_11  [color=green, key=2, style=dotted];
m35_341 -> m35_12  [color=green, key=2, style=dotted];
m35_341 -> m35_343  [color=green, key=1, label="lambda expression", style=dashed];
m35_342 -> m35_340  [color=blue, key=0, style=bold];
m35_343 -> m35_344  [color=green, key=0, style=solid];
m35_344 -> m35_345  [color=green, key=0, style=solid];
m35_344 -> m35_346  [color=green, key=2, style=dotted];
m35_345 -> m35_343  [color=blue, key=0, style=bold];
m35_351 -> m35_352  [color=green, key=0, style=solid];
m35_352 -> m35_353  [color=green, key=0, style=solid];
m35_352 -> m35_10  [color=green, key=2, style=dotted];
m35_352 -> m35_11  [color=green, key=2, style=dotted];
m35_352 -> m35_12  [color=green, key=2, style=dotted];
m35_352 -> m35_354  [color=green, key=1, label="lambda expression", style=dashed];
m35_353 -> m35_351  [color=blue, key=0, style=bold];
m35_354 -> m35_355  [color=green, key=0, style=solid];
m35_355 -> m35_356  [color=green, key=0, style=solid];
m35_355 -> m35_357  [color=green, key=2, style=dotted];
m35_356 -> m35_354  [color=blue, key=0, style=bold];
m35_372 -> m35_373  [color=green, key=0, style=solid];
m35_367 -> m35_368  [color=green, key=0, style=solid];
m35_371 -> m35_372  [color=green, key=0, style=solid];
m35_368 -> m35_369  [color=green, key=0, style=solid];
m35_368 -> m35_370  [color=green, key=2, style=dotted];
m35_369 -> m35_367  [color=blue, key=0, style=bold];
m35_373 -> m35_371  [color=blue, key=0, style=bold];
m35_382 -> m35_383  [color=green, key=0, style=solid];
m35_378 -> m35_379  [color=green, key=0, style=solid];
m35_381 -> m35_382  [color=green, key=0, style=solid];
m35_379 -> m35_380  [color=green, key=0, style=solid];
m35_379 -> m35_6  [color=green, key=2, style=dotted];
m35_380 -> m35_378  [color=blue, key=0, style=bold];
m35_383 -> m35_381  [color=blue, key=0, style=bold];
m35_388 -> m35_389  [color=green, key=0, style=solid];
m35_389 -> m35_390  [color=green, key=0, style=solid];
m35_389 -> m35_391  [color=green, key=2, style=dotted];
m35_390 -> m35_388  [color=blue, key=0, style=bold];
m35_404 -> m35_405  [color=green, key=0, style=solid];
m35_399 -> m35_400  [color=green, key=0, style=solid];
m35_403 -> m35_404  [color=green, key=0, style=solid];
m35_400 -> m35_401  [color=green, key=0, style=solid];
m35_400 -> m35_402  [color=green, key=2, style=dotted];
m35_401 -> m35_399  [color=blue, key=0, style=bold];
m35_405 -> m35_403  [color=blue, key=0, style=bold];
m35_410 -> m35_411  [color=green, key=0, style=solid];
m35_411 -> m35_412  [color=green, key=0, style=solid];
m35_411 -> m35_272  [color=green, key=2, style=dotted];
m35_412 -> m35_410  [color=blue, key=0, style=bold];
m35_417 -> m35_418  [color=green, key=0, style=solid];
m35_418 -> m35_419  [color=green, key=0, style=solid];
m35_418 -> m35_420  [color=green, key=2, style=dotted];
m35_419 -> m35_417  [color=blue, key=0, style=bold];
m35_426 -> m35_427  [color=green, key=0, style=solid];
m35_427 -> m35_428  [color=green, key=0, style=solid];
m35_427 -> m35_6  [color=green, key=2, style=dotted];
m35_428 -> m35_426  [color=blue, key=0, style=bold];
m35_440 -> m35_441  [key=0, style=solid];
m35_435 -> m35_436  [color=green, key=0, style=solid];
m35_439 -> m35_440  [key=0, style=solid];
m35_436 -> m35_437  [color=green, key=0, style=solid];
m35_436 -> m35_438  [color=green, key=2, style=dotted];
m35_437 -> m35_435  [color=blue, key=0, style=bold];
m35_441 -> m35_439  [color=blue, key=0, style=bold];
m35_456 -> m35_457  [color=green, key=0, style=solid];
m35_456 -> m35_452  [color=green, key=2, style=dotted];
m35_457 -> m35_455  [color=blue, key=0, style=bold];
m35_374 -> m35_375  [color=green, key=0, style=solid];
m35_374 -> m35_376  [color=green, key=1, label=int, style=dashed];
m35_374 -> m35_382  [color=green, key=1, label=int, style=dashed];
m35_375 -> m35_376  [color=green, key=0, style=solid];
m35_375 -> m35_10  [color=green, key=2, style=dotted];
m35_375 -> m35_11  [color=green, key=2, style=dotted];
m35_375 -> m35_12  [color=green, key=2, style=dotted];
m35_375 -> m35_378  [color=green, key=1, label="lambda expression", style=dashed];
m35_376 -> m35_377  [color=green, key=0, style=solid];
m35_376 -> m35_365  [color=green, key=2, style=dotted];
m35_376 -> m35_366  [color=green, key=2, style=dotted];
m35_376 -> m35_381  [color=green, key=1, label="lambda expression", style=dashed];
m35_377 -> m35_374  [color=blue, key=0, style=bold];
m35_392 -> m35_393  [color=green, key=0, style=solid];
m35_392 -> m35_394  [color=darkseagreen4, key=1, label="CommandLine.ParserResultType", style=dashed];
m35_392 -> m35_395  [color=green, key=1, label=int, style=dashed];
m35_392 -> m35_404  [color=green, key=1, label=int, style=dashed];
m35_392 -> m35_396  [color=darkseagreen4, key=1, label="CommandLine.ParserResultType", style=dashed];
m35_393 -> m35_394  [color=green, key=0, style=solid];
m35_393 -> m35_10  [color=green, key=2, style=dotted];
m35_393 -> m35_11  [color=green, key=2, style=dotted];
m35_393 -> m35_12  [color=green, key=2, style=dotted];
m35_393 -> m35_399  [color=green, key=1, label="lambda expression", style=dashed];
m35_393 -> m35_395  [color=green, key=1, label=result, style=dashed];
m35_393 -> m35_397  [color=green, key=1, label=result, style=dashed];
m35_394 -> m35_395  [color=green, key=0, style=solid];
m35_394 -> m35_396  [key=0, style=solid];
m35_395 -> m35_398  [color=green, key=0, style=solid];
m35_395 -> m35_365  [color=green, key=2, style=dotted];
m35_395 -> m35_366  [color=green, key=2, style=dotted];
m35_395 -> m35_403  [color=green, key=1, label="lambda expression", style=dashed];
m35_396 -> m35_397  [color=green, key=0, style=solid];
m35_396 -> m35_398  [key=0, style=solid];
m35_397 -> m35_398  [color=green, key=0, style=solid];
m35_397 -> m35_365  [color=green, key=2, style=dotted];
m35_397 -> m35_328  [color=green, key=2, style=dotted];
m35_398 -> m35_392  [color=blue, key=0, style=bold];
m35_47 -> m35_48  [color=green, key=0, style=solid];
m35_47 -> m35_49  [color=green, key=1, label="string[]", style=dashed];
m35_48 -> m35_49  [color=green, key=0, style=solid];
m35_48 -> m35_10  [color=green, key=2, style=dotted];
m35_48 -> m35_11  [color=green, key=2, style=dotted];
m35_48 -> m35_12  [color=green, key=2, style=dotted];
m35_48 -> m35_51  [color=green, key=1, label="lambda expression", style=dashed];
m35_49 -> m35_50  [color=green, key=0, style=solid];
m35_49 -> m35_13  [color=green, key=2, style=dotted];
m35_50 -> m35_47  [color=blue, key=0, style=bold];
m35_117 -> m35_118  [key=0, style=solid];
m35_118 -> m35_119  [color=green, key=0, style=solid];
m35_118 -> m35_113  [key=2, style=dotted];
m35_118 -> m35_69  [key=2, style=dotted];
m35_118 -> m35_120  [color=green, key=1, label=expectedResult, style=dashed];
m35_119 -> m35_120  [color=green, key=0, style=solid];
m35_119 -> m35_10  [color=green, key=2, style=dotted];
m35_119 -> m35_11  [color=green, key=2, style=dotted];
m35_119 -> m35_12  [color=green, key=2, style=dotted];
m35_119 -> m35_122  [color=green, key=1, label="lambda expression", style=dashed];
m35_120 -> m35_121  [color=green, key=0, style=solid];
m35_120 -> m35_13  [color=green, key=2, style=dotted];
m35_121 -> m35_117  [color=blue, key=0, style=bold];
m35_24 -> m35_25  [color=green, key=0, style=solid];
m35_24 -> m35_26  [color=green, key=1, label=double, style=dashed];
m35_25 -> m35_26  [color=green, key=0, style=solid];
m35_25 -> m35_10  [color=green, key=2, style=dotted];
m35_25 -> m35_11  [color=green, key=2, style=dotted];
m35_25 -> m35_12  [color=green, key=2, style=dotted];
m35_25 -> m35_28  [color=green, key=1, label="lambda expression", style=dashed];
m35_26 -> m35_27  [color=green, key=0, style=solid];
m35_26 -> m35_13  [color=green, key=2, style=dotted];
m35_27 -> m35_24  [color=blue, key=0, style=bold];
m35_264 -> m35_265  [key=0, style=solid];
m35_265 -> m35_266  [color=green, key=0, style=solid];
m35_265 -> m35_211  [key=2, style=dotted];
m35_265 -> m35_267  [color=green, key=1, label=expectedResult, style=dashed];
m35_266 -> m35_267  [color=green, key=0, style=solid];
m35_266 -> m35_10  [color=green, key=2, style=dotted];
m35_266 -> m35_11  [color=green, key=2, style=dotted];
m35_266 -> m35_12  [color=green, key=2, style=dotted];
m35_266 -> m35_269  [color=green, key=1, label="lambda expression", style=dashed];
m35_267 -> m35_268  [color=green, key=0, style=solid];
m35_267 -> m35_13  [color=green, key=2, style=dotted];
m35_268 -> m35_264  [color=blue, key=0, style=bold];
m35_224 -> m35_225  [key=0, style=solid];
m35_225 -> m35_226  [color=green, key=0, style=solid];
m35_225 -> m35_78  [key=2, style=dotted];
m35_225 -> m35_69  [key=2, style=dotted];
m35_225 -> m35_227  [color=green, key=1, label=expectedResult, style=dashed];
m35_226 -> m35_227  [color=green, key=0, style=solid];
m35_226 -> m35_10  [color=green, key=2, style=dotted];
m35_226 -> m35_11  [color=green, key=2, style=dotted];
m35_226 -> m35_12  [color=green, key=2, style=dotted];
m35_226 -> m35_229  [color=green, key=1, label="lambda expression", style=dashed];
m35_227 -> m35_228  [color=green, key=0, style=solid];
m35_227 -> m35_13  [color=green, key=2, style=dotted];
m35_228 -> m35_224  [color=blue, key=0, style=bold];
m35_0 -> m35_1  [color=green, key=0, style=solid];
m35_1 -> m35_2  [color=green, key=0, style=solid];
m35_1 -> m35_6  [color=green, key=2, style=dotted];
m35_1 -> m35_3  [color=green, key=1, label=fakeOptions, style=dashed];
m35_1 -> m35_15  [color=green, key=1, label=fakeOptions, style=dashed];
m35_2 -> m35_3  [color=green, key=0, style=solid];
m35_2 -> m35_7  [color=green, key=2, style=dotted];
m35_2 -> m35_8  [color=green, key=2, style=dotted];
m35_2 -> m35_9  [color=green, key=2, style=dotted];
m35_2 -> m35_4  [color=green, key=1, label=expectedResult, style=dashed];
m35_3 -> m35_4  [color=green, key=0, style=solid];
m35_3 -> m35_10  [color=green, key=2, style=dotted];
m35_3 -> m35_11  [color=green, key=2, style=dotted];
m35_3 -> m35_12  [color=green, key=2, style=dotted];
m35_3 -> m35_14  [color=green, key=1, label="lambda expression", style=dashed];
m35_4 -> m35_5  [key=0, style=solid];
m35_4 -> m35_13  [key=2, style=dotted];
m35_5 -> m35_0  [color=blue, key=0, style=bold];
m35_215 -> m35_216  [key=0, style=solid];
m35_216 -> m35_217  [color=green, key=0, style=solid];
m35_216 -> m35_211  [key=2, style=dotted];
m35_216 -> m35_69  [key=2, style=dotted];
m35_216 -> m35_218  [color=green, key=1, label=expectedResult, style=dashed];
m35_217 -> m35_218  [color=green, key=0, style=solid];
m35_217 -> m35_10  [color=green, key=2, style=dotted];
m35_217 -> m35_11  [color=green, key=2, style=dotted];
m35_217 -> m35_12  [color=green, key=2, style=dotted];
m35_217 -> m35_220  [color=green, key=1, label="lambda expression", style=dashed];
m35_218 -> m35_219  [color=green, key=0, style=solid];
m35_218 -> m35_13  [color=green, key=2, style=dotted];
m35_219 -> m35_215  [color=blue, key=0, style=bold];
m35_206 -> m35_207  [key=0, style=solid];
m35_207 -> m35_208  [color=green, key=0, style=solid];
m35_207 -> m35_211  [key=2, style=dotted];
m35_207 -> m35_69  [key=2, style=dotted];
m35_207 -> m35_209  [color=green, key=1, label=expectedResult, style=dashed];
m35_208 -> m35_209  [color=green, key=0, style=solid];
m35_208 -> m35_10  [color=green, key=2, style=dotted];
m35_208 -> m35_11  [color=green, key=2, style=dotted];
m35_208 -> m35_12  [color=green, key=2, style=dotted];
m35_208 -> m35_212  [color=green, key=1, label="lambda expression", style=dashed];
m35_209 -> m35_210  [color=green, key=0, style=solid];
m35_209 -> m35_13  [color=green, key=2, style=dotted];
m35_210 -> m35_206  [color=blue, key=0, style=bold];
m35_125 -> m35_126  [key=0, style=solid];
m35_126 -> m35_127  [color=green, key=0, style=solid];
m35_126 -> m35_113  [key=2, style=dotted];
m35_126 -> m35_69  [key=2, style=dotted];
m35_126 -> m35_128  [color=green, key=1, label=expectedResult, style=dashed];
m35_127 -> m35_128  [color=green, key=0, style=solid];
m35_127 -> m35_10  [color=green, key=2, style=dotted];
m35_127 -> m35_11  [color=green, key=2, style=dotted];
m35_127 -> m35_12  [color=green, key=2, style=dotted];
m35_127 -> m35_130  [color=green, key=1, label="lambda expression", style=dashed];
m35_128 -> m35_129  [color=green, key=0, style=solid];
m35_128 -> m35_13  [color=green, key=2, style=dotted];
m35_129 -> m35_125  [color=blue, key=0, style=bold];
m35_406 -> m35_407  [color=green, key=0, style=solid];
m35_406 -> m35_408  [color=green, key=1, label="CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue", style=dashed];
m35_407 -> m35_408  [color=green, key=0, style=solid];
m35_407 -> m35_10  [color=green, key=2, style=dotted];
m35_407 -> m35_11  [color=green, key=2, style=dotted];
m35_407 -> m35_12  [color=green, key=2, style=dotted];
m35_407 -> m35_410  [color=green, key=1, label="lambda expression", style=dashed];
m35_408 -> m35_409  [color=green, key=0, style=solid];
m35_408 -> m35_13  [color=green, key=2, style=dotted];
m35_409 -> m35_406  [color=blue, key=0, style=bold];
m35_83 -> m35_84  [key=0, style=solid];
m35_84 -> m35_85  [color=green, key=0, style=solid];
m35_84 -> m35_78  [key=2, style=dotted];
m35_84 -> m35_69  [key=2, style=dotted];
m35_84 -> m35_86  [color=green, key=1, label=expectedResult, style=dashed];
m35_85 -> m35_86  [color=green, key=0, style=solid];
m35_85 -> m35_10  [color=green, key=2, style=dotted];
m35_85 -> m35_11  [color=green, key=2, style=dotted];
m35_85 -> m35_12  [color=green, key=2, style=dotted];
m35_85 -> m35_88  [color=green, key=1, label="lambda expression", style=dashed];
m35_86 -> m35_87  [color=green, key=0, style=solid];
m35_86 -> m35_13  [color=green, key=2, style=dotted];
m35_87 -> m35_83  [color=blue, key=0, style=bold];
m35_63 -> m35_64  [key=0, style=solid];
m35_64 -> m35_65  [color=green, key=0, style=solid];
m35_64 -> m35_68  [key=2, style=dotted];
m35_64 -> m35_69  [key=2, style=dotted];
m35_64 -> m35_66  [color=green, key=1, label=expectedResult, style=dashed];
m35_65 -> m35_66  [color=green, key=0, style=solid];
m35_65 -> m35_10  [color=green, key=2, style=dotted];
m35_65 -> m35_11  [color=green, key=2, style=dotted];
m35_65 -> m35_12  [color=green, key=2, style=dotted];
m35_65 -> m35_70  [color=green, key=1, label="lambda expression", style=dashed];
m35_66 -> m35_67  [color=green, key=0, style=solid];
m35_66 -> m35_13  [color=green, key=2, style=dotted];
m35_67 -> m35_63  [color=blue, key=0, style=bold];
m35_133 -> m35_134  [color=green, key=0, style=solid];
m35_134 -> m35_135  [color=green, key=0, style=solid];
m35_134 -> m35_138  [color=green, key=2, style=dotted];
m35_134 -> m35_136  [color=green, key=1, label=expectedResult, style=dashed];
m35_135 -> m35_136  [color=green, key=0, style=solid];
m35_135 -> m35_10  [color=green, key=2, style=dotted];
m35_135 -> m35_11  [color=green, key=2, style=dotted];
m35_135 -> m35_12  [color=green, key=2, style=dotted];
m35_135 -> m35_139  [color=green, key=1, label="lambda expression", style=dashed];
m35_136 -> m35_137  [color=green, key=0, style=solid];
m35_136 -> m35_13  [color=green, key=2, style=dotted];
m35_137 -> m35_133  [color=blue, key=0, style=bold];
m35_17 -> m35_18  [color=green, key=0, style=solid];
m35_17 -> m35_19  [color=green, key=1, label=long, style=dashed];
m35_18 -> m35_19  [color=green, key=0, style=solid];
m35_18 -> m35_10  [color=green, key=2, style=dotted];
m35_18 -> m35_11  [color=green, key=2, style=dotted];
m35_18 -> m35_12  [color=green, key=2, style=dotted];
m35_18 -> m35_21  [color=green, key=1, label="lambda expression", style=dashed];
m35_19 -> m35_20  [color=green, key=0, style=solid];
m35_19 -> m35_13  [color=green, key=2, style=dotted];
m35_20 -> m35_17  [color=blue, key=0, style=bold];
m35_315 -> m35_316  [color=green, key=0, style=solid];
m35_315 -> m35_318  [color=green, key=1, label=int, style=dashed];
m35_315 -> m35_319  [color=green, key=1, label=bool, style=dashed];
m35_316 -> m35_317  [color=green, key=0, style=solid];
m35_316 -> m35_10  [color=green, key=2, style=dotted];
m35_316 -> m35_11  [color=green, key=2, style=dotted];
m35_316 -> m35_12  [color=green, key=2, style=dotted];
m35_316 -> m35_321  [color=green, key=1, label="lambda expression", style=dashed];
m35_316 -> m35_318  [color=green, key=1, label=result, style=dashed];
m35_316 -> m35_319  [color=green, key=1, label=result, style=dashed];
m35_318 -> m35_319  [color=green, key=0, style=solid];
m35_318 -> m35_13  [color=green, key=2, style=dotted];
m35_319 -> m35_320  [color=green, key=0, style=solid];
m35_319 -> m35_310  [color=green, key=2, style=dotted];
m35_319 -> m35_13  [color=green, key=2, style=dotted];
m35_317 -> m35_318  [color=green, key=0, style=solid];
m35_317 -> m35_319  [color=green, key=0, style=solid];
m35_320 -> m35_315  [color=blue, key=0, style=bold];
m35_421 -> m35_422  [color=green, key=0, style=solid];
m35_422 -> m35_423  [color=green, key=0, style=solid];
m35_422 -> m35_6  [color=green, key=2, style=dotted];
m35_422 -> m35_424  [color=green, key=1, label=expectedResult, style=dashed];
m35_423 -> m35_424  [color=green, key=0, style=solid];
m35_423 -> m35_10  [color=green, key=2, style=dotted];
m35_423 -> m35_11  [color=green, key=2, style=dotted];
m35_423 -> m35_12  [color=green, key=2, style=dotted];
m35_423 -> m35_426  [color=green, key=1, label="lambda expression", style=dashed];
m35_424 -> m35_425  [color=green, key=0, style=solid];
m35_424 -> m35_13  [color=green, key=2, style=dotted];
m35_425 -> m35_421  [color=blue, key=0, style=bold];
m35_158 -> m35_159  [color=green, key=0, style=solid];
m35_158 -> m35_160  [color=green, key=1, label="string[]", style=dashed];
m35_159 -> m35_160  [color=green, key=0, style=solid];
m35_159 -> m35_10  [color=green, key=2, style=dotted];
m35_159 -> m35_11  [color=green, key=2, style=dotted];
m35_159 -> m35_12  [color=green, key=2, style=dotted];
m35_159 -> m35_162  [color=green, key=1, label="lambda expression", style=dashed];
m35_160 -> m35_161  [color=green, key=0, style=solid];
m35_160 -> m35_13  [color=green, key=2, style=dotted];
m35_161 -> m35_158  [color=blue, key=0, style=bold];
m35_289 -> m35_290  [color=green, key=0, style=solid];
m35_289 -> m35_291  [color=green, key=1, label="int?", style=dashed];
m35_290 -> m35_291  [color=green, key=0, style=solid];
m35_290 -> m35_10  [color=green, key=2, style=dotted];
m35_290 -> m35_11  [color=green, key=2, style=dotted];
m35_290 -> m35_12  [color=green, key=2, style=dotted];
m35_290 -> m35_293  [color=green, key=1, label="lambda expression", style=dashed];
m35_291 -> m35_292  [color=green, key=0, style=solid];
m35_291 -> m35_13  [color=green, key=2, style=dotted];
m35_292 -> m35_289  [color=blue, key=0, style=bold];
m35_232 -> m35_233  [key=0, style=solid];
m35_233 -> m35_234  [color=green, key=0, style=solid];
m35_233 -> m35_237  [key=2, style=dotted];
m35_233 -> m35_235  [color=green, key=1, label=expectedResult, style=dashed];
m35_234 -> m35_235  [color=green, key=0, style=solid];
m35_234 -> m35_10  [color=green, key=2, style=dotted];
m35_234 -> m35_11  [color=green, key=2, style=dotted];
m35_234 -> m35_12  [color=green, key=2, style=dotted];
m35_234 -> m35_238  [color=green, key=1, label="lambda expression", style=dashed];
m35_235 -> m35_236  [color=green, key=0, style=solid];
m35_235 -> m35_13  [color=green, key=2, style=dotted];
m35_236 -> m35_232  [color=blue, key=0, style=bold];
m35_197 -> m35_198  [color=green, key=0, style=solid];
m35_198 -> m35_199  [color=green, key=0, style=solid];
m35_198 -> m35_202  [color=green, key=2, style=dotted];
m35_198 -> m35_200  [color=green, key=1, label=expectedResult, style=dashed];
m35_199 -> m35_200  [color=green, key=0, style=solid];
m35_199 -> m35_10  [color=green, key=2, style=dotted];
m35_199 -> m35_11  [color=green, key=2, style=dotted];
m35_199 -> m35_12  [color=green, key=2, style=dotted];
m35_199 -> m35_203  [color=green, key=1, label="lambda expression", style=dashed];
m35_200 -> m35_201  [color=green, key=0, style=solid];
m35_200 -> m35_13  [color=green, key=2, style=dotted];
m35_201 -> m35_197  [color=blue, key=0, style=bold];
m35_280 -> m35_281  [key=0, style=solid];
m35_281 -> m35_282  [color=green, key=0, style=solid];
m35_281 -> m35_78  [key=2, style=dotted];
m35_281 -> m35_283  [color=green, key=1, label=expectedResult, style=dashed];
m35_282 -> m35_283  [color=green, key=0, style=solid];
m35_282 -> m35_10  [color=green, key=2, style=dotted];
m35_282 -> m35_11  [color=green, key=2, style=dotted];
m35_282 -> m35_12  [color=green, key=2, style=dotted];
m35_282 -> m35_285  [color=green, key=1, label="lambda expression", style=dashed];
m35_283 -> m35_284  [color=green, key=0, style=solid];
m35_283 -> m35_13  [color=green, key=2, style=dotted];
m35_284 -> m35_280  [color=blue, key=0, style=bold];
m35_100 -> m35_101  [color=green, key=0, style=solid];
m35_100 -> m35_102  [color=green, key=1, label="CommandLine.Tests.Fakes.Colors", style=dashed];
m35_101 -> m35_102  [color=green, key=0, style=solid];
m35_101 -> m35_10  [color=green, key=2, style=dotted];
m35_101 -> m35_11  [color=green, key=2, style=dotted];
m35_101 -> m35_12  [color=green, key=2, style=dotted];
m35_101 -> m35_104  [color=green, key=1, label="lambda expression", style=dashed];
m35_102 -> m35_103  [color=green, key=0, style=solid];
m35_102 -> m35_13  [color=green, key=2, style=dotted];
m35_102 -> m35_102  [color=green, key=1, label="CommandLine.Tests.Fakes.Colors", style=dashed];
m35_103 -> m35_100  [color=blue, key=0, style=bold];
m35_442 -> m35_443  [color=green, key=0, style=solid];
m35_442 -> m35_444  [color=green, key=1, label="CommandLine.Tests.Fakes.FakeImmutableOptions", style=dashed];
m35_443 -> m35_444  [color=green, key=0, style=solid];
m35_443 -> m35_446  [color=green, key=2, style=dotted];
m35_443 -> m35_11  [color=green, key=2, style=dotted];
m35_443 -> m35_12  [color=green, key=2, style=dotted];
m35_444 -> m35_445  [color=green, key=0, style=solid];
m35_444 -> m35_13  [color=green, key=2, style=dotted];
m35_445 -> m35_442  [color=blue, key=0, style=bold];
m35_273 -> m35_274  [color=green, key=0, style=solid];
m35_273 -> m35_275  [color=green, key=1, label=string, style=dashed];
m35_274 -> m35_275  [color=green, key=0, style=solid];
m35_274 -> m35_10  [color=green, key=2, style=dotted];
m35_274 -> m35_11  [color=green, key=2, style=dotted];
m35_274 -> m35_12  [color=green, key=2, style=dotted];
m35_274 -> m35_277  [color=green, key=1, label="lambda expression", style=dashed];
m35_275 -> m35_276  [color=green, key=0, style=solid];
m35_275 -> m35_13  [color=green, key=2, style=dotted];
m35_276 -> m35_273  [color=blue, key=0, style=bold];
m35_447 -> m35_448  [color=green, key=0, style=solid];
m35_448 -> m35_449  [color=green, key=0, style=solid];
m35_448 -> m35_452  [color=green, key=2, style=dotted];
m35_448 -> m35_453  [color=green, key=2, style=dotted];
m35_448 -> m35_454  [color=green, key=2, style=dotted];
m35_448 -> m35_450  [color=green, key=1, label=expectedResult, style=dashed];
m35_449 -> m35_450  [color=green, key=0, style=solid];
m35_449 -> m35_10  [color=green, key=2, style=dotted];
m35_449 -> m35_11  [color=green, key=2, style=dotted];
m35_449 -> m35_12  [color=green, key=2, style=dotted];
m35_449 -> m35_455  [color=green, key=1, label="lambda expression", style=dashed];
m35_450 -> m35_451  [color=green, key=0, style=solid];
m35_450 -> m35_13  [color=green, key=2, style=dotted];
m35_451 -> m35_447  [color=blue, key=0, style=bold];
m35_336 -> m35_337  [color=green, key=0, style=solid];
m35_337 -> m35_338  [color=green, key=0, style=solid];
m35_337 -> m35_337  [color=green, key=3, label="Local variable System.Action test", style=bold];
m35_338 -> m35_339  [key=0, style=solid];
m35_338 -> m35_328  [key=2, style=dotted];
m35_339 -> m35_336  [color=blue, key=0, style=bold];
m35_187 -> m35_188  [key=0, style=solid];
m35_188 -> m35_189  [color=green, key=0, style=solid];
m35_188 -> m35_192  [key=2, style=dotted];
m35_188 -> m35_69  [key=2, style=dotted];
m35_188 -> m35_190  [color=green, key=1, label=expectedResult, style=dashed];
m35_189 -> m35_190  [color=green, key=0, style=solid];
m35_189 -> m35_10  [color=green, key=2, style=dotted];
m35_189 -> m35_11  [color=green, key=2, style=dotted];
m35_189 -> m35_12  [color=green, key=2, style=dotted];
m35_189 -> m35_193  [color=green, key=1, label="lambda expression", style=dashed];
m35_190 -> m35_191  [color=green, key=0, style=solid];
m35_190 -> m35_13  [color=green, key=2, style=dotted];
m35_191 -> m35_187  [color=blue, key=0, style=bold];
m35_458 -> m35_15  [color=green, key=1, label=fakeOptions, style=dashed];
m35_459 -> m35_180  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m35_459 -> m35_184  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m35_460 -> m35_372  [color=green, key=1, label=int, style=dashed];
m35_461 -> m35_382  [color=green, key=1, label=int, style=dashed];
m35_462 -> m35_404  [color=green, key=1, label=int, style=dashed];
m35_463 -> m35_440  [color=darkseagreen4, key=1, label=int, style=dashed];
m36_33 -> m36_34  [color=red, key=0, style=solid];
m36_34 -> m36_35  [color=red, key=0, style=solid];
m36_34 -> m36_39  [color=red, key=2, style=dotted];
m36_34 -> m36_37  [color=red, key=1, label=expected, style=dashed];
m36_35 -> m36_36  [color=red, key=0, style=solid];
m36_35 -> m36_6  [color=red, key=2, style=dotted];
m36_35 -> m36_7  [color=red, key=2, style=dotted];
m36_35 -> m36_37  [color=red, key=1, label=result, style=dashed];
m36_37 -> m36_38  [key=0, style=solid];
m36_37 -> m36_8  [key=2, style=dotted];
m36_36 -> m36_37  [color=red, key=0, style=solid];
m36_36 -> m36_32  [color=red, key=2, style=dotted];
m36_38 -> m36_33  [color=blue, key=0, style=bold];
m36_40 -> m36_41  [key=0, style=solid];
m36_41 -> m36_42  [color=red, key=0, style=solid];
m36_41 -> m36_46  [key=2, style=dotted];
m36_41 -> m36_44  [color=darkseagreen4, key=1, label=expected, style=dashed];
m36_42 -> m36_43  [color=red, key=0, style=solid];
m36_42 -> m36_6  [color=red, key=2, style=dotted];
m36_42 -> m36_7  [color=red, key=2, style=dotted];
m36_42 -> m36_44  [color=red, key=1, label=result, style=dashed];
m36_44 -> m36_45  [key=0, style=solid];
m36_44 -> m36_8  [key=2, style=dotted];
m36_43 -> m36_44  [key=0, style=solid];
m36_43 -> m36_32  [key=2, style=dotted];
m36_45 -> m36_40  [color=blue, key=0, style=bold];
m36_15 -> m36_16  [color=red, key=0, style=solid];
m36_16 -> m36_17  [color=red, key=0, style=solid];
m36_16 -> m36_14  [color=red, key=2, style=dotted];
m36_16 -> m36_18  [color=red, key=1, label=expectedErrors, style=dashed];
m36_17 -> m36_18  [color=red, key=0, style=solid];
m36_17 -> m36_6  [color=red, key=2, style=dotted];
m36_17 -> m36_7  [color=red, key=2, style=dotted];
m36_18 -> m36_19  [key=0, style=solid];
m36_18 -> m36_8  [key=2, style=dotted];
m36_19 -> m36_15  [color=blue, key=0, style=bold];
m36_25 -> m36_26  [color=red, key=0, style=solid];
m36_26 -> m36_27  [color=red, key=0, style=solid];
m36_26 -> m36_31  [color=red, key=2, style=dotted];
m36_26 -> m36_29  [color=red, key=1, label=expected, style=dashed];
m36_27 -> m36_28  [color=red, key=0, style=solid];
m36_27 -> m36_6  [color=red, key=2, style=dotted];
m36_27 -> m36_7  [color=red, key=2, style=dotted];
m36_27 -> m36_29  [color=red, key=1, label=result, style=dashed];
m36_29 -> m36_30  [key=0, style=solid];
m36_29 -> m36_8  [key=2, style=dotted];
m36_28 -> m36_29  [color=red, key=0, style=solid];
m36_28 -> m36_32  [color=red, key=2, style=dotted];
m36_30 -> m36_25  [color=blue, key=0, style=bold];
m36_0 -> m36_1  [key=0, style=solid];
m36_1 -> m36_2  [color=red, key=0, style=solid];
m36_1 -> m36_5  [key=2, style=dotted];
m36_1 -> m36_3  [color=darkseagreen4, key=1, label=expectedErrors, style=dashed];
m36_2 -> m36_3  [color=red, key=0, style=solid];
m36_2 -> m36_6  [color=red, key=2, style=dotted];
m36_2 -> m36_7  [color=red, key=2, style=dotted];
m36_3 -> m36_4  [key=0, style=solid];
m36_3 -> m36_8  [key=2, style=dotted];
m36_4 -> m36_0  [color=blue, key=0, style=bold];
m36_9 -> m36_10  [key=0, style=solid];
m36_10 -> m36_11  [color=red, key=0, style=solid];
m36_10 -> m36_14  [key=2, style=dotted];
m36_10 -> m36_12  [color=darkseagreen4, key=1, label=expectedErrors, style=dashed];
m36_11 -> m36_12  [color=red, key=0, style=solid];
m36_11 -> m36_6  [color=red, key=2, style=dotted];
m36_11 -> m36_7  [color=red, key=2, style=dotted];
m36_12 -> m36_13  [key=0, style=solid];
m36_12 -> m36_8  [key=2, style=dotted];
m36_13 -> m36_9  [color=blue, key=0, style=bold];
m36_20 -> m36_21  [key=0, style=solid];
m36_21 -> m36_22  [color=red, key=0, style=solid];
m36_21 -> m36_14  [key=2, style=dotted];
m36_21 -> m36_23  [color=darkseagreen4, key=1, label=expectedErrors, style=dashed];
m36_22 -> m36_23  [color=red, key=0, style=solid];
m36_22 -> m36_6  [color=red, key=2, style=dotted];
m36_22 -> m36_7  [color=red, key=2, style=dotted];
m36_23 -> m36_24  [key=0, style=solid];
m36_23 -> m36_8  [key=2, style=dotted];
m36_24 -> m36_20  [color=blue, key=0, style=bold];
m36_47 -> m36_48  [key=0, style=solid];
m36_47 -> m36_49  [color=red, key=1, label="string[]", style=dashed];
m36_48 -> m36_49  [color=red, key=0, style=solid];
m36_48 -> m36_46  [key=2, style=dotted];
m36_48 -> m36_51  [color=darkseagreen4, key=1, label=expected, style=dashed];
m36_49 -> m36_50  [color=red, key=0, style=solid];
m36_49 -> m36_6  [color=red, key=2, style=dotted];
m36_49 -> m36_7  [color=red, key=2, style=dotted];
m36_49 -> m36_51  [color=red, key=1, label=result, style=dashed];
m36_51 -> m36_52  [key=0, style=solid];
m36_51 -> m36_8  [key=2, style=dotted];
m36_50 -> m36_51  [key=0, style=solid];
m36_50 -> m36_32  [key=2, style=dotted];
m36_52 -> m36_47  [color=blue, key=0, style=bold];
m37_0 -> m37_1  [key=0, style=solid];
m37_1 -> m37_2  [color=green, key=0, style=solid];
m37_1 -> m37_6  [key=2, style=dotted];
m37_1 -> m37_3  [color=darkseagreen4, key=1, label=tokenPartitions, style=dashed];
m37_2 -> m37_3  [color=green, key=0, style=solid];
m37_2 -> m37_7  [color=green, key=2, style=dotted];
m37_2 -> m37_8  [color=green, key=2, style=dotted];
m37_2 -> m37_9  [color=green, key=2, style=dotted];
m37_2 -> m37_10  [color=green, key=2, style=dotted];
m37_2 -> m37_11  [color=green, key=2, style=dotted];
m37_2 -> m37_12  [color=green, key=2, style=dotted];
m37_2 -> m37_16  [color=green, key=1, label="lambda expression", style=dashed];
m37_3 -> m37_4  [key=0, style=solid];
m37_3 -> m37_13  [key=2, style=dotted];
m37_3 -> m37_14  [key=2, style=dotted];
m37_3 -> m37_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_3 -> m37_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_4 -> m37_5  [key=0, style=solid];
m37_4 -> m37_11  [key=2, style=dotted];
m37_4 -> m37_15  [key=2, style=dotted];
m37_4 -> m37_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_5 -> m37_0  [color=blue, key=0, style=bold];
m37_28 -> m37_29  [key=0, style=solid];
m37_16 -> m37_17  [color=green, key=0, style=solid];
m37_20 -> m37_21  [key=0, style=solid];
m37_24 -> m37_25  [key=0, style=solid];
m37_17 -> m37_18  [color=green, key=0, style=solid];
m37_17 -> m37_19  [color=green, key=2, style=dotted];
m37_18 -> m37_16  [color=blue, key=0, style=bold];
m37_21 -> m37_22  [key=0, style=solid];
m37_21 -> m37_23  [key=2, style=dotted];
m37_22 -> m37_20  [color=blue, key=0, style=bold];
m37_25 -> m37_26  [key=0, style=solid];
m37_25 -> m37_27  [key=2, style=dotted];
m37_26 -> m37_24  [color=blue, key=0, style=bold];
m37_29 -> m37_30  [key=0, style=solid];
m37_29 -> m37_31  [key=2, style=dotted];
m37_29 -> m37_32  [key=2, style=dotted];
m37_30 -> m37_28  [color=blue, key=0, style=bold];
m38_4 -> m38_5  [key=0, style=solid];
m38_4 -> m38_6  [color=darkseagreen4, key=1, label=object, style=dashed];
m38_5 -> m38_6  [key=0, style=solid];
m38_6 -> m38_7  [key=0, style=solid];
m38_6 -> m38_8  [key=2, style=dotted];
m38_6 -> m38_9  [key=2, style=dotted];
m38_7 -> m38_4  [color=blue, key=0, style=bold];
m38_0 -> m38_1  [key=0, style=solid];
m38_1 -> m38_2  [key=0, style=solid];
m38_1 -> m38_3  [key=2, style=dotted];
m38_2 -> m38_0  [color=blue, key=0, style=bold];
m39_0 -> m39_1  [color=green, key=0, style=solid];
m39_1 -> m39_2  [color=green, key=0, style=solid];
m39_1 -> m39_3  [color=green, key=2, style=dotted];
m39_1 -> m39_4  [color=green, key=2, style=dotted];
m39_1 -> m39_5  [color=green, key=2, style=dotted];
m39_2 -> m39_0  [color=blue, key=0, style=bold];
m39_6 -> m39_7  [color=green, key=0, style=solid];
m39_7 -> m39_8  [color=green, key=0, style=solid];
m39_7 -> m39_3  [color=green, key=2, style=dotted];
m39_7 -> m39_4  [color=green, key=2, style=dotted];
m39_7 -> m39_9  [color=green, key=2, style=dotted];
m39_8 -> m39_6  [color=blue, key=0, style=bold];
m40_25 -> m40_26  [key=0, style=solid];
m40_26 -> m40_27  [key=0, style=solid];
m40_26 -> m40_28  [key=2, style=dotted];
m40_26 -> m40_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_27 -> m40_25  [color=blue, key=0, style=bold];
m40_68 -> m40_69  [key=0, style=solid];
m40_69 -> m40_70  [key=0, style=solid];
m40_69 -> m40_11  [key=2, style=dotted];
m40_69 -> m40_12  [key=2, style=dotted];
m40_69 -> m40_13  [key=2, style=dotted];
m40_70 -> m40_71  [key=0, style=solid];
m40_70 -> m40_11  [key=2, style=dotted];
m40_70 -> m40_12  [key=2, style=dotted];
m40_70 -> m40_13  [key=2, style=dotted];
m40_71 -> m40_72  [key=0, style=solid];
m40_71 -> m40_11  [key=2, style=dotted];
m40_71 -> m40_12  [key=2, style=dotted];
m40_71 -> m40_13  [key=2, style=dotted];
m40_72 -> m40_68  [color=blue, key=0, style=bold];
m40_43 -> m40_44  [color=red, key=0, style=solid];
m40_44 -> m40_45  [color=red, key=0, style=solid];
m40_44 -> m40_32  [color=red, key=2, style=dotted];
m40_44 -> m40_46  [color=red, key=1, label=foo, style=dashed];
m40_44 -> m40_47  [color=red, key=1, label=foo, style=dashed];
m40_45 -> m40_46  [color=red, key=0, style=solid];
m40_45 -> m40_32  [color=red, key=2, style=dotted];
m40_45 -> m40_47  [color=red, key=1, label=bar, style=dashed];
m40_46 -> m40_47  [color=red, key=0, style=solid];
m40_46 -> m40_49  [color=red, key=2, style=dotted];
m40_47 -> m40_48  [color=red, key=0, style=solid];
m40_47 -> m40_49  [color=red, key=2, style=dotted];
m40_48 -> m40_43  [color=blue, key=0, style=bold];
m40_55 -> m40_56  [key=0, style=solid];
m40_56 -> m40_57  [key=0, style=solid];
m40_56 -> m40_18  [key=2, style=dotted];
m40_56 -> m40_19  [key=2, style=dotted];
m40_56 -> m40_60  [color=darkseagreen4, key=1, label=request, style=dashed];
m40_57 -> m40_58  [key=0, style=solid];
m40_57 -> m40_20  [key=2, style=dotted];
m40_57 -> m40_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_58 -> m40_55  [color=blue, key=0, style=bold];
m40_76 -> m40_77  [color=red, key=0, style=solid];
m40_22 -> m40_23  [key=0, style=solid];
m40_22 -> m40_24  [key=2, style=dotted];
m40_21 -> m40_22  [key=0, style=solid];
m40_23 -> m40_21  [color=blue, key=0, style=bold];
m40_29 -> m40_30  [key=0, style=solid];
m40_30 -> m40_31  [key=0, style=solid];
m40_30 -> m40_32  [key=2, style=dotted];
m40_31 -> m40_29  [color=blue, key=0, style=bold];
m40_40 -> m40_41  [key=0, style=solid];
m40_41 -> m40_42  [key=0, style=solid];
m40_41 -> m40_32  [key=2, style=dotted];
m40_42 -> m40_40  [color=blue, key=0, style=bold];
m40_60 -> m40_61  [key=0, style=solid];
m40_60 -> m40_24  [key=2, style=dotted];
m40_59 -> m40_60  [key=0, style=solid];
m40_61 -> m40_59  [color=blue, key=0, style=bold];
m40_65 -> m40_66  [color=red, key=0, style=solid];
m40_66 -> m40_67  [color=red, key=0, style=solid];
m40_66 -> m40_32  [color=red, key=2, style=dotted];
m40_67 -> m40_65  [color=blue, key=0, style=bold];
m40_77 -> m40_78  [color=red, key=0, style=solid];
m40_77 -> m40_32  [color=red, key=2, style=dotted];
m40_78 -> m40_76  [color=blue, key=0, style=bold];
m40_33 -> m40_34  [key=0, style=solid];
m40_34 -> m40_35  [color=red, key=0, style=solid];
m40_34 -> m40_11  [key=2, style=dotted];
m40_34 -> m40_12  [key=2, style=dotted];
m40_34 -> m40_13  [key=2, style=dotted];
m40_35 -> m40_36  [color=red, key=0, style=solid];
m40_35 -> m40_11  [color=red, key=2, style=dotted];
m40_35 -> m40_12  [color=red, key=2, style=dotted];
m40_35 -> m40_13  [color=red, key=2, style=dotted];
m40_36 -> m40_33  [color=blue, key=0, style=bold];
m40_0 -> m40_1  [key=0, style=solid];
m40_1 -> m40_2  [key=0, style=solid];
m40_1 -> m40_3  [key=2, style=dotted];
m40_2 -> m40_0  [color=blue, key=0, style=bold];
m40_93 -> m40_94  [key=0, style=solid];
m40_94 -> m40_93  [color=blue, key=0, style=bold];
m40_87 -> m40_88  [key=0, style=solid];
m40_88 -> m40_87  [color=blue, key=0, style=bold];
m40_91 -> m40_92  [key=0, style=solid];
m40_92 -> m40_91  [color=blue, key=0, style=bold];
m40_7 -> m40_8  [key=0, style=solid];
m40_8 -> m40_9  [key=0, style=solid];
m40_8 -> m40_11  [key=2, style=dotted];
m40_8 -> m40_12  [key=2, style=dotted];
m40_8 -> m40_13  [key=2, style=dotted];
m40_9 -> m40_10  [key=0, style=solid];
m40_9 -> m40_11  [key=2, style=dotted];
m40_9 -> m40_12  [key=2, style=dotted];
m40_9 -> m40_13  [key=2, style=dotted];
m40_10 -> m40_7  [color=blue, key=0, style=bold];
m40_14 -> m40_15  [key=0, style=solid];
m40_15 -> m40_16  [key=0, style=solid];
m40_15 -> m40_18  [key=2, style=dotted];
m40_15 -> m40_19  [key=2, style=dotted];
m40_15 -> m40_22  [color=darkseagreen4, key=1, label=request, style=dashed];
m40_16 -> m40_17  [key=0, style=solid];
m40_16 -> m40_20  [key=2, style=dotted];
m40_16 -> m40_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_17 -> m40_14  [color=blue, key=0, style=bold];
m40_73 -> m40_74  [color=red, key=0, style=solid];
m40_74 -> m40_75  [color=red, key=0, style=solid];
m40_74 -> m40_20  [color=red, key=2, style=dotted];
m40_74 -> m40_76  [color=red, key=1, label="lambda expression", style=dashed];
m40_75 -> m40_73  [color=blue, key=0, style=bold];
m40_79 -> m40_80  [key=0, style=solid];
m40_80 -> m40_81  [key=0, style=solid];
m40_80 -> m40_32  [key=2, style=dotted];
m40_80 -> m40_83  [color=darkseagreen4, key=1, label=foo, style=dashed];
m40_80 -> m40_85  [color=darkseagreen4, key=1, label=foo, style=dashed];
m40_81 -> m40_82  [key=0, style=solid];
m40_81 -> m40_32  [key=2, style=dotted];
m40_81 -> m40_83  [color=darkseagreen4, key=1, label=bar, style=dashed];
m40_81 -> m40_84  [color=darkseagreen4, key=1, label=bar, style=dashed];
m40_83 -> m40_84  [key=0, style=solid];
m40_83 -> m40_49  [key=2, style=dotted];
m40_85 -> m40_86  [key=0, style=solid];
m40_85 -> m40_49  [key=2, style=dotted];
m40_82 -> m40_83  [key=0, style=solid];
m40_82 -> m40_32  [key=2, style=dotted];
m40_82 -> m40_84  [color=darkseagreen4, key=1, label=baz, style=dashed];
m40_82 -> m40_85  [color=darkseagreen4, key=1, label=baz, style=dashed];
m40_84 -> m40_85  [key=0, style=solid];
m40_84 -> m40_49  [key=2, style=dotted];
m40_86 -> m40_79  [color=blue, key=0, style=bold];
m40_95 -> m40_96  [key=0, style=solid];
m40_96 -> m40_95  [color=blue, key=0, style=bold];
m40_3 -> m40_4  [key=0, style=solid];
m40_4 -> m40_5  [key=0, style=solid];
m40_4 -> m40_6  [key=2, style=dotted];
m40_5 -> m40_3  [color=blue, key=0, style=bold];
m40_50 -> m40_51  [key=0, style=solid];
m40_51 -> m40_52  [key=0, style=solid];
m40_51 -> m40_11  [key=2, style=dotted];
m40_51 -> m40_12  [key=2, style=dotted];
m40_51 -> m40_13  [key=2, style=dotted];
m40_52 -> m40_53  [key=0, style=solid];
m40_52 -> m40_11  [key=2, style=dotted];
m40_52 -> m40_12  [key=2, style=dotted];
m40_52 -> m40_13  [key=2, style=dotted];
m40_53 -> m40_54  [key=0, style=solid];
m40_53 -> m40_11  [key=2, style=dotted];
m40_53 -> m40_12  [key=2, style=dotted];
m40_53 -> m40_13  [key=2, style=dotted];
m40_54 -> m40_50  [color=blue, key=0, style=bold];
m40_89 -> m40_90  [key=0, style=solid];
m40_90 -> m40_89  [color=blue, key=0, style=bold];
m40_37 -> m40_38  [key=0, style=solid];
m40_38 -> m40_39  [key=0, style=solid];
m40_38 -> m40_20  [key=2, style=dotted];
m40_38 -> m40_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_39 -> m40_37  [color=blue, key=0, style=bold];
m40_62 -> m40_63  [color=red, key=0, style=solid];
m40_63 -> m40_64  [color=red, key=0, style=solid];
m40_63 -> m40_28  [color=red, key=2, style=dotted];
m40_63 -> m40_65  [color=red, key=1, label="lambda expression", style=dashed];
m40_64 -> m40_62  [color=blue, key=0, style=bold];
m40_97 -> m40_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.CircularDependenciesContext", style=dashed];
m40_97 -> m40_4  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.CircularDependenciesContext", style=dashed];
m40_98 -> m40_8  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", style=dashed];
m40_98 -> m40_9  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", style=dashed];
m40_98 -> m40_16  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", style=dashed];
m40_98 -> m40_22  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", style=dashed];
m40_98 -> m40_26  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", style=dashed];
m40_98 -> m40_30  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenConstructors", style=dashed];
m40_99 -> m40_22  [color=darkseagreen4, key=1, label=request, style=dashed];
m40_100 -> m40_34  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties", style=dashed];
m40_100 -> m40_35  [color=red, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties", style=dashed];
m40_100 -> m40_38  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties", style=dashed];
m40_100 -> m40_41  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties", style=dashed];
m40_100 -> m40_44  [color=red, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties", style=dashed];
m40_100 -> m40_45  [color=red, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveTwoWayCircularReferenceBetweenProperties", style=dashed];
m40_101 -> m40_51  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", style=dashed];
m40_101 -> m40_52  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", style=dashed];
m40_101 -> m40_53  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", style=dashed];
m40_101 -> m40_57  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", style=dashed];
m40_101 -> m40_60  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", style=dashed];
m40_101 -> m40_63  [color=red, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", style=dashed];
m40_101 -> m40_66  [color=red, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenConstructors", style=dashed];
m40_102 -> m40_60  [color=darkseagreen4, key=1, label=request, style=dashed];
m40_103 -> m40_69  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", style=dashed];
m40_103 -> m40_70  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", style=dashed];
m40_103 -> m40_71  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", style=dashed];
m40_103 -> m40_74  [color=red, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", style=dashed];
m40_103 -> m40_77  [color=red, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", style=dashed];
m40_103 -> m40_80  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", style=dashed];
m40_103 -> m40_81  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", style=dashed];
m40_103 -> m40_82  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.CircularDependenciesTests.WhenDependenciesHaveThreeWayCircularReferenceBetweenProperties", style=dashed];
}
