digraph  {
d14 [color=green, community=0, label="Console.WriteLine(''Method {0} exists in {1} but not in {2}'', x, restClientImplementationType.FullName, restClientInterfaceType.FullName)", span="20-20", cluster="lambda expression"];
d15 [label="Exit lambda expression", span="20-20", cluster="lambda expression"];
d16 [label="Entry System.Console.WriteLine(string, object, object, object)", span="0-0", cluster="System.Console.WriteLine(string, object, object, object)"];
d13 [label="Entry lambda expression", span="20-20", cluster="lambda expression"];
d24 [label="Entry lambda expression", span="31-31", cluster="lambda expression"];
d25 [color=green, community=0, label="x.Name", span="31-31", cluster="lambda expression"];
d27 [label="Entry lambda expression", span="31-31", cluster="lambda expression"];
d28 [color=green, community=0, label="x.Name", span="31-31", cluster="lambda expression"];
d26 [label="Exit lambda expression", span="31-31", cluster="lambda expression"];
d29 [label="Exit lambda expression", span="31-31", cluster="lambda expression"];
d1 [color=green, community=0, label="var restClientImplementationType = typeof(RestClient)", span="14-14", cluster="RestSharp.Tests.InterfaceImplementationTests.IRestSharp_Has_All_RestSharp_Signatures()"];
d2 [color=green, community=0, label="var restClientInterfaceType = typeof(IRestClient)", span="15-15", cluster="RestSharp.Tests.InterfaceImplementationTests.IRestSharp_Has_All_RestSharp_Signatures()"];
d4 [color=green, community=0, label="IEnumerable<string> compareResult = CompareTypes(restClientImplementationType, restClientInterfaceType, bindingFlags)", span="19-19", cluster="RestSharp.Tests.InterfaceImplementationTests.IRestSharp_Has_All_RestSharp_Signatures()"];
d5 [color=green, community=0, label="compareResult.ToList().ForEach(x => Console.WriteLine(''Method {0} exists in {1} but not in {2}'', x, restClientImplementationType.FullName, \\nrestClientInterfaceType.FullName))", span="20-20", cluster="RestSharp.Tests.InterfaceImplementationTests.IRestSharp_Has_All_RestSharp_Signatures()"];
d0 [label="Entry RestSharp.Tests.InterfaceImplementationTests.IRestSharp_Has_All_RestSharp_Signatures()", span="11-11", cluster="RestSharp.Tests.InterfaceImplementationTests.IRestSharp_Has_All_RestSharp_Signatures()"];
d3 [color=green, community=0, label="var bindingFlags = BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly", span="16-16", cluster="RestSharp.Tests.InterfaceImplementationTests.IRestSharp_Has_All_RestSharp_Signatures()"];
d6 [color=green, community=0, label="Assert.Equal(0, compareResult.Count())", span="23-23", cluster="RestSharp.Tests.InterfaceImplementationTests.IRestSharp_Has_All_RestSharp_Signatures()"];
d8 [label="Entry RestSharp.Tests.InterfaceImplementationTests.CompareTypes(System.Type, System.Type, System.Reflection.BindingFlags)", span="26-26", cluster="RestSharp.Tests.InterfaceImplementationTests.CompareTypes(System.Type, System.Type, System.Reflection.BindingFlags)"];
d9 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()"];
d10 [label="Entry System.Collections.Generic.List<T>.ForEach(System.Action<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.ForEach(System.Action<T>)"];
d7 [label="Exit RestSharp.Tests.InterfaceImplementationTests.IRestSharp_Has_All_RestSharp_Signatures()", span="11-11", cluster="RestSharp.Tests.InterfaceImplementationTests.IRestSharp_Has_All_RestSharp_Signatures()"];
d11 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()"];
d17 [color=green, community=0, label="MethodInfo[] typeTMethodInfo = type1.GetMethods(bindingFlags)", span="28-28", cluster="RestSharp.Tests.InterfaceImplementationTests.CompareTypes(System.Type, System.Type, System.Reflection.BindingFlags)"];
d18 [color=green, community=0, label="MethodInfo[] typeXMethodInfo = type2.GetMethods(bindingFlags)", span="29-29", cluster="RestSharp.Tests.InterfaceImplementationTests.CompareTypes(System.Type, System.Type, System.Reflection.BindingFlags)"];
d19 [color=green, community=0, label="return typeTMethodInfo.Select(x => x.Name).Except(typeXMethodInfo.Select(x => x.Name));", span="31-31", cluster="RestSharp.Tests.InterfaceImplementationTests.CompareTypes(System.Type, System.Type, System.Reflection.BindingFlags)"];
d21 [label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetMethods(System.Reflection.BindingFlags)"];
d20 [label="Exit RestSharp.Tests.InterfaceImplementationTests.CompareTypes(System.Type, System.Type, System.Reflection.BindingFlags)", span="26-26", cluster="RestSharp.Tests.InterfaceImplementationTests.CompareTypes(System.Type, System.Type, System.Reflection.BindingFlags)"];
m0_6 [label="Entry RestSharp.IRestClient.ExecuteAsyncGet(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="79-79", cluster="RestSharp.IRestClient.ExecuteAsyncGet(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", file="IRestClient.cs"];
m0_7 [label="Exit RestSharp.IRestClient.ExecuteAsyncGet(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="79-79", cluster="RestSharp.IRestClient.ExecuteAsyncGet(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", file="IRestClient.cs"];
m0_8 [label="Entry RestSharp.IRestClient.ExecuteAsyncPost(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="87-87", cluster="RestSharp.IRestClient.ExecuteAsyncPost(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", file="IRestClient.cs"];
m0_9 [label="Exit RestSharp.IRestClient.ExecuteAsyncPost(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="87-87", cluster="RestSharp.IRestClient.ExecuteAsyncPost(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", file="IRestClient.cs"];
m0_0 [label="Entry RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", span="52-52", cluster="RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file="IRestClient.cs"];
m0_1 [label="Exit RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", span="52-52", cluster="RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file="IRestClient.cs"];
m0_10 [label="Entry RestSharp.IRestClient.ExecuteAsyncGet<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="96-96", cluster="RestSharp.IRestClient.ExecuteAsyncGet<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", file="IRestClient.cs"];
m0_11 [label="Exit RestSharp.IRestClient.ExecuteAsyncGet<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="96-96", cluster="RestSharp.IRestClient.ExecuteAsyncGet<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", file="IRestClient.cs"];
m0_4 [label="Entry RestSharp.IRestClient.BuildUri(RestSharp.IRestRequest)", span="71-71", cluster="RestSharp.IRestClient.BuildUri(RestSharp.IRestRequest)", file="IRestClient.cs"];
m0_5 [label="Exit RestSharp.IRestClient.BuildUri(RestSharp.IRestRequest)", span="71-71", cluster="RestSharp.IRestClient.BuildUri(RestSharp.IRestRequest)", file="IRestClient.cs"];
m0_2 [label="Entry RestSharp.IRestClient.ExecuteAsync<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>)", span="54-54", cluster="RestSharp.IRestClient.ExecuteAsync<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>)", file="IRestClient.cs"];
m0_3 [label="Exit RestSharp.IRestClient.ExecuteAsync<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>)", span="54-54", cluster="RestSharp.IRestClient.ExecuteAsync<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>)", file="IRestClient.cs"];
m0_12 [label="Entry RestSharp.IRestClient.ExecuteAsyncPost<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="105-105", cluster="RestSharp.IRestClient.ExecuteAsyncPost<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", file="IRestClient.cs"];
m0_13 [label="Exit RestSharp.IRestClient.ExecuteAsyncPost<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="105-105", cluster="RestSharp.IRestClient.ExecuteAsyncPost<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", file="IRestClient.cs"];
m1_0_12 [label="Entry RestSharp.IRestClient.ExecuteAsyncPost<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="105-105", cluster="RestSharp.IRestClient.ExecuteAsyncPost<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", file=merged];
m1_0_13 [label="Exit RestSharp.IRestClient.ExecuteAsyncPost<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="105-105", cluster="RestSharp.IRestClient.ExecuteAsyncPost<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", file=merged];
m1_0_0 [label="Entry RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", span="52-52", cluster="RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file=merged];
m1_0_1 [label="Exit RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", span="52-52", cluster="RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file=merged];
m1_11 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file=merged];
m1_0_8 [label="Entry RestSharp.IRestClient.ExecuteAsyncPost(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="87-87", cluster="RestSharp.IRestClient.ExecuteAsyncPost(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", file=merged];
m1_0_9 [label="Exit RestSharp.IRestClient.ExecuteAsyncPost(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="87-87", cluster="RestSharp.IRestClient.ExecuteAsyncPost(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", file=merged];
m1_0 [label="Entry RestSharp.Tests.InterfaceImplementationTests.IRestSharp_Has_All_RestSharp_Signatures()", span="11-11", cluster="RestSharp.Tests.InterfaceImplementationTests.IRestSharp_Has_All_RestSharp_Signatures()", file=merged];
m1_1 [color=green, community=0, label="var restClientImplementationType = typeof(RestClient)", span="14-14", cluster="RestSharp.Tests.InterfaceImplementationTests.IRestSharp_Has_All_RestSharp_Signatures()", file=merged];
m1_2 [color=green, community=0, label="var restClientInterfaceType = typeof(IRestClient)", span="15-15", cluster="RestSharp.Tests.InterfaceImplementationTests.IRestSharp_Has_All_RestSharp_Signatures()", file=merged];
m1_4 [color=green, community=0, label="IEnumerable<string> compareResult = CompareTypes(restClientImplementationType, restClientInterfaceType, bindingFlags)", span="19-19", cluster="RestSharp.Tests.InterfaceImplementationTests.IRestSharp_Has_All_RestSharp_Signatures()", file=merged];
m1_5 [color=green, community=0, label="compareResult.ToList().ForEach(x => Console.WriteLine(''Method {0} exists in {1} but not in {2}'', x, restClientImplementationType.FullName, \\nrestClientInterfaceType.FullName))", span="20-20", cluster="RestSharp.Tests.InterfaceImplementationTests.IRestSharp_Has_All_RestSharp_Signatures()", file=merged];
m1_3 [color=green, community=0, label="var bindingFlags = BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly", span="16-16", cluster="RestSharp.Tests.InterfaceImplementationTests.IRestSharp_Has_All_RestSharp_Signatures()", file=merged];
m1_6 [color=green, community=0, label="Assert.Equal(0, compareResult.Count())", span="23-23", cluster="RestSharp.Tests.InterfaceImplementationTests.IRestSharp_Has_All_RestSharp_Signatures()", file=merged];
m1_7 [label="Exit RestSharp.Tests.InterfaceImplementationTests.IRestSharp_Has_All_RestSharp_Signatures()", span="11-11", cluster="RestSharp.Tests.InterfaceImplementationTests.IRestSharp_Has_All_RestSharp_Signatures()", file=merged];
m1_0_4 [label="Entry RestSharp.IRestClient.BuildUri(RestSharp.IRestRequest)", span="71-71", cluster="RestSharp.IRestClient.BuildUri(RestSharp.IRestRequest)", file=merged];
m1_0_5 [label="Exit RestSharp.IRestClient.BuildUri(RestSharp.IRestRequest)", span="71-71", cluster="RestSharp.IRestClient.BuildUri(RestSharp.IRestRequest)", file=merged];
m1_0_2 [label="Entry RestSharp.IRestClient.ExecuteAsync<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>)", span="54-54", cluster="RestSharp.IRestClient.ExecuteAsync<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>)", file=merged];
m1_0_3 [label="Exit RestSharp.IRestClient.ExecuteAsync<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>)", span="54-54", cluster="RestSharp.IRestClient.ExecuteAsync<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>)", file=merged];
m1_16 [label="Entry System.Console.WriteLine(string, object, object, object)", span="0-0", cluster="System.Console.WriteLine(string, object, object, object)", file=merged];
m1_0_10 [label="Entry RestSharp.IRestClient.ExecuteAsyncGet<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="96-96", cluster="RestSharp.IRestClient.ExecuteAsyncGet<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", file=merged];
m1_0_11 [label="Exit RestSharp.IRestClient.ExecuteAsyncGet<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="96-96", cluster="RestSharp.IRestClient.ExecuteAsyncGet<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", file=merged];
m1_10 [label="Entry System.Collections.Generic.List<T>.ForEach(System.Action<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.ForEach(System.Action<T>)", file=merged];
m1_8 [label="Entry RestSharp.Tests.InterfaceImplementationTests.CompareTypes(System.Type, System.Type, System.Reflection.BindingFlags)", span="26-26", cluster="RestSharp.Tests.InterfaceImplementationTests.CompareTypes(System.Type, System.Type, System.Reflection.BindingFlags)", file=merged];
m1_17 [color=green, community=0, label="MethodInfo[] typeTMethodInfo = type1.GetMethods(bindingFlags)", span="28-28", cluster="RestSharp.Tests.InterfaceImplementationTests.CompareTypes(System.Type, System.Type, System.Reflection.BindingFlags)", file=merged];
m1_18 [color=green, community=0, label="MethodInfo[] typeXMethodInfo = type2.GetMethods(bindingFlags)", span="29-29", cluster="RestSharp.Tests.InterfaceImplementationTests.CompareTypes(System.Type, System.Type, System.Reflection.BindingFlags)", file=merged];
m1_19 [color=green, community=0, label="return typeTMethodInfo.Select(x => x.Name).Except(typeXMethodInfo.Select(x => x.Name));", span="31-31", cluster="RestSharp.Tests.InterfaceImplementationTests.CompareTypes(System.Type, System.Type, System.Reflection.BindingFlags)", file=merged];
m1_20 [label="Exit RestSharp.Tests.InterfaceImplementationTests.CompareTypes(System.Type, System.Type, System.Reflection.BindingFlags)", span="26-26", cluster="RestSharp.Tests.InterfaceImplementationTests.CompareTypes(System.Type, System.Type, System.Reflection.BindingFlags)", file=merged];
m1_0_6 [label="Entry RestSharp.IRestClient.ExecuteAsyncGet(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="79-79", cluster="RestSharp.IRestClient.ExecuteAsyncGet(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", file=merged];
m1_0_7 [label="Exit RestSharp.IRestClient.ExecuteAsyncGet(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="79-79", cluster="RestSharp.IRestClient.ExecuteAsyncGet(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", file=merged];
m1_27 [label="Entry lambda expression", span="31-31", cluster="lambda expression", file=merged];
m1_14 [color=green, community=0, label="Console.WriteLine(''Method {0} exists in {1} but not in {2}'', x, restClientImplementationType.FullName, restClientInterfaceType.FullName)", span="20-20", cluster="lambda expression", file=merged];
m1_15 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file=merged];
m1_13 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file=merged];
m1_24 [label="Entry lambda expression", span="31-31", cluster="lambda expression", file=merged];
m1_25 [color=green, community=0, label="x.Name", span="31-31", cluster="lambda expression", file=merged];
m1_28 [color=green, community=0, label="x.Name", span="31-31", cluster="lambda expression", file=merged];
m1_26 [label="Exit lambda expression", span="31-31", cluster="lambda expression", file=merged];
m1_29 [label="Exit lambda expression", span="31-31", cluster="lambda expression", file=merged];
m1_9 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file=merged];
d12;
d22;
d23;
d30;
d31;
m1_12;
m1_22;
m1_23;
m1_30;
m1_31;
d14 -> d15  [key=0, color=green, style=solid];
d14 -> d16  [key=2, color=green, style=dotted];
d15 -> d13  [key=0, color=blue, style=bold];
d13 -> d14  [key=0, color=green, style=solid];
d24 -> d25  [key=0, color=green, style=solid];
d25 -> d26  [key=0, color=green, style=solid];
d27 -> d28  [key=0, color=green, style=solid];
d28 -> d29  [key=0, color=green, style=solid];
d26 -> d24  [key=0, color=blue, style=bold];
d29 -> d27  [key=0, color=blue, style=bold];
d1 -> d14  [key=1, color=green, label=restClientImplementationType, style=dashed];
d1 -> d2  [key=0, color=green, style=solid];
d1 -> d4  [key=1, color=green, label=restClientImplementationType, style=dashed];
d1 -> d5  [key=1, color=green, label=restClientImplementationType, style=dashed];
d2 -> d14  [key=1, color=green, label=restClientInterfaceType, style=dashed];
d2 -> d4  [key=1, color=green, label=restClientInterfaceType, style=dashed];
d2 -> d5  [key=1, color=green, label=restClientInterfaceType, style=dashed];
d2 -> d3  [key=0, color=green, style=solid];
d4 -> d5  [key=0, color=green, style=solid];
d4 -> d6  [key=1, color=green, label=compareResult, style=dashed];
d4 -> d8  [key=2, color=green, style=dotted];
d5 -> d13  [key=1, color=green, label="lambda expression", style=dashed];
d5 -> d9  [key=2, color=green, style=dotted];
d5 -> d6  [key=0, color=green, style=solid];
d5 -> d10  [key=2, color=green, style=dotted];
d0 -> d1  [key=0, color=green, style=solid];
d3 -> d4  [key=0, color=green, style=solid];
d3 -> d3  [key=3, color=green, label="Local variable System.Reflection.BindingFlags bindingFlags", style=bold];
d6 -> d7  [key=0, color=green, style=solid];
d6 -> d11  [key=2, color=green, style=dotted];
d6 -> d12  [key=2, color=green, style=dotted];
d8 -> d1  [key=3, color=green, label="Parameter variable System.Type type1", style=bold];
d8 -> d2  [key=3, color=green, label="Parameter variable System.Type type2", style=bold];
d8 -> d3  [key=3, color=green, label="Parameter variable System.Reflection.BindingFlags bindingFlags", style=bold];
d8 -> d17  [key=0, color=green, style=solid];
d8 -> d18  [key=1, color=green, label="System.Reflection.BindingFlags", style=dashed];
d7 -> d0  [key=0, color=blue, style=bold];
d17 -> d18  [key=0, color=green, style=solid];
d17 -> d19  [key=1, color=green, label=typeTMethodInfo, style=dashed];
d17 -> d21  [key=2, color=green, style=dotted];
d18 -> d19  [key=0, color=green, style=solid];
d18 -> d21  [key=2, color=green, style=dotted];
d19 -> d24  [key=1, color=green, label="lambda expression", style=dashed];
d19 -> d27  [key=1, color=green, label="lambda expression", style=dashed];
d19 -> d20  [key=0, color=green, style=solid];
d19 -> d22  [key=2, color=green, style=dotted];
d19 -> d23  [key=2, color=green, style=dotted];
d20 -> d8  [key=0, color=blue, style=bold];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_6  [key=0, color=blue, style=bold];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_8  [key=0, color=blue, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [key=0, color=blue, style=bold];
m0_10 -> m0_11  [key=0, style=solid];
m0_11 -> m0_10  [key=0, color=blue, style=bold];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_4  [key=0, color=blue, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_2  [key=0, color=blue, style=bold];
m0_12 -> m0_13  [key=0, style=solid];
m0_13 -> m0_12  [key=0, color=blue, style=bold];
m1_0_12 -> m1_0_13  [key=0, style=solid];
m1_0_13 -> m1_0_12  [key=0, color=blue, style=bold];
m1_0_0 -> m1_0_1  [key=0, style=solid];
m1_0_1 -> m1_0_0  [key=0, color=blue, style=bold];
m1_0_8 -> m1_0_9  [key=0, style=solid];
m1_0_9 -> m1_0_8  [key=0, color=blue, style=bold];
m1_0 -> m1_1  [key=0, color=green, style=solid];
m1_1 -> m1_14  [key=1, color=green, label=restClientImplementationType, style=dashed];
m1_1 -> m1_2  [key=0, color=green, style=solid];
m1_1 -> m1_4  [key=1, color=green, label=restClientImplementationType, style=dashed];
m1_1 -> m1_5  [key=1, color=green, label=restClientImplementationType, style=dashed];
m1_2 -> m1_14  [key=1, color=green, label=restClientInterfaceType, style=dashed];
m1_2 -> m1_4  [key=1, color=green, label=restClientInterfaceType, style=dashed];
m1_2 -> m1_5  [key=1, color=green, label=restClientInterfaceType, style=dashed];
m1_2 -> m1_3  [key=0, color=green, style=solid];
m1_4 -> m1_5  [key=0, color=green, style=solid];
m1_4 -> m1_6  [key=1, color=green, label=compareResult, style=dashed];
m1_4 -> m1_8  [key=2, color=green, style=dotted];
m1_5 -> m1_13  [key=1, color=green, label="lambda expression", style=dashed];
m1_5 -> m1_9  [key=2, color=green, style=dotted];
m1_5 -> m1_6  [key=0, color=green, style=solid];
m1_5 -> m1_10  [key=2, color=green, style=dotted];
m1_3 -> m1_4  [key=0, color=green, style=solid];
m1_3 -> m1_3  [key=3, color=green, label="Local variable System.Reflection.BindingFlags bindingFlags", style=bold];
m1_6 -> m1_7  [key=0, color=green, style=solid];
m1_6 -> m1_11  [key=2, color=green, style=dotted];
m1_6 -> m1_12  [key=2, color=green, style=dotted];
m1_7 -> m1_0  [key=0, color=blue, style=bold];
m1_0_4 -> m1_0_5  [key=0, style=solid];
m1_0_5 -> m1_0_4  [key=0, color=blue, style=bold];
m1_0_2 -> m1_0_3  [key=0, style=solid];
m1_0_3 -> m1_0_2  [key=0, color=blue, style=bold];
m1_0_10 -> m1_0_11  [key=0, style=solid];
m1_0_11 -> m1_0_10  [key=0, color=blue, style=bold];
m1_8 -> m1_1  [key=3, color=green, label="Parameter variable System.Type type1", style=bold];
m1_8 -> m1_2  [key=3, color=green, label="Parameter variable System.Type type2", style=bold];
m1_8 -> m1_3  [key=3, color=green, label="Parameter variable System.Reflection.BindingFlags bindingFlags", style=bold];
m1_8 -> m1_17  [key=0, color=green, style=solid];
m1_8 -> m1_18  [key=1, color=green, label="System.Reflection.BindingFlags", style=dashed];
m1_17 -> m1_18  [key=0, color=green, style=solid];
m1_17 -> m1_19  [key=1, color=green, label=typeTMethodInfo, style=dashed];
m1_17 -> d21  [key=2, color=green, style=dotted];
m1_18 -> m1_19  [key=0, color=green, style=solid];
m1_18 -> d21  [key=2, color=green, style=dotted];
m1_19 -> m1_24  [key=1, color=green, label="lambda expression", style=dashed];
m1_19 -> m1_27  [key=1, color=green, label="lambda expression", style=dashed];
m1_19 -> m1_20  [key=0, color=green, style=solid];
m1_19 -> m1_22  [key=2, color=green, style=dotted];
m1_19 -> m1_23  [key=2, color=green, style=dotted];
m1_20 -> m1_8  [key=0, color=blue, style=bold];
m1_0_6 -> m1_0_7  [key=0, style=solid];
m1_0_7 -> m1_0_6  [key=0, color=blue, style=bold];
m1_27 -> m1_28  [key=0, color=green, style=solid];
m1_14 -> m1_15  [key=0, color=green, style=solid];
m1_14 -> m1_16  [key=2, color=green, style=dotted];
m1_15 -> m1_13  [key=0, color=blue, style=bold];
m1_13 -> m1_14  [key=0, color=green, style=solid];
m1_24 -> m1_25  [key=0, color=green, style=solid];
m1_25 -> m1_26  [key=0, color=green, style=solid];
m1_28 -> m1_29  [key=0, color=green, style=solid];
m1_26 -> m1_24  [key=0, color=blue, style=bold];
m1_29 -> m1_27  [key=0, color=blue, style=bold];
d30 -> d14  [key=1, color=green, label=restClientImplementationType, style=dashed];
d31 -> d14  [key=1, color=green, label=restClientInterfaceType, style=dashed];
m1_30 -> m1_14  [key=1, color=green, label=restClientImplementationType, style=dashed];
m1_31 -> m1_14  [key=1, color=green, label=restClientInterfaceType, style=dashed];
}
