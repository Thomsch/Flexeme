digraph  {
n0 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", span="14-14"];
n1 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", label="Method httpMethod = Method.GET", span="16-16"];
d11 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", color=green, community=0, label="RestRequest request = new RestRequest(RequestBodyCapturer.Resource, httpMethod)", prediction=0, span="30-30"];
n13 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.Generic<T>()", label="Entry RestSharp.IntegrationTests.Helpers.Handlers.Generic<T>()", span="59-59"];
n14 [cluster="RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", label="Entry RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", span="21-21"];
n15 [cluster="RestSharp.RestClient.RestClient(string)", label="Entry RestSharp.RestClient.RestClient(string)", span="174-174"];
n16 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", label="Entry RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", span="101-101"];
n17 [cluster="RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", label="Entry RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="427-427"];
n18 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
n19 [cluster="RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse>)", label="Entry RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse>)", span="17-17"];
n22 [cluster="lambda expression", label="Entry lambda expression", span="30-30"];
n20 [cluster="System.Threading.WaitHandle.WaitOne()", label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
n12 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", span="14-14"];
n21 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasNoRequestBody()", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasNoRequestBody()", span="199-199"];
d12 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", color=green, community=0, label="string contentType = ''text/plain''", prediction=0, span="32-32"];
d14 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", color=green, community=0, label="request.AddParameter(contentType, bodyData, ParameterType.RequestBody)", prediction=0, span="35-35"];
d16 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", color=green, community=0, label="_client.ExecuteAsync(request, response => resetEvent.Set())", prediction=0, span="39-39"];
d13 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", color=green, community=0, label="string bodyData = ''abc123 foo bar baz BING!''", prediction=4, span="33-33"];
d15 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", color=green, community=0, label="ManualResetEvent resetEvent = new ManualResetEvent(false)", prediction=5, span="37-37"];
d17 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", color=green, community=0, label="resetEvent.WaitOne()", prediction=5, span="40-40"];
d27 [cluster="lambda expression", color=green, community=0, label="resetEvent.Set()", prediction=5, span="39-39"];
d18 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", color=green, community=0, label="AssertHasNoRequestBody()", prediction=8, span="42-42"];
n136 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasNoRequestBody()", label="Assert.Null(RequestBodyCapturer.CapturedContentType)", span="201-201"];
n137 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasNoRequestBody()", label="Assert.AreEqual(false, RequestBodyCapturer.CapturedHasEntityBody)", span="202-202"];
n138 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasNoRequestBody()", label="Assert.AreEqual(string.Empty, RequestBodyCapturer.CapturedEntityBody)", span="203-203"];
n139 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasNoRequestBody()", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasNoRequestBody()", span="199-199"];
n24 [cluster="lambda expression", label="Exit lambda expression", span="30-30"];
n25 [cluster="System.Threading.EventWaitHandle.Set()", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
d39 [cluster="lambda expression", color=green, community=0, label="resetEvent.Set()", prediction=9, span="53-53"];
n38 [cluster="lambda expression", label="Exit lambda expression", span="48-48"];
d54 [cluster="lambda expression", color=green, community=0, label="resetEvent.Set()", prediction=10, span="73-73"];
n55 [cluster="lambda expression", label="Exit lambda expression", span="72-72"];
d68 [cluster="lambda expression", color=green, community=0, label="resetEvent.Set()", prediction=11, span="93-93"];
n71 [cluster="lambda expression", label="Exit lambda expression", span="96-96"];
d82 [cluster="lambda expression", color=green, community=0, label="resetEvent.Set()", prediction=12, span="113-113"];
n87 [cluster="lambda expression", label="Exit lambda expression", span="120-120"];
d96 [cluster="lambda expression", color=green, community=0, label="resetEvent.Set()", prediction=13, span="133-133"];
n103 [cluster="lambda expression", label="Exit lambda expression", span="144-144"];
d110 [cluster="lambda expression", color=green, community=0, label="resetEvent.Set()", prediction=14, span="153-153"];
n119 [cluster="lambda expression", label="Exit lambda expression", span="168-168"];
d124 [cluster="lambda expression", color=green, community=0, label="resetEvent.Set()", prediction=15, span="173-173"];
n135 [cluster="lambda expression", label="Exit lambda expression", span="192-192"];
n26 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Have_No_Body_Added_To_POST_Request()", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Have_No_Body_Added_To_POST_Request()", span="38-38"];
n27 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Have_No_Body_Added_To_POST_Request()", label="Method httpMethod = Method.POST", span="40-40"];
d32 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Have_No_Body_Added_To_POST_Request()", color=green, community=0, label="RestRequest request = new RestRequest(RequestBodyCapturer.Resource, httpMethod)", prediction=0, span="50-50"];
n36 [cluster="lambda expression", label="Entry lambda expression", span="48-48"];
n35 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Have_No_Body_Added_To_POST_Request()", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Have_No_Body_Added_To_POST_Request()", span="38-38"];
d33 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Have_No_Body_Added_To_POST_Request()", color=green, community=0, label="ManualResetEvent resetEvent = new ManualResetEvent(false)", prediction=9, span="51-51"];
d34 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Have_No_Body_Added_To_POST_Request()", color=green, community=0, label="_client.ExecuteAsync(request, response => resetEvent.Set())", prediction=0, span="53-53"];
d35 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Have_No_Body_Added_To_POST_Request()", color=green, community=0, label="resetEvent.WaitOne()", prediction=9, span="54-54"];
d36 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Have_No_Body_Added_To_POST_Request()", color=green, community=0, label="AssertHasNoRequestBody()", prediction=20, span="56-56"];
n39 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_POST_Request()", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_POST_Request()", span="56-56"];
n40 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_POST_Request()", label="Method httpMethod = Method.POST", span="58-58"];
d43 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_POST_Request()", color=green, community=0, label="RestRequest request = new RestRequest(RequestBodyCapturer.Resource, httpMethod)", prediction=0, span="64-64"];
n53 [cluster="lambda expression", label="Entry lambda expression", span="72-72"];
n51 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_POST_Request()", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_POST_Request()", span="56-56"];
n52 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasRequestBody(string, string)", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasRequestBody(string, string)", span="206-206"];
d44 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_POST_Request()", color=green, community=0, label="string contentType = ''text/plain''", prediction=0, span="66-66"];
d45 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_POST_Request()", color=green, community=0, label="string bodyData = ''abc123 foo bar baz BING!''", prediction=0, span="67-67"];
d46 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_POST_Request()", color=green, community=0, label="request.AddParameter(contentType, bodyData, ParameterType.RequestBody)", prediction=0, span="69-69"];
d50 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_POST_Request()", color=green, community=0, label="AssertHasRequestBody(contentType, bodyData)", prediction=0, span="76-76"];
d48 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_POST_Request()", color=green, community=0, label="_client.ExecuteAsync(request, response => resetEvent.Set())", prediction=0, span="73-73"];
d47 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_POST_Request()", color=green, community=0, label="ManualResetEvent resetEvent = new ManualResetEvent(false)", prediction=10, span="71-71"];
d49 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_POST_Request()", color=green, community=0, label="resetEvent.WaitOne()", prediction=10, span="74-74"];
n142 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasRequestBody(string, string)", label="Assert.AreEqual(contentType, RequestBodyCapturer.CapturedContentType)", span="208-208"];
n144 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasRequestBody(string, string)", label="Assert.AreEqual(bodyData, RequestBodyCapturer.CapturedEntityBody)", span="210-210"];
d59 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PUT_Request()", color=green, community=0, label="string contentType = ''text/plain''", prediction=0, span="86-86"];
d60 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PUT_Request()", color=green, community=0, label="string bodyData = ''abc123 foo bar baz BING!''", prediction=0, span="87-87"];
d73 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_DELETE_Request()", color=green, community=0, label="string contentType = ''text/plain''", prediction=0, span="106-106"];
d74 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_DELETE_Request()", color=green, community=0, label="string bodyData = ''abc123 foo bar baz BING!''", prediction=0, span="107-107"];
d101 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_OPTIONS_Request()", color=green, community=0, label="string contentType = ''text/plain''", prediction=0, span="146-146"];
d102 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_OPTIONS_Request()", color=green, community=0, label="string bodyData = ''abc123 foo bar baz BING!''", prediction=0, span="147-147"];
d115 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", color=green, community=0, label="string contentType = ''text/plain''", prediction=0, span="166-166"];
d116 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", color=green, community=0, label="string bodyData = ''abc123 foo bar baz BING!''", prediction=0, span="167-167"];
n143 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasRequestBody(string, string)", label="Assert.AreEqual(true, RequestBodyCapturer.CapturedHasEntityBody)", span="209-209"];
n145 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasRequestBody(string, string)", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasRequestBody(string, string)", span="206-206"];
n56 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PUT_Request()", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PUT_Request()", span="80-80"];
n57 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PUT_Request()", label="Method httpMethod = Method.PUT", span="82-82"];
d58 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PUT_Request()", color=green, community=0, label="RestRequest request = new RestRequest(RequestBodyCapturer.Resource, httpMethod)", prediction=0, span="84-84"];
n69 [cluster="lambda expression", label="Entry lambda expression", span="96-96"];
n68 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PUT_Request()", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PUT_Request()", span="80-80"];
d61 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PUT_Request()", color=green, community=0, label="request.AddParameter(contentType, bodyData, ParameterType.RequestBody)", prediction=0, span="89-89"];
d65 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PUT_Request()", color=green, community=0, label="AssertHasRequestBody(contentType, bodyData)", prediction=0, span="96-96"];
d63 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PUT_Request()", color=green, community=0, label="_client.ExecuteAsync(request, response => resetEvent.Set())", prediction=0, span="93-93"];
d62 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PUT_Request()", color=green, community=0, label="ManualResetEvent resetEvent = new ManualResetEvent(false)", prediction=11, span="91-91"];
d64 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PUT_Request()", color=green, community=0, label="resetEvent.WaitOne()", prediction=11, span="94-94"];
n72 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_DELETE_Request()", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_DELETE_Request()", span="104-104"];
n73 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_DELETE_Request()", label="Method httpMethod = Method.DELETE", span="106-106"];
d72 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_DELETE_Request()", color=green, community=0, label="RestRequest request = new RestRequest(RequestBodyCapturer.Resource, httpMethod)", prediction=0, span="104-104"];
n85 [cluster="lambda expression", label="Entry lambda expression", span="120-120"];
n84 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_DELETE_Request()", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_DELETE_Request()", span="104-104"];
d75 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_DELETE_Request()", color=green, community=0, label="request.AddParameter(contentType, bodyData, ParameterType.RequestBody)", prediction=0, span="109-109"];
d79 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_DELETE_Request()", color=green, community=0, label="AssertHasRequestBody(contentType, bodyData)", prediction=0, span="116-116"];
d77 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_DELETE_Request()", color=green, community=0, label="_client.ExecuteAsync(request, response => resetEvent.Set())", prediction=0, span="113-113"];
d76 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_DELETE_Request()", color=green, community=0, label="ManualResetEvent resetEvent = new ManualResetEvent(false)", prediction=12, span="111-111"];
d78 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_DELETE_Request()", color=green, community=0, label="resetEvent.WaitOne()", prediction=12, span="114-114"];
n88 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_HEAD_Request()", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_HEAD_Request()", span="128-128"];
n89 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_HEAD_Request()", label="Method httpMethod = Method.HEAD", span="130-130"];
d86 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_HEAD_Request()", color=green, community=0, label="RestRequest request = new RestRequest(RequestBodyCapturer.Resource, httpMethod)", prediction=0, span="124-124"];
n101 [cluster="lambda expression", label="Entry lambda expression", span="144-144"];
n100 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_HEAD_Request()", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_HEAD_Request()", span="128-128"];
d87 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_HEAD_Request()", color=green, community=0, label="string contentType = ''text/plain''", prediction=0, span="126-126"];
d88 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_HEAD_Request()", color=green, community=0, label="string bodyData = ''abc123 foo bar baz BING!''", prediction=51, span="127-127"];
d89 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_HEAD_Request()", color=green, community=0, label="request.AddParameter(contentType, bodyData, ParameterType.RequestBody)", prediction=0, span="129-129"];
d91 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_HEAD_Request()", color=green, community=0, label="_client.ExecuteAsync(request, response => resetEvent.Set())", prediction=0, span="133-133"];
d90 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_HEAD_Request()", color=green, community=0, label="ManualResetEvent resetEvent = new ManualResetEvent(false)", prediction=13, span="131-131"];
d92 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_HEAD_Request()", color=green, community=0, label="resetEvent.WaitOne()", prediction=13, span="134-134"];
d93 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_HEAD_Request()", color=green, community=0, label="AssertHasNoRequestBody()", prediction=56, span="136-136"];
n104 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_OPTIONS_Request()", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_OPTIONS_Request()", span="152-152"];
n105 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_OPTIONS_Request()", label="Method httpMethod = Method.OPTIONS", span="154-154"];
d100 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_OPTIONS_Request()", color=green, community=0, label="RestRequest request = new RestRequest(RequestBodyCapturer.Resource, httpMethod)", prediction=0, span="144-144"];
n117 [cluster="lambda expression", label="Entry lambda expression", span="168-168"];
n116 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_OPTIONS_Request()", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_OPTIONS_Request()", span="152-152"];
d103 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_OPTIONS_Request()", color=green, community=0, label="request.AddParameter(contentType, bodyData, ParameterType.RequestBody)", prediction=0, span="149-149"];
d107 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_OPTIONS_Request()", color=green, community=0, label="AssertHasRequestBody(contentType, bodyData)", prediction=0, span="156-156"];
d105 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_OPTIONS_Request()", color=green, community=0, label="_client.ExecuteAsync(request, response => resetEvent.Set())", prediction=0, span="153-153"];
d104 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_OPTIONS_Request()", color=green, community=0, label="ManualResetEvent resetEvent = new ManualResetEvent(false)", prediction=14, span="151-151"];
d106 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_OPTIONS_Request()", color=green, community=0, label="resetEvent.WaitOne()", prediction=14, span="154-154"];
n120 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", span="176-176"];
n121 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", label="Method httpMethod = Method.PATCH", span="178-178"];
d114 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", color=green, community=0, label="RestRequest request = new RestRequest(RequestBodyCapturer.Resource, httpMethod)", prediction=0, span="164-164"];
n133 [cluster="lambda expression", label="Entry lambda expression", span="192-192"];
n132 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", span="176-176"];
d117 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", color=green, community=0, label="request.AddParameter(contentType, bodyData, ParameterType.RequestBody)", prediction=0, span="169-169"];
d121 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", color=green, community=0, label="AssertHasRequestBody(contentType, bodyData)", prediction=0, span="176-176"];
d119 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", color=green, community=0, label="_client.ExecuteAsync(request, response => resetEvent.Set())", prediction=0, span="173-173"];
d118 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", color=green, community=0, label="ManualResetEvent resetEvent = new ManualResetEvent(false)", prediction=15, span="171-171"];
d120 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", color=green, community=0, label="resetEvent.WaitOne()", prediction=15, span="174-174"];
n146 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.Capture(System.Net.HttpListenerContext)", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.Capture(System.Net.HttpListenerContext)", span="223-223"];
n147 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.Capture(System.Net.HttpListenerContext)", label="HttpListenerRequest request = context.Request", span="225-225"];
n148 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.Capture(System.Net.HttpListenerContext)", label="CapturedContentType = request.ContentType", span="227-227"];
n149 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.Capture(System.Net.HttpListenerContext)", label="CapturedHasEntityBody = request.HasEntityBody", span="228-228"];
n150 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.Capture(System.Net.HttpListenerContext)", label="CapturedEntityBody = StreamToString(request.InputStream)", span="229-229"];
n151 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.Capture(System.Net.HttpListenerContext)", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.Capture(System.Net.HttpListenerContext)", span="223-223"];
n152 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.StreamToString(System.IO.Stream)", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.StreamToString(System.IO.Stream)", span="232-232"];
n153 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.StreamToString(System.IO.Stream)", label="StreamReader streamReader = new StreamReader(stream)", span="234-234"];
n154 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.StreamToString(System.IO.Stream)", label="return streamReader.ReadToEnd();", span="235-235"];
n156 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
n155 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.StreamToString(System.IO.Stream)", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.StreamToString(System.IO.Stream)", span="232-232"];
n157 [cluster="System.IO.StreamReader.ReadToEnd()", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
d3 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.CreateClient()", color=green, community=0, label="_server = SimpleServer.Create(BaseUrl, Handlers.Generic<RequestBodyCapturer>())", prediction=69, span="21-21"];
d4 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.CreateClient()", color=green, community=0, label="_client = new RestClient(BaseUrl)", prediction=70, span="22-22"];
d2 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.CreateClient()", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.CreateClient()", span="19-19"];
d5 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.CreateClient()", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.CreateClient()", span="19-19"];
m0_163 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="AsyncTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m0_26 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", span="38-38"];
m0_27 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", file="AsyncTests.cs", label="Uri baseUrl = new Uri(''http://localhost:8888/'')", span="40-40"];
m0_28 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", file="AsyncTests.cs", label="string val = ''Basic async test''", span="41-41"];
m0_30 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl.AbsoluteUri, Handlers.EchoValue(val))", span="45-45"];
m0_31 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="47-47"];
m0_29 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", file="AsyncTests.cs", label="ManualResetEvent resetEvent = new ManualResetEvent(false)", span="43-43"];
m0_33 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", file="AsyncTests.cs", label="client.ExecuteAsync(request, response =>\r\n                                             {\r\n                                                 \\nAssert.NotNull(response.Content);\r\n                                                 Assert.AreEqual(val, response.Content);\r\n                                                 \\nresetEvent.Set();\r\n                                             })", span="50-55"];
m0_34 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", file="AsyncTests.cs", label="resetEvent.WaitOne()", span="57-57"];
m0_32 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", file="AsyncTests.cs", label="RestRequest request = new RestRequest('''')", span="48-48"];
m0_35 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", span="38-38"];
m0_73 [cluster="System.Exception.Exception(string)", file="AsyncTests.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m0_14 [cluster="RestSharp.RestClient.RestClient(System.Uri)", file="AsyncTests.cs", label="Entry RestSharp.RestClient.RestClient(System.Uri)", span="165-165"];
m0_13 [cluster="RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", span="21-21"];
m0_136 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_GET_TaskAsync()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Timeout_GET_TaskAsync()", span="213-213"];
m0_137 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_GET_TaskAsync()", file="AsyncTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="215-215"];
m0_138 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_GET_TaskAsync()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl, Handlers.Generic<ResponseHandler>())", span="217-217"];
m0_139 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_GET_TaskAsync()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="219-219"];
m0_140 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_GET_TaskAsync()", file="AsyncTests.cs", label="IRestRequest request = new RestRequest(''timeout'', Method.GET).AddBody(''Body_Content'')", span="220-220"];
m0_134 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync_With_Response_Type()", color=green, community=0, file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync_With_Response_Type()", prediction=71, span="196-196"];
m0_141 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_GET_TaskAsync()", file="AsyncTests.cs", label="request.Timeout = 500", span="223-223"];
m0_145 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", color=green, community=0, file="AsyncTests.cs", label="var response = await client.ExecuteTaskAsync(request)", prediction=72, span="230-230"];
m0_146 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_GET_TaskAsync()", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Timeout_GET_TaskAsync()", span="213-213"];
m0_164 [cluster="int.Parse(string)", file="AsyncTests.cs", label="Entry int.Parse(string)", span="0-0"];
m0_11 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="AsyncTests.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m0_15 [cluster="RestSharp.RestRequest.RestRequest(string)", file="AsyncTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string)", span="94-94"];
m0_0 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", span="14-14"];
m0_1 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", file="AsyncTests.cs", label="Uri baseUrl = new Uri(''http://localhost:8888/'')", span="16-16"];
m0_2 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", file="AsyncTests.cs", label="string val = ''Basic async test''", span="17-17"];
m0_4 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl.AbsoluteUri, Handlers.EchoValue(val))", span="21-21"];
m0_5 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="23-23"];
m0_3 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", file="AsyncTests.cs", label="ManualResetEvent resetEvent = new ManualResetEvent(false)", span="19-19"];
m0_7 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", file="AsyncTests.cs", label="client.ExecuteAsync(request, (response, asyncHandle) =>\r\n                                             {\r\n                                                 \\nAssert.NotNull(response.Content);\r\n                                                 Assert.AreEqual(val, response.Content);\r\n                                                 \\nresetEvent.Set();\r\n                                             })", span="26-31"];
m0_8 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", file="AsyncTests.cs", label="resetEvent.WaitOne()", span="33-33"];
m0_6 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", file="AsyncTests.cs", label="RestRequest request = new RestRequest('''')", span="24-24"];
m0_9 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", span="14-14"];
m0_25 [cluster="System.Threading.EventWaitHandle.Set()", file="AsyncTests.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m0_70 [cluster="lambda expression", file="AsyncTests.cs", label="Entry lambda expression", span="91-91"];
m0_20 [cluster="lambda expression", file="AsyncTests.cs", label="Assert.AreEqual(val, response.Content)", span="29-29"];
m0_21 [cluster="lambda expression", file="AsyncTests.cs", label="resetEvent.Set()", span="30-30"];
m0_18 [cluster="lambda expression", file="AsyncTests.cs", label="Entry lambda expression", span="26-31"];
m0_19 [cluster="lambda expression", file="AsyncTests.cs", label="Assert.NotNull(response.Content)", span="28-28"];
m0_22 [cluster="lambda expression", file="AsyncTests.cs", label="Exit lambda expression", span="26-31"];
m0_38 [cluster="lambda expression", file="AsyncTests.cs", label="Assert.AreEqual(val, response.Content)", span="53-53"];
m0_39 [cluster="lambda expression", file="AsyncTests.cs", label="resetEvent.Set()", span="54-54"];
m0_36 [cluster="lambda expression", file="AsyncTests.cs", label="Entry lambda expression", span="50-55"];
m0_37 [cluster="lambda expression", file="AsyncTests.cs", label="Assert.NotNull(response.Content)", span="52-52"];
m0_40 [cluster="lambda expression", file="AsyncTests.cs", label="Exit lambda expression", span="50-55"];
m0_71 [cluster="lambda expression", file="AsyncTests.cs", label="throw new Exception(exceptionMessage);", span="91-91"];
m0_72 [cluster="lambda expression", file="AsyncTests.cs", label="Exit lambda expression", span="91-91"];
m0_52 [cluster="RestSharp.RestClient.RestClient(string)", file="AsyncTests.cs", label="Entry RestSharp.RestClient.RestClient(string)", span="174-174"];
m0_55 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", span="81-81"];
m0_56 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", file="AsyncTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="83-83"];
m0_57 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", file="AsyncTests.cs", label="string exceptionMessage = ''Thrown from OnBeforeDeserialization''", span="84-84"];
m0_58 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl, Handlers.Generic<ResponseHandler>())", span="86-86"];
m0_59 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="88-88"];
m0_61 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", file="AsyncTests.cs", label="request.OnBeforeDeserialization += r => { throw new Exception(exceptionMessage); }", span="91-91"];
m0_65 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", file="AsyncTests.cs", label="Assert.AreEqual(exceptionMessage, response.ErrorMessage)", span="99-99"];
m0_60 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", color=green, community=0, file="AsyncTests.cs", label="var response = await client.ExecuteTaskAsync<Response>(request)", prediction=73, span="91-91"];
m0_66 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", file="AsyncTests.cs", label="Assert.AreEqual(ResponseStatus.Error, response.ResponseStatus)", span="100-100"];
m0_67 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", span="81-81"];
m0_68 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.Generic<T>()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.Helpers.Handlers.Generic<T>()", span="59-59"];
m0_147 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file="AsyncTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", span="101-101"];
m0_41 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_TaskAsync()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_TaskAsync()", span="62-62"];
m0_42 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_TaskAsync()", file="AsyncTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="64-64"];
m0_43 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_TaskAsync()", file="AsyncTests.cs", label="string val = ''Basic async task test''", span="65-65"];
m0_44 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_TaskAsync()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl, Handlers.EchoValue(val))", span="67-67"];
m0_45 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_TaskAsync()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="69-69"];
m0_46 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_TaskAsync()", file="AsyncTests.cs", label="RestRequest request = new RestRequest('''')", span="70-70"];
m0_47 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_TaskAsync()", color=green, community=0, file="AsyncTests.cs", label="var result = await client.ExecuteTaskAsync(request)", prediction=74, span="71-71"];
m0_48 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_TaskAsync()", color=green, community=0, file="AsyncTests.cs", label="Assert.NotNull(result.Content)", prediction=75, span="73-73"];
m0_51 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_TaskAsync()", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_TaskAsync()", span="62-62"];
m0_178 [cluster="System.Threading.Thread.Sleep(int)", file="AsyncTests.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m0_74 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_ExecuteGetTaskAsync_With_Response_Type()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Perform_ExecuteGetTaskAsync_With_Response_Type()", span="105-105"];
m0_75 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_ExecuteGetTaskAsync_With_Response_Type()", color=green, community=0, file="AsyncTests.cs", label="var response = await client.ExecuteTaskAsync<Response>(request)", prediction=76, span="107-107"];
m0_76 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_ExecuteGetTaskAsync_With_Response_Type()", color=green, community=0, file="AsyncTests.cs", label="Assert.AreEqual(''Works!'', response.Data.Message)", prediction=77, span="109-109"];
m0_77 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_ExecuteGetTaskAsync_With_Response_Type()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="111-111"];
m0_78 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_ExecuteGetTaskAsync_With_Response_Type()", file="AsyncTests.cs", label="RestRequest request = new RestRequest(''success'')", span="112-112"];
m0_82 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_ExecuteGetTaskAsync_With_Response_Type()", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Perform_ExecuteGetTaskAsync_With_Response_Type()", span="105-105"];
m0_165 [cluster="RestSharp.IntegrationTests.AsyncTests.ResponseHandler.error(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.ResponseHandler.error(System.Net.HttpListenerContext)", span="265-265"];
m0_166 [cluster="RestSharp.IntegrationTests.AsyncTests.ResponseHandler.error(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="context.Response.StatusCode = 400", span="267-267"];
m0_167 [cluster="RestSharp.IntegrationTests.AsyncTests.ResponseHandler.error(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="context.Response.Headers.Add(''Content-Type'', ''application/xml'')", span="268-268"];
m0_168 [cluster="RestSharp.IntegrationTests.AsyncTests.ResponseHandler.error(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="context.Response.OutputStream.WriteStringUtf8(\r\n                    @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<\\nResponse>\r\n    <Error>\r\n        <Message>Not found!</Message>\r\n    </Error>\r\n</Response>'')", span="269-275"];
m0_169 [cluster="RestSharp.IntegrationTests.AsyncTests.ResponseHandler.error(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.ResponseHandler.error(System.Net.HttpListenerContext)", span="265-265"];
m0_103 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="AsyncTests.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m0_149 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", span="236-236"];
m0_150 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", file="AsyncTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="238-238"];
m0_151 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl, Handlers.Generic<ResponseHandler>())", span="240-240"];
m0_152 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="242-242"];
m0_153 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", file="AsyncTests.cs", label="IRestRequest request = new RestRequest(''timeout'', Method.PUT).AddBody(''Body_Content'')", span="243-243"];
m0_154 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", file="AsyncTests.cs", label="request.Timeout = 500", span="246-246"];
m0_158 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", file="AsyncTests.cs", label="Assert.AreEqual(ResponseStatus.TimedOut, response.ResponseStatus)", span="254-254"];
m0_159 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", span="236-236"];
m0_171 [cluster="System.IO.Stream.WriteStringUtf8(string)", file="AsyncTests.cs", label="Entry System.IO.Stream.WriteStringUtf8(string)", span="7-7"];
m0_106 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", span="160-160"];
m0_107 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="162-162"];
m0_108 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="string val = ''Basic async task test''", span="163-163"];
m0_109 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl, Handlers.EchoValue(val))", span="165-165"];
m0_110 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="167-167"];
m0_111 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="RestRequest request = new RestRequest(''timeout'')", span="168-168"];
m0_113 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="Task<IRestResponse<Response>> task = client.ExecuteTaskAsync<Response>(request, cancellationTokenSource.Token)", span="170-170"];
m0_112 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="CancellationTokenSource cancellationTokenSource = new CancellationTokenSource()", span="169-169"];
m0_114 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="cancellationTokenSource.Cancel()", span="172-172"];
m0_115 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="Assert.True(task.IsCanceled)", span="174-174"];
m0_116 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync()", color=green, community=0, file="AsyncTests.cs", label="var response = await client.ExecuteTaskAsync(request)", prediction=78, span="177-177"];
m0_10 [cluster="System.Uri.Uri(string)", file="AsyncTests.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m0_104 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="AsyncTests.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m0_172 [cluster="RestSharp.IntegrationTests.AsyncTests.ResponseHandler.success(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.ResponseHandler.success(System.Net.HttpListenerContext)", span="278-278"];
m0_173 [cluster="RestSharp.IntegrationTests.AsyncTests.ResponseHandler.success(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="context.Response.OutputStream.WriteStringUtf8(\r\n                    @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<\\nResponse>\r\n    <Success>\r\n        <Message>Works!</Message>\r\n    </Success>\r\n</Response>'')", span="280-286"];
m0_174 [cluster="RestSharp.IntegrationTests.AsyncTests.ResponseHandler.success(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.ResponseHandler.success(System.Net.HttpListenerContext)", span="278-278"];
m0_175 [cluster="RestSharp.IntegrationTests.AsyncTests.ResponseHandler.timeout(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.ResponseHandler.timeout(System.Net.HttpListenerContext)", span="289-289"];
m0_176 [cluster="RestSharp.IntegrationTests.AsyncTests.ResponseHandler.timeout(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="Thread.Sleep(1000)", span="291-291"];
m0_177 [cluster="RestSharp.IntegrationTests.AsyncTests.ResponseHandler.timeout(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.ResponseHandler.timeout(System.Net.HttpListenerContext)", span="289-289"];
m0_170 [cluster="System.Net.WebHeaderCollection.Add(string, string)", file="AsyncTests.cs", label="Entry System.Net.WebHeaderCollection.Add(string, string)", span="0-0"];
m0_148 [cluster="RestSharp.RestRequest.AddBody(object)", file="AsyncTests.cs", label="Entry RestSharp.RestRequest.AddBody(object)", span="267-267"];
m0_126 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync_With_Response_Type()", span="196-196"];
m0_127 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="198-198"];
m0_128 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl, UrlToStatusCodeHandler)", span="200-200"];
m0_129 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="202-202"];
m0_130 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="RestRequest request = new RestRequest(''404'')", span="203-203"];
m0_125 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync()", color=green, community=0, file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync()", prediction=79, span="179-179"];
m0_12 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.EchoValue(string)", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.Helpers.Handlers.EchoValue(string)", span="21-21"];
m0_92 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", span="140-140"];
m0_93 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", file="AsyncTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="142-142"];
m0_94 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", file="AsyncTests.cs", label="string val = ''Basic async task test''", span="143-143"];
m0_95 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl, Handlers.EchoValue(val))", span="145-145"];
m0_96 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="147-147"];
m0_97 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", file="AsyncTests.cs", label="RestRequest request = new RestRequest(''timeout'')", span="148-148"];
m0_99 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", file="AsyncTests.cs", label="Task<IRestResponse> task = client.ExecuteTaskAsync(request, cancellationTokenSource.Token)", span="150-150"];
m0_98 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", file="AsyncTests.cs", label="CancellationTokenSource cancellationTokenSource = new CancellationTokenSource()", span="149-149"];
m0_100 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", file="AsyncTests.cs", label="cancellationTokenSource.Cancel()", span="152-152"];
m0_101 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", file="AsyncTests.cs", label="Assert.True(task.IsCanceled)", span="154-154"];
m0_102 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", span="140-140"];
m0_54 [cluster="System.Threading.Tasks.Task.Wait()", file="AsyncTests.cs", label="Entry System.Threading.Tasks.Task.Wait()", span="0-0"];
m0_117 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync()", color=green, community=0, file="AsyncTests.cs", label="Assert.AreEqual(HttpStatusCode.NotFound, response.StatusCode)", prediction=80, span="179-179"];
m0_118 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync()", file="AsyncTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="181-181"];
m0_119 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl, UrlToStatusCodeHandler)", span="183-183"];
m0_120 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="185-185"];
m0_121 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync()", file="AsyncTests.cs", label="RestRequest request = new RestRequest(''404'')", span="186-186"];
m0_83 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GetTaskAsync_With_Response_Type()", color=green, community=0, file="AsyncTests.cs", label="var response = await client.GetTaskAsync<Response>(request)", prediction=81, span="122-122"];
m0_84 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GetTaskAsync_With_Response_Type()", color=green, community=0, file="AsyncTests.cs", label="Assert.AreEqual(''Works!'', response.Message)", prediction=82, span="124-124"];
m0_85 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GetTaskAsync_With_Response_Type()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl, Handlers.Generic<ResponseHandler>())", span="126-126"];
m0_86 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GetTaskAsync_With_Response_Type()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="128-128"];
m0_87 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GetTaskAsync_With_Response_Type()", file="AsyncTests.cs", label="RestRequest request = new RestRequest(''success'')", span="129-129"];
m0_91 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GetTaskAsync_With_Response_Type()", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Perform_GetTaskAsync_With_Response_Type()", span="122-122"];
m0_160 [cluster="RestSharp.IntegrationTests.AsyncTests.UrlToStatusCodeHandler(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.UrlToStatusCodeHandler(System.Net.HttpListenerContext)", span="258-258"];
m0_161 [cluster="RestSharp.IntegrationTests.AsyncTests.UrlToStatusCodeHandler(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="obj.Response.StatusCode = int.Parse(obj.Request.Url.Segments.Last())", span="260-260"];
m0_162 [cluster="RestSharp.IntegrationTests.AsyncTests.UrlToStatusCodeHandler(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.UrlToStatusCodeHandler(System.Net.HttpListenerContext)", span="258-258"];
m1_0 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Gzip_Compressed_Content()", file="CompressionTests.cs", label="Entry RestSharp.IntegrationTests.CompressionTests.Can_Handle_Gzip_Compressed_Content()", span="12-12"];
m1_1 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Gzip_Compressed_Content()", file="CompressionTests.cs", label="Uri baseUrl = new Uri(''http://localhost:8888/'')", span="14-14"];
m1_2 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Gzip_Compressed_Content()", file="CompressionTests.cs", label="SimpleServer.Create(baseUrl.AbsoluteUri, GzipEchoValue(''This is some gzipped content''))", span="16-16"];
m1_3 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Gzip_Compressed_Content()", file="CompressionTests.cs", label="RestClient client = new RestClient(baseUrl)", span="18-18"];
m1_4 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Gzip_Compressed_Content()", file="CompressionTests.cs", label="RestRequest request = new RestRequest('''')", span="19-19"];
m1_5 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Gzip_Compressed_Content()", file="CompressionTests.cs", label="IRestResponse response = client.Execute(request)", span="20-20"];
m1_6 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Gzip_Compressed_Content()", file="CompressionTests.cs", label="Assert.AreEqual(''This is some gzipped content'', response.Content)", span="22-22"];
m1_7 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Gzip_Compressed_Content()", file="CompressionTests.cs", label="Exit RestSharp.IntegrationTests.CompressionTests.Can_Handle_Gzip_Compressed_Content()", span="12-12"];
m1_24 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Uncompressed_Content()", file="CompressionTests.cs", label="Entry RestSharp.IntegrationTests.CompressionTests.Can_Handle_Uncompressed_Content()", span="42-42"];
m1_25 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Uncompressed_Content()", file="CompressionTests.cs", label="Uri baseUrl = new Uri(''http://localhost:8888/'')", span="44-44"];
m1_26 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Uncompressed_Content()", file="CompressionTests.cs", label="SimpleServer.Create(baseUrl.AbsoluteUri, Handlers.EchoValue(''This is some sample content''))", span="46-46"];
m1_27 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Uncompressed_Content()", file="CompressionTests.cs", label="RestClient client = new RestClient(baseUrl)", span="48-48"];
m1_28 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Uncompressed_Content()", file="CompressionTests.cs", label="RestRequest request = new RestRequest('''')", span="49-49"];
m1_29 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Uncompressed_Content()", file="CompressionTests.cs", label="IRestResponse response = client.Execute(request)", span="50-50"];
m1_30 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Uncompressed_Content()", file="CompressionTests.cs", label="Assert.AreEqual(''This is some sample content'', response.Content)", span="52-52"];
m1_31 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Uncompressed_Content()", file="CompressionTests.cs", label="Exit RestSharp.IntegrationTests.CompressionTests.Can_Handle_Uncompressed_Content()", span="42-42"];
m1_15 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Deflate_Compressed_Content()", file="CompressionTests.cs", label="Entry RestSharp.IntegrationTests.CompressionTests.Can_Handle_Deflate_Compressed_Content()", span="27-27"];
m1_16 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Deflate_Compressed_Content()", file="CompressionTests.cs", label="Uri baseUrl = new Uri(''http://localhost:8888/'')", span="29-29"];
m1_17 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Deflate_Compressed_Content()", file="CompressionTests.cs", label="SimpleServer.Create(baseUrl.AbsoluteUri, DeflateEchoValue(''This is some deflated content''))", span="31-31"];
m1_18 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Deflate_Compressed_Content()", file="CompressionTests.cs", label="RestClient client = new RestClient(baseUrl)", span="33-33"];
m1_19 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Deflate_Compressed_Content()", file="CompressionTests.cs", label="RestRequest request = new RestRequest('''')", span="34-34"];
m1_20 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Deflate_Compressed_Content()", file="CompressionTests.cs", label="IRestResponse response = client.Execute(request)", span="35-35"];
m1_21 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Deflate_Compressed_Content()", file="CompressionTests.cs", label="Assert.AreEqual(''This is some deflated content'', response.Content)", span="37-37"];
m1_22 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Deflate_Compressed_Content()", file="CompressionTests.cs", label="Exit RestSharp.IntegrationTests.CompressionTests.Can_Handle_Deflate_Compressed_Content()", span="27-27"];
m1_9 [cluster="RestSharp.IntegrationTests.CompressionTests.GzipEchoValue(string)", file="CompressionTests.cs", label="Entry RestSharp.IntegrationTests.CompressionTests.GzipEchoValue(string)", span="56-56"];
m1_34 [cluster="RestSharp.IntegrationTests.CompressionTests.GzipEchoValue(string)", file="CompressionTests.cs", label="Exit RestSharp.IntegrationTests.CompressionTests.GzipEchoValue(string)", span="56-56"];
m1_11 [cluster="RestSharp.RestClient.RestClient(System.Uri)", file="CompressionTests.cs", label="Entry RestSharp.RestClient.RestClient(System.Uri)", span="165-165"];
m1_32 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.EchoValue(string)", file="CompressionTests.cs", label="Entry RestSharp.IntegrationTests.Helpers.Handlers.EchoValue(string)", span="21-21"];
m1_42 [cluster="System.IO.Stream.WriteStringUtf8(string)", file="CompressionTests.cs", label="Entry System.IO.Stream.WriteStringUtf8(string)", span="7-7"];
m1_8 [cluster="System.Uri.Uri(string)", file="CompressionTests.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m1_12 [cluster="RestSharp.RestRequest.RestRequest(string)", file="CompressionTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string)", span="94-94"];
m1_40 [cluster="System.Net.WebHeaderCollection.Add(string, string)", file="CompressionTests.cs", label="Entry System.Net.WebHeaderCollection.Add(string, string)", span="0-0"];
m1_23 [cluster="RestSharp.IntegrationTests.CompressionTests.DeflateEchoValue(string)", file="CompressionTests.cs", label="Entry RestSharp.IntegrationTests.CompressionTests.DeflateEchoValue(string)", span="69-69"];
m1_44 [cluster="lambda expression", color=green, community=0, file="CompressionTests.cs", label="context.Response.Headers.Add(''Content-encoding'', ''deflate'')", prediction=83, span="70-70"];
m1_41 [cluster="System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionMode, bool)", file="CompressionTests.cs", label="Entry System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionMode, bool)", span="0-0"];
m1_50 [cluster="System.IO.Compression.DeflateStream.DeflateStream(System.IO.Stream, System.IO.Compression.CompressionMode, bool)", file="CompressionTests.cs", label="Entry System.IO.Compression.DeflateStream.DeflateStream(System.IO.Stream, System.IO.Compression.CompressionMode, bool)", span="0-0"];
m1_45 [cluster="lambda expression", color=green, community=1, file="CompressionTests.cs", label="DeflateStream gzip =\r\n                    new DeflateStream(context.Response.OutputStream, CompressionMode.Compress, true)", prediction=84, span="72-73"];
m1_36 [cluster="lambda expression", color=green, community=0, file="CompressionTests.cs", label="GZipStream gzip = new GZipStream(context.Response.OutputStream, CompressionMode.Compress, true)", prediction=85, span="61-61"];
m1_37 [cluster="lambda expression", color=green, community=0, file="CompressionTests.cs", label="gzip.WriteStringUtf8(value)", prediction=86, span="63-63"];
m1_46 [cluster="lambda expression", color=green, community=0, file="CompressionTests.cs", label="gzip.WriteStringUtf8(value)", prediction=87, span="75-75"];
m1_35 [cluster="lambda expression", color=green, community=0, file="CompressionTests.cs", label="context.Response.Headers.Add(''Content-encoding'', ''gzip'')", prediction=88, span="59-59"];
m1_39 [cluster="lambda expression", file="CompressionTests.cs", label="Exit lambda expression", span="58-66"];
m1_49 [cluster="lambda expression", file="CompressionTests.cs", label="Exit lambda expression", span="71-79"];
m2_14 [cluster="System.IO.File.ReadAllBytes(string)", file="FileTests.cs", label="Entry System.IO.File.ReadAllBytes(string)", span="0-0"];
m2_30 [cluster="RestSharp.IntegrationTests.FileTests.Writes_Response_To_Stream()", color=green, community=0, file="FileTests.cs", label="string tempFile = Path.GetTempFileName()", prediction=89, span="49-49"];
m2_15 [cluster="RestSharp.IntegrationTests.FileTests.CreateClient()", file="FileTests.cs", label="Entry RestSharp.IntegrationTests.FileTests.CreateClient()", span="31-31"];
m2_16 [cluster="RestSharp.IntegrationTests.FileTests.Writes_Response_To_Stream()", color=green, community=0, file="FileTests.cs", label="Entry RestSharp.IntegrationTests.FileTests.Writes_Response_To_Stream()", prediction=90, span="27-27"];
m2_11 [cluster="RestSharp.IntegrationTests.FileTests.ShutdownServer()", file="FileTests.cs", label="Entry RestSharp.IntegrationTests.FileTests.ShutdownServer()", span="25-25"];
m2_0 [cluster="RestSharp.IntegrationTests.FileTests.Handles_Binary_File_Download()", file="FileTests.cs", label="Entry RestSharp.IntegrationTests.FileTests.Handles_Binary_File_Download()", span="11-11"];
m2_9 [cluster="System.Uri.Uri(string)", file="FileTests.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m2_8 [cluster="lambda expression", color=green, community=0, file="FileTests.cs", label="Handlers.FileHandler(c, _path)", prediction=90, span="21-21"];
m2_29 [cluster="System.IO.Path.GetTempFileName()", file="FileTests.cs", label="Entry System.IO.Path.GetTempFileName()", span="0-0"];
m2_36 [cluster="RestSharp.IntegrationTests.FileTests.Writes_Response_To_Stream()", color=green, community=0, file="FileTests.cs", label="byte[] expected = File.ReadAllBytes(_path + ''\\Assets\\Koala.jpg'')", prediction=92, span="63-63"];
m2_12 [cluster="RestSharp.IntegrationTests.FileTests.ShutdownServer()", color=green, community=0, file="FileTests.cs", label="_server.Dispose()", prediction=90, span="27-27"];
m2_10 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.FileHandler(System.Net.HttpListenerContext, string)", file="FileTests.cs", label="Entry RestSharp.IntegrationTests.Helpers.Handlers.FileHandler(System.Net.HttpListenerContext, string)", span="30-30"];
m2_13 [cluster="RestSharp.IntegrationTests.FileTests.ShutdownServer()", file="FileTests.cs", label="Exit RestSharp.IntegrationTests.FileTests.ShutdownServer()", span="25-25"];
m2_31 [cluster="RestSharp.RestClient.RestClient(string)", color=green, community=0, file="FileTests.cs", label="Entry RestSharp.RestClient.RestClient(string)", prediction=89, span="174-174"];
m2_35 [cluster="lambda expression", color=green, community=0, file="FileTests.cs", label="Exit lambda expression", prediction=89, span="40-40"];
m2_32 [cluster="RestSharp.IntegrationTests.FileTests.Writes_Response_To_Stream()", color=green, community=1, file="FileTests.cs", label="RestRequest request = new RestRequest(''Assets/Koala.jpg'')\r\n                {\r\n                    ResponseWriter = (responseStream) => \\nresponseStream.CopyTo(writer)\r\n                }", prediction=89, span="53-56"];
m2_37 [cluster="RestSharp.IntegrationTests.FileTests.Writes_Response_To_Stream()", color=green, community=0, file="FileTests.cs", label="Assert.AreEqual(expected, fromTemp)", prediction=89, span="65-65"];
m2_33 [cluster="lambda expression", color=green, community=0, file="FileTests.cs", label="Entry lambda expression", prediction=90, span="40-40"];
m2_28 [cluster="RestSharp.IntegrationTests.FileTests.Writes_Response_To_Stream()", file="FileTests.cs", label="Exit RestSharp.IntegrationTests.FileTests.Writes_Response_To_Stream()", span="27-27"];
m2_42 [cluster="lambda expression", file="FileTests.cs", label="Entry lambda expression", span="55-55"];
m2_43 [cluster="lambda expression", color=green, community=0, file="FileTests.cs", label="responseStream.CopyTo(writer)", prediction=89, span="55-55"];
m2_44 [cluster="lambda expression", file="FileTests.cs", label="Exit lambda expression", span="55-55"];
m3_25 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.Generic<T>()", file="Handlers.cs", label="return ctx =>\r\n                   {\r\n                       string methodName = ctx.Request.Url.Segments.Last();\r\n                       \\nMethodInfo method = typeof(T).GetMethod(methodName,\r\n                           BindingFlags.NonPublic | BindingFlags.Public | \\nBindingFlags.Instance | BindingFlags.Static);\r\n\r\n                       if (method.IsStatic)\r\n                       {\r\n                           \\nmethod.Invoke(null, new object[] { ctx });\r\n                       }\r\n                       else\r\n                       {\r\n                           \\nmethod.Invoke(new T(), new object[] { ctx });\r\n                       }\r\n                   };", span="61-75"];
m3_26 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.Generic<T>()", file="Handlers.cs", label="Exit RestSharp.IntegrationTests.Helpers.Handlers.Generic<T>()", span="59-59"];
m3_34 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="Handlers.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m3_10 [cluster="System.IO.Stream.WriteStringUtf8(string)", file="Handlers.cs", label="Entry System.IO.Stream.WriteStringUtf8(string)", span="7-7"];
m3_4 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.EchoValue(string)", file="Handlers.cs", label="Entry RestSharp.IntegrationTests.Helpers.Handlers.EchoValue(string)", span="21-21"];
m3_5 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.EchoValue(string)", file="Handlers.cs", label="return ctx => ctx.Response.OutputStream.WriteStringUtf8(value);", span="23-23"];
m3_6 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.EchoValue(string)", file="Handlers.cs", label="Exit RestSharp.IntegrationTests.Helpers.Handlers.EchoValue(string)", span="21-21"];
m3_36 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="Handlers.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m3_11 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.FileHandler(System.Net.HttpListenerContext, string)", file="Handlers.cs", label="Entry RestSharp.IntegrationTests.Helpers.Handlers.FileHandler(System.Net.HttpListenerContext, string)", span="30-30"];
m3_12 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.FileHandler(System.Net.HttpListenerContext, string)", color=green, community=1, file="Handlers.cs", label="var pathToFile = Path.Combine(path, Path.Combine(context.Request.Url.Segments.Select(s => s.Replace(''/'', ''''))\r\n                                                    \\n.ToArray()))", prediction=100, span="32-33"];
m3_14 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.FileHandler(System.Net.HttpListenerContext, string)", file="Handlers.cs", label="reader.BaseStream.CopyTo(context.Response.OutputStream)", span="37-37"];
m3_13 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.FileHandler(System.Net.HttpListenerContext, string)", color=green, community=0, file="Handlers.cs", label="var reader = new StreamReader(pathToFile)", prediction=101, span="35-35"];
m3_15 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.FileHandler(System.Net.HttpListenerContext, string)", file="Handlers.cs", label="Exit RestSharp.IntegrationTests.Helpers.Handlers.FileHandler(System.Net.HttpListenerContext, string)", span="30-30"];
m3_3 [cluster="System.IO.Stream.CopyTo(System.IO.Stream)", file="Handlers.cs", label="Entry System.IO.Stream.CopyTo(System.IO.Stream)", span="0-0"];
m3_0 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.Echo(System.Net.HttpListenerContext)", file="Handlers.cs", label="Entry RestSharp.IntegrationTests.Helpers.Handlers.Echo(System.Net.HttpListenerContext)", span="13-13"];
m3_1 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.Echo(System.Net.HttpListenerContext)", file="Handlers.cs", label="context.Request.InputStream.CopyTo(context.Response.OutputStream)", span="15-15"];
m3_2 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.Echo(System.Net.HttpListenerContext)", file="Handlers.cs", label="Exit RestSharp.IntegrationTests.Helpers.Handlers.Echo(System.Net.HttpListenerContext)", span="13-13"];
m3_19 [cluster="System.IO.StreamReader.StreamReader(string)", file="Handlers.cs", label="Entry System.IO.StreamReader.StreamReader(string)", span="0-0"];
m3_23 [cluster="string.Replace(string, string)", file="Handlers.cs", label="Entry string.Replace(string, string)", span="0-0"];
m3_27 [cluster="lambda expression", file="Handlers.cs", label="Entry lambda expression", span="61-75"];
m3_8 [cluster="lambda expression", file="Handlers.cs", label="ctx.Response.OutputStream.WriteStringUtf8(value)", span="23-23"];
m3_7 [cluster="lambda expression", file="Handlers.cs", label="Entry lambda expression", span="23-23"];
m3_9 [cluster="lambda expression", file="Handlers.cs", label="Exit lambda expression", span="23-23"];
m3_22 [cluster="lambda expression", color=green, community=0, file="Handlers.cs", label="Exit lambda expression", prediction=102, span="32-32"];
m3_20 [cluster="lambda expression", file="Handlers.cs", label="Entry lambda expression", span="32-32"];
m3_28 [cluster="lambda expression", file="Handlers.cs", label="string methodName = ctx.Request.Url.Segments.Last()", span="63-63"];
m3_31 [cluster="lambda expression", file="Handlers.cs", label="method.Invoke(null, new object[] { ctx })", span="69-69"];
m3_32 [cluster="lambda expression", file="Handlers.cs", label="method.Invoke(new T(), new object[] { ctx })", span="73-73"];
m3_29 [cluster="lambda expression", file="Handlers.cs", label="MethodInfo method = typeof(T).GetMethod(methodName,\r\n                           BindingFlags.NonPublic | BindingFlags.Public | \\nBindingFlags.Instance | BindingFlags.Static)", span="64-65"];
m3_30 [cluster="lambda expression", file="Handlers.cs", label="method.IsStatic", span="67-67"];
m3_33 [cluster="lambda expression", file="Handlers.cs", label="Exit lambda expression", span="61-75"];
m3_35 [cluster="System.Type.GetMethod(string, System.Reflection.BindingFlags)", file="Handlers.cs", label="Entry System.Type.GetMethod(string, System.Reflection.BindingFlags)", span="0-0"];
m4_0 [file=merged, label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", span="14-14"];
m4_1 [file=merged, label="Method httpMethod = Method.GET", span="16-16"];
m4_4 [color=green, community=0, file=merged, label="_client = new RestClient(BaseUrl)", prediction=103, span="22-22"];
m4_3 [color=green, community=0, file=merged, label="_server = SimpleServer.Create(BaseUrl, Handlers.Generic<RequestBodyCapturer>())", prediction=104, span="21-21"];
m4_13 [color=green, community=0, file=merged, label="string bodyData = ''abc123 foo bar baz BING!''", prediction=105, span="33-33"];
m4_14 [color=green, community=0, file=merged, label="request.AddParameter(contentType, bodyData, ParameterType.RequestBody)", prediction=106, span="35-35"];
m4_15 [color=green, community=0, file=merged, label="ManualResetEvent resetEvent = new ManualResetEvent(false)", prediction=107, span="37-37"];
m4_16 [color=green, community=0, file=merged, label="_client.ExecuteAsync(request, response => resetEvent.Set())", prediction=108, span="39-39"];
m4_17 [color=green, community=0, file=merged, label="resetEvent.WaitOne()", prediction=107, span="40-40"];
m4_18 [color=green, community=0, file=merged, label="AssertHasNoRequestBody()", prediction=110, span="42-42"];
m4_19 [file=merged, label="Entry RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse>)", span="17-17"];
m4_22 [file=merged, label="Entry lambda expression", span="30-30"];
m4_20 [file=merged, label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
m4_12 [color=green, community=0, file=merged, label="string contentType = ''text/plain''", prediction=106, span="32-32"];
m4_21 [file=merged, label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasNoRequestBody()", span="199-199"];
m4_27 [color=green, community=0, file=merged, label="Method httpMethod = Method.POST", prediction=112, span="40-40"];
m4_136 [file=merged, label="Assert.Null(RequestBodyCapturer.CapturedContentType)", span="201-201"];
m4_137 [file=merged, label="Assert.AreEqual(false, RequestBodyCapturer.CapturedHasEntityBody)", span="202-202"];
m4_138 [file=merged, label="Assert.AreEqual(string.Empty, RequestBodyCapturer.CapturedEntityBody)", span="203-203"];
m4_139 [file=merged, label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasNoRequestBody()", span="199-199"];
m4_24 [file=merged, label="Exit lambda expression", span="30-30"];
m4_25 [file=merged, label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m4_39 [color=green, community=0, file=merged, label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_POST_Request()", prediction=113, span="56-56"];
m4_38 [file=merged, label="Exit lambda expression", span="48-48"];
m4_55 [file=merged, label="Exit lambda expression", span="72-72"];
m4_68 [color=green, community=0, file=merged, label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PUT_Request()", prediction=114, span="80-80"];
m4_71 [file=merged, label="Exit lambda expression", span="96-96"];
m4_87 [color=green, community=0, file=merged, label="string contentType = ''text/plain''", prediction=108, span="126-126"];
m4_103 [color=green, community=0, file=merged, label="request.AddParameter(contentType, bodyData, ParameterType.RequestBody)", prediction=108, span="149-149"];
m4_119 [color=green, community=0, file=merged, label="_client.ExecuteAsync(request, response => resetEvent.Set())", prediction=108, span="173-173"];
m4_135 [file=merged, label="Exit lambda expression", span="192-192"];
m4_26 [file=merged, label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Have_No_Body_Added_To_POST_Request()", span="38-38"];
m4_33 [color=green, community=0, file=merged, label="ManualResetEvent resetEvent = new ManualResetEvent(false)", prediction=113, span="51-51"];
m4_36 [color=green, community=0, file=merged, label="AssertHasNoRequestBody()", prediction=108, span="56-56"];
m4_34 [color=green, community=0, file=merged, label="_client.ExecuteAsync(request, response => resetEvent.Set())", prediction=108, span="53-53"];
m4_35 [color=green, community=0, file=merged, label="resetEvent.WaitOne()", prediction=113, span="54-54"];
m4_40 [file=merged, label="Method httpMethod = Method.POST", span="58-58"];
m4_43 [color=green, community=0, file=merged, label="RestRequest request = new RestRequest(RequestBodyCapturer.Resource, httpMethod)", prediction=108, span="64-64"];
m4_48 [color=green, community=0, file=merged, label="_client.ExecuteAsync(request, response => resetEvent.Set())", prediction=108, span="73-73"];
m4_44 [color=green, community=0, file=merged, label="string contentType = ''text/plain''", prediction=108, span="66-66"];
m4_46 [color=green, community=0, file=merged, label="request.AddParameter(contentType, bodyData, ParameterType.RequestBody)", prediction=108, span="69-69"];
m4_45 [color=green, community=0, file=merged, label="string bodyData = ''abc123 foo bar baz BING!''", prediction=108, span="67-67"];
m4_50 [color=green, community=0, file=merged, label="AssertHasRequestBody(contentType, bodyData)", prediction=108, span="76-76"];
m4_47 [color=green, community=0, file=merged, label="ManualResetEvent resetEvent = new ManualResetEvent(false)", prediction=128, span="71-71"];
m4_49 [color=green, community=0, file=merged, label="resetEvent.WaitOne()", prediction=128, span="74-74"];
m4_53 [file=merged, label="Entry lambda expression", span="72-72"];
m4_51 [file=merged, label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_POST_Request()", span="56-56"];
m4_52 [file=merged, label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasRequestBody(string, string)", span="206-206"];
m4_142 [file=merged, label="Assert.AreEqual(contentType, RequestBodyCapturer.CapturedContentType)", span="208-208"];
m4_144 [file=merged, label="Assert.AreEqual(bodyData, RequestBodyCapturer.CapturedEntityBody)", span="210-210"];
m4_61 [color=green, community=0, file=merged, label="request.AddParameter(contentType, bodyData, ParameterType.RequestBody)", prediction=108, span="89-89"];
m4_62 [color=green, community=0, file=merged, label="ManualResetEvent resetEvent = new ManualResetEvent(false)", prediction=114, span="91-91"];
m4_77 [color=green, community=0, file=merged, label="_client.ExecuteAsync(request, response => resetEvent.Set())", prediction=108, span="113-113"];
m4_78 [color=green, community=0, file=merged, label="resetEvent.WaitOne()", prediction=133, span="114-114"];
m4_73 [color=green, community=0, file=merged, label="Method httpMethod = Method.DELETE", prediction=108, span="106-106"];
m4_101 [color=green, community=0, file=merged, label="Entry lambda expression", prediction=108, span="144-144"];
m4_116 [color=green, community=0, file=merged, label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_OPTIONS_Request()", prediction=136, span="152-152"];
m4_143 [file=merged, label="Assert.AreEqual(true, RequestBodyCapturer.CapturedHasEntityBody)", span="209-209"];
m4_145 [file=merged, label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasRequestBody(string, string)", span="206-206"];
m4_56 [file=merged, label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PUT_Request()", span="80-80"];
m4_57 [file=merged, label="Method httpMethod = Method.PUT", span="82-82"];
m4_58 [color=green, community=0, file=merged, label="RestRequest request = new RestRequest(RequestBodyCapturer.Resource, httpMethod)", prediction=108, span="84-84"];
m4_65 [color=green, community=0, file=merged, label="AssertHasRequestBody(contentType, bodyData)", prediction=138, span="96-96"];
m4_63 [color=green, community=0, file=merged, label="_client.ExecuteAsync(request, response => resetEvent.Set())", prediction=108, span="93-93"];
m4_64 [color=green, community=0, file=merged, label="resetEvent.WaitOne()", prediction=114, span="94-94"];
m4_69 [file=merged, label="Entry lambda expression", span="96-96"];
m4_72 [color=green, community=0, file=merged, label="RestRequest request = new RestRequest(RequestBodyCapturer.Resource, httpMethod)", prediction=108, span="104-104"];
m4_76 [color=green, community=0, file=merged, label="ManualResetEvent resetEvent = new ManualResetEvent(false)", prediction=133, span="111-111"];
m4_75 [color=green, community=0, file=merged, label="request.AddParameter(contentType, bodyData, ParameterType.RequestBody)", prediction=108, span="109-109"];
m4_79 [color=green, community=0, file=merged, label="AssertHasRequestBody(contentType, bodyData)", prediction=108, span="116-116"];
m4_86 [color=green, community=0, file=merged, label="RestRequest request = new RestRequest(RequestBodyCapturer.Resource, httpMethod)", prediction=108, span="124-124"];
m4_85 [file=merged, label="Entry lambda expression", span="120-120"];
m4_84 [file=merged, label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_DELETE_Request()", span="104-104"];
m4_88 [color=green, community=0, file=merged, label="string bodyData = ''abc123 foo bar baz BING!''", prediction=146, span="127-127"];
m4_89 [color=green, community=0, file=merged, label="request.AddParameter(contentType, bodyData, ParameterType.RequestBody)", prediction=108, span="129-129"];
m4_90 [color=green, community=0, file=merged, label="ManualResetEvent resetEvent = new ManualResetEvent(false)", prediction=148, span="131-131"];
m4_92 [color=green, community=0, file=merged, label="resetEvent.WaitOne()", prediction=148, span="134-134"];
m4_91 [color=green, community=0, file=merged, label="_client.ExecuteAsync(request, response => resetEvent.Set())", prediction=108, span="133-133"];
m4_93 [color=green, community=0, file=merged, label="AssertHasNoRequestBody()", prediction=151, span="136-136"];
m4_100 [color=green, community=0, file=merged, label="RestRequest request = new RestRequest(RequestBodyCapturer.Resource, httpMethod)", prediction=108, span="144-144"];
m4_104 [color=green, community=0, file=merged, label="ManualResetEvent resetEvent = new ManualResetEvent(false)", prediction=153, span="151-151"];
m4_105 [color=green, community=0, file=merged, label="_client.ExecuteAsync(request, response => resetEvent.Set())", prediction=108, span="153-153"];
m4_106 [color=green, community=0, file=merged, label="resetEvent.WaitOne()", prediction=153, span="154-154"];
m4_107 [color=green, community=0, file=merged, label="AssertHasRequestBody(contentType, bodyData)", prediction=108, span="156-156"];
m4_114 [color=green, community=0, file=merged, label="RestRequest request = new RestRequest(RequestBodyCapturer.Resource, httpMethod)", prediction=108, span="164-164"];
m4_118 [color=green, community=0, file=merged, label="ManualResetEvent resetEvent = new ManualResetEvent(false)", prediction=158, span="171-171"];
m4_117 [color=green, community=0, file=merged, label="request.AddParameter(contentType, bodyData, ParameterType.RequestBody)", prediction=108, span="169-169"];
m4_120 [color=green, community=0, file=merged, label="resetEvent.WaitOne()", prediction=158, span="174-174"];
m4_121 [color=green, community=0, file=merged, label="AssertHasRequestBody(contentType, bodyData)", prediction=136, span="176-176"];
m4_133 [file=merged, label="Entry lambda expression", span="192-192"];
m4_132 [file=merged, label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", span="176-176"];
m4_146 [file=merged, label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.Capture(System.Net.HttpListenerContext)", span="223-223"];
m4_147 [file=merged, label="HttpListenerRequest request = context.Request", span="225-225"];
m4_148 [file=merged, label="CapturedContentType = request.ContentType", span="227-227"];
m4_149 [file=merged, label="CapturedHasEntityBody = request.HasEntityBody", span="228-228"];
m4_150 [file=merged, label="CapturedEntityBody = StreamToString(request.InputStream)", span="229-229"];
m4_151 [file=merged, label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.Capture(System.Net.HttpListenerContext)", span="223-223"];
m4_152 [file=merged, label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.StreamToString(System.IO.Stream)", span="232-232"];
m4_153 [file=merged, label="StreamReader streamReader = new StreamReader(stream)", span="234-234"];
m4_154 [file=merged, label="return streamReader.ReadToEnd();", span="235-235"];
m4_156 [file=merged, label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m4_155 [file=merged, label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.StreamToString(System.IO.Stream)", span="232-232"];
m4_157 [file=merged, label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m4_0_0 [file=merged, label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", span="14-14"];
m4_0_1 [file=merged, label="Uri baseUrl = new Uri(''http://localhost:8888/'')", span="16-16"];
m4_0_2 [file=merged, label="string val = ''Basic async test''", span="17-17"];
m4_0_4 [file=merged, label="SimpleServer.Create(baseUrl.AbsoluteUri, Handlers.EchoValue(val))", span="21-21"];
m4_0_5 [file=merged, label="RestClient client = new RestClient(baseUrl)", span="23-23"];
m4_0_10 [file=merged, label="Entry System.Uri.Uri(string)", span="0-0"];
m4_0_3 [file=merged, label="ManualResetEvent resetEvent = new ManualResetEvent(false)", span="19-19"];
m4_0_7 [file=merged, label="client.ExecuteAsync(request, (response, asyncHandle) =>\r\n                                             {\r\n                                                 \\nAssert.NotNull(response.Content);\r\n                                                 Assert.AreEqual(val, response.Content);\r\n                                                 \\nresetEvent.Set();\r\n                                             })", span="26-31"];
m4_0_20 [file=merged, label="Assert.AreEqual(val, response.Content)", span="29-29"];
m4_0_8 [file=merged, label="resetEvent.WaitOne()", span="33-33"];
m4_0_11 [file=merged, label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m4_0_21 [file=merged, label="resetEvent.Set()", span="30-30"];
m4_0_12 [file=merged, label="Entry RestSharp.IntegrationTests.Helpers.Handlers.EchoValue(string)", span="21-21"];
m4_0_13 [file=merged, label="Entry RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", span="21-21"];
m4_0_6 [file=merged, label="RestRequest request = new RestRequest('''')", span="24-24"];
m4_0_14 [file=merged, label="Entry RestSharp.RestClient.RestClient(System.Uri)", span="165-165"];
m4_0_15 [file=merged, label="Entry RestSharp.RestRequest.RestRequest(string)", span="94-94"];
m4_0_18 [file=merged, label="Entry lambda expression", span="26-31"];
m4_0_9 [file=merged, label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", span="14-14"];
m4_0_17 [file=merged, label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
m4_0_19 [file=merged, label="Assert.NotNull(response.Content)", span="28-28"];
m4_0_22 [file=merged, label="Exit lambda expression", span="26-31"];
m4_0_25 [file=merged, label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m4_0_26 [file=merged, label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", span="38-38"];
m4_0_27 [file=merged, label="Uri baseUrl = new Uri(''http://localhost:8888/'')", span="40-40"];
m4_0_28 [file=merged, label="string val = ''Basic async test''", span="41-41"];
m4_0_30 [file=merged, label="SimpleServer.Create(baseUrl.AbsoluteUri, Handlers.EchoValue(val))", span="45-45"];
m4_0_31 [file=merged, label="RestClient client = new RestClient(baseUrl)", span="47-47"];
m4_0_29 [file=merged, label="ManualResetEvent resetEvent = new ManualResetEvent(false)", span="43-43"];
m4_0_33 [file=merged, label="client.ExecuteAsync(request, response =>\r\n                                             {\r\n                                                 \\nAssert.NotNull(response.Content);\r\n                                                 Assert.AreEqual(val, response.Content);\r\n                                                 \\nresetEvent.Set();\r\n                                             })", span="50-55"];
m4_0_38 [file=merged, label="Assert.AreEqual(val, response.Content)", span="53-53"];
m4_0_34 [file=merged, label="resetEvent.WaitOne()", span="57-57"];
m4_0_39 [file=merged, label="resetEvent.Set()", span="54-54"];
m4_0_32 [file=merged, label="RestRequest request = new RestRequest('''')", span="48-48"];
m4_0_36 [file=merged, label="Entry lambda expression", span="50-55"];
m4_0_35 [file=merged, label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", span="38-38"];
m4_0_37 [file=merged, label="Assert.NotNull(response.Content)", span="52-52"];
m4_0_40 [file=merged, label="Exit lambda expression", span="50-55"];
m4_0_41 [file=merged, label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_TaskAsync()", span="62-62"];
m4_0_42 [file=merged, label="string baseUrl = ''http://localhost:8888/''", span="64-64"];
m4_0_43 [file=merged, label="string val = ''Basic async task test''", span="65-65"];
m4_0_44 [file=merged, label="SimpleServer.Create(baseUrl, Handlers.EchoValue(val))", span="67-67"];
m4_0_45 [file=merged, label="RestClient client = new RestClient(baseUrl)", span="69-69"];
m4_0_46 [file=merged, label="RestRequest request = new RestRequest('''')", span="70-70"];
m4_0_47 [color=green, community=0, file=merged, label="var result = await client.ExecuteTaskAsync(request)", prediction=162, span="71-71"];
m4_0_52 [file=merged, label="Entry RestSharp.RestClient.RestClient(string)", span="174-174"];
m4_0_48 [color=green, community=0, file=merged, label="Assert.NotNull(result.Content)", prediction=163, span="73-73"];
m4_0_54 [file=merged, label="Entry System.Threading.Tasks.Task.Wait()", span="0-0"];
m4_0_51 [file=merged, label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_TaskAsync()", span="62-62"];
m4_0_55 [file=merged, label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", span="81-81"];
m4_0_56 [file=merged, label="string baseUrl = ''http://localhost:8888/''", span="83-83"];
m4_0_57 [file=merged, label="string exceptionMessage = ''Thrown from OnBeforeDeserialization''", span="84-84"];
m4_0_58 [file=merged, label="SimpleServer.Create(baseUrl, Handlers.Generic<ResponseHandler>())", span="86-86"];
m4_0_59 [file=merged, label="RestClient client = new RestClient(baseUrl)", span="88-88"];
m4_0_61 [file=merged, label="request.OnBeforeDeserialization += r => { throw new Exception(exceptionMessage); }", span="91-91"];
m4_0_65 [file=merged, label="Assert.AreEqual(exceptionMessage, response.ErrorMessage)", span="99-99"];
m4_0_71 [file=merged, label="throw new Exception(exceptionMessage);", span="91-91"];
m4_0_68 [file=merged, label="Entry RestSharp.IntegrationTests.Helpers.Handlers.Generic<T>()", span="59-59"];
m4_0_60 [color=green, community=0, file=merged, label="var response = await client.ExecuteTaskAsync<Response>(request)", prediction=164, span="91-91"];
m4_0_66 [file=merged, label="Assert.AreEqual(ResponseStatus.Error, response.ResponseStatus)", span="100-100"];
m4_0_67 [file=merged, label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", span="81-81"];
m4_0_70 [file=merged, label="Entry lambda expression", span="91-91"];
m4_0_72 [file=merged, label="Exit lambda expression", span="91-91"];
m4_0_73 [file=merged, label="Entry System.Exception.Exception(string)", span="0-0"];
m4_0_74 [file=merged, label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Perform_ExecuteGetTaskAsync_With_Response_Type()", span="105-105"];
m4_0_75 [color=green, community=0, file=merged, label="var response = await client.ExecuteTaskAsync<Response>(request)", prediction=165, span="107-107"];
m4_0_76 [color=green, community=0, file=merged, label="Assert.AreEqual(''Works!'', response.Data.Message)", prediction=166, span="109-109"];
m4_0_77 [file=merged, label="RestClient client = new RestClient(baseUrl)", span="111-111"];
m4_0_78 [file=merged, label="RestRequest request = new RestRequest(''success'')", span="112-112"];
m4_0_82 [file=merged, label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Perform_ExecuteGetTaskAsync_With_Response_Type()", span="105-105"];
m4_0_83 [color=green, community=0, file=merged, label="var response = await client.GetTaskAsync<Response>(request)", prediction=167, span="122-122"];
m4_0_84 [color=green, community=0, file=merged, label="Assert.AreEqual(''Works!'', response.Message)", prediction=168, span="124-124"];
m4_0_85 [file=merged, label="SimpleServer.Create(baseUrl, Handlers.Generic<ResponseHandler>())", span="126-126"];
m4_0_86 [file=merged, label="RestClient client = new RestClient(baseUrl)", span="128-128"];
m4_0_87 [file=merged, label="RestRequest request = new RestRequest(''success'')", span="129-129"];
m4_0_91 [file=merged, label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Perform_GetTaskAsync_With_Response_Type()", span="122-122"];
m4_0_92 [file=merged, label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", span="140-140"];
m4_0_93 [file=merged, label="string baseUrl = ''http://localhost:8888/''", span="142-142"];
m4_0_94 [file=merged, label="string val = ''Basic async task test''", span="143-143"];
m4_0_95 [file=merged, label="SimpleServer.Create(baseUrl, Handlers.EchoValue(val))", span="145-145"];
m4_0_96 [file=merged, label="RestClient client = new RestClient(baseUrl)", span="147-147"];
m4_0_97 [file=merged, label="RestRequest request = new RestRequest(''timeout'')", span="148-148"];
m4_0_99 [file=merged, label="Task<IRestResponse> task = client.ExecuteTaskAsync(request, cancellationTokenSource.Token)", span="150-150"];
m4_0_98 [file=merged, label="CancellationTokenSource cancellationTokenSource = new CancellationTokenSource()", span="149-149"];
m4_0_100 [file=merged, label="cancellationTokenSource.Cancel()", span="152-152"];
m4_0_103 [file=merged, label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m4_0_101 [file=merged, label="Assert.True(task.IsCanceled)", span="154-154"];
m4_0_104 [file=merged, label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m4_0_102 [file=merged, label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", span="140-140"];
m4_0_106 [file=merged, label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", span="160-160"];
m4_0_107 [file=merged, label="string baseUrl = ''http://localhost:8888/''", span="162-162"];
m4_0_108 [file=merged, label="string val = ''Basic async task test''", span="163-163"];
m4_0_109 [file=merged, label="SimpleServer.Create(baseUrl, Handlers.EchoValue(val))", span="165-165"];
m4_0_110 [file=merged, label="RestClient client = new RestClient(baseUrl)", span="167-167"];
m4_0_111 [file=merged, label="RestRequest request = new RestRequest(''timeout'')", span="168-168"];
m4_0_113 [file=merged, label="Task<IRestResponse<Response>> task = client.ExecuteTaskAsync<Response>(request, cancellationTokenSource.Token)", span="170-170"];
m4_0_112 [file=merged, label="CancellationTokenSource cancellationTokenSource = new CancellationTokenSource()", span="169-169"];
m4_0_114 [file=merged, label="cancellationTokenSource.Cancel()", span="172-172"];
m4_0_115 [file=merged, label="Assert.True(task.IsCanceled)", span="174-174"];
m4_0_116 [color=green, community=0, file=merged, label="var response = await client.ExecuteTaskAsync(request)", prediction=169, span="177-177"];
m4_0_117 [color=green, community=0, file=merged, label="Assert.AreEqual(HttpStatusCode.NotFound, response.StatusCode)", prediction=170, span="179-179"];
m4_0_118 [file=merged, label="string baseUrl = ''http://localhost:8888/''", span="181-181"];
m4_0_119 [file=merged, label="SimpleServer.Create(baseUrl, UrlToStatusCodeHandler)", span="183-183"];
m4_0_120 [file=merged, label="RestClient client = new RestClient(baseUrl)", span="185-185"];
m4_0_121 [file=merged, label="RestRequest request = new RestRequest(''404'')", span="186-186"];
m4_0_124 [color=green, community=0, file=merged, label="var response = await client.ExecuteTaskAsync<Response>(request)", prediction=171, span="192-192"];
m4_0_125 [color=green, community=0, file=merged, label="Assert.Null(response.Data)", prediction=172, span="194-194"];
m4_0_126 [file=merged, label="Entry RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync_With_Response_Type()", span="196-196"];
m4_0_127 [file=merged, label="string baseUrl = ''http://localhost:8888/''", span="198-198"];
m4_0_128 [file=merged, label="SimpleServer.Create(baseUrl, UrlToStatusCodeHandler)", span="200-200"];
m4_0_129 [file=merged, label="RestClient client = new RestClient(baseUrl)", span="202-202"];
m4_0_130 [file=merged, label="RestRequest request = new RestRequest(''404'')", span="203-203"];
m4_0_134 [color=green, community=0, file=merged, label="var response = await client.ExecuteTaskAsync(request)", prediction=173, span="211-211"];
m4_0_136 [file=merged, label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Timeout_GET_TaskAsync()", span="213-213"];
m4_0_137 [file=merged, label="string baseUrl = ''http://localhost:8888/''", span="215-215"];
m4_0_138 [file=merged, label="SimpleServer.Create(baseUrl, Handlers.Generic<ResponseHandler>())", span="217-217"];
m4_0_139 [file=merged, label="RestClient client = new RestClient(baseUrl)", span="219-219"];
m4_0_140 [file=merged, label="IRestRequest request = new RestRequest(''timeout'', Method.GET).AddBody(''Body_Content'')", span="220-220"];
m4_0_141 [file=merged, label="request.Timeout = 500", span="223-223"];
m4_0_147 [file=merged, label="Entry RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", span="101-101"];
m4_0_148 [file=merged, label="Entry RestSharp.RestRequest.AddBody(object)", span="267-267"];
m4_0_145 [color=green, community=0, file=merged, label="var response = await client.ExecuteTaskAsync(request)", prediction=174, span="230-230"];
m4_0_146 [file=merged, label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Timeout_GET_TaskAsync()", span="213-213"];
m4_0_149 [file=merged, label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", span="236-236"];
m4_0_150 [file=merged, label="string baseUrl = ''http://localhost:8888/''", span="238-238"];
m4_0_151 [file=merged, label="SimpleServer.Create(baseUrl, Handlers.Generic<ResponseHandler>())", span="240-240"];
m4_0_152 [file=merged, label="RestClient client = new RestClient(baseUrl)", span="242-242"];
m4_0_153 [file=merged, label="IRestRequest request = new RestRequest(''timeout'', Method.PUT).AddBody(''Body_Content'')", span="243-243"];
m4_0_154 [file=merged, label="request.Timeout = 500", span="246-246"];
m4_0_158 [file=merged, label="Assert.AreEqual(ResponseStatus.TimedOut, response.ResponseStatus)", span="254-254"];
m4_0_159 [file=merged, label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", span="236-236"];
m4_0_160 [file=merged, label="Entry RestSharp.IntegrationTests.AsyncTests.UrlToStatusCodeHandler(System.Net.HttpListenerContext)", span="258-258"];
m4_0_161 [file=merged, label="obj.Response.StatusCode = int.Parse(obj.Request.Url.Segments.Last())", span="260-260"];
m4_0_162 [file=merged, label="Exit RestSharp.IntegrationTests.AsyncTests.UrlToStatusCodeHandler(System.Net.HttpListenerContext)", span="258-258"];
m4_0_163 [file=merged, label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m4_0_164 [file=merged, label="Entry int.Parse(string)", span="0-0"];
m4_0_165 [file=merged, label="Entry RestSharp.IntegrationTests.AsyncTests.ResponseHandler.error(System.Net.HttpListenerContext)", span="265-265"];
m4_0_166 [file=merged, label="context.Response.StatusCode = 400", span="267-267"];
m4_0_167 [file=merged, label="context.Response.Headers.Add(''Content-Type'', ''application/xml'')", span="268-268"];
m4_0_168 [file=merged, label="context.Response.OutputStream.WriteStringUtf8(\r\n                    @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<\\nResponse>\r\n    <Error>\r\n        <Message>Not found!</Message>\r\n    </Error>\r\n</Response>'')", span="269-275"];
m4_0_170 [file=merged, label="Entry System.Net.WebHeaderCollection.Add(string, string)", span="0-0"];
m4_0_169 [file=merged, label="Exit RestSharp.IntegrationTests.AsyncTests.ResponseHandler.error(System.Net.HttpListenerContext)", span="265-265"];
m4_0_171 [file=merged, label="Entry System.IO.Stream.WriteStringUtf8(string)", span="7-7"];
m4_0_172 [file=merged, label="Entry RestSharp.IntegrationTests.AsyncTests.ResponseHandler.success(System.Net.HttpListenerContext)", span="278-278"];
m4_0_173 [file=merged, label="context.Response.OutputStream.WriteStringUtf8(\r\n                    @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<\\nResponse>\r\n    <Success>\r\n        <Message>Works!</Message>\r\n    </Success>\r\n</Response>'')", span="280-286"];
m4_0_174 [file=merged, label="Exit RestSharp.IntegrationTests.AsyncTests.ResponseHandler.success(System.Net.HttpListenerContext)", span="278-278"];
m4_0_175 [file=merged, label="Entry RestSharp.IntegrationTests.AsyncTests.ResponseHandler.timeout(System.Net.HttpListenerContext)", span="289-289"];
m4_0_176 [file=merged, label="Thread.Sleep(1000)", span="291-291"];
m4_0_177 [file=merged, label="Exit RestSharp.IntegrationTests.AsyncTests.ResponseHandler.timeout(System.Net.HttpListenerContext)", span="289-289"];
m4_0_178 [file=merged, label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m4_1_0 [file=merged, label="Entry RestSharp.IntegrationTests.CompressionTests.Can_Handle_Gzip_Compressed_Content()", span="12-12"];
m4_1_1 [file=merged, label="Uri baseUrl = new Uri(''http://localhost:8888/'')", span="14-14"];
m4_1_2 [file=merged, label="SimpleServer.Create(baseUrl.AbsoluteUri, GzipEchoValue(''This is some gzipped content''))", span="16-16"];
m4_1_3 [file=merged, label="RestClient client = new RestClient(baseUrl)", span="18-18"];
m4_1_8 [file=merged, label="Entry System.Uri.Uri(string)", span="0-0"];
m4_1_9 [file=merged, label="Entry RestSharp.IntegrationTests.CompressionTests.GzipEchoValue(string)", span="56-56"];
m4_1_10 [file=merged, label="Entry RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", span="21-21"];
m4_1_4 [file=merged, label="RestRequest request = new RestRequest('''')", span="19-19"];
m4_1_5 [file=merged, label="IRestResponse response = client.Execute(request)", span="20-20"];
m4_1_11 [file=merged, label="Entry RestSharp.RestClient.RestClient(System.Uri)", span="165-165"];
m4_1_12 [file=merged, label="Entry RestSharp.RestRequest.RestRequest(string)", span="94-94"];
m4_1_6 [file=merged, label="Assert.AreEqual(''This is some gzipped content'', response.Content)", span="22-22"];
m4_1_7 [file=merged, label="Exit RestSharp.IntegrationTests.CompressionTests.Can_Handle_Gzip_Compressed_Content()", span="12-12"];
m4_1_34 [file=merged, label="Exit RestSharp.IntegrationTests.CompressionTests.GzipEchoValue(string)", span="56-56"];
m4_1_36 [color=green, community=0, file=merged, label="GZipStream gzip = new GZipStream(context.Response.OutputStream, CompressionMode.Compress, true)", prediction=175, span="61-61"];
m4_1_37 [color=green, community=0, file=merged, label="gzip.WriteStringUtf8(value)", prediction=176, span="63-63"];
m4_1_15 [file=merged, label="Entry RestSharp.IntegrationTests.CompressionTests.Can_Handle_Deflate_Compressed_Content()", span="27-27"];
m4_1_16 [file=merged, label="Uri baseUrl = new Uri(''http://localhost:8888/'')", span="29-29"];
m4_1_17 [file=merged, label="SimpleServer.Create(baseUrl.AbsoluteUri, DeflateEchoValue(''This is some deflated content''))", span="31-31"];
m4_1_18 [file=merged, label="RestClient client = new RestClient(baseUrl)", span="33-33"];
m4_1_23 [file=merged, label="Entry RestSharp.IntegrationTests.CompressionTests.DeflateEchoValue(string)", span="69-69"];
m4_1_19 [file=merged, label="RestRequest request = new RestRequest('''')", span="34-34"];
m4_1_20 [file=merged, label="IRestResponse response = client.Execute(request)", span="35-35"];
m4_1_21 [file=merged, label="Assert.AreEqual(''This is some deflated content'', response.Content)", span="37-37"];
m4_1_22 [file=merged, label="Exit RestSharp.IntegrationTests.CompressionTests.Can_Handle_Deflate_Compressed_Content()", span="27-27"];
m4_1_44 [color=green, community=0, file=merged, label="context.Response.Headers.Add(''Content-encoding'', ''deflate'')", prediction=177, span="70-70"];
m4_1_46 [color=green, community=0, file=merged, label="gzip.WriteStringUtf8(value)", prediction=178, span="75-75"];
m4_1_24 [file=merged, label="Entry RestSharp.IntegrationTests.CompressionTests.Can_Handle_Uncompressed_Content()", span="42-42"];
m4_1_25 [file=merged, label="Uri baseUrl = new Uri(''http://localhost:8888/'')", span="44-44"];
m4_1_26 [file=merged, label="SimpleServer.Create(baseUrl.AbsoluteUri, Handlers.EchoValue(''This is some sample content''))", span="46-46"];
m4_1_27 [file=merged, label="RestClient client = new RestClient(baseUrl)", span="48-48"];
m4_1_32 [file=merged, label="Entry RestSharp.IntegrationTests.Helpers.Handlers.EchoValue(string)", span="21-21"];
m4_1_28 [file=merged, label="RestRequest request = new RestRequest('''')", span="49-49"];
m4_1_29 [file=merged, label="IRestResponse response = client.Execute(request)", span="50-50"];
m4_1_30 [file=merged, label="Assert.AreEqual(''This is some sample content'', response.Content)", span="52-52"];
m4_1_31 [file=merged, label="Exit RestSharp.IntegrationTests.CompressionTests.Can_Handle_Uncompressed_Content()", span="42-42"];
m4_1_35 [color=green, community=0, file=merged, label="context.Response.Headers.Add(''Content-encoding'', ''gzip'')", prediction=179, span="59-59"];
m4_1_40 [file=merged, label="Entry System.Net.WebHeaderCollection.Add(string, string)", span="0-0"];
m4_1_41 [file=merged, label="Entry System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionMode, bool)", span="0-0"];
m4_1_39 [file=merged, label="Exit lambda expression", span="58-66"];
m4_1_42 [file=merged, label="Entry System.IO.Stream.WriteStringUtf8(string)", span="7-7"];
m4_1_45 [color=green, community=1, file=merged, label="Entry lambda expression", prediction=180, span="71-79"];
m4_1_50 [file=merged, label="Entry System.IO.Compression.DeflateStream.DeflateStream(System.IO.Stream, System.IO.Compression.CompressionMode, bool)", span="0-0"];
m4_1_49 [file=merged, label="Exit lambda expression", span="71-79"];
m4_2_0 [file=merged, label="Entry RestSharp.IntegrationTests.FileTests.SetupServer()", span="17-17"];
m4_2_1 [color=green, community=0, file=merged, label="_baseUrl = new Uri(''http://localhost:8888/'')", prediction=181, span="19-19"];
m4_2_2 [color=green, community=0, file=merged, label="_path = AppDomain.CurrentDomain.BaseDirectory", prediction=182, span="20-20"];
m4_2_3 [color=green, community=0, file=merged, label="_server = SimpleServer.Create(_baseUrl.AbsoluteUri, c => Handlers.FileHandler(c, _path))", prediction=183, span="21-21"];
m4_2_9 [file=merged, label="Entry System.Uri.Uri(string)", span="0-0"];
m4_2_10 [file=merged, label="Entry RestSharp.IntegrationTests.Helpers.Handlers.FileHandler(System.Net.HttpListenerContext, string)", span="30-30"];
m4_2_11 [file=merged, label="Entry RestSharp.IntegrationTests.FileTests.ShutdownServer()", span="25-25"];
m4_2_12 [color=green, community=0, file=merged, label="_server.Dispose()", prediction=183, span="27-27"];
m4_2_13 [file=merged, label="Exit RestSharp.IntegrationTests.FileTests.ShutdownServer()", span="25-25"];
m4_2_14 [file=merged, label="Entry RestSharp.IntegrationTests.Helpers.SimpleServer.Dispose()", span="60-60"];
m4_2_8 [color=green, community=0, file=merged, label="Handlers.FileHandler(c, _path)", prediction=183, span="21-21"];
m4_2_15 [file=merged, label="Entry RestSharp.IntegrationTests.FileTests.CreateClient()", span="31-31"];
m4_2_16 [color=green, community=0, file=merged, label="_client = new RestClient(_baseUrl)", prediction=186, span="33-33"];
m4_2_30 [color=green, community=0, file=merged, label="Entry System.IO.File.OpenWrite(string)", prediction=187, span="0-0"];
m4_2_29 [file=merged, label="Entry System.IO.Path.GetTempFileName()", span="0-0"];
m4_2_34 [color=green, community=0, file=merged, label="Assert.Null(response)", prediction=188, span="59-59"];
m4_2_31 [color=green, community=0, file=merged, label="FileStream writer = File.OpenWrite(tempFile)", prediction=187, span="51-51"];
m4_2_32 [color=green, community=1, file=merged, label="RestRequest request = new RestRequest(''Assets/Koala.jpg'')\r\n                {\r\n                    ResponseWriter = (responseStream) => \\nresponseStream.CopyTo(writer)\r\n                }", prediction=187, span="53-56"];
m4_2_28 [file=merged, label="Exit RestSharp.IntegrationTests.FileTests.Writes_Response_To_Stream()", span="27-27"];
m4_2_35 [color=green, community=0, file=merged, label="Exit lambda expression", prediction=187, span="40-40"];
m4_2_43 [color=green, community=0, file=merged, label="responseStream.CopyTo(writer)", prediction=187, span="55-55"];
m4_2_36 [color=green, community=0, file=merged, label="Entry System.IO.Stream.CopyTo(System.IO.Stream)", prediction=183, span="0-0"];
m4_2_37 [color=green, community=0, file=merged, label="Assert.AreEqual(expected, fromTemp)", prediction=187, span="65-65"];
m4_2_33 [color=green, community=0, file=merged, label="Entry lambda expression", prediction=183, span="40-40"];
m4_2_44 [file=merged, label="Exit lambda expression", span="55-55"];
m4_2_42 [file=merged, label="Entry lambda expression", span="55-55"];
m4_3_0 [file=merged, label="Entry RestSharp.IntegrationTests.Helpers.Handlers.Echo(System.Net.HttpListenerContext)", span="13-13"];
m4_3_1 [file=merged, label="context.Request.InputStream.CopyTo(context.Response.OutputStream)", span="15-15"];
m4_3_2 [file=merged, label="Exit RestSharp.IntegrationTests.Helpers.Handlers.Echo(System.Net.HttpListenerContext)", span="13-13"];
m4_3_3 [file=merged, label="Entry System.IO.Stream.CopyTo(System.IO.Stream)", span="0-0"];
m4_3_4 [file=merged, label="Entry RestSharp.IntegrationTests.Helpers.Handlers.EchoValue(string)", span="21-21"];
m4_3_5 [file=merged, label="return ctx => ctx.Response.OutputStream.WriteStringUtf8(value);", span="23-23"];
m4_3_8 [file=merged, label="ctx.Response.OutputStream.WriteStringUtf8(value)", span="23-23"];
m4_3_6 [file=merged, label="Exit RestSharp.IntegrationTests.Helpers.Handlers.EchoValue(string)", span="21-21"];
m4_3_7 [file=merged, label="Entry lambda expression", span="23-23"];
m4_3_9 [file=merged, label="Exit lambda expression", span="23-23"];
m4_3_10 [file=merged, label="Entry System.IO.Stream.WriteStringUtf8(string)", span="7-7"];
m4_3_22 [color=green, community=0, file=merged, label="Exit lambda expression", prediction=196, span="32-32"];
m4_3_23 [file=merged, label="Entry string.Replace(string, string)", span="0-0"];
m4_3_11 [file=merged, label="Entry RestSharp.IntegrationTests.Helpers.Handlers.FileHandler(System.Net.HttpListenerContext, string)", span="30-30"];
m4_3_12 [color=green, community=1, file=merged, label="var pathToFile = Path.Combine(path, Path.Combine(context.Request.Url.Segments.Select(s => s.Replace(''/'', ''''))\r\n                                                    \\n.ToArray()))", prediction=197, span="32-33"];
m4_3_14 [file=merged, label="reader.BaseStream.CopyTo(context.Response.OutputStream)", span="37-37"];
m4_3_13 [color=green, community=0, file=merged, label="var reader = new StreamReader(pathToFile)", prediction=198, span="35-35"];
m4_3_20 [file=merged, label="Entry lambda expression", span="32-32"];
m4_3_19 [file=merged, label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m4_3_15 [file=merged, label="Exit RestSharp.IntegrationTests.Helpers.Handlers.FileHandler(System.Net.HttpListenerContext, string)", span="30-30"];
m4_3_24 [file=merged, label="Entry RestSharp.IntegrationTests.Helpers.Handlers.Generic<T>()", span="59-59"];
m4_3_25 [file=merged, label="return ctx =>\r\n                   {\r\n                       string methodName = ctx.Request.Url.Segments.Last();\r\n                       \\nMethodInfo method = typeof(T).GetMethod(methodName,\r\n                           BindingFlags.NonPublic | BindingFlags.Public | \\nBindingFlags.Instance | BindingFlags.Static);\r\n\r\n                       if (method.IsStatic)\r\n                       {\r\n                           \\nmethod.Invoke(null, new object[] { ctx });\r\n                       }\r\n                       else\r\n                       {\r\n                           \\nmethod.Invoke(new T(), new object[] { ctx });\r\n                       }\r\n                   };", span="61-75"];
m4_3_26 [file=merged, label="Exit RestSharp.IntegrationTests.Helpers.Handlers.Generic<T>()", span="59-59"];
m4_3_28 [file=merged, label="string methodName = ctx.Request.Url.Segments.Last()", span="63-63"];
m4_3_31 [file=merged, label="method.Invoke(null, new object[] { ctx })", span="69-69"];
m4_3_32 [file=merged, label="method.Invoke(new T(), new object[] { ctx })", span="73-73"];
m4_3_27 [file=merged, label="Entry lambda expression", span="61-75"];
m4_3_29 [file=merged, label="MethodInfo method = typeof(T).GetMethod(methodName,\r\n                           BindingFlags.NonPublic | BindingFlags.Public | \\nBindingFlags.Instance | BindingFlags.Static)", span="64-65"];
m4_3_34 [file=merged, label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m4_3_30 [file=merged, label="method.IsStatic", span="67-67"];
m4_3_35 [file=merged, label="Entry System.Type.GetMethod(string, System.Reflection.BindingFlags)", span="0-0"];
m4_3_33 [file=merged, label="Exit lambda expression", span="61-75"];
m4_3_36 [file=merged, label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m4_4_0 [file=merged, label="Entry RestSharp.IntegrationTests.MultipartFormDataTests.SetupServer()", span="39-39"];
m4_4_1 [color=green, community=0, file=merged, label="_server = SimpleServer.Create(BaseUrl, EchoHandler)", prediction=199, span="41-41"];
m4_4_2 [color=green, community=0, file=merged, label="_client = new RestClient(BaseUrl)", prediction=200, span="42-42"];
m4_4_13 [color=green, community=0, file=merged, label="var response = await _client.ExecuteTaskAsync(request)", prediction=201, span="61-61"];
m4_4_10 [color=green, community=0, file=merged, label="string path = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, ''Assets\\TestFile.txt'')", prediction=202, span="56-56"];
m4_4_14 [color=green, community=0, file=merged, label="Assert.AreEqual(_expectedFileAndBodyRequestContent, response.Content)", prediction=203, span="62-62"];
m4_4_15 [file=merged, label="Entry RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", span="101-101"];
m4_4_16 [file=merged, label="Entry System.IO.Directory.GetCurrentDirectory()", span="0-0"];
m4_4_17 [file=merged, label="Entry System.IO.Directory.GetParent(string)", span="0-0"];
m4_4_18 [file=merged, label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m4_4_19 [file=merged, label="Entry RestSharp.RestRequest.AddFile(string, string, string)", span="134-134"];
m4_4_20 [file=merged, label="Entry RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", span="449-449"];
m4_4_11 [color=green, community=0, file=merged, label="request.AddFile(''fileName'', path)", prediction=204, span="57-57"];
m4_4_24 [color=green, community=0, file=merged, label="string path = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, ''Assets\\TestFile.txt'')", prediction=203, span="73-73"];
m4_4_12 [color=green, community=0, file=merged, label="request.AddParameter(''controlName'', ''test'', ''application/json'', ParameterType.RequestBody)", prediction=206, span="59-59"];
m4_4_23 [color=green, community=1, file=merged, label="var request = new RestRequest(''/'', Method.POST)\r\n            {\r\n                AlwaysMultipartFormData = true\r\n            }", prediction=207, span="68-71"];
m4_4_27 [color=green, community=0, file=merged, label="IRestResponse response = _client.Execute(request)", prediction=208, span="78-78"];
m4_4_25 [color=green, community=0, file=merged, label="request.AddFile(''fileName'', path)", prediction=207, span="74-74"];
m4_4_40 [color=green, community=0, file=merged, label="Exit RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile()", prediction=203, span="69-69"];
m4_4_26 [color=green, community=0, file=merged, label="request.AddParameter(''controlName'', ''test'', ''application/json'', ParameterType.RequestBody)", prediction=207, span="76-76"];
m4_4_56 [file=merged, label="Entry System.Console.WriteLine(string)", span="0-0"];
m4_4_78 [color=green, community=0, file=merged, label="Entry RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteTaskAsync()", prediction=212, span="164-164"];
m4_4_55 [file=merged, label="Exit lambda expression", span="112-116"];
m4_4_109 [file=merged, label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m4_4_77 [color=green, community=0, file=merged, label="Entry Unk.Null", prediction=213, span="163-163"];
m4_4_28 [color=green, community=0, file=merged, label="Assert.AreEqual(_expectedFileAndBodyRequestContent, response.Content)", prediction=203, span="80-80"];
m4_4_32 [color=green, community=1, file=merged, label="RestRequest request = new RestRequest(''/'', Method.POST)\r\n            {\r\n                AlwaysMultipartFormData = true\r\n            }", prediction=203, span="86-89"];
m4_4_33 [color=green, community=0, file=merged, label="AddParameters(request)", prediction=216, span="91-91"];
m4_4_34 [color=green, community=1, file=merged, label="_client.ExecuteAsync(request, (restResponse, handle) =>\r\n            {\r\n                Console.WriteLine(restResponse.Content);\r\n                \\nAssert.AreEqual(this._expected, restResponse.Content);\r\n            })", prediction=203, span="93-97"];
m4_4_42 [file=merged, label="Entry RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormDataAsync()", span="98-98"];
m4_4_44 [color=green, community=1, file=merged, label="RestRequest request = new RestRequest(''/'', Method.POST)\r\n            {\r\n                AlwaysMultipartFormData = true\r\n            }", prediction=218, span="103-106"];
m4_4_45 [color=green, community=0, file=merged, label="AddParameters(request)", prediction=219, span="108-108"];
m4_4_46 [color=green, community=0, file=merged, label="IRestResponse response = _client.Execute(request)", prediction=220, span="110-110"];
m4_4_47 [color=green, community=0, file=merged, label="Assert.AreEqual(_expected, response.Content)", prediction=203, span="112-112"];
m4_4_50 [color=green, community=1, file=merged, label="RestRequest request = new RestRequest(''?json_route=/posts'')\r\n            {\r\n                AlwaysMultipartFormData = true,\r\n                \\nMethod = Method.POST,\r\n            }", prediction=222, span="118-122"];
m4_4_49 [file=merged, label="Exit RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormDataAsync()", span="98-98"];
m4_4_51 [color=green, community=0, file=merged, label="request.AddParameter(''title'', ''test'', ParameterType.RequestBody)", prediction=223, span="124-124"];
m4_4_52 [color=green, community=0, file=merged, label="IRestResponse response = _client.Execute(request)", prediction=224, span="126-126"];
m4_4_118 [file=merged, label="request.AddParameter(''foo'', ''bar'')", span="230-230"];
m4_4_119 [file=merged, label="request.AddParameter(''a name with spaces'', ''somedata'')", span="231-231"];
m4_4_61 [color=green, community=0, file=merged, label="var response = await _client.ExecuteTaskAsync(request)", prediction=225, span="142-142"];
m4_4_121 [file=merged, label="Entry RestSharp.IRestRequest.AddParameter(string, object)", span="247-247"];
m4_4_120 [file=merged, label="Exit RestSharp.IntegrationTests.MultipartFormDataTests.AddParameters(RestSharp.IRestRequest)", span="228-228"];
m4_4_53 [color=green, community=0, file=merged, label="Assert.Null(response.ErrorException)", prediction=226, span="128-128"];
m4_4_57 [file=merged, label="Entry RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData()", span="121-121"];
m4_4_59 [color=green, community=1, file=merged, label="var request = new RestRequest(''?json_route=/posts'')\r\n            {\r\n                AlwaysMultipartFormData = true,\r\n                \\nMethod = Method.POST,\r\n            }", prediction=227, span="134-138"];
m4_4_60 [color=green, community=0, file=merged, label="request.AddParameter(''title'', ''test'', ParameterType.RequestBody)", prediction=228, span="140-140"];
m4_4_62 [color=green, community=0, file=merged, label="Assert.Null(response.ErrorException)", prediction=229, span="143-143"];
m4_4_65 [color=green, community=1, file=merged, label="RestRequest request = new RestRequest(''?json_route=/posts'')\r\n            {\r\n                AlwaysMultipartFormData = true,\r\n                \\nMethod = Method.POST,\r\n            }", prediction=230, span="149-153"];
m4_4_66 [color=green, community=0, file=merged, label="request.AddParameter(''title'', ''test'', ParameterType.RequestBody)", prediction=231, span="155-155"];
m4_4_67 [color=green, community=0, file=merged, label="IRestResponse syncResponse = null", prediction=232, span="157-157"];
m4_4_68 [color=green, community=0, file=merged, label="AutoResetEvent eventWaitHandle = new AutoResetEvent(false)", prediction=212, span="159-159"];
m4_4_69 [color=green, community=1, file=merged, label="_client.ExecuteAsync(request, response =>\r\n                {\r\n                    syncResponse = response;\r\n                    \\neventWaitHandle.Set();\r\n                })", prediction=234, span="161-165"];
m4_4_70 [color=green, community=0, file=merged, label="eventWaitHandle.WaitOne()", prediction=212, span="167-167"];
m4_4_71 [color=green, community=0, file=merged, label="Assert.Null(syncResponse.ErrorException)", prediction=234, span="170-170"];
m4_4_75 [file=merged, label="Entry RestSharp.RestRequest.RestRequest(string)", span="94-94"];
m4_4_76 [file=merged, label="Entry RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="427-427"];
m4_4_74 [file=merged, label="Exit RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_Execute()", span="142-142"];
m4_4_87 [file=merged, label="Entry lambda expression", span="180-180"];
m4_4_86 [file=merged, label="Exit RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteTaskAsync()", span="164-164"];
m4_4_89 [file=merged, label="Exit lambda expression", span="180-180"];
m4_4_90 [file=merged, label="Entry RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteAsync()", span="187-187"];
m4_4_102 [file=merged, label="Entry System.Threading.AutoResetEvent.AutoResetEvent(bool)", span="0-0"];
m4_4_103 [file=merged, label="Entry RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse>)", span="17-17"];
m4_4_105 [file=merged, label="Entry lambda expression", span="206-210"];
m4_4_104 [file=merged, label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
m4_4_101 [file=merged, label="Exit RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteAsync()", span="187-187"];
m4_4_108 [file=merged, label="Exit lambda expression", span="206-210"];
m4_4_110 [file=merged, label="Entry RestSharp.IntegrationTests.MultipartFormDataTests.EchoHandler(System.Net.HttpListenerContext)", span="219-219"];
m4_4_111 [file=merged, label="obj.Response.StatusCode = 200", span="221-221"];
m4_4_112 [file=merged, label="StreamReader streamReader = new StreamReader(obj.Request.InputStream)", span="223-223"];
m4_4_113 [file=merged, label="obj.Response.OutputStream.WriteStringUtf8(streamReader.ReadToEnd())", span="225-225"];
m4_4_115 [file=merged, label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m4_4_114 [file=merged, label="Exit RestSharp.IntegrationTests.MultipartFormDataTests.EchoHandler(System.Net.HttpListenerContext)", span="219-219"];
m4_4_116 [file=merged, label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m4_4_117 [file=merged, label="Entry System.IO.Stream.WriteStringUtf8(string)", span="7-7"];
m4_5_0 [file=merged, label="Entry RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Non_Existent_Domain()", span="16-16"];
m4_5_1 [file=merged, label="RestClient client = new RestClient(''http://nonexistantdomainimguessing.org'')", span="18-18"];
m4_5_2 [file=merged, label="RestRequest request = new RestRequest(''foo'')", span="19-19"];
m4_5_3 [file=merged, label="IRestResponse response = client.Execute(request)", span="20-20"];
m4_5_6 [file=merged, label="Entry RestSharp.RestClient.RestClient(string)", span="174-174"];
m4_5_7 [file=merged, label="Entry RestSharp.RestRequest.RestRequest(string)", span="94-94"];
m4_5_4 [file=merged, label="Assert.AreEqual(ResponseStatus.Error, response.ResponseStatus)", span="22-22"];
m4_5_5 [file=merged, label="Exit RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Non_Existent_Domain()", span="16-16"];
m4_5_10 [file=merged, label="Entry RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Task_Handles_Non_Existent_Domain()", span="31-31"];
m4_5_11 [file=merged, label="RestClient client = new RestClient(''http://192.168.1.200:8001'')", span="33-33"];
m4_5_12 [file=merged, label="RestRequest request = new RestRequest(''/'')\r\n                                  {\r\n                                      RequestFormat = \\nDataFormat.Json,\r\n                                      Method = Method.GET\r\n                                  }", span="34-38"];
m4_5_13 [color=green, community=0, file=merged, label="var response = await client.ExecuteTaskAsync<StupidClass>(request)", prediction=237, span="40-40"];
m4_5_21 [file=merged, label="Entry System.Threading.Tasks.Task.Wait()", span="0-0"];
m4_5_16 [file=merged, label="Assert.IsInstanceOf<WebException>(response.ErrorException)", span="45-45"];
m4_5_17 [file=merged, label="Assert.AreEqual(WebExceptionStatus.ConnectFailure, ((WebException)response.ErrorException).Status)", span="46-46"];
m4_5_18 [file=merged, label="Assert.AreEqual(ResponseStatus.Error, response.ResponseStatus)", span="47-47"];
m4_5_19 [file=merged, label="Exit RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Task_Handles_Non_Existent_Domain()", span="31-31"];
m4_5_22 [file=merged, label="Entry RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", span="56-56"];
m4_5_23 [file=merged, label="string baseUrl = ''http://localhost:8888/''", span="58-58"];
m4_5_24 [file=merged, label="SimpleServer.Create(baseUrl, TimeoutHandler)", span="60-60"];
m4_5_25 [file=merged, label="RestClient client = new RestClient(baseUrl)", span="62-62"];
m4_5_32 [file=merged, label="Entry RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", span="21-21"];
m4_5_26 [file=merged, label="RestRequest request = new RestRequest(''404'')\r\n                                      {\r\n                                          \\nTimeout = 500\r\n                                      }", span="63-66"];
m4_5_27 [file=merged, label="IRestResponse response = client.Execute(request)", span="67-67"];
m4_5_28 [file=merged, label="Assert.NotNull(response.ErrorException)", span="69-69"];
m4_5_29 [file=merged, label="Assert.IsInstanceOf<WebException>(response.ErrorException)", span="70-70"];
m4_5_30 [file=merged, label="Assert.AreEqual(ResponseStatus.TimedOut, response.ResponseStatus)", span="71-71"];
m4_5_31 [file=merged, label="Exit RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", span="56-56"];
m4_5_34 [file=merged, label="Entry RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", span="76-76"];
m4_5_35 [file=merged, label="string baseUrl = ''http://localhost:8888/''", span="78-78"];
m4_5_36 [file=merged, label="ManualResetEvent resetEvent = new ManualResetEvent(false)", span="80-80"];
m4_5_37 [file=merged, label="SimpleServer.Create(baseUrl, TimeoutHandler)", span="82-82"];
m4_5_38 [file=merged, label="RestClient client = new RestClient(baseUrl)", span="84-84"];
m4_5_41 [file=merged, label="client.ExecuteAsync(request, responseCb =>\r\n                                             {\r\n                                                 \\nresponse = responseCb;\r\n                                                 resetEvent.Set();\r\n                                             })", span="91-95"];
m4_5_42 [file=merged, label="resetEvent.WaitOne()", span="97-97"];
m4_5_49 [file=merged, label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m4_5_54 [file=merged, label="resetEvent.Set()", span="94-94"];
m4_5_39 [file=merged, label="RestRequest request = new RestRequest(''404'')\r\n                                      {\r\n                                          \\nTimeout = 500\r\n                                      }", span="85-88"];
m4_5_40 [file=merged, label="IRestResponse response = null", span="89-89"];
m4_5_43 [file=merged, label="Assert.NotNull(response)", span="99-99"];
m4_5_44 [file=merged, label="Assert.AreEqual(response.ResponseStatus, ResponseStatus.TimedOut)", span="100-100"];
m4_5_45 [file=merged, label="Assert.NotNull(response.ErrorException)", span="101-101"];
m4_5_46 [file=merged, label="Assert.IsInstanceOf<WebException>(response.ErrorException)", span="102-102"];
m4_5_47 [file=merged, label="Assert.AreEqual(response.ErrorException.Message, ''The request timed-out.'')", span="103-103"];
m4_5_50 [file=merged, label="Entry RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse>)", span="17-17"];
m4_5_52 [file=merged, label="Entry lambda expression", span="91-95"];
m4_5_51 [file=merged, label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
m4_5_48 [file=merged, label="Exit RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", span="76-76"];
m4_5_53 [file=merged, label="response = responseCb", span="93-93"];
m4_5_55 [file=merged, label="Exit lambda expression", span="91-95"];
m4_5_56 [file=merged, label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m4_5_57 [file=merged, label="Entry RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", span="108-108"];
m4_5_58 [file=merged, label="string baseUrl = ''http://localhost:8888/''", span="110-110"];
m4_5_59 [file=merged, label="SimpleServer.Create(baseUrl, TimeoutHandler)", span="112-112"];
m4_5_60 [file=merged, label="RestClient client = new RestClient(baseUrl)", span="114-114"];
m4_5_61 [file=merged, label="RestRequest request = new RestRequest(''404'') { Timeout = 500 }", span="115-115"];
m4_5_62 [file=merged, label="Task<IRestResponse> task = client.ExecuteTaskAsync(request)", span="116-116"];
m4_5_63 [file=merged, label="task.Wait()", span="118-118"];
m4_5_64 [file=merged, label="IRestResponse response = task.Result", span="120-120"];
m4_5_65 [file=merged, label="Assert.NotNull(response)", span="122-122"];
m4_5_66 [file=merged, label="Assert.AreEqual(response.ResponseStatus, ResponseStatus.TimedOut)", span="123-123"];
m4_5_67 [file=merged, label="Assert.NotNull(response.ErrorException)", span="125-125"];
m4_5_68 [file=merged, label="Assert.IsInstanceOf<WebException>(response.ErrorException)", span="126-126"];
m4_5_69 [file=merged, label="Assert.AreEqual(response.ErrorException.Message, ''The request timed-out.'')", span="127-127"];
m4_5_70 [file=merged, label="Exit RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", span="108-108"];
m4_5_72 [file=merged, label="Entry RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", span="137-137"];
m4_5_73 [file=merged, label="string baseUrl = ''http://localhost:8888/''", span="139-139"];
m4_5_74 [file=merged, label="SimpleServer.Create(baseUrl, TimeoutHandler)", span="141-141"];
m4_5_75 [file=merged, label="RestClient client = new RestClient(baseUrl)", span="143-143"];
m4_5_76 [file=merged, label="RestRequest request = new RestRequest(''404'') { Timeout = 500 }", span="144-144"];
m4_5_77 [file=merged, label="IRestResponse<Response> response = client.Execute<Response>(request)", span="145-145"];
m4_5_78 [file=merged, label="Assert.Null(response.Data)", span="147-147"];
m4_5_79 [file=merged, label="Assert.NotNull(response.ErrorException)", span="148-148"];
m4_5_80 [file=merged, label="Assert.IsInstanceOf<WebException>(response.ErrorException)", span="149-149"];
m4_5_81 [file=merged, label="Assert.AreEqual(response.ResponseStatus, ResponseStatus.TimedOut)", span="150-150"];
m4_5_82 [file=merged, label="Exit RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", span="137-137"];
m4_5_84 [file=merged, label="Entry RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.TimeoutHandler(System.Net.HttpListenerContext)", span="158-158"];
m4_5_85 [file=merged, label="Thread.Sleep(101000)", span="160-160"];
m4_5_86 [file=merged, label="Exit RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.TimeoutHandler(System.Net.HttpListenerContext)", span="158-158"];
m4_5_87 [file=merged, label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m4_6_0 [file=merged, label="Entry RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", span="26-26"];
m4_6_1 [file=merged, label="this.FileName = Path.Combine(''SampleData'', ''restsharp.nuspec'')", span="28-28"];
m4_6_2 [file=merged, label="this.Setup()", span="29-29"];
m4_6_4 [file=merged, label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m4_6_3 [file=merged, label="Exit RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", span="26-26"];
m4_6_5 [file=merged, label="Entry RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.Setup()", span="32-32"];
m4_6_6 [file=merged, label="Exit RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.Setup()", span="32-32"];
m4_6_14 [file=merged, label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.Setup()", span="52-52"];
m4_6_22 [file=merged, label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", span="90-90"];
m4_6_7 [file=merged, label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", span="41-41"];
m4_6_8 [file=merged, label="Build.NuSpecUpdateTask task = new Build.NuSpecUpdateTask()", span="43-43"];
m4_6_9 [file=merged, label="Assert.False(task.Execute())", span="45-45"];
m4_6_11 [file=merged, label="Entry RestSharp.Build.NuSpecUpdateTask.NuSpecUpdateTask()", span="25-25"];
m4_6_10 [file=merged, label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", span="41-41"];
m4_6_12 [file=merged, label="Entry RestSharp.Build.NuSpecUpdateTask.Execute()", span="32-32"];
m4_6_15 [file=merged, label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.Setup()", span="52-52"];
m4_6_16 [file=merged, label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", span="55-55"];
m4_6_17 [color=green, community=0, file=merged, label="Build.NuSpecUpdateTask task = new Build.NuSpecUpdateTask\r\n                                                  {\r\n                                                      \\nSpecFile = FileName,\r\n                                                      SourceAssemblyFile = ''RestSharp.Tests.dll''\r\n                                                  }", prediction=238, span="57-61"];
m4_6_18 [color=green, community=0, file=merged, label="task.Execute()", prediction=239, span="63-63"];
m4_6_19 [file=merged, label="Assert.AreEqual(''1.0.0.0'', task.Version)", span="65-65"];
m4_6_20 [file=merged, label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", span="55-55"];
m4_6_23 [file=merged, label="this.subject.SpecFile = FileName", span="92-92"];
m4_6_24 [file=merged, label="this.subject.SourceAssemblyFile = ''RestSharp.dll''", span="93-93"];
m4_6_25 [file=merged, label="this.result = this.subject.Execute()", span="94-94"];
m4_6_26 [file=merged, label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", span="90-90"];
m4_6_27 [file=merged, label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.ReturnsTrue()", span="98-98"];
m4_6_28 [file=merged, label="Assert.True(this.result)", span="100-100"];
m4_6_29 [file=merged, label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.ReturnsTrue()", span="98-98"];
m4_6_31 [file=merged, label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsIdFromAssembly()", span="104-104"];
m4_6_32 [file=merged, label="Assert.AreEqual(EXPECTED_ID, this.subject.Id)", span="106-106"];
m4_6_33 [file=merged, label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsIdFromAssembly()", span="104-104"];
m4_6_34 [file=merged, label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsDescriptionFromAssembly()", span="110-110"];
m4_6_35 [file=merged, label="Assert.AreEqual(EXPECTED_DESCRIPTION, this.subject.Description)", span="112-112"];
m4_6_36 [file=merged, label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsDescriptionFromAssembly()", span="110-110"];
m4_6_37 [file=merged, label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsVersionFromAssemblyInfo()", span="116-116"];
m4_6_38 [file=merged, label="Assert.True(this.expectedVersion.IsMatch(this.subject.Version))", span="118-118"];
m4_6_39 [file=merged, label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsVersionFromAssemblyInfo()", span="116-116"];
m4_6_40 [file=merged, label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
m4_6_41 [file=merged, label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsAuthorsFromAssemblyInfo()", span="122-122"];
m4_6_42 [file=merged, label="Assert.AreEqual(EXPECTED_AUTHORS, this.subject.Authors)", span="124-124"];
m4_6_43 [file=merged, label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsAuthorsFromAssemblyInfo()", span="122-122"];
m4_6_44 [file=merged, label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", span="128-128"];
m4_6_45 [file=merged, label="XDocument doc = XDocument.Load(ComputedFileName)", span="130-130"];
m4_6_46 [file=merged, label="Assert.AreEqual(EXPECTED_ID, doc.Descendants(''id'').First().Value)", span="132-132"];
m4_6_47 [file=merged, label="Assert.AreEqual(EXPECTED_DESCRIPTION, doc.Descendants(''description'').First().Value)", span="133-133"];
m4_6_48 [file=merged, label="Assert.AreEqual(EXPECTED_AUTHORS, doc.Descendants(''authors'').First().Value)", span="134-134"];
m4_6_49 [file=merged, label="Assert.AreEqual(EXPECTED_OWNERS, doc.Descendants(''owners'').First().Value)", span="135-135"];
m4_6_50 [file=merged, label="Assert.True(this.expectedVersion.IsMatch(doc.Descendants(''version'').First().Value))", span="136-136"];
m4_6_51 [file=merged, label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", span="128-128"];
m4_7_0 [file=merged, label="Entry RestSharp.Tests.OAuthTests.OAuthTests()", span="12-12"];
m4_7_1 [file=merged, label="Thread.CurrentThread.CurrentCulture = CultureInfo.InvariantCulture", span="14-14"];
m4_7_2 [file=merged, label="Thread.CurrentThread.CurrentUICulture = CultureInfo.InstalledUICulture", span="15-15"];
m4_7_3 [file=merged, label="Exit RestSharp.Tests.OAuthTests.OAuthTests()", span="12-12"];
m4_7_4 [file=merged, label="Entry RestSharp.Tests.OAuthTests.UrlStrictEncode_Encodes_Correctly(string, string)", span="28-28"];
m4_7_5 [file=merged, label="string actual = OAuthTools.UrlEncodeStrict(value)", span="30-30"];
m4_7_6 [file=merged, label="Assert.AreEqual(expected, actual)", span="32-32"];
m4_7_8 [file=merged, label="Entry RestSharp.Authenticators.OAuth.OAuthTools.UrlEncodeStrict(string)", span="153-153"];
m4_7_7 [file=merged, label="Exit RestSharp.Tests.OAuthTests.UrlStrictEncode_Encodes_Correctly(string, string)", span="28-28"];
m4_7_10 [file=merged, label="Entry RestSharp.Tests.OAuthTests.PercentEncode_Encodes_Correctly(string, string)", span="39-39"];
m4_7_11 [file=merged, label="string actual = value.PercentEncode()", span="41-41"];
m4_7_12 [file=merged, label="Assert.AreEqual(expected, actual)", span="43-43"];
m4_7_14 [file=merged, label="Entry string.PercentEncode()", span="67-67"];
m4_7_13 [file=merged, label="Exit RestSharp.Tests.OAuthTests.PercentEncode_Encodes_Correctly(string, string)", span="39-39"];
m4_7_15 [file=merged, label="Entry RestSharp.Tests.OAuthTests.HmacSha256_Hashes_Correctly(string, string)", span="51-51"];
m4_7_16 [file=merged, label="string consumerSecret = ''12345678''", span="53-53"];
m4_7_17 [file=merged, label="string actual = OAuthTools.GetSignature(OAuthSignatureMethod.HmacSha256, value, consumerSecret)", span="54-54"];
m4_7_18 [file=merged, label="Assert.AreEqual(expected, actual)", span="56-56"];
m4_7_20 [file=merged, label="Entry RestSharp.Authenticators.OAuth.OAuthTools.GetSignature(RestSharp.Authenticators.OAuth.OAuthSignatureMethod, string, string)", span="278-278"];
m4_7_19 [file=merged, label="Exit RestSharp.Tests.OAuthTests.HmacSha256_Hashes_Correctly(string, string)", span="51-51"];
m4_7_21 [file=merged, label="Entry RestSharp.Tests.OAuthTests.HmacSha256_Does_Not_Accept_Nulls()", span="61-61"];
m4_7_22 [file=merged, label="string consumerSecret = ''12345678''", span="63-63"];
m4_7_23 [color=green, community=0, file=merged, label="Assert.That(() => OAuthTools.GetSignature(OAuthSignatureMethod.HmacSha256, null, consumerSecret),\r\n                Throws.TypeOf<\\nArgumentNullException>())", prediction=240, span="63-64"];
m4_7_28 [color=green, community=0, file=merged, label="OAuthTools.GetSignature(OAuthSignatureMethod.HmacSha256, null, consumerSecret)", prediction=241, span="63-63"];
m4_7_24 [file=merged, label="Exit RestSharp.Tests.OAuthTests.HmacSha256_Does_Not_Accept_Nulls()", span="61-61"];
m4_7_27 [file=merged, label="Entry lambda expression", span="63-63"];
m4_7_29 [file=merged, label="Exit lambda expression", span="63-63"];
m4_8_0 [file=merged, label="Entry RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", span="12-12"];
m4_8_1 [file=merged, label="RestRequest request = new RestRequest()", span="14-14"];
m4_8_2 [file=merged, label="request.AddParameter(''param2'', ''value2'')", span="16-16"];
m4_8_5 [file=merged, label="Uri output = client.BuildUri(request)", span="20-20"];
m4_8_8 [file=merged, label="Entry RestSharp.RestRequest.RestRequest()", span="69-69"];
m4_8_3 [file=merged, label="RestClient client = new RestClient(''http://example.com/resource?param1=value1'')", span="18-18"];
m4_8_9 [file=merged, label="Entry RestSharp.RestRequest.AddParameter(string, object)", span="406-406"];
m4_8_4 [file=merged, label="Uri expected = new Uri(''http://example.com/resource?param1=value1&param2=value2'')", span="19-19"];
m4_8_10 [file=merged, label="Entry RestSharp.RestClient.RestClient(string)", span="174-174"];
m4_8_6 [file=merged, label="Assert.AreEqual(expected, output)", span="22-22"];
m4_8_11 [file=merged, label="Entry System.Uri.Uri(string)", span="0-0"];
m4_8_12 [file=merged, label="Entry RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", span="313-313"];
m4_8_7 [file=merged, label="Exit RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", span="12-12"];
m4_8_14 [file=merged, label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", span="26-26"];
m4_8_15 [file=merged, label="RestRequest request = new RestRequest(''/resource'')", span="28-28"];
m4_8_16 [file=merged, label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="29-29"];
m4_8_18 [file=merged, label="Uri output = client.BuildUri(request)", span="31-31"];
m4_8_21 [file=merged, label="Entry RestSharp.RestRequest.RestRequest(string)", span="94-94"];
m4_8_17 [file=merged, label="Uri expected = new Uri(''http://example.com/resource'')", span="30-30"];
m4_8_22 [file=merged, label="Entry RestSharp.RestClient.RestClient(System.Uri)", span="165-165"];
m4_8_19 [file=merged, label="Assert.AreEqual(expected, output)", span="33-33"];
m4_8_20 [file=merged, label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", span="26-26"];
m4_8_23 [file=merged, label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", span="37-37"];
m4_8_24 [file=merged, label="RestRequest request = new RestRequest(''/resource'', Method.POST)", span="39-39"];
m4_8_25 [file=merged, label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="40-40"];
m4_8_27 [file=merged, label="Uri output = client.BuildUri(request)", span="42-42"];
m4_8_30 [file=merged, label="Entry RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", span="101-101"];
m4_8_26 [file=merged, label="Uri expected = new Uri(''http://example.com/resource'')", span="41-41"];
m4_8_28 [file=merged, label="Assert.AreEqual(expected, output)", span="44-44"];
m4_8_29 [file=merged, label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", span="37-37"];
m4_8_31 [file=merged, label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", span="48-48"];
m4_8_32 [file=merged, label="RestRequest request = new RestRequest(''/resource'')", span="50-50"];
m4_8_33 [file=merged, label="request.AddParameter(''foo'', ''bar'')", span="52-52"];
m4_8_36 [file=merged, label="Uri output = client.BuildUri(request)", span="56-56"];
m4_8_34 [file=merged, label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="54-54"];
m4_8_35 [file=merged, label="Uri expected = new Uri(''http://example.com/resource?foo=bar'')", span="55-55"];
m4_8_37 [file=merged, label="Assert.AreEqual(expected, output)", span="58-58"];
m4_8_38 [file=merged, label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", span="48-48"];
m4_8_39 [file=merged, label="Entry RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", span="62-62"];
m4_8_40 [file=merged, label="RestRequest request = new RestRequest(''/resource/'')", span="64-64"];
m4_8_41 [file=merged, label="RestClient client = new RestClient(''http://example.com'')", span="65-65"];
m4_8_42 [file=merged, label="request.AddParameter(''foo'', ''bar'')", span="67-67"];
m4_8_44 [file=merged, label="Uri output = client.BuildUri(request)", span="70-70"];
m4_8_45 [file=merged, label="client.Execute(request)", span="72-72"];
m4_8_43 [file=merged, label="Uri expected = new Uri(''http://example.com/resource/?foo=bar'')", span="69-69"];
m4_8_46 [file=merged, label="Assert.AreEqual(expected, output)", span="74-74"];
m4_8_47 [file=merged, label="Exit RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", span="62-62"];
m4_8_49 [file=merged, label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", span="78-78"];
m4_8_50 [file=merged, label="RestRequest request = new RestRequest(''/resource'', Method.POST)", span="80-80"];
m4_8_51 [file=merged, label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="81-81"];
m4_8_53 [file=merged, label="Uri output = client.BuildUri(request)", span="83-83"];
m4_8_52 [file=merged, label="Uri expected = new Uri(''http://example.com/resource'')", span="82-82"];
m4_8_54 [file=merged, label="Assert.AreEqual(expected, output)", span="85-85"];
m4_8_55 [file=merged, label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", span="78-78"];
m4_8_56 [file=merged, label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", span="89-89"];
m4_8_57 [file=merged, label="RestRequest request = new RestRequest(''resource/foo'')", span="91-91"];
m4_8_58 [file=merged, label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="92-92"];
m4_8_60 [file=merged, label="Uri output = client.BuildUri(request)", span="94-94"];
m4_8_59 [file=merged, label="Uri expected = new Uri(''http://example.com/resource/foo'')", span="93-93"];
m4_8_61 [file=merged, label="Assert.AreEqual(expected, output)", span="96-96"];
m4_8_62 [file=merged, label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", span="89-89"];
m4_8_63 [file=merged, label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", span="100-100"];
m4_8_64 [file=merged, label="RestRequest request = new RestRequest(''resource/foo'', Method.POST)", span="102-102"];
m4_8_65 [file=merged, label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="103-103"];
m4_8_67 [file=merged, label="Uri output = client.BuildUri(request)", span="105-105"];
m4_8_66 [file=merged, label="Uri expected = new Uri(''http://example.com/resource/foo'')", span="104-104"];
m4_8_68 [file=merged, label="Assert.AreEqual(expected, output)", span="107-107"];
m4_8_69 [file=merged, label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", span="100-100"];
m4_8_70 [file=merged, label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", span="111-111"];
m4_8_71 [file=merged, label="RestRequest request = new RestRequest(''resource/{foo}'')", span="113-113"];
m4_8_72 [file=merged, label="request.AddUrlSegment(''foo'', ''bar'')", span="115-115"];
m4_8_75 [file=merged, label="Uri output = client.BuildUri(request)", span="119-119"];
m4_8_73 [file=merged, label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="117-117"];
m4_8_78 [file=merged, label="Entry RestSharp.RestRequest.AddUrlSegment(string, string)", span="545-545"];
m4_8_74 [file=merged, label="Uri expected = new Uri(''http://example.com/resource/bar'')", span="118-118"];
m4_8_76 [file=merged, label="Assert.AreEqual(expected, output)", span="121-121"];
m4_8_77 [file=merged, label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", span="111-111"];
m4_8_79 [file=merged, label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", span="125-125"];
m4_8_80 [file=merged, label="RestRequest request = new RestRequest(''/resource/{foo}'', Method.GET)", span="127-127"];
m4_8_81 [file=merged, label="request.AddUrlSegment(''foo'', null)", span="129-129"];
m4_8_83 [file=merged, label="ArgumentException exception = Assert.Throws<ArgumentException>(() => client.BuildUri(request))", span="132-132"];
m4_8_94 [file=merged, label="client.BuildUri(request)", span="132-132"];
m4_8_82 [file=merged, label="RestClient client = new RestClient(''http://example.com/api/1.0'')", span="131-131"];
m4_8_84 [file=merged, label="Assert.IsNotNull(exception)", span="134-134"];
m4_8_85 [color=green, community=0, file=merged, label="Assert.False(string.IsNullOrEmpty(exception.Message))", prediction=242, span="135-135"];
m4_8_86 [file=merged, label="Assert.IsTrue(exception.Message.Contains(''foo''))", span="136-136"];
m4_8_93 [file=merged, label="Entry lambda expression", span="132-132"];
m4_8_90 [file=merged, label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m4_8_87 [file=merged, label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", span="125-125"];
m4_8_91 [file=merged, label="Entry Unk.False", span="0-0"];
m4_8_95 [file=merged, label="Exit lambda expression", span="132-132"];
m4_8_96 [file=merged, label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", span="140-140"];
m4_8_97 [file=merged, label="RestRequest request = new RestRequest(''resource/{foo}'', Method.POST)", span="142-142"];
m4_8_98 [file=merged, label="request.AddUrlSegment(''foo'', ''bar'')", span="144-144"];
m4_8_101 [file=merged, label="Uri output = client.BuildUri(request)", span="148-148"];
m4_8_99 [file=merged, label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="146-146"];
m4_8_100 [file=merged, label="Uri expected = new Uri(''http://example.com/resource/bar'')", span="147-147"];
m4_8_102 [file=merged, label="Assert.AreEqual(expected, output)", span="150-150"];
m4_8_103 [file=merged, label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", span="140-140"];
m4_8_104 [file=merged, label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", span="154-154"];
m4_8_105 [file=merged, label="RestRequest request = new RestRequest()", span="156-156"];
m4_8_106 [file=merged, label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="157-157"];
m4_8_108 [file=merged, label="Uri output = client.BuildUri(request)", span="159-159"];
m4_8_107 [file=merged, label="Uri expected = new Uri(''http://example.com/'')", span="158-158"];
m4_8_109 [file=merged, label="Assert.AreEqual(expected, output)", span="161-161"];
m4_8_110 [file=merged, label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", span="154-154"];
m4_8_111 [file=merged, label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", span="165-165"];
m4_8_112 [file=merged, label="RestRequest request = new RestRequest()", span="167-167"];
m4_8_113 [file=merged, label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="168-168"];
m4_8_115 [file=merged, label="Uri output = client.BuildUri(request)", span="170-170"];
m4_8_114 [file=merged, label="Uri expected = new Uri(''http://example.com/'')", span="169-169"];
m4_8_116 [file=merged, label="Assert.AreEqual(expected, output)", span="172-172"];
m4_8_117 [file=merged, label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", span="165-165"];
m4_8_118 [file=merged, label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", span="176-176"];
m4_8_119 [file=merged, label="RestRequest request = new RestRequest(''resource'', Method.POST)", span="178-178"];
m4_8_120 [file=merged, label="request.AddParameter(''foo'', ''bar'', ParameterType.QueryString)", span="180-180"];
m4_8_123 [file=merged, label="Uri output = client.BuildUri(request)", span="184-184"];
m4_8_121 [file=merged, label="RestClient client = new RestClient(''http://example.com'')", span="182-182"];
m4_8_126 [file=merged, label="Entry RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="427-427"];
m4_8_122 [file=merged, label="Uri expected = new Uri(''http://example.com/resource?foo=bar'')", span="183-183"];
m4_8_124 [file=merged, label="Assert.AreEqual(expected, output)", span="186-186"];
m4_8_125 [file=merged, label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", span="176-176"];
m4_8_127 [file=merged, label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", span="190-190"];
m4_8_128 [file=merged, label="RestRequest request = new RestRequest(''v1/people/~/network/updates'', Method.GET)", span="192-192"];
m4_8_129 [file=merged, label="request.AddParameter(''type'', ''STAT'')", span="194-194"];
m4_8_130 [file=merged, label="request.AddParameter(''type'', ''PICT'')", span="195-195"];
m4_8_131 [file=merged, label="request.AddParameter(''count'', ''50'')", span="196-196"];
m4_8_132 [file=merged, label="request.AddParameter(''start'', ''50'')", span="197-197"];
m4_8_135 [file=merged, label="Uri output = client.BuildUri(request)", span="201-201"];
m4_8_133 [file=merged, label="RestClient client = new RestClient(''http://api.linkedin.com'')", span="199-199"];
m4_8_134 [file=merged, label="Uri expected = new Uri(''http://api.linkedin.com/v1/people/~/network/updates?type=STAT&type=PICT&count=50&start=50'')", span="200-200"];
m4_8_136 [file=merged, label="Assert.AreEqual(expected, output)", span="203-203"];
m4_8_137 [file=merged, label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", span="190-190"];
m4_8_138 [file=merged, label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", span="207-207"];
m4_8_139 [file=merged, label="RestRequest request = new RestRequest()", span="209-209"];
m4_8_140 [file=merged, label="request.AddUrlSegment(''foo'', ''bar'')", span="211-211"];
m4_8_143 [file=merged, label="Uri output = client.BuildUri(request)", span="215-215"];
m4_8_141 [file=merged, label="RestClient client = new RestClient(new Uri(''http://example.com/{foo}''))", span="213-213"];
m4_8_142 [file=merged, label="Uri expected = new Uri(''http://example.com/bar'')", span="214-214"];
m4_8_144 [file=merged, label="Assert.AreEqual(expected, output)", span="217-217"];
m4_8_145 [file=merged, label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", span="207-207"];
m4_8_146 [file=merged, label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", span="221-221"];
m4_8_147 [file=merged, label="RestRequest request = new RestRequest()", span="223-223"];
m4_8_148 [file=merged, label="request.AddUrlSegment(''foo'', ''bar'')", span="225-225"];
m4_8_151 [file=merged, label="Uri output = client.BuildUri(request)", span="229-229"];
m4_8_149 [file=merged, label="RestClient client = new RestClient(''http://example.com/{foo}'')", span="227-227"];
m4_8_150 [file=merged, label="Uri expected = new Uri(''http://example.com/bar'')", span="228-228"];
m4_8_152 [file=merged, label="Assert.AreEqual(expected, output)", span="231-231"];
m4_8_153 [file=merged, label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", span="221-221"];
m4_8_154 [file=merged, label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", span="235-235"];
m4_8_155 [file=merged, label="RestRequest request = new RestRequest(''resource/{baz}'')", span="237-237"];
m4_8_156 [file=merged, label="request.AddUrlSegment(''foo'', ''bar'')", span="239-239"];
m4_8_157 [file=merged, label="request.AddUrlSegment(''baz'', ''bat'')", span="240-240"];
m4_8_160 [file=merged, label="Uri output = client.BuildUri(request)", span="244-244"];
m4_8_158 [file=merged, label="RestClient client = new RestClient(new Uri(''http://example.com/{foo}''))", span="242-242"];
m4_8_159 [file=merged, label="Uri expected = new Uri(''http://example.com/bar/resource/bat'')", span="243-243"];
m4_8_161 [file=merged, label="Assert.AreEqual(expected, output)", span="246-246"];
m4_8_162 [file=merged, label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", span="235-235"];
m4_8_163 [file=merged, label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", span="250-250"];
m4_8_164 [file=merged, label="RestRequest request = new RestRequest(''resource/{baz}'')", span="252-252"];
m4_8_165 [file=merged, label="request.AddUrlSegment(''foo'', ''bar'')", span="254-254"];
m4_8_166 [file=merged, label="request.AddUrlSegment(''baz'', ''bat'')", span="255-255"];
m4_8_169 [file=merged, label="Uri output = client.BuildUri(request)", span="259-259"];
m4_8_167 [file=merged, label="RestClient client = new RestClient(''http://example.com/{foo}'')", span="257-257"];
m4_8_168 [file=merged, label="Uri expected = new Uri(''http://example.com/bar/resource/bat'')", span="258-258"];
m4_8_170 [file=merged, label="Assert.AreEqual(expected, output)", span="261-261"];
m4_8_171 [file=merged, label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", span="250-250"];
m4_8_172 [file=merged, label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Invalid_Url_string_throws_exception()", span="265-265"];
m4_8_173 [file=merged, label="Assert.Throws<UriFormatException>(delegate { new RestClient(''invalid url''); })", span="267-267"];
m4_8_174 [file=merged, label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Invalid_Url_string_throws_exception()", span="265-265"];
m4_8_175 [file=merged, label="Entry lambda expression", span="267-267"];
m4_8_176 [file=merged, label="new RestClient(''invalid url'')", span="267-267"];
m4_8_177 [file=merged, label="Exit lambda expression", span="267-267"];
m4_8_178 [file=merged, label="Entry RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", span="271-271"];
m4_8_179 [file=merged, label="RestRequest request = new RestRequest()", span="273-273"];
m4_8_180 [file=merged, label="request.AddOrUpdateParameter(''param2'', ''value2'')", span="275-275"];
m4_8_181 [file=merged, label="request.AddOrUpdateParameter(''param3'', ''value3'')", span="276-276"];
m4_8_184 [file=merged, label="Uri output = client.BuildUri(request)", span="280-280"];
m4_8_187 [file=merged, label="Entry RestSharp.RestRequest.AddOrUpdateParameter(string, object)", span="473-473"];
m4_8_182 [file=merged, label="RestClient client = new RestClient(''http://example.com/resource?param1=value1'')", span="278-278"];
m4_8_183 [file=merged, label="Uri expected = new Uri(''http://example.com/resource?param1=value1&param2=value2&param3=value3'')", span="279-279"];
m4_8_185 [file=merged, label="Assert.AreEqual(expected, output)", span="282-282"];
m4_8_186 [file=merged, label="Exit RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", span="271-271"];
m4_8_188 [file=merged, label="Entry RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", span="286-286"];
m4_8_189 [file=merged, label="RestRequest request = new RestRequest()", span="288-288"];
m4_8_190 [file=merged, label="request.AddOrUpdateParameter(''param2'', ''value2'')", span="290-290"];
m4_8_191 [file=merged, label="request.AddOrUpdateParameter(''param2'', ''value2-1'')", span="291-291"];
m4_8_194 [file=merged, label="Uri output = client.BuildUri(request)", span="295-295"];
m4_8_192 [file=merged, label="RestClient client = new RestClient(''http://example.com/resource?param1=value1'')", span="293-293"];
m4_8_193 [file=merged, label="Uri expected = new Uri(''http://example.com/resource?param1=value1&param2=value2-1'')", span="294-294"];
m4_8_195 [file=merged, label="Assert.AreEqual(expected, output)", span="297-297"];
m4_8_196 [file=merged, label="Exit RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", span="286-286"];
m5_50 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_Execute()", color=green, community=1, file="MultipartFormDataTests.cs", label="RestRequest request = new RestRequest(''?json_route=/posts'')\r\n            {\r\n                AlwaysMultipartFormData = true,\r\n                \\nMethod = Method.POST,\r\n            }", prediction=243, span="118-122"];
m5_118 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AddParameters(RestSharp.IRestRequest)", file="MultipartFormDataTests.cs", label="request.AddParameter(''foo'', ''bar'')", span="230-230"];
m5_119 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AddParameters(RestSharp.IRestRequest)", file="MultipartFormDataTests.cs", label="request.AddParameter(''a name with spaces'', ''somedata'')", span="231-231"];
m5_120 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AddParameters(RestSharp.IRestRequest)", file="MultipartFormDataTests.cs", label="Exit RestSharp.IntegrationTests.MultipartFormDataTests.AddParameters(RestSharp.IRestRequest)", span="228-228"];
m5_17 [cluster="System.IO.Directory.GetParent(string)", file="MultipartFormDataTests.cs", label="Entry System.IO.Directory.GetParent(string)", span="0-0"];
m5_19 [cluster="RestSharp.RestRequest.AddFile(string, string, string)", file="MultipartFormDataTests.cs", label="Entry RestSharp.RestRequest.AddFile(string, string, string)", span="134-134"];
m5_42 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormDataAsync()", file="MultipartFormDataTests.cs", label="Entry RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormDataAsync()", span="98-98"];
m5_44 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData()", color=green, community=1, file="MultipartFormDataTests.cs", label="RestRequest request = new RestRequest(''/'', Method.POST)\r\n            {\r\n                AlwaysMultipartFormData = true\r\n            }", prediction=244, span="103-106"];
m5_45 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData()", color=green, community=0, file="MultipartFormDataTests.cs", label="AddParameters(request)", prediction=245, span="108-108"];
m5_46 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData()", color=green, community=0, file="MultipartFormDataTests.cs", label="IRestResponse response = _client.Execute(request)", prediction=246, span="110-110"];
m5_47 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData()", color=green, community=0, file="MultipartFormDataTests.cs", label="Assert.AreEqual(_expected, response.Content)", prediction=247, span="112-112"];
m5_49 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormDataAsync()", file="MultipartFormDataTests.cs", label="Exit RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormDataAsync()", span="98-98"];
m5_13 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile_Async()", color=green, community=0, file="MultipartFormDataTests.cs", label="var response = await _client.ExecuteTaskAsync(request)", prediction=248, span="61-61"];
m5_20 [cluster="RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", file="MultipartFormDataTests.cs", label="Entry RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", span="449-449"];
m5_110 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.EchoHandler(System.Net.HttpListenerContext)", file="MultipartFormDataTests.cs", label="Entry RestSharp.IntegrationTests.MultipartFormDataTests.EchoHandler(System.Net.HttpListenerContext)", span="219-219"];
m5_111 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.EchoHandler(System.Net.HttpListenerContext)", file="MultipartFormDataTests.cs", label="obj.Response.StatusCode = 200", span="221-221"];
m5_112 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.EchoHandler(System.Net.HttpListenerContext)", file="MultipartFormDataTests.cs", label="StreamReader streamReader = new StreamReader(obj.Request.InputStream)", span="223-223"];
m5_113 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.EchoHandler(System.Net.HttpListenerContext)", file="MultipartFormDataTests.cs", label="obj.Response.OutputStream.WriteStringUtf8(streamReader.ReadToEnd())", span="225-225"];
m5_114 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.EchoHandler(System.Net.HttpListenerContext)", file="MultipartFormDataTests.cs", label="Exit RestSharp.IntegrationTests.MultipartFormDataTests.EchoHandler(System.Net.HttpListenerContext)", span="219-219"];
m5_75 [cluster="RestSharp.RestRequest.RestRequest(string)", file="MultipartFormDataTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string)", span="94-94"];
m5_115 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="MultipartFormDataTests.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m5_109 [cluster="System.Threading.EventWaitHandle.Set()", file="MultipartFormDataTests.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m5_105 [cluster="lambda expression", file="MultipartFormDataTests.cs", label="Entry lambda expression", span="206-210"];
m5_24 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile()", color=green, community=0, file="MultipartFormDataTests.cs", label="string path = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, ''Assets\\TestFile.txt'')", prediction=247, span="73-73"];
m5_25 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile()", color=green, community=0, file="MultipartFormDataTests.cs", label="request.AddFile(''fileName'', path)", prediction=250, span="74-74"];
m5_40 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile()", color=green, community=0, file="MultipartFormDataTests.cs", label="Exit RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile()", prediction=247, span="69-69"];
m5_26 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile()", color=green, community=0, file="MultipartFormDataTests.cs", label="request.AddParameter(''controlName'', ''test'', ''application/json'', ParameterType.RequestBody)", prediction=250, span="76-76"];
m5_78 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteTaskAsync()", color=green, community=0, file="MultipartFormDataTests.cs", label="Entry RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteTaskAsync()", prediction=253, span="164-164"];
m5_55 [cluster="lambda expression", file="MultipartFormDataTests.cs", label="Exit lambda expression", span="112-116"];
m5_77 [cluster="lambda expression", color=green, community=0, file="MultipartFormDataTests.cs", label="syncResponse = response", prediction=254, span="163-163"];
m5_52 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_Execute()", color=green, community=0, file="MultipartFormDataTests.cs", label="IRestResponse response = _client.Execute(request)", prediction=255, span="126-126"];
m5_53 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_Execute()", color=green, community=0, file="MultipartFormDataTests.cs", label="Assert.Null(response.ErrorException)", prediction=256, span="128-128"];
m5_87 [cluster="lambda expression", file="MultipartFormDataTests.cs", label="Entry lambda expression", span="180-180"];
m5_89 [cluster="lambda expression", file="MultipartFormDataTests.cs", label="Exit lambda expression", span="180-180"];
m5_108 [cluster="lambda expression", file="MultipartFormDataTests.cs", label="Exit lambda expression", span="206-210"];
m5_14 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile_Async()", color=green, community=0, file="MultipartFormDataTests.cs", label="Assert.AreEqual(_expectedFileAndBodyRequestContent, response.Content)", prediction=247, span="62-62"];
m5_15 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file="MultipartFormDataTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", span="101-101"];
m5_0 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile_Async()", file="MultipartFormDataTests.cs", label="Entry RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile_Async()", span="34-34"];
m5_57 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData()", file="MultipartFormDataTests.cs", label="Entry RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData()", span="121-121"];
m5_61 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteTaskAsync()", color=green, community=0, file="MultipartFormDataTests.cs", label="var response = await _client.ExecuteTaskAsync(request)", prediction=258, span="142-142"];
m5_59 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteTaskAsync()", color=green, community=1, file="MultipartFormDataTests.cs", label="var request = new RestRequest(''?json_route=/posts'')\r\n            {\r\n                AlwaysMultipartFormData = true,\r\n                \\nMethod = Method.POST,\r\n            }", prediction=259, span="134-138"];
m5_60 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteTaskAsync()", color=green, community=0, file="MultipartFormDataTests.cs", label="request.AddParameter(''title'', ''test'', ParameterType.RequestBody)", prediction=260, span="140-140"];
m5_62 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteTaskAsync()", color=green, community=0, file="MultipartFormDataTests.cs", label="Assert.Null(response.ErrorException)", prediction=261, span="143-143"];
m5_65 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteAsync()", color=green, community=1, file="MultipartFormDataTests.cs", label="RestRequest request = new RestRequest(''?json_route=/posts'')\r\n            {\r\n                AlwaysMultipartFormData = true,\r\n                \\nMethod = Method.POST,\r\n            }", prediction=262, span="149-153"];
m5_18 [cluster="System.IO.Path.Combine(string, string)", file="MultipartFormDataTests.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m5_10 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile_Async()", color=green, community=0, file="MultipartFormDataTests.cs", label="string path = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, ''Assets\\TestFile.txt'')", prediction=263, span="56-56"];
m5_11 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile_Async()", color=green, community=0, file="MultipartFormDataTests.cs", label="request.AddFile(''fileName'', path)", prediction=264, span="57-57"];
m5_12 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile_Async()", color=green, community=0, file="MultipartFormDataTests.cs", label="Exit RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile_Async()", prediction=265, span="34-34"];
m5_117 [cluster="System.IO.Stream.WriteStringUtf8(string)", file="MultipartFormDataTests.cs", label="Entry System.IO.Stream.WriteStringUtf8(string)", span="7-7"];
m5_86 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteTaskAsync()", file="MultipartFormDataTests.cs", label="Exit RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteTaskAsync()", span="164-164"];
m5_16 [cluster="System.IO.Directory.GetCurrentDirectory()", file="MultipartFormDataTests.cs", label="Entry System.IO.Directory.GetCurrentDirectory()", span="0-0"];
m5_56 [cluster="System.Console.WriteLine(string)", file="MultipartFormDataTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m5_102 [cluster="System.Threading.AutoResetEvent.AutoResetEvent(bool)", file="MultipartFormDataTests.cs", label="Entry System.Threading.AutoResetEvent.AutoResetEvent(bool)", span="0-0"];
m5_90 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteAsync()", file="MultipartFormDataTests.cs", label="Entry RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteAsync()", span="187-187"];
m5_66 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_Execute()", color=green, community=0, file="MultipartFormDataTests.cs", label="Entry RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_Execute()", prediction=266, span="142-142"];
m5_101 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteAsync()", file="MultipartFormDataTests.cs", label="Exit RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteAsync()", span="187-187"];
m5_51 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_Execute()", color=green, community=0, file="MultipartFormDataTests.cs", label="request.AddParameter(''title'', ''test'', ParameterType.RequestBody)", prediction=267, span="124-124"];
m5_74 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_Execute()", file="MultipartFormDataTests.cs", label="Exit RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_Execute()", span="142-142"];
m5_103 [cluster="RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse>)", file="MultipartFormDataTests.cs", label="Entry RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse>)", span="17-17"];
m5_116 [cluster="System.IO.StreamReader.ReadToEnd()", file="MultipartFormDataTests.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m5_76 [cluster="RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="MultipartFormDataTests.cs", label="Entry RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="427-427"];
m5_23 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile()", color=green, community=1, file="MultipartFormDataTests.cs", label="var request = new RestRequest(''/'', Method.POST)\r\n            {\r\n                AlwaysMultipartFormData = true\r\n            }", prediction=250, span="68-71"];
m5_28 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile()", color=green, community=0, file="MultipartFormDataTests.cs", label="Assert.AreEqual(_expectedFileAndBodyRequestContent, response.Content)", prediction=247, span="80-80"];
m5_27 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile()", color=green, community=0, file="MultipartFormDataTests.cs", label="IRestResponse response = _client.Execute(request)", prediction=270, span="78-78"];
m5_121 [cluster="RestSharp.IRestRequest.AddParameter(string, object)", file="MultipartFormDataTests.cs", label="Entry RestSharp.IRestRequest.AddParameter(string, object)", span="247-247"];
m6_84 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.TimeoutHandler(System.Net.HttpListenerContext)", file="NonProtocolExceptionHandlingTests.cs", label="Entry RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.TimeoutHandler(System.Net.HttpListenerContext)", span="158-158"];
m6_85 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.TimeoutHandler(System.Net.HttpListenerContext)", file="NonProtocolExceptionHandlingTests.cs", label="Thread.Sleep(101000)", span="160-160"];
m6_86 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.TimeoutHandler(System.Net.HttpListenerContext)", file="NonProtocolExceptionHandlingTests.cs", label="Exit RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.TimeoutHandler(System.Net.HttpListenerContext)", span="158-158"];
m6_50 [cluster="RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse>)", file="NonProtocolExceptionHandlingTests.cs", label="Entry RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse>)", span="17-17"];
m6_10 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Task_Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="Entry RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Task_Handles_Non_Existent_Domain()", span="31-31"];
m6_11 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Task_Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="RestClient client = new RestClient(''http://192.168.1.200:8001'')", span="33-33"];
m6_12 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Task_Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="RestRequest request = new RestRequest(''/'')\r\n                                  {\r\n                                      RequestFormat = \\nDataFormat.Json,\r\n                                      Method = Method.GET\r\n                                  }", span="34-38"];
m6_13 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Task_Handles_Non_Existent_Domain()", color=green, community=0, file="NonProtocolExceptionHandlingTests.cs", label="var response = await client.ExecuteTaskAsync<StupidClass>(request)", prediction=271, span="40-40"];
m6_16 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Task_Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.IsInstanceOf<WebException>(response.ErrorException)", span="45-45"];
m6_17 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Task_Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.AreEqual(WebExceptionStatus.ConnectFailure, ((WebException)response.ErrorException).Status)", span="46-46"];
m6_18 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Task_Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.AreEqual(ResponseStatus.Error, response.ResponseStatus)", span="47-47"];
m6_19 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Task_Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="Exit RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Task_Handles_Non_Existent_Domain()", span="31-31"];
m6_32 [cluster="RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", file="NonProtocolExceptionHandlingTests.cs", label="Entry RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", span="21-21"];
m6_22 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", file="NonProtocolExceptionHandlingTests.cs", label="Entry RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", span="56-56"];
m6_23 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", file="NonProtocolExceptionHandlingTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="58-58"];
m6_24 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", file="NonProtocolExceptionHandlingTests.cs", label="SimpleServer.Create(baseUrl, TimeoutHandler)", span="60-60"];
m6_25 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", file="NonProtocolExceptionHandlingTests.cs", label="RestClient client = new RestClient(baseUrl)", span="62-62"];
m6_26 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", file="NonProtocolExceptionHandlingTests.cs", label="RestRequest request = new RestRequest(''404'')\r\n                                      {\r\n                                          \\nTimeout = 500\r\n                                      }", span="63-66"];
m6_27 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", file="NonProtocolExceptionHandlingTests.cs", label="IRestResponse response = client.Execute(request)", span="67-67"];
m6_28 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.NotNull(response.ErrorException)", span="69-69"];
m6_29 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.IsInstanceOf<WebException>(response.ErrorException)", span="70-70"];
m6_30 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.AreEqual(ResponseStatus.TimedOut, response.ResponseStatus)", span="71-71"];
m6_31 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", file="NonProtocolExceptionHandlingTests.cs", label="Exit RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", span="56-56"];
m6_21 [cluster="System.Threading.Tasks.Task.Wait()", file="NonProtocolExceptionHandlingTests.cs", label="Entry System.Threading.Tasks.Task.Wait()", span="0-0"];
m6_49 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="NonProtocolExceptionHandlingTests.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m6_57 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="Entry RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", span="108-108"];
m6_58 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="110-110"];
m6_59 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="SimpleServer.Create(baseUrl, TimeoutHandler)", span="112-112"];
m6_60 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="RestClient client = new RestClient(baseUrl)", span="114-114"];
m6_61 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="RestRequest request = new RestRequest(''404'') { Timeout = 500 }", span="115-115"];
m6_62 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="Task<IRestResponse> task = client.ExecuteTaskAsync(request)", span="116-116"];
m6_63 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="task.Wait()", span="118-118"];
m6_64 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="IRestResponse response = task.Result", span="120-120"];
m6_65 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.NotNull(response)", span="122-122"];
m6_66 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.AreEqual(response.ResponseStatus, ResponseStatus.TimedOut)", span="123-123"];
m6_67 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.NotNull(response.ErrorException)", span="125-125"];
m6_68 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.IsInstanceOf<WebException>(response.ErrorException)", span="126-126"];
m6_69 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.AreEqual(response.ErrorException.Message, ''The request timed-out.'')", span="127-127"];
m6_70 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="Exit RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", span="108-108"];
m6_72 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", file="NonProtocolExceptionHandlingTests.cs", label="Entry RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", span="137-137"];
m6_73 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", file="NonProtocolExceptionHandlingTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="139-139"];
m6_74 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", file="NonProtocolExceptionHandlingTests.cs", label="SimpleServer.Create(baseUrl, TimeoutHandler)", span="141-141"];
m6_75 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", file="NonProtocolExceptionHandlingTests.cs", label="RestClient client = new RestClient(baseUrl)", span="143-143"];
m6_76 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", file="NonProtocolExceptionHandlingTests.cs", label="RestRequest request = new RestRequest(''404'') { Timeout = 500 }", span="144-144"];
m6_77 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", file="NonProtocolExceptionHandlingTests.cs", label="IRestResponse<Response> response = client.Execute<Response>(request)", span="145-145"];
m6_78 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.Null(response.Data)", span="147-147"];
m6_79 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.NotNull(response.ErrorException)", span="148-148"];
m6_80 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.IsInstanceOf<WebException>(response.ErrorException)", span="149-149"];
m6_81 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.AreEqual(response.ResponseStatus, ResponseStatus.TimedOut)", span="150-150"];
m6_82 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", file="NonProtocolExceptionHandlingTests.cs", label="Exit RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", span="137-137"];
m6_7 [cluster="RestSharp.RestRequest.RestRequest(string)", file="NonProtocolExceptionHandlingTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string)", span="94-94"];
m6_87 [cluster="System.Threading.Thread.Sleep(int)", file="NonProtocolExceptionHandlingTests.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m6_34 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="Entry RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", span="76-76"];
m6_35 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="78-78"];
m6_36 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="ManualResetEvent resetEvent = new ManualResetEvent(false)", span="80-80"];
m6_37 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="SimpleServer.Create(baseUrl, TimeoutHandler)", span="82-82"];
m6_38 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="RestClient client = new RestClient(baseUrl)", span="84-84"];
m6_41 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="client.ExecuteAsync(request, responseCb =>\r\n                                             {\r\n                                                 \\nresponse = responseCb;\r\n                                                 resetEvent.Set();\r\n                                             })", span="91-95"];
m6_42 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="resetEvent.WaitOne()", span="97-97"];
m6_39 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="RestRequest request = new RestRequest(''404'')\r\n                                      {\r\n                                          \\nTimeout = 500\r\n                                      }", span="85-88"];
m6_40 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="IRestResponse response = null", span="89-89"];
m6_43 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.NotNull(response)", span="99-99"];
m6_44 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.AreEqual(response.ResponseStatus, ResponseStatus.TimedOut)", span="100-100"];
m6_45 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.NotNull(response.ErrorException)", span="101-101"];
m6_46 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.IsInstanceOf<WebException>(response.ErrorException)", span="102-102"];
m6_47 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.AreEqual(response.ErrorException.Message, ''The request timed-out.'')", span="103-103"];
m6_48 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="Exit RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", span="76-76"];
m6_56 [cluster="System.Threading.EventWaitHandle.Set()", file="NonProtocolExceptionHandlingTests.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m6_0 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="Entry RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Non_Existent_Domain()", span="16-16"];
m6_1 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="RestClient client = new RestClient(''http://nonexistantdomainimguessing.org'')", span="18-18"];
m6_2 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="RestRequest request = new RestRequest(''foo'')", span="19-19"];
m6_3 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="IRestResponse response = client.Execute(request)", span="20-20"];
m6_4 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.AreEqual(ResponseStatus.Error, response.ResponseStatus)", span="22-22"];
m6_5 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="Exit RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Non_Existent_Domain()", span="16-16"];
m6_52 [cluster="lambda expression", file="NonProtocolExceptionHandlingTests.cs", label="Entry lambda expression", span="91-95"];
m6_54 [cluster="lambda expression", file="NonProtocolExceptionHandlingTests.cs", label="resetEvent.Set()", span="94-94"];
m6_53 [cluster="lambda expression", file="NonProtocolExceptionHandlingTests.cs", label="response = responseCb", span="93-93"];
m6_55 [cluster="lambda expression", file="NonProtocolExceptionHandlingTests.cs", label="Exit lambda expression", span="91-95"];
m6_6 [cluster="RestSharp.RestClient.RestClient(string)", file="NonProtocolExceptionHandlingTests.cs", label="Entry RestSharp.RestClient.RestClient(string)", span="174-174"];
m7_14 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.Setup()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.Setup()", span="52-52"];
m7_15 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.Setup()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.Setup()", span="52-52"];
m7_44 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", span="128-128"];
m7_45 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="XDocument doc = XDocument.Load(ComputedFileName)", span="130-130"];
m7_46 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(EXPECTED_ID, doc.Descendants(''id'').First().Value)", span="132-132"];
m7_47 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(EXPECTED_DESCRIPTION, doc.Descendants(''description'').First().Value)", span="133-133"];
m7_48 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(EXPECTED_AUTHORS, doc.Descendants(''authors'').First().Value)", span="134-134"];
m7_49 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(EXPECTED_OWNERS, doc.Descendants(''owners'').First().Value)", span="135-135"];
m7_50 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="Assert.True(this.expectedVersion.IsMatch(doc.Descendants(''version'').First().Value))", span="136-136"];
m7_51 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", span="128-128"];
m7_40 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", file="NuSpecUpdateTask.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
m7_7 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", span="41-41"];
m7_8 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", file="NuSpecUpdateTask.cs", label="Build.NuSpecUpdateTask task = new Build.NuSpecUpdateTask()", span="43-43"];
m7_9 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", file="NuSpecUpdateTask.cs", label="Assert.False(task.Execute())", span="45-45"];
m7_10 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", span="41-41"];
m7_5 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.Setup()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.Setup()", span="32-32"];
m7_6 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.Setup()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.Setup()", span="32-32"];
m7_16 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", span="55-55"];
m7_17 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", color=green, community=0, file="NuSpecUpdateTask.cs", label="Build.NuSpecUpdateTask task = new Build.NuSpecUpdateTask\r\n                                                  {\r\n                                                      \\nSpecFile = FileName,\r\n                                                      SourceAssemblyFile = ''RestSharp.Tests.dll''\r\n                                                  }", prediction=272, span="57-61"];
m7_18 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", color=green, community=0, file="NuSpecUpdateTask.cs", label="task.Execute()", prediction=273, span="63-63"];
m7_19 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(''1.0.0.0'', task.Version)", span="65-65"];
m7_20 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", span="55-55"];
m7_12 [cluster="RestSharp.Build.NuSpecUpdateTask.Execute()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Build.NuSpecUpdateTask.Execute()", span="32-32"];
m7_41 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsAuthorsFromAssemblyInfo()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsAuthorsFromAssemblyInfo()", span="122-122"];
m7_42 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsAuthorsFromAssemblyInfo()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(EXPECTED_AUTHORS, this.subject.Authors)", span="124-124"];
m7_43 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsAuthorsFromAssemblyInfo()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsAuthorsFromAssemblyInfo()", span="122-122"];
m7_34 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsDescriptionFromAssembly()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsDescriptionFromAssembly()", span="110-110"];
m7_35 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsDescriptionFromAssembly()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(EXPECTED_DESCRIPTION, this.subject.Description)", span="112-112"];
m7_36 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsDescriptionFromAssembly()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsDescriptionFromAssembly()", span="110-110"];
m7_0 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", span="26-26"];
m7_1 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", file="NuSpecUpdateTask.cs", label="this.FileName = Path.Combine(''SampleData'', ''restsharp.nuspec'')", span="28-28"];
m7_2 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", file="NuSpecUpdateTask.cs", label="this.Setup()", span="29-29"];
m7_3 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", span="26-26"];
m7_4 [cluster="System.IO.Path.Combine(string, string)", file="NuSpecUpdateTask.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m7_37 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsVersionFromAssemblyInfo()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsVersionFromAssemblyInfo()", span="116-116"];
m7_38 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsVersionFromAssemblyInfo()", file="NuSpecUpdateTask.cs", label="Assert.True(this.expectedVersion.IsMatch(this.subject.Version))", span="118-118"];
m7_39 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsVersionFromAssemblyInfo()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsVersionFromAssemblyInfo()", span="116-116"];
m7_27 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.ReturnsTrue()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.ReturnsTrue()", span="98-98"];
m7_28 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.ReturnsTrue()", file="NuSpecUpdateTask.cs", label="Assert.True(this.result)", span="100-100"];
m7_29 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.ReturnsTrue()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.ReturnsTrue()", span="98-98"];
m7_11 [cluster="RestSharp.Build.NuSpecUpdateTask.NuSpecUpdateTask()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Build.NuSpecUpdateTask.NuSpecUpdateTask()", span="25-25"];
m7_31 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsIdFromAssembly()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsIdFromAssembly()", span="104-104"];
m7_32 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsIdFromAssembly()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(EXPECTED_ID, this.subject.Id)", span="106-106"];
m7_33 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsIdFromAssembly()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsIdFromAssembly()", span="104-104"];
m7_22 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", span="90-90"];
m7_23 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", file="NuSpecUpdateTask.cs", label="this.subject.SpecFile = FileName", span="92-92"];
m7_24 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", file="NuSpecUpdateTask.cs", label="this.subject.SourceAssemblyFile = ''RestSharp.dll''", span="93-93"];
m7_25 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", file="NuSpecUpdateTask.cs", label="this.result = this.subject.Execute()", span="94-94"];
m7_26 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", span="90-90"];
m8_14 [cluster="string.PercentEncode()", file="OAuthTests.cs", label="Entry string.PercentEncode()", span="67-67"];
m8_20 [cluster="RestSharp.Authenticators.OAuth.OAuthTools.GetSignature(RestSharp.Authenticators.OAuth.OAuthSignatureMethod, string, string)", file="OAuthTests.cs", label="Entry RestSharp.Authenticators.OAuth.OAuthTools.GetSignature(RestSharp.Authenticators.OAuth.OAuthSignatureMethod, string, string)", span="278-278"];
m8_10 [cluster="RestSharp.Tests.OAuthTests.PercentEncode_Encodes_Correctly(string, string)", file="OAuthTests.cs", label="Entry RestSharp.Tests.OAuthTests.PercentEncode_Encodes_Correctly(string, string)", span="39-39"];
m8_11 [cluster="RestSharp.Tests.OAuthTests.PercentEncode_Encodes_Correctly(string, string)", file="OAuthTests.cs", label="string actual = value.PercentEncode()", span="41-41"];
m8_12 [cluster="RestSharp.Tests.OAuthTests.PercentEncode_Encodes_Correctly(string, string)", file="OAuthTests.cs", label="Assert.AreEqual(expected, actual)", span="43-43"];
m8_13 [cluster="RestSharp.Tests.OAuthTests.PercentEncode_Encodes_Correctly(string, string)", file="OAuthTests.cs", label="Exit RestSharp.Tests.OAuthTests.PercentEncode_Encodes_Correctly(string, string)", span="39-39"];
m8_21 [cluster="RestSharp.Tests.OAuthTests.HmacSha256_Does_Not_Accept_Nulls()", file="OAuthTests.cs", label="Entry RestSharp.Tests.OAuthTests.HmacSha256_Does_Not_Accept_Nulls()", span="61-61"];
m8_22 [cluster="RestSharp.Tests.OAuthTests.HmacSha256_Does_Not_Accept_Nulls()", file="OAuthTests.cs", label="string consumerSecret = ''12345678''", span="63-63"];
m8_23 [cluster="RestSharp.Tests.OAuthTests.HmacSha256_Does_Not_Accept_Nulls()", color=green, community=0, file="OAuthTests.cs", label="Assert.That(() => OAuthTools.GetSignature(OAuthSignatureMethod.HmacSha256, null, consumerSecret),\r\n                Throws.TypeOf<\\nArgumentNullException>())", prediction=274, span="63-64"];
m8_24 [cluster="RestSharp.Tests.OAuthTests.HmacSha256_Does_Not_Accept_Nulls()", file="OAuthTests.cs", label="Exit RestSharp.Tests.OAuthTests.HmacSha256_Does_Not_Accept_Nulls()", span="61-61"];
m8_8 [cluster="RestSharp.Authenticators.OAuth.OAuthTools.UrlEncodeStrict(string)", file="OAuthTests.cs", label="Entry RestSharp.Authenticators.OAuth.OAuthTools.UrlEncodeStrict(string)", span="153-153"];
m8_15 [cluster="RestSharp.Tests.OAuthTests.HmacSha256_Hashes_Correctly(string, string)", file="OAuthTests.cs", label="Entry RestSharp.Tests.OAuthTests.HmacSha256_Hashes_Correctly(string, string)", span="51-51"];
m8_16 [cluster="RestSharp.Tests.OAuthTests.HmacSha256_Hashes_Correctly(string, string)", file="OAuthTests.cs", label="string consumerSecret = ''12345678''", span="53-53"];
m8_17 [cluster="RestSharp.Tests.OAuthTests.HmacSha256_Hashes_Correctly(string, string)", file="OAuthTests.cs", label="string actual = OAuthTools.GetSignature(OAuthSignatureMethod.HmacSha256, value, consumerSecret)", span="54-54"];
m8_18 [cluster="RestSharp.Tests.OAuthTests.HmacSha256_Hashes_Correctly(string, string)", file="OAuthTests.cs", label="Assert.AreEqual(expected, actual)", span="56-56"];
m8_19 [cluster="RestSharp.Tests.OAuthTests.HmacSha256_Hashes_Correctly(string, string)", file="OAuthTests.cs", label="Exit RestSharp.Tests.OAuthTests.HmacSha256_Hashes_Correctly(string, string)", span="51-51"];
m8_4 [cluster="RestSharp.Tests.OAuthTests.UrlStrictEncode_Encodes_Correctly(string, string)", file="OAuthTests.cs", label="Entry RestSharp.Tests.OAuthTests.UrlStrictEncode_Encodes_Correctly(string, string)", span="28-28"];
m8_5 [cluster="RestSharp.Tests.OAuthTests.UrlStrictEncode_Encodes_Correctly(string, string)", file="OAuthTests.cs", label="string actual = OAuthTools.UrlEncodeStrict(value)", span="30-30"];
m8_6 [cluster="RestSharp.Tests.OAuthTests.UrlStrictEncode_Encodes_Correctly(string, string)", file="OAuthTests.cs", label="Assert.AreEqual(expected, actual)", span="32-32"];
m8_7 [cluster="RestSharp.Tests.OAuthTests.UrlStrictEncode_Encodes_Correctly(string, string)", file="OAuthTests.cs", label="Exit RestSharp.Tests.OAuthTests.UrlStrictEncode_Encodes_Correctly(string, string)", span="28-28"];
m8_0 [cluster="RestSharp.Tests.OAuthTests.OAuthTests()", file="OAuthTests.cs", label="Entry RestSharp.Tests.OAuthTests.OAuthTests()", span="12-12"];
m8_1 [cluster="RestSharp.Tests.OAuthTests.OAuthTests()", file="OAuthTests.cs", label="Thread.CurrentThread.CurrentCulture = CultureInfo.InvariantCulture", span="14-14"];
m8_2 [cluster="RestSharp.Tests.OAuthTests.OAuthTests()", file="OAuthTests.cs", label="Thread.CurrentThread.CurrentUICulture = CultureInfo.InstalledUICulture", span="15-15"];
m8_3 [cluster="RestSharp.Tests.OAuthTests.OAuthTests()", file="OAuthTests.cs", label="Exit RestSharp.Tests.OAuthTests.OAuthTests()", span="12-12"];
m8_27 [cluster="lambda expression", file="OAuthTests.cs", label="Entry lambda expression", span="63-63"];
m8_28 [cluster="lambda expression", color=green, community=0, file="OAuthTests.cs", label="OAuthTools.GetSignature(OAuthSignatureMethod.HmacSha256, null, consumerSecret)", prediction=275, span="63-63"];
m8_29 [cluster="lambda expression", file="OAuthTests.cs", label="Exit lambda expression", span="63-63"];
m9_163 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", span="250-250"];
m9_164 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/{baz}'')", span="252-252"];
m9_165 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="254-254"];
m9_166 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''baz'', ''bat'')", span="255-255"];
m9_169 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="259-259"];
m9_167 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com/{foo}'')", span="257-257"];
m9_168 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/bar/resource/bat'')", span="258-258"];
m9_170 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="261-261"];
m9_171 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", span="250-250"];
m9_22 [cluster="RestSharp.RestClient.RestClient(System.Uri)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestClient.RestClient(System.Uri)", span="165-165"];
m9_8 [cluster="RestSharp.RestRequest.RestRequest()", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.RestRequest()", span="69-69"];
m9_49 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", span="78-78"];
m9_50 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource'', Method.POST)", span="80-80"];
m9_51 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="81-81"];
m9_53 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="83-83"];
m9_52 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource'')", span="82-82"];
m9_54 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="85-85"];
m9_55 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", span="78-78"];
m9_172 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Invalid_Url_string_throws_exception()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Invalid_Url_string_throws_exception()", span="265-265"];
m9_173 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Invalid_Url_string_throws_exception()", file="UrlBuilderTests.cs", label="Assert.Throws<UriFormatException>(delegate { new RestClient(''invalid url''); })", span="267-267"];
m9_174 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Invalid_Url_string_throws_exception()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Invalid_Url_string_throws_exception()", span="265-265"];
m9_39 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", span="62-62"];
m9_40 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource/'')", span="64-64"];
m9_41 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com'')", span="65-65"];
m9_42 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="request.AddParameter(''foo'', ''bar'')", span="67-67"];
m9_44 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="70-70"];
m9_45 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="client.Execute(request)", span="72-72"];
m9_43 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource/?foo=bar'')", span="69-69"];
m9_46 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="74-74"];
m9_47 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", span="62-62"];
m9_21 [cluster="RestSharp.RestRequest.RestRequest(string)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string)", span="94-94"];
m9_78 [cluster="RestSharp.RestRequest.AddUrlSegment(string, string)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.AddUrlSegment(string, string)", span="545-545"];
m9_118 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", span="176-176"];
m9_119 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource'', Method.POST)", span="178-178"];
m9_120 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddParameter(''foo'', ''bar'', ParameterType.QueryString)", span="180-180"];
m9_123 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="184-184"];
m9_121 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com'')", span="182-182"];
m9_122 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource?foo=bar'')", span="183-183"];
m9_124 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="186-186"];
m9_125 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", span="176-176"];
m9_175 [cluster="lambda expression", file="UrlBuilderTests.cs", label="Entry lambda expression", span="267-267"];
m9_94 [cluster="lambda expression", file="UrlBuilderTests.cs", label="client.BuildUri(request)", span="132-132"];
m9_93 [cluster="lambda expression", file="UrlBuilderTests.cs", label="Entry lambda expression", span="132-132"];
m9_95 [cluster="lambda expression", file="UrlBuilderTests.cs", label="Exit lambda expression", span="132-132"];
m9_176 [cluster="lambda expression", file="UrlBuilderTests.cs", label="new RestClient(''invalid url'')", span="267-267"];
m9_177 [cluster="lambda expression", file="UrlBuilderTests.cs", label="Exit lambda expression", span="267-267"];
m9_0 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", span="12-12"];
m9_1 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="14-14"];
m9_2 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="request.AddParameter(''param2'', ''value2'')", span="16-16"];
m9_5 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="20-20"];
m9_3 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com/resource?param1=value1'')", span="18-18"];
m9_4 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource?param1=value1&param2=value2'')", span="19-19"];
m9_6 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="22-22"];
m9_7 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", span="12-12"];
m9_104 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", span="154-154"];
m9_105 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="156-156"];
m9_106 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="157-157"];
m9_108 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="159-159"];
m9_107 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/'')", span="158-158"];
m9_109 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="161-161"];
m9_110 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", span="154-154"];
m9_12 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", span="313-313"];
m9_30 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", span="101-101"];
m9_188 [cluster="RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", span="286-286"];
m9_189 [cluster="RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="288-288"];
m9_190 [cluster="RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", file="UrlBuilderTests.cs", label="request.AddOrUpdateParameter(''param2'', ''value2'')", span="290-290"];
m9_191 [cluster="RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", file="UrlBuilderTests.cs", label="request.AddOrUpdateParameter(''param2'', ''value2-1'')", span="291-291"];
m9_194 [cluster="RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="295-295"];
m9_192 [cluster="RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com/resource?param1=value1'')", span="293-293"];
m9_193 [cluster="RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource?param1=value1&param2=value2-1'')", span="294-294"];
m9_195 [cluster="RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="297-297"];
m9_196 [cluster="RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", span="286-286"];
m9_63 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", span="100-100"];
m9_64 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/foo'', Method.POST)", span="102-102"];
m9_65 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="103-103"];
m9_67 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="105-105"];
m9_66 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource/foo'')", span="104-104"];
m9_68 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="107-107"];
m9_69 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", span="100-100"];
m9_14 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", span="26-26"];
m9_15 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource'')", span="28-28"];
m9_16 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="29-29"];
m9_18 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="31-31"];
m9_17 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource'')", span="30-30"];
m9_19 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="33-33"];
m9_20 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", span="26-26"];
m9_90 [cluster="string.IsNullOrEmpty(string)", file="UrlBuilderTests.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m9_111 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", span="165-165"];
m9_112 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="167-167"];
m9_113 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="168-168"];
m9_115 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="170-170"];
m9_114 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/'')", span="169-169"];
m9_116 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="172-172"];
m9_117 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", span="165-165"];
m9_154 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", span="235-235"];
m9_155 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/{baz}'')", span="237-237"];
m9_156 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="239-239"];
m9_157 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''baz'', ''bat'')", span="240-240"];
m9_160 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="244-244"];
m9_158 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com/{foo}''))", span="242-242"];
m9_159 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/bar/resource/bat'')", span="243-243"];
m9_161 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="246-246"];
m9_162 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", span="235-235"];
m9_96 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", span="140-140"];
m9_97 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/{foo}'', Method.POST)", span="142-142"];
m9_98 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="144-144"];
m9_101 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="148-148"];
m9_99 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="146-146"];
m9_100 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource/bar'')", span="147-147"];
m9_102 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="150-150"];
m9_103 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", span="140-140"];
m9_146 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", span="221-221"];
m9_147 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="223-223"];
m9_148 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="225-225"];
m9_151 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="229-229"];
m9_149 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com/{foo}'')", span="227-227"];
m9_150 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/bar'')", span="228-228"];
m9_152 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="231-231"];
m9_153 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", span="221-221"];
m9_79 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", span="125-125"];
m9_80 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource/{foo}'', Method.GET)", span="127-127"];
m9_81 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', null)", span="129-129"];
m9_83 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="ArgumentException exception = Assert.Throws<ArgumentException>(() => client.BuildUri(request))", span="132-132"];
m9_82 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com/api/1.0'')", span="131-131"];
m9_84 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="Assert.IsNotNull(exception)", span="134-134"];
m9_85 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", color=green, community=0, file="UrlBuilderTests.cs", label="Assert.False(string.IsNullOrEmpty(exception.Message))", prediction=276, span="135-135"];
m9_86 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="Assert.IsTrue(exception.Message.Contains(''foo''))", span="136-136"];
m9_87 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", span="125-125"];
m9_9 [cluster="RestSharp.RestRequest.AddParameter(string, object)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.AddParameter(string, object)", span="406-406"];
m9_187 [cluster="RestSharp.RestRequest.AddOrUpdateParameter(string, object)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.AddOrUpdateParameter(string, object)", span="473-473"];
m9_11 [cluster="System.Uri.Uri(string)", file="UrlBuilderTests.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m9_91 [cluster="string.Contains(string)", file="UrlBuilderTests.cs", label="Entry string.Contains(string)", span="0-0"];
m9_178 [cluster="RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", span="271-271"];
m9_179 [cluster="RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="273-273"];
m9_180 [cluster="RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", file="UrlBuilderTests.cs", label="request.AddOrUpdateParameter(''param2'', ''value2'')", span="275-275"];
m9_181 [cluster="RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", file="UrlBuilderTests.cs", label="request.AddOrUpdateParameter(''param3'', ''value3'')", span="276-276"];
m9_184 [cluster="RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="280-280"];
m9_182 [cluster="RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com/resource?param1=value1'')", span="278-278"];
m9_183 [cluster="RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource?param1=value1&param2=value2&param3=value3'')", span="279-279"];
m9_185 [cluster="RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="282-282"];
m9_186 [cluster="RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", span="271-271"];
m9_56 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", span="89-89"];
m9_57 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/foo'')", span="91-91"];
m9_58 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="92-92"];
m9_60 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="94-94"];
m9_59 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource/foo'')", span="93-93"];
m9_61 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="96-96"];
m9_62 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", span="89-89"];
m9_127 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", span="190-190"];
m9_128 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''v1/people/~/network/updates'', Method.GET)", span="192-192"];
m9_129 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="request.AddParameter(''type'', ''STAT'')", span="194-194"];
m9_130 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="request.AddParameter(''type'', ''PICT'')", span="195-195"];
m9_131 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="request.AddParameter(''count'', ''50'')", span="196-196"];
m9_132 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="request.AddParameter(''start'', ''50'')", span="197-197"];
m9_135 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="201-201"];
m9_133 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://api.linkedin.com'')", span="199-199"];
m9_134 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://api.linkedin.com/v1/people/~/network/updates?type=STAT&type=PICT&count=50&start=50'')", span="200-200"];
m9_136 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="203-203"];
m9_137 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", span="190-190"];
m9_138 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", span="207-207"];
m9_139 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="209-209"];
m9_140 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="211-211"];
m9_143 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="215-215"];
m9_141 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com/{foo}''))", span="213-213"];
m9_142 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/bar'')", span="214-214"];
m9_144 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="217-217"];
m9_145 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", span="207-207"];
m9_126 [cluster="RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="427-427"];
m9_70 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", span="111-111"];
m9_71 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/{foo}'')", span="113-113"];
m9_72 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="115-115"];
m9_75 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="119-119"];
m9_73 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="117-117"];
m9_74 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource/bar'')", span="118-118"];
m9_76 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="121-121"];
m9_77 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", span="111-111"];
m9_23 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", span="37-37"];
m9_24 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource'', Method.POST)", span="39-39"];
m9_25 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="40-40"];
m9_27 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="42-42"];
m9_26 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource'')", span="41-41"];
m9_28 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="44-44"];
m9_29 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", span="37-37"];
m9_31 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", span="48-48"];
m9_32 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource'')", span="50-50"];
m9_33 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="request.AddParameter(''foo'', ''bar'')", span="52-52"];
m9_36 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="56-56"];
m9_34 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="54-54"];
m9_35 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource?foo=bar'')", span="55-55"];
m9_37 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="58-58"];
m9_38 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", span="48-48"];
n140;
n141;
m0_16;
m0_53;
m0_24;
m0_23;
m0_69;
m0_105;
m0_135;
m1_13;
m1_14;
m3_16;
m3_17;
m3_18;
m3_37;
m4_140;
m4_141;
m4_0_16;
m4_0_24;
m4_0_23;
m4_0_53;
m4_0_69;
m4_0_105;
m4_0_135;
m4_1_13;
m4_1_14;
m4_3_16;
m4_3_17;
m4_3_18;
m4_3_37;
m4_4_21;
m4_4_22;
m4_4_41;
m4_5_8;
m4_5_9;
m4_5_20;
m4_5_33;
m4_5_71;
m4_5_83;
m4_6_13;
m4_6_21;
m4_6_30;
m4_6_52;
m4_6_53;
m4_6_54;
m4_6_55;
m4_7_9;
m4_7_25;
m4_7_26;
m4_8_13;
m4_8_48;
m4_8_88;
m4_8_89;
m4_8_92;
m5_41;
m5_21;
m5_22;
m6_20;
m6_9;
m6_8;
m6_33;
m6_71;
m6_83;
m7_52;
m7_21;
m7_53;
m7_54;
m7_30;
m7_55;
m7_13;
m8_9;
m8_25;
m8_26;
m9_13;
m9_88;
m9_48;
m9_89;
m9_92;
n158;
n159;
n160;
n161;
n162;
n163;
n164;
n165;
d148;
m0_179;
m0_180;
m0_181;
m0_182;
m0_183;
m1_51;
m1_52;
m2_46;
m3_38;
m4_158;
m4_159;
m4_160;
m4_161;
m4_162;
m4_163;
m4_164;
m4_165;
m4_0_179;
m4_0_180;
m4_0_181;
m4_0_182;
m4_0_183;
m4_1_51;
m4_1_52;
m4_2_46;
m4_3_38;
m4_4_122;
m4_4_123;
m4_5_88;
m4_6_56;
m4_6_57;
m4_6_58;
m4_7_30;
m4_8_197;
m4_8_198;
m5_122;
m5_123;
m6_88;
m7_56;
m7_57;
m7_58;
m8_30;
m9_197;
m9_198;
d11 -> d14  [color=green, key=1, label=request, style=dashed];
d11 -> d16  [color=green, key=1, label=request, style=dashed];
d12 -> d14  [color=green, key=1, label=contentType, style=dashed];
d16 -> n22  [color=green, key=1, label="lambda expression", style=dashed];
d15 -> d17  [color=green, key=1, label=resetEvent, style=dashed];
d15 -> d27  [color=green, key=1, label=resetEvent, style=dashed];
d32 -> d34  [color=green, key=1, label=request, style=dashed];
d33 -> d39  [color=green, key=1, label=resetEvent, style=dashed];
d33 -> d35  [color=green, key=1, label=resetEvent, style=dashed];
d34 -> n36  [color=green, key=1, label="lambda expression", style=dashed];
d43 -> d46  [color=green, key=1, label=request, style=dashed];
d43 -> d48  [color=green, key=1, label=request, style=dashed];
n52 -> n144  [color=darkseagreen4, key=1, label=string, style=dashed];
d44 -> d46  [color=green, key=1, label=contentType, style=dashed];
d44 -> d50  [color=green, key=1, label=contentType, style=dashed];
d45 -> d50  [color=green, key=1, label=bodyData, style=dashed];
d48 -> n53  [color=green, key=1, label="lambda expression", style=dashed];
d47 -> d54  [color=green, key=1, label=resetEvent, style=dashed];
d47 -> d49  [color=green, key=1, label=resetEvent, style=dashed];
d59 -> d61  [color=green, key=1, label=contentType, style=dashed];
d59 -> d65  [color=green, key=1, label=contentType, style=dashed];
d60 -> d65  [color=green, key=1, label=bodyData, style=dashed];
d73 -> d75  [color=green, key=1, label=contentType, style=dashed];
d73 -> d79  [color=green, key=1, label=contentType, style=dashed];
d74 -> d79  [color=green, key=1, label=bodyData, style=dashed];
d101 -> d103  [color=green, key=1, label=contentType, style=dashed];
d101 -> d107  [color=green, key=1, label=contentType, style=dashed];
d102 -> d107  [color=green, key=1, label=bodyData, style=dashed];
d115 -> d117  [color=green, key=1, label=contentType, style=dashed];
d115 -> d121  [color=green, key=1, label=contentType, style=dashed];
d116 -> d121  [color=green, key=1, label=bodyData, style=dashed];
d58 -> d61  [color=green, key=1, label=request, style=dashed];
d58 -> d63  [color=green, key=1, label=request, style=dashed];
d63 -> n69  [color=green, key=1, label="lambda expression", style=dashed];
d62 -> d68  [color=green, key=1, label=resetEvent, style=dashed];
d62 -> d64  [color=green, key=1, label=resetEvent, style=dashed];
d72 -> d75  [color=green, key=1, label=request, style=dashed];
d72 -> d77  [color=green, key=1, label=request, style=dashed];
d77 -> n85  [color=green, key=1, label="lambda expression", style=dashed];
d76 -> d82  [color=green, key=1, label=resetEvent, style=dashed];
d76 -> d78  [color=green, key=1, label=resetEvent, style=dashed];
d86 -> d89  [color=green, key=1, label=request, style=dashed];
d86 -> d91  [color=green, key=1, label=request, style=dashed];
d87 -> d89  [color=green, key=1, label=contentType, style=dashed];
d91 -> n101  [color=green, key=1, label="lambda expression", style=dashed];
d90 -> d96  [color=green, key=1, label=resetEvent, style=dashed];
d90 -> d92  [color=green, key=1, label=resetEvent, style=dashed];
d100 -> d103  [color=green, key=1, label=request, style=dashed];
d100 -> d105  [color=green, key=1, label=request, style=dashed];
d105 -> n117  [color=green, key=1, label="lambda expression", style=dashed];
d104 -> d110  [color=green, key=1, label=resetEvent, style=dashed];
d104 -> d106  [color=green, key=1, label=resetEvent, style=dashed];
d114 -> d117  [color=green, key=1, label=request, style=dashed];
d114 -> d119  [color=green, key=1, label=request, style=dashed];
d119 -> n133  [color=green, key=1, label="lambda expression", style=dashed];
d118 -> d124  [color=green, key=1, label=resetEvent, style=dashed];
d118 -> d120  [color=green, key=1, label=resetEvent, style=dashed];
m0_27 -> m0_30  [color=darkseagreen4, key=1, label=baseUrl, style=dashed];
m0_28 -> m0_30  [color=darkseagreen4, key=1, label=val, style=dashed];
m0_28 -> m0_33  [color=darkseagreen4, key=1, label=val, style=dashed];
m0_28 -> m0_38  [color=darkseagreen4, key=1, label=val, style=dashed];
m0_31 -> m0_33  [color=darkseagreen4, key=1, label=client, style=dashed];
m0_29 -> m0_33  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m0_29 -> m0_34  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m0_29 -> m0_39  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m0_33 -> m0_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_139 -> m0_134  [color=green, key=1, label=client, style=dashed];
m0_140 -> m0_134  [color=green, key=1, label=request, style=dashed];
m0_1 -> m0_4  [color=darkseagreen4, key=1, label=baseUrl, style=dashed];
m0_2 -> m0_4  [color=darkseagreen4, key=1, label=val, style=dashed];
m0_2 -> m0_7  [color=darkseagreen4, key=1, label=val, style=dashed];
m0_2 -> m0_20  [color=darkseagreen4, key=1, label=val, style=dashed];
m0_5 -> m0_7  [color=darkseagreen4, key=1, label=client, style=dashed];
m0_3 -> m0_7  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m0_3 -> m0_8  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m0_3 -> m0_21  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m0_7 -> m0_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_18 -> m0_20  [color=darkseagreen4, key=1, label="RestSharp.IRestResponse", style=dashed];
m0_36 -> m0_38  [color=darkseagreen4, key=1, label="RestSharp.IRestResponse", style=dashed];
m0_56 -> m0_58  [color=darkseagreen4, key=1, label=baseUrl, style=dashed];
m0_57 -> m0_65  [color=darkseagreen4, key=1, label=exceptionMessage, style=dashed];
m0_57 -> m0_71  [color=darkseagreen4, key=1, label=exceptionMessage, style=dashed];
m0_60 -> m0_66  [color=green, key=1, label=response, style=dashed];
m0_42 -> m0_44  [color=darkseagreen4, key=1, label=baseUrl, style=dashed];
m0_165 -> m0_167  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m0_165 -> m0_168  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m0_107 -> m0_109  [color=darkseagreen4, key=1, label=baseUrl, style=dashed];
m0_113 -> m0_115  [color=darkseagreen4, key=1, label=task, style=dashed];
m0_112 -> m0_114  [color=darkseagreen4, key=1, label=cancellationTokenSource, style=dashed];
m0_93 -> m0_95  [color=darkseagreen4, key=1, label=baseUrl, style=dashed];
m0_99 -> m0_101  [color=darkseagreen4, key=1, label=task, style=dashed];
m0_98 -> m0_100  [color=darkseagreen4, key=1, label=cancellationTokenSource, style=dashed];
m1_45 -> m1_45  [color=green, key=1, label="System.Net.HttpListenerContext", style=dashed];
m2_30 -> m2_35  [color=green, key=1, label=tempFile, style=dashed];
m2_31 -> m2_43  [color=green, key=1, label=writer, style=dashed];
m2_35 -> m2_37  [color=green, key=1, label=fromTemp, style=dashed];
m2_32 -> m2_43  [color=green, key=1, label="System.IO.Stream", style=dashed];
m2_37 -> m2_43  [color=green, key=1, label=writer, style=dashed];
m3_25 -> m3_31  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m3_25 -> m3_32  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m3_4 -> m3_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_5 -> m3_8  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m3_11 -> m3_14  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m3_12 -> m3_20  [color=green, key=1, label="lambda expression", style=dashed];
m3_27 -> m3_31  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m3_27 -> m3_32  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m3_29 -> m3_31  [color=darkseagreen4, key=1, label=method, style=dashed];
m3_29 -> m3_32  [color=darkseagreen4, key=1, label=method, style=dashed];
m4_15 -> m4_17  [color=green, key=1, label=resetEvent, style=dashed];
m4_16 -> m4_22  [color=green, key=1, label="lambda expression", style=dashed];
m4_12 -> m4_14  [color=green, key=1, label=contentType, style=dashed];
m4_87 -> m4_89  [color=green, key=1, label=contentType, style=dashed];
m4_119 -> m4_133  [color=green, key=1, label="lambda expression", style=dashed];
m4_33 -> m4_39  [color=green, key=1, label=resetEvent, style=dashed];
m4_33 -> m4_35  [color=green, key=1, label=resetEvent, style=dashed];
m4_34 -> m4_36  [color=green, key=1, label="lambda expression", style=dashed];
m4_43 -> m4_46  [color=green, key=1, label=request, style=dashed];
m4_43 -> m4_48  [color=green, key=1, label=request, style=dashed];
m4_48 -> m4_53  [color=green, key=1, label="lambda expression", style=dashed];
m4_44 -> m4_46  [color=green, key=1, label=contentType, style=dashed];
m4_44 -> m4_50  [color=green, key=1, label=contentType, style=dashed];
m4_45 -> m4_50  [color=green, key=1, label=bodyData, style=dashed];
m4_47 -> m4_49  [color=green, key=1, label=resetEvent, style=dashed];
m4_52 -> m4_144  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_62 -> m4_68  [color=green, key=1, label=resetEvent, style=dashed];
m4_62 -> m4_64  [color=green, key=1, label=resetEvent, style=dashed];
m4_77 -> m4_85  [color=green, key=1, label="lambda expression", style=dashed];
m4_73 -> m4_75  [color=green, key=1, label=contentType, style=dashed];
m4_73 -> m4_79  [color=green, key=1, label=contentType, style=dashed];
m4_101 -> m4_103  [color=green, key=1, label=contentType, style=dashed];
m4_101 -> m4_107  [color=green, key=1, label=contentType, style=dashed];
m4_116 -> m4_121  [color=green, key=1, label=bodyData, style=dashed];
m4_58 -> m4_61  [color=green, key=1, label=request, style=dashed];
m4_58 -> m4_63  [color=green, key=1, label=request, style=dashed];
m4_63 -> m4_69  [color=green, key=1, label="lambda expression", style=dashed];
m4_72 -> m4_75  [color=green, key=1, label=request, style=dashed];
m4_72 -> m4_77  [color=green, key=1, label=request, style=dashed];
m4_76 -> m4_78  [color=green, key=1, label=resetEvent, style=dashed];
m4_86 -> m4_89  [color=green, key=1, label=request, style=dashed];
m4_86 -> m4_91  [color=green, key=1, label=request, style=dashed];
m4_90 -> m4_92  [color=green, key=1, label=resetEvent, style=dashed];
m4_91 -> m4_101  [color=green, key=1, label="lambda expression", style=dashed];
m4_100 -> m4_103  [color=green, key=1, label=request, style=dashed];
m4_100 -> m4_105  [color=green, key=1, label=request, style=dashed];
m4_104 -> m4_106  [color=green, key=1, label=resetEvent, style=dashed];
m4_105 -> m4_117  [color=green, key=1, label="lambda expression", style=dashed];
m4_114 -> m4_117  [color=green, key=1, label=request, style=dashed];
m4_114 -> m4_119  [color=green, key=1, label=request, style=dashed];
m4_118 -> m4_120  [color=green, key=1, label=resetEvent, style=dashed];
m4_148 -> m4_16  [color=green, key=1, label="RestSharp.IntegrationTests.AsyncRequestBodyTests", style=dashed];
m4_148 -> m4_34  [color=green, key=1, label="RestSharp.IntegrationTests.AsyncRequestBodyTests", style=dashed];
m4_148 -> m4_48  [color=green, key=1, label="RestSharp.IntegrationTests.AsyncRequestBodyTests", style=dashed];
m4_148 -> m4_63  [color=green, key=1, label="RestSharp.IntegrationTests.AsyncRequestBodyTests", style=dashed];
m4_148 -> m4_77  [color=green, key=1, label="RestSharp.IntegrationTests.AsyncRequestBodyTests", style=dashed];
m4_148 -> m4_91  [color=green, key=1, label="RestSharp.IntegrationTests.AsyncRequestBodyTests", style=dashed];
m4_148 -> m4_105  [color=green, key=1, label="RestSharp.IntegrationTests.AsyncRequestBodyTests", style=dashed];
m4_148 -> m4_119  [color=green, key=1, label="RestSharp.IntegrationTests.AsyncRequestBodyTests", style=dashed];
m4_0_1 -> m4_0_4  [color=darkseagreen4, key=1, label=baseUrl, style=dashed];
m4_0_2 -> m4_0_4  [color=darkseagreen4, key=1, label=val, style=dashed];
m4_0_2 -> m4_0_7  [color=darkseagreen4, key=1, label=val, style=dashed];
m4_0_2 -> m4_0_20  [color=darkseagreen4, key=1, label=val, style=dashed];
m4_0_5 -> m4_0_7  [color=darkseagreen4, key=1, label=client, style=dashed];
m4_0_3 -> m4_0_7  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m4_0_3 -> m4_0_8  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m4_0_3 -> m4_0_21  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m4_0_7 -> m4_0_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_0_18 -> m4_0_20  [color=darkseagreen4, key=1, label="RestSharp.IRestResponse", style=dashed];
m4_0_27 -> m4_0_30  [color=darkseagreen4, key=1, label=baseUrl, style=dashed];
m4_0_28 -> m4_0_30  [color=darkseagreen4, key=1, label=val, style=dashed];
m4_0_28 -> m4_0_33  [color=darkseagreen4, key=1, label=val, style=dashed];
m4_0_28 -> m4_0_38  [color=darkseagreen4, key=1, label=val, style=dashed];
m4_0_31 -> m4_0_33  [color=darkseagreen4, key=1, label=client, style=dashed];
m4_0_29 -> m4_0_33  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m4_0_29 -> m4_0_34  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m4_0_29 -> m4_0_39  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m4_0_33 -> m4_0_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_0_36 -> m4_0_38  [color=darkseagreen4, key=1, label="RestSharp.IRestResponse", style=dashed];
m4_0_42 -> m4_0_44  [color=darkseagreen4, key=1, label=baseUrl, style=dashed];
m4_0_56 -> m4_0_58  [color=darkseagreen4, key=1, label=baseUrl, style=dashed];
m4_0_57 -> m4_0_65  [color=darkseagreen4, key=1, label=exceptionMessage, style=dashed];
m4_0_57 -> m4_0_71  [color=darkseagreen4, key=1, label=exceptionMessage, style=dashed];
m4_0_60 -> m4_0_66  [color=green, key=1, label=response, style=dashed];
m4_0_93 -> m4_0_95  [color=darkseagreen4, key=1, label=baseUrl, style=dashed];
m4_0_99 -> m4_0_101  [color=darkseagreen4, key=1, label=task, style=dashed];
m4_0_98 -> m4_0_100  [color=darkseagreen4, key=1, label=cancellationTokenSource, style=dashed];
m4_0_107 -> m4_0_109  [color=darkseagreen4, key=1, label=baseUrl, style=dashed];
m4_0_113 -> m4_0_115  [color=darkseagreen4, key=1, label=task, style=dashed];
m4_0_112 -> m4_0_114  [color=darkseagreen4, key=1, label=cancellationTokenSource, style=dashed];
m4_0_165 -> m4_0_167  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m4_0_165 -> m4_0_168  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m4_1_45 -> m4_1_45  [color=green, key=1, label="System.Net.HttpListenerContext", style=dashed];
m4_2_3 -> m4_2_33  [color=green, key=1, label="lambda expression", style=dashed];
m4_2_30 -> m4_2_35  [color=green, key=1, label=tempFile, style=dashed];
m4_2_31 -> m4_2_43  [color=green, key=1, label=writer, style=dashed];
m4_2_32 -> m4_2_43  [color=green, key=1, label="System.IO.Stream", style=dashed];
m4_2_35 -> m4_2_37  [color=green, key=1, label=fromTemp, style=dashed];
m4_2_37 -> m4_2_43  [color=green, key=1, label=writer, style=dashed];
m4_3_4 -> m4_3_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_3_5 -> m4_3_8  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m4_3_11 -> m4_3_14  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m4_3_12 -> m4_3_20  [color=green, key=1, label="lambda expression", style=dashed];
m4_3_25 -> m4_3_31  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m4_3_25 -> m4_3_32  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m4_3_27 -> m4_3_31  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m4_3_27 -> m4_3_32  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m4_3_29 -> m4_3_31  [color=darkseagreen4, key=1, label=method, style=dashed];
m4_3_29 -> m4_3_32  [color=darkseagreen4, key=1, label=method, style=dashed];
m4_4_24 -> m4_4_40  [color=green, key=1, label="RestSharp.IRestResponse", style=dashed];
m4_4_23 -> m4_4_25  [color=green, key=1, label=request, style=dashed];
m4_4_23 -> m4_4_26  [color=green, key=1, label=request, style=dashed];
m4_4_77 -> m4_4_55  [color=green, key=1, label=syncResponse, style=dashed];
m4_4_32 -> m4_4_34  [color=green, key=1, label=request, style=dashed];
m4_4_50 -> m4_4_119  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m4_4_68 -> m4_4_78  [color=green, key=1, label=eventWaitHandle, style=dashed];
m4_4_68 -> m4_4_70  [color=green, key=1, label=eventWaitHandle, style=dashed];
m4_4_69 -> m4_4_71  [color=green, key=1, label=syncResponse, style=dashed];
m4_4_110 -> m4_4_113  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m4_5_13 -> m4_5_17  [color=green, key=1, label=response, style=dashed];
m4_5_13 -> m4_5_18  [color=green, key=1, label=response, style=dashed];
m4_5_27 -> m4_5_29  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_5_27 -> m4_5_30  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_5_35 -> m4_5_37  [color=darkseagreen4, key=1, label=baseUrl, style=dashed];
m4_5_36 -> m4_5_42  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m4_5_36 -> m4_5_54  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m4_5_41 -> m4_5_43  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_5_41 -> m4_5_44  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_5_41 -> m4_5_45  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_5_41 -> m4_5_46  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_5_41 -> m4_5_47  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_5_41 -> m4_5_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_5_53 -> m4_5_55  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_5_64 -> m4_5_66  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_5_64 -> m4_5_67  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_5_64 -> m4_5_68  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_5_64 -> m4_5_69  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_5_77 -> m4_5_79  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_5_77 -> m4_5_80  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_5_77 -> m4_5_81  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_6_17 -> m4_6_19  [color=green, key=1, label=task, style=dashed];
m4_6_45 -> m4_6_47  [color=darkseagreen4, key=1, label=doc, style=dashed];
m4_6_45 -> m4_6_48  [color=darkseagreen4, key=1, label=doc, style=dashed];
m4_6_45 -> m4_6_49  [color=darkseagreen4, key=1, label=doc, style=dashed];
m4_6_45 -> m4_6_50  [color=darkseagreen4, key=1, label=doc, style=dashed];
m4_7_4 -> m4_7_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_7_10 -> m4_7_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_7_15 -> m4_7_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_7_22 -> m4_7_28  [color=green, key=1, label=consumerSecret, style=dashed];
m4_7_23 -> m4_7_27  [color=green, key=1, label="lambda expression", style=dashed];
m4_8_4 -> m4_8_6  [color=darkseagreen4, key=1, label=expected, style=dashed];
m4_8_17 -> m4_8_19  [color=darkseagreen4, key=1, label=expected, style=dashed];
m4_8_26 -> m4_8_28  [color=darkseagreen4, key=1, label=expected, style=dashed];
m4_8_35 -> m4_8_37  [color=darkseagreen4, key=1, label=expected, style=dashed];
m4_8_40 -> m4_8_42  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_8_40 -> m4_8_45  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_8_41 -> m4_8_45  [color=darkseagreen4, key=1, label=client, style=dashed];
m4_8_44 -> m4_8_46  [color=darkseagreen4, key=1, label=output, style=dashed];
m4_8_43 -> m4_8_46  [color=darkseagreen4, key=1, label=expected, style=dashed];
m4_8_52 -> m4_8_54  [color=darkseagreen4, key=1, label=expected, style=dashed];
m4_8_59 -> m4_8_61  [color=darkseagreen4, key=1, label=expected, style=dashed];
m4_8_66 -> m4_8_68  [color=darkseagreen4, key=1, label=expected, style=dashed];
m4_8_74 -> m4_8_76  [color=darkseagreen4, key=1, label=expected, style=dashed];
m4_8_80 -> m4_8_94  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_8_83 -> m4_8_85  [color=green, key=1, label=exception, style=dashed];
m4_8_83 -> m4_8_86  [color=darkseagreen4, key=1, label=exception, style=dashed];
m4_8_83 -> m4_8_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_8_82 -> m4_8_94  [color=darkseagreen4, key=1, label=client, style=dashed];
m4_8_100 -> m4_8_102  [color=darkseagreen4, key=1, label=expected, style=dashed];
m4_8_107 -> m4_8_109  [color=darkseagreen4, key=1, label=expected, style=dashed];
m4_8_114 -> m4_8_116  [color=darkseagreen4, key=1, label=expected, style=dashed];
m4_8_122 -> m4_8_124  [color=darkseagreen4, key=1, label=expected, style=dashed];
m4_8_128 -> m4_8_130  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_8_128 -> m4_8_131  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_8_128 -> m4_8_132  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_8_134 -> m4_8_136  [color=darkseagreen4, key=1, label=expected, style=dashed];
m4_8_142 -> m4_8_144  [color=darkseagreen4, key=1, label=expected, style=dashed];
m4_8_150 -> m4_8_152  [color=darkseagreen4, key=1, label=expected, style=dashed];
m4_8_155 -> m4_8_157  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_8_159 -> m4_8_161  [color=darkseagreen4, key=1, label=expected, style=dashed];
m4_8_164 -> m4_8_166  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_8_168 -> m4_8_170  [color=darkseagreen4, key=1, label=expected, style=dashed];
m4_8_173 -> m4_8_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_8_179 -> m4_8_181  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_8_183 -> m4_8_185  [color=darkseagreen4, key=1, label=expected, style=dashed];
m4_8_189 -> m4_8_191  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_8_193 -> m4_8_195  [color=darkseagreen4, key=1, label=expected, style=dashed];
m5_50 -> m5_119  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m5_110 -> m5_113  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m5_24 -> m5_40  [color=green, key=1, label="RestSharp.IRestResponse", style=dashed];
m5_77 -> m5_55  [color=green, key=1, label=syncResponse, style=dashed];
m5_23 -> m5_25  [color=green, key=1, label=request, style=dashed];
m5_23 -> m5_26  [color=green, key=1, label=request, style=dashed];
m6_13 -> m6_17  [color=green, key=1, label=response, style=dashed];
m6_13 -> m6_18  [color=green, key=1, label=response, style=dashed];
m6_27 -> m6_29  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_27 -> m6_30  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_64 -> m6_66  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_64 -> m6_67  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_64 -> m6_68  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_64 -> m6_69  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_77 -> m6_79  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_77 -> m6_80  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_77 -> m6_81  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_35 -> m6_37  [color=darkseagreen4, key=1, label=baseUrl, style=dashed];
m6_36 -> m6_42  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m6_36 -> m6_54  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m6_41 -> m6_43  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_41 -> m6_44  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_41 -> m6_45  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_41 -> m6_46  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_41 -> m6_47  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_41 -> m6_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_53 -> m6_55  [color=darkseagreen4, key=1, label=response, style=dashed];
m7_45 -> m7_47  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_45 -> m7_48  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_45 -> m7_49  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_45 -> m7_50  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_17 -> m7_19  [color=green, key=1, label=task, style=dashed];
m8_10 -> m8_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_22 -> m8_28  [color=green, key=1, label=consumerSecret, style=dashed];
m8_23 -> m8_27  [color=green, key=1, label="lambda expression", style=dashed];
m8_15 -> m8_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_4 -> m8_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_164 -> m9_166  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_168 -> m9_170  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_52 -> m9_54  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_173 -> m9_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_40 -> m9_42  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_40 -> m9_45  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_41 -> m9_45  [color=darkseagreen4, key=1, label=client, style=dashed];
m9_44 -> m9_46  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_43 -> m9_46  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_122 -> m9_124  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_4 -> m9_6  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_107 -> m9_109  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_189 -> m9_191  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_193 -> m9_195  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_66 -> m9_68  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_17 -> m9_19  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_114 -> m9_116  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_155 -> m9_157  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_159 -> m9_161  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_100 -> m9_102  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_150 -> m9_152  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_80 -> m9_94  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_83 -> m9_85  [color=green, key=1, label=exception, style=dashed];
m9_83 -> m9_86  [color=darkseagreen4, key=1, label=exception, style=dashed];
m9_83 -> m9_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_82 -> m9_94  [color=darkseagreen4, key=1, label=client, style=dashed];
m9_179 -> m9_181  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_183 -> m9_185  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_59 -> m9_61  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_128 -> m9_130  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_128 -> m9_131  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_128 -> m9_132  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_134 -> m9_136  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_142 -> m9_144  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_74 -> m9_76  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_26 -> m9_28  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_35 -> m9_37  [color=darkseagreen4, key=1, label=expected, style=dashed];
n158 -> d27  [color=green, key=1, label=resetEvent, style=dashed];
n159 -> d39  [color=green, key=1, label=resetEvent, style=dashed];
n160 -> d54  [color=green, key=1, label=resetEvent, style=dashed];
n161 -> d68  [color=green, key=1, label=resetEvent, style=dashed];
n162 -> d82  [color=green, key=1, label=resetEvent, style=dashed];
n163 -> d96  [color=green, key=1, label=resetEvent, style=dashed];
n164 -> d110  [color=green, key=1, label=resetEvent, style=dashed];
n165 -> d124  [color=green, key=1, label=resetEvent, style=dashed];
d148 -> d16  [color=green, key=1, label="RestSharp.IntegrationTests.AsyncRequestBodyTests", style=dashed];
d148 -> d34  [color=green, key=1, label="RestSharp.IntegrationTests.AsyncRequestBodyTests", style=dashed];
d148 -> d48  [color=green, key=1, label="RestSharp.IntegrationTests.AsyncRequestBodyTests", style=dashed];
d148 -> d63  [color=green, key=1, label="RestSharp.IntegrationTests.AsyncRequestBodyTests", style=dashed];
d148 -> d77  [color=green, key=1, label="RestSharp.IntegrationTests.AsyncRequestBodyTests", style=dashed];
d148 -> d91  [color=green, key=1, label="RestSharp.IntegrationTests.AsyncRequestBodyTests", style=dashed];
d148 -> d105  [color=green, key=1, label="RestSharp.IntegrationTests.AsyncRequestBodyTests", style=dashed];
d148 -> d119  [color=green, key=1, label="RestSharp.IntegrationTests.AsyncRequestBodyTests", style=dashed];
m0_179 -> m0_20  [color=darkseagreen4, key=1, label=val, style=dashed];
m0_180 -> m0_21  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m0_181 -> m0_38  [color=darkseagreen4, key=1, label=val, style=dashed];
m0_182 -> m0_39  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m0_183 -> m0_71  [color=darkseagreen4, key=1, label=exceptionMessage, style=dashed];
m1_51 -> m1_37  [color=green, key=1, label=string, style=dashed];
m1_52 -> m1_46  [color=green, key=1, label=string, style=dashed];
m2_46 -> m2_33  [color=green, key=1, label="RestSharp.IntegrationTests.FileTests", style=dashed];
m2_46 -> m2_8  [color=green, key=1, label="RestSharp.IntegrationTests.FileTests", style=dashed];
m2_46 -> m2_12  [color=green, key=1, label="RestSharp.IntegrationTests.FileTests", style=dashed];
m2_46 -> m2_16  [color=green, key=1, label="RestSharp.IntegrationTests.FileTests", style=dashed];
m3_38 -> m3_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_159 -> m4_39  [color=green, key=1, label=resetEvent, style=dashed];
m4_161 -> m4_68  [color=green, key=1, label=resetEvent, style=dashed];
m4_0_179 -> m4_0_20  [color=darkseagreen4, key=1, label=val, style=dashed];
m4_0_180 -> m4_0_21  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m4_0_181 -> m4_0_38  [color=darkseagreen4, key=1, label=val, style=dashed];
m4_0_182 -> m4_0_39  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m4_0_183 -> m4_0_71  [color=darkseagreen4, key=1, label=exceptionMessage, style=dashed];
m4_1_51 -> m4_1_37  [color=green, key=1, label=string, style=dashed];
m4_1_52 -> m4_1_46  [color=green, key=1, label=string, style=dashed];
m4_2_46 -> m4_2_33  [color=green, key=1, label="RestSharp.IntegrationTests.FileTests", style=dashed];
m4_2_46 -> m4_2_36  [color=green, key=1, label="RestSharp.IntegrationTests.FileTests", style=dashed];
m4_2_46 -> m4_2_8  [color=green, key=1, label="RestSharp.IntegrationTests.FileTests", style=dashed];
m4_2_46 -> m4_2_12  [color=green, key=1, label="RestSharp.IntegrationTests.FileTests", style=dashed];
m4_3_38 -> m4_3_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_4_122 -> m4_4_14  [color=green, key=1, label="RestSharp.IntegrationTests.MultipartFormDataTests", style=dashed];
m4_4_122 -> m4_4_40  [color=green, key=1, label="RestSharp.IntegrationTests.MultipartFormDataTests", style=dashed];
m4_4_122 -> m4_4_28  [color=green, key=1, label="RestSharp.IntegrationTests.MultipartFormDataTests", style=dashed];
m4_4_122 -> m4_4_34  [color=green, key=1, label="RestSharp.IntegrationTests.MultipartFormDataTests", style=dashed];
m4_4_122 -> m4_4_47  [color=green, key=1, label="RestSharp.IntegrationTests.MultipartFormDataTests", style=dashed];
m4_4_123 -> m4_4_78  [color=green, key=1, label=eventWaitHandle, style=dashed];
m4_5_88 -> m4_5_54  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m4_6_56 -> m4_6_2  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest", style=dashed];
m4_6_58 -> m4_6_28  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m4_6_58 -> m4_6_32  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m4_6_58 -> m4_6_35  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m4_6_58 -> m4_6_38  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m4_6_58 -> m4_6_42  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m4_6_58 -> m4_6_50  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m4_7_30 -> m4_7_28  [color=green, key=1, label=consumerSecret, style=dashed];
m4_8_197 -> m4_8_94  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_8_198 -> m4_8_94  [color=darkseagreen4, key=1, label=client, style=dashed];
m5_122 -> m5_14  [color=green, key=1, label="RestSharp.IntegrationTests.MultipartFormDataTests", style=dashed];
m5_122 -> m5_40  [color=green, key=1, label="RestSharp.IntegrationTests.MultipartFormDataTests", style=dashed];
m5_122 -> m5_28  [color=green, key=1, label="RestSharp.IntegrationTests.MultipartFormDataTests", style=dashed];
m5_122 -> m5_47  [color=green, key=1, label="RestSharp.IntegrationTests.MultipartFormDataTests", style=dashed];
m5_123 -> m5_78  [color=green, key=1, label=eventWaitHandle, style=dashed];
m6_88 -> m6_54  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m7_56 -> m7_2  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest", style=dashed];
m7_58 -> m7_28  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m7_58 -> m7_32  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m7_58 -> m7_35  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m7_58 -> m7_38  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m7_58 -> m7_42  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m7_58 -> m7_50  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m8_30 -> m8_28  [color=green, key=1, label=consumerSecret, style=dashed];
m9_197 -> m9_94  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_198 -> m9_94  [color=darkseagreen4, key=1, label=client, style=dashed];
}
