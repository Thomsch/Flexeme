digraph  {
m5_27 [file="HtmlEncoder.cs", label="string.IsNullOrEmpty(value)", span="126-126"];
m5_28 [file="HtmlEncoder.cs", label="return value;", span="128-128"];
m0_16 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file="AsyncRequestBodyTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", span="101-101"];
m0_19 [cluster="RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse>)", file="AsyncRequestBodyTests.cs", label="Entry RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse>)", span="17-17"];
m0_17 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", color=green, community=0, file="AsyncRequestBodyTests.cs", label="resetEvent.WaitOne()", prediction=0, span="40-40"];
m0_22 [cluster="lambda expression", file="AsyncRequestBodyTests.cs", label="Entry lambda expression", span="30-30"];
m0_2 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.CreateClient()", file="AsyncRequestBodyTests.cs", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.CreateClient()", span="19-19"];
m0_3 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.CreateClient()", color=green, community=0, file="AsyncRequestBodyTests.cs", label="_server = SimpleServer.Create(BaseUrl, Handlers.Generic<RequestBodyCapturer>())", prediction=1, span="21-21"];
m0_14 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", color=green, community=0, file="AsyncRequestBodyTests.cs", label="request.AddParameter(contentType, bodyData, ParameterType.RequestBody)", prediction=2, span="35-35"];
m0_13 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", color=green, community=0, file="AsyncRequestBodyTests.cs", label="string bodyData = ''abc123 foo bar baz BING!''", prediction=3, span="33-33"];
m0_4 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.CreateClient()", color=green, community=0, file="AsyncRequestBodyTests.cs", label="_client = new RestClient(BaseUrl)", prediction=4, span="22-22"];
m0_15 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", color=green, community=0, file="AsyncRequestBodyTests.cs", label="ManualResetEvent resetEvent = new ManualResetEvent(false)", prediction=0, span="37-37"];
m0_5 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.CreateClient()", file="AsyncRequestBodyTests.cs", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.CreateClient()", span="19-19"];
m0_120 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", file="AsyncRequestBodyTests.cs", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", span="176-176"];
m0_20 [cluster="System.Threading.WaitHandle.WaitOne()", file="AsyncRequestBodyTests.cs", label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
m0_121 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", file="AsyncRequestBodyTests.cs", label="Method httpMethod = Method.PATCH", span="178-178"];
m0_114 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", color=green, community=0, file="AsyncRequestBodyTests.cs", label="RestRequest request = new RestRequest(RequestBodyCapturer.Resource, httpMethod)", prediction=6, span="164-164"];
m0_132 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", file="AsyncRequestBodyTests.cs", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", span="176-176"];
m0_52 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasRequestBody(string, string)", file="AsyncRequestBodyTests.cs", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasRequestBody(string, string)", span="206-206"];
m0_25 [cluster="System.Threading.EventWaitHandle.Set()", file="AsyncRequestBodyTests.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m0_135 [cluster="lambda expression", file="AsyncRequestBodyTests.cs", label="Exit lambda expression", span="192-192"];
m0_18 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", color=green, community=0, file="AsyncRequestBodyTests.cs", label="AssertHasNoRequestBody()", prediction=7, span="42-42"];
m0_133 [cluster="lambda expression", file="AsyncRequestBodyTests.cs", label="Entry lambda expression", span="192-192"];
m0_115 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", color=green, community=0, file="AsyncRequestBodyTests.cs", label="string contentType = ''text/plain''", prediction=6, span="166-166"];
m0_116 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", color=green, community=0, file="AsyncRequestBodyTests.cs", label="string bodyData = ''abc123 foo bar baz BING!''", prediction=9, span="167-167"];
m0_117 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", color=green, community=0, file="AsyncRequestBodyTests.cs", label="request.AddParameter(contentType, bodyData, ParameterType.RequestBody)", prediction=6, span="169-169"];
m0_12 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", color=green, community=0, file="AsyncRequestBodyTests.cs", label="string contentType = ''text/plain''", prediction=2, span="32-32"];
m0_104 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_OPTIONS_Request()", file="AsyncRequestBodyTests.cs", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_OPTIONS_Request()", span="152-152"];
m0_119 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", color=green, community=0, file="AsyncRequestBodyTests.cs", label="_client.ExecuteAsync(request, response => resetEvent.Set())", prediction=6, span="173-173"];
m0_118 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PATCH_Request()", color=green, community=0, file="AsyncRequestBodyTests.cs", label="ManualResetEvent resetEvent = new ManualResetEvent(false)", prediction=13, span="171-171"];
m0_26 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Have_No_Body_Added_To_POST_Request()", file="AsyncRequestBodyTests.cs", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Have_No_Body_Added_To_POST_Request()", span="38-38"];
m0_27 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Have_No_Body_Added_To_POST_Request()", file="AsyncRequestBodyTests.cs", label="Method httpMethod = Method.POST", span="40-40"];
m0_24 [cluster="lambda expression", file="AsyncRequestBodyTests.cs", label="Exit lambda expression", span="30-30"];
m0_36 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Have_No_Body_Added_To_POST_Request()", color=green, community=0, file="AsyncRequestBodyTests.cs", label="AssertHasNoRequestBody()", prediction=14, span="56-56"];
m0_35 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Have_No_Body_Added_To_POST_Request()", color=green, community=0, file="AsyncRequestBodyTests.cs", label="resetEvent.WaitOne()", prediction=15, span="54-54"];
m0_39 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_POST_Request()", file="AsyncRequestBodyTests.cs", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_POST_Request()", span="56-56"];
m0_21 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasNoRequestBody()", file="AsyncRequestBodyTests.cs", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasNoRequestBody()", span="199-199"];
m0_40 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_POST_Request()", file="AsyncRequestBodyTests.cs", label="Method httpMethod = Method.POST", span="58-58"];
m0_38 [cluster="lambda expression", file="AsyncRequestBodyTests.cs", label="Exit lambda expression", span="48-48"];
m0_54 [cluster="lambda expression", color=green, community=0, file="AsyncRequestBodyTests.cs", label="resetEvent.Set()", prediction=16, span="73-73"];
m0_53 [cluster="lambda expression", file="AsyncRequestBodyTests.cs", label="Entry lambda expression", span="72-72"];
m0_51 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_POST_Request()", file="AsyncRequestBodyTests.cs", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_POST_Request()", span="56-56"];
m0_142 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasRequestBody(string, string)", file="AsyncRequestBodyTests.cs", label="Assert.AreEqual(contentType, RequestBodyCapturer.CapturedContentType)", span="208-208"];
m0_144 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasRequestBody(string, string)", file="AsyncRequestBodyTests.cs", label="Assert.AreEqual(bodyData, RequestBodyCapturer.CapturedEntityBody)", span="210-210"];
m0_73 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_DELETE_Request()", file="AsyncRequestBodyTests.cs", label="Method httpMethod = Method.DELETE", span="106-106"];
m0_101 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_OPTIONS_Request()", color=green, community=0, file="AsyncRequestBodyTests.cs", label="string contentType = ''text/plain''", prediction=17, span="146-146"];
m0_102 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_OPTIONS_Request()", color=green, community=0, file="AsyncRequestBodyTests.cs", label="string bodyData = ''abc123 foo bar baz BING!''", prediction=18, span="147-147"];
m0_143 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasRequestBody(string, string)", file="AsyncRequestBodyTests.cs", label="Assert.AreEqual(true, RequestBodyCapturer.CapturedHasEntityBody)", span="209-209"];
m0_145 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasRequestBody(string, string)", file="AsyncRequestBodyTests.cs", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasRequestBody(string, string)", span="206-206"];
m0_88 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_HEAD_Request()", file="AsyncRequestBodyTests.cs", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_HEAD_Request()", span="128-128"];
m0_89 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_HEAD_Request()", file="AsyncRequestBodyTests.cs", label="Method httpMethod = Method.HEAD", span="130-130"];
m0_86 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_HEAD_Request()", color=green, community=0, file="AsyncRequestBodyTests.cs", label="RestRequest request = new RestRequest(RequestBodyCapturer.Resource, httpMethod)", prediction=19, span="124-124"];
m0_100 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_HEAD_Request()", file="AsyncRequestBodyTests.cs", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_HEAD_Request()", span="128-128"];
m0_103 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_OPTIONS_Request()", color=green, community=0, file="AsyncRequestBodyTests.cs", label="request.AddParameter(contentType, bodyData, ParameterType.RequestBody)", prediction=17, span="149-149"];
m0_87 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_HEAD_Request()", color=green, community=0, file="AsyncRequestBodyTests.cs", label="string contentType = ''text/plain''", prediction=21, span="126-126"];
m0_85 [cluster="lambda expression", file="AsyncRequestBodyTests.cs", label="Entry lambda expression", span="120-120"];
m0_105 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_OPTIONS_Request()", file="AsyncRequestBodyTests.cs", label="Method httpMethod = Method.OPTIONS", span="154-154"];
m0_72 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_DELETE_Request()", file="AsyncRequestBodyTests.cs", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_DELETE_Request()", span="104-104"];
m0_84 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_DELETE_Request()", file="AsyncRequestBodyTests.cs", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_DELETE_Request()", span="104-104"];
m0_0 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", file="AsyncRequestBodyTests.cs", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", span="14-14"];
m0_1 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Not_Be_Added_To_GET_Request()", file="AsyncRequestBodyTests.cs", label="Method httpMethod = Method.GET", span="16-16"];
m0_152 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.StreamToString(System.IO.Stream)", file="AsyncRequestBodyTests.cs", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.StreamToString(System.IO.Stream)", span="232-232"];
m0_153 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.StreamToString(System.IO.Stream)", file="AsyncRequestBodyTests.cs", label="StreamReader streamReader = new StreamReader(stream)", span="234-234"];
m0_156 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="AsyncRequestBodyTests.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m0_154 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.StreamToString(System.IO.Stream)", file="AsyncRequestBodyTests.cs", label="return streamReader.ReadToEnd();", span="235-235"];
m0_155 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.StreamToString(System.IO.Stream)", file="AsyncRequestBodyTests.cs", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.StreamToString(System.IO.Stream)", span="232-232"];
m0_157 [cluster="System.IO.StreamReader.ReadToEnd()", file="AsyncRequestBodyTests.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m0_56 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PUT_Request()", file="AsyncRequestBodyTests.cs", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PUT_Request()", span="80-80"];
m0_57 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PUT_Request()", file="AsyncRequestBodyTests.cs", label="Method httpMethod = Method.PUT", span="82-82"];
m0_68 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PUT_Request()", file="AsyncRequestBodyTests.cs", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.Can_Be_Added_To_PUT_Request()", span="80-80"];
m0_69 [cluster="lambda expression", file="AsyncRequestBodyTests.cs", label="Entry lambda expression", span="96-96"];
m0_71 [cluster="lambda expression", file="AsyncRequestBodyTests.cs", label="Exit lambda expression", span="96-96"];
m0_136 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasNoRequestBody()", file="AsyncRequestBodyTests.cs", label="Assert.Null(RequestBodyCapturer.CapturedContentType)", span="201-201"];
m0_137 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasNoRequestBody()", file="AsyncRequestBodyTests.cs", label="Assert.AreEqual(false, RequestBodyCapturer.CapturedHasEntityBody)", span="202-202"];
m0_138 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasNoRequestBody()", file="AsyncRequestBodyTests.cs", label="Assert.AreEqual(string.Empty, RequestBodyCapturer.CapturedEntityBody)", span="203-203"];
m0_139 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasNoRequestBody()", file="AsyncRequestBodyTests.cs", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.AssertHasNoRequestBody()", span="199-199"];
m0_146 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.Capture(System.Net.HttpListenerContext)", file="AsyncRequestBodyTests.cs", label="Entry RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.Capture(System.Net.HttpListenerContext)", span="223-223"];
m0_147 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.Capture(System.Net.HttpListenerContext)", file="AsyncRequestBodyTests.cs", label="HttpListenerRequest request = context.Request", span="225-225"];
m0_148 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.Capture(System.Net.HttpListenerContext)", file="AsyncRequestBodyTests.cs", label="CapturedContentType = request.ContentType", span="227-227"];
m0_149 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.Capture(System.Net.HttpListenerContext)", file="AsyncRequestBodyTests.cs", label="CapturedHasEntityBody = request.HasEntityBody", span="228-228"];
m0_150 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.Capture(System.Net.HttpListenerContext)", file="AsyncRequestBodyTests.cs", label="CapturedEntityBody = StreamToString(request.InputStream)", span="229-229"];
m0_151 [cluster="RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.Capture(System.Net.HttpListenerContext)", file="AsyncRequestBodyTests.cs", label="Exit RestSharp.IntegrationTests.AsyncRequestBodyTests.RequestBodyCapturer.Capture(System.Net.HttpListenerContext)", span="223-223"];
m0_55 [cluster="lambda expression", file="AsyncRequestBodyTests.cs", label="Exit lambda expression", span="72-72"];
m1_41 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_TaskAsync()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_TaskAsync()", span="62-62"];
m1_42 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_TaskAsync()", file="AsyncTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="64-64"];
m1_43 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_TaskAsync()", file="AsyncTests.cs", label="string val = ''Basic async task test''", span="65-65"];
m1_44 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_TaskAsync()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl, Handlers.EchoValue(val))", span="67-67"];
m1_45 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_TaskAsync()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="69-69"];
m1_13 [cluster="RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", span="21-21"];
m1_12 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.EchoValue(string)", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.Helpers.Handlers.EchoValue(string)", span="21-21"];
m1_46 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_TaskAsync()", file="AsyncTests.cs", label="RestRequest request = new RestRequest('''')", span="70-70"];
m1_52 [cluster="RestSharp.RestClient.RestClient(string)", file="AsyncTests.cs", label="Entry RestSharp.RestClient.RestClient(string)", span="174-174"];
m1_15 [cluster="RestSharp.RestRequest.RestRequest(string)", file="AsyncTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string)", span="94-94"];
m1_54 [cluster="System.Threading.Tasks.Task.Wait()", file="AsyncTests.cs", label="Entry System.Threading.Tasks.Task.Wait()", span="0-0"];
m1_51 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_TaskAsync()", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_TaskAsync()", span="62-62"];
m1_92 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", span="140-140"];
m1_93 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", file="AsyncTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="142-142"];
m1_94 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", file="AsyncTests.cs", label="string val = ''Basic async task test''", span="143-143"];
m1_95 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl, Handlers.EchoValue(val))", span="145-145"];
m1_96 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="147-147"];
m1_97 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", file="AsyncTests.cs", label="RestRequest request = new RestRequest(''timeout'')", span="148-148"];
m1_99 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", file="AsyncTests.cs", label="Task<IRestResponse> task = client.ExecuteTaskAsync(request, cancellationTokenSource.Token)", span="150-150"];
m1_98 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", file="AsyncTests.cs", label="CancellationTokenSource cancellationTokenSource = new CancellationTokenSource()", span="149-149"];
m1_100 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", file="AsyncTests.cs", label="cancellationTokenSource.Cancel()", span="152-152"];
m1_103 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="AsyncTests.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m1_101 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", file="AsyncTests.cs", label="Assert.True(task.IsCanceled)", span="154-154"];
m1_104 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="AsyncTests.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m1_102 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync()", span="140-140"];
m1_117 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync()", span="179-179"];
m1_118 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync()", file="AsyncTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="181-181"];
m1_125 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync()", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync()", span="179-179"];
m1_119 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl, UrlToStatusCodeHandler)", span="183-183"];
m1_120 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="185-185"];
m1_121 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync()", file="AsyncTests.cs", label="RestRequest request = new RestRequest(''404'')", span="186-186"];
m1_116 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync()", color=green, community=0, file="AsyncTests.cs", label="var response = await client.ExecuteTaskAsync(request)", prediction=22, span="177-177"];
m1_106 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", span="160-160"];
m1_134 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync_With_Response_Type()", span="196-196"];
m1_149 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", span="236-236"];
m1_150 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", file="AsyncTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="238-238"];
m1_151 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl, Handlers.Generic<ResponseHandler>())", span="240-240"];
m1_152 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="242-242"];
m1_68 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.Generic<T>()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.Helpers.Handlers.Generic<T>()", span="59-59"];
m1_153 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", file="AsyncTests.cs", label="IRestRequest request = new RestRequest(''timeout'', Method.PUT).AddBody(''Body_Content'')", span="243-243"];
m1_145 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", color=green, community=0, file="AsyncTests.cs", label="var response = await client.ExecuteTaskAsync(request)", prediction=23, span="230-230"];
m1_147 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file="AsyncTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", span="101-101"];
m1_154 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", file="AsyncTests.cs", label="request.Timeout = 500", span="246-246"];
m1_148 [cluster="RestSharp.RestRequest.AddBody(object)", file="AsyncTests.cs", label="Entry RestSharp.RestRequest.AddBody(object)", span="267-267"];
m1_158 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", file="AsyncTests.cs", label="Assert.AreEqual(ResponseStatus.TimedOut, response.ResponseStatus)", span="254-254"];
m1_159 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Timeout_PUT_TaskAsync()", span="236-236"];
m1_146 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_GET_TaskAsync()", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Timeout_GET_TaskAsync()", span="213-213"];
m1_107 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="162-162"];
m1_108 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="string val = ''Basic async task test''", span="163-163"];
m1_109 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl, Handlers.EchoValue(val))", span="165-165"];
m1_110 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="167-167"];
m1_111 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="RestRequest request = new RestRequest(''timeout'')", span="168-168"];
m1_113 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="Task<IRestResponse<Response>> task = client.ExecuteTaskAsync<Response>(request, cancellationTokenSource.Token)", span="170-170"];
m1_112 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="CancellationTokenSource cancellationTokenSource = new CancellationTokenSource()", span="169-169"];
m1_114 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="cancellationTokenSource.Cancel()", span="172-172"];
m1_115 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Cancel_GET_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="Assert.True(task.IsCanceled)", span="174-174"];
m1_172 [cluster="RestSharp.IntegrationTests.AsyncTests.ResponseHandler.success(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.ResponseHandler.success(System.Net.HttpListenerContext)", span="278-278"];
m1_173 [cluster="RestSharp.IntegrationTests.AsyncTests.ResponseHandler.success(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="context.Response.OutputStream.WriteStringUtf8(\r\n                    @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<\\nResponse>\r\n    <Success>\r\n        <Message>Works!</Message>\r\n    </Success>\r\n</Response>'')", span="280-286"];
m1_171 [cluster="System.IO.Stream.WriteStringUtf8(string)", file="AsyncTests.cs", label="Entry System.IO.Stream.WriteStringUtf8(string)", span="7-7"];
m1_174 [cluster="RestSharp.IntegrationTests.AsyncTests.ResponseHandler.success(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.ResponseHandler.success(System.Net.HttpListenerContext)", span="278-278"];
m1_55 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", span="81-81"];
m1_56 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", file="AsyncTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="83-83"];
m1_57 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", file="AsyncTests.cs", label="string exceptionMessage = ''Thrown from OnBeforeDeserialization''", span="84-84"];
m1_58 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl, Handlers.Generic<ResponseHandler>())", span="86-86"];
m1_59 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="88-88"];
m1_61 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", file="AsyncTests.cs", label="request.OnBeforeDeserialization += r => { throw new Exception(exceptionMessage); }", span="91-91"];
m1_65 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", file="AsyncTests.cs", label="Assert.AreEqual(exceptionMessage, response.ErrorMessage)", span="99-99"];
m1_71 [cluster="lambda expression", file="AsyncTests.cs", label="throw new Exception(exceptionMessage);", span="91-91"];
m1_60 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", file="AsyncTests.cs", label="RestRequest request = new RestRequest(''success'')", span="89-89"];
m1_66 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", file="AsyncTests.cs", label="Assert.AreEqual(ResponseStatus.Error, response.ResponseStatus)", span="100-100"];
m1_67 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Handle_Exception_Thrown_By_OnBeforeDeserialization_Handler()", span="81-81"];
m1_26 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", span="38-38"];
m1_27 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", file="AsyncTests.cs", label="Uri baseUrl = new Uri(''http://localhost:8888/'')", span="40-40"];
m1_28 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", file="AsyncTests.cs", label="string val = ''Basic async test''", span="41-41"];
m1_30 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl.AbsoluteUri, Handlers.EchoValue(val))", span="45-45"];
m1_31 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="47-47"];
m1_10 [cluster="System.Uri.Uri(string)", file="AsyncTests.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m1_29 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", file="AsyncTests.cs", label="ManualResetEvent resetEvent = new ManualResetEvent(false)", span="43-43"];
m1_33 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", file="AsyncTests.cs", label="client.ExecuteAsync(request, response =>\r\n                                             {\r\n                                                 \\nAssert.NotNull(response.Content);\r\n                                                 Assert.AreEqual(val, response.Content);\r\n                                                 \\nresetEvent.Set();\r\n                                             })", span="50-55"];
m1_2 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", file="AsyncTests.cs", label="string val = ''Basic async test''", span="17-17"];
m1_38 [cluster="lambda expression", file="AsyncTests.cs", label="Assert.AreEqual(val, response.Content)", span="53-53"];
m1_11 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="AsyncTests.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m1_34 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", file="AsyncTests.cs", label="resetEvent.WaitOne()", span="57-57"];
m1_39 [cluster="lambda expression", file="AsyncTests.cs", label="resetEvent.Set()", span="54-54"];
m1_32 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", file="AsyncTests.cs", label="RestRequest request = new RestRequest('''')", span="48-48"];
m1_14 [cluster="RestSharp.RestClient.RestClient(System.Uri)", file="AsyncTests.cs", label="Entry RestSharp.RestClient.RestClient(System.Uri)", span="165-165"];
m1_36 [cluster="lambda expression", file="AsyncTests.cs", label="Entry lambda expression", span="50-55"];
m1_17 [cluster="System.Threading.WaitHandle.WaitOne()", file="AsyncTests.cs", label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
m1_35 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async_Without_Async_Handle()", span="38-38"];
m1_160 [cluster="RestSharp.IntegrationTests.AsyncTests.UrlToStatusCodeHandler(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.UrlToStatusCodeHandler(System.Net.HttpListenerContext)", span="258-258"];
m1_161 [cluster="RestSharp.IntegrationTests.AsyncTests.UrlToStatusCodeHandler(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="obj.Response.StatusCode = int.Parse(obj.Request.Url.Segments.Last())", span="260-260"];
m1_163 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="AsyncTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m1_164 [cluster="int.Parse(string)", file="AsyncTests.cs", label="Entry int.Parse(string)", span="0-0"];
m1_162 [cluster="RestSharp.IntegrationTests.AsyncTests.UrlToStatusCodeHandler(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.UrlToStatusCodeHandler(System.Net.HttpListenerContext)", span="258-258"];
m1_74 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_ExecuteGetTaskAsync_With_Response_Type()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Perform_ExecuteGetTaskAsync_With_Response_Type()", span="105-105"];
m1_75 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_ExecuteGetTaskAsync_With_Response_Type()", file="AsyncTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="107-107"];
m1_76 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_ExecuteGetTaskAsync_With_Response_Type()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl, Handlers.Generic<ResponseHandler>())", span="109-109"];
m1_77 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_ExecuteGetTaskAsync_With_Response_Type()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="111-111"];
m1_82 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_ExecuteGetTaskAsync_With_Response_Type()", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Perform_ExecuteGetTaskAsync_With_Response_Type()", span="105-105"];
m1_78 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_ExecuteGetTaskAsync_With_Response_Type()", file="AsyncTests.cs", label="RestRequest request = new RestRequest(''success'')", span="112-112"];
m1_126 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync_With_Response_Type()", span="196-196"];
m1_127 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="198-198"];
m1_128 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl, UrlToStatusCodeHandler)", span="200-200"];
m1_129 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="202-202"];
m1_130 [cluster="RestSharp.IntegrationTests.AsyncTests.Handles_GET_Request_Errors_TaskAsync_With_Response_Type()", file="AsyncTests.cs", label="RestRequest request = new RestRequest(''404'')", span="203-203"];
m1_175 [cluster="RestSharp.IntegrationTests.AsyncTests.ResponseHandler.timeout(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.ResponseHandler.timeout(System.Net.HttpListenerContext)", span="289-289"];
m1_176 [cluster="RestSharp.IntegrationTests.AsyncTests.ResponseHandler.timeout(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="Thread.Sleep(1000)", span="291-291"];
m1_178 [cluster="System.Threading.Thread.Sleep(int)", file="AsyncTests.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m1_177 [cluster="RestSharp.IntegrationTests.AsyncTests.ResponseHandler.timeout(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.ResponseHandler.timeout(System.Net.HttpListenerContext)", span="289-289"];
m1_0 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", span="14-14"];
m1_1 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", file="AsyncTests.cs", label="Uri baseUrl = new Uri(''http://localhost:8888/'')", span="16-16"];
m1_4 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl.AbsoluteUri, Handlers.EchoValue(val))", span="21-21"];
m1_5 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="23-23"];
m1_3 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", file="AsyncTests.cs", label="ManualResetEvent resetEvent = new ManualResetEvent(false)", span="19-19"];
m1_7 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", file="AsyncTests.cs", label="client.ExecuteAsync(request, (response, asyncHandle) =>\r\n                                             {\r\n                                                 \\nAssert.NotNull(response.Content);\r\n                                                 Assert.AreEqual(val, response.Content);\r\n                                                 \\nresetEvent.Set();\r\n                                             })", span="26-31"];
m1_20 [cluster="lambda expression", file="AsyncTests.cs", label="Assert.AreEqual(val, response.Content)", span="29-29"];
m1_8 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", file="AsyncTests.cs", label="resetEvent.WaitOne()", span="33-33"];
m1_21 [cluster="lambda expression", file="AsyncTests.cs", label="resetEvent.Set()", span="30-30"];
m1_6 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", file="AsyncTests.cs", label="RestRequest request = new RestRequest('''')", span="24-24"];
m1_18 [cluster="lambda expression", file="AsyncTests.cs", label="Entry lambda expression", span="26-31"];
m1_9 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Perform_GET_Async()", span="14-14"];
m1_83 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GetTaskAsync_With_Response_Type()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Perform_GetTaskAsync_With_Response_Type()", span="122-122"];
m1_84 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GetTaskAsync_With_Response_Type()", file="AsyncTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="124-124"];
m1_85 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GetTaskAsync_With_Response_Type()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl, Handlers.Generic<ResponseHandler>())", span="126-126"];
m1_86 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GetTaskAsync_With_Response_Type()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="128-128"];
m1_91 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GetTaskAsync_With_Response_Type()", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.Can_Perform_GetTaskAsync_With_Response_Type()", span="122-122"];
m1_87 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Perform_GetTaskAsync_With_Response_Type()", file="AsyncTests.cs", label="RestRequest request = new RestRequest(''success'')", span="129-129"];
m1_165 [cluster="RestSharp.IntegrationTests.AsyncTests.ResponseHandler.error(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.ResponseHandler.error(System.Net.HttpListenerContext)", span="265-265"];
m1_166 [cluster="RestSharp.IntegrationTests.AsyncTests.ResponseHandler.error(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="context.Response.StatusCode = 400", span="267-267"];
m1_167 [cluster="RestSharp.IntegrationTests.AsyncTests.ResponseHandler.error(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="context.Response.Headers.Add(''Content-Type'', ''application/xml'')", span="268-268"];
m1_168 [cluster="RestSharp.IntegrationTests.AsyncTests.ResponseHandler.error(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="context.Response.OutputStream.WriteStringUtf8(\r\n                    @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<\\nResponse>\r\n    <Error>\r\n        <Message>Not found!</Message>\r\n    </Error>\r\n</Response>'')", span="269-275"];
m1_170 [cluster="System.Net.WebHeaderCollection.Add(string, string)", file="AsyncTests.cs", label="Entry System.Net.WebHeaderCollection.Add(string, string)", span="0-0"];
m1_169 [cluster="RestSharp.IntegrationTests.AsyncTests.ResponseHandler.error(System.Net.HttpListenerContext)", file="AsyncTests.cs", label="Exit RestSharp.IntegrationTests.AsyncTests.ResponseHandler.error(System.Net.HttpListenerContext)", span="265-265"];
m1_136 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_GET_TaskAsync()", file="AsyncTests.cs", label="Entry RestSharp.IntegrationTests.AsyncTests.Can_Timeout_GET_TaskAsync()", span="213-213"];
m1_137 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_GET_TaskAsync()", file="AsyncTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="215-215"];
m1_138 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_GET_TaskAsync()", file="AsyncTests.cs", label="SimpleServer.Create(baseUrl, Handlers.Generic<ResponseHandler>())", span="217-217"];
m1_139 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_GET_TaskAsync()", file="AsyncTests.cs", label="RestClient client = new RestClient(baseUrl)", span="219-219"];
m1_140 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_GET_TaskAsync()", file="AsyncTests.cs", label="IRestRequest request = new RestRequest(''timeout'', Method.GET).AddBody(''Body_Content'')", span="220-220"];
m1_141 [cluster="RestSharp.IntegrationTests.AsyncTests.Can_Timeout_GET_TaskAsync()", file="AsyncTests.cs", label="request.Timeout = 500", span="223-223"];
m1_19 [cluster="lambda expression", file="AsyncTests.cs", label="Assert.NotNull(response.Content)", span="28-28"];
m1_25 [cluster="System.Threading.EventWaitHandle.Set()", file="AsyncTests.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m1_22 [cluster="lambda expression", file="AsyncTests.cs", label="Exit lambda expression", span="26-31"];
m1_37 [cluster="lambda expression", file="AsyncTests.cs", label="Assert.NotNull(response.Content)", span="52-52"];
m1_40 [cluster="lambda expression", file="AsyncTests.cs", label="Exit lambda expression", span="50-55"];
m1_70 [cluster="lambda expression", file="AsyncTests.cs", label="Entry lambda expression", span="91-91"];
m1_73 [cluster="System.Exception.Exception(string)", file="AsyncTests.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m1_72 [cluster="lambda expression", file="AsyncTests.cs", label="Exit lambda expression", span="91-91"];
m2_9 [cluster="RestSharp.IntegrationTests.CompressionTests.GzipEchoValue(string)", file="CompressionTests.cs", label="Entry RestSharp.IntegrationTests.CompressionTests.GzipEchoValue(string)", span="56-56"];
m2_34 [cluster="RestSharp.IntegrationTests.CompressionTests.GzipEchoValue(string)", file="CompressionTests.cs", label="Exit RestSharp.IntegrationTests.CompressionTests.GzipEchoValue(string)", span="56-56"];
m2_2 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Gzip_Compressed_Content()", file="CompressionTests.cs", label="SimpleServer.Create(baseUrl.AbsoluteUri, GzipEchoValue(''This is some gzipped content''))", span="16-16"];
m2_15 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Deflate_Compressed_Content()", file="CompressionTests.cs", label="Entry RestSharp.IntegrationTests.CompressionTests.Can_Handle_Deflate_Compressed_Content()", span="27-27"];
m2_16 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Deflate_Compressed_Content()", file="CompressionTests.cs", label="Uri baseUrl = new Uri(''http://localhost:8888/'')", span="29-29"];
m2_8 [cluster="System.Uri.Uri(string)", file="CompressionTests.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m2_17 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Deflate_Compressed_Content()", file="CompressionTests.cs", label="SimpleServer.Create(baseUrl.AbsoluteUri, DeflateEchoValue(''This is some deflated content''))", span="31-31"];
m2_18 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Deflate_Compressed_Content()", file="CompressionTests.cs", label="RestClient client = new RestClient(baseUrl)", span="33-33"];
m2_23 [cluster="RestSharp.IntegrationTests.CompressionTests.DeflateEchoValue(string)", file="CompressionTests.cs", label="Entry RestSharp.IntegrationTests.CompressionTests.DeflateEchoValue(string)", span="69-69"];
m2_10 [cluster="RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", file="CompressionTests.cs", label="Entry RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", span="21-21"];
m2_11 [cluster="RestSharp.RestClient.RestClient(System.Uri)", file="CompressionTests.cs", label="Entry RestSharp.RestClient.RestClient(System.Uri)", span="165-165"];
m2_19 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Deflate_Compressed_Content()", file="CompressionTests.cs", label="RestRequest request = new RestRequest('''')", span="34-34"];
m2_20 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Deflate_Compressed_Content()", file="CompressionTests.cs", label="IRestResponse response = client.Execute(request)", span="35-35"];
m2_12 [cluster="RestSharp.RestRequest.RestRequest(string)", file="CompressionTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string)", span="94-94"];
m2_21 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Deflate_Compressed_Content()", file="CompressionTests.cs", label="Assert.AreEqual(''This is some deflated content'', response.Content)", span="37-37"];
m2_22 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Deflate_Compressed_Content()", file="CompressionTests.cs", label="Exit RestSharp.IntegrationTests.CompressionTests.Can_Handle_Deflate_Compressed_Content()", span="27-27"];
m2_44 [cluster="RestSharp.IntegrationTests.CompressionTests.DeflateEchoValue(string)", file="CompressionTests.cs", label="Exit RestSharp.IntegrationTests.CompressionTests.DeflateEchoValue(string)", span="69-69"];
m2_46 [cluster="lambda expression", color=green, community=0, file="CompressionTests.cs", label="gzip.WriteStringUtf8(value)", prediction=24, span="75-75"];
m2_40 [cluster="System.Net.WebHeaderCollection.Add(string, string)", file="CompressionTests.cs", label="Entry System.Net.WebHeaderCollection.Add(string, string)", span="0-0"];
m2_45 [cluster="lambda expression", color=green, community=1, file="CompressionTests.cs", label="DeflateStream gzip =\r\n                    new DeflateStream(context.Response.OutputStream, CompressionMode.Compress, true)", prediction=25, span="72-73"];
m2_0 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Gzip_Compressed_Content()", file="CompressionTests.cs", label="Entry RestSharp.IntegrationTests.CompressionTests.Can_Handle_Gzip_Compressed_Content()", span="12-12"];
m2_1 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Gzip_Compressed_Content()", file="CompressionTests.cs", label="Uri baseUrl = new Uri(''http://localhost:8888/'')", span="14-14"];
m2_3 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Gzip_Compressed_Content()", file="CompressionTests.cs", label="RestClient client = new RestClient(baseUrl)", span="18-18"];
m2_4 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Gzip_Compressed_Content()", file="CompressionTests.cs", label="RestRequest request = new RestRequest('''')", span="19-19"];
m2_5 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Gzip_Compressed_Content()", file="CompressionTests.cs", label="IRestResponse response = client.Execute(request)", span="20-20"];
m2_6 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Gzip_Compressed_Content()", file="CompressionTests.cs", label="Assert.AreEqual(''This is some gzipped content'', response.Content)", span="22-22"];
m2_7 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Gzip_Compressed_Content()", file="CompressionTests.cs", label="Exit RestSharp.IntegrationTests.CompressionTests.Can_Handle_Gzip_Compressed_Content()", span="12-12"];
m2_24 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Uncompressed_Content()", file="CompressionTests.cs", label="Entry RestSharp.IntegrationTests.CompressionTests.Can_Handle_Uncompressed_Content()", span="42-42"];
m2_25 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Uncompressed_Content()", file="CompressionTests.cs", label="Uri baseUrl = new Uri(''http://localhost:8888/'')", span="44-44"];
m2_26 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Uncompressed_Content()", file="CompressionTests.cs", label="SimpleServer.Create(baseUrl.AbsoluteUri, Handlers.EchoValue(''This is some sample content''))", span="46-46"];
m2_27 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Uncompressed_Content()", file="CompressionTests.cs", label="RestClient client = new RestClient(baseUrl)", span="48-48"];
m2_32 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.EchoValue(string)", file="CompressionTests.cs", label="Entry RestSharp.IntegrationTests.Helpers.Handlers.EchoValue(string)", span="21-21"];
m2_28 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Uncompressed_Content()", file="CompressionTests.cs", label="RestRequest request = new RestRequest('''')", span="49-49"];
m2_29 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Uncompressed_Content()", file="CompressionTests.cs", label="IRestResponse response = client.Execute(request)", span="50-50"];
m2_30 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Uncompressed_Content()", file="CompressionTests.cs", label="Assert.AreEqual(''This is some sample content'', response.Content)", span="52-52"];
m2_31 [cluster="RestSharp.IntegrationTests.CompressionTests.Can_Handle_Uncompressed_Content()", file="CompressionTests.cs", label="Exit RestSharp.IntegrationTests.CompressionTests.Can_Handle_Uncompressed_Content()", span="42-42"];
m2_35 [cluster="lambda expression", file="CompressionTests.cs", label="Entry lambda expression", span="58-66"];
m2_41 [cluster="System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionMode, bool)", file="CompressionTests.cs", label="Entry System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionMode, bool)", span="0-0"];
m2_42 [cluster="System.IO.Stream.WriteStringUtf8(string)", file="CompressionTests.cs", label="Entry System.IO.Stream.WriteStringUtf8(string)", span="7-7"];
m2_39 [cluster="lambda expression", file="CompressionTests.cs", label="Exit lambda expression", span="58-66"];
m2_50 [cluster="System.IO.Compression.DeflateStream.DeflateStream(System.IO.Stream, System.IO.Compression.CompressionMode, bool)", file="CompressionTests.cs", label="Entry System.IO.Compression.DeflateStream.DeflateStream(System.IO.Stream, System.IO.Compression.CompressionMode, bool)", span="0-0"];
m2_49 [cluster="lambda expression", file="CompressionTests.cs", label="Exit lambda expression", span="71-79"];
m3_0 [cluster="RestSharp.IntegrationTests.FileTests.Handles_Binary_File_Download()", file="FileTests.cs", label="Entry RestSharp.IntegrationTests.FileTests.Handles_Binary_File_Download()", span="11-11"];
m3_20 [cluster="RestSharp.IntegrationTests.FileTests.Handles_Binary_File_Download()", color=green, community=0, file="FileTests.cs", label="RestRequest request = new RestRequest(''Assets/Koala.jpg'')", prediction=26, span="39-39"];
m3_9 [cluster="System.Uri.Uri(string)", file="FileTests.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m3_10 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.FileHandler(System.Net.HttpListenerContext, string)", file="FileTests.cs", label="Entry RestSharp.IntegrationTests.Helpers.Handlers.FileHandler(System.Net.HttpListenerContext, string)", span="30-30"];
m3_11 [cluster="RestSharp.RestClient.RestClient(System.Uri)", file="FileTests.cs", label="Entry RestSharp.RestClient.RestClient(System.Uri)", span="165-165"];
m3_33 [cluster="RestSharp.IntegrationTests.FileTests.Writes_Response_To_Stream()", color=green, community=0, file="FileTests.cs", label="byte[] response = _client.DownloadData(request)", prediction=27, span="57-57"];
m3_12 [cluster="RestSharp.IntegrationTests.FileTests.ShutdownServer()", color=green, community=0, file="FileTests.cs", label="_server.Dispose()", prediction=28, span="27-27"];
m3_14 [cluster="System.IO.File.ReadAllBytes(string)", file="FileTests.cs", label="Entry System.IO.File.ReadAllBytes(string)", span="0-0"];
m3_8 [cluster="RestSharp.IntegrationTests.FileTests.Handles_Binary_File_Download()", file="FileTests.cs", label="Exit RestSharp.IntegrationTests.FileTests.Handles_Binary_File_Download()", span="11-11"];
m3_21 [cluster="RestSharp.IntegrationTests.FileTests.Handles_Binary_File_Download()", color=green, community=0, file="FileTests.cs", label="byte[] response = _client.DownloadData(request)", prediction=29, span="40-40"];
m3_22 [cluster="RestSharp.IntegrationTests.FileTests.Handles_Binary_File_Download()", color=green, community=0, file="FileTests.cs", label="byte[] expected = File.ReadAllBytes(_path + ''\\Assets\\Koala.jpg'')", prediction=30, span="41-41"];
m3_30 [cluster="System.IO.File.OpenWrite(string)", file="FileTests.cs", label="Entry System.IO.File.OpenWrite(string)", span="0-0"];
m3_34 [cluster="RestSharp.IntegrationTests.FileTests.Writes_Response_To_Stream()", color=green, community=0, file="FileTests.cs", label="Assert.Null(response)", prediction=31, span="59-59"];
m3_23 [cluster="RestSharp.IntegrationTests.FileTests.Handles_Binary_File_Download()", color=green, community=0, file="FileTests.cs", label="Assert.AreEqual(expected, response)", prediction=32, span="43-43"];
m3_31 [cluster="RestSharp.IntegrationTests.FileTests.Writes_Response_To_Stream()", color=green, community=0, file="FileTests.cs", label="FileStream writer = File.OpenWrite(tempFile)", prediction=33, span="51-51"];
m3_35 [cluster="RestSharp.IntegrationTests.FileTests.Writes_Response_To_Stream()", color=green, community=0, file="FileTests.cs", label="byte[] fromTemp = File.ReadAllBytes(tempFile)", prediction=33, span="62-62"];
m3_36 [cluster="System.IO.Stream.CopyTo(System.IO.Stream)", file="FileTests.cs", label="Entry System.IO.Stream.CopyTo(System.IO.Stream)", span="0-0"];
m3_37 [cluster="RestSharp.IntegrationTests.FileTests.Writes_Response_To_Stream()", color=green, community=0, file="FileTests.cs", label="Assert.AreEqual(expected, fromTemp)", prediction=33, span="65-65"];
m3_16 [cluster="RestSharp.IntegrationTests.FileTests.CreateClient()", color=green, community=0, file="FileTests.cs", label="_client = new RestClient(_baseUrl)", prediction=36, span="33-33"];
m3_17 [cluster="RestSharp.IntegrationTests.FileTests.CreateClient()", file="FileTests.cs", label="Exit RestSharp.IntegrationTests.FileTests.CreateClient()", span="31-31"];
m3_29 [cluster="System.IO.Path.GetTempFileName()", file="FileTests.cs", label="Entry System.IO.Path.GetTempFileName()", span="0-0"];
m3_43 [cluster="lambda expression", color=green, community=0, file="FileTests.cs", label="responseStream.CopyTo(writer)", prediction=33, span="55-55"];
m3_28 [cluster="RestSharp.IntegrationTests.FileTests.Writes_Response_To_Stream()", file="FileTests.cs", label="Exit RestSharp.IntegrationTests.FileTests.Writes_Response_To_Stream()", span="27-27"];
m3_42 [cluster="lambda expression", file="FileTests.cs", label="Entry lambda expression", span="55-55"];
m3_44 [cluster="lambda expression", file="FileTests.cs", label="Exit lambda expression", span="55-55"];
m4_11 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.FileHandler(System.Net.HttpListenerContext, string)", file="Handlers.cs", label="Entry RestSharp.IntegrationTests.Helpers.Handlers.FileHandler(System.Net.HttpListenerContext, string)", span="30-30"];
m4_12 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.FileHandler(System.Net.HttpListenerContext, string)", color=green, community=1, file="Handlers.cs", label="var pathToFile = Path.Combine(path, Path.Combine(context.Request.Url.Segments.Select(s => s.Replace(''/'', ''''))\r\n                                                    \\n.ToArray()))", prediction=38, span="32-33"];
m4_14 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.FileHandler(System.Net.HttpListenerContext, string)", file="Handlers.cs", label="reader.BaseStream.CopyTo(context.Response.OutputStream)", span="37-37"];
m4_13 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.FileHandler(System.Net.HttpListenerContext, string)", color=green, community=0, file="Handlers.cs", label="var reader = new StreamReader(pathToFile)", prediction=39, span="35-35"];
m4_19 [cluster="System.IO.Path.Combine(string, string)", file="Handlers.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m4_20 [cluster="lambda expression", file="Handlers.cs", label="Entry lambda expression", span="32-32"];
m4_3 [cluster="System.IO.Stream.CopyTo(System.IO.Stream)", file="Handlers.cs", label="Entry System.IO.Stream.CopyTo(System.IO.Stream)", span="0-0"];
m4_15 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.FileHandler(System.Net.HttpListenerContext, string)", file="Handlers.cs", label="Exit RestSharp.IntegrationTests.Helpers.Handlers.FileHandler(System.Net.HttpListenerContext, string)", span="30-30"];
m4_4 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.EchoValue(string)", file="Handlers.cs", label="Entry RestSharp.IntegrationTests.Helpers.Handlers.EchoValue(string)", span="21-21"];
m4_5 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.EchoValue(string)", file="Handlers.cs", label="return ctx => ctx.Response.OutputStream.WriteStringUtf8(value);", span="23-23"];
m4_8 [cluster="lambda expression", file="Handlers.cs", label="ctx.Response.OutputStream.WriteStringUtf8(value)", span="23-23"];
m4_6 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.EchoValue(string)", file="Handlers.cs", label="Exit RestSharp.IntegrationTests.Helpers.Handlers.EchoValue(string)", span="21-21"];
m4_0 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.Echo(System.Net.HttpListenerContext)", file="Handlers.cs", label="Entry RestSharp.IntegrationTests.Helpers.Handlers.Echo(System.Net.HttpListenerContext)", span="13-13"];
m4_1 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.Echo(System.Net.HttpListenerContext)", file="Handlers.cs", label="context.Request.InputStream.CopyTo(context.Response.OutputStream)", span="15-15"];
m4_2 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.Echo(System.Net.HttpListenerContext)", file="Handlers.cs", label="Exit RestSharp.IntegrationTests.Helpers.Handlers.Echo(System.Net.HttpListenerContext)", span="13-13"];
m4_24 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.Generic<T>()", file="Handlers.cs", label="Entry RestSharp.IntegrationTests.Helpers.Handlers.Generic<T>()", span="59-59"];
m4_25 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.Generic<T>()", file="Handlers.cs", label="return ctx =>\r\n                   {\r\n                       string methodName = ctx.Request.Url.Segments.Last();\r\n                       \\nMethodInfo method = typeof(T).GetMethod(methodName,\r\n                           BindingFlags.NonPublic | BindingFlags.Public | \\nBindingFlags.Instance | BindingFlags.Static);\r\n\r\n                       if (method.IsStatic)\r\n                       {\r\n                           \\nmethod.Invoke(null, new object[] { ctx });\r\n                       }\r\n                       else\r\n                       {\r\n                           \\nmethod.Invoke(new T(), new object[] { ctx });\r\n                       }\r\n                   };", span="61-75"];
m4_26 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.Generic<T>()", file="Handlers.cs", label="Exit RestSharp.IntegrationTests.Helpers.Handlers.Generic<T>()", span="59-59"];
m4_28 [cluster="lambda expression", file="Handlers.cs", label="string methodName = ctx.Request.Url.Segments.Last()", span="63-63"];
m4_31 [cluster="lambda expression", file="Handlers.cs", label="method.Invoke(null, new object[] { ctx })", span="69-69"];
m4_32 [cluster="lambda expression", file="Handlers.cs", label="method.Invoke(new T(), new object[] { ctx })", span="73-73"];
m4_7 [cluster="lambda expression", file="Handlers.cs", label="Entry lambda expression", span="23-23"];
m4_10 [cluster="System.IO.Stream.WriteStringUtf8(string)", file="Handlers.cs", label="Entry System.IO.Stream.WriteStringUtf8(string)", span="7-7"];
m4_9 [cluster="lambda expression", file="Handlers.cs", label="Exit lambda expression", span="23-23"];
m4_22 [cluster="lambda expression", color=green, community=0, file="Handlers.cs", label="s.Replace(''/'', '''')", prediction=40, span="32-32"];
m4_23 [cluster="string.Replace(string, string)", file="Handlers.cs", label="Entry string.Replace(string, string)", span="0-0"];
m4_27 [cluster="lambda expression", file="Handlers.cs", label="Entry lambda expression", span="61-75"];
m4_34 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="Handlers.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m4_29 [cluster="lambda expression", file="Handlers.cs", label="MethodInfo method = typeof(T).GetMethod(methodName,\r\n                           BindingFlags.NonPublic | BindingFlags.Public | \\nBindingFlags.Instance | BindingFlags.Static)", span="64-65"];
m4_35 [cluster="System.Type.GetMethod(string, System.Reflection.BindingFlags)", file="Handlers.cs", label="Entry System.Type.GetMethod(string, System.Reflection.BindingFlags)", span="0-0"];
m4_30 [cluster="lambda expression", file="Handlers.cs", label="method.IsStatic", span="67-67"];
m4_36 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="Handlers.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m4_33 [cluster="lambda expression", file="Handlers.cs", label="Exit lambda expression", span="61-75"];
m5_5 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HeaderNameValueEncode(string, string, out string, out string)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.HeaderNameValueEncode(string, string, out string, out string)", span="84-84"];
m5_6 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HeaderNameValueEncode(string, string, out string, out string)", file="HtmlEncoder.cs", label="encodedHeaderName = string.IsNullOrEmpty(headerName)\r\n                ? headerName\r\n                : EncodeHeaderString(headerName)", span="87-89"];
m5_7 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HeaderNameValueEncode(string, string, out string, out string)", file="HtmlEncoder.cs", label="encodedHeaderValue = string.IsNullOrEmpty(headerValue)\r\n                ? headerValue\r\n                : EncodeHeaderString(\\nheaderValue)", span="90-92"];
m5_8 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HeaderNameValueEncode(string, string, out string, out string)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.HeaderNameValueEncode(string, string, out string, out string)", span="84-84"];
m5_9 [cluster="string.IsNullOrEmpty(string)", file="HtmlEncoder.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m5_10 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.EncodeHeaderString(string)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.EncodeHeaderString(string)", span="107-107"];
m5_0 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HttpEncoder()", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.HttpEncoder()", span="78-78"];
m5_1 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HttpEncoder()", file="HtmlEncoder.cs", label="defaultEncoder = new HttpEncoder()", span="80-80"];
m5_2 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HttpEncoder()", file="HtmlEncoder.cs", label="currentEncoder = defaultEncoder", span="81-81"];
m5_3 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HttpEncoder()", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.HttpEncoder()", span="78-78"];
m5_11 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.StringBuilderAppend(string, ref System.Text.StringBuilder)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.StringBuilderAppend(string, ref System.Text.StringBuilder)", span="95-95"];
m5_12 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.StringBuilderAppend(string, ref System.Text.StringBuilder)", file="HtmlEncoder.cs", label="sb == null", span="97-97"];
m5_13 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.StringBuilderAppend(string, ref System.Text.StringBuilder)", file="HtmlEncoder.cs", label="sb = new StringBuilder(s)", span="99-99"];
m5_14 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.StringBuilderAppend(string, ref System.Text.StringBuilder)", file="HtmlEncoder.cs", label="sb.Append(s)", span="103-103"];
m5_15 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.StringBuilderAppend(string, ref System.Text.StringBuilder)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.StringBuilderAppend(string, ref System.Text.StringBuilder)", span="95-95"];
m5_18 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.EncodeHeaderString(string)", file="HtmlEncoder.cs", label="StringBuilder sb = null", span="109-109"];
m5_16 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="HtmlEncoder.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m5_17 [cluster="System.Text.StringBuilder.Append(string)", file="HtmlEncoder.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m5_221 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.IsHexDigit(char)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.IsHexDigit(char)", span="491-491"];
m5_228 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.IsHexDigit(char)", file="HtmlEncoder.cs", label="String hexValues = ''0123456789abcdefABCDEF''", span="493-493"];
m5_229 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.IsHexDigit(char)", file="HtmlEncoder.cs", label="return hexValues.IndexOf(c) >= 0;", span="494-494"];
m5_152 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="char c = s[i]", span="351-351"];
m5_230 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.IsHexDigit(char)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.IsHexDigit(char)", span="491-491"];
m5_216 [cluster="string.IndexOf(char)", file="HtmlEncoder.cs", label="Entry string.IndexOf(char)", span="0-0"];
m5_39 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", span="570-570"];
m5_267 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="c < 33 || c > 126", span="572-572"];
m5_268 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="byte[] bIn = Encoding.UTF8.GetBytes(c.ToString())", span="574-574"];
m5_271 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="result.WriteByte((byte) '%')", span="578-578"];
m5_273 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="result.WriteByte((byte) hexChars[idx])", span="582-582"];
m5_275 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="result.WriteByte((byte) hexChars[idx])", span="584-584"];
m5_277 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="c == ' '", span="587-587"];
m5_278 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="result.WriteByte((byte) '%')", span="589-589"];
m5_279 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="result.WriteByte((byte) '2')", span="590-590"];
m5_280 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="result.WriteByte((byte) '0')", span="591-591"];
m5_281 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="result.WriteByte((byte) c)", span="595-595"];
m5_269 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="int i = 0", span="576-576"];
m5_270 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="i < bIn.Length", span="576-576"];
m5_272 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="int idx = bIn[i] >> 4", span="580-580"];
m5_274 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="idx = bIn[i] & 0x0F", span="583-583"];
m5_283 [cluster="System.Text.Encoding.GetBytes(string)", file="HtmlEncoder.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m5_220 [cluster="char.ToString()", file="HtmlEncoder.cs", label="Entry char.ToString()", span="0-0"];
m5_276 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="i++", span="576-576"];
m5_282 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", span="570-570"];
m5_266 [cluster="System.IO.Stream.WriteByte(byte)", file="HtmlEncoder.cs", label="Entry System.IO.Stream.WriteByte(byte)", span="0-0"];
m5_42 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", span="144-144"];
m5_43 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="bytes == null", span="146-146"];
m5_45 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="int blen = bytes.Length", span="151-151"];
m5_48 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="offset < 0 || offset >= blen", span="158-158"];
m5_50 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="count < 0 || count > blen - offset", span="163-163"];
m5_52 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="MemoryStream result = new MemoryStream(count)", span="168-168"];
m5_53 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="int end = offset + count", span="169-169"];
m5_54 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="int i = offset", span="171-171"];
m5_56 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="UrlEncodeChar((char) bytes[i], result, false)", span="173-173"];
m5_44 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="throw new ArgumentNullException(''bytes'');", span="148-148"];
m5_59 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", span="144-144"];
m5_60 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="HtmlEncoder.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m5_46 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="blen == 0", span="153-153"];
m5_47 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="return new byte[0];", span="155-155"];
m5_49 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="throw new ArgumentOutOfRangeException(''offset'');", span="160-160"];
m5_61 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="HtmlEncoder.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m5_51 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="throw new ArgumentOutOfRangeException(''count'');", span="165-165"];
m5_58 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="return result.ToArray();", span="176-176"];
m5_62 [cluster="System.IO.MemoryStream.MemoryStream(int)", file="HtmlEncoder.cs", label="Entry System.IO.MemoryStream.MemoryStream(int)", span="0-0"];
m5_55 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="i < end", span="171-171"];
m5_57 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="i++", span="171-171"];
m5_63 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", span="502-502"];
m5_40 [cluster="System.IO.MemoryStream.ToArray()", file="HtmlEncoder.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m5_19 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.EncodeHeaderString(string)", file="HtmlEncoder.cs", label=input, span="111-111"];
m5_22 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.EncodeHeaderString(string)", file="HtmlEncoder.cs", label="return sb != null\r\n                ? sb.ToString()\r\n                : input;", span="119-121"];
m5_21 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.EncodeHeaderString(string)", file="HtmlEncoder.cs", label="StringBuilderAppend(string.Format(''%{0:x2}'', (int) ch), ref sb)", span="115-115"];
m5_20 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.EncodeHeaderString(string)", file="HtmlEncoder.cs", label="(ch < 32 && ch != 9) || ch == 127", span="113-113"];
m5_24 [cluster="string.Format(string, object)", file="HtmlEncoder.cs", label="Entry string.Format(string, object)", span="0-0"];
m5_25 [cluster="System.Text.StringBuilder.ToString()", file="HtmlEncoder.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m5_23 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.EncodeHeaderString(string)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.EncodeHeaderString(string)", span="107-107"];
m5_234 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="c > 255", span="504-504"];
m5_235 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="int i = c", span="509-509"];
m5_236 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) '%')", span="511-511"];
m5_237 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) 'u')", span="512-512"];
m5_239 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) hexChars[idx])", span="516-516"];
m5_241 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) hexChars[idx])", span="518-518"];
m5_243 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) hexChars[idx])", span="520-520"];
m5_245 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) hexChars[idx])", span="522-522"];
m5_247 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="c > ' ' && NotEncoded(c)", span="527-527"];
m5_248 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) c)", span="529-529"];
m5_250 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="c == ' '", span="534-534"];
m5_251 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) '+')", span="536-536"];
m5_253 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="(c < '0') ||\r\n                (c < 'A' && c > '9') ||\r\n                (c > 'Z' && c < 'a') ||\r\n                (c > 'z')", span="541-544"];
m5_254 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="isUnicode && c > 127", span="546-546"];
m5_255 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) '%')", span="548-548"];
m5_256 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) 'u')", span="549-549"];
m5_257 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) '0')", span="550-550"];
m5_258 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) '0')", span="551-551"];
m5_259 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) '%')", span="555-555"];
m5_260 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="int idx = c >> 4", span="558-558"];
m5_261 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) hexChars[idx])", span="560-560"];
m5_262 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="idx = c & 0x0F", span="561-561"];
m5_263 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) hexChars[idx])", span="562-562"];
m5_264 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) c)", span="566-566"];
m5_238 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="int idx = i >> 12", span="514-514"];
m5_240 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="idx = (i >> 8) & 0x0F", span="517-517"];
m5_242 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="idx = (i >> 4) & 0x0F", span="519-519"];
m5_244 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="idx = i & 0x0F", span="521-521"];
m5_246 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="return;", span="524-524"];
m5_265 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", span="502-502"];
m5_231 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.NotEncoded(char)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.NotEncoded(char)", span="497-497"];
m5_249 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="return;", span="531-531"];
m5_252 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="return;", span="538-538"];
m5_26 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncode(string)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncode(string)", span="124-124"];
m5_107 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", span="261-261"];
m5_108 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="s == null", span="263-263"];
m5_110 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="s.Length == 0", span="268-268"];
m5_114 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="i < s.Length", span="275-275"];
m5_115 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="char c = s[i]", span="277-277"];
m5_120 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="return s;", span="288-288"];
m5_122 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="int len = s.Length", span="292-292"];
m5_125 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="s[i]", span="296-296"];
m5_132 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="output.Append(s[i])", span="311-311"];
m5_109 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="return null;", span="265-265"];
m5_135 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", span="261-261"];
m5_111 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="return string.Empty;", span="270-270"];
m5_112 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="bool needEncode = false", span="273-273"];
m5_113 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="int i = 0", span="275-275"];
m5_119 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="!needEncode", span="286-286"];
m5_118 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="i++", span="275-275"];
m5_116 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="c == '&' || c == '''' || c == '<'", span="279-279"];
m5_117 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="needEncode = true", span="281-281"];
m5_121 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="StringBuilder output = new StringBuilder()", span="291-291"];
m5_104 [cluster="System.Text.StringBuilder.StringBuilder()", file="HtmlEncoder.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m5_127 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="output.Append(''&amp;'')", span="299-299"];
m5_129 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="output.Append(''&quot;'')", span="303-303"];
m5_131 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="output.Append(''&lt;'')", span="307-307"];
m5_134 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="return output.ToString();", span="316-316"];
m5_123 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="int i = 0", span="294-294"];
m5_124 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="i < len", span="294-294"];
m5_133 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="i++", span="294-294"];
m5_126 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="'&'", span="298-298"];
m5_128 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="''''", span="302-302"];
m5_130 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="'<'", span="306-306"];
m5_106 [cluster="System.Text.StringBuilder.Append(char)", file="HtmlEncoder.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m5_284 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.InitEntities()", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.InitEntities()", span="599-599"];
m5_285 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.InitEntities()", file="HtmlEncoder.cs", label="entities = new SortedDictionary<string, char>(StringComparer.Ordinal)\r\n                       {\r\n                           {''\\nnbsp'', '\u00A0'},\r\n                           {''iexcl'', '\u00A1'},\r\n                           {''cent'', '\u00A2'},\r\n                           {''\\npound'', '\u00A3'},\r\n                           {''curren'', '\u00A4'},\r\n                           {''yen'', '\u00A5'},\r\n                           {''\\nbrvbar'', '\u00A6'},\r\n                           {''sect'', '\u00A7'},\r\n                           {''uml'', '\u00A8'},\r\n                           {''\\ncopy'', '\u00A9'},\r\n                           {''ordf'', '\u00AA'},\r\n                           {''laquo'', '\u00AB'},\r\n                           {''\\nnot'', '\u00AC'},\r\n                           {''shy'', '\u00AD'},\r\n                           {''reg'', '\u00AE'},\r\n                           {''\\nmacr'', '\u00AF'},\r\n                           {''deg'', '\u00B0'},\r\n                           {''plusmn'', '\u00B1'},\r\n                           {''\\nsup2'', '\u00B2'},\r\n                           {''sup3'', '\u00B3'},\r\n                           {''acute'', '\u00B4'},\r\n                           {''\\nmicro'', '\u00B5'},\r\n                           {''para'', '\u00B6'},\r\n                           {''middot'', '\u00B7'},\r\n                           {''\\ncedil'', '\u00B8'},\r\n                           {''sup1'', '\u00B9'},\r\n                           {''ordm'', '\u00BA'},\r\n                           {''\\nraquo'', '\u00BB'},\r\n                           {''frac14'', '\u00BC'},\r\n                           {''frac12'', '\u00BD'},\r\n                           {''\\nfrac34'', '\u00BE'},\r\n                           {''iquest'', '\u00BF'},\r\n                           {''Agrave'', '\u00C0'},\r\n                           {''\\nAacute'', '\u00C1'},\r\n                           {''Acirc'', '\u00C2'},\r\n                           {''Atilde'', '\u00C3'},\r\n                           {''\\nAuml'', '\u00C4'},\r\n                           {''Aring'', '\u00C5'},\r\n                           {''AElig'', '\u00C6'},\r\n                           {''\\nCcedil'', '\u00C7'},\r\n                           {''Egrave'', '\u00C8'},\r\n                           {''Eacute'', '\u00C9'},\r\n                           {''\\nEcirc'', '\u00CA'},\r\n                           {''Euml'', '\u00CB'},\r\n                           {''Igrave'', '\u00CC'},\r\n                           {''\\nIacute'', '\u00CD'},\r\n                           {''Icirc'', '\u00CE'},\r\n                           {''Iuml'', '\u00CF'},\r\n                           {''\\nETH'', '\u00D0'},\r\n                           {''Ntilde'', '\u00D1'},\r\n                           {''Ograve'', '\u00D2'},\r\n                           {''\\nOacute'', '\u00D3'},\r\n                           {''Ocirc'', '\u00D4'},\r\n                           {''Otilde'', '\u00D5'},\r\n                           {''\\nOuml'', '\u00D6'},\r\n                           {''times'', '\u00D7'},\r\n                           {''Oslash'', '\u00D8'},\r\n                           {''\\nUgrave'', '\u00D9'},\r\n                           {''Uacute'', '\u00DA'},\r\n                           {''Ucirc'', '\u00DB'},\r\n                           {''\\nUuml'', '\u00DC'},\r\n                           {''Yacute'', '\u00DD'},\r\n                           {''THORN'', '\u00DE'},\r\n                           {''\\nszlig'', '\u00DF'},\r\n                           {''agrave'', '\u00E0'},\r\n                           {''aacute'', '\u00E1'},\r\n                           {''\\nacirc'', '\u00E2'},\r\n                           {''atilde'', '\u00E3'},\r\n                           {''auml'', '\u00E4'},\r\n                           {''\\naring'', '\u00E5'},\r\n                           {''aelig'', '\u00E6'},\r\n                           {''ccedil'', '\u00E7'},\r\n                           {''\\negrave'', '\u00E8'},\r\n                           {''eacute'', '\u00E9'},\r\n                           {''ecirc'', '\u00EA'},\r\n                           {''\\neuml'', '\u00EB'},\r\n                           {''igrave'', '\u00EC'},\r\n                           {''iacute'', '\u00ED'},\r\n                           {''\\nicirc'', '\u00EE'},\r\n                           {''iuml'', '\u00EF'},\r\n                           {''eth'', '\u00F0'},\r\n                           {''\\nntilde'', '\u00F1'},\r\n                           {''ograve'', '\u00F2'},\r\n                           {''oacute'', '\u00F3'},\r\n                           {''\\nocirc'', '\u00F4'},\r\n                           {''otilde'', '\u00F5'},\r\n                           {''ouml'', '\u00F6'},\r\n                           {''\\ndivide'', '\u00F7'},\r\n                           {''oslash'', '\u00F8'},\r\n                           {''ugrave'', '\u00F9'},\r\n                           {''\\nuacute'', '\u00FA'},\r\n                           {''ucirc'', '\u00FB'},\r\n                           {''uuml'', '\u00FC'},\r\n                           {''\\nyacute'', '\u00FD'},\r\n                           {''thorn'', '\u00FE'},\r\n                           {''yuml'', '\u00FF'},\r\n                           {''\\nfnof'', '\u0192'},\r\n                           {''Alpha'', '\u0391'},\r\n                           {''Beta'', '\u0392'},\r\n                           {''\\nGamma'', '\u0393'},\r\n                           {''Delta'', '\u0394'},\r\n                           {''Epsilon'', '\u0395'},\r\n                           {''\\nZeta'', '\u0396'},\r\n                           {''Eta'', '\u0397'},\r\n                           {''Theta'', '\u0398'},\r\n                           {''\\nIota'', '\u0399'},\r\n                           {''Kappa'', '\u039A'},\r\n                           {''Lambda'', '\u039B'},\r\n                           {''\\nMu'', '\u039C'},\r\n                           {''Nu'', '\u039D'},\r\n                           {''Xi'', '\u039E'},\r\n                           {''\\nOmicron'', '\u039F'},\r\n                           {''Pi'', '\u03A0'},\r\n                           {''Rho'', '\u03A1'},\r\n                           {''\\nSigma'', '\u03A3'},\r\n                           {''Tau'', '\u03A4'},\r\n                           {''Upsilon'', '\u03A5'},\r\n                           {''\\nPhi'', '\u03A6'},\r\n                           {''Chi'', '\u03A7'},\r\n                           {''Psi'', '\u03A8'},\r\n                           {''\\nOmega'', '\u03A9'},\r\n                           {''alpha'', '\u03B1'},\r\n                           {''beta'', '\u03B2'},\r\n                           {''\\ngamma'', '\u03B3'},\r\n                           {''delta'', '\u03B4'},\r\n                           {''epsilon'', '\u03B5'},\r\n                           {''\\nzeta'', '\u03B6'},\r\n                           {''eta'', '\u03B7'},\r\n                           {''theta'', '\u03B8'},\r\n                           {''\\niota'', '\u03B9'},\r\n                           {''kappa'', '\u03BA'},\r\n                           {''lambda'', '\u03BB'},\r\n                           {''\\nmu'', '\u03BC'},\r\n                           {''nu'', '\u03BD'},\r\n                           {''xi'', '\u03BE'},\r\n                           {''\\nomicron'', '\u03BF'},\r\n                           {''pi'', '\u03C0'},\r\n                           {''rho'', '\u03C1'},\r\n                           {''\\nsigmaf'', '\u03C2'},\r\n                           {''sigma'', '\u03C3'},\r\n                           {''tau'', '\u03C4'},\r\n                           {''\\nupsilon'', '\u03C5'},\r\n                           {''phi'', '\u03C6'},\r\n                           {''chi'', '\u03C7'},\r\n                           {''\\npsi'', '\u03C8'},\r\n                           {''omega'', '\u03C9'},\r\n                           {''thetasym'', '\u03D1'},\r\n                           {''\\nupsih'', '\u03D2'},\r\n                           {''piv'', '\u03D6'},\r\n                           {''bull'', '\u2022'},\r\n                           {''\\nhellip'', '\u2026'},\r\n                           {''prime'', '\u2032'},\r\n                           {''Prime'', '\u2033'},\r\n                           {''\\noline'', '\u203E'},\r\n                           {''frasl'', '\u2044'},\r\n                           {''weierp'', '\u2118'},\r\n                           {''\\nimage'', '\u2111'},\r\n                           {''real'', '\u211C'},\r\n                           {''trade'', '\u2122'},\r\n                           {''\\nalefsym'', '\u2135'},\r\n                           {''larr'', '\u2190'},\r\n                           {''uarr'', '\u2191'},\r\n                           {''\\nrarr'', '\u2192'},\r\n                           {''darr'', '\u2193'},\r\n                           {''harr'', '\u2194'},\r\n                           {''\\ncrarr'', '\u21B5'},\r\n                           {''lArr'', '\u21D0'},\r\n                           {''uArr'', '\u21D1'},\r\n                           {''\\nrArr'', '\u21D2'},\r\n                           {''dArr'', '\u21D3'},\r\n                           {''hArr'', '\u21D4'},\r\n                           {''\\nforall'', '\u2200'},\r\n                           {''part'', '\u2202'},\r\n                           {''exist'', '\u2203'},\r\n                           {''\\nempty'', '\u2205'},\r\n                           {''nabla'', '\u2207'},\r\n                           {''isin'', '\u2208'},\r\n                           {''\\nnotin'', '\u2209'},\r\n                           {''ni'', '\u220B'},\r\n                           {''prod'', '\u220F'},\r\n                           {''\\nsum'', '\u2211'},\r\n                           {''minus'', '\u2212'},\r\n                           {''lowast'', '\u2217'},\r\n                           {''\\nradic'', '\u221A'},\r\n                           {''prop'', '\u221D'},\r\n                           {''infin'', '\u221E'},\r\n                           {''\\nang'', '\u2220'},\r\n                           {''and'', '\u2227'},\r\n                           {''or'', '\u2228'},\r\n                           {''\\ncap'', '\u2229'},\r\n                           {''cup'', '\u222A'},\r\n                           {''int'', '\u222B'},\r\n                           {''\\nthere4'', '\u2234'},\r\n                           {''sim'', '\u223C'},\r\n                           {''cong'', '\u2245'},\r\n                           {''\\nasymp'', '\u2248'},\r\n                           {''ne'', '\u2260'},\r\n                           {''equiv'', '\u2261'},\r\n                           {''\\nle'', '\u2264'},\r\n                           {''ge'', '\u2265'},\r\n                           {''sub'', '\u2282'},\r\n                           {''\\nsup'', '\u2283'},\r\n                           {''nsub'', '\u2284'},\r\n                           {''sube'', '\u2286'},\r\n                           {''\\nsupe'', '\u2287'},\r\n                           {''oplus'', '\u2295'},\r\n                           {''otimes'', '\u2297'},\r\n                           {''\\nperp'', '\u22A5'},\r\n                           {''sdot'', '\u22C5'},\r\n                           {''lceil'', '\u2308'},\r\n                           {''\\nrceil'', '\u2309'},\r\n                           {''lfloor'', '\u230A'},\r\n                           {''rfloor'', '\u230B'},\r\n                           {''\\nlang'', '\u2329'},\r\n                           {''rang'', '\u232A'},\r\n                           {''loz'', '\u25CA'},\r\n                           {''\\nspades'', '\u2660'},\r\n                           {''clubs'', '\u2663'},\r\n                           {''hearts'', '\u2665'},\r\n                           {''\\ndiams'', '\u2666'},\r\n                           {''quot'', '\u0022'},\r\n                           {''amp'', '\u0026'},\r\n                           {''\\nlt'', '\u003C'},\r\n                           {''gt'', '\u003E'},\r\n                           {''OElig'', '\u0152'},\r\n                           {''\\noelig'', '\u0153'},\r\n                           {''Scaron'', '\u0160'},\r\n                           {''scaron'', '\u0161'},\r\n                           {''\\nYuml'', '\u0178'},\r\n                           {''circ'', '\u02C6'},\r\n                           {''tilde'', '\u02DC'},\r\n                           {''\\nensp'', '\u2002'},\r\n                           {''emsp'', '\u2003'},\r\n                           {''thinsp'', '\u2009'},\r\n                           {''\\nzwnj'', '\u200C'},\r\n                           {''zwj'', '\u200D'},\r\n                           {''lrm'', '\u200E'},\r\n                           {''\\nrlm'', '\u200F'},\r\n                           {''ndash'', '\u2013'},\r\n                           {''mdash'', '\u2014'},\r\n                           {''\\nlsquo'', '\u2018'},\r\n                           {''rsquo'', '\u2019'},\r\n                           {''sbquo'', '\u201A'},\r\n                           {''\\nldquo'', '\u201C'},\r\n                           {''rdquo'', '\u201D'},\r\n                           {''bdquo'', '\u201E'},\r\n                           {''\\ndagger'', '\u2020'},\r\n                           {''Dagger'', '\u2021'},\r\n                           {''permil'', '\u2030'},\r\n                           {''\\nlsaquo'', '\u2039'},\r\n                           {''rsaquo'', '\u203A'},\r\n                           {''euro'', '\u20AC'}\r\n                       }", span="603-857"];
m5_286 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.InitEntities()", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.InitEntities()", span="599-599"];
m5_287 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IComparer<TKey>)", file="HtmlEncoder.cs", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IComparer<TKey>)", span="0-0"];
m5_222 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.FromHex(char)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.FromHex(char)", span="486-486"];
m5_224 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.FromHex(char)", file="HtmlEncoder.cs", label="return int.Parse(Convert.ToString(c), System.Globalization.NumberStyles.HexNumber);", span="488-488"];
m5_226 [cluster="System.Convert.ToString(char)", file="HtmlEncoder.cs", label="Entry System.Convert.ToString(char)", span="0-0"];
m5_225 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.FromHex(char)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.FromHex(char)", span="486-486"];
m5_227 [cluster="int.Parse(string, System.Globalization.NumberStyles)", file="HtmlEncoder.cs", label="Entry int.Parse(string, System.Globalization.NumberStyles)", span="0-0"];
m5_136 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", span="319-319"];
m5_137 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="s == null", span="321-321"];
m5_139 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="s.Length == 0", span="326-326"];
m5_141 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="s.IndexOf('&') == -1", span="331-331"];
m5_142 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="return s;", span="333-333"];
m5_145 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="int len = s.Length", span="338-338"];
m5_138 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="return null;", span="323-323"];
m5_215 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", span="319-319"];
m5_140 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="return string.Empty;", span="328-328"];
m5_143 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="StringBuilder entity = new StringBuilder()", span="336-336"];
m5_144 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="StringBuilder output = new StringBuilder()", span="337-337"];
m5_155 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Append(c)", span="357-357"];
m5_161 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Append(number.ToString(Helpers.InvariantCulture))", span="374-374"];
m5_163 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="output.Append(entity)", span="378-378"];
m5_164 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Length = 0", span="379-379"];
m5_165 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Append('&')", span="380-380"];
m5_170 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="output.Append(entity)", span="391-391"];
m5_172 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Length = 0", span="393-393"];
m5_176 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Append(c)", span="402-402"];
m5_178 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Append(c)", span="408-408"];
m5_180 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="string key = entity.ToString()", span="412-412"];
m5_185 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Length = 0", span="421-421"];
m5_194 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Length = 0", span="440-440"];
m5_206 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Append(number.ToString(Helpers.InvariantCulture))", span="463-463"];
m5_208 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Append(c)", span="467-467"];
m5_210 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Length > 0", span="474-474"];
m5_211 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="output.Append(entity)", span="476-476"];
m5_157 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="output.Append(c)", span="362-362"];
m5_171 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="output.Append(c)", span="392-392"];
m5_183 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="output.Append(key)", span="419-419"];
m5_189 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="output.Append(''&#'')", span="430-430"];
m5_190 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="output.Append(number.ToString(Helpers.InvariantCulture))", span="431-431"];
m5_191 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="output.Append('';'')", span="432-432"];
m5_192 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="output.Append((char) number)", span="436-436"];
m5_213 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="output.Append(number.ToString(Helpers.InvariantCulture))", span="480-480"];
m5_214 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="return output.ToString();", span="483-483"];
m5_146 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="int state = 0", span="344-344"];
m5_151 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="i < len", span="349-349"];
m5_147 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="int number = 0", span="345-345"];
m5_153 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="state == 0", span="353-353"];
m5_166 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label=state, span="385-385"];
m5_148 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="bool isHexValue = false", span="346-346"];
m5_188 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="number > 65535", span="428-428"];
m5_197 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="number = number * 16 + FromHex(c)", span="445-445"];
m5_200 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="number = number * 10 + (c - '0')", span="450-450"];
m5_202 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="number == 0 && (c == 'x' || c == 'X')", span="453-453"];
m5_149 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="bool haveTrailingDigits = false", span="347-347"];
m5_196 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="isHexValue && IsHexDigit(c)", span="443-443"];
m5_150 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="int i = 0", span="349-349"];
m5_160 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label=haveTrailingDigits, span="372-372"];
m5_205 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label=haveTrailingDigits, span="461-461"];
m5_212 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label=haveTrailingDigits, span="478-478"];
m5_209 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="i++", span="349-349"];
m5_154 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="c == '&'", span="355-355"];
m5_158 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="c == '&'", span="368-368"];
m5_168 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="c == ';'", span="388-388"];
m5_175 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="state = c != '#'\r\n                                ? 2\r\n                                : 3", span="399-401"];
m5_179 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="c == ';'", span="410-410"];
m5_187 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="c == ';'", span="426-426"];
m5_199 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="char.IsDigit(c)", span="448-448"];
m5_156 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="state = 1", span="358-358"];
m5_159 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="state = 1", span="370-370"];
m5_105 [cluster="int.ToString(System.IFormatProvider)", file="HtmlEncoder.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m5_162 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="haveTrailingDigits = false", span="375-375"];
m5_217 [cluster="System.Text.StringBuilder.Append(object)", file="HtmlEncoder.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m5_167 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label=1, span="387-387"];
m5_177 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label=2, span="407-407"];
m5_186 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label=3, span="425-425"];
m5_169 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="state = 0", span="390-390"];
m5_173 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="number = 0", span="397-397"];
m5_174 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="isHexValue = false", span="398-398"];
m5_181 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="key.Length > 1 && Entities.ContainsKey(key.Substring(1, key.Length - 2))", span="414-414"];
m5_182 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="key = Entities[key.Substring(1, key.Length - 2)].ToString()", span="416-416"];
m5_218 [cluster="string.Substring(int, int)", file="HtmlEncoder.cs", label="Entry string.Substring(int, int)", span="0-0"];
m5_219 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="HtmlEncoder.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m5_184 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="state = 0", span="420-420"];
m5_193 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="state = 0", span="439-439"];
m5_195 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="haveTrailingDigits = false", span="441-441"];
m5_198 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="haveTrailingDigits = true", span="446-446"];
m5_223 [cluster="char.IsDigit(char)", file="HtmlEncoder.cs", label="Entry char.IsDigit(char)", span="0-0"];
m5_201 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="haveTrailingDigits = true", span="451-451"];
m5_203 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="isHexValue = true", span="455-455"];
m5_204 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="state = 2", span="459-459"];
m5_207 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="haveTrailingDigits = false", span="464-464"];
m5_64 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", span="179-179"];
m5_65 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="s == null", span="181-181"];
m5_67 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="s.Length == 0", span="186-186"];
m5_71 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="i < s.Length", span="193-193"];
m5_72 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="char c = s[i]", span="195-195"];
m5_77 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="return s;", span="206-206"];
m5_79 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="int len = s.Length", span="210-210"];
m5_82 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="s[i]", span="214-214"];
m5_95 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="char ch = s[i]", span="241-241"];
m5_66 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="return null;", span="183-183"];
m5_103 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", span="179-179"];
m5_68 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="return string.Empty;", span="188-188"];
m5_69 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="bool needEncode = false", span="191-191"];
m5_70 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="int i = 0", span="193-193"];
m5_76 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="!needEncode", span="204-204"];
m5_75 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="i++", span="193-193"];
m5_73 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="c == '&' || c == '''' || c == '<' || c == '>' || c > 159", span="197-197"];
m5_74 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="needEncode = true", span="199-199"];
m5_78 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="StringBuilder output = new StringBuilder()", span="209-209"];
m5_84 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="output.Append(''&amp;'')", span="217-217"];
m5_86 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="output.Append(''&gt;'')", span="221-221"];
m5_88 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="output.Append(''&lt;'')", span="225-225"];
m5_90 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="output.Append(''&quot;'')", span="229-229"];
m5_92 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="output.Append(''&#65308;'')", span="233-233"];
m5_94 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="output.Append(''&#65310;'')", span="237-237"];
m5_97 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="output.Append(''&#'')", span="245-245"];
m5_98 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="output.Append(((int) ch).ToString(Helpers.InvariantCulture))", span="246-246"];
m5_99 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="output.Append('';'')", span="247-247"];
m5_100 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="output.Append(ch)", span="251-251"];
m5_102 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="return output.ToString();", span="258-258"];
m5_80 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="int i = 0", span="212-212"];
m5_81 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="i < len", span="212-212"];
m5_101 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="i++", span="212-212"];
m5_83 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="'&'", span="216-216"];
m5_85 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="'>'", span="220-220"];
m5_87 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="'<'", span="224-224"];
m5_89 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="''''", span="228-228"];
m5_91 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="'\uff1c'", span="232-232"];
m5_93 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="'\uff1e'", span="236-236"];
m5_96 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="ch > 159 && ch < 256", span="243-243"];
m5_232 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.NotEncoded(char)", file="HtmlEncoder.cs", label="return (c == '!' || c == '(' || c == ')' || c == '*' || c == '-' || c == '.' || c == '_');", span="499-499"];
m5_233 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.NotEncoded(char)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.NotEncoded(char)", span="497-497"];
m5_38 [cluster="System.IO.MemoryStream.MemoryStream()", file="HtmlEncoder.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m5_41 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="HtmlEncoder.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m6_8 [cluster="RestSharp.IRestRequest.AddXmlBody(object, string)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddXmlBody(object, string)", span="214-214"];
m6_9 [cluster="RestSharp.IRestRequest.AddXmlBody(object, string)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddXmlBody(object, string)", span="214-214"];
m6_10 [cluster="RestSharp.IRestRequest.AddObject(object, params string[])", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddObject(object, params string[])", span="225-225"];
m6_11 [cluster="RestSharp.IRestRequest.AddObject(object, params string[])", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddObject(object, params string[])", span="225-225"];
m6_24 [cluster="RestSharp.IRestRequest.AddCookie(string, string)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddCookie(string, string)", span="292-292"];
m6_25 [cluster="RestSharp.IRestRequest.AddCookie(string, string)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddCookie(string, string)", span="292-292"];
m6_26 [cluster="RestSharp.IRestRequest.AddUrlSegment(string, string)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddUrlSegment(string, string)", span="300-300"];
m6_27 [cluster="RestSharp.IRestRequest.AddUrlSegment(string, string)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddUrlSegment(string, string)", span="300-300"];
m6_28 [cluster="RestSharp.IRestRequest.AddQueryParameter(string, string)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddQueryParameter(string, string)", span="308-308"];
m6_29 [cluster="RestSharp.IRestRequest.AddQueryParameter(string, string)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddQueryParameter(string, string)", span="308-308"];
m6_18 [cluster="RestSharp.IRestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="261-261"];
m6_19 [cluster="RestSharp.IRestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="261-261"];
m6_30 [cluster="RestSharp.IRestRequest.IncreaseNumAttempts()", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.IncreaseNumAttempts()", span="312-312"];
m6_31 [cluster="RestSharp.IRestRequest.IncreaseNumAttempts()", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.IncreaseNumAttempts()", span="312-312"];
m6_20 [cluster="RestSharp.IRestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", span="276-276"];
m6_21 [cluster="RestSharp.IRestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", span="276-276"];
m6_16 [cluster="RestSharp.IRestRequest.AddParameter(string, object)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddParameter(string, object)", span="247-247"];
m6_17 [cluster="RestSharp.IRestRequest.AddParameter(string, object)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddParameter(string, object)", span="247-247"];
m6_12 [cluster="RestSharp.IRestRequest.AddObject(object)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddObject(object)", span="232-232"];
m6_13 [cluster="RestSharp.IRestRequest.AddObject(object)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddObject(object)", span="232-232"];
m6_2 [cluster="RestSharp.IRestRequest.AddBody(object)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddBody(object)", span="191-191"];
m6_3 [cluster="RestSharp.IRestRequest.AddBody(object)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddBody(object)", span="191-191"];
m6_0 [cluster="RestSharp.IRestRequest.AddBody(object, string)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddBody(object, string)", span="183-183"];
m6_1 [cluster="RestSharp.IRestRequest.AddBody(object, string)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddBody(object, string)", span="183-183"];
m6_14 [cluster="RestSharp.IRestRequest.AddParameter(RestSharp.Parameter)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddParameter(RestSharp.Parameter)", span="239-239"];
m6_15 [cluster="RestSharp.IRestRequest.AddParameter(RestSharp.Parameter)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddParameter(RestSharp.Parameter)", span="239-239"];
m6_22 [cluster="RestSharp.IRestRequest.AddHeader(string, string)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddHeader(string, string)", span="284-284"];
m6_23 [cluster="RestSharp.IRestRequest.AddHeader(string, string)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddHeader(string, string)", span="284-284"];
m6_4 [cluster="RestSharp.IRestRequest.AddJsonBody(object)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddJsonBody(object)", span="198-198"];
m6_5 [cluster="RestSharp.IRestRequest.AddJsonBody(object)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddJsonBody(object)", span="198-198"];
m6_6 [cluster="RestSharp.IRestRequest.AddXmlBody(object)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddXmlBody(object)", span="205-205"];
m6_7 [cluster="RestSharp.IRestRequest.AddXmlBody(object)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddXmlBody(object)", span="205-205"];
m8_327 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", span="500-500"];
m8_328 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="string doc = CreateJsonWithUnderscores()", span="502-502"];
m8_329 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="503-503"];
m8_330 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="504-504"];
m8_349 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", span="827-827"];
m8_331 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="505-505"];
m8_8 [cluster="RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", file="JsonTests.cs", label="Entry RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", span="22-22"];
m8_9 [cluster="RestSharp.RestResponse.RestResponse()", file="JsonTests.cs", label="Entry RestSharp.RestResponse.RestResponse()", span="184-184"];
m8_332 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="507-507"];
m8_333 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="508-508"];
m8_334 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(28, p.Age)", span="509-509"];
m8_335 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="510-510"];
m8_336 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="511-511"];
m8_337 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="512-512"];
m8_338 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="513-513"];
m8_339 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="514-514"];
m8_340 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.Friends)", span="515-515"];
m8_341 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="516-516"];
m8_342 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.BestFriend)", span="517-517"];
m8_343 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="518-518"];
m8_344 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="519-519"];
m8_345 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.IsNotEmpty(p.Foes)", span="520-520"];
m8_346 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''Foe 1'', p.Foes[''dict1''].Nickname)", span="521-521"];
m8_347 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''Foe 2'', p.Foes[''dict2''].Nickname)", span="522-522"];
m8_10 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="JsonTests.cs", label="Entry RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", span="27-27"];
m8_141 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="JsonTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m8_313 [cluster="System.Uri.Uri(string, System.UriKind)", file="JsonTests.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m8_348 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", span="500-500"];
m8_48 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", span="95-95"];
m8_49 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsonlists.txt''))", span="97-97"];
m8_50 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="98-98"];
m8_51 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="JsonLists output = json.Deserialize<JsonLists>(new RestResponse { Content = doc })", span="99-99"];
m8_31 [cluster="System.IO.File.ReadAllText(string)", file="JsonTests.cs", label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
m8_30 [cluster="System.IO.Path.Combine(string, string)", file="JsonTests.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m8_52 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="Assert.IsNotEmpty(output.Names)", span="101-101"];
m8_53 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="Assert.IsNotEmpty(output.Numbers)", span="102-102"];
m8_54 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", span="95-95"];
m8_445 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", span="658-658"];
m8_446 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file="JsonTests.cs", label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="660-660"];
m8_447 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc),\r\n                payload.DateTime)", span="662-664"];
m8_411 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", span="1060-1060"];
m8_448 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", span="658-658"];
m8_444 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="JsonTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m8_319 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", span="488-488"];
m8_320 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''underscore_prefix.txt''))", span="490-490"];
m8_321 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = data }", span="491-491"];
m8_322 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''User'' }", span="492-492"];
m8_323 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="SoUser output = json.Deserialize<SoUser>(response)", span="493-493"];
m8_324 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="Assert.AreEqual(''John Sheehan'', output.DisplayName)", span="495-495"];
m8_325 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="Assert.AreEqual(1786, output.Id)", span="496-496"];
m8_326 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", span="488-488"];
m8_496 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", span="760-760"];
m8_497 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="string doc = this.CreateDynamicJsonStringDictionary()", span="762-762"];
m8_498 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="763-763"];
m8_499 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="764-764"];
m8_506 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", span="1036-1036"];
m8_500 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="Dictionary<string, string> bd = d.Deserialize<Dictionary<string, string>>(response)", span="765-765"];
m8_501 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="Assert.AreEqual(''[\''Value1\'',\''Value2\'']'', bd[''Thing1''])", span="767-767"];
m8_502 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="Assert.AreEqual(''Thing2'', bd[''Thing2''])", span="768-768"];
m8_503 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="Assert.AreEqual(''{\''Name\'':\''ThingRed\'',\''Color\'':\''Red\''}'', bd[''ThingRed''])", span="769-769"];
m8_504 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="Assert.AreEqual(''{\''Name\'':\''ThingBlue\'',\''Color\'':\''Blue\''}'', bd[''ThingBlue''])", span="770-770"];
m8_505 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", span="760-760"];
m8_192 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", span="1013-1013"];
m8_638 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="1015-1015"];
m8_639 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="doc[''Id''] = 123", span="1017-1017"];
m8_640 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="doc[''StartDate''] = new DateTime(2010, 2, 21, 9, 35, 00, DateTimeKind.Utc)", span="1018-1018"];
m8_641 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="doc[''UniqueId''] = new Guid(GUID_STRING).ToString()", span="1019-1019"];
m8_642 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="return doc.ToString();", span="1021-1021"];
m8_126 [cluster="RestSharp.Tests.JsonObject.JsonObject()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonObject.JsonObject()", span="134-134"];
m8_158 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m8_125 [cluster="System.Guid.Guid(string)", file="JsonTests.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m8_625 [cluster="System.Guid.ToString()", file="JsonTests.cs", label="Entry System.Guid.ToString()", span="0-0"];
m8_643 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", span="1013-1013"];
m8_128 [cluster="RestSharp.Tests.JsonObject.ToString()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonObject.ToString()", span="342-342"];
m8_213 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", span="338-338"];
m8_214 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonarray.txt''))", span="340-340"];
m8_215 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = data }", span="341-341"];
m8_216 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="342-342"];
m8_217 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="List<status> output = json.Deserialize<List<status>>(response)", span="343-343"];
m8_218 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="Assert.AreEqual(4, output.Count)", span="345-345"];
m8_219 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", span="338-338"];
m8_485 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", span="746-746"];
m8_486 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="string doc = this.CreateJsonStringDictionary()", span="748-748"];
m8_487 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="749-749"];
m8_488 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="750-750"];
m8_495 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", span="1024-1024"];
m8_489 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Dictionary<string, string> bd = d.Deserialize<Dictionary<string, string>>(response)", span="751-751"];
m8_490 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Assert.AreEqual(bd[''Thing1''], ''Thing1'')", span="753-753"];
m8_491 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Assert.AreEqual(bd[''Thing2''], ''Thing2'')", span="754-754"];
m8_492 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Assert.AreEqual(bd[''ThingRed''], ''ThingRed'')", span="755-755"];
m8_493 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Assert.AreEqual(bd[''ThingBlue''], ''ThingBlue'')", span="756-756"];
m8_494 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", span="746-746"];
m8_424 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", span="626-626"];
m8_425 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="string doc = CreateUnixDateJson()", span="628-628"];
m8_426 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="629-629"];
m8_427 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="630-630"];
m8_431 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateUnixDateJson()", span="925-925"];
m8_428 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="Birthdate bd = d.Deserialize<Birthdate>(response)", span="631-631"];
m8_429 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="Assert.AreEqual(new DateTime(2011, 6, 30, 8, 15, 46, DateTimeKind.Utc), bd.Value)", span="633-633"];
m8_430 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", span="626-626"];
m8_286 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", span="449-449"];
m8_287 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="string doc = CreateJson()", span="451-451"];
m8_288 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="452-452"];
m8_289 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="453-453"];
m8_312 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJson()", span="943-943"];
m8_290 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="454-454"];
m8_291 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="456-456"];
m8_292 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc), p.StartDate)", span="457-457"];
m8_293 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(28, p.Age)", span="458-458"];
m8_294 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="459-459"];
m8_295 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="460-460"];
m8_296 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="461-461"];
m8_297 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="462-462"];
m8_298 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="463-463"];
m8_299 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(Guid.Empty, p.EmptyGuid)", span="464-464"];
m8_300 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.Guid)", span="465-465"];
m8_301 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(Order.Third, p.Order)", span="466-466"];
m8_302 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.SoSo, p.Disposition)", span="467-467"];
m8_303 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.Friends)", span="468-468"];
m8_304 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="469-469"];
m8_305 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.BestFriend)", span="470-470"];
m8_306 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="471-471"];
m8_307 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="472-472"];
m8_308 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.IsNotEmpty(p.Foes)", span="473-473"];
m8_309 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''Foe 1'', p.Foes[''dict1''].Nickname)", span="474-474"];
m8_310 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''Foe 2'', p.Foes[''dict2''].Nickname)", span="475-475"];
m8_311 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", span="449-449"];
m8_255 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", span="396-396"];
m8_256 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file="JsonTests.cs", label="string data = @''{ ''''Integer'''' : 1024 }''", span="398-398"];
m8_257 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = data }", span="399-399"];
m8_258 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="400-400"];
m8_259 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file="JsonTests.cs", label="JsonEnumsTestStructure result = json.Deserialize<JsonEnumsTestStructure>(response)", span="401-401"];
m8_260 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.Friendly, result.Integer)", span="403-403"];
m8_261 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", span="396-396"];
m8_354 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", span="535-535"];
m8_355 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="string doc = CreateJsonWithDashes()", span="537-537"];
m8_356 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="538-538"];
m8_357 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="539-539"];
m8_375 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithDashes()", span="871-871"];
m8_358 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="540-540"];
m8_359 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="542-542"];
m8_360 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(28, p.Age)", span="544-544"];
m8_361 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="545-545"];
m8_362 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="546-546"];
m8_363 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="547-547"];
m8_364 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="548-548"];
m8_365 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="549-549"];
m8_366 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.Friends)", span="550-550"];
m8_367 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="551-551"];
m8_368 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.BestFriend)", span="552-552"];
m8_369 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="553-553"];
m8_370 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="554-554"];
m8_371 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.IsNotEmpty(p.Foes)", span="555-555"];
m8_372 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''Foe 1'', p.Foes[''dict1''].Nickname)", span="556-556"];
m8_373 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''Foe 2'', p.Foes[''dict2''].Nickname)", span="557-557"];
m8_374 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", span="535-535"];
m8_262 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", span="407-407"];
m8_263 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="409-409"];
m8_264 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="doc[''Guid''] = GUID_STRING", span="411-411"];
m8_266 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="414-414"];
m8_265 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="413-413"];
m8_267 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="415-415"];
m8_268 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.Guid)", span="417-417"];
m8_269 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", span="407-407"];
m8_83 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", span="148-148"];
m8_84 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''sojson.txt''))", span="150-150"];
m8_85 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''User'' }", span="151-151"];
m8_86 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="SoUser output = json.Deserialize<SoUser>(new RestResponse { Content = doc })", span="152-152"];
m8_87 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="Assert.AreEqual(''John Sheehan'', output.DisplayName)", span="154-154"];
m8_88 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", span="148-148"];
m8_193 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", span="308-308"];
m8_194 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file="JsonTests.cs", label="string content = ''{\''sid\'':\''asdasdasdasdasdasdasda\'',\''friendlyName\'':\''VeryNiceName\'',\''oddballPropertyName\'':\''blahblah\''}''", span="310-310"];
m8_195 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''users'' }", span="311-311"];
m8_196 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file="JsonTests.cs", label="Oddball output = json.Deserialize<Oddball>(new RestResponse { Content = content })", span="312-312"];
m8_197 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file="JsonTests.cs", label="Assert.NotNull(output)", span="314-314"];
m8_198 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file="JsonTests.cs", label="Assert.AreEqual(''blahblah'', output.GoodPropertyName)", span="315-315"];
m8_199 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", span="308-308"];
m8_270 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", span="421-421"];
m8_271 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="423-423"];
m8_272 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="doc[''Age''] = ''28''", span="425-425"];
m8_274 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="428-428"];
m8_273 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="427-427"];
m8_275 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="429-429"];
m8_276 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="Assert.AreEqual(28, p.Age)", span="431-431"];
m8_277 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", span="421-421"];
m8_278 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", span="435-435"];
m8_279 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="437-437"];
m8_280 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="doc[''IsCool''] = 1", span="439-439"];
m8_282 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="442-442"];
m8_281 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="441-441"];
m8_283 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="443-443"];
m8_284 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="Assert.True(p.IsCool)", span="445-445"];
m8_285 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", span="435-435"];
m8_161 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", span="265-265"];
m8_162 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="string doc = CreateJsonWithNullValues()", span="267-267"];
m8_163 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="268-268"];
m8_164 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="NullableValues output = json.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="269-269"];
m8_169 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", span="991-991"];
m8_165 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Null(output.Id)", span="271-271"];
m8_166 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Null(output.StartDate)", span="272-272"];
m8_167 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Null(output.UniqueId)", span="273-273"];
m8_168 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", span="265-265"];
m8_241 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", span="378-378"];
m8_242 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonenumtypes.txt''))", span="380-380"];
m8_243 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = data }", span="381-381"];
m8_244 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="382-382"];
m8_245 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="JsonEnumTypesTestStructure output = json.Deserialize<JsonEnumTypesTestStructure>(response)", span="383-383"];
m8_246 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(ByteEnum.EnumMin, output.ByteEnumType)", span="385-385"];
m8_247 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(SByteEnum.EnumMin, output.SByteEnumType)", span="386-386"];
m8_248 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(ShortEnum.EnumMin, output.ShortEnumType)", span="387-387"];
m8_249 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(UShortEnum.EnumMin, output.UShortEnumType)", span="388-388"];
m8_250 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(IntEnum.EnumMin, output.IntEnumType)", span="389-389"];
m8_251 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(UIntEnum.EnumMin, output.UIntEnumType)", span="390-390"];
m8_252 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(LongEnum.EnumMin, output.LongEnumType)", span="391-391"];
m8_253 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(ULongEnum.EnumMin, output.ULongEnumType)", span="392-392"];
m8_254 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", span="378-378"];
m8_376 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", span="561-561"];
m8_377 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="new CultureChange(ALTERNATIVE_CULTURE)", span="563-563"];
m8_378 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="this.Can_Deserialize_Names_With_Dashes_With_Default_Root()", span="565-565"];
m8_318 [cluster="RestSharp.Tests.CultureChange.CultureChange(string)", file="JsonTests.cs", label="Entry RestSharp.Tests.CultureChange.CultureChange(string)", span="10-10"];
m8_379 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", span="561-561"];
m8_180 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", span="289-289"];
m8_181 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="string doc = CreateJsonWithoutEmptyValues()", span="291-291"];
m8_182 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="292-292"];
m8_183 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="NullableValues output = json.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="293-293"];
m8_184 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.NotNull(output.Id)", span="295-295"];
m8_185 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.NotNull(output.StartDate)", span="296-296"];
m8_186 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.NotNull(output.UniqueId)", span="297-297"];
m8_187 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.AreEqual(123, output.Id)", span="299-299"];
m8_188 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.NotNull(output.StartDate)", span="300-300"];
m8_189 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2010, 2, 21, 9, 35, 00, DateTimeKind.Utc),\r\n                output.StartDate.Value)", span="301-303"];
m8_190 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), output.UniqueId)", span="304-304"];
m8_191 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", span="289-289"];
m8_314 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", span="479-479"];
m8_315 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="new CultureChange(ALTERNATIVE_CULTURE)", span="481-481"];
m8_316 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="this.Can_Deserialize_With_Default_Root()", span="483-483"];
m8_317 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", span="479-479"];
m8_113 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", span="199-199"];
m8_114 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="Guid id1 = new Guid(''b0e5c11f-e944-478c-aadd-753b956d0c8c'')", span="201-201"];
m8_115 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="Guid id2 = new Guid(''809399fa-21c4-4dca-8dcd-34cb697fbca0'')", span="202-202"];
m8_117 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="data[''Ids''] = new JsonArray { id1, id2 }", span="205-205"];
m8_122 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="Assert.AreEqual(id1, p.Ids[0])", span="212-212"];
m8_116 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="JsonObject data = new JsonObject()", span="203-203"];
m8_123 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="Assert.AreEqual(id2, p.Ids[1])", span="213-213"];
m8_119 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = data.ToString()  }", span="208-208"];
m8_118 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="207-207"];
m8_127 [cluster="RestSharp.Tests.JsonArray.JsonArray()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonArray.JsonArray()", span="91-91"];
m8_120 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="GuidList p = d.Deserialize<GuidList>(response)", span="209-209"];
m8_121 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="Assert.AreEqual(2, p.Ids.Count)", span="211-211"];
m8_124 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", span="199-199"];
m8_387 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="581-581"];
m8_388 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="string doc = CreateJson()", span="583-583"];
m8_389 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="584-584"];
m8_390 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="585-585"];
m8_391 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="586-586"];
m8_392 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Assert.Null(p.ReadOnlyProxy)", span="588-588"];
m8_393 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="581-581"];
m8_440 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", span="648-648"];
m8_441 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file="JsonTests.cs", label="PersonForJson person = GetPayLoad<PersonForJson>(''person.json.txt'')", span="650-650"];
m8_442 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc),\r\n                person.StartDate)", span="652-654"];
m8_443 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", span="648-648"];
m8_200 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", span="319-319"];
m8_201 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="CultureInfo culture = CultureInfo.InvariantCulture", span="321-321"];
m8_202 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="string format = ''dd yyyy MMM, hh:mm ss tt''", span="322-322"];
m8_204 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="var formatted = new { StartDate = date.ToString(format, culture) }", span="324-324"];
m8_207 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer\r\n                                    {\r\n                                        \\nDateFormat = format,\r\n                                        Culture = culture\r\n                                    }", span="327-331"];
m8_203 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="DateTime date = new DateTime(2010, 2, 8, 11, 11, 11)", span="323-323"];
m8_209 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="Assert.AreEqual(date, output.StartDate)", span="334-334"];
m8_211 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="JsonTests.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m8_205 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="string data = SimpleJson.SerializeObject(formatted)", span="325-325"];
m8_206 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = data }", span="326-326"];
m8_212 [cluster="RestSharp.Tests.SimpleJson.SerializeObject(object)", file="JsonTests.cs", label="Entry RestSharp.Tests.SimpleJson.SerializeObject(object)", span="610-610"];
m8_208 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="PersonForJson output = json.Deserialize<PersonForJson>(response)", span="332-332"];
m8_210 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", span="319-319"];
m8_23 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", span="63-63"];
m8_24 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file="JsonTests.cs", label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonarray.txt''))", span="65-65"];
m8_25 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = data }", span="66-66"];
m8_26 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="67-67"];
m8_27 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file="JsonTests.cs", label="StatusComplexList output = json.Deserialize<StatusComplexList>(response)", span="68-68"];
m8_28 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file="JsonTests.cs", label="Assert.AreEqual(4, output.Count)", span="70-70"];
m8_29 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", span="63-63"];
m8_454 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", span="679-679"];
m8_455 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file="JsonTests.cs", label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="681-681"];
m8_456 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file="JsonTests.cs", label="Assert.Null(payload.NullableDateTimeWithNull)", span="683-683"];
m8_457 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", span="679-679"];
m8_144 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", span="239-239"];
m8_145 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="DateTime item0 = new DateTime(2010, 2, 8, 11, 11, 11, DateTimeKind.Local)", span="241-241"];
m8_146 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="DateTime item1 = new DateTime(2011, 2, 8, 11, 11, 11, DateTimeKind.Utc)", span="242-242"];
m8_153 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="Assert.AreNotEqual(item0.Kind, p.Items[0].Kind)", span="258-258"];
m8_147 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="DateTime item2 = new DateTime(2012, 2, 8, 11, 11, 11, DateTimeKind.Unspecified)", span="243-243"];
m8_154 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="Assert.AreEqual(item1.Kind, p.Items[1].Kind)", span="259-259"];
m8_148 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="JsonObject data = new JsonObject()", span="244-244"];
m8_151 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = data.ToString() }", span="255-255"];
m8_150 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="254-254"];
m8_159 [cluster="System.DateTime.ToString()", file="JsonTests.cs", label="Entry System.DateTime.ToString()", span="0-0"];
m8_152 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="GenericWithList<DateTime> p = d.Deserialize<GenericWithList<DateTime>>(response)", span="256-256"];
m8_155 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="Assert.AreEqual(DateTimeKind.Utc, p.Items[2].Kind)", span="260-260"];
m8_156 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="Assert.AreEqual(DateTimeKind.Utc, p.Items[3].Kind)", span="261-261"];
m8_157 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", span="239-239"];
m8_171 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="277-277"];
m8_172 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="string doc = CreateJsonWithEmptyValues()", span="279-279"];
m8_173 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="280-280"];
m8_174 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="NullableValues output = json.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="281-281"];
m8_179 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", span="1002-1002"];
m8_175 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Null(output.Id)", span="283-283"];
m8_176 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Null(output.StartDate)", span="284-284"];
m8_177 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Null(output.UniqueId)", span="285-285"];
m8_178 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="277-277"];
m8_0 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", span="38-38"];
m8_1 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="string content = ''{ \''Value\'': 4.8e-04 }''", span="40-40"];
m8_2 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="41-41"];
m8_3 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="DecimalNumber output = json.Deserialize<DecimalNumber>(new RestResponse { Content = content })", span="42-42"];
m8_4 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="decimal expected = decimal.Parse(''4.8e-04'', NumberStyles.Float, CultureInfo.InvariantCulture)", span="43-43"];
m8_5 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="Assert.NotNull(output)", span="45-45"];
m8_6 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="Assert.AreEqual(expected, output.Value)", span="46-46"];
m8_11 [cluster="decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", file="JsonTests.cs", label="Entry decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", span="0-0"];
m8_7 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", span="38-38"];
m8_514 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", span="785-785"];
m8_515 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", file="JsonTests.cs", label="ObjectProperties payload = GetPayLoad<ObjectProperties>(''objectproperty.txt'')", span="787-787"];
m8_516 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", file="JsonTests.cs", label="Assert.AreEqual(42L, payload.ObjectProperty)", span="789-789"];
m8_517 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", span="785-785"];
m8_77 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", span="138-138"];
m8_78 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file="JsonTests.cs", label="string content = ''\''johnsheehan\''''", span="140-140"];
m8_79 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="141-141"];
m8_80 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file="JsonTests.cs", label="List<string> output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="142-142"];
m8_81 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file="JsonTests.cs", label="Assert.True(output.SequenceEqual(new[] { ''johnsheehan'' }))", span="144-144"];
m8_82 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", span="138-138"];
m8_39 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_IEnumerable_of_Simple_Types()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_IEnumerable_of_Simple_Types()", span="84-84"];
m8_40 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_IEnumerable_of_Simple_Types()", file="JsonTests.cs", label="string content = ''{\''numbers\'':[1,2,3,4,5]}''", span="86-86"];
m8_41 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_IEnumerable_of_Simple_Types()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''numbers'' }", span="87-87"];
m8_42 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_IEnumerable_of_Simple_Types()", file="JsonTests.cs", label="var output = json.Deserialize<IEnumerable<int>>(new RestResponse { Content = content })", span="88-88"];
m8_43 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_IEnumerable_of_Simple_Types()", file="JsonTests.cs", label="Assert.IsNotEmpty(output)", span="90-90"];
m8_44 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_IEnumerable_of_Simple_Types()", file="JsonTests.cs", label="Assert.IsTrue(output.Count() == 5)", span="91-91"];
m8_46 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m8_45 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_IEnumerable_of_Simple_Types()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_IEnumerable_of_Simple_Types()", span="84-84"];
m8_476 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", span="727-727"];
m8_477 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="729-729"];
m8_478 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="Assert.NotNull(payload.NullableDateTimeOffsetWithValue)", span="731-731"];
m8_479 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc).ToString(''yyyy-MM-dd HH:mm:ss.fff''),\r\n                \\npayload.NullableDateTimeOffsetWithValue.Value.ToString(''yyyy-MM-dd HH:mm:ss.fff''))", span="732-734"];
m8_462 [cluster="System.DateTimeOffset.ToString(string)", file="JsonTests.cs", label="Entry System.DateTimeOffset.ToString(string)", span="0-0"];
m8_143 [cluster="System.DateTime.ToString(string)", file="JsonTests.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m8_480 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", span="727-727"];
m8_463 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", span="697-697"];
m8_464 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", file="JsonTests.cs", label="Iso8601DateTimeTestStructure payload = GetPayLoad<Iso8601DateTimeTestStructure>(''iso8601datetimes.txt'')", span="699-699"];
m8_465 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2012, 7, 19, 10, 23, 25, DateTimeKind.Utc),\r\n                payload.DateTimeLocal)", span="701-703"];
m8_466 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", span="697-697"];
m8_526 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", span="805-805"];
m8_527 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", file="JsonTests.cs", label="string json = ''\''c02bdd1e-cce3-4b9c-8473-165e6e93b92a\''''", span="807-807"];
m8_528 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = json }", span="808-808"];
m8_529 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="809-809"];
m8_530 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", file="JsonTests.cs", label="Guid result = d.Deserialize<Guid>(response)", span="810-810"];
m8_531 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", file="JsonTests.cs", label="Assert.AreEqual(result, new Guid(''c02bdd1e-cce3-4b9c-8473-165e6e93b92a''))", span="812-812"];
m8_532 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", span="805-805"];
m8_458 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", span="687-687"];
m8_459 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file="JsonTests.cs", label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="689-689"];
m8_460 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc).ToString(''yyyy-MM-dd HH:mm:ss.fff''),\r\n                \\npayload.DateTimeOffset.ToString(''yyyy-MM-dd HH:mm:ss.fff''))", span="691-693"];
m8_461 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", span="687-687"];
m8_380 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", span="570-570"];
m8_381 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="string doc = CreateJson()", span="572-572"];
m8_382 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="573-573"];
m8_383 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="574-574"];
m8_384 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="575-575"];
m8_385 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Assert.Null(p.IgnoreProxy)", span="577-577"];
m8_386 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", span="570-570"];
m8_467 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", span="707-707"];
m8_468 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", file="JsonTests.cs", label="Iso8601DateTimeTestStructure payload = GetPayLoad<Iso8601DateTimeTestStructure>(''iso8601datetimes.txt'')", span="709-709"];
m8_469 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2012, 7, 19, 10, 23, 25, 544, DateTimeKind.Utc),\r\n                payload.DateTimeUtc.ToUniversalTime())", span="711-713"];
m8_471 [cluster="System.DateTime.ToUniversalTime()", file="JsonTests.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m8_470 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", span="707-707"];
m8_350 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", span="526-526"];
m8_351 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="new CultureChange(ALTERNATIVE_CULTURE)", span="528-528"];
m8_352 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="this.Can_Deserialize_Names_With_Underscores_With_Default_Root()", span="530-530"];
m8_353 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", span="526-526"];
m8_432 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", span="637-637"];
m8_433 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", file="JsonTests.cs", label="string doc = CreateUnixDateMillisecondsJson()", span="639-639"];
m8_434 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="640-640"];
m8_435 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="641-641"];
m8_439 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", span="934-934"];
m8_436 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", file="JsonTests.cs", label="Birthdate bd = d.Deserialize<Birthdate>(response)", span="642-642"];
m8_437 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", file="JsonTests.cs", label="Assert.AreEqual(new DateTime(2011, 6, 30, 8, 15, 46, DateTimeKind.Utc), bd.Value)", span="644-644"];
m8_438 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", span="637-637"];
m8_423 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateIsoDateJson()", span="915-915"];
m8_587 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file="JsonTests.cs", label="Birthdate bd = new Birthdate\r\n                           {\r\n                               Value = new DateTime(1910, 9, 25, \\n9, 30, 25, DateTimeKind.Utc)\r\n                           }", span="917-920"];
m8_588 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file="JsonTests.cs", label="return SimpleJson.SerializeObject(bd);", span="922-922"];
m8_590 [cluster="RestSharp.Tests.SampleClasses.Birthdate.Birthdate()", file="JsonTests.cs", label="Entry RestSharp.Tests.SampleClasses.Birthdate.Birthdate()", span="171-171"];
m8_589 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateIsoDateJson()", span="915-915"];
m8_595 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="936-936"];
m8_596 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", file="JsonTests.cs", label="doc[''Value''] = 1309421746000", span="938-938"];
m8_597 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", file="JsonTests.cs", label="return doc.ToString();", span="940-940"];
m8_598 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", span="934-934"];
m8_99 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", span="173-173"];
m8_100 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsondictionary_KeysType.txt''))", span="175-175"];
m8_101 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="176-176"];
m8_102 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="Dictionary<int, object> output =\r\n                json.Deserialize<Dictionary<int, object>>(new RestResponse { Content = doc })", span="177-178"];
m8_103 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="Assert.AreEqual(output.Keys.Count, 2)", span="180-180"];
m8_104 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="object firstKeysVal = output.FirstOrDefault().Value", span="182-182"];
m8_97 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="JsonTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m8_105 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="Assert.IsInstanceOf<IDictionary>(firstKeysVal)", span="184-184"];
m8_106 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", span="173-173"];
m8_507 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", span="774-774"];
m8_508 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file="JsonTests.cs", label="string json = ''{\''Value\'':0.00005557}''", span="776-776"];
m8_509 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = json }", span="777-777"];
m8_510 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="778-778"];
m8_511 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file="JsonTests.cs", label="DecimalNumber result = d.Deserialize<DecimalNumber>(response)", span="779-779"];
m8_512 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file="JsonTests.cs", label="Assert.AreEqual(result.Value, .00005557m)", span="781-781"];
m8_513 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", span="774-774"];
m8_591 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="927-927"];
m8_592 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file="JsonTests.cs", label="doc[''Value''] = 1309421746", span="929-929"];
m8_593 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file="JsonTests.cs", label="return doc.ToString();", span="931-931"];
m8_594 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateUnixDateJson()", span="925-925"];
m8_644 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="1026-1026"];
m8_645 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="doc[''Thing1''] = ''Thing1''", span="1028-1028"];
m8_646 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="doc[''Thing2''] = ''Thing2''", span="1029-1029"];
m8_647 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="doc[''ThingRed''] = ''ThingRed''", span="1030-1030"];
m8_648 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="doc[''ThingBlue''] = ''ThingBlue''", span="1031-1031"];
m8_649 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="return doc.ToString();", span="1033-1033"];
m8_650 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", span="1024-1024"];
m8_416 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", span="615-615"];
m8_417 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file="JsonTests.cs", label="string doc = CreateIsoDateJson()", span="617-617"];
m8_418 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="618-618"];
m8_419 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="619-619"];
m8_420 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file="JsonTests.cs", label="Birthdate bd = d.Deserialize<Birthdate>(response)", span="620-620"];
m8_421 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file="JsonTests.cs", label="Assert.AreEqual(new DateTime(1910, 9, 25, 9, 30, 25, DateTimeKind.Utc), bd.Value)", span="622-622"];
m8_422 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", span="615-615"];
m8_227 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", span="360-360"];
m8_228 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonenums.txt''))", span="362-362"];
m8_229 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = data }", span="363-363"];
m8_230 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="364-364"];
m8_231 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="JsonEnumsTestStructure output = json.Deserialize<JsonEnumsTestStructure>(response)", span="365-365"];
m8_232 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.Friendly, output.Upper)", span="367-367"];
m8_233 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.Friendly, output.Lower)", span="368-368"];
m8_234 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.SoSo, output.CamelCased)", span="369-369"];
m8_235 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.SoSo, output.Underscores)", span="370-370"];
m8_236 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.SoSo, output.LowerUnderscores)", span="371-371"];
m8_237 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.SoSo, output.Dashes)", span="372-372"];
m8_238 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.SoSo, output.LowerDashes)", span="373-373"];
m8_239 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.SoSo, output.Integer)", span="374-374"];
m8_240 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", span="360-360"];
m8_533 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", span="816-816"];
m8_534 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file="JsonTests.cs", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsondictionary_null.txt''))", span="818-818"];
m8_535 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''response'' }", span="819-819"];
m8_536 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file="JsonTests.cs", label="IDictionary<string, object> output = json.Deserialize<Dictionary<string, object>>(new RestResponse { Content = doc })", span="820-820"];
m8_537 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file="JsonTests.cs", label="IDictionary<string, object> dictionary = (IDictionary<string, object>)output[''SomeDictionary'']", span="822-822"];
m8_538 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file="JsonTests.cs", label="Assert.AreEqual(''abra'', dictionary[''NonNull''])", span="823-823"];
m8_539 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file="JsonTests.cs", label="Assert.IsNull(dictionary[''Null''])", span="824-824"];
m8_540 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", span="816-816"];
m8_129 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", span="217-217"];
m8_130 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="DateTime item1 = new DateTime(2010, 2, 8, 11, 11, 11)", span="219-219"];
m8_131 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="DateTime item2 = item1.AddSeconds(12345)", span="220-220"];
m8_133 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="data[''Items''] = new JsonArray\r\n                            {\r\n                                item1.ToString(''u''),\r\n                                \\nitem2.ToString(''u'')\r\n                            }", span="223-227"];
m8_138 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="Assert.AreEqual(item1, p.Items[0])", span="234-234"];
m8_142 [cluster="System.DateTime.AddSeconds(double)", file="JsonTests.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m8_132 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="JsonObject data = new JsonObject()", span="221-221"];
m8_139 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="Assert.AreEqual(item2, p.Items[1])", span="235-235"];
m8_135 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = data.ToString() }", span="230-230"];
m8_134 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="229-229"];
m8_136 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="GenericWithList<DateTime> p = d.Deserialize<GenericWithList<DateTime>>(response)", span="231-231"];
m8_137 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="Assert.AreEqual(2, p.Items.Count)", span="233-233"];
m8_140 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", span="217-217"];
m8_632 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="1004-1004"];
m8_633 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file="JsonTests.cs", label="doc[''Id''] = ''''", span="1006-1006"];
m8_634 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file="JsonTests.cs", label="doc[''StartDate''] = ''''", span="1007-1007"];
m8_635 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file="JsonTests.cs", label="doc[''UniqueId''] = ''''", span="1008-1008"];
m8_636 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file="JsonTests.cs", label="return doc.ToString();", span="1010-1010"];
m8_637 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", span="1002-1002"];
m8_61 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", span="116-116"];
m8_62 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="string content = ''{\''users\'':[\''johnsheehan\'',\''jagregory\'',null,\''drusellers\'',\''structuremap\'']}''", span="118-118"];
m8_63 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''users'' }", span="119-119"];
m8_64 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="List<string> output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="120-120"];
m8_65 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="Assert.IsNotEmpty(output)", span="122-122"];
m8_66 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="Assert.AreEqual(null, output[2])", span="123-123"];
m8_67 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="Assert.AreEqual(5, output.Count)", span="124-124"];
m8_68 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", span="116-116"];
m8_542 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="829-829"];
m8_543 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''name''] = ''John Sheehan''", span="831-831"];
m8_544 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''start_date''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="832-832"];
m8_545 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''age''] = 28", span="833-833"];
m8_546 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''percent''] = 99.9999m", span="834-834"];
m8_547 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''big_number''] = long.MaxValue", span="835-835"];
m8_548 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''is_cool''] = false", span="836-836"];
m8_549 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''ignore''] = ''dummy''", span="837-837"];
m8_550 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''read_only''] = ''dummy''", span="838-838"];
m8_551 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''url''] = ''http://example.com''", span="839-839"];
m8_552 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''url_path''] = ''/foo/bar''", span="840-840"];
m8_553 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''best_friend''] = new JsonObject\r\n                                 {\r\n                                     { ''name'', ''\\nThe Fonz'' },\r\n                                     { ''since'', 1952 }\r\n                                 }", span="841-845"];
m8_559 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''friends''] = friendsArray", span="858-858"];
m8_561 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''foes''] = foesArray", span="866-866"];
m8_562 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="return doc.ToString();", span="868-868"];
m8_554 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="JsonArray friendsArray = new JsonArray()", span="847-847"];
m8_555 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="int i = 0", span="849-849"];
m8_557 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="friendsArray.Add(new JsonObject\r\n                                 {\r\n                                     { ''name'', ''Friend'' + \\ni },\r\n                                     { ''since'', DateTime.Now.Year - i }\r\n                                 })", span="851-855"];
m8_556 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="i < 10", span="849-849"];
m8_558 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="i++", span="849-849"];
m8_564 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m8_560 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="JsonObject foesArray = new JsonObject\r\n                                   {\r\n                                       { ''dict1'', \\nnew JsonObject { { ''nickname'', ''Foe 1'' } } },\r\n                                       { ''dict2'', new JsonObject { { ''nickname'', ''\\nFoe 2'' } } }\r\n                                   }", span="860-864"];
m8_563 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", span="827-827"];
m8_394 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", span="592-592"];
m8_395 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="TimeSpanTestStructure payload = GetPayLoad<TimeSpanTestStructure>(''timespans.txt'')", span="594-594"];
m8_396 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(468006), payload.Tick)", span="596-596"];
m8_397 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(0, 0, 0, 0, 125), payload.Millisecond)", span="597-597"];
m8_398 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(0, 0, 8), payload.Second)", span="598-598"];
m8_399 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(0, 55, 2), payload.Minute)", span="599-599"];
m8_400 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.Hour)", span="600-600"];
m8_401 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.Null(payload.NullableWithoutValue)", span="601-601"];
m8_402 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.NotNull(payload.NullableWithValue)", span="602-602"];
m8_403 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.NullableWithValue.Value)", span="603-603"];
m8_404 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(0, 0, 10), payload.IsoSecond)", span="604-604"];
m8_405 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(0, 3, 23), payload.IsoMinute)", span="605-605"];
m8_406 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(5, 4, 9), payload.IsoHour)", span="606-606"];
m8_407 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(1, 19, 27, 13), payload.IsoDay)", span="607-607"];
m8_408 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(64, 3, 14, 19), payload.IsoMonth)", span="609-609"];
m8_409 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(365, 9, 27, 48), payload.IsoYear)", span="611-611"];
m8_412 [cluster="System.TimeSpan.TimeSpan(long)", file="JsonTests.cs", label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
m8_413 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JsonTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m8_414 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="JsonTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m8_415 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="JsonTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
m8_410 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", span="592-592"];
m8_481 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", span="738-738"];
m8_482 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file="JsonTests.cs", label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="740-740"];
m8_483 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file="JsonTests.cs", label="Assert.Null(payload.NullableDateTimeOffsetWithNull)", span="742-742"];
m8_484 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", span="738-738"];
m8_55 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", span="106-106"];
m8_56 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="string content = ''{\''users\'':[\''johnsheehan\'',\''jagregory\'',\''drusellers\'',\''structuremap\'']}''", span="108-108"];
m8_57 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''users'' }", span="109-109"];
m8_58 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="List<string> output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="110-110"];
m8_59 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="Assert.IsNotEmpty(output)", span="112-112"];
m8_60 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", span="106-106"];
m8_14 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", span="50-50"];
m8_15 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="string content = ''{\''one\'':\''oneOneOne\'', \''two\'':\''twoTwoTwo\'', \''three\'':3}''", span="52-52"];
m8_16 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="53-53"];
m8_17 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="SimpleStruct output = json.Deserialize<SimpleStruct>(new RestResponse { Content = content })", span="54-54"];
m8_18 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="Assert.NotNull(output)", span="56-56"];
m8_19 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="Assert.AreEqual(''oneOneOne'', output.One)", span="57-57"];
m8_20 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="Assert.AreEqual(''twoTwoTwo'', output.Two)", span="58-58"];
m8_21 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="Assert.AreEqual(3, output.Three)", span="59-59"];
m8_22 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", span="50-50"];
m8_565 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="873-873"];
m8_566 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''name''] = ''John Sheehan''", span="875-875"];
m8_567 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''start-date''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="876-876"];
m8_568 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''age''] = 28", span="877-877"];
m8_569 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''percent''] = 99.9999m", span="878-878"];
m8_570 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''big-number''] = long.MaxValue", span="879-879"];
m8_571 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''is-cool''] = false", span="880-880"];
m8_572 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''ignore''] = ''dummy''", span="881-881"];
m8_573 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''read-only''] = ''dummy''", span="882-882"];
m8_574 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''url''] = ''http://example.com''", span="883-883"];
m8_575 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''url-path''] = ''/foo/bar''", span="884-884"];
m8_576 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''best-friend''] = new JsonObject\r\n                                 {\r\n                                     { ''name'', ''\\nThe Fonz'' },\r\n                                     { ''since'', 1952 }\r\n                                 }", span="885-889"];
m8_582 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''friends''] = friendsArray", span="902-902"];
m8_584 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''foes''] = foesArray", span="910-910"];
m8_585 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="return doc.ToString();", span="912-912"];
m8_577 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="JsonArray friendsArray = new JsonArray()", span="891-891"];
m8_578 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="int i = 0", span="893-893"];
m8_580 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="friendsArray.Add(new JsonObject\r\n                                 {\r\n                                     { ''name'', ''Friend'' + \\ni },\r\n                                     { ''since'', DateTime.Now.Year - i }\r\n                                 })", span="895-899"];
m8_579 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="i < 10", span="893-893"];
m8_581 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="i++", span="893-893"];
m8_583 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="JsonObject foesArray = new JsonObject\r\n                                   {\r\n                                       { ''dict1'', \\nnew JsonObject { { ''nickname'', ''Foe 1'' } } },\r\n                                       { ''dict2'', new JsonObject { { ''nickname'', ''\\nFoe 2'' } } }\r\n                                   }", span="904-908"];
m8_586 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithDashes()", span="871-871"];
m8_472 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", span="717-717"];
m8_473 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", file="JsonTests.cs", label="Iso8601DateTimeTestStructure payload = GetPayLoad<Iso8601DateTimeTestStructure>(''iso8601datetimes.txt'')", span="719-719"];
m8_474 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2012, 7, 19, 10, 23, 25, 544, DateTimeKind.Utc),\r\n                payload.DateTimeWithOffset.ToUniversalTime())", span="721-723"];
m8_475 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", span="717-717"];
m8_107 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", span="188-188"];
m8_108 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''GenericWithList.txt''))", span="190-190"];
m8_109 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="191-191"];
m8_110 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="Generic<GenericWithList<Foe>> output =\r\n                json.Deserialize<Generic<GenericWithList<Foe>>>(new RestResponse { Content = \\ndoc })", span="192-193"];
m8_111 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="Assert.AreEqual(''Foe sho'', output.Data.Items[0].Nickname)", span="195-195"];
m8_112 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", span="188-188"];
m8_658 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file="JsonTests.cs", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', fileName))", span="1062-1062"];
m8_659 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="1063-1063"];
m8_660 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="1064-1064"];
m8_661 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file="JsonTests.cs", label="return d.Deserialize<T>(response);", span="1066-1066"];
m8_662 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", span="1060-1060"];
m8_69 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", span="128-128"];
m8_70 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file="JsonTests.cs", label="string content = ''{\''users\'':\''johnsheehan\''}''", span="130-130"];
m8_71 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''users'' }", span="131-131"];
m8_72 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file="JsonTests.cs", label="List<string> output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="132-132"];
m8_73 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file="JsonTests.cs", label="Assert.True(output.SequenceEqual(new[] { ''johnsheehan'' }))", span="134-134"];
m8_74 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", span="128-128"];
m8_518 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", span="793-793"];
m8_519 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsondictionary.txt''))", span="795-795"];
m8_520 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''response'' }", span="796-796"];
m8_521 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="EmployeeTracker output = json.Deserialize<EmployeeTracker>(new RestResponse { Content = doc })", span="797-797"];
m8_522 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="Assert.IsNotEmpty(output.EmployeesMail)", span="799-799"];
m8_523 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="Assert.IsNotEmpty(output.EmployeesTime)", span="800-800"];
m8_524 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="Assert.IsNotEmpty(output.EmployeesPay)", span="801-801"];
m8_525 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", span="793-793"];
m8_220 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", span="349-349"];
m8_221 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file="JsonTests.cs", label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonarray.txt''))", span="351-351"];
m8_222 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = data }", span="352-352"];
m8_223 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="353-353"];
m8_224 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file="JsonTests.cs", label="StatusList output = json.Deserialize<StatusList>(response)", span="354-354"];
m8_225 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file="JsonTests.cs", label="Assert.AreEqual(4, output.Count)", span="356-356"];
m8_226 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", span="349-349"];
m8_89 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", span="158-158"];
m8_90 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsondictionary.txt''))", span="160-160"];
m8_91 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="161-161"];
m8_92 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="Dictionary<string, object> output =\r\n                json.Deserialize<Dictionary<string, object>>(new RestResponse { Content = \\ndoc })", span="162-163"];
m8_93 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="Assert.AreEqual(output.Keys.Count, 3)", span="165-165"];
m8_94 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="object firstKeysVal = output.FirstOrDefault().Value", span="167-167"];
m8_95 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="Assert.IsInstanceOf<IDictionary>(firstKeysVal)", span="169-169"];
m8_96 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", span="158-158"];
m8_599 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="945-945"];
m8_600 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Name''] = ''John Sheehan''", span="947-947"];
m8_601 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''StartDate''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="948-948"];
m8_602 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Age''] = 28", span="949-949"];
m8_603 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Percent''] = 99.9999m", span="950-950"];
m8_604 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''BigNumber''] = long.MaxValue", span="951-951"];
m8_605 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''IsCool''] = false", span="952-952"];
m8_606 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Ignore''] = ''dummy''", span="953-953"];
m8_607 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''ReadOnly''] = ''dummy''", span="954-954"];
m8_608 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Url''] = ''http://example.com''", span="955-955"];
m8_609 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''UrlPath''] = ''/foo/bar''", span="956-956"];
m8_610 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Order''] = ''third''", span="957-957"];
m8_611 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Disposition''] = ''so_so''", span="958-958"];
m8_612 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Guid''] = new Guid(GUID_STRING).ToString()", span="959-959"];
m8_613 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''EmptyGuid''] = ''''", span="960-960"];
m8_614 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''BestFriend''] = new JsonObject\r\n                                {\r\n                                    { ''Name'', ''The \\nFonz'' },\r\n                                    { ''Since'', 1952 }\r\n                                }", span="961-965"];
m8_620 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Friends''] = friendsArray", span="978-978"];
m8_622 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Foes''] = foesArray", span="986-986"];
m8_623 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="return doc.ToString();", span="988-988"];
m8_615 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="JsonArray friendsArray = new JsonArray()", span="967-967"];
m8_616 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="int i = 0", span="969-969"];
m8_618 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="friendsArray.Add(new JsonObject\r\n                                 {\r\n                                     { ''Name'', ''Friend'' + \\ni },\r\n                                     { ''Since'', DateTime.Now.Year - i }\r\n                                 })", span="971-975"];
m8_617 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="i < 10", span="969-969"];
m8_619 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="i++", span="969-969"];
m8_621 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="JsonObject foesArray = new JsonObject\r\n                                   {\r\n                                       { ''dict1'', \\nnew JsonObject { { ''nickname'', ''Foe 1'' } } },\r\n                                       { ''dict2'', new JsonObject { { ''nickname'', ''\\nFoe 2'' } } }\r\n                                   }", span="980-984"];
m8_624 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJson()", span="943-943"];
m8_449 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", span="668-668"];
m8_450 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="670-670"];
m8_451 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="Assert.NotNull(payload.NullableDateTimeWithValue)", span="672-672"];
m8_452 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc),\r\n                payload.NullableDateTimeWithValue.Value)", span="673-675"];
m8_453 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", span="668-668"];
m8_32 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", span="74-74"];
m8_33 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''4sq.txt''))", span="76-76"];
m8_34 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''response'' }", span="77-77"];
m8_35 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="VenuesResponse output = json.Deserialize<VenuesResponse>(new RestResponse { Content = doc })", span="78-78"];
m8_36 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="Assert.IsNotEmpty(output.Groups)", span="80-80"];
m8_37 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", span="74-74"];
m8_651 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="1038-1038"];
m8_652 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="doc[''Thing1''] = new JsonArray\r\n                            {\r\n                                ''Value1'',\r\n                                ''\\nValue2''\r\n                            }", span="1040-1044"];
m8_653 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="doc[''Thing2''] = ''Thing2''", span="1045-1045"];
m8_654 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="doc[''ThingRed''] = new JsonObject\r\n                              {\r\n                                  { ''Name'', ''ThingRed'' },\r\n                                  { ''\\nColor'', ''Red'' }\r\n                              }", span="1046-1050"];
m8_655 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="doc[''ThingBlue''] = new JsonObject\r\n                               {\r\n                                   { ''Name'', ''ThingBlue'' },\r\n                                   { ''\\nColor'', ''Blue'' }\r\n                               }", span="1051-1055"];
m8_656 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="return doc.ToString();", span="1057-1057"];
m8_657 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", span="1036-1036"];
m8_626 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="993-993"];
m8_627 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="doc[''Id''] = null", span="995-995"];
m8_628 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="doc[''StartDate''] = null", span="996-996"];
m8_629 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="doc[''UniqueId''] = null", span="997-997"];
m8_630 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="return doc.ToString();", span="999-999"];
m8_631 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", span="991-991"];
m10_78 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteTaskAsync()", file="MultipartFormDataTests.cs", label="Entry RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteTaskAsync()", span="164-164"];
m10_55 [cluster="lambda expression", file="MultipartFormDataTests.cs", label="Exit lambda expression", span="112-116"];
m10_76 [cluster="RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="MultipartFormDataTests.cs", label="Entry RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="427-427"];
m10_52 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_Execute()", color=green, community=0, file="MultipartFormDataTests.cs", label="IRestResponse response = _client.Execute(request)", prediction=41, span="126-126"];
m10_109 [cluster="System.Threading.EventWaitHandle.Set()", file="MultipartFormDataTests.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m10_59 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteTaskAsync()", color=green, community=1, file="MultipartFormDataTests.cs", label="var request = new RestRequest(''?json_route=/posts'')\r\n            {\r\n                AlwaysMultipartFormData = true,\r\n                \\nMethod = Method.POST,\r\n            }", prediction=42, span="134-138"];
m10_13 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile_Async()", color=green, community=0, file="MultipartFormDataTests.cs", label="var response = await _client.ExecuteTaskAsync(request)", prediction=43, span="61-61"];
m10_14 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile_Async()", color=green, community=0, file="MultipartFormDataTests.cs", label="Assert.AreEqual(_expectedFileAndBodyRequestContent, response.Content)", prediction=44, span="62-62"];
m10_75 [cluster="RestSharp.RestRequest.RestRequest(string)", file="MultipartFormDataTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string)", span="94-94"];
m10_87 [cluster="lambda expression", file="MultipartFormDataTests.cs", label="Entry lambda expression", span="180-180"];
m10_86 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteTaskAsync()", file="MultipartFormDataTests.cs", label="Exit RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteTaskAsync()", span="164-164"];
m10_23 [cluster="System.Threading.Tasks.Task.Wait()", file="MultipartFormDataTests.cs", label="Entry System.Threading.Tasks.Task.Wait()", span="0-0"];
m10_60 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteTaskAsync()", color=green, community=0, file="MultipartFormDataTests.cs", label="request.AddParameter(''title'', ''test'', ParameterType.RequestBody)", prediction=45, span="140-140"];
m10_61 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteTaskAsync()", color=green, community=0, file="MultipartFormDataTests.cs", label="var response = await _client.ExecuteTaskAsync(request)", prediction=46, span="142-142"];
m10_15 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file="MultipartFormDataTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", span="101-101"];
m10_62 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteTaskAsync()", color=green, community=0, file="MultipartFormDataTests.cs", label="Assert.Null(response.ErrorException)", prediction=47, span="143-143"];
m10_50 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AddParameters(RestSharp.IRestRequest)", file="MultipartFormDataTests.cs", label="Entry RestSharp.IntegrationTests.MultipartFormDataTests.AddParameters(RestSharp.IRestRequest)", span="228-228"];
m10_90 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteAsync()", file="MultipartFormDataTests.cs", label="Entry RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteAsync()", span="187-187"];
m10_65 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteAsync()", color=green, community=1, file="MultipartFormDataTests.cs", label="RestRequest request = new RestRequest(''?json_route=/posts'')\r\n            {\r\n                AlwaysMultipartFormData = true,\r\n                \\nMethod = Method.POST,\r\n            }", prediction=48, span="149-153"];
m10_102 [cluster="System.Threading.AutoResetEvent.AutoResetEvent(bool)", file="MultipartFormDataTests.cs", label="Entry System.Threading.AutoResetEvent.AutoResetEvent(bool)", span="0-0"];
m10_103 [cluster="RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse>)", file="MultipartFormDataTests.cs", label="Entry RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse>)", span="17-17"];
m10_105 [cluster="lambda expression", file="MultipartFormDataTests.cs", label="Entry lambda expression", span="206-210"];
m10_104 [cluster="System.Threading.WaitHandle.WaitOne()", file="MultipartFormDataTests.cs", label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
m10_101 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteAsync()", file="MultipartFormDataTests.cs", label="Exit RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteAsync()", span="187-187"];
m10_66 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteAsync()", color=green, community=0, file="MultipartFormDataTests.cs", label="request.AddParameter(''title'', ''test'', ParameterType.RequestBody)", prediction=49, span="155-155"];
m10_69 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteAsync()", color=green, community=1, file="MultipartFormDataTests.cs", label="_client.ExecuteAsync(request, response =>\r\n                {\r\n                    syncResponse = response;\r\n                    \\neventWaitHandle.Set();\r\n                })", prediction=50, span="161-165"];
m10_57 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData()", file="MultipartFormDataTests.cs", label="Entry RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData()", span="121-121"];
m10_67 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteAsync()", color=green, community=0, file="MultipartFormDataTests.cs", label="IRestResponse syncResponse = null", prediction=51, span="157-157"];
m10_70 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteAsync()", color=green, community=0, file="MultipartFormDataTests.cs", label="eventWaitHandle.WaitOne()", prediction=52, span="167-167"];
m10_71 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteAsync()", color=green, community=0, file="MultipartFormDataTests.cs", label="Assert.Null(syncResponse.ErrorException)", prediction=50, span="170-170"];
m10_68 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_ExecuteAsync()", color=green, community=0, file="MultipartFormDataTests.cs", label="AutoResetEvent eventWaitHandle = new AutoResetEvent(false)", prediction=52, span="159-159"];
m10_0 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile_Async()", file="MultipartFormDataTests.cs", label="Entry RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile_Async()", span="34-34"];
m10_17 [cluster="System.IO.Directory.GetParent(string)", file="MultipartFormDataTests.cs", label="Entry System.IO.Directory.GetParent(string)", span="0-0"];
m10_16 [cluster="System.IO.Directory.GetCurrentDirectory()", file="MultipartFormDataTests.cs", label="Entry System.IO.Directory.GetCurrentDirectory()", span="0-0"];
m10_18 [cluster="System.IO.Path.Combine(string, string)", file="MultipartFormDataTests.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m10_19 [cluster="RestSharp.RestRequest.AddFile(string, string, string)", file="MultipartFormDataTests.cs", label="Entry RestSharp.RestRequest.AddFile(string, string, string)", span="134-134"];
m10_20 [cluster="RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", file="MultipartFormDataTests.cs", label="Entry RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", span="449-449"];
m10_12 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile_Async()", color=green, community=0, file="MultipartFormDataTests.cs", label="request.AddParameter(''controlName'', ''test'', ''application/json'', ParameterType.RequestBody)", prediction=55, span="59-59"];
m10_24 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile()", color=green, community=0, file="MultipartFormDataTests.cs", label="string path = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, ''Assets\\TestFile.txt'')", prediction=56, span="73-73"];
m10_28 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile()", file="MultipartFormDataTests.cs", label="Entry RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile()", span="69-69"];
m10_42 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormDataAsync()", file="MultipartFormDataTests.cs", label="Entry RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormDataAsync()", span="98-98"];
m10_32 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormDataAsync()", color=green, community=1, file="MultipartFormDataTests.cs", label="RestRequest request = new RestRequest(''/'', Method.POST)\r\n            {\r\n                AlwaysMultipartFormData = true\r\n            }", prediction=44, span="86-89"];
m10_49 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormDataAsync()", file="MultipartFormDataTests.cs", label="Exit RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormDataAsync()", span="98-98"];
m10_33 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormDataAsync()", color=green, community=0, file="MultipartFormDataTests.cs", label="AddParameters(request)", prediction=58, span="91-91"];
m10_34 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormDataAsync()", color=green, community=1, file="MultipartFormDataTests.cs", label="_client.ExecuteAsync(request, (restResponse, handle) =>\r\n            {\r\n                Console.WriteLine(restResponse.Content);\r\n                \\nAssert.AreEqual(this._expected, restResponse.Content);\r\n            })", prediction=44, span="93-97"];
m10_25 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile()", color=green, community=0, file="MultipartFormDataTests.cs", label="request.AddFile(''fileName'', path)", prediction=60, span="74-74"];
m10_26 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile()", color=green, community=0, file="MultipartFormDataTests.cs", label="request.AddParameter(''controlName'', ''test'', ''application/json'', ParameterType.RequestBody)", prediction=60, span="76-76"];
m10_118 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AddParameters(RestSharp.IRestRequest)", file="MultipartFormDataTests.cs", label="request.AddParameter(''foo'', ''bar'')", span="230-230"];
m10_119 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AddParameters(RestSharp.IRestRequest)", file="MultipartFormDataTests.cs", label="request.AddParameter(''a name with spaces'', ''somedata'')", span="231-231"];
m10_121 [cluster="RestSharp.IRestRequest.AddParameter(string, object)", file="MultipartFormDataTests.cs", label="Entry RestSharp.IRestRequest.AddParameter(string, object)", span="247-247"];
m10_120 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AddParameters(RestSharp.IRestRequest)", file="MultipartFormDataTests.cs", label="Exit RestSharp.IntegrationTests.MultipartFormDataTests.AddParameters(RestSharp.IRestRequest)", span="228-228"];
m10_40 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile()", file="MultipartFormDataTests.cs", label="Exit RestSharp.IntegrationTests.MultipartFormDataTests.MultipartFormData_WithParameterAndFile()", span="69-69"];
m10_56 [cluster="System.Console.WriteLine(string)", file="MultipartFormDataTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m10_74 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_Execute()", file="MultipartFormDataTests.cs", label="Exit RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_Execute()", span="142-142"];
m10_53 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.AlwaysMultipartFormData_WithParameter_Execute()", color=green, community=0, file="MultipartFormDataTests.cs", label="Assert.Null(response.ErrorException)", prediction=62, span="128-128"];
m10_110 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.EchoHandler(System.Net.HttpListenerContext)", file="MultipartFormDataTests.cs", label="Entry RestSharp.IntegrationTests.MultipartFormDataTests.EchoHandler(System.Net.HttpListenerContext)", span="219-219"];
m10_111 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.EchoHandler(System.Net.HttpListenerContext)", file="MultipartFormDataTests.cs", label="obj.Response.StatusCode = 200", span="221-221"];
m10_112 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.EchoHandler(System.Net.HttpListenerContext)", file="MultipartFormDataTests.cs", label="StreamReader streamReader = new StreamReader(obj.Request.InputStream)", span="223-223"];
m10_113 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.EchoHandler(System.Net.HttpListenerContext)", file="MultipartFormDataTests.cs", label="obj.Response.OutputStream.WriteStringUtf8(streamReader.ReadToEnd())", span="225-225"];
m10_115 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="MultipartFormDataTests.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m10_117 [cluster="System.IO.Stream.WriteStringUtf8(string)", file="MultipartFormDataTests.cs", label="Entry System.IO.Stream.WriteStringUtf8(string)", span="7-7"];
m10_116 [cluster="System.IO.StreamReader.ReadToEnd()", file="MultipartFormDataTests.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m10_114 [cluster="RestSharp.IntegrationTests.MultipartFormDataTests.EchoHandler(System.Net.HttpListenerContext)", file="MultipartFormDataTests.cs", label="Exit RestSharp.IntegrationTests.MultipartFormDataTests.EchoHandler(System.Net.HttpListenerContext)", span="219-219"];
m10_89 [cluster="lambda expression", file="MultipartFormDataTests.cs", label="Exit lambda expression", span="180-180"];
m10_108 [cluster="lambda expression", file="MultipartFormDataTests.cs", label="Exit lambda expression", span="206-210"];
m11_72 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", file="NonProtocolExceptionHandlingTests.cs", label="Entry RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", span="137-137"];
m11_73 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", file="NonProtocolExceptionHandlingTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="139-139"];
m11_74 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", file="NonProtocolExceptionHandlingTests.cs", label="SimpleServer.Create(baseUrl, TimeoutHandler)", span="141-141"];
m11_75 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", file="NonProtocolExceptionHandlingTests.cs", label="RestClient client = new RestClient(baseUrl)", span="143-143"];
m11_23 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", file="NonProtocolExceptionHandlingTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="58-58"];
m11_32 [cluster="RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", file="NonProtocolExceptionHandlingTests.cs", label="Entry RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", span="21-21"];
m11_76 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", file="NonProtocolExceptionHandlingTests.cs", label="RestRequest request = new RestRequest(''404'') { Timeout = 500 }", span="144-144"];
m11_77 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", file="NonProtocolExceptionHandlingTests.cs", label="IRestResponse<Response> response = client.Execute<Response>(request)", span="145-145"];
m11_6 [cluster="RestSharp.RestClient.RestClient(string)", file="NonProtocolExceptionHandlingTests.cs", label="Entry RestSharp.RestClient.RestClient(string)", span="174-174"];
m11_7 [cluster="RestSharp.RestRequest.RestRequest(string)", file="NonProtocolExceptionHandlingTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string)", span="94-94"];
m11_78 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.Null(response.Data)", span="147-147"];
m11_79 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.NotNull(response.ErrorException)", span="148-148"];
m11_80 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.IsInstanceOf<WebException>(response.ErrorException)", span="149-149"];
m11_81 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.AreEqual(response.ResponseStatus, ResponseStatus.TimedOut)", span="150-150"];
m11_82 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", file="NonProtocolExceptionHandlingTests.cs", label="Exit RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_With_Deserializer()", span="137-137"];
m11_84 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.TimeoutHandler(System.Net.HttpListenerContext)", file="NonProtocolExceptionHandlingTests.cs", label="Entry RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.TimeoutHandler(System.Net.HttpListenerContext)", span="158-158"];
m11_85 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.TimeoutHandler(System.Net.HttpListenerContext)", file="NonProtocolExceptionHandlingTests.cs", label="Thread.Sleep(101000)", span="160-160"];
m11_87 [cluster="System.Threading.Thread.Sleep(int)", file="NonProtocolExceptionHandlingTests.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m11_86 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.TimeoutHandler(System.Net.HttpListenerContext)", file="NonProtocolExceptionHandlingTests.cs", label="Exit RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.TimeoutHandler(System.Net.HttpListenerContext)", span="158-158"];
m11_0 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="Entry RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Non_Existent_Domain()", span="16-16"];
m11_1 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="RestClient client = new RestClient(''http://nonexistantdomainimguessing.org'')", span="18-18"];
m11_2 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="RestRequest request = new RestRequest(''foo'')", span="19-19"];
m11_3 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="IRestResponse response = client.Execute(request)", span="20-20"];
m11_4 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.AreEqual(ResponseStatus.Error, response.ResponseStatus)", span="22-22"];
m11_5 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="Exit RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Non_Existent_Domain()", span="16-16"];
m11_10 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Task_Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="Entry RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Task_Handles_Non_Existent_Domain()", span="31-31"];
m11_11 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Task_Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="RestClient client = new RestClient(''http://192.168.1.200:8001'')", span="33-33"];
m11_12 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Task_Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="RestRequest request = new RestRequest(''/'')\r\n                                  {\r\n                                      RequestFormat = \\nDataFormat.Json,\r\n                                      Method = Method.GET\r\n                                  }", span="34-38"];
m11_16 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Task_Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.IsInstanceOf<WebException>(response.ErrorException)", span="45-45"];
m11_17 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Task_Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.AreEqual(WebExceptionStatus.ConnectFailure, ((WebException)response.ErrorException).Status)", span="46-46"];
m11_18 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Task_Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.AreEqual(ResponseStatus.Error, response.ResponseStatus)", span="47-47"];
m11_21 [cluster="System.Threading.Tasks.Task.Wait()", file="NonProtocolExceptionHandlingTests.cs", label="Entry System.Threading.Tasks.Task.Wait()", span="0-0"];
m11_19 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Task_Handles_Non_Existent_Domain()", file="NonProtocolExceptionHandlingTests.cs", label="Exit RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Task_Handles_Non_Existent_Domain()", span="31-31"];
m11_57 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="Entry RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", span="108-108"];
m11_58 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="110-110"];
m11_59 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="SimpleServer.Create(baseUrl, TimeoutHandler)", span="112-112"];
m11_60 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="RestClient client = new RestClient(baseUrl)", span="114-114"];
m11_61 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="RestRequest request = new RestRequest(''404'') { Timeout = 500 }", span="115-115"];
m11_62 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="Task<IRestResponse> task = client.ExecuteTaskAsync(request)", span="116-116"];
m11_63 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="task.Wait()", span="118-118"];
m11_64 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="IRestResponse response = task.Result", span="120-120"];
m11_65 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.NotNull(response)", span="122-122"];
m11_66 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.AreEqual(response.ResponseStatus, ResponseStatus.TimedOut)", span="123-123"];
m11_67 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.NotNull(response.ErrorException)", span="125-125"];
m11_68 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.IsInstanceOf<WebException>(response.ErrorException)", span="126-126"];
m11_69 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.AreEqual(response.ErrorException.Message, ''The request timed-out.'')", span="127-127"];
m11_70 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", file="NonProtocolExceptionHandlingTests.cs", label="Exit RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_AsyncTask()", span="108-108"];
m11_22 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", file="NonProtocolExceptionHandlingTests.cs", label="Entry RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", span="56-56"];
m11_24 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", file="NonProtocolExceptionHandlingTests.cs", label="SimpleServer.Create(baseUrl, TimeoutHandler)", span="60-60"];
m11_25 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", file="NonProtocolExceptionHandlingTests.cs", label="RestClient client = new RestClient(baseUrl)", span="62-62"];
m11_26 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", file="NonProtocolExceptionHandlingTests.cs", label="RestRequest request = new RestRequest(''404'')\r\n                                      {\r\n                                          \\nTimeout = 500\r\n                                      }", span="63-66"];
m11_27 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", file="NonProtocolExceptionHandlingTests.cs", label="IRestResponse response = client.Execute(request)", span="67-67"];
m11_28 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.NotNull(response.ErrorException)", span="69-69"];
m11_29 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.IsInstanceOf<WebException>(response.ErrorException)", span="70-70"];
m11_30 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.AreEqual(ResponseStatus.TimedOut, response.ResponseStatus)", span="71-71"];
m11_31 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", file="NonProtocolExceptionHandlingTests.cs", label="Exit RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error()", span="56-56"];
m11_34 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="Entry RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", span="76-76"];
m11_35 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="string baseUrl = ''http://localhost:8888/''", span="78-78"];
m11_36 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="ManualResetEvent resetEvent = new ManualResetEvent(false)", span="80-80"];
m11_37 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="SimpleServer.Create(baseUrl, TimeoutHandler)", span="82-82"];
m11_38 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="RestClient client = new RestClient(baseUrl)", span="84-84"];
m11_49 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="NonProtocolExceptionHandlingTests.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m11_41 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="client.ExecuteAsync(request, responseCb =>\r\n                                             {\r\n                                                 \\nresponse = responseCb;\r\n                                                 resetEvent.Set();\r\n                                             })", span="91-95"];
m11_42 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="resetEvent.WaitOne()", span="97-97"];
m11_54 [cluster="lambda expression", file="NonProtocolExceptionHandlingTests.cs", label="resetEvent.Set()", span="94-94"];
m11_39 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="RestRequest request = new RestRequest(''404'')\r\n                                      {\r\n                                          \\nTimeout = 500\r\n                                      }", span="85-88"];
m11_40 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="IRestResponse response = null", span="89-89"];
m11_50 [cluster="RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse>)", file="NonProtocolExceptionHandlingTests.cs", label="Entry RestSharp.IRestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse>)", span="17-17"];
m11_43 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.NotNull(response)", span="99-99"];
m11_44 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.AreEqual(response.ResponseStatus, ResponseStatus.TimedOut)", span="100-100"];
m11_45 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.NotNull(response.ErrorException)", span="101-101"];
m11_46 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.IsInstanceOf<WebException>(response.ErrorException)", span="102-102"];
m11_47 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="Assert.AreEqual(response.ErrorException.Message, ''The request timed-out.'')", span="103-103"];
m11_52 [cluster="lambda expression", file="NonProtocolExceptionHandlingTests.cs", label="Entry lambda expression", span="91-95"];
m11_51 [cluster="System.Threading.WaitHandle.WaitOne()", file="NonProtocolExceptionHandlingTests.cs", label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
m11_48 [cluster="RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", file="NonProtocolExceptionHandlingTests.cs", label="Exit RestSharp.IntegrationTests.NonProtocolExceptionHandlingTests.Handles_Server_Timeout_Error_Async()", span="76-76"];
m11_53 [cluster="lambda expression", file="NonProtocolExceptionHandlingTests.cs", label="response = responseCb", span="93-93"];
m11_55 [cluster="lambda expression", file="NonProtocolExceptionHandlingTests.cs", label="Exit lambda expression", span="91-95"];
m11_56 [cluster="System.Threading.EventWaitHandle.Set()", file="NonProtocolExceptionHandlingTests.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m12_7 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", span="41-41"];
m12_8 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", file="NuSpecUpdateTask.cs", label="Build.NuSpecUpdateTask task = new Build.NuSpecUpdateTask()", span="43-43"];
m12_9 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", file="NuSpecUpdateTask.cs", label="Assert.False(task.Execute())", span="45-45"];
m12_11 [cluster="RestSharp.Build.NuSpecUpdateTask.NuSpecUpdateTask()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Build.NuSpecUpdateTask.NuSpecUpdateTask()", span="25-25"];
m12_10 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", span="41-41"];
m12_12 [cluster="RestSharp.Build.NuSpecUpdateTask.Execute()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Build.NuSpecUpdateTask.Execute()", span="32-32"];
m12_14 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.Setup()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.Setup()", span="52-52"];
m12_15 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.Setup()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.Setup()", span="52-52"];
m12_27 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.ReturnsTrue()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.ReturnsTrue()", span="98-98"];
m12_28 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.ReturnsTrue()", file="NuSpecUpdateTask.cs", label="Assert.True(this.result)", span="100-100"];
m12_29 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.ReturnsTrue()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.ReturnsTrue()", span="98-98"];
m12_5 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.Setup()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.Setup()", span="32-32"];
m12_6 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.Setup()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.Setup()", span="32-32"];
m12_22 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", span="90-90"];
m12_37 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsVersionFromAssemblyInfo()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsVersionFromAssemblyInfo()", span="116-116"];
m12_38 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsVersionFromAssemblyInfo()", file="NuSpecUpdateTask.cs", label="Assert.True(this.expectedVersion.IsMatch(this.subject.Version))", span="118-118"];
m12_39 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsVersionFromAssemblyInfo()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsVersionFromAssemblyInfo()", span="116-116"];
m12_40 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", file="NuSpecUpdateTask.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
m12_31 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsIdFromAssembly()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsIdFromAssembly()", span="104-104"];
m12_32 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsIdFromAssembly()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(EXPECTED_ID, this.subject.Id)", span="106-106"];
m12_33 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsIdFromAssembly()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsIdFromAssembly()", span="104-104"];
m12_34 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsDescriptionFromAssembly()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsDescriptionFromAssembly()", span="110-110"];
m12_35 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsDescriptionFromAssembly()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(EXPECTED_DESCRIPTION, this.subject.Description)", span="112-112"];
m12_36 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsDescriptionFromAssembly()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsDescriptionFromAssembly()", span="110-110"];
m12_23 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", file="NuSpecUpdateTask.cs", label="this.subject.SpecFile = FileName", span="92-92"];
m12_24 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", file="NuSpecUpdateTask.cs", label="this.subject.SourceAssemblyFile = ''RestSharp.dll''", span="93-93"];
m12_25 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", file="NuSpecUpdateTask.cs", label="this.result = this.subject.Execute()", span="94-94"];
m12_26 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", span="90-90"];
m12_16 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", span="55-55"];
m12_18 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", file="NuSpecUpdateTask.cs", label="task.Execute()", span="63-63"];
m12_19 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(''1.0.0.0'', task.Version)", span="65-65"];
m12_20 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", span="55-55"];
m12_0 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", span="26-26"];
m12_1 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", file="NuSpecUpdateTask.cs", label="this.FileName = Path.Combine(''SampleData'', ''restsharp.nuspec'')", span="28-28"];
m12_4 [cluster="System.IO.Path.Combine(string, string)", file="NuSpecUpdateTask.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m12_2 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", file="NuSpecUpdateTask.cs", label="this.Setup()", span="29-29"];
m12_3 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", span="26-26"];
m12_44 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", span="128-128"];
m12_45 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="XDocument doc = XDocument.Load(ComputedFileName)", span="130-130"];
m12_46 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(EXPECTED_ID, doc.Descendants(''id'').First().Value)", span="132-132"];
m12_47 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(EXPECTED_DESCRIPTION, doc.Descendants(''description'').First().Value)", span="133-133"];
m12_48 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(EXPECTED_AUTHORS, doc.Descendants(''authors'').First().Value)", span="134-134"];
m12_49 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(EXPECTED_OWNERS, doc.Descendants(''owners'').First().Value)", span="135-135"];
m12_50 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="Assert.True(this.expectedVersion.IsMatch(doc.Descendants(''version'').First().Value))", span="136-136"];
m12_51 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", span="128-128"];
m12_41 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsAuthorsFromAssemblyInfo()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsAuthorsFromAssemblyInfo()", span="122-122"];
m12_42 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsAuthorsFromAssemblyInfo()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(EXPECTED_AUTHORS, this.subject.Authors)", span="124-124"];
m12_43 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsAuthorsFromAssemblyInfo()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsAuthorsFromAssemblyInfo()", span="122-122"];
m13_15 [cluster="RestSharp.Tests.OAuthTests.HmacSha256_Hashes_Correctly(string, string)", file="OAuthTests.cs", label="Entry RestSharp.Tests.OAuthTests.HmacSha256_Hashes_Correctly(string, string)", span="51-51"];
m13_16 [cluster="RestSharp.Tests.OAuthTests.HmacSha256_Hashes_Correctly(string, string)", file="OAuthTests.cs", label="string consumerSecret = ''12345678''", span="53-53"];
m13_17 [cluster="RestSharp.Tests.OAuthTests.HmacSha256_Hashes_Correctly(string, string)", file="OAuthTests.cs", label="string actual = OAuthTools.GetSignature(OAuthSignatureMethod.HmacSha256, value, consumerSecret)", span="54-54"];
m13_18 [cluster="RestSharp.Tests.OAuthTests.HmacSha256_Hashes_Correctly(string, string)", file="OAuthTests.cs", label="Assert.AreEqual(expected, actual)", span="56-56"];
m13_20 [cluster="RestSharp.Authenticators.OAuth.OAuthTools.GetSignature(RestSharp.Authenticators.OAuth.OAuthSignatureMethod, string, string)", file="OAuthTests.cs", label="Entry RestSharp.Authenticators.OAuth.OAuthTools.GetSignature(RestSharp.Authenticators.OAuth.OAuthSignatureMethod, string, string)", span="278-278"];
m13_19 [cluster="RestSharp.Tests.OAuthTests.HmacSha256_Hashes_Correctly(string, string)", file="OAuthTests.cs", label="Exit RestSharp.Tests.OAuthTests.HmacSha256_Hashes_Correctly(string, string)", span="51-51"];
m13_0 [cluster="RestSharp.Tests.OAuthTests.OAuthTests()", file="OAuthTests.cs", label="Entry RestSharp.Tests.OAuthTests.OAuthTests()", span="12-12"];
m13_1 [cluster="RestSharp.Tests.OAuthTests.OAuthTests()", file="OAuthTests.cs", label="Thread.CurrentThread.CurrentCulture = CultureInfo.InvariantCulture", span="14-14"];
m13_2 [cluster="RestSharp.Tests.OAuthTests.OAuthTests()", file="OAuthTests.cs", label="Thread.CurrentThread.CurrentUICulture = CultureInfo.InstalledUICulture", span="15-15"];
m13_3 [cluster="RestSharp.Tests.OAuthTests.OAuthTests()", file="OAuthTests.cs", label="Exit RestSharp.Tests.OAuthTests.OAuthTests()", span="12-12"];
m13_4 [cluster="RestSharp.Tests.OAuthTests.UrlStrictEncode_Encodes_Correctly(string, string)", file="OAuthTests.cs", label="Entry RestSharp.Tests.OAuthTests.UrlStrictEncode_Encodes_Correctly(string, string)", span="28-28"];
m13_5 [cluster="RestSharp.Tests.OAuthTests.UrlStrictEncode_Encodes_Correctly(string, string)", file="OAuthTests.cs", label="string actual = OAuthTools.UrlEncodeStrict(value)", span="30-30"];
m13_6 [cluster="RestSharp.Tests.OAuthTests.UrlStrictEncode_Encodes_Correctly(string, string)", file="OAuthTests.cs", label="Assert.AreEqual(expected, actual)", span="32-32"];
m13_8 [cluster="RestSharp.Authenticators.OAuth.OAuthTools.UrlEncodeStrict(string)", file="OAuthTests.cs", label="Entry RestSharp.Authenticators.OAuth.OAuthTools.UrlEncodeStrict(string)", span="153-153"];
m13_7 [cluster="RestSharp.Tests.OAuthTests.UrlStrictEncode_Encodes_Correctly(string, string)", file="OAuthTests.cs", label="Exit RestSharp.Tests.OAuthTests.UrlStrictEncode_Encodes_Correctly(string, string)", span="28-28"];
m13_10 [cluster="RestSharp.Tests.OAuthTests.PercentEncode_Encodes_Correctly(string, string)", file="OAuthTests.cs", label="Entry RestSharp.Tests.OAuthTests.PercentEncode_Encodes_Correctly(string, string)", span="39-39"];
m13_11 [cluster="RestSharp.Tests.OAuthTests.PercentEncode_Encodes_Correctly(string, string)", file="OAuthTests.cs", label="string actual = value.PercentEncode()", span="41-41"];
m13_12 [cluster="RestSharp.Tests.OAuthTests.PercentEncode_Encodes_Correctly(string, string)", file="OAuthTests.cs", label="Assert.AreEqual(expected, actual)", span="43-43"];
m13_14 [cluster="string.PercentEncode()", file="OAuthTests.cs", label="Entry string.PercentEncode()", span="67-67"];
m13_13 [cluster="RestSharp.Tests.OAuthTests.PercentEncode_Encodes_Correctly(string, string)", file="OAuthTests.cs", label="Exit RestSharp.Tests.OAuthTests.PercentEncode_Encodes_Correctly(string, string)", span="39-39"];
m13_21 [cluster="RestSharp.Tests.OAuthTests.HmacSha256_Does_Not_Accept_Nulls()", file="OAuthTests.cs", label="Entry RestSharp.Tests.OAuthTests.HmacSha256_Does_Not_Accept_Nulls()", span="61-61"];
m13_22 [cluster="RestSharp.Tests.OAuthTests.HmacSha256_Does_Not_Accept_Nulls()", file="OAuthTests.cs", label="string consumerSecret = ''12345678''", span="63-63"];
m13_28 [cluster="lambda expression", color=green, community=0, file="OAuthTests.cs", label="OAuthTools.GetSignature(OAuthSignatureMethod.HmacSha256, null, consumerSecret)", prediction=63, span="63-63"];
m13_24 [cluster="RestSharp.Tests.OAuthTests.HmacSha256_Does_Not_Accept_Nulls()", file="OAuthTests.cs", label="Exit RestSharp.Tests.OAuthTests.HmacSha256_Does_Not_Accept_Nulls()", span="61-61"];
m13_27 [cluster="lambda expression", file="OAuthTests.cs", label="Entry lambda expression", span="63-63"];
m13_29 [cluster="lambda expression", file="OAuthTests.cs", label="Exit lambda expression", span="63-63"];
m14_19 [cluster="RestSharp.RestClient.AddHandler(string, RestSharp.Deserializers.IDeserializer)", file="RestClient.cs", label="Entry RestSharp.RestClient.AddHandler(string, RestSharp.Deserializers.IDeserializer)", span="199-199"];
m14_32 [cluster="RestSharp.RestClient.AddHandler(string, RestSharp.Deserializers.IDeserializer)", file="RestClient.cs", label="this.ContentHandlers[contentType] = deserializer", span="201-201"];
m14_34 [cluster="RestSharp.RestClient.AddHandler(string, RestSharp.Deserializers.IDeserializer)", file="RestClient.cs", label="this.AcceptTypes.Add(contentType)", span="205-205"];
m14_5 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.AddHandler(''application/json'', new JsonDeserializer())", span="148-148"];
m14_6 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.AddHandler(''application/xml'', new XmlDeserializer())", span="149-149"];
m14_7 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.AddHandler(''text/json'', new JsonDeserializer())", span="150-150"];
m14_8 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.AddHandler(''text/x-json'', new JsonDeserializer())", span="151-151"];
m14_9 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.AddHandler(''text/javascript'', new JsonDeserializer())", span="152-152"];
m14_10 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.AddHandler(''text/xml'', new XmlDeserializer())", span="153-153"];
m14_11 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.AddHandler(''*+json'', new JsonDeserializer())", span="154-154"];
m14_12 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.AddHandler(''*+xml'', new XmlDeserializer())", span="155-155"];
m14_13 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.AddHandler(''*'', new XmlDeserializer())", span="156-156"];
m14_38 [cluster="RestSharp.RestClient.AddHandler(string, RestSharp.Deserializers.IDeserializer)", file="RestClient.cs", label="Exit RestSharp.RestClient.AddHandler(string, RestSharp.Deserializers.IDeserializer)", span="199-199"];
m14_39 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", file="RestClient.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
m14_35 [cluster="RestSharp.RestClient.AddHandler(string, RestSharp.Deserializers.IDeserializer)", file="RestClient.cs", label="string accepts = string.Join('', '', this.AcceptTypes.ToArray())", span="207-207"];
m14_40 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="RestClient.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m14_36 [cluster="RestSharp.RestClient.AddHandler(string, RestSharp.Deserializers.IDeserializer)", file="RestClient.cs", label="this.RemoveDefaultParameter(''Accept'')", span="209-209"];
m14_37 [cluster="RestSharp.RestClient.AddHandler(string, RestSharp.Deserializers.IDeserializer)", file="RestClient.cs", label="this.AddDefaultParameter(''Accept'', accepts, ParameterType.HttpHeader)", span="210-210"];
m14_42 [cluster="string.Join(string, params string[])", file="RestClient.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m14_41 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="RestClient.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m14_43 [cluster="RestSharp.IRestClient.RemoveDefaultParameter(string)", file="RestClient.cs", label="Entry RestSharp.IRestClient.RemoveDefaultParameter(string)", span="331-331"];
m14_44 [cluster="RestSharp.IRestClient.AddDefaultParameter(string, object, RestSharp.ParameterType)", file="RestClient.cs", label="Entry RestSharp.IRestClient.AddDefaultParameter(string, object, RestSharp.ParameterType)", span="372-372"];
m14_154 [cluster="RestSharp.RestClient.EncodeParameter(RestSharp.Parameter)", file="RestClient.cs", label="Entry RestSharp.RestClient.EncodeParameter(RestSharp.Parameter)", span="398-398"];
m14_155 [cluster="RestSharp.RestClient.EncodeParameter(RestSharp.Parameter)", file="RestClient.cs", label="return parameter.Value == null\r\n                ? string.Concat(parameter.Name.UrlEncode(), ''='')\r\n                : string.Concat(\\nparameter.Name.UrlEncode(), ''='', parameter.Value.ToString().UrlEncode());", span="400-402"];
m14_125 [cluster="object.ToString()", file="RestClient.cs", label="Entry object.ToString()", span="0-0"];
m14_156 [cluster="RestSharp.RestClient.EncodeParameter(RestSharp.Parameter)", file="RestClient.cs", label="Exit RestSharp.RestClient.EncodeParameter(RestSharp.Parameter)", span="398-398"];
m14_139 [cluster="string.Concat(string, string, string)", file="RestClient.cs", label="Entry string.Concat(string, string, string)", span="0-0"];
m14_126 [cluster="string.UrlEncode()", file="RestClient.cs", label="Entry string.UrlEncode()", span="49-49"];
m14_133 [cluster="string.Concat(string, string)", file="RestClient.cs", label="Entry string.Concat(string, string)", span="0-0"];
m14_58 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestResponse)", file="RestClient.cs", label="Entry RestSharp.RestClient.Deserialize<T>(RestSharp.IRestResponse)", span="235-235"];
m14_59 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestResponse)", file="RestClient.cs", label="return Deserialize<T>(response.Request, response);", span="237-237"];
m14_61 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="Entry RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", span="635-635"];
m14_60 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestResponse)", file="RestClient.cs", label="Exit RestSharp.RestClient.Deserialize<T>(RestSharp.IRestResponse)", span="235-235"];
m14_137 [cluster="RestSharp.RestClient.EncodeParameters(System.Collections.Generic.IEnumerable<RestSharp.Parameter>)", file="RestClient.cs", label="Entry RestSharp.RestClient.EncodeParameters(System.Collections.Generic.IEnumerable<RestSharp.Parameter>)", span="392-392"];
m14_149 [cluster="RestSharp.RestClient.EncodeParameters(System.Collections.Generic.IEnumerable<RestSharp.Parameter>)", file="RestClient.cs", label="return string.Join(''&'', parameters.Select(EncodeParameter)\r\n                                              .ToArray());", span="394-395"];
m14_109 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="IEnumerable<Parameter> parameters", span="360-360"];
m14_150 [cluster="RestSharp.RestClient.EncodeParameters(System.Collections.Generic.IEnumerable<RestSharp.Parameter>)", file="RestClient.cs", label="Exit RestSharp.RestClient.EncodeParameters(System.Collections.Generic.IEnumerable<RestSharp.Parameter>)", span="392-392"];
m14_85 [cluster="RestSharp.RestClient.AuthenticateIfNeeded(RestSharp.RestClient, RestSharp.IRestRequest)", file="RestClient.cs", label="Entry RestSharp.RestClient.AuthenticateIfNeeded(RestSharp.RestClient, RestSharp.IRestRequest)", span="300-300"];
m14_86 [cluster="RestSharp.RestClient.AuthenticateIfNeeded(RestSharp.RestClient, RestSharp.IRestRequest)", file="RestClient.cs", label="this.Authenticator != null", span="302-302"];
m14_87 [cluster="RestSharp.RestClient.AuthenticateIfNeeded(RestSharp.RestClient, RestSharp.IRestRequest)", file="RestClient.cs", label="this.Authenticator.Authenticate(client, request)", span="304-304"];
m14_88 [cluster="RestSharp.RestClient.AuthenticateIfNeeded(RestSharp.RestClient, RestSharp.IRestRequest)", file="RestClient.cs", label="Exit RestSharp.RestClient.AuthenticateIfNeeded(RestSharp.RestClient, RestSharp.IRestRequest)", span="300-300"];
m14_89 [cluster="RestSharp.Authenticators.IAuthenticator.Authenticate(RestSharp.IRestClient, RestSharp.IRestRequest)", file="RestClient.cs", label="Entry RestSharp.Authenticators.IAuthenticator.Authenticate(RestSharp.IRestClient, RestSharp.IRestRequest)", span="22-22"];
m14_157 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="Entry RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", span="405-405"];
m14_158 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.Encoding = this.Encoding", span="407-407"];
m14_159 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.AlwaysMultipartFormData = request.AlwaysMultipartFormData", span="408-408"];
m14_160 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.UseDefaultCredentials = request.UseDefaultCredentials", span="409-409"];
m14_161 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.ResponseWriter = request.ResponseWriter", span="410-410"];
m14_162 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.CookieContainer = this.CookieContainer", span="411-411"];
m14_164 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="request.Parameters.Any(p2 => p2.Name == p.Name && p2.Type == p.Type)", span="417-417"];
m14_165 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="request.AddParameter(p)", span="422-422"];
m14_166 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="request.Parameters.All(p2 => p2.Name.ToLowerInvariant() != ''accept'')", span="426-426"];
m14_168 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="request.AddParameter(''Accept'', accepts, ParameterType.HttpHeader)", span="430-430"];
m14_169 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.Url = this.BuildUri(request)", span="433-433"];
m14_170 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.PreAuthenticate = this.PreAuthenticate", span="434-434"];
m14_171 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="string userAgent = this.UserAgent ?? http.UserAgent", span="436-436"];
m14_172 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.UserAgent = userAgent.HasValue()\r\n                ? userAgent\r\n                : ''RestSharp/'' + version", span="438-440"];
m14_173 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="int timeout = request.Timeout > 0\r\n                ? request.Timeout\r\n                : this.Timeout", span="442-444"];
m14_175 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.Timeout = timeout", span="448-448"];
m14_176 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="int readWriteTimeout = request.ReadWriteTimeout > 0\r\n                ? request.ReadWriteTimeout\r\n                : this.ReadWriteTimeout", span="451-453"];
m14_178 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.ReadWriteTimeout = readWriteTimeout", span="457-457"];
m14_179 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.FollowRedirects = this.FollowRedirects", span="461-461"];
m14_180 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="request.Credentials != null", span="476-476"];
m14_181 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.Credentials = request.Credentials", span="478-478"];
m14_182 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="IEnumerable<HttpHeader> headers = from p in request.Parameters\r\n                                              where p.Type == \\nParameterType.HttpHeader\r\n                                              select new HttpHeader\r\n                                                     {\r\n                                                         \\nName = p.Name,\r\n                                                         Value = Convert.ToString(p.Value)\r\n                                                     }", span="481-487"];
m14_184 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.Headers.Add(header)", span="491-491"];
m14_185 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="IEnumerable<HttpCookie> cookies = from p in request.Parameters\r\n                                              where p.Type == \\nParameterType.Cookie\r\n                                              select new HttpCookie\r\n                                                     {\r\n                                                         \\nName = p.Name,\r\n                                                         Value = Convert.ToString(p.Value)\r\n                                                     }", span="494-500"];
m14_187 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.Cookies.Add(cookie)", span="504-504"];
m14_188 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="IEnumerable<HttpParameter> @params = from p in request.Parameters\r\n                                                 where p.Type == \\nParameterType.GetOrPost && p.Value != null\r\n                                                 select new HttpParameter\r\n                                                        {\r\n                                                            \\nName = p.Name,\r\n                                                            Value = Convert.ToString(p.Value)\r\n                                                        }", span="507-513"];
m14_190 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.Parameters.Add(parameter)", span="517-517"];
m14_191 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="request.Files", span="520-520"];
m14_192 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.Files.Add(new HttpFile\r\n                               {\r\n                                   Name = file.Name,\r\n                                   \\nContentType = file.ContentType,\r\n                                   Writer = file.Writer,\r\n                                   \\nFileName = file.FileName,\r\n                                   ContentLength = file.ContentLength\r\n                               })", span="522-529"];
m14_193 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="Parameter body = request.Parameters.FirstOrDefault(p => p.Type == ParameterType.RequestBody)", span="532-532"];
m14_195 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.RequestContentType = body.Name", span="538-538"];
m14_196 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="!http.Files.Any()", span="540-540"];
m14_199 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.RequestBodyBytes = (byte[]) val", span="546-546"];
m14_200 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.RequestBody = Convert.ToString(body.Value)", span="550-550"];
m14_201 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.Parameters.Add(new HttpParameter\r\n                                        {\r\n                                            \\nName = body.Name,\r\n                                            Value = Convert.ToString(body.Value),\r\n                                            \\nContentType = body.ContentType\r\n                                        })", span="555-560"];
m14_163 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="this.DefaultParameters", span="415-415"];
m14_216 [cluster="lambda expression", file="RestClient.cs", label="p2.Name == p.Name && p2.Type == p.Type", span="417-417"];
m14_215 [cluster="lambda expression", file="RestClient.cs", label="Entry lambda expression", span="417-417"];
m14_204 [cluster="RestSharp.IRestRequest.AddParameter(RestSharp.Parameter)", file="RestClient.cs", label="Entry RestSharp.IRestRequest.AddParameter(RestSharp.Parameter)", span="239-239"];
m14_167 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="string accepts = string.Join('', '', this.AcceptTypes.ToArray())", span="428-428"];
m14_218 [cluster="lambda expression", file="RestClient.cs", label="Entry lambda expression", span="426-426"];
m14_206 [cluster="RestSharp.IRestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="RestClient.cs", label="Entry RestSharp.IRestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="261-261"];
m14_90 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="Entry RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", span="313-313"];
m14_207 [cluster="string.HasValue()", file="RestClient.cs", label="Entry string.HasValue()", span="100-100"];
m14_174 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="timeout > 0", span="446-446"];
m14_177 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="readWriteTimeout > 0", span="455-455"];
m14_183 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label=headers, span="489-489"];
m14_208 [cluster="RestSharp.HttpHeader.HttpHeader()", file="RestClient.cs", label="Entry RestSharp.HttpHeader.HttpHeader()", span="5-5"];
m14_186 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label=cookies, span="502-502"];
m14_210 [cluster="RestSharp.HttpCookie.HttpCookie()", file="RestClient.cs", label="Entry RestSharp.HttpCookie.HttpCookie()", span="7-7"];
m14_189 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="@params", span="515-515"];
m14_211 [cluster="RestSharp.HttpParameter.HttpParameter()", file="RestClient.cs", label="Entry RestSharp.HttpParameter.HttpParameter()", span="5-5"];
m14_212 [cluster="RestSharp.HttpFile.HttpFile()", file="RestClient.cs", label="Entry RestSharp.HttpFile.HttpFile()", span="8-8"];
m14_194 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="body != null", span="536-536"];
m14_197 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="object val = body.Value", span="542-542"];
m14_222 [cluster="lambda expression", file="RestClient.cs", label="Entry lambda expression", span="532-532"];
m14_202 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="Exit RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", span="405-405"];
m14_136 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="RestClient.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m14_198 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="val is byte[]", span="544-544"];
m14_214 [cluster="System.Convert.ToString(object)", file="RestClient.cs", label="Entry System.Convert.ToString(object)", span="0-0"];
m14_225 [cluster="RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", file="RestClient.cs", label="Entry RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", span="581-581"];
m14_226 [cluster="RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", file="RestClient.cs", label="RestResponse restResponse = new RestResponse\r\n                                        {\r\n                                            \\nContent = httpResponse.Content,\r\n                                            ContentEncoding = httpResponse.ContentEncoding,\r\n                                            \\nContentLength = httpResponse.ContentLength,\r\n                                            ContentType = httpResponse.ContentType,\r\n                                            \\nErrorException = httpResponse.ErrorException,\r\n                                            ErrorMessage = httpResponse.ErrorMessage,\r\n                                            \\nRawBytes = httpResponse.RawBytes,\r\n                                            ResponseStatus = httpResponse.ResponseStatus,\r\n                                            \\nResponseUri = httpResponse.ResponseUri,\r\n                                            ProtocolVersion = httpResponse.ProtocolVersion,\r\n                                            \\nServer = httpResponse.Server,\r\n                                            StatusCode = httpResponse.StatusCode,\r\n                                            \\nStatusDescription = httpResponse.StatusDescription,\r\n                                            Request = request\r\n                                        }", span="583-599"];
m14_227 [cluster="RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", file="RestClient.cs", label="httpResponse.Headers", span="601-601"];
m14_229 [cluster="RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", file="RestClient.cs", label="httpResponse.Cookies", span="611-611"];
m14_228 [cluster="RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", file="RestClient.cs", label="restResponse.Headers.Add(new Parameter\r\n                                         {\r\n                                             \\nName = header.Name,\r\n                                             Value = header.Value,\r\n                                             \\nType = ParameterType.HttpHeader\r\n                                         })", span="603-608"];
m14_230 [cluster="RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", file="RestClient.cs", label="restResponse.Cookies.Add(new RestResponseCookie\r\n                                         {\r\n                                             \\nComment = cookie.Comment,\r\n                                             CommentUri = cookie.CommentUri,\r\n                                             \\nDiscard = cookie.Discard,\r\n                                             Domain = cookie.Domain,\r\n                                             \\nExpired = cookie.Expired,\r\n                                             Expires = cookie.Expires,\r\n                                             \\nHttpOnly = cookie.HttpOnly,\r\n                                             Name = cookie.Name,\r\n                                             \\nPath = cookie.Path,\r\n                                             Port = cookie.Port,\r\n                                             \\nSecure = cookie.Secure,\r\n                                             TimeStamp = cookie.TimeStamp,\r\n                                             \\nValue = cookie.Value,\r\n                                             Version = cookie.Version\r\n                                         })", span="613-629"];
m14_231 [cluster="RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", file="RestClient.cs", label="return restResponse;", span="632-632"];
m14_233 [cluster="RestSharp.RestResponse.RestResponse()", file="RestClient.cs", label="Entry RestSharp.RestResponse.RestResponse()", span="184-184"];
m14_234 [cluster="RestSharp.Parameter.Parameter()", file="RestClient.cs", label="Entry RestSharp.Parameter.Parameter()", span="23-23"];
m14_235 [cluster="RestSharp.RestResponseCookie.RestResponseCookie()", file="RestClient.cs", label="Entry RestSharp.RestResponseCookie.RestResponseCookie()", span="4-4"];
m14_232 [cluster="RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", file="RestClient.cs", label="Exit RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", span="581-581"];
m14_62 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="Entry RestSharp.RestClient.GetHandler(string)", span="245-245"];
m14_63 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="contentType == null", span="247-247"];
m14_65 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="string.IsNullOrEmpty(contentType) && this.ContentHandlers.ContainsKey(''*'')", span="252-252"];
m14_67 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="int semicolonIndex = contentType.IndexOf(';')", span="257-257"];
m14_69 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="contentType = contentType.Substring(0, semicolonIndex)", span="261-261"];
m14_70 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="this.ContentHandlers.ContainsKey(contentType)", span="264-264"];
m14_71 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="return this.ContentHandlers[contentType];", span="266-266"];
m14_79 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="return null;", span="287-287"];
m14_64 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="throw new ArgumentNullException(''contentType'');", span="249-249"];
m14_80 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="Exit RestSharp.RestClient.GetHandler(string)", span="245-245"];
m14_30 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RestClient.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m14_29 [cluster="string.IsNullOrEmpty(string)", file="RestClient.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m14_66 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="return this.ContentHandlers[''*''];", span="254-254"];
m14_81 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="RestClient.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m14_82 [cluster="string.IndexOf(char)", file="RestClient.cs", label="Entry string.IndexOf(char)", span="0-0"];
m14_68 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="semicolonIndex > -1", span="259-259"];
m14_83 [cluster="string.Substring(int, int)", file="RestClient.cs", label="Entry string.Substring(int, int)", span="0-0"];
m14_84 [cluster="System.Text.RegularExpressions.Regex.Match(string)", file="RestClient.cs", label="Entry System.Text.RegularExpressions.Regex.Match(string)", span="0-0"];
m14_73 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="structuredSyntaxSuffixMatch.Success", span="272-272"];
m14_74 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="string structuredSyntaxSuffixWildcard = ''*'' + structuredSyntaxSuffixMatch.Value", span="274-274"];
m14_77 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="this.ContentHandlers.ContainsKey(''*'')", span="282-282"];
m14_75 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="this.ContentHandlers.ContainsKey(structuredSyntaxSuffixWildcard)", span="276-276"];
m14_76 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="return this.ContentHandlers[structuredSyntaxSuffixWildcard];", span="278-278"];
m14_78 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="return this.ContentHandlers[''*''];", span="284-284"];
m14_0 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="Entry RestSharp.RestClient.RestClient()", span="137-137"];
m14_1 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.Encoding = Encoding.UTF8", span="139-139"];
m14_2 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.ContentHandlers = new Dictionary<string, IDeserializer>()", span="143-143"];
m14_16 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RestClient.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m14_3 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.AcceptTypes = new List<string>()", span="144-144"];
m14_17 [cluster="System.Collections.Generic.List<T>.List()", file="RestClient.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m14_4 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.DefaultParameters = new List<Parameter>()", span="145-145"];
m14_18 [cluster="RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", file="RestClient.cs", label="Entry RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", span="22-22"];
m14_20 [cluster="RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", file="RestClient.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", span="44-44"];
m14_14 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.FollowRedirects = true", span="158-158"];
m14_15 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="Exit RestSharp.RestClient.RestClient()", span="137-137"];
m14_236 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="request.OnBeforeDeserialization(raw)", span="637-637"];
m14_237 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="IRestResponse<T> response = new RestResponse<T>()", span="639-639"];
m14_238 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="response = raw.ToAsyncResponse<T>()", span="643-643"];
m14_239 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="response.Request = request", span="644-644"];
m14_241 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="IDeserializer handler = this.GetHandler(raw.ContentType)", span="651-651"];
m14_243 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="handler.RootElement = request.RootElement", span="657-657"];
m14_244 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="handler.DateFormat = request.DateFormat", span="658-658"];
m14_245 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="handler.Namespace = request.XmlNamespace", span="659-659"];
m14_246 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="response.Data = handler.Deserialize<T>(raw)", span="661-661"];
m14_253 [cluster="System.Action<T>.Invoke(T)", file="RestClient.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m14_254 [cluster="RestSharp.RestResponse<T>.RestResponse()", file="RestClient.cs", label="Entry RestSharp.RestResponse<T>.RestResponse()", span="150-150"];
m14_255 [cluster="RestSharp.IRestResponse.ToAsyncResponse<T>()", file="RestClient.cs", label="Entry RestSharp.IRestResponse.ToAsyncResponse<T>()", span="4-4"];
m14_240 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="response.ErrorException == null", span="649-649"];
m14_248 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="response.ResponseStatus = ResponseStatus.Error", span="667-667"];
m14_249 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="response.ErrorMessage = ex.Message", span="668-668"];
m14_250 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="response.ErrorException = ex", span="669-669"];
m14_251 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="return response;", span="672-672"];
m14_247 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label=Exception, span="665-665"];
m14_242 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="handler != null", span="655-655"];
m14_256 [cluster="RestSharp.Deserializers.IDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="RestClient.cs", label="Entry RestSharp.Deserializers.IDeserializer.Deserialize<T>(RestSharp.IRestResponse)", span="22-22"];
m14_252 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="Exit RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", span="635-635"];
m14_21 [cluster="RestSharp.RestClient.RestClient(System.Uri)", file="RestClient.cs", label="Entry RestSharp.RestClient.RestClient(System.Uri)", span="165-165"];
m14_22 [cluster="RestSharp.RestClient.RestClient(System.Uri)", file="RestClient.cs", label="this.BaseUrl = baseUrl", span="167-167"];
m14_23 [cluster="RestSharp.RestClient.RestClient(System.Uri)", file="RestClient.cs", label="Exit RestSharp.RestClient.RestClient(System.Uri)", span="165-165"];
m14_91 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="this.BaseUrl == null", span="315-315"];
m14_93 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="string assembled = request.Resource", span="320-320"];
m14_94 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="IEnumerable<Parameter> urlParms = request.Parameters.Where(p => p.Type == ParameterType.UrlSegment)", span="321-321"];
m14_110 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="request.Method != Method.POST && request.Method != Method.PUT && request.Method != Method.PATCH", span="362-362"];
m14_111 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="parameters = request.Parameters\r\n                                    .Where(p => p.Type == ParameterType.GetOrPost ||\r\n                                                \\np.Type == ParameterType.QueryString)\r\n                                    .ToList()", span="364-367"];
m14_112 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="parameters = request.Parameters\r\n                                    .Where(p => p.Type == ParameterType.QueryString)\r\n                                    \\n.ToList()", span="371-373"];
m14_92 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="throw new NullReferenceException(''RestClient must contain a value for BaseUrl'');", span="317-317"];
m14_120 [cluster="System.NullReferenceException.NullReferenceException(string)", file="RestClient.cs", label="Entry System.NullReferenceException.NullReferenceException(string)", span="0-0"];
m14_119 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="Exit RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", span="313-313"];
m14_99 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="!string.IsNullOrEmpty(assembled)", span="333-333"];
m14_100 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="assembled = assembled.Replace(''{'' + p.Name + ''}'', p.Value.ToString().UrlEncode())", span="335-335"];
m14_103 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="!string.IsNullOrEmpty(assembled) && assembled.StartsWith(''/'')", span="343-343"];
m14_104 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="assembled = assembled.Substring(1)", span="345-345"];
m14_106 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="!this.BaseUrl.AbsoluteUri.EndsWith(''/'') && !string.IsNullOrEmpty(assembled)", span="350-350"];
m14_107 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="assembled = string.Concat(''/'', assembled)", span="352-352"];
m14_108 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="assembled = string.IsNullOrEmpty(assembled)\r\n                    ? this.BaseUrl.AbsoluteUri\r\n                    : string.Format(''{\\n0}{1}'', this.BaseUrl, assembled)", span="355-357"];
m14_114 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="return new Uri(assembled);", span="378-378"];
m14_116 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="string separator = assembled != null && assembled.Contains(''?'')\r\n                ? ''&''\r\n                : ''?''", span="383-385"];
m14_117 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="assembled = string.Concat(assembled, separator, data)", span="387-387"];
m14_95 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="UriBuilder builder = new UriBuilder(this.BaseUrl)", span="322-322"];
m14_96 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label=urlParms, span="324-324"];
m14_140 [cluster="lambda expression", file="RestClient.cs", label="Entry lambda expression", span="321-321"];
m14_122 [cluster="System.UriBuilder.UriBuilder(System.Uri)", file="RestClient.cs", label="Entry System.UriBuilder.UriBuilder(System.Uri)", span="0-0"];
m14_101 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="builder.Path = builder.Path.UrlDecode().Replace(''{'' + p.Name + ''}'', p.Value.ToString().UrlEncode())", span="338-338"];
m14_102 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="this.BaseUrl = new Uri(builder.ToString())", span="341-341"];
m14_97 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="p.Value == null", span="326-326"];
m14_98 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="throw new ArgumentException(\r\n                        string.Format(''Cannot build uri when url segment parameter '{0}' value \\nis null.'', p.Name),\r\n                        ''request'');", span="328-330"];
m14_123 [cluster="System.ArgumentException.ArgumentException(string, string)", file="RestClient.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m14_124 [cluster="string.Format(string, object)", file="RestClient.cs", label="Entry string.Format(string, object)", span="0-0"];
m14_127 [cluster="string.Replace(string, string)", file="RestClient.cs", label="Entry string.Replace(string, string)", span="0-0"];
m14_128 [cluster="string.UrlDecode()", file="RestClient.cs", label="Entry string.UrlDecode()", span="40-40"];
m14_129 [cluster="System.UriBuilder.ToString()", file="RestClient.cs", label="Entry System.UriBuilder.ToString()", span="0-0"];
m14_31 [cluster="System.Uri.Uri(string)", file="RestClient.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m14_130 [cluster="string.StartsWith(string)", file="RestClient.cs", label="Entry string.StartsWith(string)", span="0-0"];
m14_105 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="this.BaseUrl != null && !string.IsNullOrEmpty(this.BaseUrl.AbsoluteUri)", span="348-348"];
m14_131 [cluster="string.Substring(int)", file="RestClient.cs", label="Entry string.Substring(int)", span="0-0"];
m14_132 [cluster="string.EndsWith(string)", file="RestClient.cs", label="Entry string.EndsWith(string)", span="0-0"];
m14_134 [cluster="string.Format(string, object, object)", file="RestClient.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m14_113 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="!parameters.Any()", span="376-376"];
m14_115 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="string data = EncodeParameters(parameters)", span="382-382"];
m14_143 [cluster="lambda expression", file="RestClient.cs", label="Entry lambda expression", span="365-366"];
m14_146 [cluster="lambda expression", file="RestClient.cs", label="Entry lambda expression", span="372-372"];
m14_138 [cluster="string.Contains(string)", file="RestClient.cs", label="Entry string.Contains(string)", span="0-0"];
m14_118 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="return new Uri(assembled);", span="389-389"];
m14_45 [cluster="RestSharp.RestClient.RemoveHandler(string)", file="RestClient.cs", label="Entry RestSharp.RestClient.RemoveHandler(string)", span="218-218"];
m14_46 [cluster="RestSharp.RestClient.RemoveHandler(string)", file="RestClient.cs", label="this.ContentHandlers.Remove(contentType)", span="220-220"];
m14_47 [cluster="RestSharp.RestClient.RemoveHandler(string)", file="RestClient.cs", label="this.AcceptTypes.Remove(contentType)", span="221-221"];
m14_50 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", file="RestClient.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m14_51 [cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="RestClient.cs", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0"];
m14_48 [cluster="RestSharp.RestClient.RemoveHandler(string)", file="RestClient.cs", label="this.RemoveDefaultParameter(''Accept'')", span="222-222"];
m14_49 [cluster="RestSharp.RestClient.RemoveHandler(string)", file="RestClient.cs", label="Exit RestSharp.RestClient.RemoveHandler(string)", span="218-218"];
m14_24 [cluster="RestSharp.RestClient.RestClient(string)", file="RestClient.cs", label="Entry RestSharp.RestClient.RestClient(string)", span="174-174"];
m14_25 [cluster="RestSharp.RestClient.RestClient(string)", file="RestClient.cs", label="string.IsNullOrEmpty(baseUrl)", span="176-176"];
m14_27 [cluster="RestSharp.RestClient.RestClient(string)", file="RestClient.cs", label="this.BaseUrl = new Uri(baseUrl)", span="181-181"];
m14_26 [cluster="RestSharp.RestClient.RestClient(string)", file="RestClient.cs", label="throw new ArgumentNullException(''baseUrl'');", span="178-178"];
m14_28 [cluster="RestSharp.RestClient.RestClient(string)", file="RestClient.cs", label="Exit RestSharp.RestClient.RestClient(string)", span="174-174"];
m14_52 [cluster="RestSharp.RestClient.ClearHandlers()", file="RestClient.cs", label="Entry RestSharp.RestClient.ClearHandlers()", span="228-228"];
m14_53 [cluster="RestSharp.RestClient.ClearHandlers()", file="RestClient.cs", label="this.ContentHandlers.Clear()", span="230-230"];
m14_57 [cluster="System.Collections.Generic.ICollection<T>.Clear()", file="RestClient.cs", label="Entry System.Collections.Generic.ICollection<T>.Clear()", span="0-0"];
m14_54 [cluster="RestSharp.RestClient.ClearHandlers()", file="RestClient.cs", label="this.AcceptTypes.Clear()", span="231-231"];
m14_55 [cluster="RestSharp.RestClient.ClearHandlers()", file="RestClient.cs", label="this.RemoveDefaultParameter(''Accept'')", span="232-232"];
m14_56 [cluster="RestSharp.RestClient.ClearHandlers()", file="RestClient.cs", label="Exit RestSharp.RestClient.ClearHandlers()", span="228-228"];
m14_141 [cluster="lambda expression", file="RestClient.cs", label="p.Type == ParameterType.UrlSegment", span="321-321"];
m14_142 [cluster="lambda expression", file="RestClient.cs", label="Exit lambda expression", span="321-321"];
m14_144 [cluster="lambda expression", file="RestClient.cs", label="p.Type == ParameterType.GetOrPost ||\r\n                                                p.Type == ParameterType.QueryString", span="365-366"];
m14_145 [cluster="lambda expression", file="RestClient.cs", label="Exit lambda expression", span="365-366"];
m14_147 [cluster="lambda expression", file="RestClient.cs", label="p.Type == ParameterType.QueryString", span="372-372"];
m14_148 [cluster="lambda expression", file="RestClient.cs", label="Exit lambda expression", span="372-372"];
m14_217 [cluster="lambda expression", file="RestClient.cs", label="Exit lambda expression", span="417-417"];
m14_219 [cluster="lambda expression", file="RestClient.cs", label="p2.Name.ToLowerInvariant() != ''accept''", span="426-426"];
m14_221 [cluster="string.ToLowerInvariant()", file="RestClient.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m14_220 [cluster="lambda expression", file="RestClient.cs", label="Exit lambda expression", span="426-426"];
m14_223 [cluster="lambda expression", file="RestClient.cs", label="p.Type == ParameterType.RequestBody", span="532-532"];
m14_224 [cluster="lambda expression", file="RestClient.cs", label="Exit lambda expression", span="532-532"];
m15_25 [cluster="RestSharp.RestRequest.RestRequest(System.Uri, RestSharp.Method)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.RestRequest(System.Uri, RestSharp.Method)", span="118-118"];
m15_26 [cluster="RestSharp.RestRequest.RestRequest(System.Uri, RestSharp.Method)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.RestRequest(System.Uri, RestSharp.Method)", span="118-118"];
m15_14 [cluster="RestSharp.RestRequest.RestRequest(RestSharp.Method)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.RestRequest(RestSharp.Method)", span="85-85"];
m15_15 [cluster="RestSharp.RestRequest.RestRequest(RestSharp.Method)", file="RestRequest.cs", label="this.Method = method", span="87-87"];
m15_16 [cluster="RestSharp.RestRequest.RestRequest(RestSharp.Method)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.RestRequest(RestSharp.Method)", span="85-85"];
m15_19 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", span="101-101"];
m15_20 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file="RestRequest.cs", label="this.Resource = resource", span="103-103"];
m15_21 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file="RestRequest.cs", label="this.Method = method", span="104-104"];
m15_22 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", span="101-101"];
m15_35 [cluster="RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", span="189-189"];
m15_50 [cluster="RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", file="RestRequest.cs", label="this.Files.Add(file)", span="191-191"];
m15_51 [cluster="RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", file="RestRequest.cs", label="return this;", span="193-193"];
m15_53 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RestRequest.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m15_52 [cluster="RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", span="189-189"];
m15_121 [cluster="RestSharp.RestRequest.AddParameter(string, object)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddParameter(string, object)", span="406-406"];
m15_130 [cluster="RestSharp.RestRequest.AddParameter(string, object)", file="RestRequest.cs", label="return this.AddParameter(new Parameter\r\n                                     {\r\n                                         Name = \\nname,\r\n                                         Value = value,\r\n                                         Type = ParameterType.GetOrPost\r\n                                     });", span="408-413"];
m15_126 [cluster="RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", span="393-393"];
m15_102 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="object val = prop.GetValue(obj, null)", span="336-336"];
m15_131 [cluster="RestSharp.RestRequest.AddParameter(string, object)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddParameter(string, object)", span="406-406"];
m15_132 [cluster="RestSharp.Parameter.Parameter()", file="RestRequest.cs", label="Entry RestSharp.Parameter.Parameter()", span="23-23"];
m15_63 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddBody(object, string)", span="231-231"];
m15_64 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="string serialized", span="233-233"];
m15_68 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="serialized = this.JsonSerializer.Serialize(obj)", span="239-239"];
m15_71 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="this.XmlSerializer.Namespace = xmlNamespace", span="244-244"];
m15_72 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="serialized = this.XmlSerializer.Serialize(obj)", span="245-245"];
m15_91 [cluster="RestSharp.RestRequest.AddXmlBody(object, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddXmlBody(object, string)", span="303-303"];
m15_80 [cluster="RestSharp.RestRequest.AddBody(object)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddBody(object)", span="267-267"];
m15_81 [cluster="RestSharp.RestRequest.AddBody(object)", file="RestRequest.cs", label="return this.AddBody(obj, '''');", span="269-269"];
m15_79 [cluster="RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="427-427"];
m15_87 [cluster="RestSharp.RestRequest.AddXmlBody(object)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddXmlBody(object)", span="289-289"];
m15_83 [cluster="RestSharp.RestRequest.AddJsonBody(object)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddJsonBody(object)", span="277-277"];
m15_65 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="string contentType", span="234-234"];
m15_66 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="this.RequestFormat", span="236-236"];
m15_67 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="DataFormat.Json", span="238-238"];
m15_70 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="DataFormat.Xml", span="243-243"];
m15_74 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="serialized = ''''", span="250-250"];
m15_69 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="contentType = this.JsonSerializer.ContentType", span="240-240"];
m15_78 [cluster="RestSharp.Serializers.ISerializer.Serialize(object)", file="RestRequest.cs", label="Entry RestSharp.Serializers.ISerializer.Serialize(object)", span="22-22"];
m15_76 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="return this.AddParameter(contentType, serialized, ParameterType.RequestBody);", span="258-258"];
m15_73 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="contentType = this.XmlSerializer.ContentType", span="246-246"];
m15_75 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="contentType = ''''", span="251-251"];
m15_77 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddBody(object, string)", span="231-231"];
m15_122 [cluster="RestSharp.RestRequest.AddObject(object)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddObject(object)", span="381-381"];
m15_123 [cluster="RestSharp.RestRequest.AddObject(object)", file="RestRequest.cs", label="this.AddObject(obj, new string[] { })", span="383-383"];
m15_124 [cluster="RestSharp.RestRequest.AddObject(object)", file="RestRequest.cs", label="return this;", span="385-385"];
m15_95 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddObject(object, params string[])", span="319-319"];
m15_125 [cluster="RestSharp.RestRequest.AddObject(object)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddObject(object)", span="381-381"];
m15_0 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="Entry RestSharp.RestRequest.RestRequest()", span="69-69"];
m15_1 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="this.RequestFormat = DataFormat.Xml", span="71-71"];
m15_2 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="this.Method = Method.GET", span="72-72"];
m15_3 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="this.Parameters = new List<Parameter>()", span="73-73"];
m15_9 [cluster="System.Collections.Generic.List<T>.List()", file="RestRequest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m15_4 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="this.Files = new List<FileParameter>()", span="74-74"];
m15_5 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="this.XmlSerializer = new XmlSerializer()", span="75-75"];
m15_6 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="this.JsonSerializer = new JsonSerializer()", span="76-76"];
m15_10 [cluster="RestSharp.Serializers.XmlSerializer.XmlSerializer()", file="RestRequest.cs", label="Entry RestSharp.Serializers.XmlSerializer.XmlSerializer()", span="37-37"];
m15_7 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="this.OnBeforeDeserialization = r => { }", span="78-78"];
m15_11 [cluster="RestSharp.Serializers.JsonSerializer.JsonSerializer()", file="RestRequest.cs", label="Entry RestSharp.Serializers.JsonSerializer.JsonSerializer()", span="12-12"];
m15_8 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="Exit RestSharp.RestRequest.RestRequest()", span="69-69"];
m15_127 [cluster="RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", file="RestRequest.cs", label="this.Parameters.Add(p)", span="395-395"];
m15_128 [cluster="RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", file="RestRequest.cs", label="return this;", span="397-397"];
m15_129 [cluster="RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", span="393-393"];
m15_23 [cluster="RestSharp.RestRequest.RestRequest(System.Uri)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.RestRequest(System.Uri)", span="111-111"];
m15_24 [cluster="RestSharp.RestRequest.RestRequest(System.Uri)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.RestRequest(System.Uri)", span="111-111"];
m15_92 [cluster="RestSharp.RestRequest.AddXmlBody(object, string)", file="RestRequest.cs", label="this.RequestFormat = DataFormat.Xml", span="305-305"];
m15_93 [cluster="RestSharp.RestRequest.AddXmlBody(object, string)", file="RestRequest.cs", label="return this.AddBody(obj, xmlNamespace);", span="307-307"];
m15_94 [cluster="RestSharp.RestRequest.AddXmlBody(object, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddXmlBody(object, string)", span="303-303"];
m15_158 [cluster="RestSharp.RestRequest.AddUrlSegment(string, object)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddUrlSegment(string, object)", span="509-509"];
m15_159 [cluster="RestSharp.RestRequest.AddUrlSegment(string, object)", file="RestRequest.cs", label="return this.AddParameter(name, value, ParameterType.UrlSegment);", span="511-511"];
m15_160 [cluster="RestSharp.RestRequest.AddUrlSegment(string, object)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddUrlSegment(string, object)", span="509-509"];
m15_152 [cluster="RestSharp.RestRequest.AddCookie(string, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddCookie(string, string)", span="487-487"];
m15_153 [cluster="RestSharp.RestRequest.AddCookie(string, string)", file="RestRequest.cs", label="return this.AddParameter(name, value, ParameterType.Cookie);", span="489-489"];
m15_154 [cluster="RestSharp.RestRequest.AddCookie(string, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddCookie(string, string)", span="487-487"];
m15_82 [cluster="RestSharp.RestRequest.AddBody(object)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddBody(object)", span="267-267"];
m15_27 [cluster="RestSharp.RestRequest.AddFile(string, string, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddFile(string, string, string)", span="134-134"];
m15_28 [cluster="RestSharp.RestRequest.AddFile(string, string, string)", file="RestRequest.cs", label="FileInfo f = new FileInfo(path)", span="136-136"];
m15_30 [cluster="RestSharp.RestRequest.AddFile(string, string, string)", file="RestRequest.cs", label="return this.AddFile(new FileParameter\r\n                           {\r\n                               Name = name,\r\n                               \\nFileName = Path.GetFileName(path),\r\n                               ContentLength = fileLength,\r\n                               \\nWriter = s =>\r\n                                        {\r\n                                            using (StreamReader file = \\nnew StreamReader( new FileStream(path, FileMode.Open)))\r\n                                            {\r\n                                                \\nfile.BaseStream.CopyTo(s);\r\n                                            }\r\n                                        },\r\n                               \\nContentType = contentType\r\n                           });", span="139-152"];
m15_37 [cluster="lambda expression", file="RestRequest.cs", label="StreamReader file = new StreamReader( new FileStream(path, FileMode.Open))", span="146-146"];
m15_32 [cluster="System.IO.FileInfo.FileInfo(string)", file="RestRequest.cs", label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0"];
m15_29 [cluster="RestSharp.RestRequest.AddFile(string, string, string)", file="RestRequest.cs", label="long fileLength = f.Length", span="137-137"];
m15_34 [cluster="System.IO.Path.GetFileName(string)", file="RestRequest.cs", label="Entry System.IO.Path.GetFileName(string)", span="0-0"];
m15_31 [cluster="RestSharp.RestRequest.AddFile(string, string, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddFile(string, string, string)", span="134-134"];
m15_33 [cluster="RestSharp.FileParameter.FileParameter()", file="RestRequest.cs", label="Entry RestSharp.FileParameter.FileParameter()", span="8-8"];
m15_38 [cluster="lambda expression", file="RestRequest.cs", label="file.BaseStream.CopyTo(s)", span="148-148"];
m15_96 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="Type type = obj.GetType()", span="322-322"];
m15_99 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="bool isAllowed = includedProperties.Length == 0 ||\r\n                                 (includedProperties.Length > 0 && includedProperties.Contains(\\nprop.Name))", span="327-328"];
m15_97 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="PropertyInfo[] props = type.GetProperties()", span="323-323"];
m15_113 [cluster="object.GetType()", file="RestRequest.cs", label="Entry object.GetType()", span="0-0"];
m15_98 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label=props, span="325-325"];
m15_114 [cluster="System.Type.GetProperties()", file="RestRequest.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m15_101 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="Type propType = prop.PropertyType", span="335-335"];
m15_110 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="this.AddParameter(prop.Name, val)", span="370-370"];
m15_111 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="return this;", span="373-373"];
m15_100 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="!isAllowed", span="330-330"];
m15_115 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="RestRequest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m15_104 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="propType.IsArray", span="343-343"];
m15_105 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="Type elementType = propType.GetElementType()", span="345-345"];
m15_116 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="RestRequest.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m15_103 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="val == null", span="338-338"];
m15_106 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="((Array) val).Length > 0 &&\r\n                        elementType != null &&\r\n                        (elementType.IsPrimitive || \\nelementType.IsValueType || elementType == typeof(string))", span="348-350"];
m15_107 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="string[] values = (from object item in ((Array) val)\r\n                                           select item.ToString()).ToArray<\\nstring>()", span="358-359"];
m15_109 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="val = string.Join('','', (string[]) val)", span="366-366"];
m15_117 [cluster="System.Type.GetElementType()", file="RestRequest.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m15_118 [cluster="object.ToString()", file="RestRequest.cs", label="Entry object.ToString()", span="0-0"];
m15_108 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="val = string.Join('','', values)", span="361-361"];
m15_120 [cluster="string.Join(string, params string[])", file="RestRequest.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m15_112 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddObject(object, params string[])", span="319-319"];
m15_138 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddHeader(string, string)", span="466-466"];
m15_139 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file="RestRequest.cs", label="string portSplit = @'':\d+''", span="469-469"];
m15_141 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file="RestRequest.cs", label="name == ''Host'' && invalidHost(value)", span="473-473"];
m15_143 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file="RestRequest.cs", label="return this.AddParameter(name, value, ParameterType.HttpHeader);", span="478-478"];
m15_140 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file="RestRequest.cs", label="Func<string, bool> invalidHost =\r\n                host => Uri.CheckHostName(Regex.Split(host, portSplit)[0]) == UriHostNameType.Unknown", span="470-471"];
m15_148 [cluster="lambda expression", color=green, community=0, file="RestRequest.cs", label="Uri.CheckHostName(Regex.Split(host, portSplit)[0]) == UriHostNameType.Unknown", prediction=64, span="471-471"];
m15_145 [cluster="System.Func<T, TResult>.Invoke(T)", file="RestRequest.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m15_142 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file="RestRequest.cs", label="throw new ArgumentException(''The specified value is not a valid Host header string.'', ''value'');", span="475-475"];
m15_144 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddHeader(string, string)", span="466-466"];
m15_146 [cluster="System.ArgumentException.ArgumentException(string, string)", file="RestRequest.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m15_164 [cluster="RestSharp.RestRequest.IncreaseNumAttempts()", file="RestRequest.cs", label="Entry RestSharp.RestRequest.IncreaseNumAttempts()", span="607-607"];
m15_165 [cluster="RestSharp.RestRequest.IncreaseNumAttempts()", file="RestRequest.cs", label="this.Attempts++", span="609-609"];
m15_166 [cluster="RestSharp.RestRequest.IncreaseNumAttempts()", file="RestRequest.cs", label="Exit RestSharp.RestRequest.IncreaseNumAttempts()", span="607-607"];
m15_135 [cluster="RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", span="449-449"];
m15_136 [cluster="RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", file="RestRequest.cs", label="return this.AddParameter(new Parameter\r\n                                     {\r\n                                         Name = \\nname,\r\n                                         Value = value,\r\n                                         ContentType = contentType,\r\n                                         \\nType = type\r\n                                     });", span="451-457"];
m15_137 [cluster="RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", span="449-449"];
m15_17 [cluster="RestSharp.RestRequest.RestRequest(string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.RestRequest(string)", span="94-94"];
m15_18 [cluster="RestSharp.RestRequest.RestRequest(string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.RestRequest(string)", span="94-94"];
m15_54 [cluster="RestSharp.RestRequest.AddFileBytes(string, byte[], string, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddFileBytes(string, byte[], string, string)", span="204-204"];
m15_55 [cluster="RestSharp.RestRequest.AddFileBytes(string, byte[], string, string)", file="RestRequest.cs", label="long length = bytes.Length", span="206-206"];
m15_56 [cluster="RestSharp.RestRequest.AddFileBytes(string, byte[], string, string)", file="RestRequest.cs", label="return this.AddFile(new FileParameter\r\n                                {\r\n                                    Name = name,\r\n                                    \\nFileName = filename,\r\n                                    ContentLength = length,\r\n                                    ContentType = \\ncontentType,\r\n                                    Writer = s =>\r\n                                             {\r\n                                                 \\nusing (StreamReader file = new StreamReader(new MemoryStream(bytes)))\r\n                                                 {\r\n                                                     \\nfile.BaseStream.CopyTo(s);\r\n                                                 }\r\n                                             }\r\n                                });", span="208-221"];
m15_59 [cluster="lambda expression", file="RestRequest.cs", label="StreamReader file = new StreamReader(new MemoryStream(bytes))", span="216-216"];
m15_57 [cluster="RestSharp.RestRequest.AddFileBytes(string, byte[], string, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddFileBytes(string, byte[], string, string)", span="204-204"];
m15_60 [cluster="lambda expression", file="RestRequest.cs", label="file.BaseStream.CopyTo(s)", span="218-218"];
m15_161 [cluster="RestSharp.RestRequest.AddQueryParameter(string, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddQueryParameter(string, string)", span="520-520"];
m15_162 [cluster="RestSharp.RestRequest.AddQueryParameter(string, string)", file="RestRequest.cs", label="return this.AddParameter(name, value, ParameterType.QueryString);", span="522-522"];
m15_163 [cluster="RestSharp.RestRequest.AddQueryParameter(string, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddQueryParameter(string, string)", span="520-520"];
m15_133 [cluster="RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="RestRequest.cs", label="return this.AddParameter(new Parameter\r\n                                     {\r\n                                         Name = \\nname,\r\n                                         Value = value,\r\n                                         Type = type\r\n                                     });", span="429-434"];
m15_155 [cluster="RestSharp.RestRequest.AddUrlSegment(string, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddUrlSegment(string, string)", span="498-498"];
m15_156 [cluster="RestSharp.RestRequest.AddUrlSegment(string, string)", file="RestRequest.cs", label="return this.AddParameter(name, value, ParameterType.UrlSegment);", span="500-500"];
m15_134 [cluster="RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="427-427"];
m15_88 [cluster="RestSharp.RestRequest.AddXmlBody(object)", file="RestRequest.cs", label="this.RequestFormat = DataFormat.Xml", span="291-291"];
m15_89 [cluster="RestSharp.RestRequest.AddXmlBody(object)", file="RestRequest.cs", label="return this.AddBody(obj, '''');", span="293-293"];
m15_90 [cluster="RestSharp.RestRequest.AddXmlBody(object)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddXmlBody(object)", span="289-289"];
m15_43 [cluster="RestSharp.RestRequest.AddFile(string, byte[], string, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddFile(string, byte[], string, string)", span="163-163"];
m15_44 [cluster="RestSharp.RestRequest.AddFile(string, byte[], string, string)", file="RestRequest.cs", label="return this.AddFile(FileParameter.Create(name, bytes, fileName, contentType));", span="165-165"];
m15_46 [cluster="RestSharp.FileParameter.Create(string, byte[], string, string)", file="RestRequest.cs", label="Entry RestSharp.FileParameter.Create(string, byte[], string, string)", span="18-18"];
m15_45 [cluster="RestSharp.RestRequest.AddFile(string, byte[], string, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddFile(string, byte[], string, string)", span="163-163"];
m15_84 [cluster="RestSharp.RestRequest.AddJsonBody(object)", file="RestRequest.cs", label="this.RequestFormat = DataFormat.Json", span="279-279"];
m15_85 [cluster="RestSharp.RestRequest.AddJsonBody(object)", file="RestRequest.cs", label="return this.AddBody(obj, '''');", span="281-281"];
m15_86 [cluster="RestSharp.RestRequest.AddJsonBody(object)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddJsonBody(object)", span="277-277"];
m15_47 [cluster="RestSharp.RestRequest.AddFile(string, System.Action<System.IO.Stream>, string, long, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddFile(string, System.Action<System.IO.Stream>, string, long, string)", span="177-177"];
m15_48 [cluster="RestSharp.RestRequest.AddFile(string, System.Action<System.IO.Stream>, string, long, string)", file="RestRequest.cs", label="return this.AddFile(new FileParameter\r\n                                {\r\n                                    Name = name,\r\n                                    \\nWriter = writer,\r\n                                    FileName = fileName,\r\n                                    ContentLength = \\ncontentLength,\r\n                                    ContentType = contentType\r\n                                });", span="179-186"];
m15_49 [cluster="RestSharp.RestRequest.AddFile(string, System.Action<System.IO.Stream>, string, long, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddFile(string, System.Action<System.IO.Stream>, string, long, string)", span="177-177"];
m15_157 [cluster="RestSharp.RestRequest.AddUrlSegment(string, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddUrlSegment(string, string)", span="498-498"];
m15_12 [cluster="lambda expression", file="RestRequest.cs", label="Entry lambda expression", span="78-78"];
m15_13 [cluster="lambda expression", file="RestRequest.cs", label="Exit lambda expression", span="78-78"];
m15_151 [cluster="System.Uri.CheckHostName(string)", file="RestRequest.cs", label="Entry System.Uri.CheckHostName(string)", span="0-0"];
m15_150 [cluster="System.Text.RegularExpressions.Regex.Split(string, string)", file="RestRequest.cs", label="Entry System.Text.RegularExpressions.Regex.Split(string, string)", span="0-0"];
m15_149 [cluster="lambda expression", file="RestRequest.cs", label="Exit lambda expression", span="471-471"];
m15_36 [cluster="lambda expression", file="RestRequest.cs", label="Entry lambda expression", span="144-150"];
m15_40 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="RestRequest.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m15_41 [cluster="System.IO.FileStream.FileStream(string, System.IO.FileMode)", file="RestRequest.cs", label="Entry System.IO.FileStream.FileStream(string, System.IO.FileMode)", span="0-0"];
m15_42 [cluster="System.IO.Stream.CopyTo(System.IO.Stream)", file="RestRequest.cs", label="Entry System.IO.Stream.CopyTo(System.IO.Stream)", span="0-0"];
m15_39 [cluster="lambda expression", file="RestRequest.cs", label="Exit lambda expression", span="144-150"];
m15_58 [cluster="lambda expression", file="RestRequest.cs", label="Entry lambda expression", span="214-220"];
m15_62 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="RestRequest.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m15_61 [cluster="lambda expression", file="RestRequest.cs", label="Exit lambda expression", span="214-220"];
m15_147 [cluster="lambda expression", file="RestRequest.cs", label="Entry lambda expression", span="471-471"];
m17_59 [cluster="RestSharp.IntegrationTests.ResponseHandler.error(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="Entry RestSharp.IntegrationTests.ResponseHandler.error(System.Net.HttpListenerContext)", span="108-108"];
m17_60 [cluster="RestSharp.IntegrationTests.ResponseHandler.error(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="context.Response.StatusCode = 400", span="110-110"];
m17_61 [cluster="RestSharp.IntegrationTests.ResponseHandler.error(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="context.Response.Headers.Add(''Content-Type'', ''application/xml'')", span="111-111"];
m17_62 [cluster="RestSharp.IntegrationTests.ResponseHandler.error(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="context.Response.OutputStream.WriteStringUtf8(\r\n                @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<Response>\r\n    <\\nError>\r\n        <Message>Not found!</Message>\r\n    </Error>\r\n</Response>'')", span="112-118"];
m17_64 [cluster="System.Net.WebHeaderCollection.Add(string, string)", file="StatusCodeTests.cs", label="Entry System.Net.WebHeaderCollection.Add(string, string)", span="0-0"];
m17_65 [cluster="System.IO.Stream.WriteStringUtf8(string)", file="StatusCodeTests.cs", label="Entry System.IO.Stream.WriteStringUtf8(string)", span="7-7"];
m17_63 [cluster="RestSharp.IntegrationTests.ResponseHandler.error(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="Exit RestSharp.IntegrationTests.ResponseHandler.error(System.Net.HttpListenerContext)", span="108-108"];
m17_14 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error_With_Body()", file="StatusCodeTests.cs", label="Entry RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error_With_Body()", span="27-27"];
m17_15 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error_With_Body()", file="StatusCodeTests.cs", label="Uri baseUrl = new Uri(''http://localhost:8080/'')", span="29-29"];
m17_16 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error_With_Body()", file="StatusCodeTests.cs", label="SimpleServer.Create(baseUrl.AbsoluteUri, UrlToStatusCodeHandler)", span="31-31"];
m17_17 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error_With_Body()", file="StatusCodeTests.cs", label="RestClient client = new RestClient(baseUrl)", span="33-33"];
m17_8 [cluster="System.Uri.Uri(string)", file="StatusCodeTests.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m17_9 [cluster="RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", file="StatusCodeTests.cs", label="Entry RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", span="21-21"];
m17_18 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error_With_Body()", file="StatusCodeTests.cs", label="RestRequest request = new RestRequest(''404'')", span="34-34"];
m17_20 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error_With_Body()", file="StatusCodeTests.cs", label="IRestResponse response = client.Execute(request)", span="38-38"];
m17_10 [cluster="RestSharp.RestClient.RestClient(System.Uri)", file="StatusCodeTests.cs", label="Entry RestSharp.RestClient.RestClient(System.Uri)", span="165-165"];
m17_11 [cluster="RestSharp.RestRequest.RestRequest(string)", file="StatusCodeTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string)", span="94-94"];
m17_19 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error_With_Body()", file="StatusCodeTests.cs", label="request.AddBody(''This is the body'')", span="36-36"];
m17_23 [cluster="RestSharp.RestRequest.AddBody(object)", file="StatusCodeTests.cs", label="Entry RestSharp.RestRequest.AddBody(object)", span="267-267"];
m17_21 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error_With_Body()", file="StatusCodeTests.cs", label="Assert.AreEqual(HttpStatusCode.NotFound, response.StatusCode)", span="40-40"];
m17_22 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error_With_Body()", file="StatusCodeTests.cs", label="Exit RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error_With_Body()", span="27-27"];
m17_0 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error()", file="StatusCodeTests.cs", label="Entry RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error()", span="12-12"];
m17_1 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error()", file="StatusCodeTests.cs", label="Uri baseUrl = new Uri(''http://localhost:8080/'')", span="14-14"];
m17_2 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error()", file="StatusCodeTests.cs", label="SimpleServer.Create(baseUrl.AbsoluteUri, UrlToStatusCodeHandler)", span="16-16"];
m17_3 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error()", file="StatusCodeTests.cs", label="RestClient client = new RestClient(baseUrl)", span="18-18"];
m17_4 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error()", file="StatusCodeTests.cs", label="RestRequest request = new RestRequest(''404'')", span="19-19"];
m17_5 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error()", file="StatusCodeTests.cs", label="IRestResponse response = client.Execute(request)", span="20-20"];
m17_6 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error()", file="StatusCodeTests.cs", label="Assert.AreEqual(HttpStatusCode.NotFound, response.StatusCode)", span="22-22"];
m17_7 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error()", file="StatusCodeTests.cs", label="Exit RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error()", span="12-12"];
m17_66 [cluster="RestSharp.IntegrationTests.ResponseHandler.errorwithbody(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="Entry RestSharp.IntegrationTests.ResponseHandler.errorwithbody(System.Net.HttpListenerContext)", span="121-121"];
m17_67 [cluster="RestSharp.IntegrationTests.ResponseHandler.errorwithbody(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="context.Response.StatusCode = 400", span="123-123"];
m17_68 [cluster="RestSharp.IntegrationTests.ResponseHandler.errorwithbody(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="context.Response.Headers.Add(''Content-Type'', ''application/xml'')", span="124-124"];
m17_69 [cluster="RestSharp.IntegrationTests.ResponseHandler.errorwithbody(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="context.Response.OutputStream.WriteStringUtf8(\r\n                @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<Response>\r\n    <\\nError>\r\n        <Message>Not found!</Message>\r\n    </Error>\r\n</Response>'')", span="125-131"];
m17_70 [cluster="RestSharp.IntegrationTests.ResponseHandler.errorwithbody(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="Exit RestSharp.IntegrationTests.ResponseHandler.errorwithbody(System.Net.HttpListenerContext)", span="121-121"];
m17_71 [cluster="RestSharp.IntegrationTests.ResponseHandler.success(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="Entry RestSharp.IntegrationTests.ResponseHandler.success(System.Net.HttpListenerContext)", span="134-134"];
m17_72 [cluster="RestSharp.IntegrationTests.ResponseHandler.success(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="context.Response.OutputStream.WriteStringUtf8(\r\n                @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<Response>\r\n    <\\nSuccess>\r\n        <Message>Works!</Message>\r\n    </Success>\r\n</Response>'')", span="136-142"];
m17_73 [cluster="RestSharp.IntegrationTests.ResponseHandler.success(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="Exit RestSharp.IntegrationTests.ResponseHandler.success(System.Net.HttpListenerContext)", span="134-134"];
m17_29 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", file="StatusCodeTests.cs", label="Entry RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", span="50-50"];
m17_30 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", file="StatusCodeTests.cs", label="Uri baseUrl = new Uri(''http://localhost:8888/'')", span="52-52"];
m17_31 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", file="StatusCodeTests.cs", label="SimpleServer.Create(baseUrl.AbsoluteUri, Handlers.Generic<ResponseHandler>())", span="54-54"];
m17_32 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", file="StatusCodeTests.cs", label="RestClient client = new RestClient(baseUrl)", span="56-56"];
m17_39 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.Generic<T>()", file="StatusCodeTests.cs", label="Entry RestSharp.IntegrationTests.Helpers.Handlers.Generic<T>()", span="59-59"];
m17_33 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", file="StatusCodeTests.cs", label="RestRequest request = new RestRequest(''error'')\r\n                                      {\r\n                                          \\nRootElement = ''Success''\r\n                                      }", span="57-60"];
m17_35 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", file="StatusCodeTests.cs", label="IRestResponse<Response> response = client.Execute<Response>(request)", span="70-70"];
m17_34 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", file="StatusCodeTests.cs", label="request.OnBeforeDeserialization = resp =>\r\n                                                  {\r\n                                                      \\nif (resp.StatusCode == HttpStatusCode.BadRequest)\r\n                                                      {\r\n                                                          \\nrequest.RootElement = ''Error'';\r\n                                                      }\r\n                                                  }", span="62-68"];
m17_43 [cluster="lambda expression", file="StatusCodeTests.cs", label="request.RootElement = ''Error''", span="66-66"];
m17_42 [cluster="lambda expression", file="StatusCodeTests.cs", label="resp.StatusCode == HttpStatusCode.BadRequest", span="64-64"];
m17_36 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", file="StatusCodeTests.cs", label="Assert.AreEqual(HttpStatusCode.BadRequest, response.StatusCode)", span="72-72"];
m17_37 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", file="StatusCodeTests.cs", label="Assert.AreEqual(''Not found!'', response.Data.Message)", span="73-73"];
m17_38 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", file="StatusCodeTests.cs", label="Exit RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", span="50-50"];
m17_24 [cluster="RestSharp.IntegrationTests.StatusCodeTests.UrlToStatusCodeHandler(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="Entry RestSharp.IntegrationTests.StatusCodeTests.UrlToStatusCodeHandler(System.Net.HttpListenerContext)", span="44-44"];
m17_25 [cluster="RestSharp.IntegrationTests.StatusCodeTests.UrlToStatusCodeHandler(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="obj.Response.StatusCode = int.Parse(obj.Request.Url.Segments.Last())", span="46-46"];
m17_27 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="StatusCodeTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m17_28 [cluster="int.Parse(string)", file="StatusCodeTests.cs", label="Entry int.Parse(string)", span="0-0"];
m17_26 [cluster="RestSharp.IntegrationTests.StatusCodeTests.UrlToStatusCodeHandler(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="Exit RestSharp.IntegrationTests.StatusCodeTests.UrlToStatusCodeHandler(System.Net.HttpListenerContext)", span="44-44"];
m17_45 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", file="StatusCodeTests.cs", label="Entry RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", span="78-78"];
m17_46 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", file="StatusCodeTests.cs", label="Uri baseUrl = new Uri(''http://localhost:8888/'')", span="80-80"];
m17_47 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", file="StatusCodeTests.cs", label="SimpleServer.Create(baseUrl.AbsoluteUri, Handlers.Generic<ResponseHandler>())", span="82-82"];
m17_48 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", file="StatusCodeTests.cs", label="RestClient client = new RestClient(baseUrl)", span="84-84"];
m17_49 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", file="StatusCodeTests.cs", label="RestRequest request = new RestRequest(''success'')\r\n                                      {\r\n                                          \\nRootElement = ''Success''\r\n                                      }", span="85-88"];
m17_51 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", file="StatusCodeTests.cs", label="IRestResponse<Response> response = client.Execute<Response>(request)", span="98-98"];
m17_50 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", file="StatusCodeTests.cs", label="request.OnBeforeDeserialization = resp =>\r\n                                                  {\r\n                                                      \\nif (resp.StatusCode == HttpStatusCode.NotFound)\r\n                                                      {\r\n                                                          \\nrequest.RootElement = ''Error'';\r\n                                                      }\r\n                                                  }", span="90-96"];
m17_57 [cluster="lambda expression", file="StatusCodeTests.cs", label="request.RootElement = ''Error''", span="94-94"];
m17_56 [cluster="lambda expression", file="StatusCodeTests.cs", label="resp.StatusCode == HttpStatusCode.NotFound", span="92-92"];
m17_52 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", file="StatusCodeTests.cs", label="Assert.AreEqual(HttpStatusCode.OK, response.StatusCode)", span="100-100"];
m17_53 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", file="StatusCodeTests.cs", label="Assert.AreEqual(''Works!'', response.Data.Message)", span="101-101"];
m17_54 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", file="StatusCodeTests.cs", label="Exit RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", span="78-78"];
m17_41 [cluster="lambda expression", file="StatusCodeTests.cs", label="Entry lambda expression", span="62-68"];
m17_44 [cluster="lambda expression", file="StatusCodeTests.cs", label="Exit lambda expression", span="62-68"];
m17_55 [cluster="lambda expression", file="StatusCodeTests.cs", label="Entry lambda expression", span="90-96"];
m17_58 [cluster="lambda expression", file="StatusCodeTests.cs", label="Exit lambda expression", span="90-96"];
m18_0 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", span="12-12"];
m18_1 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="14-14"];
m18_2 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="request.AddParameter(''param2'', ''value2'')", span="16-16"];
m18_5 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="20-20"];
m18_8 [cluster="RestSharp.RestRequest.RestRequest()", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.RestRequest()", span="69-69"];
m18_9 [cluster="RestSharp.RestRequest.AddParameter(string, object)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.AddParameter(string, object)", span="406-406"];
m18_3 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com/resource?param1=value1'')", span="18-18"];
m18_4 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource?param1=value1&param2=value2'')", span="19-19"];
m18_10 [cluster="RestSharp.RestClient.RestClient(string)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestClient.RestClient(string)", span="174-174"];
m18_6 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="22-22"];
m18_11 [cluster="System.Uri.Uri(string)", file="UrlBuilderTests.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m18_12 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", span="313-313"];
m18_7 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", span="12-12"];
m18_163 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", span="250-250"];
m18_164 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/{baz}'')", span="252-252"];
m18_165 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="254-254"];
m18_166 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''baz'', ''bat'')", span="255-255"];
m18_169 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="259-259"];
m18_21 [cluster="RestSharp.RestRequest.RestRequest(string)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string)", span="94-94"];
m18_78 [cluster="RestSharp.RestRequest.AddUrlSegment(string, string)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.AddUrlSegment(string, string)", span="498-498"];
m18_167 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com/{foo}'')", span="257-257"];
m18_168 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/bar/resource/bat'')", span="258-258"];
m18_170 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="261-261"];
m18_171 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", span="250-250"];
m18_79 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", span="125-125"];
m18_80 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource/{foo}'', Method.GET)", span="127-127"];
m18_30 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", span="101-101"];
m18_81 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', null)", span="129-129"];
m18_83 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="ArgumentException exception = Assert.Throws<ArgumentException>(() => client.BuildUri(request))", span="132-132"];
m18_94 [cluster="lambda expression", file="UrlBuilderTests.cs", label="client.BuildUri(request)", span="132-132"];
m18_82 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com/api/1.0'')", span="131-131"];
m18_84 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="Assert.IsNotNull(exception)", span="134-134"];
m18_86 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="Assert.IsTrue(exception.Message.Contains(''foo''))", span="136-136"];
m18_93 [cluster="lambda expression", file="UrlBuilderTests.cs", label="Entry lambda expression", span="132-132"];
m18_90 [cluster="string.IsNullOrEmpty(string)", file="UrlBuilderTests.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m18_91 [cluster="string.Contains(string)", file="UrlBuilderTests.cs", label="Entry string.Contains(string)", span="0-0"];
m18_87 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", span="125-125"];
m18_31 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", span="48-48"];
m18_32 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource'')", span="50-50"];
m18_33 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="request.AddParameter(''foo'', ''bar'')", span="52-52"];
m18_36 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="56-56"];
m18_34 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="54-54"];
m18_35 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource?foo=bar'')", span="55-55"];
m18_22 [cluster="RestSharp.RestClient.RestClient(System.Uri)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestClient.RestClient(System.Uri)", span="165-165"];
m18_37 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="58-58"];
m18_38 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", span="48-48"];
m18_172 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Invalid_Url_string_throws_exception()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Invalid_Url_string_throws_exception()", span="265-265"];
m18_173 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Invalid_Url_string_throws_exception()", file="UrlBuilderTests.cs", label="Assert.Throws<UriFormatException>(delegate { new RestClient(''invalid url''); })", span="267-267"];
m18_174 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Invalid_Url_string_throws_exception()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Invalid_Url_string_throws_exception()", span="265-265"];
m18_175 [cluster="lambda expression", file="UrlBuilderTests.cs", label="Entry lambda expression", span="267-267"];
m18_146 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", span="221-221"];
m18_147 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="223-223"];
m18_148 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="225-225"];
m18_151 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="229-229"];
m18_149 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com/{foo}'')", span="227-227"];
m18_150 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/bar'')", span="228-228"];
m18_152 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="231-231"];
m18_153 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", span="221-221"];
m18_96 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", span="140-140"];
m18_97 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/{foo}'', Method.POST)", span="142-142"];
m18_98 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="144-144"];
m18_101 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="148-148"];
m18_99 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="146-146"];
m18_100 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource/bar'')", span="147-147"];
m18_102 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="150-150"];
m18_103 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", span="140-140"];
m18_23 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", span="37-37"];
m18_24 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource'', Method.POST)", span="39-39"];
m18_25 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="40-40"];
m18_27 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="42-42"];
m18_26 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource'')", span="41-41"];
m18_28 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="44-44"];
m18_29 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", span="37-37"];
m18_104 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", span="154-154"];
m18_105 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="156-156"];
m18_106 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="157-157"];
m18_108 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="159-159"];
m18_107 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/'')", span="158-158"];
m18_109 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="161-161"];
m18_110 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", span="154-154"];
m18_56 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", span="89-89"];
m18_57 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/foo'')", span="91-91"];
m18_58 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="92-92"];
m18_60 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="94-94"];
m18_59 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource/foo'')", span="93-93"];
m18_61 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="96-96"];
m18_62 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", span="89-89"];
m18_127 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", span="190-190"];
m18_128 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''v1/people/~/network/updates'', Method.GET)", span="192-192"];
m18_129 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="request.AddParameter(''type'', ''STAT'')", span="194-194"];
m18_130 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="request.AddParameter(''type'', ''PICT'')", span="195-195"];
m18_131 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="request.AddParameter(''count'', ''50'')", span="196-196"];
m18_132 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="request.AddParameter(''start'', ''50'')", span="197-197"];
m18_135 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="201-201"];
m18_133 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://api.linkedin.com'')", span="199-199"];
m18_134 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://api.linkedin.com/v1/people/~/network/updates?type=STAT&type=PICT&count=50&start=50'')", span="200-200"];
m18_136 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="203-203"];
m18_137 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", span="190-190"];
m18_138 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", span="207-207"];
m18_139 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="209-209"];
m18_140 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="211-211"];
m18_143 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="215-215"];
m18_141 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com/{foo}''))", span="213-213"];
m18_142 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/bar'')", span="214-214"];
m18_144 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="217-217"];
m18_145 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", span="207-207"];
m18_39 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", span="62-62"];
m18_40 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource/'')", span="64-64"];
m18_41 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com'')", span="65-65"];
m18_42 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="request.AddParameter(''foo'', ''bar'')", span="67-67"];
m18_44 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="70-70"];
m18_45 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="client.Execute(request)", span="72-72"];
m18_43 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource/?foo=bar'')", span="69-69"];
m18_46 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="74-74"];
m18_47 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", span="62-62"];
m18_154 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", span="235-235"];
m18_155 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/{baz}'')", span="237-237"];
m18_156 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="239-239"];
m18_157 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''baz'', ''bat'')", span="240-240"];
m18_160 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="244-244"];
m18_158 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com/{foo}''))", span="242-242"];
m18_159 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/bar/resource/bat'')", span="243-243"];
m18_161 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="246-246"];
m18_162 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", span="235-235"];
m18_70 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", span="111-111"];
m18_71 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/{foo}'')", span="113-113"];
m18_72 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="115-115"];
m18_75 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="119-119"];
m18_73 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="117-117"];
m18_74 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource/bar'')", span="118-118"];
m18_76 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="121-121"];
m18_77 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", span="111-111"];
m18_118 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", span="176-176"];
m18_119 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource'', Method.POST)", span="178-178"];
m18_120 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddParameter(''foo'', ''bar'', ParameterType.QueryString)", span="180-180"];
m18_123 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="184-184"];
m18_126 [cluster="RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="427-427"];
m18_121 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com'')", span="182-182"];
m18_122 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource?foo=bar'')", span="183-183"];
m18_124 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="186-186"];
m18_125 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", span="176-176"];
m18_63 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", span="100-100"];
m18_64 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/foo'', Method.POST)", span="102-102"];
m18_65 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="103-103"];
m18_67 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="105-105"];
m18_66 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource/foo'')", span="104-104"];
m18_68 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="107-107"];
m18_69 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", span="100-100"];
m18_111 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", span="165-165"];
m18_112 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="167-167"];
m18_113 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="168-168"];
m18_115 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="170-170"];
m18_114 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/'')", span="169-169"];
m18_116 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="172-172"];
m18_117 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", span="165-165"];
m18_49 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", span="78-78"];
m18_50 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource'', Method.POST)", span="80-80"];
m18_51 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="81-81"];
m18_53 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="83-83"];
m18_52 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource'')", span="82-82"];
m18_54 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="85-85"];
m18_55 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", span="78-78"];
m18_14 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", span="26-26"];
m18_15 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource'')", span="28-28"];
m18_16 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="29-29"];
m18_18 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="31-31"];
m18_17 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource'')", span="30-30"];
m18_19 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="33-33"];
m18_20 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", span="26-26"];
m18_95 [cluster="lambda expression", file="UrlBuilderTests.cs", label="Exit lambda expression", span="132-132"];
m18_176 [cluster="lambda expression", file="UrlBuilderTests.cs", label="new RestClient(''invalid url'')", span="267-267"];
m18_177 [cluster="lambda expression", file="UrlBuilderTests.cs", label="Exit lambda expression", span="267-267"];
m19_165 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", span="450-450"];
m19_221 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="object item", span="452-452"];
m19_222 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="t == typeof(string)", span="454-454"];
m19_223 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="item = element.Value", span="456-456"];
m19_224 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="t.IsPrimitive", span="459-459"];
m19_225 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="item = element.Value.ChangeType(t, this.Culture)", span="464-464"];
m19_226 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="item = Activator.CreateInstance(t)", span="468-468"];
m19_227 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="this.Map(item, element)", span="469-469"];
m19_145 [cluster="RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", span="373-373"];
m19_176 [cluster="RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", file="XmlDeserializer.cs", label="elements.Select(element => this.CreateAndMap(t, element))", span="375-375"];
m19_53 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="Type type = prop.PropertyType", span="118-118"];
m19_131 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="XElement element = this.GetElementByName(root, name)", span="334-334"];
m19_228 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="return item;", span="472-472"];
m19_143 [cluster="System.Activator.CreateInstance(System.Type)", file="XmlDeserializer.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m19_30 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", span="111-111"];
m19_229 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", span="450-450"];
m19_29 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", span="381-381"];
m19_183 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="Type t = type.IsGenericType\r\n                ? type.GetGenericArguments()[0]\r\n                : type.BaseType.GetGenericArguments()[\\n0]", span="384-386"];
m19_184 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="IList list = (IList) Activator.CreateInstance(type)", span="392-392"];
m19_185 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="IList<XElement> elements = root.Descendants(t.Name.AsNamespaced(this.Namespace))\r\n                                           .ToList()", span="393-394"];
m19_192 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="elements = root.Descendants(lowerName).ToList()", span="407-407"];
m19_195 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="elements = root.Descendants(camelName).ToList()", span="414-414"];
m19_197 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="elements = root.Descendants()\r\n                               .Where(e => e.Name.LocalName.RemoveUnderscoresAndDashes() == name)\r\n                               \\n.ToList()", span="419-421"];
m19_200 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="elements = root.Descendants()\r\n                               .Where(e => e.Name.LocalName.RemoveUnderscoresAndDashes() == lowerName)\r\n                               \\n.ToList()", span="428-430"];
m19_202 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="!type.IsGenericType", span="438-438"];
m19_203 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="this.Map(list, root.Element(propName.AsNamespaced(this.Namespace)) ?? root)", span="443-443"];
m19_7 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="XElement root = doc.Root", span="57-57"];
m19_13 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="Type objType = x.GetType()", span="71-71"];
m19_186 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="string name = t.Name", span="395-395"];
m19_187 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="DeserializeAsAttribute attribute = t.GetAttribute<DeserializeAsAttribute>()", span="396-396"];
m19_201 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="this.PopulateListFromElements(t, elements, list)", span="433-433"];
m19_141 [cluster="System.Type.GetGenericArguments()", file="XmlDeserializer.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m19_204 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="return list;", span="447-447"];
m19_22 [cluster="string.AsNamespaced(string)", file="XmlDeserializer.cs", label="Entry string.AsNamespaced(string)", span="33-33"];
m19_190 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="!elements.Any()", span="403-403"];
m19_193 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="!elements.Any()", span="410-410"];
m19_196 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="!elements.Any()", span="417-417"];
m19_198 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="!elements.Any()", span="424-424"];
m19_191 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="XName lowerName = name.ToLower().AsNamespaced(this.Namespace)", span="405-405"];
m19_194 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="XName camelName = name.ToCamelCase(this.Culture).AsNamespaced(this.Namespace)", span="412-412"];
m19_199 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="XName lowerName = name.ToLower().AsNamespaced(this.Namespace)", span="426-426"];
m19_215 [cluster="lambda expression", file="XmlDeserializer.cs", label="e.Name.LocalName.RemoveUnderscoresAndDashes() == name", span="420-420"];
m19_188 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="attribute != null", span="398-398"];
m19_189 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="name = attribute.Name", span="400-400"];
m19_208 [cluster="System.Type.GetAttribute<T>()", file="XmlDeserializer.cs", label="Entry System.Type.GetAttribute<T>()", span="54-54"];
m19_209 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="XmlDeserializer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m19_149 [cluster="string.ToLower()", file="XmlDeserializer.cs", label="Entry string.ToLower()", span="0-0"];
m19_210 [cluster="string.ToCamelCase(System.Globalization.CultureInfo)", file="XmlDeserializer.cs", label="Entry string.ToCamelCase(System.Globalization.CultureInfo)", span="318-318"];
m19_214 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="420-420"];
m19_219 [cluster="lambda expression", file="XmlDeserializer.cs", label="e.Name.LocalName.RemoveUnderscoresAndDashes() == lowerName", span="429-429"];
m19_218 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="429-429"];
m19_205 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", span="381-381"];
m19_140 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", span="475-475"];
m19_231 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="object val = null", span="477-477"];
m19_232 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="root != null", span="479-479"];
m19_233 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="XElement element = this.GetElementByName(root, name)", span="481-481"];
m19_235 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="XAttribute attribute = this.GetAttributeByName(root, name)", span="485-485"];
m19_52 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label=props, span="116-116"];
m19_56 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="XName name", span="130-130"];
m19_240 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="return val;", span="501-501"];
m19_234 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="element == null", span="483-483"];
m19_238 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="!element.IsEmpty || element.HasElements || element.HasAttributes", span="494-494"];
m19_239 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="val = element.Value", span="496-496"];
m19_163 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", span="504-504"];
m19_236 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="attribute != null", span="487-487"];
m19_237 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="val = attribute.Value", span="489-489"];
m19_242 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", span="538-538"];
m19_241 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", span="475-475"];
m19_0 [cluster="RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", span="44-44"];
m19_1 [cluster="RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", file="XmlDeserializer.cs", label="this.Culture = CultureInfo.InvariantCulture", span="46-46"];
m19_2 [cluster="RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", span="44-44"];
m19_25 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", span="85-85"];
m19_31 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="xdoc.Root != null", span="87-87"];
m19_32 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="xdoc.Root.DescendantsAndSelf()", span="89-89"];
m19_6 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="XDocument doc = XDocument.Parse(response.Content)", span="56-56"];
m19_37 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", span="85-85"];
m19_33 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="e.Name.Namespace != XNamespace.None", span="91-91"];
m19_34 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="e.Name = XNamespace.None.GetName(e.Name.LocalName)", span="93-93"];
m19_35 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="e.Attributes()\r\n                         .Any(a => a.IsNamespaceDeclaration || a.Name.Namespace != XNamespace.None)", span="96-97"];
m19_36 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="e.ReplaceAttributes(\r\n                            e.Attributes()\r\n                             .Select(a => a.IsNamespaceDeclaration\r\n                                 ? \\nnull\r\n                                 : a.Name.Namespace != XNamespace.None\r\n                                     ? new XAttribute(\\nXNamespace.None.GetName(a.Name.LocalName), a.Value)\r\n                                     : a))", span="99-105"];
m19_43 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="97-97"];
m19_46 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="101-105"];
m19_273 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file="XmlDeserializer.cs", label="List<XName> names = new List<XName>\r\n                                {\r\n                                    name.LocalName,\r\n                                    \\nname.LocalName.ToLower()\r\n                                        .AsNamespaced(name.NamespaceName),\r\n                                    \\nname.LocalName.ToCamelCase(this.Culture)\r\n                                        .AsNamespaced(name.NamespaceName)\r\n                                }", span="540-547"];
m19_274 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file="XmlDeserializer.cs", label="return root.DescendantsAndSelf()\r\n                       .OrderBy(d => d.Ancestors().Count())\r\n                       .Attributes()\r\n                       \\n.FirstOrDefault(d => names.Contains(d.Name.LocalName.RemoveUnderscoresAndDashes()));", span="549-552"];
m19_276 [cluster="System.Collections.Generic.List<T>.List()", file="XmlDeserializer.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m19_281 [cluster="lambda expression", file="XmlDeserializer.cs", label="names.Contains(d.Name.LocalName.RemoveUnderscoresAndDashes())", span="552-552"];
m19_275 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", span="538-538"];
m19_277 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="550-550"];
m19_280 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="552-552"];
m19_3 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", span="49-49"];
m19_4 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="string.IsNullOrEmpty(response.Content)", span="51-51"];
m19_12 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="T x = Activator.CreateInstance<T>()", span="70-70"];
m19_19 [cluster="string.IsNullOrEmpty(string)", file="XmlDeserializer.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m19_5 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="return default(T);", span="53-53"];
m19_18 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", span="49-49"];
m19_8 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="this.RootElement.HasValue() && doc.Root != null", span="59-59"];
m19_9 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="root = doc.Root.DescendantsAndSelf(this.RootElement.AsNamespaced(this.Namespace)).SingleOrDefault()", span="61-61"];
m19_11 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="RemoveNamespace(doc)", span="67-67"];
m19_15 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="x = (T) this.HandleListDerivative(root, objType.Name, objType)", span="75-75"];
m19_16 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="x = (T) this.Map(x, root)", span="79-79"];
m19_21 [cluster="string.HasValue()", file="XmlDeserializer.cs", label="Entry string.HasValue()", span="100-100"];
m19_10 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="!this.Namespace.HasValue()", span="65-65"];
m19_26 [cluster="System.Activator.CreateInstance<T>()", file="XmlDeserializer.cs", label="Entry System.Activator.CreateInstance<T>()", span="0-0"];
m19_27 [cluster="object.GetType()", file="XmlDeserializer.cs", label="Entry object.GetType()", span="0-0"];
m19_14 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="objType.IsSubclassOfRawGeneric(typeof(List<>))", span="73-73"];
m19_28 [cluster="System.Type.IsSubclassOfRawGeneric(System.Type)", file="XmlDeserializer.cs", label="Entry System.Type.IsSubclassOfRawGeneric(System.Type)", span="70-70"];
m19_17 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="return x;", span="82-82"];
m19_158 [cluster="RestSharp.Deserializers.XmlDeserializer.TryGetFromString(string, out object, System.Type)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.TryGetFromString(string, out object, System.Type)", span="350-350"];
m19_166 [cluster="RestSharp.Deserializers.XmlDeserializer.TryGetFromString(string, out object, System.Type)", file="XmlDeserializer.cs", label="TypeConverter converter = TypeDescriptor.GetConverter(type)", span="354-354"];
m19_168 [cluster="RestSharp.Deserializers.XmlDeserializer.TryGetFromString(string, out object, System.Type)", file="XmlDeserializer.cs", label="result = (converter.ConvertFromInvariantString(inputString))", span="358-358"];
m19_169 [cluster="RestSharp.Deserializers.XmlDeserializer.TryGetFromString(string, out object, System.Type)", file="XmlDeserializer.cs", label="return true;", span="360-360"];
m19_171 [cluster="RestSharp.Deserializers.XmlDeserializer.TryGetFromString(string, out object, System.Type)", file="XmlDeserializer.cs", label="return false;", span="365-365"];
m19_93 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="string toConvert = value.ToString()", span="239-239"];
m19_99 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="object result", span="252-252"];
m19_127 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="object result", span="323-323"];
m19_173 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="XmlDeserializer.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m19_167 [cluster="RestSharp.Deserializers.XmlDeserializer.TryGetFromString(string, out object, System.Type)", file="XmlDeserializer.cs", label="converter.CanConvertFrom(typeof(string))", span="356-356"];
m19_174 [cluster="System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)", file="XmlDeserializer.cs", label="Entry System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)", span="0-0"];
m19_170 [cluster="RestSharp.Deserializers.XmlDeserializer.TryGetFromString(string, out object, System.Type)", file="XmlDeserializer.cs", label="result = null", span="363-363"];
m19_175 [cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="XmlDeserializer.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0"];
m19_172 [cluster="RestSharp.Deserializers.XmlDeserializer.TryGetFromString(string, out object, System.Type)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.TryGetFromString(string, out object, System.Type)", span="350-350"];
m19_243 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="XName lowerName = name.LocalName.ToLower().AsNamespaced(name.NamespaceName)", span="506-506"];
m19_244 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="XName camelName = name.LocalName.ToCamelCase(this.Culture).AsNamespaced(name.NamespaceName)", span="507-507"];
m19_245 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="root.Element(name) != null", span="509-509"];
m19_246 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="return root.Element(name);", span="511-511"];
m19_247 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="root.Element(lowerName) != null", span="514-514"];
m19_248 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="return root.Element(lowerName);", span="516-516"];
m19_249 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="root.Element(camelName) != null", span="519-519"];
m19_250 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="return root.Element(camelName);", span="521-521"];
m19_252 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="return root;", span="526-526"];
m19_253 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="return root.Descendants()\r\n                       .OrderBy(d => d.Ancestors().Count())\r\n                       .FirstOrDefault(\\nd => d.Name.LocalName.RemoveUnderscoresAndDashes() == name.LocalName) ??\r\n                   root.Descendants()\r\n                       \\n.OrderBy(d => d.Ancestors().Count())\r\n                       .FirstOrDefault(d => d.Name.LocalName.RemoveUnderscoresAndDashes() == \\nname.LocalName.ToLower());", span="530-535"];
m19_265 [cluster="lambda expression", file="XmlDeserializer.cs", label="d.Name.LocalName.RemoveUnderscoresAndDashes() == name.LocalName", span="532-532"];
m19_271 [cluster="lambda expression", file="XmlDeserializer.cs", label="d.Name.LocalName.RemoveUnderscoresAndDashes() == name.LocalName.ToLower()", span="535-535"];
m19_254 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", span="504-504"];
m19_259 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="531-531"];
m19_264 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="532-532"];
m19_267 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="534-534"];
m19_270 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="535-535"];
m19_177 [cluster="RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", file="XmlDeserializer.cs", label="list.Add(item)", span="377-377"];
m19_65 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="Type genericType = type.GetGenericArguments()[0]", span="161-161"];
m19_67 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="IList list = (IList) Activator.CreateInstance(type)", span="163-163"];
m19_69 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="IEnumerable<XElement> elements = root.Elements(first.Name)", span="167-167"];
m19_115 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="Type t = type.GetGenericArguments()[0]", span="294-294"];
m19_116 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="IList list = (IList) Activator.CreateInstance(type)", span="295-295"];
m19_121 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="IEnumerable<XElement> elements = container.Elements(first.Name)", span="304-304"];
m19_181 [cluster="lambda expression", file="XmlDeserializer.cs", label="this.CreateAndMap(t, element)", span="375-375"];
m19_178 [cluster="RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", span="373-373"];
m19_180 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="375-375"];
m19_179 [cluster="System.Collections.IList.Add(object)", file="XmlDeserializer.cs", label="Entry System.Collections.IList.Add(object)", span="0-0"];
m19_50 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="Type objType = x.GetType()", span="113-113"];
m19_62 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="object value = this.GetValueFromXml(root, name, prop)", span="150-150"];
m19_66 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="XElement first = this.GetElementByName(root, genericType.Name)", span="162-162"];
m19_68 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="first != null && root != null", span="165-165"];
m19_71 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, list, null)", span="172-172"];
m19_74 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, null, null)", span="187-187"];
m19_78 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, XmlConvert.ToBoolean(toConvert), null)", span="199-199"];
m19_80 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, value.ChangeType(type, this.Culture), null)", span="207-207"];
m19_83 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, converted, null)", span="217-217"];
m19_86 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, uri, null)", span="223-223"];
m19_88 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, value, null)", span="227-227"];
m19_91 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, value, null)", span="235-235"];
m19_97 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, deserialisedValue, null)", span="248-248"];
m19_101 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, result, null)", span="256-256"];
m19_103 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, deserialisedValue, null)", span="262-262"];
m19_106 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, value, null)", span="270-270"];
m19_110 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, value, null)", span="280-280"];
m19_113 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, timeSpan, null)", span="286-286"];
m19_117 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="XElement container = this.GetElementByName(root, prop.Name.AsNamespaced(this.Namespace))", span="296-296"];
m19_123 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, list, null)", span="310-310"];
m19_125 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="object list = this.HandleListDerivative(root, prop.Name, type)", span="316-316"];
m19_126 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, list, null)", span="318-318"];
m19_129 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, result, null)", span="327-327"];
m19_130 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="root != null", span="332-332"];
m19_134 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, item, null)", span="340-340"];
m19_135 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="return x;", span="347-347"];
m19_51 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="PropertyInfo[] props = objType.GetProperties()", span="114-114"];
m19_137 [cluster="System.Type.GetProperties()", file="XmlDeserializer.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m19_55 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="!typeIsPublic || !prop.CanWrite", span="125-125"];
m19_57 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="object[] attributes = prop.GetCustomAttributes(typeof(DeserializeAsAttribute), false)", span="132-132"];
m19_61 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="name = prop.Name.AsNamespaced(this.Namespace)", span="147-147"];
m19_54 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="bool typeIsPublic = type.IsPublic || type.IsNestedPublic", span="120-120"];
m19_64 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type.IsGenericType", span="156-156"];
m19_72 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>)", span="179-179"];
m19_75 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type = type.GetGenericArguments()[0]", span="191-191"];
m19_76 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type == typeof(bool)", span="194-194"];
m19_79 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type.IsPrimitive", span="202-202"];
m19_81 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type.IsEnum", span="210-210"];
m19_82 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="object converted = type.FindEnumValue(value.ToString(), this.Culture)", span="215-215"];
m19_84 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type == typeof(Uri)", span="219-219"];
m19_87 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type == typeof(string)", span="225-225"];
m19_89 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type == typeof(DateTime)", span="229-229"];
m19_92 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type == typeof(DateTimeOffset)", span="237-237"];
m19_100 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="TryGetFromString(toConvert, out result, type)", span="254-254"];
m19_104 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type == typeof(decimal)", span="267-267"];
m19_107 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type == typeof(Guid)", span="272-272"];
m19_111 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type == typeof(TimeSpan)", span="282-282"];
m19_114 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type.IsGenericType", span="289-289"];
m19_124 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type.IsSubclassOfRawGeneric(typeof(List<>))", span="312-312"];
m19_128 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="TryGetFromString(value.ToString(), out result, type)", span="325-325"];
m19_133 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="object item = this.CreateAndMap(type, element)", span="338-338"];
m19_138 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="XmlDeserializer.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m19_58 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="attributes.Length > 0", span="134-134"];
m19_59 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="DeserializeAsAttribute attribute = (DeserializeAsAttribute) attributes.First()", span="141-141"];
m19_139 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="XmlDeserializer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m19_60 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="name = attribute.Name.AsNamespaced(this.Namespace)", span="143-143"];
m19_63 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="value == null", span="152-152"];
m19_73 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="string.IsNullOrEmpty(value.ToString())", span="185-185"];
m19_77 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="string toConvert = value.ToString()\r\n                                            .ToLower()", span="196-197"];
m19_85 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="Uri uri = new Uri(value.ToString(), UriKind.RelativeOrAbsolute)", span="221-221"];
m19_90 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="value = this.DateFormat.HasValue()\r\n                        ? DateTime.ParseExact(value.ToString(), this.DateFormat, this.Culture)\r\n                        : \\nDateTime.Parse(value.ToString(), this.Culture)", span="231-233"];
m19_105 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="value = decimal.Parse(value.ToString(), this.Culture)", span="269-269"];
m19_108 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="string raw = value.ToString()", span="274-274"];
m19_109 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="value = string.IsNullOrEmpty(raw)\r\n                        ? Guid.Empty\r\n                        : new Guid(value.ToString())", span="276-278"];
m19_112 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="TimeSpan timeSpan = XmlConvert.ToTimeSpan(value.ToString())", span="284-284"];
m19_70 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="this.PopulateListFromElements(genericType, elements, list)", span="169-169"];
m19_146 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="XmlDeserializer.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m19_147 [cluster="System.Type.GetGenericTypeDefinition()", file="XmlDeserializer.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m19_148 [cluster="object.ToString()", file="XmlDeserializer.cs", label="Entry object.ToString()", span="0-0"];
m19_152 [cluster="object.ChangeType(System.Type, System.Globalization.CultureInfo)", file="XmlDeserializer.cs", label="Entry object.ChangeType(System.Type, System.Globalization.CultureInfo)", span="107-107"];
m19_153 [cluster="System.Type.FindEnumValue(string, System.Globalization.CultureInfo)", file="XmlDeserializer.cs", label="Entry System.Type.FindEnumValue(string, System.Globalization.CultureInfo)", span="124-124"];
m19_154 [cluster="System.Uri.Uri(string, System.UriKind)", file="XmlDeserializer.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m19_156 [cluster="System.DateTime.Parse(string, System.IFormatProvider)", file="XmlDeserializer.cs", label="Entry System.DateTime.Parse(string, System.IFormatProvider)", span="0-0"];
m19_155 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="XmlDeserializer.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m19_94 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="!string.IsNullOrEmpty(toConvert)", span="241-241"];
m19_96 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="deserialisedValue = XmlConvert.ToDateTimeOffset(toConvert)", span="247-247"];
m19_102 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="deserialisedValue = DateTimeOffset.Parse(toConvert)", span="261-261"];
m19_95 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="DateTimeOffset deserialisedValue", span="243-243"];
m19_98 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label=Exception, span="250-250"];
m19_159 [cluster="System.DateTimeOffset.Parse(string)", file="XmlDeserializer.cs", label="Entry System.DateTimeOffset.Parse(string)", span="0-0"];
m19_160 [cluster="decimal.Parse(string, System.IFormatProvider)", file="XmlDeserializer.cs", label="Entry decimal.Parse(string, System.IFormatProvider)", span="0-0"];
m19_161 [cluster="System.Guid.Guid(string)", file="XmlDeserializer.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m19_122 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="this.PopulateListFromElements(t, elements, list)", span="306-306"];
m19_118 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="container.HasElements", span="298-298"];
m19_119 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="XElement first = container.Elements().FirstOrDefault()", span="300-300"];
m19_120 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="first != null", span="302-302"];
m19_132 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="element != null", span="336-336"];
m19_136 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", span="111-111"];
m19_44 [cluster="lambda expression", file="XmlDeserializer.cs", label="a.IsNamespaceDeclaration || a.Name.Namespace != XNamespace.None", span="97-97"];
m19_45 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="97-97"];
m19_47 [cluster="lambda expression", file="XmlDeserializer.cs", label="a.IsNamespaceDeclaration\r\n                                 ? null\r\n                                 : a.Name.Namespace != XNamespace.None\r\n                                     ? \\nnew XAttribute(XNamespace.None.GetName(a.Name.LocalName), a.Value)\r\n                                     : a", span="101-105"];
m19_48 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="101-105"];
m19_182 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="375-375"];
m19_216 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="420-420"];
m19_220 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="429-429"];
m19_260 [cluster="lambda expression", file="XmlDeserializer.cs", label="d.Ancestors().Count()", span="531-531"];
m19_261 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="531-531"];
m19_266 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="532-532"];
m19_268 [cluster="lambda expression", file="XmlDeserializer.cs", label="d.Ancestors().Count()", span="534-534"];
m19_269 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="534-534"];
m19_272 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="535-535"];
m19_278 [cluster="lambda expression", file="XmlDeserializer.cs", label="d.Ancestors().Count()", span="550-550"];
m19_279 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="550-550"];
m19_282 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="552-552"];
m20_453 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", span="624-624"];
m20_454 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="string doc = CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", span="626-626"];
m20_455 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="627-627"];
m20_456 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="NullableValues output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="628-628"];
m20_461 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", span="939-939"];
m20_13 [cluster="RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", span="44-44"];
m20_457 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="Assert.Null(output.Id)", span="630-630"];
m20_458 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="Assert.Null(output.StartDate)", span="631-631"];
m20_459 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), output.UniqueId)", span="632-632"];
m20_14 [cluster="RestSharp.RestResponse.RestResponse()", file="XmlDeserializerTests.cs", label="Entry RestSharp.RestResponse.RestResponse()", span="184-184"];
m20_15 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializerTests.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", span="49-49"];
m20_460 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", span="624-624"];
m20_176 [cluster="System.Guid.Guid(string)", file="XmlDeserializerTests.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m20_37 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_When_RootElement_Deeper_Then_One()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_When_RootElement_Deeper_Then_One()", span="83-83"];
m20_38 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_When_RootElement_Deeper_Then_One()", file="XmlDeserializerTests.cs", label="string content = ''<root><subroot><subsubroot><one>oneOneOne</one><two>twoTwoTwo</two><three>3</three></subsubroot></subroot></root>''", span="85-85"];
m20_39 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_When_RootElement_Deeper_Then_One()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer() { RootElement = ''subsubroot'' }", span="86-86"];
m20_40 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_When_RootElement_Deeper_Then_One()", file="XmlDeserializerTests.cs", label="SimpleStruct output = xml.Deserialize<SimpleStruct>(new RestResponse { Content = content })", span="87-87"];
m20_41 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_When_RootElement_Deeper_Then_One()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output)", span="89-89"];
m20_42 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_When_RootElement_Deeper_Then_One()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''oneOneOne'', output.One)", span="90-90"];
m20_43 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_When_RootElement_Deeper_Then_One()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''twoTwoTwo'', output.Two)", span="91-91"];
m20_44 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_When_RootElement_Deeper_Then_One()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(3, output.Three)", span="92-92"];
m20_45 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_When_RootElement_Deeper_Then_One()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_When_RootElement_Deeper_Then_One()", span="83-83"];
m20_274 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="398-398"];
m20_275 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="string doc = CreateElementsXml()", span="400-400"];
m20_276 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="401-401"];
m20_246 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", span="810-810"];
m20_277 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="402-402"];
m20_278 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="403-403"];
m20_279 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="Assert.Null(p.ReadOnlyProxy)", span="405-405"];
m20_280 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="398-398"];
m20_142 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", span="232-232"];
m20_143 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="string doc = CreateXmlWithEmptyInlineList()", span="234-234"];
m20_144 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="235-235"];
m20_145 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="EmptyListSample output = xml.Deserialize<EmptyListSample>(new RestResponse { Content = doc })", span="236-236"];
m20_151 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", span="912-912"];
m20_146 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output.images)", span="238-238"];
m20_147 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output.Images)", span="239-239"];
m20_148 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.IsEmpty(output.images)", span="240-240"];
m20_149 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.IsEmpty(output.Images)", span="241-241"];
m20_150 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", span="232-232"];
m20_352 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", span="707-707"];
m20_513 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="709-709"];
m20_514 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="710-710"];
m20_540 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="748-748"];
m20_541 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="750-750"];
m20_515 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Name'', ''John Sheehan''))", span="712-712"];
m20_516 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''start_date'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="713-713"];
m20_517 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Age'', 28))", span="714-714"];
m20_518 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Percent'', 99.9999m))", span="715-715"];
m20_519 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''big_number'', long.MaxValue))", span="716-716"];
m20_520 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''is_cool'', false))", span="717-717"];
m20_521 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Ignore'', ''dummy''))", span="718-718"];
m20_522 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''read_only'', ''dummy''))", span="719-719"];
m20_523 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''unique_id'', new Guid(GUID_STRING)))", span="720-720"];
m20_524 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Url'', ''http://example.com''))", span="721-721"];
m20_525 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''url_path'', ''/foo/bar''))", span="722-722"];
m20_526 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''best_friend'',\r\n                new XElement(''name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="723-725"];
m20_532 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(friends)", span="736-736"];
m20_539 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(foes)", span="747-747"];
m20_175 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="XmlDeserializerTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m20_527 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="XElement friends = new XElement(''Friends'')", span="727-727"];
m20_528 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="int i = 0", span="729-729"];
m20_530 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XAttribute(''\\nSince'', DateTime.Now.Year - i)))", span="731-733"];
m20_529 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="i < 10", span="729-729"];
m20_531 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="i++", span="729-729"];
m20_497 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="int i = 0", span="683-683"];
m20_533 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="XElement foes = new XElement(''Foes'')", span="738-738"];
m20_534 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="foes.Add(new XAttribute(''Team'', ''Yankees''))", span="740-740"];
m20_537 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="foes.Add(new XElement(''Foe'', new XElement(''Nickname'', ''Foe'' + i)))", span="744-744"];
m20_535 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="int i = 0", span="742-742"];
m20_536 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="i < 5", span="742-742"];
m20_538 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="i++", span="742-742"];
m20_542 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", span="707-707"];
m20_4 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", span="44-44"];
m20_5 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="string content =\r\n                ''<oddball><sid>1</sid><friendlyName>Jackson</friendlyName><oddballPropertyName>oddball</oddballPropertyName></\\noddball>''", span="46-47"];
m20_6 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="48-48"];
m20_7 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="Oddball output = xml.Deserialize<Oddball>(new RestResponse { Content = content })", span="49-49"];
m20_8 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output)", span="51-51"];
m20_9 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''1'', output.Sid)", span="52-52"];
m20_10 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''Jackson'', output.FriendlyName)", span="53-53"];
m20_11 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''oddball'', output.GoodPropertyName)", span="54-54"];
m20_12 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", span="44-44"];
m20_444 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", span="612-612"];
m20_445 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="string doc = CreateXmlWithAttributesAndNullValues()", span="614-614"];
m20_446 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="615-615"];
m20_447 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="NullableValues output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="616-616"];
m20_452 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", span="922-922"];
m20_448 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.Null(output.Id)", span="618-618"];
m20_449 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.Null(output.StartDate)", span="619-619"];
m20_450 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.Null(output.UniqueId)", span="620-620"];
m20_451 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", span="612-612"];
m20_76 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", span="136-136"];
m20_77 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''InlineListSample.xml'')", span="138-138"];
m20_78 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="139-139"];
m20_0 [cluster="RestSharp.Tests.XmlDeserializerTests.PathFor(string)", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.PathFor(string)", span="38-38"];
m20_79 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="140-140"];
m20_80 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="List<image> output = xml.Deserialize<List<image>>(new RestResponse { Content = doc.ToString() })", span="141-141"];
m20_81 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output)", span="143-143"];
m20_82 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.Count)", span="144-144"];
m20_83 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", span="136-136"];
m20_407 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", span="560-560"];
m20_408 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''GoogleWeather.xml'')", span="562-562"];
m20_409 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="563-563"];
m20_410 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="564-564"];
m20_411 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="565-565"];
m20_412 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="xml_api_reply output = d.Deserialize<xml_api_reply>(response)", span="566-566"];
m20_413 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.weather)", span="568-568"];
m20_414 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.weather.Count)", span="569-569"];
m20_415 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''Sunny'', output.weather[0].condition.data)", span="570-570"];
m20_416 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", span="560-560"];
m20_1 [cluster="RestSharp.Tests.XmlDeserializerTests.PathFor(string)", file="XmlDeserializerTests.cs", label="return Path.Combine(this.sampleDataPath, sampleFile);", span="40-40"];
m20_116 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''NestedListSample.xml'')", span="197-197"];
m20_437 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''boolean_from_string.xml'')", span="602-602"];
m20_69 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''InlineListSample.xml'')", span="126-126"];
m20_47 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''xmllists.xml'')", span="98-98"];
m20_387 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''eventful.xml'')", span="532-532"];
m20_428 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''boolean_from_number.xml'')", span="590-590"];
m20_19 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''deserialize_as_list.xml'')", span="60-60"];
m20_418 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''Goodreads.xml'')", span="576-576"];
m20_399 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''Lastfm.xml'')", span="548-548"];
m20_60 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''ListWithAttributes.xml'')", span="113-113"];
m20_85 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''directlists.xml'')", span="150-150"];
m20_3 [cluster="System.IO.Path.Combine(string, string)", file="XmlDeserializerTests.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m20_2 [cluster="RestSharp.Tests.XmlDeserializerTests.PathFor(string)", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.PathFor(string)", span="38-38"];
m20_305 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", span="436-436"];
m20_306 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="string doc = CreateDashesXml()", span="438-438"];
m20_307 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="439-439"];
m20_328 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", span="753-753"];
m20_308 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="440-440"];
m20_309 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="441-441"];
m20_310 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="443-443"];
m20_311 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="444-444"];
m20_312 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="445-445"];
m20_313 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="446-446"];
m20_314 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="447-447"];
m20_315 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="448-448"];
m20_316 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="449-449"];
m20_317 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="450-450"];
m20_318 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="451-451"];
m20_319 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="452-452"];
m20_320 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="453-453"];
m20_321 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="454-454"];
m20_322 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="455-455"];
m20_323 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="456-456"];
m20_324 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Foes)", span="457-457"];
m20_325 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(5, p.Foes.Count)", span="458-458"];
m20_326 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="459-459"];
m20_247 [cluster="System.Uri.Uri(string, System.UriKind)", file="XmlDeserializerTests.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m20_327 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", span="436-436"];
m20_28 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", span="70-70"];
m20_29 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="string content = ''<root><one>oneOneOne</one><two>twoTwoTwo</two><three>3</three></root>''", span="72-72"];
m20_30 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="73-73"];
m20_31 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="SimpleStruct output = xml.Deserialize<SimpleStruct>(new RestResponse { Content = content })", span="74-74"];
m20_32 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output)", span="76-76"];
m20_33 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''oneOneOne'', output.One)", span="77-77"];
m20_34 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''twoTwoTwo'', output.Two)", span="78-78"];
m20_35 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(3, output.Three)", span="79-79"];
m20_36 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", span="70-70"];
m20_248 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", span="365-365"];
m20_249 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="string doc = CreateAttributesXml()", span="367-367"];
m20_250 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="368-368"];
m20_266 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", span="848-848"];
m20_251 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="369-369"];
m20_252 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="370-370"];
m20_253 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="372-372"];
m20_254 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="373-373"];
m20_255 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="374-374"];
m20_256 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="375-375"];
m20_257 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="376-376"];
m20_258 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="377-377"];
m20_259 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="378-378"];
m20_260 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="379-379"];
m20_261 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="380-380"];
m20_262 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="381-381"];
m20_263 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="382-382"];
m20_264 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="383-383"];
m20_265 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", span="365-365"];
m20_100 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", span="172-172"];
m20_101 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''InlineListSample.xml'')", span="174-174"];
m20_102 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="175-175"];
m20_103 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="176-176"];
m20_104 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="InlineListSample output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="177-177"];
m20_105 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.images)", span="179-179"];
m20_106 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.images.Count)", span="180-180"];
m20_107 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", span="172-172"];
m20_115 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", span="195-195"];
m20_117 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="198-198"];
m20_118 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="199-199"];
m20_119 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="InlineListSample output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="200-200"];
m20_120 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.Images)", span="202-202"];
m20_121 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.Images.Count)", span="203-203"];
m20_122 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", span="195-195"];
m20_209 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", span="315-315"];
m20_210 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="CultureInfo culture = CultureInfo.InvariantCulture", span="317-317"];
m20_211 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="string format = ''dd yyyy MMM, hh:mm ss tt zzz''", span="318-318"];
m20_215 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''StartDate'', date.ToString(format, culture)))", span="323-323"];
m20_217 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer\r\n                                  {\r\n                                      DateFormat = \\nformat,\r\n                                      Culture = culture\r\n                                  }", span="326-330"];
m20_212 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="DateTime date = new DateTime(2010, 2, 8, 11, 11, 11)", span="319-319"];
m20_213 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="320-320"];
m20_220 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(date, output.StartDate)", span="334-334"];
m20_214 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="321-321"];
m20_216 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="324-324"];
m20_218 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="331-331"];
m20_222 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="XmlDeserializerTests.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m20_219 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="PersonForXml output = xml.Deserialize<PersonForXml>(response)", span="332-332"];
m20_221 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", span="315-315"];
m20_162 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", span="257-257"];
m20_163 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="CultureInfo culture = CultureInfo.InvariantCulture", span="259-259"];
m20_164 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="string doc = CreateXmlWithoutEmptyValues(culture)", span="260-260"];
m20_165 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer\r\n                                  {\r\n                                      Culture = \\nculture\r\n                                  }", span="261-264"];
m20_166 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="NullableValues output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="265-265"];
m20_174 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", span="887-887"];
m20_167 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output.Id)", span="267-267"];
m20_168 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output.StartDate)", span="268-268"];
m20_169 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output.UniqueId)", span="269-269"];
m20_170 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(123, output.Id)", span="270-270"];
m20_171 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2010, 2, 21, 9, 35, 00), output.StartDate)", span="271-271"];
m20_172 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), output.UniqueId)", span="272-272"];
m20_173 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", span="257-257"];
m20_177 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", span="276-276"];
m20_178 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="CultureInfo culture = CultureInfo.InvariantCulture", span="278-278"];
m20_179 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument(culture)", span="279-279"];
m20_192 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer\r\n                                {\r\n                                    Culture = culture,\r\n                                }", span="298-301"];
m20_180 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="TimeSpan? nullTimespan = null", span="280-280"];
m20_190 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="292-292"];
m20_191 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse\r\n                                    {\r\n                                        Content = \\ndoc.ToString()\r\n                                    }", span="294-297"];
m20_181 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="TimeSpan? nullValueTimeSpan = new TimeSpan(21, 30, 7)", span="281-281"];
m20_188 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''NullableWithoutValue'', nullTimespan))", span="289-289"];
m20_204 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="XmlDeserializerTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m20_182 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="282-282"];
m20_189 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''NullableWithValue'', nullValueTimeSpan))", span="290-290"];
m20_183 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Tick'', new TimeSpan(468006)))", span="284-284"];
m20_184 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Millisecond'', new TimeSpan(0, 0, 0, 0, 125)))", span="285-285"];
m20_185 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Second'', new TimeSpan(0, 0, 8)))", span="286-286"];
m20_186 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Minute'', new TimeSpan(0, 55, 2)))", span="287-287"];
m20_187 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Hour'', new TimeSpan(21, 30, 7)))", span="288-288"];
m20_206 [cluster="System.TimeSpan.TimeSpan(long)", file="XmlDeserializerTests.cs", label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
m20_208 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="XmlDeserializerTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m20_193 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="TimeSpanTestStructure payload = d.Deserialize<TimeSpanTestStructure>(response)", span="302-302"];
m20_194 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(468006), payload.Tick)", span="304-304"];
m20_195 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(0, 0, 0, 0, 125), payload.Millisecond)", span="305-305"];
m20_196 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(0, 0, 8), payload.Second)", span="306-306"];
m20_197 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(0, 55, 2), payload.Minute)", span="307-307"];
m20_198 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.Hour)", span="308-308"];
m20_199 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.Null(payload.NullableWithoutValue)", span="309-309"];
m20_200 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.NotNull(payload.NullableWithValue)", span="310-310"];
m20_201 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.NullableWithValue.Value)", span="311-311"];
m20_202 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", span="276-276"];
m20_267 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", span="387-387"];
m20_268 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="string doc = CreateElementsXml()", span="389-389"];
m20_269 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="390-390"];
m20_270 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="391-391"];
m20_271 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="392-392"];
m20_272 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="Assert.Null(p.IgnoreProxy)", span="394-394"];
m20_273 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", span="387-387"];
m20_436 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", span="600-600"];
m20_438 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="603-603"];
m20_439 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="604-604"];
m20_440 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="605-605"];
m20_441 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="BooleanTest output = d.Deserialize<BooleanTest>(response)", span="606-606"];
m20_442 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="Assert.True(output.Value)", span="608-608"];
m20_443 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", span="600-600"];
m20_123 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", span="207-207"];
m20_124 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''NestedListSample.xml'')", span="209-209"];
m20_125 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="210-210"];
m20_126 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="211-211"];
m20_127 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="InlineListSample output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="212-212"];
m20_128 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.images)", span="214-214"];
m20_129 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.images.Count)", span="215-215"];
m20_130 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", span="207-207"];
m20_604 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="850-850"];
m20_605 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="851-851"];
m20_618 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="868-868"];
m20_619 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="870-870"];
m20_606 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Name'', ''John Sheehan''))", span="853-853"];
m20_607 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''StartDate'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="854-854"];
m20_608 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Age'', 28))", span="855-855"];
m20_609 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Percent'', 99.9999m))", span="856-856"];
m20_610 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''BigNumber'', long.MaxValue))", span="857-857"];
m20_611 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''IsCool'', false))", span="858-858"];
m20_612 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Ignore'', ''dummy''))", span="859-859"];
m20_613 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''ReadOnly'', ''dummy''))", span="860-860"];
m20_614 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''UniqueId'', new Guid(GUID_STRING)))", span="861-861"];
m20_615 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Url'', ''http://example.com''))", span="862-862"];
m20_616 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''UrlPath'', ''/foo/bar''))", span="863-863"];
m20_617 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''BestFriend'',\r\n                new XAttribute(''Name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="864-866"];
m20_620 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", span="848-848"];
m20_654 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="941-941"];
m20_655 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''NullableValues'')", span="942-942"];
m20_659 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="951-951"];
m20_660 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="953-953"];
m20_656 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="XElement idElement = new XElement(''Id'', null)", span="943-943"];
m20_658 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="root.Add(idElement,\r\n                new XElement(''StartDate'', null),\r\n                new XElement(''UniqueId'', new Guid(\\nGUID_STRING)))", span="947-949"];
m20_657 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="idElement.SetAttributeValue(''SomeAttribute'', ''SomeAttribute_Value'')", span="945-945"];
m20_661 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", span="939-939"];
m20_68 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", span="124-124"];
m20_70 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="127-127"];
m20_71 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="128-128"];
m20_72 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="List<Image> output = xml.Deserialize<List<Image>>(new RestResponse { Content = doc.ToString() })", span="129-129"];
m20_73 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output)", span="131-131"];
m20_74 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.Count)", span="132-132"];
m20_75 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", span="124-124"];
m20_46 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", span="96-96"];
m20_48 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="99-99"];
m20_49 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="100-100"];
m20_50 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="SimpleTypesListSample output = xml.Deserialize<SimpleTypesListSample>(\r\n                new RestResponse { Content = doc.ToString() })", span="101-102"];
m20_51 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.Names)", span="104-104"];
m20_52 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.Numbers)", span="105-105"];
m20_53 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="Assert.False(output.Names[0].Length == 0)", span="106-106"];
m20_54 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="Assert.False(output.Numbers.Sum() == 0)", span="107-107"];
m20_55 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", span="96-96"];
m20_58 [cluster="System.Collections.Generic.IEnumerable<int>.Sum()", file="XmlDeserializerTests.cs", label="Entry System.Collections.Generic.IEnumerable<int>.Sum()", span="0-0"];
m20_640 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="914-914"];
m20_641 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''EmptyListSample'')", span="915-915"];
m20_642 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="917-917"];
m20_643 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="919-919"];
m20_644 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", span="912-912"];
m20_385 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", span="799-799"];
m20_573 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="801-801"];
m20_574 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''incoming-invoices'',\r\n                new XElement(''incoming-invoice'', new XElement(''concept-id'', \\n45)))", span="802-803"];
m20_575 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="805-805"];
m20_576 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="807-807"];
m20_577 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", span="799-799"];
m20_386 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", span="530-530"];
m20_388 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="533-533"];
m20_389 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="534-534"];
m20_390 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="535-535"];
m20_391 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="VenueSearch output = d.Deserialize<VenueSearch>(response)", span="536-536"];
m20_392 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.venues)", span="538-538"];
m20_393 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(3, output.venues.Count)", span="539-539"];
m20_394 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''Tivoli'', output.venues[0].name)", span="540-540"];
m20_395 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''http://eventful.com/brisbane/venues/tivoli-/V0-001-002169294-8'', output.venues[1].url)", span="541-541"];
m20_396 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''V0-001-000266914-3'', output.venues[2].id)", span="542-542"];
m20_397 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", span="530-530"];
m20_131 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", span="219-219"];
m20_132 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="string doc = CreateXmlWithEmptyNestedList()", span="221-221"];
m20_133 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="222-222"];
m20_134 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="EmptyListSample output = xml.Deserialize<EmptyListSample>(new RestResponse { Content = doc })", span="223-223"];
m20_140 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", span="901-901"];
m20_135 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output.images)", span="225-225"];
m20_136 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output.Images)", span="226-226"];
m20_137 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.IsEmpty(output.images)", span="227-227"];
m20_138 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.IsEmpty(output.Images)", span="228-228"];
m20_139 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", span="219-219"];
m20_329 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", span="463-463"];
m20_330 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="string doc = CreateLowercaseUnderscoresXml()", span="465-465"];
m20_331 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="466-466"];
m20_332 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="467-467"];
m20_333 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="468-468"];
m20_334 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="470-470"];
m20_335 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="471-471"];
m20_336 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="472-472"];
m20_337 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="473-473"];
m20_338 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="474-474"];
m20_339 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="475-475"];
m20_340 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="476-476"];
m20_341 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="477-477"];
m20_342 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="478-478"];
m20_343 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="479-479"];
m20_344 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="480-480"];
m20_345 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="481-481"];
m20_346 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="482-482"];
m20_347 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="483-483"];
m20_348 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Foes)", span="484-484"];
m20_349 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(5, p.Foes.Count)", span="485-485"];
m20_350 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="486-486"];
m20_351 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", span="463-463"];
m20_427 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", span="588-588"];
m20_429 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="591-591"];
m20_430 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="592-592"];
m20_431 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="593-593"];
m20_432 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="BooleanTest output = d.Deserialize<BooleanTest>(response)", span="594-594"];
m20_433 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="Assert.True(output.Value)", span="596-596"];
m20_434 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", span="588-588"];
m20_578 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="812-812"];
m20_579 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="813-813"];
m20_601 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="843-843"];
m20_602 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="845-845"];
m20_580 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Name'', ''John Sheehan''))", span="815-815"];
m20_581 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''StartDate'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="816-816"];
m20_582 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Age'', 28))", span="817-817"];
m20_583 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Percent'', 99.9999m))", span="818-818"];
m20_584 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''BigNumber'', long.MaxValue))", span="819-819"];
m20_585 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''IsCool'', false))", span="820-820"];
m20_586 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Ignore'', ''dummy''))", span="821-821"];
m20_587 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''ReadOnly'', ''dummy''))", span="822-822"];
m20_588 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''UniqueId'', new Guid(GUID_STRING)))", span="823-823"];
m20_589 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''EmptyGuid'', ''''))", span="824-824"];
m20_590 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Url'', ''http://example.com''))", span="825-825"];
m20_591 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''UrlPath'', ''/foo/bar''))", span="826-826"];
m20_592 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Order'', ''third''))", span="827-827"];
m20_593 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Disposition'', ''so-so''))", span="828-828"];
m20_594 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''BestFriend'',\r\n                new XElement(''Name'', ''The Fonz''),\r\n                new XElement(''\\nSince'', 1952)))", span="829-831"];
m20_600 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(friends)", span="842-842"];
m20_595 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="XElement friends = new XElement(''Friends'')", span="833-833"];
m20_596 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="int i = 0", span="835-835"];
m20_598 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XElement(''\\nSince'', DateTime.Now.Year - i)))", span="837-839"];
m20_597 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="i < 10", span="835-835"];
m20_599 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="i++", span="835-835"];
m20_603 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", span="810-810"];
m20_645 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="924-924"];
m20_646 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''NullableValues'')", span="925-925"];
m20_650 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="934-934"];
m20_651 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="936-936"];
m20_647 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="XElement idElement = new XElement(''Id'', null)", span="926-926"];
m20_649 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="root.Add(idElement,\r\n                new XElement(''StartDate'', null),\r\n                new XElement(''UniqueId'', null))", span="930-932"];
m20_648 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="idElement.SetAttributeValue(''SomeAttribute'', ''SomeAttribute_Value'')", span="928-928"];
m20_652 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", span="922-922"];
m20_376 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", span="517-517"];
m20_377 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="string doc = CreateLowerCasedRootElementWithDashesXml()", span="519-519"];
m20_378 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="520-520"];
m20_379 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="521-521"];
m20_380 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="List<IncomingInvoice> p = d.Deserialize<List<IncomingInvoice>>(response)", span="522-522"];
m20_381 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p)", span="524-524"];
m20_382 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(1, p.Count)", span="525-525"];
m20_383 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(45, p[0].ConceptId)", span="526-526"];
m20_384 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", span="517-517"];
m20_462 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", span="636-636"];
m20_463 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="CultureInfo culture = CultureInfo.InvariantCulture", span="638-638"];
m20_464 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument(culture)", span="639-639"];
m20_473 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer { Culture = culture }", span="652-652"];
m20_465 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2013, 02, 08, 9, 18, 22, TimeSpan.FromHours(10))", span="640-640"];
m20_471 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="648-648"];
m20_472 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="651-651"];
m20_480 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="XmlDeserializerTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m20_466 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="DateTimeOffset? nullableDateTimeOffsetWithValue = new DateTimeOffset(2013, 02, 08, 9, 18, 23, TimeSpan.FromHours(10))", span="641-641"];
m20_468 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''DateTimeOffset'', dateTimeOffset))", span="644-644"];
m20_475 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(dateTimeOffset, payload.DateTimeOffset)", span="655-655"];
m20_481 [cluster="System.TimeSpan.FromHours(double)", file="XmlDeserializerTests.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m20_467 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''Dates'')", span="642-642"];
m20_470 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''NullableDateTimeOffsetWithValue'', nullableDateTimeOffsetWithValue))", span="646-646"];
m20_478 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(nullableDateTimeOffsetWithValue, payload.NullableDateTimeOffsetWithValue)", span="658-658"];
m20_469 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''NullableDateTimeOffsetWithNull'', string.Empty))", span="645-645"];
m20_474 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="DateTimeTestStructure payload = d.Deserialize<DateTimeTestStructure>(response)", span="653-653"];
m20_476 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="Assert.Null(payload.NullableDateTimeOffsetWithNull)", span="656-656"];
m20_477 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="Assert.True(payload.NullableDateTimeOffsetWithValue.HasValue)", span="657-657"];
m20_479 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", span="636-636"];
m20_18 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", span="58-58"];
m20_20 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="61-61"];
m20_21 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="62-62"];
m20_22 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file="XmlDeserializerTests.cs", label="List<Oddball> output = xml.Deserialize<List<Oddball>>(new RestResponse { Content = doc.ToString() })", span="63-63"];
m20_23 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output)", span="65-65"];
m20_24 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''1'', output[0].Sid)", span="66-66"];
m20_25 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", span="58-58"];
m20_634 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="903-903"];
m20_635 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''EmptyListSample'')", span="904-904"];
m20_637 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="907-907"];
m20_638 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="909-909"];
m20_636 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Images''))", span="906-906"];
m20_639 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", span="901-901"];
m20_304 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", span="661-661"];
m20_482 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="663-663"];
m20_483 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="664-664"];
m20_509 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="702-702"];
m20_510 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="704-704"];
m20_484 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Name'', ''John Sheehan''))", span="666-666"];
m20_485 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Start_Date'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="667-667"];
m20_486 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Age'', 28))", span="668-668"];
m20_487 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Percent'', 99.9999m))", span="669-669"];
m20_488 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Big_Number'', long.MaxValue))", span="670-670"];
m20_489 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Is_Cool'', false))", span="671-671"];
m20_490 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Ignore'', ''dummy''))", span="672-672"];
m20_491 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Read_Only'', ''dummy''))", span="673-673"];
m20_492 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Unique_Id'', new Guid(GUID_STRING)))", span="674-674"];
m20_493 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Url'', ''http://example.com''))", span="675-675"];
m20_494 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Url_Path'', ''/foo/bar''))", span="676-676"];
m20_495 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Best_Friend'',\r\n                new XElement(''Name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="677-679"];
m20_501 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(friends)", span="690-690"];
m20_508 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(foes)", span="701-701"];
m20_496 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="XElement friends = new XElement(''Friends'')", span="681-681"];
m20_499 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XAttribute(''\\nSince'', DateTime.Now.Year - i)))", span="685-687"];
m20_498 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="i < 10", span="683-683"];
m20_500 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="i++", span="683-683"];
m20_502 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="XElement foes = new XElement(''Foes'')", span="692-692"];
m20_503 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="foes.Add(new XAttribute(''Team'', ''Yankees''))", span="694-694"];
m20_506 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="foes.Add(new XElement(''Foe'', new XElement(''Nickname'', ''Foe'' + i)))", span="698-698"];
m20_504 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="int i = 0", span="696-696"];
m20_505 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="i < 5", span="696-696"];
m20_507 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="i++", span="696-696"];
m20_511 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", span="661-661"];
m20_92 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", span="160-160"];
m20_93 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''InlineListSample.xml'')", span="162-162"];
m20_94 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="163-163"];
m20_95 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="164-164"];
m20_96 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="InlineListSample output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="165-165"];
m20_97 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.Images)", span="167-167"];
m20_98 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.Images.Count)", span="168-168"];
m20_99 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", span="160-160"];
m20_160 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", span="873-873"];
m20_621 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="875-875"];
m20_622 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''NullableValues'')", span="876-876"];
m20_624 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="882-882"];
m20_625 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="884-884"];
m20_623 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Id'', null),\r\n                new XElement(''StartDate'', null),\r\n                new XElement(''UniqueId'', \\nnull))", span="878-880"];
m20_626 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", span="873-873"];
m20_223 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", span="338-338"];
m20_224 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="string doc = CreateElementsXml()", span="340-340"];
m20_225 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="341-341"];
m20_226 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="342-342"];
m20_227 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="343-343"];
m20_228 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="345-345"];
m20_229 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="346-346"];
m20_230 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="347-347"];
m20_231 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="348-348"];
m20_232 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="349-349"];
m20_233 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="350-350"];
m20_234 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="351-351"];
m20_235 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(Guid.Empty, p.EmptyGuid)", span="352-352"];
m20_236 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="353-353"];
m20_237 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="354-354"];
m20_238 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(Order.Third, p.Order)", span="355-355"];
m20_239 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(Disposition.SoSo, p.Disposition)", span="356-356"];
m20_240 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="357-357"];
m20_241 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="358-358"];
m20_242 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="359-359"];
m20_243 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="360-360"];
m20_244 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="361-361"];
m20_245 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", span="338-338"];
m20_543 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="755-755"];
m20_544 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="756-756"];
m20_570 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="794-794"];
m20_571 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="796-796"];
m20_545 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Name'', ''John Sheehan''))", span="758-758"];
m20_546 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Start_Date'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="759-759"];
m20_547 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Age'', 28))", span="760-760"];
m20_548 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Percent'', 99.9999m))", span="761-761"];
m20_549 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Big-Number'', long.MaxValue))", span="762-762"];
m20_550 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Is-Cool'', false))", span="763-763"];
m20_551 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Ignore'', ''dummy''))", span="764-764"];
m20_552 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Read-Only'', ''dummy''))", span="765-765"];
m20_553 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Unique-Id'', new Guid(GUID_STRING)))", span="766-766"];
m20_554 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Url'', ''http://example.com''))", span="767-767"];
m20_555 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Url-Path'', ''/foo/bar''))", span="768-768"];
m20_556 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Best-Friend'',\r\n                new XElement(''Name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="769-771"];
m20_562 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(friends)", span="782-782"];
m20_569 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(foes)", span="793-793"];
m20_557 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="XElement friends = new XElement(''Friends'')", span="773-773"];
m20_558 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="int i = 0", span="775-775"];
m20_560 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XAttribute(''\\nSince'', DateTime.Now.Year - i)))", span="777-779"];
m20_559 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="i < 10", span="775-775"];
m20_561 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="i++", span="775-775"];
m20_563 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="XElement foes = new XElement(''Foes'')", span="784-784"];
m20_564 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="foes.Add(new XAttribute(''Team'', ''Yankees''))", span="786-786"];
m20_567 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="foes.Add(new XElement(''Foe'', new XElement(''Nickname'', ''Foe'' + i)))", span="790-790"];
m20_565 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="int i = 0", span="788-788"];
m20_566 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="i < 5", span="788-788"];
m20_568 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="i++", span="788-788"];
m20_572 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", span="753-753"];
m20_108 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_\\nProperty()", span="184-184"];
m20_109 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''InlineListSample.xml'')", span="186-186"];
m20_110 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="187-187"];
m20_111 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="188-188"];
m20_112 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file="XmlDeserializerTests.cs", label="InlineListSample output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="189-189"];
m20_113 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.Count)", span="191-191"];
m20_114 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_\\nProperty()", span="184-184"];
m20_417 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", span="574-574"];
m20_419 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="577-577"];
m20_420 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="578-578"];
m20_421 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="579-579"];
m20_422 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="GoodReadsReviewCollection output = d.Deserialize<GoodReadsReviewCollection>(response)", span="580-580"];
m20_423 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(2, output.Reviews.Count)", span="582-582"];
m20_424 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''1208943892'', output.Reviews[0].Id)", span="583-583"];
m20_425 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''1198344567'', output.Reviews[1].Id)", span="584-584"];
m20_426 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", span="574-574"];
m20_398 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", span="546-546"];
m20_400 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="549-549"];
m20_401 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="550-550"];
m20_402 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="551-551"];
m20_403 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="Event output = d.Deserialize<Event>(response)", span="552-552"];
m20_404 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''http://www.last.fm/event/328799+Philip+Glass+at+Barbican+Centre+on+12+June+2008'', output.url)", span="555-555"];
m20_405 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''http://www.last.fm/venue/8777860+Barbican+Centre'', output.venue.url)", span="556-556"];
m20_406 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", span="546-546"];
m20_152 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="245-245"];
m20_153 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="string doc = CreateXmlWithNullValues()", span="247-247"];
m20_154 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="248-248"];
m20_155 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="NullableValues output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="249-249"];
m20_156 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.Null(output.Id)", span="251-251"];
m20_157 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.Null(output.StartDate)", span="252-252"];
m20_158 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.Null(output.UniqueId)", span="253-253"];
m20_159 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="245-245"];
m20_627 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="889-889"];
m20_629 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Id'', 123),\r\n                new XElement(''StartDate'', new DateTime(2010, 2, 21, 9, 35, 00).ToString(\\nculture)),\r\n                new XElement(''UniqueId'', new Guid(GUID_STRING)))", span="892-894"];
m20_628 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''NullableValues'')", span="890-890"];
m20_630 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="896-896"];
m20_631 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="898-898"];
m20_633 [cluster="System.DateTime.ToString(System.IFormatProvider)", file="XmlDeserializerTests.cs", label="Entry System.DateTime.ToString(System.IFormatProvider)", span="0-0"];
m20_632 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", span="887-887"];
m20_281 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", span="409-409"];
m20_282 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="string doc = CreateUnderscoresXml()", span="411-411"];
m20_283 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="412-412"];
m20_284 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="413-413"];
m20_285 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="414-414"];
m20_286 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="416-416"];
m20_287 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="417-417"];
m20_288 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="418-418"];
m20_289 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="419-419"];
m20_290 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="420-420"];
m20_291 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="421-421"];
m20_292 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="422-422"];
m20_293 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="423-423"];
m20_294 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="424-424"];
m20_295 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="425-425"];
m20_296 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="426-426"];
m20_297 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="427-427"];
m20_298 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="428-428"];
m20_299 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="429-429"];
m20_300 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Foes)", span="430-430"];
m20_301 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(5, p.Foes.Count)", span="431-431"];
m20_302 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="432-432"];
m20_303 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", span="409-409"];
m20_353 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", span="490-490"];
m20_354 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="string doc = CreateDashesXml()", span="492-492"];
m20_355 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="493-493"];
m20_356 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="494-494"];
m20_357 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="495-495"];
m20_358 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="497-497"];
m20_359 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="498-498"];
m20_360 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="499-499"];
m20_361 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="500-500"];
m20_362 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="501-501"];
m20_363 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="502-502"];
m20_364 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="503-503"];
m20_365 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="504-504"];
m20_366 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="505-505"];
m20_367 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="506-506"];
m20_368 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="507-507"];
m20_369 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="508-508"];
m20_370 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="509-509"];
m20_371 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="510-510"];
m20_372 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Foes)", span="511-511"];
m20_373 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(5, p.Foes.Count)", span="512-512"];
m20_374 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="513-513"];
m20_375 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", span="490-490"];
m20_59 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", span="111-111"];
m20_61 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="114-114"];
m20_62 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer { RootElement = ''Calls'' }", span="115-115"];
m20_63 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="TwilioCallList output = xml.Deserialize<TwilioCallList>(new RestResponse { Content = doc.ToString() })", span="116-116"];
m20_64 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(3, output.NumPages)", span="118-118"];
m20_65 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output)", span="119-119"];
m20_66 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(2, output.Count)", span="120-120"];
m20_67 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", span="111-111"];
m20_84 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", span="148-148"];
m20_86 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="151-151"];
m20_87 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="152-152"];
m20_88 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="List<Database> output = xml.Deserialize<List<Database>>(new RestResponse { Content = doc.ToString() })", span="153-153"];
m20_89 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output)", span="155-155"];
m20_90 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(2, output.Count)", span="156-156"];
m20_91 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", span="148-148"];
m5_35;
m5_37;
m5_31;
m5_32;
m5_34;
m0_141;
m0_140;
m0_158;
m0_159;
m0_160;
m0_161;
m0_162;
m0_163;
m0_164;
m0_165;
m1_24;
m1_23;
m1_53;
m1_105;
m1_135;
m1_69;
m1_16;
m1_179;
m1_180;
m1_181;
m1_182;
m1_183;
m2_13;
m2_14;
m2_51;
m2_52;
m3_13;
m3_15;
m3_32;
m3_46;
m4_17;
m4_18;
m4_16;
m4_37;
m4_38;
m5_36;
m8_13;
m8_12;
m8_38;
m8_76;
m8_170;
m8_160;
m8_75;
m8_47;
m8_98;
m8_541;
m8_663;
m10_77;
m10_51;
m10_41;
m10_21;
m10_22;
m10_27;
m10_122;
m10_123;
m11_20;
m11_83;
m11_33;
m11_9;
m11_8;
m11_71;
m11_88;
m12_13;
m12_30;
m12_21;
m12_52;
m12_54;
m12_53;
m12_55;
m12_56;
m12_57;
m12_58;
m13_9;
m13_26;
m13_25;
m13_30;
m14_153;
m14_152;
m14_151;
m14_203;
m14_205;
m14_209;
m14_213;
m14_121;
m14_135;
m14_257;
m14_258;
m15_119;
m15_167;
m15_168;
m15_169;
m15_170;
m17_12;
m17_13;
m17_40;
m17_74;
m17_75;
m18_13;
m18_88;
m18_89;
m18_92;
m18_48;
m18_178;
m18_179;
m19_230;
m19_41;
m19_206;
m19_207;
m19_211;
m19_212;
m19_213;
m19_217;
m19_23;
m19_20;
m19_38;
m19_40;
m19_39;
m19_42;
m19_256;
m19_255;
m19_257;
m19_258;
m19_164;
m19_283;
m19_24;
m19_144;
m19_142;
m19_151;
m19_150;
m19_162;
m19_157;
m19_49;
m19_263;
m19_262;
m19_284;
m19_285;
m19_286;
m19_287;
m19_288;
m19_289;
m20_161;
m20_17;
m20_16;
m20_141;
m20_203;
m20_205;
m20_207;
m20_27;
m20_512;
m20_26;
m20_56;
m20_435;
m20_653;
m20_57;
m20_662;
m0_16 -> m0_22  [color=green, key=1, label="lambda expression", style=dashed];
m0_15 -> m0_17  [color=green, key=1, label=resetEvent, style=dashed];
m0_114 -> m0_117  [color=green, key=1, label=request, style=dashed];
m0_114 -> m0_119  [color=green, key=1, label=request, style=dashed];
m0_52 -> m0_144  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_115 -> m0_117  [color=green, key=1, label=contentType, style=dashed];
m0_12 -> m0_14  [color=green, key=1, label=contentType, style=dashed];
m0_119 -> m0_133  [color=green, key=1, label="lambda expression", style=dashed];
m0_118 -> m0_120  [color=green, key=1, label=resetEvent, style=dashed];
m0_101 -> m0_103  [color=green, key=1, label=contentType, style=dashed];
m0_100 -> m0_103  [color=green, key=1, label=request, style=dashed];
m0_105 -> m0_117  [color=green, key=1, label="lambda expression", style=dashed];
m0_148 -> m0_16  [color=green, key=1, label="RestSharp.IntegrationTests.AsyncRequestBodyTests", style=dashed];
m0_148 -> m0_119  [color=green, key=1, label="RestSharp.IntegrationTests.AsyncRequestBodyTests", style=dashed];
m1_42 -> m1_44  [color=darkseagreen4, key=1, label=baseUrl, style=dashed];
m1_93 -> m1_95  [color=darkseagreen4, key=1, label=baseUrl, style=dashed];
m1_99 -> m1_101  [color=darkseagreen4, key=1, label=task, style=dashed];
m1_98 -> m1_100  [color=darkseagreen4, key=1, label=cancellationTokenSource, style=dashed];
m1_107 -> m1_109  [color=darkseagreen4, key=1, label=baseUrl, style=dashed];
m1_113 -> m1_115  [color=darkseagreen4, key=1, label=task, style=dashed];
m1_112 -> m1_114  [color=darkseagreen4, key=1, label=cancellationTokenSource, style=dashed];
m1_56 -> m1_58  [color=darkseagreen4, key=1, label=baseUrl, style=dashed];
m1_57 -> m1_65  [color=darkseagreen4, key=1, label=exceptionMessage, style=dashed];
m1_57 -> m1_71  [color=darkseagreen4, key=1, label=exceptionMessage, style=dashed];
m1_60 -> m1_66  [color=green, key=1, label=response, style=dashed];
m1_27 -> m1_30  [color=darkseagreen4, key=1, label=baseUrl, style=dashed];
m1_28 -> m1_30  [color=darkseagreen4, key=1, label=val, style=dashed];
m1_28 -> m1_33  [color=darkseagreen4, key=1, label=val, style=dashed];
m1_28 -> m1_38  [color=darkseagreen4, key=1, label=val, style=dashed];
m1_31 -> m1_33  [color=darkseagreen4, key=1, label=client, style=dashed];
m1_29 -> m1_33  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m1_29 -> m1_34  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m1_29 -> m1_39  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m1_33 -> m1_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_2 -> m1_4  [color=darkseagreen4, key=1, label=val, style=dashed];
m1_2 -> m1_7  [color=darkseagreen4, key=1, label=val, style=dashed];
m1_2 -> m1_20  [color=darkseagreen4, key=1, label=val, style=dashed];
m1_36 -> m1_38  [color=darkseagreen4, key=1, label="RestSharp.IRestResponse", style=dashed];
m1_1 -> m1_4  [color=darkseagreen4, key=1, label=baseUrl, style=dashed];
m1_5 -> m1_7  [color=darkseagreen4, key=1, label=client, style=dashed];
m1_3 -> m1_7  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m1_3 -> m1_8  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m1_3 -> m1_21  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m1_7 -> m1_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_18 -> m1_20  [color=darkseagreen4, key=1, label="RestSharp.IRestResponse", style=dashed];
m1_86 -> m1_83  [color=green, key=1, label=client, style=dashed];
m1_165 -> m1_167  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m1_165 -> m1_168  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m1_139 -> m1_134  [color=green, key=1, label=client, style=dashed];
m1_140 -> m1_134  [color=green, key=1, label=request, style=dashed];
m2_45 -> m2_45  [color=green, key=1, label="System.Net.HttpListenerContext", style=dashed];
m3_31 -> m3_43  [color=green, key=1, label=writer, style=dashed];
m3_35 -> m3_37  [color=green, key=1, label=fromTemp, style=dashed];
m3_37 -> m3_43  [color=green, key=1, label=writer, style=dashed];
m4_11 -> m4_14  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m4_12 -> m4_20  [color=green, key=1, label="lambda expression", style=dashed];
m4_4 -> m4_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_5 -> m4_8  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m4_25 -> m4_31  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m4_25 -> m4_32  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m4_27 -> m4_31  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m4_27 -> m4_32  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m4_29 -> m4_31  [color=darkseagreen4, key=1, label=method, style=dashed];
m4_29 -> m4_32  [color=darkseagreen4, key=1, label=method, style=dashed];
m5_6 -> m5_8  [color=green, key=1, label="out string", style=dashed];
m5_10 -> m5_19  [color=green, key=1, label=string, style=dashed];
m5_10 -> m5_22  [color=green, key=1, label=string, style=dashed];
m5_11 -> m5_14  [color=green, key=1, label="ref System.Text.StringBuilder", style=dashed];
m5_11 -> m5_15  [color=green, key=1, label="ref System.Text.StringBuilder", style=dashed];
m5_18 -> m5_21  [color=green, key=1, label=sb, style=dashed];
m5_18 -> m5_22  [color=green, key=1, label=sb, style=dashed];
m5_221 -> m5_229  [color=green, key=1, label=char, style=dashed];
m5_152 -> m5_154  [color=green, key=1, label=c, style=dashed];
m5_152 -> m5_155  [color=green, key=1, label=c, style=dashed];
m5_152 -> m5_157  [color=green, key=1, label=c, style=dashed];
m5_152 -> m5_158  [color=green, key=1, label=c, style=dashed];
m5_152 -> m5_168  [color=green, key=1, label=c, style=dashed];
m5_152 -> m5_171  [color=green, key=1, label=c, style=dashed];
m5_152 -> m5_176  [color=green, key=1, label=c, style=dashed];
m5_152 -> m5_178  [color=green, key=1, label=c, style=dashed];
m5_152 -> m5_179  [color=green, key=1, label=c, style=dashed];
m5_152 -> m5_187  [color=green, key=1, label=c, style=dashed];
m5_152 -> m5_196  [color=green, key=1, label=c, style=dashed];
m5_152 -> m5_199  [color=green, key=1, label=c, style=dashed];
m5_152 -> m5_202  [color=green, key=1, label=c, style=dashed];
m5_152 -> m5_208  [color=green, key=1, label=c, style=dashed];
m5_39 -> m5_271  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_39 -> m5_273  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_39 -> m5_275  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_39 -> m5_277  [color=green, key=1, label=char, style=dashed];
m5_39 -> m5_278  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_39 -> m5_279  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_39 -> m5_280  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_39 -> m5_281  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_268 -> m5_270  [color=green, key=1, label=bIn, style=dashed];
m5_269 -> m5_276  [color=green, key=1, label=i, style=dashed];
m5_276 -> m5_276  [color=green, key=1, label=i, style=dashed];
m5_42 -> m5_48  [color=green, key=1, label=int, style=dashed];
m5_42 -> m5_50  [color=green, key=1, label=int, style=dashed];
m5_42 -> m5_56  [color=green, key=1, label="byte[]", style=dashed];
m5_45 -> m5_48  [color=green, key=1, label=blen, style=dashed];
m5_45 -> m5_50  [color=green, key=1, label=blen, style=dashed];
m5_52 -> m5_56  [color=green, key=1, label=result, style=dashed];
m5_52 -> m5_58  [color=green, key=1, label=result, style=dashed];
m5_53 -> m5_55  [color=green, key=1, label=end, style=dashed];
m5_54 -> m5_56  [color=green, key=1, label=i, style=dashed];
m5_54 -> m5_57  [color=green, key=1, label=i, style=dashed];
m5_57 -> m5_57  [color=green, key=1, label=i, style=dashed];
m5_63 -> m5_236  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_63 -> m5_237  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_63 -> m5_239  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_63 -> m5_241  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_63 -> m5_243  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_63 -> m5_245  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_63 -> m5_247  [color=green, key=1, label=char, style=dashed];
m5_63 -> m5_248  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_63 -> m5_250  [color=green, key=1, label=char, style=dashed];
m5_63 -> m5_251  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_63 -> m5_253  [color=green, key=1, label=char, style=dashed];
m5_63 -> m5_254  [color=green, key=1, label=bool, style=dashed];
m5_63 -> m5_255  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_63 -> m5_256  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_63 -> m5_257  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_63 -> m5_258  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_63 -> m5_259  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_63 -> m5_261  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_63 -> m5_263  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_63 -> m5_264  [color=green, key=1, label="System.IO.Stream", style=dashed];
m5_19 -> m5_21  [color=green, key=1, label=ch, style=dashed];
m5_21 -> m5_21  [color=green, key=1, label=sb, style=dashed];
m5_21 -> m5_22  [color=green, key=1, label=sb, style=dashed];
m5_26 -> m5_28  [color=green, key=1, label=string, style=dashed];
m5_107 -> m5_110  [color=green, key=1, label=string, style=dashed];
m5_107 -> m5_114  [color=green, key=1, label=string, style=dashed];
m5_107 -> m5_120  [color=green, key=1, label=string, style=dashed];
m5_107 -> m5_125  [color=green, key=1, label=string, style=dashed];
m5_107 -> m5_132  [color=green, key=1, label=string, style=dashed];
m5_122 -> m5_124  [color=green, key=1, label=len, style=dashed];
m5_112 -> m5_119  [color=green, key=1, label=needEncode, style=dashed];
m5_113 -> m5_118  [color=green, key=1, label=i, style=dashed];
m5_118 -> m5_118  [color=green, key=1, label=i, style=dashed];
m5_121 -> m5_127  [color=green, key=1, label=output, style=dashed];
m5_121 -> m5_129  [color=green, key=1, label=output, style=dashed];
m5_121 -> m5_131  [color=green, key=1, label=output, style=dashed];
m5_121 -> m5_132  [color=green, key=1, label=output, style=dashed];
m5_121 -> m5_134  [color=green, key=1, label=output, style=dashed];
m5_123 -> m5_125  [color=green, key=1, label=i, style=dashed];
m5_123 -> m5_132  [color=green, key=1, label=i, style=dashed];
m5_123 -> m5_133  [color=green, key=1, label=i, style=dashed];
m5_133 -> m5_133  [color=green, key=1, label=i, style=dashed];
m5_136 -> m5_139  [color=green, key=1, label=string, style=dashed];
m5_136 -> m5_141  [color=green, key=1, label=string, style=dashed];
m5_136 -> m5_142  [color=green, key=1, label=string, style=dashed];
m5_145 -> m5_151  [color=green, key=1, label=len, style=dashed];
m5_143 -> m5_155  [color=green, key=1, label=entity, style=dashed];
m5_143 -> m5_161  [color=green, key=1, label=entity, style=dashed];
m5_143 -> m5_163  [color=green, key=1, label=entity, style=dashed];
m5_143 -> m5_165  [color=green, key=1, label=entity, style=dashed];
m5_143 -> m5_170  [color=green, key=1, label=entity, style=dashed];
m5_143 -> m5_176  [color=green, key=1, label=entity, style=dashed];
m5_143 -> m5_178  [color=green, key=1, label=entity, style=dashed];
m5_143 -> m5_206  [color=green, key=1, label=entity, style=dashed];
m5_143 -> m5_208  [color=green, key=1, label=entity, style=dashed];
m5_143 -> m5_210  [color=green, key=1, label=entity, style=dashed];
m5_143 -> m5_211  [color=green, key=1, label=entity, style=dashed];
m5_144 -> m5_157  [color=green, key=1, label=output, style=dashed];
m5_144 -> m5_163  [color=green, key=1, label=output, style=dashed];
m5_144 -> m5_170  [color=green, key=1, label=output, style=dashed];
m5_144 -> m5_171  [color=green, key=1, label=output, style=dashed];
m5_144 -> m5_183  [color=green, key=1, label=output, style=dashed];
m5_144 -> m5_189  [color=green, key=1, label=output, style=dashed];
m5_144 -> m5_190  [color=green, key=1, label=output, style=dashed];
m5_144 -> m5_191  [color=green, key=1, label=output, style=dashed];
m5_144 -> m5_192  [color=green, key=1, label=output, style=dashed];
m5_144 -> m5_211  [color=green, key=1, label=output, style=dashed];
m5_144 -> m5_213  [color=green, key=1, label=output, style=dashed];
m5_144 -> m5_214  [color=green, key=1, label=output, style=dashed];
m5_180 -> m5_183  [color=green, key=1, label=key, style=dashed];
m5_146 -> m5_153  [color=green, key=1, label=state, style=dashed];
m5_146 -> m5_166  [color=green, key=1, label=state, style=dashed];
m5_147 -> m5_161  [color=green, key=1, label=number, style=dashed];
m5_147 -> m5_188  [color=green, key=1, label=number, style=dashed];
m5_147 -> m5_190  [color=green, key=1, label=number, style=dashed];
m5_147 -> m5_192  [color=green, key=1, label=number, style=dashed];
m5_147 -> m5_202  [color=green, key=1, label=number, style=dashed];
m5_147 -> m5_206  [color=green, key=1, label=number, style=dashed];
m5_147 -> m5_213  [color=green, key=1, label=number, style=dashed];
m5_148 -> m5_196  [color=green, key=1, label=isHexValue, style=dashed];
m5_197 -> m5_213  [color=green, key=1, label=number, style=dashed];
m5_200 -> m5_213  [color=green, key=1, label=number, style=dashed];
m5_149 -> m5_160  [color=green, key=1, label=haveTrailingDigits, style=dashed];
m5_149 -> m5_205  [color=green, key=1, label=haveTrailingDigits, style=dashed];
m5_149 -> m5_212  [color=green, key=1, label=haveTrailingDigits, style=dashed];
m5_150 -> m5_209  [color=green, key=1, label=i, style=dashed];
m5_209 -> m5_209  [color=green, key=1, label=i, style=dashed];
m5_156 -> m5_166  [color=green, key=1, label=state, style=dashed];
m5_159 -> m5_166  [color=green, key=1, label=state, style=dashed];
m5_162 -> m5_205  [color=green, key=1, label=haveTrailingDigits, style=dashed];
m5_162 -> m5_212  [color=green, key=1, label=haveTrailingDigits, style=dashed];
m5_173 -> m5_188  [color=green, key=1, label=number, style=dashed];
m5_173 -> m5_190  [color=green, key=1, label=number, style=dashed];
m5_173 -> m5_192  [color=green, key=1, label=number, style=dashed];
m5_173 -> m5_202  [color=green, key=1, label=number, style=dashed];
m5_173 -> m5_206  [color=green, key=1, label=number, style=dashed];
m5_173 -> m5_213  [color=green, key=1, label=number, style=dashed];
m5_174 -> m5_196  [color=green, key=1, label=isHexValue, style=dashed];
m5_195 -> m5_212  [color=green, key=1, label=haveTrailingDigits, style=dashed];
m5_198 -> m5_212  [color=green, key=1, label=haveTrailingDigits, style=dashed];
m5_201 -> m5_212  [color=green, key=1, label=haveTrailingDigits, style=dashed];
m5_207 -> m5_212  [color=green, key=1, label=haveTrailingDigits, style=dashed];
m5_64 -> m5_67  [color=green, key=1, label=string, style=dashed];
m5_64 -> m5_71  [color=green, key=1, label=string, style=dashed];
m5_64 -> m5_77  [color=green, key=1, label=string, style=dashed];
m5_64 -> m5_82  [color=green, key=1, label=string, style=dashed];
m5_79 -> m5_81  [color=green, key=1, label=len, style=dashed];
m5_95 -> m5_98  [color=green, key=1, label=ch, style=dashed];
m5_95 -> m5_100  [color=green, key=1, label=ch, style=dashed];
m5_69 -> m5_76  [color=green, key=1, label=needEncode, style=dashed];
m5_70 -> m5_75  [color=green, key=1, label=i, style=dashed];
m5_75 -> m5_75  [color=green, key=1, label=i, style=dashed];
m5_78 -> m5_84  [color=green, key=1, label=output, style=dashed];
m5_78 -> m5_86  [color=green, key=1, label=output, style=dashed];
m5_78 -> m5_88  [color=green, key=1, label=output, style=dashed];
m5_78 -> m5_90  [color=green, key=1, label=output, style=dashed];
m5_78 -> m5_92  [color=green, key=1, label=output, style=dashed];
m5_78 -> m5_94  [color=green, key=1, label=output, style=dashed];
m5_78 -> m5_97  [color=green, key=1, label=output, style=dashed];
m5_78 -> m5_98  [color=green, key=1, label=output, style=dashed];
m5_78 -> m5_99  [color=green, key=1, label=output, style=dashed];
m5_78 -> m5_100  [color=green, key=1, label=output, style=dashed];
m5_78 -> m5_102  [color=green, key=1, label=output, style=dashed];
m5_80 -> m5_82  [color=green, key=1, label=i, style=dashed];
m5_80 -> m5_101  [color=green, key=1, label=i, style=dashed];
m5_101 -> m5_101  [color=green, key=1, label=i, style=dashed];
m8_331 -> m8_333  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_331 -> m8_334  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_331 -> m8_335  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_331 -> m8_336  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_331 -> m8_337  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_331 -> m8_338  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_331 -> m8_339  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_331 -> m8_340  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_331 -> m8_341  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_331 -> m8_342  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_331 -> m8_343  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_331 -> m8_344  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_331 -> m8_345  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_331 -> m8_346  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_331 -> m8_347  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_51 -> m8_53  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_323 -> m8_325  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_500 -> m8_502  [color=darkseagreen4, key=1, label=bd, style=dashed];
m8_500 -> m8_503  [color=darkseagreen4, key=1, label=bd, style=dashed];
m8_500 -> m8_504  [color=darkseagreen4, key=1, label=bd, style=dashed];
m8_638 -> m8_642  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_489 -> m8_491  [color=darkseagreen4, key=1, label=bd, style=dashed];
m8_489 -> m8_492  [color=darkseagreen4, key=1, label=bd, style=dashed];
m8_489 -> m8_493  [color=darkseagreen4, key=1, label=bd, style=dashed];
m8_290 -> m8_292  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_290 -> m8_293  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_290 -> m8_294  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_290 -> m8_295  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_290 -> m8_296  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_290 -> m8_297  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_290 -> m8_298  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_290 -> m8_299  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_290 -> m8_300  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_290 -> m8_301  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_290 -> m8_302  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_290 -> m8_303  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_290 -> m8_304  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_290 -> m8_305  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_290 -> m8_306  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_290 -> m8_307  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_290 -> m8_308  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_290 -> m8_309  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_290 -> m8_310  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_358 -> m8_360  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_358 -> m8_361  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_358 -> m8_362  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_358 -> m8_363  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_358 -> m8_364  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_358 -> m8_365  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_358 -> m8_366  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_358 -> m8_367  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_358 -> m8_368  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_358 -> m8_369  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_358 -> m8_370  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_358 -> m8_371  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_358 -> m8_372  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_358 -> m8_373  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_196 -> m8_198  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_164 -> m8_166  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_164 -> m8_167  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_245 -> m8_247  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_245 -> m8_248  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_245 -> m8_249  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_245 -> m8_250  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_245 -> m8_251  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_245 -> m8_252  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_245 -> m8_253  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_183 -> m8_185  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_183 -> m8_186  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_183 -> m8_187  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_183 -> m8_188  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_183 -> m8_189  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_183 -> m8_190  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_114 -> m8_122  [color=darkseagreen4, key=1, label=id1, style=dashed];
m8_115 -> m8_123  [color=darkseagreen4, key=1, label=id2, style=dashed];
m8_120 -> m8_122  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_120 -> m8_123  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_203 -> m8_209  [color=darkseagreen4, key=1, label=date, style=dashed];
m8_145 -> m8_153  [color=darkseagreen4, key=1, label=item0, style=dashed];
m8_146 -> m8_154  [color=darkseagreen4, key=1, label=item1, style=dashed];
m8_152 -> m8_154  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_152 -> m8_155  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_152 -> m8_156  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_174 -> m8_176  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_174 -> m8_177  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_3 -> m8_5  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_3 -> m8_6  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_4 -> m8_6  [color=darkseagreen4, key=1, label=expected, style=dashed];
m8_42 -> m8_44  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_477 -> m8_479  [color=darkseagreen4, key=1, label=payload, style=dashed];
m8_595 -> m8_597  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_591 -> m8_593  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_644 -> m8_649  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_231 -> m8_233  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_231 -> m8_234  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_231 -> m8_235  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_231 -> m8_236  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_231 -> m8_237  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_231 -> m8_238  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_231 -> m8_239  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_537 -> m8_539  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_130 -> m8_138  [color=darkseagreen4, key=1, label=item1, style=dashed];
m8_131 -> m8_139  [color=darkseagreen4, key=1, label=item2, style=dashed];
m8_136 -> m8_138  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_136 -> m8_139  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_632 -> m8_636  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_64 -> m8_66  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_64 -> m8_67  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_542 -> m8_562  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_554 -> m8_557  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m8_555 -> m8_557  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_555 -> m8_558  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_558 -> m8_558  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_395 -> m8_397  [color=darkseagreen4, key=1, label=payload, style=dashed];
m8_395 -> m8_398  [color=darkseagreen4, key=1, label=payload, style=dashed];
m8_395 -> m8_399  [color=darkseagreen4, key=1, label=payload, style=dashed];
m8_395 -> m8_400  [color=darkseagreen4, key=1, label=payload, style=dashed];
m8_395 -> m8_401  [color=darkseagreen4, key=1, label=payload, style=dashed];
m8_395 -> m8_402  [color=darkseagreen4, key=1, label=payload, style=dashed];
m8_395 -> m8_403  [color=darkseagreen4, key=1, label=payload, style=dashed];
m8_395 -> m8_404  [color=darkseagreen4, key=1, label=payload, style=dashed];
m8_395 -> m8_405  [color=darkseagreen4, key=1, label=payload, style=dashed];
m8_395 -> m8_406  [color=darkseagreen4, key=1, label=payload, style=dashed];
m8_395 -> m8_407  [color=darkseagreen4, key=1, label=payload, style=dashed];
m8_395 -> m8_408  [color=darkseagreen4, key=1, label=payload, style=dashed];
m8_395 -> m8_409  [color=darkseagreen4, key=1, label=payload, style=dashed];
m8_17 -> m8_19  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_19 -> m8_19  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_20 -> m8_20  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_21 -> m8_21  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_565 -> m8_585  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_577 -> m8_580  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m8_578 -> m8_580  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_578 -> m8_581  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_581 -> m8_581  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_659 -> m8_661  [color=darkseagreen4, key=1, label=response, style=dashed];
m8_521 -> m8_523  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_521 -> m8_524  [color=darkseagreen4, key=1, label=output, style=dashed];
m8_599 -> m8_623  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_615 -> m8_618  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m8_616 -> m8_618  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_616 -> m8_619  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_619 -> m8_619  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_450 -> m8_452  [color=darkseagreen4, key=1, label=payload, style=dashed];
m8_651 -> m8_656  [color=darkseagreen4, key=1, label=doc, style=dashed];
m8_626 -> m8_630  [color=darkseagreen4, key=1, label=doc, style=dashed];
m10_23 -> m10_27  [color=green, key=1, label=request, style=dashed];
m10_23 -> m10_25  [color=green, key=1, label=request, style=dashed];
m10_23 -> m10_26  [color=green, key=1, label=request, style=dashed];
m10_50 -> m10_119  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m10_69 -> m10_71  [color=green, key=1, label=syncResponse, style=dashed];
m10_68 -> m10_78  [color=green, key=1, label=eventWaitHandle, style=dashed];
m10_68 -> m10_70  [color=green, key=1, label=eventWaitHandle, style=dashed];
m10_24 -> m10_40  [color=green, key=1, label="RestSharp.IRestResponse", style=dashed];
m10_32 -> m10_34  [color=green, key=1, label=request, style=dashed];
m10_110 -> m10_113  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m11_77 -> m11_79  [color=darkseagreen4, key=1, label=response, style=dashed];
m11_77 -> m11_80  [color=darkseagreen4, key=1, label=response, style=dashed];
m11_77 -> m11_81  [color=darkseagreen4, key=1, label=response, style=dashed];
m11_64 -> m11_66  [color=darkseagreen4, key=1, label=response, style=dashed];
m11_64 -> m11_67  [color=darkseagreen4, key=1, label=response, style=dashed];
m11_64 -> m11_68  [color=darkseagreen4, key=1, label=response, style=dashed];
m11_64 -> m11_69  [color=darkseagreen4, key=1, label=response, style=dashed];
m11_27 -> m11_29  [color=darkseagreen4, key=1, label=response, style=dashed];
m11_27 -> m11_30  [color=darkseagreen4, key=1, label=response, style=dashed];
m11_35 -> m11_37  [color=darkseagreen4, key=1, label=baseUrl, style=dashed];
m11_36 -> m11_42  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m11_36 -> m11_54  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m11_41 -> m11_43  [color=darkseagreen4, key=1, label=response, style=dashed];
m11_41 -> m11_44  [color=darkseagreen4, key=1, label=response, style=dashed];
m11_41 -> m11_45  [color=darkseagreen4, key=1, label=response, style=dashed];
m11_41 -> m11_46  [color=darkseagreen4, key=1, label=response, style=dashed];
m11_41 -> m11_47  [color=darkseagreen4, key=1, label=response, style=dashed];
m11_41 -> m11_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_53 -> m11_55  [color=darkseagreen4, key=1, label=response, style=dashed];
m12_45 -> m12_47  [color=darkseagreen4, key=1, label=doc, style=dashed];
m12_45 -> m12_48  [color=darkseagreen4, key=1, label=doc, style=dashed];
m12_45 -> m12_49  [color=darkseagreen4, key=1, label=doc, style=dashed];
m12_45 -> m12_50  [color=darkseagreen4, key=1, label=doc, style=dashed];
m13_15 -> m13_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_4 -> m13_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_10 -> m13_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_22 -> m13_28  [color=green, key=1, label=consumerSecret, style=dashed];
m14_19 -> m14_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_35 -> m14_37  [color=darkseagreen4, key=1, label=accepts, style=dashed];
m14_85 -> m14_87  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m14_157 -> m14_164  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m14_157 -> m14_165  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m14_157 -> m14_166  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m14_157 -> m14_168  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m14_157 -> m14_180  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m14_157 -> m14_184  [color=darkseagreen4, key=1, label="RestSharp.IHttp", style=dashed];
m14_157 -> m14_187  [color=darkseagreen4, key=1, label="RestSharp.IHttp", style=dashed];
m14_157 -> m14_190  [color=darkseagreen4, key=1, label="RestSharp.IHttp", style=dashed];
m14_157 -> m14_191  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m14_157 -> m14_196  [color=darkseagreen4, key=1, label="RestSharp.IHttp", style=dashed];
m14_164 -> m14_215  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_166 -> m14_218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_193 -> m14_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_163 -> m14_165  [color=darkseagreen4, key=1, label=p, style=dashed];
m14_163 -> m14_216  [color=darkseagreen4, key=1, label=p, style=dashed];
m14_90 -> m14_110  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m14_225 -> m14_227  [color=darkseagreen4, key=1, label="RestSharp.HttpResponse", style=dashed];
m14_225 -> m14_229  [color=darkseagreen4, key=1, label="RestSharp.HttpResponse", style=dashed];
m14_226 -> m14_231  [color=darkseagreen4, key=1, label=restResponse, style=dashed];
m14_62 -> m14_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_62 -> m14_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_62 -> m14_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_69 -> m14_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_74 -> m14_76  [color=darkseagreen4, key=1, label=structuredSyntaxSuffixWildcard, style=dashed];
m14_238 -> m14_240  [color=darkseagreen4, key=1, label=response, style=dashed];
m14_238 -> m14_251  [color=darkseagreen4, key=1, label=response, style=dashed];
m14_93 -> m14_99  [color=darkseagreen4, key=1, label=assembled, style=dashed];
m14_93 -> m14_103  [color=darkseagreen4, key=1, label=assembled, style=dashed];
m14_93 -> m14_106  [color=darkseagreen4, key=1, label=assembled, style=dashed];
m14_93 -> m14_114  [color=darkseagreen4, key=1, label=assembled, style=dashed];
m14_94 -> m14_96  [color=darkseagreen4, key=1, label=urlParms, style=dashed];
m14_94 -> m14_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_111 -> m14_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_112 -> m14_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_100 -> m14_103  [color=darkseagreen4, key=1, label=assembled, style=dashed];
m14_100 -> m14_106  [color=darkseagreen4, key=1, label=assembled, style=dashed];
m14_100 -> m14_114  [color=darkseagreen4, key=1, label=assembled, style=dashed];
m14_104 -> m14_106  [color=darkseagreen4, key=1, label=assembled, style=dashed];
m14_104 -> m14_114  [color=darkseagreen4, key=1, label=assembled, style=dashed];
m14_108 -> m14_114  [color=darkseagreen4, key=1, label=assembled, style=dashed];
m14_96 -> m14_98  [color=darkseagreen4, key=1, label=p, style=dashed];
m14_45 -> m14_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_102 -> m15_106  [color=darkseagreen4, key=1, label=val, style=dashed];
m15_102 -> m15_110  [color=darkseagreen4, key=1, label=val, style=dashed];
m15_91 -> m15_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_87 -> m15_89  [color=darkseagreen4, key=1, label=object, style=dashed];
m15_83 -> m15_85  [color=darkseagreen4, key=1, label=object, style=dashed];
m15_74 -> m15_76  [color=darkseagreen4, key=1, label=serialized, style=dashed];
m15_30 -> m15_38  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m15_98 -> m15_110  [color=darkseagreen4, key=1, label=prop, style=dashed];
m15_101 -> m15_104  [color=darkseagreen4, key=1, label=propType, style=dashed];
m15_138 -> m15_141  [color=green, key=1, label=string, style=dashed];
m15_138 -> m15_143  [color=green, key=1, label=string, style=dashed];
m15_139 -> m15_148  [color=darkseagreen4, key=1, label=portSplit, style=dashed];
m15_140 -> m15_148  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_56 -> m15_60  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m15_36 -> m15_38  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m15_58 -> m15_60  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m17_59 -> m17_61  [color=green, key=1, label="System.Net.HttpListenerContext", style=dashed];
m17_59 -> m17_62  [color=green, key=1, label="System.Net.HttpListenerContext", style=dashed];
m17_66 -> m17_68  [color=green, key=1, label="System.Net.HttpListenerContext", style=dashed];
m17_66 -> m17_69  [color=green, key=1, label="System.Net.HttpListenerContext", style=dashed];
m17_35 -> m17_37  [color=darkseagreen4, key=1, label=response, style=dashed];
m17_34 -> m17_42  [color=darkseagreen4, key=1, label="RestSharp.IRestResponse", style=dashed];
m17_51 -> m17_53  [color=darkseagreen4, key=1, label=response, style=dashed];
m17_50 -> m17_56  [color=darkseagreen4, key=1, label="RestSharp.IRestResponse", style=dashed];
m18_4 -> m18_6  [color=darkseagreen4, key=1, label=expected, style=dashed];
m18_164 -> m18_166  [color=darkseagreen4, key=1, label=request, style=dashed];
m18_168 -> m18_170  [color=darkseagreen4, key=1, label=expected, style=dashed];
m18_80 -> m18_94  [color=darkseagreen4, key=1, label=request, style=dashed];
m18_83 -> m18_86  [color=darkseagreen4, key=1, label=exception, style=dashed];
m18_83 -> m18_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_82 -> m18_94  [color=darkseagreen4, key=1, label=client, style=dashed];
m18_35 -> m18_37  [color=darkseagreen4, key=1, label=expected, style=dashed];
m18_173 -> m18_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_150 -> m18_152  [color=darkseagreen4, key=1, label=expected, style=dashed];
m18_100 -> m18_102  [color=darkseagreen4, key=1, label=expected, style=dashed];
m18_26 -> m18_28  [color=darkseagreen4, key=1, label=expected, style=dashed];
m18_107 -> m18_109  [color=darkseagreen4, key=1, label=expected, style=dashed];
m18_59 -> m18_61  [color=darkseagreen4, key=1, label=expected, style=dashed];
m18_128 -> m18_130  [color=darkseagreen4, key=1, label=request, style=dashed];
m18_128 -> m18_131  [color=darkseagreen4, key=1, label=request, style=dashed];
m18_128 -> m18_132  [color=darkseagreen4, key=1, label=request, style=dashed];
m18_134 -> m18_136  [color=darkseagreen4, key=1, label=expected, style=dashed];
m18_142 -> m18_144  [color=darkseagreen4, key=1, label=expected, style=dashed];
m18_40 -> m18_42  [color=darkseagreen4, key=1, label=request, style=dashed];
m18_40 -> m18_45  [color=darkseagreen4, key=1, label=request, style=dashed];
m18_41 -> m18_45  [color=darkseagreen4, key=1, label=client, style=dashed];
m18_44 -> m18_46  [color=darkseagreen4, key=1, label=output, style=dashed];
m18_43 -> m18_46  [color=darkseagreen4, key=1, label=expected, style=dashed];
m18_155 -> m18_157  [color=darkseagreen4, key=1, label=request, style=dashed];
m18_159 -> m18_161  [color=darkseagreen4, key=1, label=expected, style=dashed];
m18_74 -> m18_76  [color=darkseagreen4, key=1, label=expected, style=dashed];
m18_122 -> m18_124  [color=darkseagreen4, key=1, label=expected, style=dashed];
m18_66 -> m18_68  [color=darkseagreen4, key=1, label=expected, style=dashed];
m18_114 -> m18_116  [color=darkseagreen4, key=1, label=expected, style=dashed];
m18_52 -> m18_54  [color=darkseagreen4, key=1, label=expected, style=dashed];
m18_17 -> m18_19  [color=darkseagreen4, key=1, label=expected, style=dashed];
m19_165 -> m19_222  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m19_165 -> m19_224  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m19_165 -> m19_227  [color=darkseagreen4, key=1, label=XElement, style=dashed];
m19_226 -> m19_228  [color=darkseagreen4, key=1, label=item, style=dashed];
m19_145 -> m19_177  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m19_145 -> m19_181  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m19_176 -> m19_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_53 -> m19_64  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_53 -> m19_72  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_53 -> m19_76  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_53 -> m19_79  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_53 -> m19_80  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_53 -> m19_81  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_53 -> m19_84  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_53 -> m19_87  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_53 -> m19_89  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_53 -> m19_92  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_53 -> m19_100  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_53 -> m19_104  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_53 -> m19_107  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_53 -> m19_111  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_53 -> m19_114  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_53 -> m19_124  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_53 -> m19_128  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_30 -> m19_68  [color=darkseagreen4, key=1, label=XElement, style=dashed];
m19_30 -> m19_71  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_30 -> m19_74  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_30 -> m19_78  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_30 -> m19_80  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_30 -> m19_83  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_30 -> m19_86  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_30 -> m19_88  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_30 -> m19_91  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_30 -> m19_97  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_30 -> m19_101  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_30 -> m19_103  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_30 -> m19_106  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_30 -> m19_110  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_30 -> m19_113  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_30 -> m19_123  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_30 -> m19_126  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_30 -> m19_129  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_30 -> m19_130  [color=darkseagreen4, key=1, label=XElement, style=dashed];
m19_30 -> m19_134  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_30 -> m19_135  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_29 -> m19_202  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m19_29 -> m19_203  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_183 -> m19_201  [color=darkseagreen4, key=1, label=t, style=dashed];
m19_184 -> m19_201  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_184 -> m19_203  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_184 -> m19_204  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_185 -> m19_190  [color=darkseagreen4, key=1, label=elements, style=dashed];
m19_185 -> m19_193  [color=darkseagreen4, key=1, label=elements, style=dashed];
m19_185 -> m19_196  [color=darkseagreen4, key=1, label=elements, style=dashed];
m19_185 -> m19_198  [color=darkseagreen4, key=1, label=elements, style=dashed];
m19_185 -> m19_201  [color=darkseagreen4, key=1, label=elements, style=dashed];
m19_192 -> m19_196  [color=darkseagreen4, key=1, label=elements, style=dashed];
m19_192 -> m19_198  [color=darkseagreen4, key=1, label=elements, style=dashed];
m19_192 -> m19_201  [color=darkseagreen4, key=1, label=elements, style=dashed];
m19_195 -> m19_198  [color=darkseagreen4, key=1, label=elements, style=dashed];
m19_195 -> m19_201  [color=darkseagreen4, key=1, label=elements, style=dashed];
m19_197 -> m19_201  [color=darkseagreen4, key=1, label=elements, style=dashed];
m19_197 -> m19_214  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_200 -> m19_218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_186 -> m19_215  [color=darkseagreen4, key=1, label=name, style=dashed];
m19_199 -> m19_219  [color=darkseagreen4, key=1, label=lowerName, style=dashed];
m19_189 -> m19_215  [color=darkseagreen4, key=1, label=name, style=dashed];
m19_140 -> m19_232  [color=darkseagreen4, key=1, label=XElement, style=dashed];
m19_231 -> m19_240  [color=darkseagreen4, key=1, label=val, style=dashed];
m19_233 -> m19_238  [color=darkseagreen4, key=1, label=element, style=dashed];
m19_52 -> m19_55  [color=darkseagreen4, key=1, label=prop, style=dashed];
m19_52 -> m19_71  [color=darkseagreen4, key=1, label=prop, style=dashed];
m19_52 -> m19_74  [color=darkseagreen4, key=1, label=prop, style=dashed];
m19_52 -> m19_78  [color=darkseagreen4, key=1, label=prop, style=dashed];
m19_52 -> m19_80  [color=darkseagreen4, key=1, label=prop, style=dashed];
m19_52 -> m19_83  [color=darkseagreen4, key=1, label=prop, style=dashed];
m19_52 -> m19_86  [color=darkseagreen4, key=1, label=prop, style=dashed];
m19_52 -> m19_88  [color=darkseagreen4, key=1, label=prop, style=dashed];
m19_52 -> m19_91  [color=darkseagreen4, key=1, label=prop, style=dashed];
m19_52 -> m19_97  [color=darkseagreen4, key=1, label=prop, style=dashed];
m19_52 -> m19_101  [color=darkseagreen4, key=1, label=prop, style=dashed];
m19_52 -> m19_103  [color=darkseagreen4, key=1, label=prop, style=dashed];
m19_52 -> m19_106  [color=darkseagreen4, key=1, label=prop, style=dashed];
m19_52 -> m19_110  [color=darkseagreen4, key=1, label=prop, style=dashed];
m19_52 -> m19_113  [color=darkseagreen4, key=1, label=prop, style=dashed];
m19_52 -> m19_123  [color=darkseagreen4, key=1, label=prop, style=dashed];
m19_52 -> m19_126  [color=darkseagreen4, key=1, label=prop, style=dashed];
m19_52 -> m19_129  [color=darkseagreen4, key=1, label=prop, style=dashed];
m19_52 -> m19_134  [color=darkseagreen4, key=1, label=prop, style=dashed];
m19_163 -> m19_245  [color=darkseagreen4, key=1, label=XName, style=dashed];
m19_163 -> m19_246  [color=darkseagreen4, key=1, label=XName, style=dashed];
m19_163 -> m19_247  [color=darkseagreen4, key=1, label=XElement, style=dashed];
m19_163 -> m19_248  [color=darkseagreen4, key=1, label=XElement, style=dashed];
m19_163 -> m19_249  [color=darkseagreen4, key=1, label=XElement, style=dashed];
m19_163 -> m19_250  [color=darkseagreen4, key=1, label=XElement, style=dashed];
m19_163 -> m19_252  [color=darkseagreen4, key=1, label=XElement, style=dashed];
m19_163 -> m19_253  [color=darkseagreen4, key=1, label=XName, style=dashed];
m19_163 -> m19_265  [color=darkseagreen4, key=1, label=XName, style=dashed];
m19_163 -> m19_271  [color=darkseagreen4, key=1, label=XName, style=dashed];
m19_242 -> m19_274  [color=darkseagreen4, key=1, label=XElement, style=dashed];
m19_25 -> m19_32  [color=darkseagreen4, key=1, label=XDocument, style=dashed];
m19_32 -> m19_35  [color=darkseagreen4, key=1, label=e, style=dashed];
m19_32 -> m19_36  [color=darkseagreen4, key=1, label=e, style=dashed];
m19_6 -> m19_8  [color=darkseagreen4, key=1, label=doc, style=dashed];
m19_6 -> m19_11  [color=darkseagreen4, key=1, label=doc, style=dashed];
m19_34 -> m19_36  [color=darkseagreen4, key=1, label=e, style=dashed];
m19_35 -> m19_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_36 -> m19_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_273 -> m19_281  [color=darkseagreen4, key=1, label=names, style=dashed];
m19_274 -> m19_277  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_274 -> m19_280  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_93 -> m19_100  [color=darkseagreen4, key=1, label=toConvert, style=dashed];
m19_170 -> m19_172  [color=darkseagreen4, key=1, label="out object", style=dashed];
m19_243 -> m19_247  [color=darkseagreen4, key=1, label=lowerName, style=dashed];
m19_243 -> m19_248  [color=darkseagreen4, key=1, label=lowerName, style=dashed];
m19_244 -> m19_249  [color=darkseagreen4, key=1, label=camelName, style=dashed];
m19_244 -> m19_250  [color=darkseagreen4, key=1, label=camelName, style=dashed];
m19_253 -> m19_259  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_253 -> m19_264  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_253 -> m19_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_253 -> m19_270  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_65 -> m19_70  [color=darkseagreen4, key=1, label=genericType, style=dashed];
m19_67 -> m19_70  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_67 -> m19_71  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_115 -> m19_122  [color=darkseagreen4, key=1, label=t, style=dashed];
m19_116 -> m19_122  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_116 -> m19_123  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_62 -> m19_73  [color=darkseagreen4, key=1, label=value, style=dashed];
m19_62 -> m19_80  [color=darkseagreen4, key=1, label=value, style=dashed];
m19_62 -> m19_88  [color=darkseagreen4, key=1, label=value, style=dashed];
m19_62 -> m19_128  [color=darkseagreen4, key=1, label=value, style=dashed];
m19_66 -> m19_68  [color=darkseagreen4, key=1, label=first, style=dashed];
m19_75 -> m19_79  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_75 -> m19_80  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_75 -> m19_81  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_75 -> m19_84  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_75 -> m19_87  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_75 -> m19_89  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_75 -> m19_92  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_75 -> m19_100  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_75 -> m19_104  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_75 -> m19_107  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_75 -> m19_111  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_75 -> m19_114  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_75 -> m19_124  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_75 -> m19_128  [color=darkseagreen4, key=1, label=type, style=dashed];
m20_456 -> m20_458  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_456 -> m20_459  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_40 -> m20_42  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_42 -> m20_42  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_43 -> m20_43  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_44 -> m20_44  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_145 -> m20_147  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_145 -> m20_148  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_145 -> m20_149  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_513 -> m20_540  [color=green, key=1, label=doc, style=dashed];
m20_513 -> m20_541  [color=green, key=1, label=doc, style=dashed];
m20_514 -> m20_516  [color=green, key=1, label=root, style=dashed];
m20_514 -> m20_517  [color=green, key=1, label=root, style=dashed];
m20_514 -> m20_518  [color=green, key=1, label=root, style=dashed];
m20_514 -> m20_519  [color=green, key=1, label=root, style=dashed];
m20_514 -> m20_520  [color=green, key=1, label=root, style=dashed];
m20_514 -> m20_521  [color=green, key=1, label=root, style=dashed];
m20_514 -> m20_522  [color=green, key=1, label=root, style=dashed];
m20_514 -> m20_523  [color=green, key=1, label=root, style=dashed];
m20_514 -> m20_524  [color=green, key=1, label=root, style=dashed];
m20_514 -> m20_525  [color=green, key=1, label=root, style=dashed];
m20_514 -> m20_526  [color=green, key=1, label=root, style=dashed];
m20_514 -> m20_532  [color=green, key=1, label=root, style=dashed];
m20_514 -> m20_539  [color=green, key=1, label=root, style=dashed];
m20_514 -> m20_540  [color=green, key=1, label=root, style=dashed];
m20_527 -> m20_530  [color=darkseagreen4, key=1, label=friends, style=dashed];
m20_527 -> m20_532  [color=darkseagreen4, key=1, label=friends, style=dashed];
m20_528 -> m20_530  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_528 -> m20_531  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_531 -> m20_531  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_497 -> m20_499  [color=green, key=1, label=i, style=dashed];
m20_497 -> m20_500  [color=green, key=1, label=i, style=dashed];
m20_533 -> m20_537  [color=darkseagreen4, key=1, label=foes, style=dashed];
m20_533 -> m20_539  [color=darkseagreen4, key=1, label=foes, style=dashed];
m20_535 -> m20_537  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_535 -> m20_538  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_538 -> m20_538  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_7 -> m20_9  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_7 -> m20_10  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_7 -> m20_11  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_447 -> m20_449  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_447 -> m20_450  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_80 -> m20_82  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_412 -> m20_414  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_412 -> m20_415  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_309 -> m20_311  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_309 -> m20_312  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_309 -> m20_313  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_309 -> m20_314  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_309 -> m20_315  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_309 -> m20_316  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_309 -> m20_317  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_309 -> m20_318  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_309 -> m20_319  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_309 -> m20_320  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_309 -> m20_321  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_309 -> m20_322  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_309 -> m20_323  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_309 -> m20_324  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_309 -> m20_325  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_309 -> m20_326  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_31 -> m20_33  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_33 -> m20_33  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_34 -> m20_34  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_35 -> m20_35  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_252 -> m20_254  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_252 -> m20_255  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_252 -> m20_256  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_252 -> m20_257  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_252 -> m20_258  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_252 -> m20_259  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_252 -> m20_260  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_252 -> m20_261  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_252 -> m20_262  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_252 -> m20_263  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_252 -> m20_264  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_104 -> m20_106  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_119 -> m20_121  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_210 -> m20_215  [color=darkseagreen4, key=1, label=culture, style=dashed];
m20_211 -> m20_215  [color=darkseagreen4, key=1, label=format, style=dashed];
m20_212 -> m20_215  [color=darkseagreen4, key=1, label=date, style=dashed];
m20_212 -> m20_220  [color=darkseagreen4, key=1, label=date, style=dashed];
m20_213 -> m20_216  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_214 -> m20_216  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_166 -> m20_168  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_166 -> m20_169  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_166 -> m20_170  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_166 -> m20_171  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_166 -> m20_172  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_174 -> m20_629  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m20_179 -> m20_190  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_180 -> m20_188  [color=darkseagreen4, key=1, label=nullTimespan, style=dashed];
m20_181 -> m20_189  [color=darkseagreen4, key=1, label=nullValueTimeSpan, style=dashed];
m20_182 -> m20_184  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_182 -> m20_185  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_182 -> m20_186  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_182 -> m20_187  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_182 -> m20_188  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_182 -> m20_189  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_182 -> m20_190  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_193 -> m20_195  [color=darkseagreen4, key=1, label=payload, style=dashed];
m20_193 -> m20_196  [color=darkseagreen4, key=1, label=payload, style=dashed];
m20_193 -> m20_197  [color=darkseagreen4, key=1, label=payload, style=dashed];
m20_193 -> m20_198  [color=darkseagreen4, key=1, label=payload, style=dashed];
m20_193 -> m20_199  [color=darkseagreen4, key=1, label=payload, style=dashed];
m20_193 -> m20_200  [color=darkseagreen4, key=1, label=payload, style=dashed];
m20_193 -> m20_201  [color=darkseagreen4, key=1, label=payload, style=dashed];
m20_127 -> m20_129  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_604 -> m20_618  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_604 -> m20_619  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_605 -> m20_607  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_605 -> m20_608  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_605 -> m20_609  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_605 -> m20_610  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_605 -> m20_611  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_605 -> m20_612  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_605 -> m20_613  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_605 -> m20_614  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_605 -> m20_615  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_605 -> m20_616  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_605 -> m20_617  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_605 -> m20_618  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_654 -> m20_659  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_654 -> m20_660  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_655 -> m20_658  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_655 -> m20_659  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_656 -> m20_658  [color=darkseagreen4, key=1, label=idElement, style=dashed];
m20_72 -> m20_74  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_50 -> m20_52  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_50 -> m20_53  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_50 -> m20_54  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_640 -> m20_642  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_640 -> m20_643  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_573 -> m20_575  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_573 -> m20_576  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_391 -> m20_393  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_391 -> m20_394  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_391 -> m20_395  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_391 -> m20_396  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_134 -> m20_136  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_134 -> m20_137  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_134 -> m20_138  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_333 -> m20_335  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_333 -> m20_336  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_333 -> m20_337  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_333 -> m20_338  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_333 -> m20_339  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_333 -> m20_340  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_333 -> m20_341  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_333 -> m20_342  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_333 -> m20_343  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_333 -> m20_344  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_333 -> m20_345  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_333 -> m20_346  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_333 -> m20_347  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_333 -> m20_348  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_333 -> m20_349  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_333 -> m20_350  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_578 -> m20_601  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_578 -> m20_602  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_579 -> m20_581  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_579 -> m20_582  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_579 -> m20_583  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_579 -> m20_584  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_579 -> m20_585  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_579 -> m20_586  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_579 -> m20_587  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_579 -> m20_588  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_579 -> m20_589  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_579 -> m20_590  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_579 -> m20_591  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_579 -> m20_592  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_579 -> m20_593  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_579 -> m20_594  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_579 -> m20_600  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_579 -> m20_601  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_595 -> m20_598  [color=darkseagreen4, key=1, label=friends, style=dashed];
m20_595 -> m20_600  [color=darkseagreen4, key=1, label=friends, style=dashed];
m20_596 -> m20_598  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_596 -> m20_599  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_599 -> m20_599  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_645 -> m20_650  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_645 -> m20_651  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_646 -> m20_649  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_646 -> m20_650  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_647 -> m20_649  [color=darkseagreen4, key=1, label=idElement, style=dashed];
m20_380 -> m20_382  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_380 -> m20_383  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_464 -> m20_471  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_465 -> m20_468  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m20_465 -> m20_475  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m20_466 -> m20_470  [color=darkseagreen4, key=1, label=nullableDateTimeOffsetWithValue, style=dashed];
m20_466 -> m20_478  [color=darkseagreen4, key=1, label=nullableDateTimeOffsetWithValue, style=dashed];
m20_467 -> m20_469  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_467 -> m20_470  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_467 -> m20_471  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_474 -> m20_476  [color=darkseagreen4, key=1, label=payload, style=dashed];
m20_474 -> m20_477  [color=darkseagreen4, key=1, label=payload, style=dashed];
m20_474 -> m20_478  [color=darkseagreen4, key=1, label=payload, style=dashed];
m20_22 -> m20_24  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_634 -> m20_637  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_634 -> m20_638  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_635 -> m20_637  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_482 -> m20_509  [color=green, key=1, label=doc, style=dashed];
m20_482 -> m20_510  [color=green, key=1, label=doc, style=dashed];
m20_483 -> m20_485  [color=green, key=1, label=root, style=dashed];
m20_483 -> m20_486  [color=green, key=1, label=root, style=dashed];
m20_483 -> m20_487  [color=green, key=1, label=root, style=dashed];
m20_483 -> m20_488  [color=green, key=1, label=root, style=dashed];
m20_483 -> m20_489  [color=green, key=1, label=root, style=dashed];
m20_483 -> m20_490  [color=green, key=1, label=root, style=dashed];
m20_483 -> m20_491  [color=green, key=1, label=root, style=dashed];
m20_483 -> m20_492  [color=green, key=1, label=root, style=dashed];
m20_483 -> m20_493  [color=green, key=1, label=root, style=dashed];
m20_483 -> m20_494  [color=green, key=1, label=root, style=dashed];
m20_483 -> m20_495  [color=green, key=1, label=root, style=dashed];
m20_483 -> m20_501  [color=green, key=1, label=root, style=dashed];
m20_483 -> m20_508  [color=green, key=1, label=root, style=dashed];
m20_483 -> m20_509  [color=green, key=1, label=root, style=dashed];
m20_496 -> m20_499  [color=green, key=1, label=friends, style=dashed];
m20_496 -> m20_501  [color=green, key=1, label=friends, style=dashed];
m20_500 -> m20_500  [color=green, key=1, label=i, style=dashed];
m20_502 -> m20_506  [color=green, key=1, label=foes, style=dashed];
m20_502 -> m20_508  [color=green, key=1, label=foes, style=dashed];
m20_504 -> m20_506  [color=green, key=1, label=i, style=dashed];
m20_504 -> m20_507  [color=green, key=1, label=i, style=dashed];
m20_507 -> m20_507  [color=green, key=1, label=i, style=dashed];
m20_96 -> m20_98  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_621 -> m20_624  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_621 -> m20_625  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_622 -> m20_624  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_227 -> m20_229  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_227 -> m20_230  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_227 -> m20_231  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_227 -> m20_232  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_227 -> m20_233  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_227 -> m20_234  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_227 -> m20_235  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_227 -> m20_236  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_227 -> m20_237  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_227 -> m20_238  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_227 -> m20_239  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_227 -> m20_240  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_227 -> m20_241  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_227 -> m20_242  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_227 -> m20_243  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_227 -> m20_244  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_543 -> m20_570  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_543 -> m20_571  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_544 -> m20_546  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_544 -> m20_547  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_544 -> m20_548  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_544 -> m20_549  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_544 -> m20_550  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_544 -> m20_551  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_544 -> m20_552  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_544 -> m20_553  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_544 -> m20_554  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_544 -> m20_555  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_544 -> m20_556  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_544 -> m20_562  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_544 -> m20_569  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_544 -> m20_570  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_557 -> m20_560  [color=darkseagreen4, key=1, label=friends, style=dashed];
m20_557 -> m20_562  [color=darkseagreen4, key=1, label=friends, style=dashed];
m20_558 -> m20_560  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_558 -> m20_561  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_561 -> m20_561  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_563 -> m20_567  [color=darkseagreen4, key=1, label=foes, style=dashed];
m20_563 -> m20_569  [color=darkseagreen4, key=1, label=foes, style=dashed];
m20_565 -> m20_567  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_565 -> m20_568  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_568 -> m20_568  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_422 -> m20_424  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_422 -> m20_425  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_403 -> m20_405  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_155 -> m20_157  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_155 -> m20_158  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_627 -> m20_630  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_627 -> m20_631  [color=darkseagreen4, key=1, label=doc, style=dashed];
m20_628 -> m20_630  [color=darkseagreen4, key=1, label=root, style=dashed];
m20_285 -> m20_287  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_285 -> m20_288  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_285 -> m20_289  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_285 -> m20_290  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_285 -> m20_291  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_285 -> m20_292  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_285 -> m20_293  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_285 -> m20_294  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_285 -> m20_295  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_285 -> m20_296  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_285 -> m20_297  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_285 -> m20_298  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_285 -> m20_299  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_285 -> m20_300  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_285 -> m20_301  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_285 -> m20_302  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_357 -> m20_359  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_357 -> m20_360  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_357 -> m20_361  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_357 -> m20_362  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_357 -> m20_363  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_357 -> m20_364  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_357 -> m20_365  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_357 -> m20_366  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_357 -> m20_367  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_357 -> m20_368  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_357 -> m20_369  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_357 -> m20_370  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_357 -> m20_371  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_357 -> m20_372  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_357 -> m20_373  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_357 -> m20_374  [color=darkseagreen4, key=1, label=p, style=dashed];
m20_63 -> m20_65  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_63 -> m20_66  [color=darkseagreen4, key=1, label=output, style=dashed];
m20_88 -> m20_90  [color=darkseagreen4, key=1, label=output, style=dashed];
m5_31 -> m5_34  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_34 -> m5_34  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_159 -> m0_39  [color=green, key=1, label=resetEvent, style=dashed];
m0_161 -> m0_68  [color=green, key=1, label=resetEvent, style=dashed];
m1_179 -> m1_20  [color=darkseagreen4, key=1, label=val, style=dashed];
m1_180 -> m1_21  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m1_181 -> m1_38  [color=darkseagreen4, key=1, label=val, style=dashed];
m1_182 -> m1_39  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m1_183 -> m1_71  [color=darkseagreen4, key=1, label=exceptionMessage, style=dashed];
m2_52 -> m2_46  [color=green, key=1, label=string, style=dashed];
m3_32 -> m3_43  [color=green, key=1, label="System.IO.Stream", style=dashed];
m3_46 -> m3_8  [color=green, key=1, label="RestSharp.IntegrationTests.FileTests", style=dashed];
m3_46 -> m3_36  [color=green, key=1, label="RestSharp.IntegrationTests.FileTests", style=dashed];
m3_46 -> m3_12  [color=green, key=1, label="RestSharp.IntegrationTests.FileTests", style=dashed];
m4_38 -> m4_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_663 -> m8_378  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m8_663 -> m8_316  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m8_663 -> m8_352  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m10_77 -> m10_55  [color=green, key=1, label=syncResponse, style=dashed];
m10_122 -> m10_14  [color=green, key=1, label="RestSharp.IntegrationTests.MultipartFormDataTests", style=dashed];
m10_122 -> m10_27  [color=green, key=1, label="RestSharp.IntegrationTests.MultipartFormDataTests", style=dashed];
m10_122 -> m10_34  [color=green, key=1, label="RestSharp.IntegrationTests.MultipartFormDataTests", style=dashed];
m10_122 -> m10_28  [color=green, key=1, label="RestSharp.IntegrationTests.MultipartFormDataTests", style=dashed];
m10_122 -> m10_40  [color=green, key=1, label="RestSharp.IntegrationTests.MultipartFormDataTests", style=dashed];
m10_123 -> m10_78  [color=green, key=1, label=eventWaitHandle, style=dashed];
m11_88 -> m11_54  [color=darkseagreen4, key=1, label=resetEvent, style=dashed];
m12_56 -> m12_2  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest", style=dashed];
m12_58 -> m12_28  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m12_58 -> m12_38  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m12_58 -> m12_32  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m12_58 -> m12_35  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m12_58 -> m12_50  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m12_58 -> m12_42  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m13_30 -> m13_28  [color=green, key=1, label=consumerSecret, style=dashed];
m14_257 -> m14_34  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_36  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_37  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_59  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_86  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_87  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_163  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_65  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_66  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_70  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_71  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_75  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_76  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_77  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_78  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_5  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_6  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_7  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_8  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_9  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_10  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_11  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_12  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_13  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_91  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_105  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_106  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_46  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_47  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_48  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_53  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_54  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_257 -> m14_55  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m14_258 -> m14_216  [color=darkseagreen4, key=1, label=p, style=dashed];
m15_167 -> m15_50  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m15_167 -> m15_51  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m15_167 -> m15_66  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m15_167 -> m15_76  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m15_167 -> m15_123  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m15_167 -> m15_124  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m15_167 -> m15_127  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m15_167 -> m15_128  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m15_167 -> m15_93  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m15_167 -> m15_159  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m15_167 -> m15_153  [color=green, key=1, label="RestSharp.RestRequest", style=dashed];
m15_167 -> m15_81  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m15_167 -> m15_110  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m15_167 -> m15_111  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m15_167 -> m15_143  [color=green, key=1, label="RestSharp.RestRequest", style=dashed];
m15_167 -> m15_165  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m15_167 -> m15_162  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m15_167 -> m15_89  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m15_167 -> m15_44  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m15_167 -> m15_85  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m15_167 -> m15_156  [color=green, key=1, label="RestSharp.RestRequest", style=dashed];
m15_170 -> m15_148  [color=darkseagreen4, key=1, label=portSplit, style=dashed];
m18_178 -> m18_94  [color=darkseagreen4, key=1, label=request, style=dashed];
m18_179 -> m18_94  [color=darkseagreen4, key=1, label=client, style=dashed];
m19_284 -> m19_227  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.XmlDeserializer", style=dashed];
m19_284 -> m19_201  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.XmlDeserializer", style=dashed];
m19_284 -> m19_203  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.XmlDeserializer", style=dashed];
m19_284 -> m19_8  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.XmlDeserializer", style=dashed];
m19_284 -> m19_10  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.XmlDeserializer", style=dashed];
m19_284 -> m19_176  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.XmlDeserializer", style=dashed];
m19_284 -> m19_70  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.XmlDeserializer", style=dashed];
m19_284 -> m19_80  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.XmlDeserializer", style=dashed];
m19_284 -> m19_122  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.XmlDeserializer", style=dashed];
m19_284 -> m19_181  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.XmlDeserializer", style=dashed];
m19_285 -> m19_181  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m19_286 -> m19_215  [color=darkseagreen4, key=1, label=name, style=dashed];
m19_287 -> m19_219  [color=darkseagreen4, key=1, label=lowerName, style=dashed];
m19_288 -> m19_265  [color=darkseagreen4, key=1, label=XName, style=dashed];
m19_288 -> m19_271  [color=darkseagreen4, key=1, label=XName, style=dashed];
m19_289 -> m19_281  [color=darkseagreen4, key=1, label=names, style=dashed];
m20_662 -> m20_1  [color=darkseagreen4, key=1, label="RestSharp.Tests.XmlDeserializerTests", style=dashed];
}
